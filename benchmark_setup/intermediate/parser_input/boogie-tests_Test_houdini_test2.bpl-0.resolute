unsat
(! (let ((.cse23 (ControlFlow 0 2))) (let ((.cse1 (= .cse23 (- 1))) (.cse0 (= (- 1) .cse23))) (let ((.cse28 (= .cse1 .cse0))) (let-proof ((.cse29 (res .cse0 (res .cse1 (=+1 .cse28) (symm (- 1) .cse23)) (res .cse1 (symm .cse23 (- 1)) (=+2 .cse28))))) (res .cse0 (! (res .cse1 (let ((.cse24 (=> b2 (= g@0 g@1)))) (let ((.cse2 (and .cse24 .cse1))) (res .cse2 (let ((.cse3 (and .cse2 b0))) (res .cse3 (let ((.cse15 (= g g@1))) (let ((.cse4 (=> .cse3 .cse15))) (res .cse4 (=>+ 0 .cse4) (let ((.cse25 (=> b1 (= g g@0)))) (let ((.cse5 (=> .cse25 .cse4))) (res .cse5 (=>+ 1 .cse5) (let ((.cse26 (= (ControlFlow 0 3) 2))) (let ((.cse6 (=> .cse26 .cse5))) (res .cse6 (=>+ 1 .cse6) (let ((.cse27 (= (ControlFlow 0 0) 3))) (let ((.cse7 (=> .cse27 .cse6))) (res .cse7 (=>+ 1 .cse7) (let ((.cse19 (- 0 1))) (let ((.cse18 (= .cse23 .cse19))) (let ((.cse17 (and .cse24 .cse18))) (let ((.cse16 (and .cse17 b0))) (let ((.cse14 (=> .cse16 .cse15))) (let ((.cse13 (=> .cse25 .cse14))) (let ((.cse12 (=> .cse26 .cse13))) (let ((.cse8 (=> .cse27 .cse12))) (let ((.cse10 (not .cse8))) (res .cse8 (let ((.cse9 (not .cse7))) (res .cse9 (res .cse10 (not+ .cse10) (let ((.cse11 (= .cse10 .cse9))) (res .cse11 (res (= .cse8 .cse7) (res (= .cse12 .cse6) (res (= .cse13 .cse5) (res (= .cse14 .cse4) (res (= .cse15 .cse15) (refl .cse15) (res (= .cse16 .cse3) (res (= b0 b0) (refl b0) (res (= .cse17 .cse2) (res (= .cse18 .cse1) (res (= .cse19 (- 1)) (let ((.cse20 (* (- 1) 1))) (res (= .cse20 (- 1)) (poly* .cse20 (- 1)) (res (= 0 0) (refl 0) (let ((.cse21 (+ 0 .cse20)) (.cse22 (+ 0 (- 1)))) (res (= .cse21 .cse22) (cong (+ 0 .cse20) (+ 0 (- 1))) (res (= .cse19 .cse21) (-def 0 1) (res (= .cse22 (- 1)) (poly+ .cse22 (- 1)) (trans .cse19 .cse21 .cse22 (- 1))))))))) (res (= .cse23 .cse23) (refl .cse23) (cong (= .cse23 .cse19) (= .cse23 (- 1))))) (res (= .cse24 .cse24) (refl .cse24) (cong (and .cse24 .cse18) (and .cse24 .cse1)))) (cong (and .cse17 b0) (and .cse2 b0)))) (cong (=> .cse16 .cse15) (=> .cse3 .cse15)))) (res (= .cse25 .cse25) (refl .cse25) (cong (=> .cse25 .cse14) (=> .cse25 .cse4)))) (res (= .cse26 .cse26) (refl .cse26) (cong (=> .cse26 .cse13) (=> .cse26 .cse5)))) (res (= .cse27 .cse27) (refl .cse27) (cong (=> .cse27 .cse12) (=> .cse27 .cse6)))) (cong (not .cse8) (not .cse7))) (=-2 .cse11)))) (not- .cse9))) (res .cse10 (assume .cse10) (not- .cse10)))))))))))))))))))))))) (and- 0 .cse3))) (and- 1 .cse2)))) (res .cse28 .cse29 (=-2 .cse28))) :proves (+ .cse0) :input) (! (let ((.cse31 (not .cse1))) (res .cse1 (let ((.cse30 (not .cse0))) (res .cse30 (res .cse31 (not+ .cse31) (let ((.cse32 (= .cse31 .cse30))) (res .cse32 (res .cse28 .cse29 (cong (not .cse1) (not .cse0))) (=-2 .cse32)))) (not- .cse30))) (res .cse31 (assume .cse31) (not- .cse31)))) :proves (- .cse0) :input)))))) :proves () :rup)

