success
success
success
unsupported
unsupported
unsupported
unsupported
unsupported
sat
(error "intermediate/mod_smt2/boogie-tests_Test_snapshots_Snapshots11.v1.bpl.mod.smt2:28:10: Logical context not inconsistent!")
unsat
(! (let ((.cse26 (ControlFlow 0 2)) (.cse67 (* (- 1) call1formal@r@0))) (let ((.cse4 (<= .cse67 0)) (.cse42 (= .cse26 (- 1)))) (let ((.cse0 (and .cse4 .cse42))) (let ((.cse13 (< 0 .cse67)) (.cse1 (=> .cse0 .cse4))) (let-proof ((.cse14 (total .cse67 0))) (let-proof ((.cse2 (! (let ((.cse63 (<= n 0))) (let ((.cse56 (not .cse63))) (let ((.cse17 (=> .cse56 .cse1))) (res .cse17 (! (=>+ 1 .cse17) :proves (+ .cse17 - .cse1) :input) (! (let ((.cse20 (= .cse26 (- 3)))) (let ((.cse18 (=> .cse20 .cse56))) (res .cse18 (! (let ((.cse19 (= (- 3) .cse26))) (let ((.cse21 (= .cse20 .cse19))) (let-proof ((.cse22 (res .cse19 (res .cse20 (=+1 .cse21) (symm (- 3) .cse26)) (res .cse20 (symm .cse26 (- 3)) (=+2 .cse21))))) (res .cse19 (! (res .cse20 (=>+ 0 .cse18) (res .cse21 .cse22 (=-2 .cse21))) :proves (+ .cse18 + .cse19) :input) (! (let ((.cse24 (not .cse20))) (res .cse20 (let ((.cse23 (not .cse19))) (res .cse23 (res .cse24 (not+ .cse24) (let ((.cse25 (= .cse24 .cse23))) (res .cse25 (res .cse21 .cse22 (cong (not .cse20) (not .cse19))) (=-2 .cse25)))) (not- .cse23))) (res .cse24 (assume .cse24) (not- .cse24)))) :proves (- .cse19) :input))))) :proves (+ .cse18) :rup) (! (let ((.cse27 (and .cse18 .cse17))) (res .cse27 (and+ .cse27) (let ((.cse65 (= (ControlFlow 0 4) 2))) (let ((.cse28 (=> .cse65 .cse27))) (res .cse28 (=>+ 1 .cse28) (let ((.cse66 (= (ControlFlow 0 0) 4))) (let ((.cse29 (=> .cse66 .cse28))) (res .cse29 (=>+ 1 .cse29) (let ((.cse43 (- 0 1))) (let ((.cse51 (<= 0 call1formal@r@0)) (.cse41 (= .cse26 .cse43))) (let ((.cse59 (- 0 3)) (.cse40 (and .cse51 .cse41))) (let ((.cse37 (=> .cse40 .cse51)) (.cse58 (= .cse26 .cse59)) (.cse55 (< 0 n))) (let ((.cse57 (=> .cse58 .cse55)) (.cse36 (=> .cse55 .cse37))) (let ((.cse35 (and .cse57 .cse36))) (let ((.cse34 (=> .cse65 .cse35))) (let ((.cse30 (=> .cse66 .cse34))) (let ((.cse32 (not .cse30))) (res .cse30 (let ((.cse31 (not .cse29))) (res .cse31 (res .cse32 (not+ .cse32) (let ((.cse33 (= .cse32 .cse31))) (res .cse33 (res (= .cse30 .cse29) (res (= .cse34 .cse28) (res (= .cse35 .cse27) (let ((.cse53 (= .cse55 .cse56))) (let ((.cse45 (= 0 0)) (.cse49 (= .cse26 .cse26))) (let-proof ((.cse54 (res .cse56 (res .cse55 (=+1 .cse53) (res .cse63 (not+ .cse56) (farkas 1 .cse55 1 .cse63))) (res .cse55 (let-proof ((.cse64 (total n 0))) (res .cse63 .cse64 (res .cse63 (res .cse55 .cse64 (farkas 1 .cse63 1 .cse55)) (not- .cse56)))) (=+2 .cse53)))) (.cse46 (refl 0)) (.cse50 (refl .cse26))) (res (= .cse36 .cse17) (res (= .cse37 .cse1) (let ((.cse38 (= .cse51 .cse4))) (let-proof ((.cse39 (res .cse4 (res .cse51 (=+1 .cse38) (res .cse13 .cse14 (farkas 1 .cse51 1 .cse13))) (res .cse51 (let ((.cse52 (< call1formal@r@0 0))) (res .cse52 (total 0 call1formal@r@0) (farkas 1 .cse52 1 .cse4))) (=+2 .cse38))))) (res .cse38 .cse39 (res (= .cse40 .cse0) (res (= .cse41 .cse42) (res (= .cse43 (- 1)) (let ((.cse44 (* (- 1) 1))) (res (= .cse44 (- 1)) (poly* .cse44 (- 1)) (res .cse45 .cse46 (let ((.cse47 (+ 0 .cse44)) (.cse48 (+ 0 (- 1)))) (res (= .cse47 .cse48) (cong (+ 0 .cse44) (+ 0 (- 1))) (res (= .cse43 .cse47) (-def 0 1) (res (= .cse48 (- 1)) (poly+ .cse48 (- 1)) (trans .cse43 .cse47 .cse48 (- 1))))))))) (res .cse49 .cse50 (cong (= .cse26 .cse43) (= .cse26 (- 1))))) (res .cse38 .cse39 (cong (and .cse51 .cse41) (and .cse4 .cse42)))) (cong (=> .cse40 .cse51) (=> .cse0 .cse4)))))) (res .cse53 .cse54 (cong (=> .cse55 .cse37) (=> .cse56 .cse1)))) (res (= .cse57 .cse18) (res .cse53 .cse54 (res (= .cse58 .cse20) (res (= .cse59 (- 3)) (let ((.cse60 (* (- 1) 3))) (res (= .cse60 (- 3)) (poly* .cse60 (- 3)) (res .cse45 .cse46 (let ((.cse61 (+ 0 .cse60)) (.cse62 (+ 0 (- 3)))) (res (= .cse61 .cse62) (cong (+ 0 .cse60) (+ 0 (- 3))) (res (= .cse59 .cse61) (-def 0 3) (res (= .cse62 (- 3)) (poly+ .cse62 (- 3)) (trans .cse59 .cse61 .cse62 (- 3))))))))) (res .cse49 .cse50 (cong (= .cse26 .cse59) (= .cse26 (- 3))))) (cong (=> .cse58 .cse55) (=> .cse20 .cse56)))) (cong (and .cse57 .cse36) (and .cse18 .cse17))))))) (res (= .cse65 .cse65) (refl .cse65) (cong (=> .cse65 .cse35) (=> .cse65 .cse27)))) (res (= .cse66 .cse66) (refl .cse66) (cong (=> .cse66 .cse34) (=> .cse66 .cse28)))) (cong (not .cse30) (not .cse29))) (=-2 .cse33)))) (not- .cse31))) (res .cse32 (assume .cse32) (not- .cse32)))))))))))))))))))) :proves (- .cse18 - .cse17) :input)))) :proves (- .cse17) :rup))))) :proves (- .cse1) :rup))) (res .cse0 (! (res .cse1 (! (=>+ 0 .cse1) :proves (+ .cse1 + .cse0) :input) .cse2) :proves (+ .cse0) :rup) (let ((.cse16 (+ call1formal@r@0 1))) (let ((.cse3 (<= .cse16 0))) (let ((.cse5 (not .cse3))) (let ((.cse10 (= .cse4 .cse5))) (let-proof ((.cse6 (not+ .cse5)) (.cse12 (not- .cse5))) (let-proof ((.cse11 (res .cse5 (res .cse4 (=+1 .cse10) (res .cse3 .cse6 (farkas 1 .cse4 1 .cse3))) (res .cse4 (res .cse13 .cse14 (res .cse3 (let ((.cse15 (<= 1 .cse16))) (res .cse15 (total-int .cse16 0) (farkas 1 .cse13 1 .cse15))) .cse12)) (=+2 .cse10))))) (res .cse3 (! (res .cse1 (! (res .cse4 (res .cse5 .cse6 (let ((.cse7 (not .cse5))) (res .cse7 (let ((.cse8 (not .cse4))) (res .cse8 (not+ .cse8) (let ((.cse9 (= .cse8 .cse7))) (res .cse9 (res .cse10 .cse11 (cong (not .cse4) (not .cse5))) (=-2 .cse9))))) (not- .cse7)))) (=>+ 1 .cse1)) :proves (+ .cse1 + .cse3) :input) .cse2) :proves (+ .cse3) :rup) (! (res .cse4 (and- 0 .cse0) (res .cse5 (res .cse10 .cse11 (=-2 .cse10)) .cse12)) :proves (- .cse0 - .cse3) :input))))))))))))))) :proves () :rup)
unsupported
