success
success
success
unsupported
unsupported
unsupported
unsupported
unsupported
sat
(error "intermediate/mod_smt2/boogie-tests_Test_houdini_houd11.bpl.mod.smt2:26:10: Logical context not inconsistent!")
unsat
(! (let ((.cse31 (ControlFlow 0 2))) (let ((.cse2 (= .cse31 (- 3))) (.cse0 (= (- 3) .cse31))) (let ((.cse3 (= .cse2 .cse0))) (let-proof ((.cse4 (res .cse0 (res .cse2 (=+1 .cse3) (symm (- 3) .cse31)) (res .cse2 (symm .cse31 (- 3)) (=+2 .cse3))))) (res .cse0 (! (let ((.cse1 (=> .cse2 false))) (res .cse1 (! (res .cse2 (=>+ 0 .cse1) (res .cse3 .cse4 (=-2 .cse3))) :proves (+ .cse1 + .cse0) :input) (! (let ((.cse22 (= .cse31 (- 1)))) (let ((.cse18 (=> .cse22 false))) (let ((.cse5 (=> false .cse18))) (let-proof ((.cse6 false-)) (res .cse5 (! (res false (=>+ 0 .cse5) .cse6) :proves (+ .cse5) :input) (! (let ((.cse7 (and .cse1 .cse5))) (res .cse7 (and+ .cse7) (let ((.cse41 (= (ControlFlow 0 4) 2))) (let ((.cse8 (=> .cse41 .cse7))) (res .cse8 (=>+ 1 .cse8) (let ((.cse42 (= (ControlFlow 0 0) 4))) (let ((.cse9 (=> .cse42 .cse8))) (res .cse9 (=>+ 1 .cse9) (let ((.cse23 (- 0 1))) (let ((.cse37 (- 0 3)) (.cse21 (= .cse31 .cse23)) (.cse20 (= 5 3))) (let ((.cse17 (=> .cse21 .cse20)) (.cse36 (= .cse31 .cse37)) (.cse34 (= 5 4))) (let ((.cse35 (=> .cse36 .cse34)) (.cse16 (=> .cse34 .cse17))) (let ((.cse15 (and .cse35 .cse16))) (let ((.cse14 (=> .cse41 .cse15))) (let ((.cse10 (=> .cse42 .cse14))) (let ((.cse12 (not .cse10))) (res .cse10 (let ((.cse11 (not .cse9))) (res .cse11 (res .cse12 (not+ .cse12) (let ((.cse13 (= .cse12 .cse11))) (res .cse13 (res (= .cse10 .cse9) (res (= .cse14 .cse8) (res (= .cse15 .cse7) (let ((.cse32 (= .cse34 false))) (let ((.cse25 (= 0 0)) (.cse29 (= .cse31 .cse31))) (let-proof ((.cse33 (res false (res .cse34 (=+1 .cse32) (farkas 1 .cse34)) .cse6)) (.cse26 (refl 0)) (.cse30 (refl .cse31))) (res (= .cse16 .cse5) (res (= .cse17 .cse18) (let ((.cse19 (= .cse20 false))) (res .cse19 (res false (res .cse20 (=+1 .cse19) (farkas 1 .cse20)) .cse6) (res (= .cse21 .cse22) (res (= .cse23 (- 1)) (let ((.cse24 (* (- 1) 1))) (res (= .cse24 (- 1)) (poly* .cse24 (- 1)) (res .cse25 .cse26 (let ((.cse27 (+ 0 .cse24)) (.cse28 (+ 0 (- 1)))) (res (= .cse27 .cse28) (cong (+ 0 .cse24) (+ 0 (- 1))) (res (= .cse23 .cse27) (-def 0 1) (res (= .cse28 (- 1)) (poly+ .cse28 (- 1)) (trans .cse23 .cse27 .cse28 (- 1))))))))) (res .cse29 .cse30 (cong (= .cse31 .cse23) (= .cse31 (- 1))))) (cong (=> .cse21 .cse20) (=> .cse22 false))))) (res .cse32 .cse33 (cong (=> .cse34 .cse17) (=> false .cse18)))) (res (= .cse35 .cse1) (res .cse32 .cse33 (res (= .cse36 .cse2) (res (= .cse37 (- 3)) (let ((.cse38 (* (- 1) 3))) (res (= .cse38 (- 3)) (poly* .cse38 (- 3)) (res .cse25 .cse26 (let ((.cse39 (+ 0 .cse38)) (.cse40 (+ 0 (- 3)))) (res (= .cse39 .cse40) (cong (+ 0 .cse38) (+ 0 (- 3))) (res (= .cse37 .cse39) (-def 0 3) (res (= .cse40 (- 3)) (poly+ .cse40 (- 3)) (trans .cse37 .cse39 .cse40 (- 3))))))))) (res .cse29 .cse30 (cong (= .cse31 .cse37) (= .cse31 (- 3))))) (cong (=> .cse36 .cse34) (=> .cse2 false)))) (cong (and .cse35 .cse16) (and .cse1 .cse5))))))) (res (= .cse41 .cse41) (refl .cse41) (cong (=> .cse41 .cse15) (=> .cse41 .cse7)))) (res (= .cse42 .cse42) (refl .cse42) (cong (=> .cse42 .cse14) (=> .cse42 .cse8)))) (cong (not .cse10) (not .cse9))) (=-2 .cse13)))) (not- .cse11))) (res .cse12 (assume .cse12) (not- .cse12))))))))))))))))))) :proves (- .cse1 - .cse5) :input)))))) :proves (- .cse1) :rup))) :proves (+ .cse0) :rup) (! (let ((.cse44 (not .cse2))) (res .cse2 (let ((.cse43 (not .cse0))) (res .cse43 (res .cse44 (not+ .cse44) (let ((.cse45 (= .cse44 .cse43))) (res .cse45 (res .cse3 .cse4 (cong (not .cse2) (not .cse0))) (=-2 .cse45)))) (not- .cse43))) (res .cse44 (assume .cse44) (not- .cse44)))) :proves (- .cse0) :input)))))) :proves () :rup)
unsupported
