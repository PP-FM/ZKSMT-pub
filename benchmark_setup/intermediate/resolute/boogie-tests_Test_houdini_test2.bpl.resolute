success
success
success
unsupported
unsupported
unsupported
unsupported
unsupported
sat
(error "intermediate/mod_smt2/boogie-tests_Test_houdini_test2.bpl.mod.smt2:32:10: Logical context not inconsistent!")
unsat
(! (let ((.cse23 (ControlFlow 0 2))) (let ((.cse1 (= .cse23 (- 1))) (.cse0 (= (- 1) .cse23))) (let ((.cse28 (= .cse1 .cse0))) (let-proof ((.cse29 (res .cse0 (res .cse1 (=+1 .cse28) (symm (- 1) .cse23)) (res .cse1 (symm .cse23 (- 1)) (=+2 .cse28))))) (res .cse0 (! (res .cse1 (let ((.cse24 (=> b2 (= g@0 g@1)))) (let ((.cse2 (and .cse24 .cse1))) (res .cse2 (let ((.cse3 (and .cse2 b0))) (res .cse3 (let ((.cse15 (= g g@1))) (let ((.cse4 (=> .cse3 .cse15))) (res .cse4 (=>+ 0 .cse4) (let ((.cse25 (=> b1 (= g g@0)))) (let ((.cse5 (=> .cse25 .cse4))) (res .cse5 (=>+ 1 .cse5) (let ((.cse26 (= (ControlFlow 0 3) 2))) (let ((.cse6 (=> .cse26 .cse5))) (res .cse6 (=>+ 1 .cse6) (let ((.cse27 (= (ControlFlow 0 0) 3))) (let ((.cse7 (=> .cse27 .cse6))) (res .cse7 (=>+ 1 .cse7) (let ((.cse19 (- 0 1))) (let ((.cse18 (= .cse23 .cse19))) (let ((.cse17 (and .cse24 .cse18))) (let ((.cse16 (and .cse17 b0))) (let ((.cse14 (=> .cse16 .cse15))) (let ((.cse13 (=> .cse25 .cse14))) (let ((.cse12 (=> .cse26 .cse13))) (let ((.cse8 (=> .cse27 .cse12))) (let ((.cse10 (not .cse8))) (res .cse8 (let ((.cse9 (not .cse7))) (res .cse9 (res .cse10 (not+ .cse10) (let ((.cse11 (= .cse10 .cse9))) (res .cse11 (res (= .cse8 .cse7) (res (= .cse12 .cse6) (res (= .cse13 .cse5) (res (= .cse14 .cse4) (res (= .cse15 .cse15) (refl .cse15) (res (= .cse16 .cse3) (res (= b0 b0) (refl b0) (res (= .cse17 .cse2) (res (= .cse18 .cse1) (res (= .cse19 (- 1)) (let ((.cse20 (* (- 1) 1))) (res (= .cse20 (- 1)) (poly* .cse20 (- 1)) (res (= 0 0) (refl 0) (let ((.cse21 (+ 0 .cse20)) (.cse22 (+ 0 (- 1)))) (res (= .cse21 .cse22) (cong (+ 0 .cse20) (+ 0 (- 1))) (res (= .cse19 .cse21) (-def 0 1) (res (= .cse22 (- 1)) (poly+ .cse22 (- 1)) (trans .cse19 .cse21 .cse22 (- 1))))))))) (res (= .cse23 .cse23) (refl .cse23) (cong (= .cse23 .cse19) (= .cse23 (- 1))))) (res (= .cse24 .cse24) (refl .cse24) (cong (and .cse24 .cse18) (and .cse24 .cse1)))) (cong (and .cse17 b0) (and .cse2 b0)))) (cong (=> .cse16 .cse15) (=> .cse3 .cse15)))) (res (= .cse25 .cse25) (refl .cse25) (cong (=> .cse25 .cse14) (=> .cse25 .cse4)))) (res (= .cse26 .cse26) (refl .cse26) (cong (=> .cse26 .cse13) (=> .cse26 .cse5)))) (res (= .cse27 .cse27) (refl .cse27) (cong (=> .cse27 .cse12) (=> .cse27 .cse6)))) (cong (not .cse8) (not .cse7))) (=-2 .cse11)))) (not- .cse9))) (res .cse10 (assume .cse10) (not- .cse10)))))))))))))))))))))))) (and- 0 .cse3))) (and- 1 .cse2)))) (res .cse28 .cse29 (=-2 .cse28))) :proves (+ .cse0) :input) (! (let ((.cse31 (not .cse1))) (res .cse1 (let ((.cse30 (not .cse0))) (res .cse30 (res .cse31 (not+ .cse31) (let ((.cse32 (= .cse31 .cse30))) (res .cse32 (res .cse28 .cse29 (cong (not .cse1) (not .cse0))) (=-2 .cse32)))) (not- .cse30))) (res .cse31 (assume .cse31) (not- .cse31)))) :proves (- .cse0) :input)))))) :proves () :rup)
unsupported
success
success
success
success
unsupported
unsupported
unsupported
unsupported
unsupported
sat
(error "intermediate/mod_smt2/boogie-tests_Test_houdini_test2.bpl.mod.smt2:69:10: Logical context not inconsistent!")
unsat
(! (let ((.cse17 (ControlFlow 0 2))) (let ((.cse1 (= .cse17 (- 1))) (.cse0 (= (- 1) .cse17))) (let ((.cse20 (= .cse1 .cse0))) (let-proof ((.cse21 (res .cse0 (res .cse1 (=+1 .cse20) (symm (- 1) .cse17)) (res .cse1 (symm .cse17 (- 1)) (=+2 .cse20))))) (res .cse0 (! (res .cse1 (let ((.cse11 (=> b1 (= g 1)))) (let ((.cse2 (=> .cse1 .cse11))) (res .cse2 (=>+ 0 .cse2) (let ((.cse18 (= (ControlFlow 0 3) 2))) (let ((.cse3 (=> .cse18 .cse2))) (res .cse3 (=>+ 1 .cse3) (let ((.cse19 (= (ControlFlow 0 0) 3))) (let ((.cse4 (=> .cse19 .cse3))) (res .cse4 (=>+ 1 .cse4) (let ((.cse13 (- 0 1))) (let ((.cse12 (= .cse17 .cse13))) (let ((.cse10 (=> .cse12 .cse11))) (let ((.cse9 (=> .cse18 .cse10))) (let ((.cse5 (=> .cse19 .cse9))) (let ((.cse7 (not .cse5))) (res .cse5 (let ((.cse6 (not .cse4))) (res .cse6 (res .cse7 (not+ .cse7) (let ((.cse8 (= .cse7 .cse6))) (res .cse8 (res (= .cse5 .cse4) (res (= .cse9 .cse3) (res (= .cse10 .cse2) (res (= .cse11 .cse11) (refl .cse11) (res (= .cse12 .cse1) (res (= .cse13 (- 1)) (let ((.cse14 (* (- 1) 1))) (res (= .cse14 (- 1)) (poly* .cse14 (- 1)) (res (= 0 0) (refl 0) (let ((.cse15 (+ 0 .cse14)) (.cse16 (+ 0 (- 1)))) (res (= .cse15 .cse16) (cong (+ 0 .cse14) (+ 0 (- 1))) (res (= .cse13 .cse15) (-def 0 1) (res (= .cse16 (- 1)) (poly+ .cse16 (- 1)) (trans .cse13 .cse15 .cse16 (- 1))))))))) (res (= .cse17 .cse17) (refl .cse17) (cong (= .cse17 .cse13) (= .cse17 (- 1))))) (cong (=> .cse12 .cse11) (=> .cse1 .cse11)))) (res (= .cse18 .cse18) (refl .cse18) (cong (=> .cse18 .cse10) (=> .cse18 .cse2)))) (res (= .cse19 .cse19) (refl .cse19) (cong (=> .cse19 .cse9) (=> .cse19 .cse3)))) (cong (not .cse5) (not .cse4))) (=-2 .cse8)))) (not- .cse6))) (res .cse7 (assume .cse7) (not- .cse7)))))))))))))))))) (res .cse20 .cse21 (=-2 .cse20))) :proves (+ .cse0) :input) (! (let ((.cse23 (not .cse1))) (res .cse1 (let ((.cse22 (not .cse0))) (res .cse22 (res .cse23 (not+ .cse23) (let ((.cse24 (= .cse23 .cse22))) (res .cse24 (res .cse20 .cse21 (cong (not .cse1) (not .cse0))) (=-2 .cse24)))) (not- .cse22))) (res .cse23 (assume .cse23) (not- .cse23)))) :proves (- .cse0) :input)))))) :proves () :rup)
unsupported
success
success
success
success
unsupported
unsupported
unsupported
unsupported
unsupported
sat
(error "intermediate/mod_smt2/boogie-tests_Test_houdini_test2.bpl.mod.smt2:107:10: Logical context not inconsistent!")
unsat
(! (let ((.cse17 (ControlFlow 0 2))) (let ((.cse1 (= .cse17 (- 1))) (.cse0 (= (- 1) .cse17))) (let ((.cse20 (= .cse1 .cse0))) (let-proof ((.cse21 (res .cse0 (res .cse1 (=+1 .cse20) (symm (- 1) .cse17)) (res .cse1 (symm .cse17 (- 1)) (=+2 .cse20))))) (res .cse0 (! (res .cse1 (let ((.cse11 (=> b2 (= g h)))) (let ((.cse2 (=> .cse1 .cse11))) (res .cse2 (=>+ 0 .cse2) (let ((.cse18 (= (ControlFlow 0 3) 2))) (let ((.cse3 (=> .cse18 .cse2))) (res .cse3 (=>+ 1 .cse3) (let ((.cse19 (= (ControlFlow 0 0) 3))) (let ((.cse4 (=> .cse19 .cse3))) (res .cse4 (=>+ 1 .cse4) (let ((.cse13 (- 0 1))) (let ((.cse12 (= .cse17 .cse13))) (let ((.cse10 (=> .cse12 .cse11))) (let ((.cse9 (=> .cse18 .cse10))) (let ((.cse5 (=> .cse19 .cse9))) (let ((.cse7 (not .cse5))) (res .cse5 (let ((.cse6 (not .cse4))) (res .cse6 (res .cse7 (not+ .cse7) (let ((.cse8 (= .cse7 .cse6))) (res .cse8 (res (= .cse5 .cse4) (res (= .cse9 .cse3) (res (= .cse10 .cse2) (res (= .cse11 .cse11) (refl .cse11) (res (= .cse12 .cse1) (res (= .cse13 (- 1)) (let ((.cse14 (* (- 1) 1))) (res (= .cse14 (- 1)) (poly* .cse14 (- 1)) (res (= 0 0) (refl 0) (let ((.cse15 (+ 0 .cse14)) (.cse16 (+ 0 (- 1)))) (res (= .cse15 .cse16) (cong (+ 0 .cse14) (+ 0 (- 1))) (res (= .cse13 .cse15) (-def 0 1) (res (= .cse16 (- 1)) (poly+ .cse16 (- 1)) (trans .cse13 .cse15 .cse16 (- 1))))))))) (res (= .cse17 .cse17) (refl .cse17) (cong (= .cse17 .cse13) (= .cse17 (- 1))))) (cong (=> .cse12 .cse11) (=> .cse1 .cse11)))) (res (= .cse18 .cse18) (refl .cse18) (cong (=> .cse18 .cse10) (=> .cse18 .cse2)))) (res (= .cse19 .cse19) (refl .cse19) (cong (=> .cse19 .cse9) (=> .cse19 .cse3)))) (cong (not .cse5) (not .cse4))) (=-2 .cse8)))) (not- .cse6))) (res .cse7 (assume .cse7) (not- .cse7)))))))))))))))))) (res .cse20 .cse21 (=-2 .cse20))) :proves (+ .cse0) :input) (! (let ((.cse23 (not .cse1))) (res .cse1 (let ((.cse22 (not .cse0))) (res .cse22 (res .cse23 (not+ .cse23) (let ((.cse24 (= .cse23 .cse22))) (res .cse24 (res .cse20 .cse21 (cong (not .cse1) (not .cse0))) (=-2 .cse24)))) (not- .cse22))) (res .cse23 (assume .cse23) (not- .cse23)))) :proves (- .cse0) :input)))))) :proves () :rup)
unsupported
success
success
success
success
unsupported
unsupported
unsupported
unsupported
unsupported
sat
(error "intermediate/mod_smt2/boogie-tests_Test_houdini_test2.bpl.mod.smt2:144:10: Logical context not inconsistent!")
unsat
(! (let ((.cse19 (ControlFlow 0 2))) (let ((.cse1 (= .cse19 (- 1))) (.cse0 (= (- 1) .cse19))) (let ((.cse23 (= .cse1 .cse0))) (let-proof ((.cse24 (res .cse0 (res .cse1 (=+1 .cse23) (symm (- 1) .cse19)) (res .cse1 (symm .cse19 (- 1)) (=+2 .cse23))))) (res .cse0 (! (res .cse1 (let ((.cse20 (=> b0 (= 0 g@0)))) (let ((.cse2 (and .cse20 .cse1))) (res .cse2 (let ((.cse12 (= g@0 0))) (let ((.cse3 (=> .cse2 .cse12))) (res .cse3 (=>+ 0 .cse3) (let ((.cse21 (= (ControlFlow 0 3) 2))) (let ((.cse4 (=> .cse21 .cse3))) (res .cse4 (=>+ 1 .cse4) (let ((.cse22 (= (ControlFlow 0 0) 3))) (let ((.cse5 (=> .cse22 .cse4))) (res .cse5 (=>+ 1 .cse5) (let ((.cse15 (- 0 1))) (let ((.cse14 (= .cse19 .cse15))) (let ((.cse13 (and .cse20 .cse14))) (let ((.cse11 (=> .cse13 .cse12))) (let ((.cse10 (=> .cse21 .cse11))) (let ((.cse6 (=> .cse22 .cse10))) (let ((.cse8 (not .cse6))) (res .cse6 (let ((.cse7 (not .cse5))) (res .cse7 (res .cse8 (not+ .cse8) (let ((.cse9 (= .cse8 .cse7))) (res .cse9 (res (= .cse6 .cse5) (res (= .cse10 .cse4) (res (= .cse11 .cse3) (res (= .cse12 .cse12) (refl .cse12) (res (= .cse13 .cse2) (res (= .cse14 .cse1) (res (= .cse15 (- 1)) (let ((.cse16 (* (- 1) 1))) (res (= .cse16 (- 1)) (poly* .cse16 (- 1)) (res (= 0 0) (refl 0) (let ((.cse17 (+ 0 .cse16)) (.cse18 (+ 0 (- 1)))) (res (= .cse17 .cse18) (cong (+ 0 .cse16) (+ 0 (- 1))) (res (= .cse15 .cse17) (-def 0 1) (res (= .cse18 (- 1)) (poly+ .cse18 (- 1)) (trans .cse15 .cse17 .cse18 (- 1))))))))) (res (= .cse19 .cse19) (refl .cse19) (cong (= .cse19 .cse15) (= .cse19 (- 1))))) (res (= .cse20 .cse20) (refl .cse20) (cong (and .cse20 .cse14) (and .cse20 .cse1)))) (cong (=> .cse13 .cse12) (=> .cse2 .cse12)))) (res (= .cse21 .cse21) (refl .cse21) (cong (=> .cse21 .cse11) (=> .cse21 .cse3)))) (res (= .cse22 .cse22) (refl .cse22) (cong (=> .cse22 .cse10) (=> .cse22 .cse4)))) (cong (not .cse6) (not .cse5))) (=-2 .cse9)))) (not- .cse7))) (res .cse8 (assume .cse8) (not- .cse8))))))))))))))))))) (and- 1 .cse2)))) (res .cse23 .cse24 (=-2 .cse23))) :proves (+ .cse0) :input) (! (let ((.cse26 (not .cse1))) (res .cse1 (let ((.cse25 (not .cse0))) (res .cse25 (res .cse26 (not+ .cse26) (let ((.cse27 (= .cse26 .cse25))) (res .cse27 (res .cse23 .cse24 (cong (not .cse1) (not .cse0))) (=-2 .cse27)))) (not- .cse25))) (res .cse26 (assume .cse26) (not- .cse26)))) :proves (- .cse0) :input)))))) :proves () :rup)
unsupported
