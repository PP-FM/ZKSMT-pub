(set-logic QF_UFLIA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-sort |T@[Int](_ FloatingPoint 8 24)| 0)
(declare-fun |Select__T@[Int](_ FloatingPoint 8 24)_| (|T@[Int](_ FloatingPoint 8 24)| Int) (_ FloatingPoint 8 24))
(declare-fun a () |T@[Int](_ FloatingPoint 8 24)|)
(set-info :boogie-vc-id Exp2)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let ((anon0_correct  (=> (= (ControlFlow 0 2) (- 0 1)) (fp.gt (|Select__T@[Int](_ FloatingPoint 8 24)_| a 0) (fp (_ bv0 1) (_ bv0 8) (_ bv0 23))))))
(let ((PreconditionGeneratedEntry_correct  (=> (= (ControlFlow 0 3) 2) anon0_correct)))
PreconditionGeneratedEntry_correct)))
))
(check-sat)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
