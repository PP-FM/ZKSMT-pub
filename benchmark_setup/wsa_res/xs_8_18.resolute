unsat
(! (let ((.cse1419 (* (- 1) distance)) (.cse238 (format 2)) (.cse281 (format 1)) (.cse1628 (format 0))) (let ((.cse239 (format 3)) (.cse418 (= .cse1628 percent)) (.cse107 (= .cse281 s)) (.cse4 (= .cse281 percent)) (.cse47 (= .cse238 s)) (.cse224 (s_count 0)) (.cse1593 (+ fmt0 1)) (.cse1427 (+ fmt0 .cse1419)) (.cse1634 (* (- 1) arg1))) (let ((.cse105 (= .cse281 x)) (.cse320 (= .cse238 x)) (.cse303 (x_count 0)) (.cse978 (* (- 1) fmt0)) (.cse1619 (+ fmt0 .cse1634)) (.cse24 (= fmt0 0)) (.cse1422 (= arg0 .cse1427)) (.cse1620 (+ fmt0 fmt_length (* (- 1) fmt1) (- 1))) (.cse1633 (+ fmt0 2)) (.cse1533 (= fmt1 fmt0)) (.cse1531 (= fmt1 .cse1593)) (.cse282 (format 4)) (.cse696 (+ .cse224 1)) (.cse10 (and .cse4 .cse47)) (.cse422 (and .cse418 .cse107)) (.cse43 (= .cse238 percent)) (.cse45 (= .cse239 s)) (.cse225 (s_count 1))) (let ((.cse356 (format 5)) (.cse1116 (+ .cse225 1)) (.cse41 (and .cse43 .cse45)) (.cse1269 (not .cse422)) (.cse18 (= .cse224 0)) (.cse573 (= .cse224 1)) (.cse1216 (not .cse10)) (.cse9 (= .cse225 .cse224)) (.cse690 (= .cse225 .cse696)) (.cse48 (= .cse239 percent)) (.cse248 (= .cse282 s)) (.cse192 (s_count 2)) (.cse1632 (+ fmt0 3)) (.cse1530 (or .cse1533 .cse1531)) (.cse1528 (= fmt1 .cse1633)) (.cse1456 (= distance 18)) (.cse1433 (= fmt_length 8)) (.cse1325 (<= .cse1620 0)) (.cse1423 (and .cse24 .cse1422)) (.cse1385 (<= .cse1619 0)) (.cse1366 (+ fmt1 .cse978 (- 1))) (.cse863 (+ .cse303 1)) (.cse2 (and .cse4 .cse320)) (.cse419 (and .cse418 .cse105)) (.cse294 (= .cse239 x)) (.cse229 (x_count 1))) (let ((.cse879 (+ .cse229 1)) (.cse110 (and .cse43 .cse294)) (.cse437 (not .cse419)) (.cse433 (= .cse303 0)) (.cse1259 (= .cse303 1)) (.cse1235 (not .cse2)) (.cse1 (= .cse229 .cse303)) (.cse857 (= .cse229 .cse863)) (.cse275 (= .cse282 x)) (.cse228 (x_count 2)) (.cse30 (<= .cse1366 0)) (.cse1386 (and .cse1423 .cse1385)) (.cse1329 (not .cse1325)) (.cse365 (+ fmt1 .cse978 (- 2))) (.cse1434 (and .cse1456 .cse1433)) (.cse1631 (+ fmt0 4)) (.cse1527 (or .cse1530 .cse1528)) (.cse1525 (= fmt1 .cse1632)) (.cse780 (format 6)) (.cse1200 (+ .cse192 1)) (.cse49 (and .cse48 .cse248)) (.cse691 (=> .cse10 .cse690)) (.cse1215 (=> .cse1216 .cse9)) (.cse574 (=> .cse422 .cse573)) (.cse1268 (=> .cse1269 .cse18)) (.cse1123 (not .cse41)) (.cse40 (= .cse192 .cse225)) (.cse1110 (= .cse192 .cse1116)) (.cse128 (= .cse282 percent)) (.cse125 (= .cse356 s)) (.cse227 (s_count 3))) (let ((.cse1630 (format 7)) (.cse639 (+ .cse227 1)) (.cse263 (s_count 4)) (.cse123 (and .cse128 .cse125)) (.cse1111 (=> .cse41 .cse1110)) (.cse1122 (=> .cse1123 .cse40)) (.cse575 (and .cse574 .cse1268)) (.cse692 (and .cse691 .cse1215)) (.cse1131 (not .cse49)) (.cse50 (= .cse227 .cse192)) (.cse1196 (= .cse227 .cse1200)) (.cse321 (= .cse356 percent)) (.cse750 (= .cse780 s)) (.cse1524 (or .cse1527 .cse1525)) (.cse1522 (= fmt1 .cse1631)) (.cse1505 (= arg1 fmt0)) (.cse1503 (= arg1 .cse1593)) (.cse1464 (and .cse1434 (= adr_lo 3))) (.cse302 (x_count .cse365)) (.cse226 (s_count .cse365)) (.cse1588 (+ arg0 distance .cse1634)) (.cse1337 (and .cse1386 .cse1329)) (.cse1317 (not .cse30)) (.cse1621 (+ arg0 distance fmt_length .cse1634 (- 4))) (.cse1055 (+ .cse228 1)) (.cse115 (and .cse48 .cse275)) (.cse858 (=> .cse2 .cse857)) (.cse1234 (=> .cse1235 .cse1)) (.cse1260 (=> .cse419 .cse1259)) (.cse434 (=> .cse437 .cse433)) (.cse1195 (not .cse110)) (.cse111 (= .cse228 .cse229)) (.cse1181 (= .cse228 .cse879)) (.cse127 (= .cse356 x)) (.cse313 (x_count 3))) (let ((.cse1138 (+ .cse313 1)) (.cse130 (and .cse128 .cse127)) (.cse1182 (=> .cse110 .cse1181)) (.cse1194 (=> .cse1195 .cse111)) (.cse435 (and .cse1260 .cse434)) (.cse859 (and .cse858 .cse1234)) (.cse1349 (not .cse115)) (.cse116 (= .cse313 .cse228)) (.cse1153 (= .cse313 .cse1055)) (.cse748 (= .cse780 x)) (.cse346 (x_count 4)) (.cse1402 (<= .cse1621 0)) (.cse1315 (and .cse1337 .cse1317)) (.cse1584 (<= .cse1588 0)) (.cse1552 (* 4 .cse226)) (.cse1542 (* 4 .cse302)) (.cse1465 (and .cse1464 (= adr_medlo 4))) (.cse842 (= percent 37)) (.cse570 (= s 115)) (.cse1502 (or .cse1505 .cse1503)) (.cse1500 (= arg1 .cse1633)) (.cse1521 (or .cse1524 .cse1522)) (.cse1519 (= fmt1 (+ fmt0 5))) (.cse762 (s_count 5)) (.cse612 (and .cse321 .cse750)) (.cse1197 (=> .cse49 .cse1196)) (.cse1128 (=> .cse1131 .cse50)) (.cse1282 (and .cse575 .cse692)) (.cse1112 (and .cse1111 .cse1122)) (.cse1127 (not .cse123)) (.cse122 (= .cse263 .cse227)) (.cse1168 (= .cse263 .cse639)) (.cse751 (= .cse780 percent)) (.cse1629 (= .cse1630 s))) (let ((.cse763 (s_count 6)) (.cse752 (and .cse751 .cse1629)) (.cse1169 (=> .cse123 .cse1168)) (.cse1124 (=> .cse1127 .cse122)) (.cse1344 (and .cse1282 .cse1112)) (.cse1129 (and .cse1197 .cse1128)) (.cse854 (not .cse612)) (.cse613 (= .cse762 .cse263)) (.cse1518 (or .cse1521 .cse1519)) (.cse1516 (= fmt1 (+ fmt0 6))) (.cse1499 (or .cse1502 .cse1500)) (.cse1497 (= arg1 .cse1632)) (.cse1295 (and .cse842 .cse570)) (.cse428 (= x 120)) (.cse1466 (and .cse1465 (= adr_medhi 5))) (.cse1450 (+ arg0 .cse1552 .cse1542)) (.cse1476 (and .cse1315 .cse1584)) (.cse1406 (not .cse1402)) (.cse920 (+ .cse346 1)) (.cse322 (and .cse321 .cse748)) (.cse1154 (=> .cse115 .cse1153)) (.cse1348 (=> .cse1349 .cse116)) (.cse1284 (and .cse435 .cse859)) (.cse1183 (and .cse1182 .cse1194)) (.cse1145 (not .cse130)) (.cse147 (= .cse346 .cse313)) (.cse1132 (= .cse346 .cse1138)) (.cse984 (= .cse1630 x)) (.cse345 (x_count 5))) (let ((.cse990 (+ .cse345 1)) (.cse939 (x_count 6)) (.cse901 (and .cse751 .cse984)) (.cse1133 (=> .cse130 .cse1132)) (.cse1144 (=> .cse1145 .cse147)) (.cse1311 (and .cse1284 .cse1183)) (.cse1155 (and .cse1154 .cse1348)) (.cse1082 (not .cse322)) (.cse325 (= .cse345 .cse346)) (.cse914 (= .cse345 .cse920)) (.cse1414 (and .cse1476 .cse1406)) (.cse1445 (= arg1 .cse1450)) (.cse1467 (and .cse1466 (= adr_hi 6))) (.cse1292 (and .cse1295 .cse428)) (.cse1496 (or .cse1499 .cse1497)) (.cse1494 (= arg1 .cse1631)) (.cse1515 (or .cse1518 .cse1516)) (.cse1513 (= fmt1 (+ fmt0 7))) (.cse850 (=> .cse854 .cse613)) (.cse1309 (and .cse1344 .cse1129)) (.cse1125 (and .cse1169 .cse1124)) (.cse758 (not .cse752)) (.cse753 (= .cse763 .cse762))) (let ((.cse754 (=> .cse758 .cse753)) (.cse1313 (and .cse1309 .cse1125)) (.cse851 (and (=> .cse612 (= .cse762 (+ .cse263 1))) .cse850)) (.cse1512 (or .cse1515 .cse1513)) (.cse1493 (or .cse1496 .cse1494)) (.cse1420 (and .cse1467 .cse1292)) (.cse1446 (and .cse1414 .cse1445)) (.cse915 (=> .cse322 .cse914)) (.cse1081 (=> .cse1082 .cse325)) (.cse1350 (and .cse1311 .cse1155)) (.cse1134 (and .cse1133 .cse1144)) (.cse906 (not .cse901)) (.cse902 (= .cse939 .cse345)) (.cse986 (= .cse939 .cse990))) (let ((.cse987 (=> .cse901 .cse986)) (.cse903 (=> .cse906 .cse902)) (.cse1342 (and .cse1350 .cse1134)) (.cse916 (and .cse915 .cse1081)) (.cse1624 (= .cse1630 percent)) (.cse1468 (and .cse1420 .cse1446)) (.cse1491 (and .cse1512 .cse1493)) (.cse852 (and .cse1313 .cse851)) (.cse755 (and (=> .cse752 (= .cse763 (+ .cse762 1))) .cse754))) (let ((.cse756 (and .cse852 .cse755)) (.cse1625 (format 8)) (.cse1477 (and .cse1468 .cse1491)) (.cse1488 (and (and (and (and (and (and (and (or (or (or (or (or (or (or .cse418 (= .cse1628 s)) (= .cse1628 x)) (= .cse1628 3)) (= .cse1628 4)) (= .cse1628 5)) (= .cse1628 6)) (= .cse1628 255)) (or (or (or (or (or (or (or .cse4 .cse107) .cse105) (= .cse281 3)) (= .cse281 4)) (= .cse281 5)) (= .cse281 6)) (= .cse281 255))) (or (or (or (or (or (or (or .cse43 .cse47) .cse320) (= .cse238 3)) (= .cse238 4)) (= .cse238 5)) (= .cse238 6)) (= .cse238 255))) (or (or (or (or (or (or (or .cse48 .cse45) .cse294) (= .cse239 3)) (= .cse239 4)) (= .cse239 5)) (= .cse239 6)) (= .cse239 255))) (or (or (or (or (or (or (or .cse128 .cse248) .cse275) (= .cse282 3)) (= .cse282 4)) (= .cse282 5)) (= .cse282 6)) (= .cse282 255))) (or (or (or (or (or (or (or .cse321 .cse125) .cse127) (= .cse356 3)) (= .cse356 4)) (= .cse356 5)) (= .cse356 6)) (= .cse356 255))) (or (or (or (or (or (or (or .cse751 .cse750) .cse748) (= .cse780 3)) (= .cse780 4)) (= .cse780 5)) (= .cse780 6)) (= .cse780 255))) (or (or (or (or (or (or (or .cse1624 .cse1629) .cse984) (= .cse1630 3)) (= .cse1630 4)) (= .cse1630 5)) (= .cse1630 6)) (= .cse1630 255)))) (.cse1346 (and .cse1342 .cse916)) (.cse904 (and .cse987 .cse903))) (let ((.cse1015 (and .cse1346 .cse904)) (.cse957 (+ .cse939 1)) (.cse1478 (and .cse1477 .cse1488)) (.cse1473 (and .cse756 (let ((.cse1626 (and .cse1624 (= .cse1625 s))) (.cse1627 (s_count 7))) (and (=> .cse1626 (= .cse1627 (+ .cse763 1))) (=> (not .cse1626) (= .cse1627 .cse763))))))) (let ((.cse1474 (and .cse1478 .cse1473)) (.cse1470 (and .cse1015 (let ((.cse1622 (and .cse1624 (= .cse1625 x))) (.cse1623 (x_count 7))) (and (=> .cse1622 (= .cse1623 .cse957)) (=> (not .cse1622) (= .cse1623 .cse939))))))) (let ((.cse894 (+ fmt1 (- 2))) (.cse1410 (< 0 .cse1621)) (.cse1333 (< 0 .cse1620)) (.cse1390 (< 0 .cse1619)) (.cse1471 (and .cse1474 .cse1470)) (.cse1069 (+ arg1 1)) (.cse1247 (+ arg1 2))) (let-proof ((.cse1407 (not+ .cse1406)) (.cse1411 (total .cse1621 0)) (.cse1416 (not- .cse1406)) (.cse1318 (not- .cse1317)) (.cse1330 (not+ .cse1329)) (.cse1334 (total .cse1620 0)) (.cse1339 (not- .cse1329)) (.cse1391 (total .cse1619 0))) (let-proof ((.cse1472 (let ((.cse1484 (and (and (and (and (and (not (= (format fmt1) percent)) (= (format (+ fmt1 1)) s)) (= (format arg1) adr_lo)) (= (format .cse1069) adr_medlo)) (= (format .cse1247) adr_medhi)) (= (format (+ arg1 3)) adr_hi)))) (let ((.cse1479 (=> .cse1471 .cse1484))) (res .cse1479 (=>+ 0 .cse1479) (let ((.cse1510 (+ fmt0 0)) (.cse1618 (- fmt0 distance))) (let ((.cse1617 (= arg0 .cse1618)) (.cse1606 (- fmt_length 1)) (.cse1560 (- fmt1 2)) (.cse1532 (= fmt1 .cse1510))) (let ((.cse1529 (or .cse1532 .cse1531)) (.cse1546 (- .cse1560 fmt0)) (.cse1604 (+ fmt0 .cse1606)) (.cse1616 (and .cse24 .cse1617)) (.cse1613 (>= arg1 fmt0))) (let ((.cse1574 (- fmt_length 4)) (.cse1610 (and .cse1616 .cse1613)) (.cse1599 (< fmt1 .cse1604)) (.cse1553 (s_count .cse1546)) (.cse1526 (or .cse1529 .cse1528))) (let ((.cse1523 (or .cse1526 .cse1525)) (.cse1504 (= arg1 .cse1510)) (.cse1543 (x_count .cse1546)) (.cse1551 (* 4 .cse1553)) (.cse1583 (+ arg0 distance)) (.cse1598 (and .cse1610 .cse1599)) (.cse1594 (> fmt1 .cse1593)) (.cse1571 (+ distance .cse1574))) (let ((.cse1569 (+ arg0 .cse1571)) (.cse1590 (and .cse1598 .cse1594)) (.cse1585 (>= arg1 .cse1583)) (.cse1549 (+ arg0 .cse1551)) (.cse1541 (* 4 .cse1543)) (.cse1501 (or .cse1504 .cse1503)) (.cse1520 (or .cse1523 .cse1522))) (let ((.cse1517 (or .cse1520 .cse1519)) (.cse1498 (or .cse1501 .cse1500)) (.cse1539 (+ .cse1549 .cse1541)) (.cse1580 (and .cse1590 .cse1585)) (.cse1564 (< arg1 .cse1569))) (let ((.cse1563 (and .cse1580 .cse1564)) (.cse1538 (= arg1 .cse1539)) (.cse1495 (or .cse1498 .cse1497)) (.cse1514 (or .cse1517 .cse1516))) (let ((.cse1511 (or .cse1514 .cse1513)) (.cse1492 (or .cse1495 .cse1494)) (.cse1537 (and .cse1563 .cse1538))) (let ((.cse1536 (and .cse1420 .cse1537)) (.cse1490 (and .cse1511 .cse1492))) (let ((.cse1489 (and .cse1536 .cse1490))) (let ((.cse1487 (and .cse1489 .cse1488))) (let ((.cse1486 (and .cse1487 .cse1473))) (let ((.cse1485 (and .cse1486 .cse1470))) (let ((.cse1480 (=> .cse1485 .cse1484))) (let ((.cse1482 (not .cse1480))) (res .cse1480 (let ((.cse1481 (not .cse1479))) (res .cse1481 (res .cse1482 (not+ .cse1482) (let ((.cse1483 (= .cse1482 .cse1481))) (res .cse1483 (res (= .cse1480 .cse1479) (res (= .cse1484 .cse1484) (refl .cse1484) (res (= .cse1485 .cse1471) (res (= .cse1470 .cse1470) (refl .cse1470) (res (= .cse1486 .cse1474) (res (= .cse1473 .cse1473) (refl .cse1473) (res (= .cse1487 .cse1478) (res (= .cse1488 .cse1488) (refl .cse1488) (res (= .cse1489 .cse1477) (let ((.cse1508 (= arg1 arg1)) (.cse1534 (= fmt1 fmt1))) (let-proof ((.cse1509 (refl arg1)) (.cse1535 (refl fmt1))) (res (= .cse1490 .cse1491) (let ((.cse1506 (= .cse1510 fmt0))) (let-proof ((.cse1507 (poly+ .cse1510 fmt0))) (res (= .cse1492 .cse1493) (res (= .cse1494 .cse1494) (refl .cse1494) (res (= .cse1495 .cse1496) (res (= .cse1497 .cse1497) (refl .cse1497) (res (= .cse1498 .cse1499) (res (= .cse1500 .cse1500) (refl .cse1500) (res (= .cse1501 .cse1502) (res (= .cse1503 .cse1503) (refl .cse1503) (res (= .cse1504 .cse1505) (res .cse1506 .cse1507 (res .cse1508 .cse1509 (cong (= arg1 .cse1510) (= arg1 fmt0)))) (cong (or .cse1504 .cse1503) (or .cse1505 .cse1503)))) (cong (or .cse1501 .cse1500) (or .cse1502 .cse1500)))) (cong (or .cse1498 .cse1497) (or .cse1499 .cse1497)))) (cong (or .cse1495 .cse1494) (or .cse1496 .cse1494)))) (res (= .cse1511 .cse1512) (res (= .cse1513 .cse1513) (refl .cse1513) (res (= .cse1514 .cse1515) (res (= .cse1516 .cse1516) (refl .cse1516) (res (= .cse1517 .cse1518) (res (= .cse1519 .cse1519) (refl .cse1519) (res (= .cse1520 .cse1521) (res (= .cse1522 .cse1522) (refl .cse1522) (res (= .cse1523 .cse1524) (res (= .cse1525 .cse1525) (refl .cse1525) (res (= .cse1526 .cse1527) (res (= .cse1528 .cse1528) (refl .cse1528) (res (= .cse1529 .cse1530) (res (= .cse1531 .cse1531) (refl .cse1531) (res (= .cse1532 .cse1533) (res .cse1506 .cse1507 (res .cse1534 .cse1535 (cong (= fmt1 .cse1510) (= fmt1 fmt0)))) (cong (or .cse1532 .cse1531) (or .cse1533 .cse1531)))) (cong (or .cse1529 .cse1528) (or .cse1530 .cse1528)))) (cong (or .cse1526 .cse1525) (or .cse1527 .cse1525)))) (cong (or .cse1523 .cse1522) (or .cse1524 .cse1522)))) (cong (or .cse1520 .cse1519) (or .cse1521 .cse1519)))) (cong (or .cse1517 .cse1516) (or .cse1518 .cse1516)))) (cong (or .cse1514 .cse1513) (or .cse1515 .cse1513)))) (cong (and .cse1511 .cse1492) (and .cse1512 .cse1493)))))) (res (= .cse1536 .cse1468) (res (= .cse1537 .cse1446) (let ((.cse1558 (= fmt0 fmt0)) (.cse1554 (= arg0 arg0))) (let-proof ((.cse1559 (refl fmt0)) (.cse1555 (refl arg0))) (res (= .cse1538 .cse1445) (res (= .cse1539 .cse1450) (let ((.cse1550 (+ arg0 .cse1552))) (let ((.cse1540 (+ .cse1550 .cse1542))) (res (= .cse1540 .cse1450) (poly+ .cse1540 .cse1450) (res (= .cse1539 .cse1540) (let ((.cse1544 (= .cse1546 .cse365)) (.cse1547 (= 4 4))) (let-proof ((.cse1545 (let ((.cse1556 (- .cse894 fmt0))) (res (= .cse1556 .cse365) (res (= .cse978 .cse978) (refl .cse978) (res (= .cse894 .cse894) (refl .cse894) (let ((.cse1557 (+ .cse894 .cse978))) (res (= .cse1557 .cse1557) (cong (+ .cse894 .cse978) (+ .cse894 .cse978)) (res (= .cse1556 .cse1557) (-def .cse894 fmt0) (res (= .cse1557 .cse365) (poly+ .cse1557 .cse365) (trans .cse1556 .cse1557 .cse1557 .cse365))))))) (res (= .cse1546 .cse1556) (res .cse1558 .cse1559 (res (= .cse1560 .cse894) (let ((.cse1561 (* (- 1) 2))) (res (= .cse1561 (- 2)) (poly* .cse1561 (- 2)) (res .cse1534 .cse1535 (let ((.cse1562 (+ fmt1 .cse1561))) (res (= .cse1562 .cse894) (cong (+ fmt1 .cse1561) (+ fmt1 (- 2))) (res (= .cse1560 .cse1562) (-def fmt1 2) (trans .cse1560 .cse1562 .cse894))))))) (cong (- .cse1560 fmt0) (- .cse894 fmt0)))) (trans .cse1546 .cse1556 .cse365))))) (.cse1548 (refl 4))) (res (= .cse1541 .cse1542) (res (= .cse1543 .cse302) (res .cse1544 .cse1545 (cong (x_count .cse1546) (x_count .cse365))) (res .cse1547 .cse1548 (cong (* 4 .cse1543) (* 4 .cse302)))) (res (= .cse1549 .cse1550) (res (= .cse1551 .cse1552) (res (= .cse1553 .cse226) (res .cse1544 .cse1545 (cong (s_count .cse1546) (s_count .cse365))) (res .cse1547 .cse1548 (cong (* 4 .cse1553) (* 4 .cse226)))) (res .cse1554 .cse1555 (cong (+ arg0 .cse1551) (+ arg0 .cse1552)))) (cong (+ .cse1549 .cse1541) (+ .cse1550 .cse1542)))))) (trans .cse1539 .cse1540 .cse1450))))) (res .cse1508 .cse1509 (cong (= arg1 .cse1539) (= arg1 .cse1450)))) (res (= .cse1563 .cse1414) (let ((.cse1577 (= fmt_length fmt_length))) (let-proof ((.cse1578 (refl fmt_length))) (res (= .cse1564 .cse1406) (let ((.cse1568 (+ arg0 distance fmt_length (- 4)))) (let ((.cse1566 (< arg1 .cse1568))) (let ((.cse1565 (= .cse1566 .cse1406))) (res .cse1565 (res .cse1406 (res .cse1566 (=+1 .cse1565) (res .cse1402 .cse1407 (farkas 1 .cse1566 1 .cse1402))) (res .cse1566 (let ((.cse1567 (<= .cse1568 arg1))) (res .cse1567 (total .cse1568 arg1) (res .cse1402 (res .cse1410 .cse1411 (farkas 1 .cse1567 1 .cse1410)) .cse1416))) (=+2 .cse1565))) (res (= .cse1564 .cse1566) (res (= .cse1569 .cse1568) (let ((.cse1572 (+ distance fmt_length (- 4)))) (let ((.cse1570 (+ arg0 .cse1572))) (res (= .cse1570 .cse1568) (poly+ .cse1570 .cse1568) (res (= .cse1569 .cse1570) (res (= .cse1571 .cse1572) (let ((.cse1575 (+ fmt_length (- 4)))) (let ((.cse1573 (+ distance .cse1575))) (res (= .cse1573 .cse1572) (poly+ .cse1573 .cse1572) (res (= .cse1571 .cse1573) (res (= .cse1574 .cse1575) (let ((.cse1576 (* (- 1) 4))) (res (= .cse1576 (- 4)) (poly* .cse1576 (- 4)) (res .cse1577 .cse1578 (let ((.cse1579 (+ fmt_length .cse1576))) (res (= .cse1579 .cse1575) (cong (+ fmt_length .cse1576) (+ fmt_length (- 4))) (res (= .cse1574 .cse1579) (-def fmt_length 4) (trans .cse1574 .cse1579 .cse1575))))))) (res (= distance distance) (refl distance) (cong (+ distance .cse1574) (+ distance .cse1575)))) (trans .cse1571 .cse1573 .cse1572))))) (res .cse1554 .cse1555 (cong (+ arg0 .cse1571) (+ arg0 .cse1572)))) (trans .cse1569 .cse1570 .cse1568))))) (res .cse1508 .cse1509 (cong (< arg1 .cse1569) (< arg1 .cse1568)))) (trans .cse1564 .cse1566 .cse1406)))))) (res (= .cse1580 .cse1476) (let ((.cse1581 (= .cse1585 .cse1584))) (res .cse1581 (let ((.cse1586 (<= .cse1583 arg1))) (let ((.cse1582 (= .cse1585 .cse1586))) (res .cse1582 (>=def arg1 .cse1583) (res .cse1584 (res .cse1585 (=+1 .cse1581) (res .cse1586 (=-2 .cse1582) (let ((.cse1587 (< 0 .cse1588))) (res .cse1587 (total .cse1588 0) (farkas 1 .cse1586 1 .cse1587))))) (res .cse1585 (res .cse1586 (let ((.cse1589 (< arg1 .cse1583))) (res .cse1589 (total .cse1583 arg1) (farkas 1 .cse1589 1 .cse1584))) (=-1 .cse1582)) (=+2 .cse1581)))))) (res (= .cse1590 .cse1315) (let ((.cse1591 (= .cse1594 .cse1317))) (res .cse1591 (let ((.cse1595 (< .cse1593 fmt1))) (let ((.cse1592 (= .cse1594 .cse1595))) (res .cse1592 (>def fmt1 .cse1593) (res .cse1317 (res .cse1594 (=+1 .cse1591) (res .cse1595 (=-2 .cse1592) (res .cse30 (not+ .cse1317) (farkas 1 .cse1595 1 .cse30)))) (res .cse1594 (res .cse1595 (let ((.cse1596 (<= fmt1 .cse1593))) (res .cse1596 (total fmt1 .cse1593) (res .cse30 (let ((.cse1597 (< 0 .cse1366))) (res .cse1597 (total .cse1366 0) (farkas 1 .cse1596 1 .cse1597))) .cse1318))) (=-1 .cse1592)) (=+2 .cse1591)))))) (res (= .cse1598 .cse1337) (res (= .cse1599 .cse1329) (let ((.cse1603 (+ fmt0 fmt_length (- 1)))) (let ((.cse1601 (< fmt1 .cse1603))) (let ((.cse1600 (= .cse1601 .cse1329))) (res .cse1600 (res .cse1329 (res .cse1601 (=+1 .cse1600) (res .cse1325 .cse1330 (farkas 1 .cse1601 1 .cse1325))) (res .cse1601 (let ((.cse1602 (<= .cse1603 fmt1))) (res .cse1602 (total .cse1603 fmt1) (res .cse1325 (res .cse1333 .cse1334 (farkas 1 .cse1602 1 .cse1333)) .cse1339))) (=+2 .cse1600))) (res (= .cse1599 .cse1601) (res (= .cse1604 .cse1603) (let ((.cse1607 (+ fmt_length (- 1)))) (let ((.cse1605 (+ fmt0 .cse1607))) (res (= .cse1605 .cse1603) (poly+ .cse1605 .cse1603) (res (= .cse1604 .cse1605) (res (= .cse1606 .cse1607) (let ((.cse1608 (* (- 1) 1))) (res (= .cse1608 (- 1)) (poly* .cse1608 (- 1)) (res .cse1577 .cse1578 (let ((.cse1609 (+ fmt_length .cse1608))) (res (= .cse1609 .cse1607) (cong (+ fmt_length .cse1608) (+ fmt_length (- 1))) (res (= .cse1606 .cse1609) (-def fmt_length 1) (trans .cse1606 .cse1609 .cse1607))))))) (res .cse1558 .cse1559 (cong (+ fmt0 .cse1606) (+ fmt0 .cse1607)))) (trans .cse1604 .cse1605 .cse1603))))) (res .cse1534 .cse1535 (cong (< fmt1 .cse1604) (< fmt1 .cse1603)))) (trans .cse1599 .cse1601 .cse1329)))))) (res (= .cse1610 .cse1386) (let ((.cse1611 (= .cse1613 .cse1385))) (res .cse1611 (let ((.cse1614 (<= fmt0 arg1))) (let ((.cse1612 (= .cse1613 .cse1614))) (res .cse1612 (>=def arg1 fmt0) (res .cse1385 (res .cse1613 (=+1 .cse1611) (res .cse1614 (=-2 .cse1612) (res .cse1390 .cse1391 (farkas 1 .cse1614 1 .cse1390)))) (res .cse1613 (res .cse1614 (let ((.cse1615 (< arg1 fmt0))) (res .cse1615 (total fmt0 arg1) (farkas 1 .cse1615 1 .cse1385))) (=-1 .cse1612)) (=+2 .cse1611)))))) (res (= .cse1616 .cse1423) (res (= .cse1617 .cse1422) (res (= .cse1618 .cse1427) (-def fmt0 distance) (res .cse1554 .cse1555 (cong (= arg0 .cse1618) (= arg0 .cse1427)))) (res (= .cse24 .cse24) (refl .cse24) (cong (and .cse24 .cse1617) (and .cse24 .cse1422)))) (cong (and .cse1616 .cse1613) (and .cse1423 .cse1385))))) (cong (and .cse1610 .cse1599) (and .cse1386 .cse1329)))) (cong (and .cse1598 .cse1594) (and .cse1337 .cse1317))))) (cong (and .cse1590 .cse1585) (and .cse1315 .cse1584))))) (cong (and .cse1580 .cse1564) (and .cse1476 .cse1406)))))) (cong (and .cse1563 .cse1538) (and .cse1414 .cse1445)))))) (res (= .cse1420 .cse1420) (refl .cse1420) (cong (and .cse1420 .cse1537) (and .cse1420 .cse1446)))) (cong (and .cse1536 .cse1490) (and .cse1468 .cse1491)))))) (cong (and .cse1489 .cse1488) (and .cse1477 .cse1488)))) (cong (and .cse1487 .cse1473) (and .cse1478 .cse1473)))) (cong (and .cse1486 .cse1470) (and .cse1474 .cse1470)))) (cong (=> .cse1485 .cse1484) (=> .cse1471 .cse1484)))) (cong (not .cse1480) (not .cse1479))) (=-2 .cse1483)))) (not- .cse1481))) (res .cse1482 (assume .cse1482) (not- .cse1482)))))))))))))))))))))))) (let-proof ((.cse1475 (res .cse1471 .cse1472 (and- 0 .cse1471)))) (let-proof ((.cse1469 (res .cse1477 (res .cse1478 (res .cse1474 .cse1475 (and- 0 .cse1474)) (and- 0 .cse1478)) (and- 0 .cse1477)))) (let-proof ((.cse1447 (res .cse1468 .cse1469 (and- 1 .cse1468)))) (let-proof ((.cse1415 (res .cse1446 .cse1447 (and- 0 .cse1446)))) (let-proof ((.cse1316 (res .cse1476 (res .cse1414 .cse1415 (and- 0 .cse1414)) (and- 0 .cse1476)))) (let ((.cse1418 (* (- 1) arg0))) (let-proof ((.cse757 (res .cse1473 (res .cse1474 .cse1475 (and- 1 .cse1474)) (and- 0 .cse1473))) (.cse1338 (res .cse1315 .cse1316 (and- 0 .cse1315))) (.cse1016 (res .cse1470 (res .cse1471 .cse1472 (and- 1 .cse1471)) (and- 0 .cse1470)))) (let ((.cse1461 (+ distance (- 18))) (.cse1453 (+ arg1 .cse1418 (* (- 4) .cse226) (* (- 4) .cse302))) (.cse1440 (+ fmt_length (- 8))) (.cse1430 (+ fmt0 .cse1418 .cse1419))) (let-proof ((.cse1347 (res .cse1015 .cse1016 (and- 0 .cse1015))) (.cse1421 (res .cse1468 .cse1469 (and- 0 .cse1468))) (.cse1387 (res .cse1337 .cse1338 (and- 0 .cse1337))) (.cse853 (res .cse756 .cse757 (and- 0 .cse756)))) (let ((.cse801 (* (- 1) .cse227)) (.cse97 (= 0 .cse1430)) (.cse20 (= .cse1430 0)) (.cse1322 (= .cse1440 0)) (.cse1378 (+ arg1 .cse978 (- 3))) (.cse1394 (+ arg1 (- 2))) (.cse1444 (+ arg1 (- 1))) (.cse1375 (= 0 .cse1453)) (.cse28 (= .cse1453 0)) (.cse95 (= 0 .cse1461)) (.cse14 (= .cse1461 0))) (let-proof ((.cse1314 (res .cse852 .cse853 (and- 0 .cse852))) (.cse98 (symm 0 .cse1430)) (.cse1376 (symm 0 .cse1453)) (.cse1424 (res .cse1386 .cse1387 (and- 0 .cse1386))) (.cse1435 (res .cse1464 (res .cse1465 (res .cse1466 (res .cse1467 (res .cse1420 .cse1421 (and- 0 .cse1420)) (and- 0 .cse1467)) (and- 0 .cse1466)) (and- 0 .cse1465)) (and- 0 .cse1464))) (.cse96 (symm 0 .cse1461)) (.cse1343 (res .cse1346 .cse1347 (and- 0 .cse1346)))) (let ((.cse899 (= 0 fmt0)) (.cse720 (<= .cse1444 0)) (.cse26 (= .cse1394 0)) (.cse1305 (< 0 .cse1394)) (.cse725 (<= 1 .cse1444)) (.cse1304 (< .cse1394 0)) (.cse733 (= .cse1378 0)) (.cse734 (<= .cse1394 0)) (.cse731 (<= .cse1378 0)) (.cse1341 (* (- 1) fmt_length)) (.cse688 (* (- 1) .cse224)) (.cse826 (* (- 1) .cse192)) (.cse708 (* (- 1) .cse225)) (.cse1147 (+ fmt1 .cse801 .cse978 (- 2))) (.cse1358 (+ fmt1 .cse978 (- 3))) (.cse1107 (+ fmt1 .cse978 (- 4))) (.cse1071 (+ fmt1 .cse978 (- 5)))) (let-proof ((.cse1351 (res .cse1342 .cse1343 (and- 0 .cse1342))) (.cse15 (! (res .cse1456 (res .cse1434 .cse1435 (and- 0 .cse1434)) (let ((.cse1457 (= .cse1456 .cse14))) (res .cse1457 (res .cse14 (res .cse1456 (=+1 .cse1457) (let ((.cse1458 (= 18 distance))) (res .cse1458 (symm 18 distance) (let ((.cse1459 (< .cse1461 0))) (res .cse1459 (let ((.cse1460 (< 0 .cse1461))) (res .cse1460 (trichotomy .cse1461 0) (farkas 1 .cse1456 1 .cse1460))) (farkas 1 .cse1458 1 .cse1459)))))) (res .cse1456 (res .cse95 .cse96 (let ((.cse1462 (< distance 18))) (res .cse1462 (let ((.cse1463 (< 18 distance))) (res .cse1463 (trichotomy distance 18) (farkas 1 .cse14 1 .cse1463))) (farkas 1 .cse95 1 .cse1462)))) (=+2 .cse1457))) (=-2 .cse1457)))) :proves (+ .cse14) :input)) (.cse25 (! (res .cse1423 .cse1424 (and- 0 .cse1423)) :proves (+ .cse24) :input)) (.cse29 (! (res .cse1445 (res .cse1446 .cse1447 (and- 1 .cse1446)) (let ((.cse1448 (= .cse1445 .cse28))) (res .cse1448 (res .cse28 (res .cse1445 (=+1 .cse1448) (let ((.cse1449 (= .cse1450 arg1))) (res .cse1449 (symm .cse1450 arg1) (let ((.cse1451 (< .cse1453 0))) (res .cse1451 (let ((.cse1452 (< 0 .cse1453))) (res .cse1452 (trichotomy .cse1453 0) (farkas 1 .cse1445 1 .cse1452))) (farkas 1 .cse1449 1 .cse1451)))))) (res .cse1445 (res .cse1375 .cse1376 (let ((.cse1454 (< arg1 .cse1450))) (res .cse1454 (let ((.cse1455 (< .cse1450 arg1))) (res .cse1455 (trichotomy arg1 .cse1450) (farkas 1 .cse28 1 .cse1455))) (farkas 1 .cse1375 1 .cse1454)))) (=+2 .cse1448))) (=-2 .cse1448)))) :proves (+ .cse28) :input)) (.cse900 (symm 0 fmt0)) (.cse1306 (trichotomy .cse1394 0)) (.cse726 (total-int .cse1444 0)) (.cse1323 (! (res .cse1433 (res .cse1434 .cse1435 (and- 1 .cse1434)) (let ((.cse1436 (= .cse1433 .cse1322))) (res .cse1436 (res .cse1322 (res .cse1433 (=+1 .cse1436) (let ((.cse1437 (= 8 fmt_length))) (res .cse1437 (symm 8 fmt_length) (let ((.cse1438 (< .cse1440 0))) (res .cse1438 (let ((.cse1439 (< 0 .cse1440))) (res .cse1439 (trichotomy .cse1440 0) (farkas 1 .cse1433 1 .cse1439))) (farkas 1 .cse1437 1 .cse1438)))))) (res .cse1433 (let ((.cse1441 (= 0 .cse1440))) (res .cse1441 (symm 0 .cse1440) (let ((.cse1442 (< fmt_length 8))) (res .cse1442 (let ((.cse1443 (< 8 fmt_length))) (res .cse1443 (trichotomy fmt_length 8) (farkas 1 .cse1322 1 .cse1443))) (farkas 1 .cse1441 1 .cse1442))))) (=+2 .cse1436))) (=-2 .cse1436)))) :proves (+ .cse1322) :input)) (.cse21 (! (res .cse1422 (res .cse1423 .cse1424 (and- 1 .cse1423)) (let ((.cse1425 (= .cse1422 .cse20))) (res .cse1425 (res .cse20 (res .cse1422 (=+1 .cse1425) (let ((.cse1426 (= .cse1427 arg0))) (res .cse1426 (symm .cse1427 arg0) (let ((.cse1428 (< .cse1430 0))) (res .cse1428 (let ((.cse1429 (< 0 .cse1430))) (res .cse1429 (trichotomy .cse1430 0) (farkas 1 .cse1426 1 .cse1429))) (farkas 1 .cse1422 1 .cse1428)))))) (res .cse1422 (res .cse97 .cse98 (let ((.cse1431 (< arg0 .cse1427))) (res .cse1431 (let ((.cse1432 (< .cse1427 arg0))) (res .cse1432 (trichotomy arg0 .cse1427) (farkas 1 .cse97 1 .cse1432))) (farkas 1 .cse20 1 .cse1431)))) (=+2 .cse1425))) (=-2 .cse1425)))) :proves (+ .cse20) :input)) (.cse1310 (res .cse1313 .cse1314 (and- 0 .cse1313)))) (let ((.cse943 (* (- 1) .cse346)) (.cse841 (= 115 37)) (.cse1062 (* (- 1) .cse313)) (.cse998 (= 120 37)) (.cse982 (* (- 1) .cse228)) (.cse1299 (+ fmt1 .cse978 (- 6))) (.cse72 (<= .cse1071 0)) (.cse74 (<= .cse1107 0)) (.cse76 (<= .cse1358 0)) (.cse629 (<= .cse1147 0)) (.cse1365 (+ fmt1 .cse801 .cse978 (- 1))) (.cse1101 (+ .cse192 .cse708)) (.cse1098 (+ .cse227 .cse826)) (.cse1104 (+ .cse225 .cse688)) (.cse1057 (* (- 1) .cse229)) (.cse875 (* (- 1) .cse303)) (.cse486 (* (- 1) .cse226)) (.cse108 (= 4 .cse1247)) (.cse101 (= 0 .cse1394)) (.cse389 (= .cse346 .cse302)) (.cse57 (= 4 .cse365)) (.cse1056 (* (- 1) .cse302)) (.cse678 (= .cse226 .cse224)) (.cse396 (= 0 .cse365)) (.cse794 (= .cse365 0)) (.cse1243 (+ fmt1 .cse708 .cse978 (- 2))) (.cse70 (= .cse1358 0))) (let-proof ((.cse1293 (res .cse1420 .cse1421 (and- 1 .cse1420))) (.cse1345 (res .cse1309 .cse1310 (and- 0 .cse1309))) (.cse732 (! (res .cse1322 .cse1323 (res .cse20 .cse21 (let ((.cse1413 (+ arg1 .cse1418 .cse1419 .cse1341 5))) (let ((.cse1401 (<= .cse1413 0))) (res .cse1401 (! (res .cse1402 (let ((.cse1403 (not .cse1401))) (let-proof ((.cse1404 (not+ .cse1403))) (res .cse1403 .cse1404 (let ((.cse1405 (not .cse1403))) (res .cse1405 (res .cse1406 .cse1407 (let ((.cse1408 (= .cse1406 .cse1405))) (res .cse1408 (let ((.cse1409 (= .cse1402 .cse1403))) (res .cse1409 (res .cse1403 (res .cse1402 (=+1 .cse1409) (res .cse1401 .cse1404 (farkas 1 .cse1402 1 .cse1401))) (res .cse1402 (res .cse1410 .cse1411 (res .cse1401 (let ((.cse1412 (<= 1 .cse1413))) (res .cse1412 (total-int .cse1413 0) (farkas 1 .cse1410 1 .cse1412))) (not- .cse1403))) (=+2 .cse1409))) (cong (not .cse1402) (not .cse1403)))) (=-2 .cse1408)))) (not- .cse1405)))))) (res .cse1414 .cse1415 (res .cse1406 (and- 1 .cse1414) .cse1416))) :proves (+ .cse1401) :input) (! (let ((.cse1417 (<= 1 .cse1378))) (res .cse1417 (total-int .cse1378 0) (res .cse97 .cse98 (farkas 1 .cse1401 1 .cse97 1 .cse1322 1 .cse1417)))) :proves (- .cse1401 - .cse20 - .cse1322 + .cse731) :LA (1 (- 1) 1 (- 1)))))))) :proves (+ .cse731) :rup)) (.cse735 (let ((.cse1399 (+ arg1 .cse978 (- 2)))) (let ((.cse1395 (<= .cse1399 0))) (res .cse1395 (! (let ((.cse1396 (< .cse1378 0))) (res .cse1396 (let ((.cse1397 (< 0 .cse1378))) (res .cse1397 (trichotomy .cse1378 0) (farkas 1 .cse1397 1 .cse731))) (let ((.cse1398 (<= 1 .cse1399))) (res .cse1398 (total-int .cse1399 0) (farkas 1 .cse1398 1 .cse1396))))) :proves (+ .cse1395 + .cse733 - .cse731) :trichotomy) (! (let ((.cse1400 (<= 1 .cse1394))) (res .cse1400 (total-int .cse1394 0) (farkas 1 .cse1400 1 .cse24 1 .cse1395))) :proves (+ .cse734 - .cse24 - .cse1395) :LA ((- 1) 1 1)))))) (.cse736 (! (res .cse1304 (res .cse1305 .cse1306 (farkas 1 .cse1305 1 .cse734)) (res .cse725 .cse726 (farkas 1 .cse725 1 .cse1304))) :proves (+ .cse720 + .cse26 - .cse734) :trichotomy)) (.cse102 (symm 0 .cse1394)) (.cse728 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (let ((.cse1393 (+ arg1 .cse978 1))) (let ((.cse1383 (<= 1 .cse1393)) (.cse1379 (<= .cse1393 0))) (let-proof ((.cse1384 (total-int .cse1393 0))) (res .cse1379 (res .cse28 .cse29 (let ((.cse1382 (+ .cse226 .cse302 (- 4)))) (let ((.cse1380 (<= .cse1382 0))) (res .cse1380 (! (res .cse899 .cse900 (res .cse1375 .cse1376 (let ((.cse1381 (<= 1 .cse1382))) (res .cse1381 (total-int .cse1382 0) (farkas 4 .cse1381 1 .cse1375 1 .cse899 1 .cse20 1 .cse720 1 .cse14))))) :proves (+ .cse1380 - .cse28 - .cse24 - .cse20 - .cse720 - .cse14) :LA ((- 4) (- 1) (- 1) 1 1 1)) (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse1383 .cse1384 (farkas 4 .cse1380 1 .cse28 1 .cse1383 1 .cse97 1 .cse95)))) :proves (- .cse1380 - .cse28 + .cse1379 - .cse20 - .cse14) :LA (4 1 (- 1) (- 1) (- 1))))))) (! (res .cse1385 (res .cse1386 .cse1387 (and- 1 .cse1386)) (let ((.cse1388 (not .cse1379))) (let-proof ((.cse1392 (not- .cse1388))) (res .cse1388 (let ((.cse1389 (= .cse1385 .cse1388))) (res .cse1389 (res .cse1388 (res .cse1385 (=+1 .cse1389) (res .cse1379 (not+ .cse1388) (farkas 1 .cse1385 1 .cse1379))) (res .cse1385 (res .cse1390 .cse1391 (res .cse1379 (res .cse1383 .cse1384 (farkas 1 .cse1390 1 .cse1383)) .cse1392)) (=+2 .cse1389))) (=-2 .cse1389))) .cse1392)))) :proves (- .cse1379) :input)))))))) :proves (- .cse720) :rup)) (.cse739 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse28 .cse29 (let ((.cse1374 (+ .cse226 .cse302 (- 5)))) (let ((.cse1372 (<= .cse1374 0))) (res .cse1372 (! (let ((.cse1373 (<= 1 .cse1374))) (res .cse1373 (total-int .cse1374 0) (res .cse1375 .cse1376 (farkas 1 .cse733 1 .cse1375 1 .cse20 1 .cse14 4 .cse1373)))) :proves (- .cse733 - .cse28 - .cse20 - .cse14 + .cse1372) :LA (1 (- 1) 1 1 (- 4))) (! (res .cse95 .cse96 (res .cse97 .cse98 (let ((.cse1377 (= 0 .cse1378))) (res .cse1377 (symm 0 .cse1378) (farkas 4 .cse1372 1 .cse1377 1 .cse28 1 .cse97 1 .cse95))))) :proves (- .cse1372 - .cse733 - .cse28 - .cse20 - .cse14) :LA (4 (- 1) 1 (- 1) (- 1))))))))) :proves (- .cse733) :rup)) (.cse1250 (cong (x_count 4) (x_count .cse365))) (.cse1312 (res .cse1350 .cse1351 (and- 0 .cse1350))) (.cse1044 (symm .cse365 0))) (let ((.cse1275 (+ .cse345 (- 2))) (.cse1281 (+ .cse345 (- 1))) (.cse1273 (+ .cse302 (- 2))) (.cse1265 (+ .cse303 (- 1))) (.cse1254 (+ .cse228 (- 1))) (.cse80 (<= .cse1243 0)) (.cse1289 (+ fmt1 .cse708 .cse978 (- 1))) (.cse68 (= .cse303 .cse302)) (.cse52 (= .cse226 .cse227)) (.cse230 (= .cse224 .cse225)) (.cse413 (= .cse225 .cse192)) (.cse415 (= .cse192 .cse227)) (.cse1236 (+ .cse346 .cse1056)) (.cse508 (= .cse302 .cse346)) (.cse1231 (+ .cse303 .cse1056)) (.cse431 (= 37 120)) (.cse245 (= 120 x)) (.cse243 (= 37 percent)) (.cse1230 (+ .cse229 .cse688)) (.cse787 (= .cse313 .cse346)) (.cse1222 (+ .cse263 (- 2))) (.cse402 (+ .cse263 (- 1))) (.cse348 (= .cse263 .cse226)) (.cse1220 (+ .cse226 (- 2))) (.cse174 (= 3 .cse1069)) (.cse1248 (= .cse1247 4)) (.cse714 (= .cse226 .cse192)) (.cse55 (= 2 .cse365)) (.cse1212 (+ .cse225 .cse486)) (.cse569 (= 37 115)) (.cse425 (= 115 s)) (.cse1085 (+ .cse229 .cse875)) (.cse1203 (+ .cse227 .cse826 (- 1))) (.cse1189 (+ .cse228 .cse1057 (- 1))) (.cse1088 (+ .cse228 .cse1056)) (.cse1174 (+ .cse263 .cse801 (- 1))) (.cse8 (= .cse1104 0)) (.cse553 (<= 1 .cse1366)) (.cse118 (= .cse1098 0)) (.cse39 (= .cse1101 0)) (.cse253 (= .cse1147 0)) (.cse628 (<= .cse1365 0)) (.cse78 (<= .cse365 0)) (.cse56 (= .cse1107 0)) (.cse54 (= .cse1071 0)) (.cse58 (= .cse1299 0)) (.cse16 (<= .cse1299 0)) (.cse1165 (+ .cse313 .cse1056)) (.cse1161 (+ .cse313 .cse982 (- 1))) (.cse1089 (+ .cse229 .cse486)) (.cse1141 (+ .cse346 .cse1062 (- 1))) (.cse261 (= .cse226 .cse263)) (.cse1246 (= .cse365 4)) (.cse1119 (+ .cse192 .cse708 (- 1))) (.cse741 (= 120 115)) (.cse274 (= .cse226 .cse225)) (.cse69 (= 1 .cse365)) (.cse975 (= .cse365 1)) (.cse1091 (+ .cse229 .cse1056)) (.cse1090 (+ .cse227 .cse486)) (.cse1076 (+ .cse346 .cse1062)) (.cse1075 (+ .cse345 .cse943)) (.cse1064 (+ .cse228 .cse1057)) (.cse149 (= .cse228 .cse302)) (.cse559 (= .cse228 .cse313)) (.cse205 (= .cse313 .cse302)) (.cse53 (= 3 .cse365)) (.cse1063 (+ .cse313 .cse982))) (let-proof ((.cse938 (let ((.cse1369 (= 0 .cse1358))) (res .cse1369 (symm 0 .cse1358) (let ((.cse1370 (< 1 .cse365))) (res .cse1370 (let ((.cse1371 (< .cse365 1))) (res .cse1371 (trichotomy 1 .cse365) (farkas 1 .cse1369 1 .cse1371))) (farkas 1 .cse70 1 .cse1370)))))) (.cse679 (! (res .cse794 .cse1044 (cong (s_count .cse365) (s_count 0))) :proves (+ .cse678 - .cse396) :cong (.cse226 .cse224))) (.cse231 (symm .cse224 .cse225)) (.cse414 (symm .cse225 .cse192)) (.cse416 (symm .cse192 .cse227)) (.cse1285 (res .cse1311 .cse1312 (and- 0 .cse1311))) (.cse429 (symm x 120)) (.cse843 (symm percent 37)) (.cse390 (! .cse1250 :proves (+ .cse389 - .cse57) :cong (.cse346 .cse302))) (.cse788 (symm .cse313 .cse346)) (.cse109 (! (res .cse731 .cse732 (res .cse24 .cse25 (res .cse733 (res .cse734 .cse735 (res .cse720 (res .cse26 .cse736 (! (res .cse101 .cse102 (let ((.cse1367 (< 4 .cse1247))) (res .cse1367 (let ((.cse1368 (< .cse1247 4))) (res .cse1368 (trichotomy 4 .cse1247) (farkas 1 .cse101 1 .cse1368))) (farkas 1 .cse26 1 .cse1367)))) :proves (- .cse26 + .cse108) :EQ)) .cse728)) .cse739))) :proves (+ .cse108) :rup)) (.cse1249 (symm .cse1247 4)) (.cse1283 (res .cse1344 .cse1345 (and- 0 .cse1344))) (.cse1296 (res .cse1292 .cse1293 (and- 0 .cse1292))) (.cse571 (symm s 115)) (.cse554 (total-int .cse1366 0)) (.cse632 (let ((.cse1362 (< .cse1147 0))) (res .cse1362 (let ((.cse1363 (< 0 .cse1147))) (res .cse1363 (trichotomy .cse1147 0) (farkas 1 .cse1363 1 .cse629))) (let ((.cse1364 (<= 1 .cse1365))) (res .cse1364 (total-int .cse1365 0) (farkas 1 .cse1364 1 .cse1362)))))) (.cse835 (let ((.cse1359 (< .cse1358 0))) (res .cse1359 (let ((.cse1360 (< 0 .cse1358))) (res .cse1360 (trichotomy .cse1358 0) (farkas 1 .cse1360 1 .cse76))) (let ((.cse1361 (<= 1 .cse365))) (res .cse1361 (total-int .cse365 0) (farkas 1 .cse1361 1 .cse1359)))))) (.cse836 (let ((.cse1355 (< .cse1107 0))) (res .cse1355 (let ((.cse1356 (< 0 .cse1107))) (res .cse1356 (trichotomy .cse1107 0) (farkas 1 .cse1356 1 .cse74))) (let ((.cse1357 (<= 1 .cse1358))) (res .cse1357 (total-int .cse1358 0) (farkas 1 .cse1357 1 .cse1355)))))) (.cse834 (let ((.cse1352 (< .cse1071 0))) (res .cse1352 (let ((.cse1353 (< 0 .cse1071))) (res .cse1353 (trichotomy .cse1071 0) (farkas 1 .cse1353 1 .cse72))) (let ((.cse1354 (<= 1 .cse1107))) (res .cse1354 (total-int .cse1107 0) (farkas 1 .cse1354 1 .cse1352)))))) (.cse1291 (farkas 1 .cse998)) (.cse1290 (symm .cse365 4)) (.cse1307 (farkas 1 .cse841)) (.cse1105 (symm .cse365 1)) (.cse560 (symm .cse228 .cse313)) (.cse1156 (res .cse1350 .cse1351 (and- 1 .cse1350)))) (let ((.cse197 (= .cse1063 0)) (.cse283 (= x .cse282)) (.cse1033 (+ .cse346 (- 1))) (.cse206 (= .cse1069 .cse365)) (.cse178 (= .cse1064 0)) (.cse557 (= .cse229 .cse228)) (.cse327 (= .cse1075 0)) (.cse789 (= .cse346 .cse345)) (.cse1065 (= .cse303 .cse229)) (.cse323 (= .cse1076 0)) (.cse199 (= .cse1090 0)) (.cse662 (= .cse227 .cse226)) (.cse65 (= .cse1091 0)) (.cse881 (= .cse229 .cse302)) (.cse427 (= 115 120)) (.cse542 (= s .cse282)) (.cse141 (= 0 .cse1119)) (.cse113 (= .cse1119 0)) (.cse381 (= 0 .cse1141)) (.cse359 (= .cse1141 0)) (.cse369 (= x .cse239)) (.cse855 (= percent .cse282)) (.cse264 (= .cse1089 0)) (.cse260 (= .cse226 .cse229)) (.cse785 (= .cse365 3)) (.cse295 (= .cse1161 0)) (.cse203 (= .cse1165 0)) (.cse314 (= .cse302 .cse313)) (.cse139 (= 0 .cse1098)) (.cse630 (<= 1 .cse1147)) (.cse143 (= 0 .cse1174)) (.cse131 (= .cse1174 0)) (.cse202 (= .cse1088 0)) (.cse339 (= 0 .cse1189)) (.cse318 (= .cse1189 0)) (.cse411 (= 0 .cse1101)) (.cse595 (= 0 .cse1203)) (.cse276 (= .cse1203 0)) (.cse0 (= .cse1085 0)) (.cse236 (= 0 .cse1085)) (.cse307 (= .cse1212 0)) (.cse154 (= .cse1220 0)) (.cse152 (= 2 .cse226)) (.cse67 (= .cse302 .cse229)) (.cse1177 (= .cse302 .cse228)) (.cse145 (= 2 .cse263)) (.cse137 (<= .cse402 0)) (.cse133 (= .cse1222 0)) (.cse134 (<= .cse1222 0)) (.cse405 (<= 1 .cse402)) (.cse176 (= .cse1230 0)) (.cse177 (= .cse224 .cse229)) (.cse1210 (= percent .cse238)) (.cse290 (< 0 .cse227)) (.cse289 (< .cse227 0)) (.cse66 (= .cse1231 0)) (.cse304 (= .cse302 .cse303)) (.cse361 (= .cse1236 0)) (.cse252 (= .cse365 .cse227)) (.cse250 (= 0 .cse227)) (.cse273 (= .cse227 0)) (.cse83 (= 0 .cse1104)) (.cse81 (= 0 .cse224)) (.cse33 (<= .cse1116 0)) (.cse34 (= .cse225 0)) (.cse1239 (< 0 .cse225)) (.cse1240 (< .cse225 0)) (.cse31 (<= .cse225 0)) (.cse496 (<= 1 .cse225)) (.cse88 (= .cse365 .cse225)) (.cse71 (= .cse1243 0)) (.cse36 (<= .cse1289 0)) (.cse120 (= .cse1247 .cse365)) (.cse63 (= .cse226 0)) (.cse59 (= 0 .cse226)) (.cse37 (= 0 .cse225)) (.cse286 (= .cse225 .cse226)) (.cse182 (= 1 .cse228)) (.cse394 (<= .cse228 0)) (.cse180 (= .cse1254 0)) (.cse391 (<= .cse1254 0)) (.cse1051 (<= 1 .cse228)) (.cse234 (= 0 .cse1265)) (.cse22 (= .cse1265 0)) (.cse201 (= .cse1273 0)) (.cse204 (= 2 .cse302)) (.cse343 (= 2 .cse345)) (.cse333 (<= .cse1281 0)) (.cse329 (= .cse1275 0)) (.cse330 (<= .cse1275 0))) (let-proof ((.cse117 (! (res .cse1348 (res .cse1155 .cse1156 (and- 1 .cse1155)) (res .cse1349 (not+ .cse1349) (=>- .cse1348))) :proves (+ .cse115 + .cse116) :input)) (.cse280 (! (and- 1 .cse115) :proves (- .cse115 + .cse275) :input)) (.cse284 (symm x .cse282)) (.cse298 (! (cong (x_count 3) (x_count .cse365)) :proves (+ .cse205 - .cse53) :cong (.cse313 .cse302))) (.cse465 (! (res .cse559 .cse560 (trans .cse228 .cse313 .cse302)) :proves (+ .cse149 - .cse116 - .cse205) :trans (.cse228 .cse313 .cse302))) (.cse558 (symm .cse229 .cse228)) (.cse790 (symm .cse346 .cse345)) (.cse917 (res .cse1346 .cse1347 (and- 1 .cse1346))) (.cse1066 (symm .cse303 .cse229)) (.cse663 (symm .cse227 .cse226)) (.cse743 (! (res .cse975 .cse1105 (cong (s_count .cse365) (s_count 1))) :proves (+ .cse274 - .cse69) :cong (.cse226 .cse225))) (.cse742 (farkas 1 .cse741)) (.cse543 (symm s .cse282)) (.cse844 (! .cse1307 :proves (- .cse841) :EQ)) (.cse142 (symm 0 .cse1119)) (.cse1113 (res .cse1344 .cse1345 (and- 1 .cse1344))) (.cse262 (! (res .cse1246 .cse1290 (cong (s_count .cse365) (s_count 4))) :proves (+ .cse261 - .cse57) :cong (.cse226 .cse263))) (.cse382 (symm 0 .cse1141)) (.cse1135 (res .cse1342 .cse1343 (and- 1 .cse1342))) (.cse370 (symm x .cse239)) (.cse999 (! .cse1291 :proves (- .cse998) :EQ)) (.cse856 (symm percent .cse282)) (.cse786 (symm .cse365 3)) (.cse315 (symm .cse302 .cse313)) (.cse17 (! (res .cse1322 .cse1323 (let ((.cse1336 (+ fmt1 .cse978 .cse1341 2))) (let ((.cse1324 (<= .cse1336 0))) (res .cse1324 (! (res .cse1325 (let ((.cse1326 (not .cse1324))) (let-proof ((.cse1327 (not+ .cse1326))) (res .cse1326 .cse1327 (let ((.cse1328 (not .cse1326))) (res .cse1328 (res .cse1329 .cse1330 (let ((.cse1331 (= .cse1329 .cse1328))) (res .cse1331 (let ((.cse1332 (= .cse1325 .cse1326))) (res .cse1332 (res .cse1326 (res .cse1325 (=+1 .cse1332) (res .cse1324 .cse1327 (farkas 1 .cse1325 1 .cse1324))) (res .cse1325 (res .cse1333 .cse1334 (res .cse1324 (let ((.cse1335 (<= 1 .cse1336))) (res .cse1335 (total-int .cse1336 0) (farkas 1 .cse1333 1 .cse1335))) (not- .cse1326))) (=+2 .cse1332))) (cong (not .cse1325) (not .cse1326)))) (=-2 .cse1331)))) (not- .cse1328)))))) (res .cse1337 .cse1338 (res .cse1329 (and- 1 .cse1337) .cse1339))) :proves (+ .cse1324) :input) (! (let ((.cse1340 (<= 1 .cse1299))) (res .cse1340 (total-int .cse1299 0) (farkas 1 .cse1324 1 .cse1340 1 .cse1322))) :proves (- .cse1324 + .cse16 - .cse1322) :LA (1 (- 1) 1)))))) :proves (+ .cse16) :rup)) (.cse73 (! (let ((.cse1319 (< .cse1299 0))) (res .cse1319 (let ((.cse1320 (< 0 .cse1299))) (res .cse1320 (trichotomy .cse1299 0) (farkas 1 .cse1320 1 .cse16))) (let ((.cse1321 (<= 1 .cse1071))) (res .cse1321 (total-int .cse1071 0) (farkas 1 .cse1321 1 .cse1319))))) :proves (+ .cse72 + .cse58 - .cse16) :trichotomy)) (.cse75 (! .cse834 :proves (+ .cse74 + .cse54 - .cse72) :trichotomy)) (.cse77 (! .cse836 :proves (+ .cse76 + .cse56 - .cse74) :trichotomy)) (.cse79 (! .cse835 :proves (+ .cse78 + .cse70 - .cse76) :trichotomy)) (.cse631 (total-int .cse1147 0)) (.cse140 (symm 0 .cse1098)) (.cse804 (! .cse632 :proves (- .cse629 + .cse253 + .cse628) :trichotomy)) (.cse633 (! (res .cse553 .cse554 (farkas 1 .cse8 1 .cse553 1 .cse628 1 .cse118 1 .cse39 1 .cse18)) :proves (- .cse8 + .cse30 - .cse628 - .cse118 - .cse39 - .cse18) :LA (1 (- 1) 1 1 1 1))) (.cse312 (! (res .cse1315 .cse1316 (res .cse1317 (and- 1 .cse1315) .cse1318)) :proves (- .cse30) :input)) (.cse1126 (res .cse1313 .cse1314 (and- 1 .cse1313))) (.cse144 (symm 0 .cse1174)) (.cse340 (symm 0 .cse1189)) (.cse412 (symm 0 .cse1101)) (.cse1184 (res .cse1311 .cse1312 (and- 1 .cse1311))) (.cse1130 (res .cse1309 .cse1310 (and- 1 .cse1309))) (.cse596 (symm 0 .cse1203)) (.cse237 (symm 0 .cse1085)) (.cse426 (! (res .cse570 (res .cse1295 .cse1296 (and- 1 .cse1295)) (let ((.cse1308 (= .cse570 .cse425))) (res .cse1308 (res .cse425 (res .cse570 (=+1 .cse1308) (symm 115 s)) (res .cse570 .cse571 (=+2 .cse1308))) (=-2 .cse1308)))) :proves (+ .cse425) :input)) (.cse572 (! (res .cse841 (symm 115 37) .cse1307) :proves (- .cse569) :EQ)) (.cse287 (symm .cse225 .cse226)) (.cse715 (! (res (= .cse365 2) (symm .cse365 2) (cong (s_count .cse365) (s_count 2))) :proves (+ .cse714 - .cse55) :cong (.cse226 .cse192))) (.cse693 (res .cse1282 .cse1283 (and- 1 .cse1282))) (.cse27 (! (res .cse108 .cse109 (! (res .cse1248 .cse1249 (res .cse1304 (res .cse1305 .cse1306 (farkas 1 .cse1248 1 .cse1305)) (farkas 1 .cse108 1 .cse1304))) :proves (- .cse108 + .cse26) :EQ)) :proves (+ .cse26) :rup)) (.cse737 (! (res .cse101 .cse102 (let ((.cse1302 (< 3 .cse1069))) (res .cse1302 (let ((.cse1303 (< .cse1069 3))) (res .cse1303 (trichotomy 3 .cse1069) (farkas 1 .cse101 1 .cse1303))) (farkas 1 .cse26 1 .cse1302)))) :proves (+ .cse174 - .cse26) :EQ)) (.cse349 (! (cong (s_count 4) (s_count .cse365)) :proves (+ .cse348 - .cse57) :cong (.cse263 .cse226))) (.cse1178 (symm .cse302 .cse228)) (.cse406 (total-int .cse402 0)) (.cse104 (! (let ((.cse1298 (= 0 .cse1299))) (res .cse1298 (symm 0 .cse1299) (let ((.cse1300 (< 4 .cse365))) (res .cse1300 (let ((.cse1301 (< .cse365 4))) (res .cse1301 (trichotomy 4 .cse365) (farkas 1 .cse1298 1 .cse1301))) (farkas 1 .cse58 1 .cse1300))))) :proves (+ .cse57 - .cse58) :EQ)) (.cse210 (res .cse389 .cse390 (! (res .cse787 .cse788 (trans .cse313 .cse346 .cse302)) :proves (+ .cse205 - .cse147 - .cse389) :trans (.cse313 .cse346 .cse302)))) (.cse244 (! (res .cse842 (res .cse1295 .cse1296 (and- 0 .cse1295)) (let ((.cse1297 (= .cse842 .cse243))) (res .cse1297 (res .cse243 (res .cse842 (=+1 .cse1297) (symm 37 percent)) (res .cse842 .cse843 (=+2 .cse1297))) (=-2 .cse1297)))) :proves (+ .cse243) :input)) (.cse246 (! (res .cse428 (res .cse1292 .cse1293 (and- 1 .cse1292)) (let ((.cse1294 (= .cse428 .cse245))) (res .cse1294 (res .cse245 (res .cse428 (=+1 .cse1294) (symm 120 x)) (res .cse428 .cse429 (=+2 .cse1294))) (=-2 .cse1294)))) :proves (+ .cse245) :input)) (.cse1211 (symm percent .cse238)) (.cse432 (! (res .cse998 (symm 120 37) .cse1291) :proves (- .cse431) :EQ)) (.cse305 (symm .cse302 .cse303)) (.cse860 (res .cse1284 .cse1285 (and- 1 .cse1284))) (.cse509 (! (res .cse1246 .cse1290 (cong (x_count .cse365) (x_count 4))) :proves (+ .cse508 - .cse57) :cong (.cse302 .cse346))) (.cse288 (symm .cse227 0)) (.cse562 (res .cse678 .cse679 (! (res .cse230 .cse231 (res .cse413 .cse414 (res .cse415 .cse416 (trans .cse226 .cse224 .cse225 .cse192 .cse227)))) :proves (+ .cse52 - .cse678 - .cse9 - .cse40 - .cse50) :trans (.cse226 .cse224 .cse225 .cse192 .cse227)))) (.cse82 (symm 0 .cse224)) (.cse84 (symm 0 .cse1104)) (.cse232 (symm .cse225 0)) (.cse796 (symm 0 .cse365)) (.cse634 (! (cong (x_count 0) (x_count .cse365)) :proves (+ .cse68 - .cse396) :cong (.cse303 .cse302))) (.cse497 (total-int .cse225 0)) (.cse87 (let ((.cse1286 (< .cse1243 0))) (res .cse1286 (let ((.cse1287 (< 0 .cse1243))) (res .cse1287 (trichotomy .cse1243 0) (farkas 1 .cse1287 1 .cse80))) (let ((.cse1288 (<= 1 .cse1289))) (res .cse1288 (total-int .cse1289 0) (farkas 1 .cse1288 1 .cse1286)))))) (.cse1074 (! (res .cse559 .cse560 (res .cse787 .cse788 (trans .cse228 .cse313 .cse346 .cse302))) :proves (+ .cse149 - .cse116 - .cse147 - .cse389) :trans (.cse228 .cse313 .cse346 .cse302))) (.cse91 (! .cse938 :proves (+ .cse69 - .cse70) :EQ)) (.cse1052 (total-int .cse228 0)) (.cse436 (res .cse1284 .cse1285 (and- 0 .cse1284))) (.cse235 (symm 0 .cse1265)) (.cse576 (res .cse1282 .cse1283 (and- 0 .cse1282)))) (let ((.cse331 (<= 1 .cse1275)) (.cse366 (= percent .cse281)) (.cse392 (<= 1 .cse1254)) (.cse85 (<= 1 .cse1243)) (.cse363 (= 0 .cse1236)) (.cse99 (= 0 .cse1231)) (.cse135 (<= 1 .cse1222)) (.cse309 (= 0 .cse1212)) (.cse220 (= 0 .cse1165)) (.cse156 (= 0 .cse1091)) (.cse218 (= 0 .cse1090)) (.cse266 (= 0 .cse1089)) (.cse222 (= 0 .cse1088)) (.cse357 (= percent .cse356)) (.cse341 (= 0 .cse1076)) (.cse335 (= 0 .cse1075)) (.cse399 (= x .cse356)) (.cse379 (<= 1 .cse1033)) (.cse376 (<= .cse1033 0)) (.cse383 (= 0 .cse1064)) (.cse337 (= 0 .cse1063))) (let-proof ((.cse332 (total-int .cse1275 0)) (.cse334 (! (let ((.cse1278 (< .cse1275 0))) (res .cse1278 (let ((.cse1279 (< 0 .cse1275))) (res .cse1279 (trichotomy .cse1275 0) (farkas 1 .cse1279 1 .cse330))) (let ((.cse1280 (<= 1 .cse1281))) (res .cse1280 (total-int .cse1281 0) (farkas 1 .cse1280 1 .cse1278))))) :proves (+ .cse333 + .cse329 - .cse330) :trichotomy)) (.cse344 (! (let ((.cse1274 (= 0 .cse1275))) (res .cse1274 (symm 0 .cse1275) (let ((.cse1276 (< 2 .cse345))) (res .cse1276 (let ((.cse1277 (< .cse345 2))) (res .cse1277 (trichotomy 2 .cse345) (farkas 1 .cse1274 1 .cse1277))) (farkas 1 .cse329 1 .cse1276))))) :proves (+ .cse343 - .cse329) :EQ)) (.cse217 (! (let ((.cse1270 (= .cse302 2))) (res .cse1270 (symm .cse302 2) (let ((.cse1271 (< .cse1273 0))) (res .cse1271 (let ((.cse1272 (< 0 .cse1273))) (res .cse1272 (trichotomy .cse1273 0) (farkas 1 .cse1270 1 .cse1272))) (farkas 1 .cse204 1 .cse1271))))) :proves (- .cse204 + .cse201) :EQ)) (.cse423 (! (res .cse1268 (res .cse575 .cse576 (and- 1 .cse575)) (res .cse1269 (not+ .cse1269) (=>- .cse1268))) :proves (+ .cse422 + .cse18) :input)) (.cse424 (! (and- 1 .cse422) :proves (- .cse422 + .cse107) :input)) (.cse367 (symm percent .cse281)) (.cse421 (! (res .cse1259 (res .cse419 (and+ .cse419) (res .cse1260 (res .cse435 .cse436 (and- 0 .cse435)) (=>- .cse1260))) (let ((.cse1261 (= .cse1259 .cse22))) (res .cse1261 (res .cse22 (res .cse1259 (=+1 .cse1261) (let ((.cse1262 (= 1 .cse303))) (res .cse1262 (symm 1 .cse303) (let ((.cse1263 (< .cse1265 0))) (res .cse1263 (let ((.cse1264 (< 0 .cse1265))) (res .cse1264 (trichotomy .cse1265 0) (farkas 1 .cse1259 1 .cse1264))) (farkas 1 .cse1262 1 .cse1263)))))) (res .cse1259 (res .cse234 .cse235 (let ((.cse1266 (< .cse303 1))) (res .cse1266 (let ((.cse1267 (< 1 .cse303))) (res .cse1267 (trichotomy .cse303 1) (farkas 1 .cse22 1 .cse1267))) (farkas 1 .cse234 1 .cse1266)))) (=+2 .cse1261))) (=-2 .cse1261)))) :proves (- .cse418 + .cse22 - .cse105) :input)) (.cse393 (total-int .cse1254 0)) (.cse395 (! (let ((.cse1257 (< .cse1254 0))) (res .cse1257 (let ((.cse1258 (< 0 .cse1254))) (res .cse1258 (trichotomy .cse1254 0) (farkas 1 .cse1258 1 .cse391))) (res .cse1051 .cse1052 (farkas 1 .cse1051 1 .cse1257)))) :proves (+ .cse394 + .cse180 - .cse391) :trichotomy)) (.cse183 (! (let ((.cse1253 (= 0 .cse1254))) (res .cse1253 (symm 0 .cse1254) (let ((.cse1255 (< 1 .cse228))) (res .cse1255 (let ((.cse1256 (< .cse228 1))) (res .cse1256 (trichotomy 1 .cse228) (farkas 1 .cse1253 1 .cse1256))) (farkas 1 .cse180 1 .cse1255))))) :proves (+ .cse182 - .cse180) :EQ)) (.cse371 (res .cse69 .cse91 (res .cse286 (! (cong (s_count 1) (s_count .cse365)) :proves (+ .cse286 - .cse69) :cong (.cse225 .cse226)) (! (trans 0 .cse225 .cse226) :proves (+ .cse59 - .cse37 - .cse286) :trans (0 .cse225 .cse226))))) (.cse64 (! (res .cse63 (symm .cse226 0) (let ((.cse1251 (< .cse226 0))) (res .cse1251 (let ((.cse1252 (< 0 .cse226))) (res .cse1252 (trichotomy .cse226 0) (farkas 1 .cse63 1 .cse1252))) (farkas 1 .cse59 1 .cse1251)))) :proves (- .cse59 + .cse63) :EQ)) (.cse121 (! (res .cse1248 .cse1249 (trans .cse1247 4 .cse365)) :proves (+ .cse120 - .cse108 - .cse57) :trans (.cse1247 4 .cse365))) (.cse150 (res .cse1246 (! (res (= .cse365 .cse1247) (symm .cse365 .cse1247) (res .cse1248 .cse1249 (trans .cse365 .cse1247 4))) :proves (+ .cse1246 - .cse120 - .cse108) :trans (.cse365 .cse1247 4)) (res .cse389 (! (res .cse57 (symm 4 .cse365) .cse1250) :proves (+ .cse389 - .cse1246) :cong (.cse346 .cse302)) .cse1074))) (.cse86 (total-int .cse1243 0)) (.cse417 (! .cse87 :proves (- .cse80 + .cse71 + .cse36) :trichotomy)) (.cse89 (! (let ((.cse1242 (= 0 .cse1243))) (res .cse1242 (symm 0 .cse1243) (let ((.cse1244 (< .cse365 .cse225))) (res .cse1244 (let ((.cse1245 (< .cse225 .cse365))) (res .cse1245 (trichotomy .cse365 .cse225) (farkas 1 .cse71 1 .cse1245))) (farkas 1 .cse1242 1 .cse1244))))) :proves (+ .cse88 - .cse71) :EQ)) (.cse32 (! (res .cse496 .cse497 (farkas 1 .cse496 1 .cse8 1 .cse18)) :proves (+ .cse31 - .cse8 - .cse18) :LA ((- 1) 1 1))) (.cse35 (! (res .cse1240 (res .cse1239 (trichotomy .cse225 0) (farkas 1 .cse1239 1 .cse31)) (let ((.cse1241 (<= 1 .cse1116))) (res .cse1241 (total-int .cse1116 0) (farkas 1 .cse1241 1 .cse1240)))) :proves (+ .cse33 + .cse34 - .cse31) :trichotomy)) (.cse38 (! (res .cse37 (symm 0 .cse225) (res .cse1239 (res .cse1240 (trichotomy 0 .cse225) (farkas 1 .cse37 1 .cse1240)) (farkas 1 .cse34 1 .cse1239))) :proves (+ .cse37 - .cse34) :EQ)) (.cse90 (res .cse396 (! (res (= .cse225 .cse365) (symm .cse225 .cse365) (trans 0 .cse225 .cse365)) :proves (+ .cse396 - .cse37 - .cse88) :trans (0 .cse225 .cse365)) .cse634)) (.cse397 (! (res .cse794 (res .cse34 .cse232 (trans .cse365 .cse225 0)) .cse796) :proves (+ .cse396 - .cse88 - .cse37) :trans (.cse365 .cse225 0))) (.cse62 (! (res .cse81 .cse82 (res .cse83 .cse84 (farkas 1 .cse83 1 .cse33 1 .cse81))) :proves (- .cse8 - .cse33 - .cse18) :LA ((- 1) 1 (- 1)))) (.cse311 (! (res .cse553 .cse554 (farkas 1 .cse8 1 .cse553 1 .cse18 1 .cse36)) :proves (- .cse8 + .cse30 - .cse18 - .cse36) :LA (1 (- 1) 1 1))) (.cse269 (res .cse396 (! (res .cse794 (res .cse273 .cse288 (trans .cse365 .cse227 0)) .cse796) :proves (+ .cse396 - .cse252 - .cse250) :trans (.cse365 .cse227 0)) .cse562)) (.cse362 (res .cse508 .cse509 (! (res .cse389 (symm .cse346 .cse302) (let ((.cse1237 (< .cse1236 0))) (res .cse1237 (let ((.cse1238 (< 0 .cse1236))) (res .cse1238 (trichotomy .cse1236 0) (farkas 1 .cse389 1 .cse1238))) (farkas 1 .cse508 1 .cse1237)))) :proves (- .cse508 + .cse361) :EQ))) (.cse364 (symm 0 .cse1236)) (.cse3 (! (res .cse1234 (res .cse859 .cse860 (and- 1 .cse859)) (res .cse1235 (not+ .cse1235) (=>- .cse1234))) :proves (+ .cse2 + .cse1) :input)) (.cse5 (! (and- 0 .cse2) :proves (- .cse2 + .cse4) :input)) (.cse93 (! (res .cse304 .cse305 (let ((.cse1232 (< .cse1231 0))) (res .cse1232 (let ((.cse1233 (< 0 .cse1231))) (res .cse1233 (trichotomy .cse1231 0) (farkas 1 .cse68 1 .cse1233))) (farkas 1 .cse304 1 .cse1232)))) :proves (- .cse68 + .cse66) :EQ)) (.cse100 (symm 0 .cse1231)) (.cse293 (farkas 1 .cse250 1 .cse289)) (.cse292 (farkas 1 .cse273 1 .cse290)) (.cse291 (trichotomy .cse227 0)) (.cse368 (! (res .cse243 .cse244 (res .cse245 .cse246 (res .cse431 (! (res .cse1210 .cse1211 (res .cse428 .cse429 (trans 37 percent .cse238 x 120))) :proves (+ .cse431 - .cse243 - .cse43 - .cse320 - .cse245) :trans (37 percent .cse238 x 120)) .cse432))) :proves (- .cse43 - .cse320) :rup)) (.cse233 (! (let ((.cse1227 (= .cse229 .cse224))) (res .cse1227 (symm .cse229 .cse224) (let ((.cse1228 (< .cse1230 0))) (res .cse1228 (let ((.cse1229 (< 0 .cse1230))) (res .cse1229 (trichotomy .cse1230 0) (farkas 1 .cse1227 1 .cse1229))) (farkas 1 .cse177 1 .cse1228))))) :proves (- .cse177 + .cse176) :EQ)) (.cse297 (res .cse57 .cse104 .cse210)) (.cse136 (total-int .cse1222 0)) (.cse138 (! (let ((.cse1225 (< .cse1222 0))) (res .cse1225 (let ((.cse1226 (< 0 .cse1222))) (res .cse1226 (trichotomy .cse1222 0) (farkas 1 .cse1226 1 .cse134))) (res .cse405 .cse406 (farkas 1 .cse405 1 .cse1225)))) :proves (+ .cse137 + .cse133 - .cse134) :trichotomy)) (.cse146 (! (let ((.cse1221 (= 0 .cse1222))) (res .cse1221 (symm 0 .cse1222) (let ((.cse1223 (< 2 .cse263))) (res .cse1223 (let ((.cse1224 (< .cse263 2))) (res .cse1224 (trichotomy 2 .cse263) (farkas 1 .cse1221 1 .cse1224))) (farkas 1 .cse133 1 .cse1223))))) :proves (+ .cse145 - .cse133) :EQ)) (.cse151 (! (res .cse1177 .cse1178 (trans .cse302 .cse228 .cse229)) :proves (+ .cse67 - .cse149 - .cse111) :trans (.cse302 .cse228 .cse229))) (.cse153 (res .cse348 .cse349 (! (trans 2 .cse263 .cse226) :proves (+ .cse152 - .cse145 - .cse348) :trans (2 .cse263 .cse226)))) (.cse155 (! (let ((.cse1217 (= .cse226 2))) (res .cse1217 (symm .cse226 2) (let ((.cse1218 (< .cse1220 0))) (res .cse1218 (let ((.cse1219 (< 0 .cse1220))) (res .cse1219 (trichotomy .cse1220 0) (farkas 1 .cse1217 1 .cse1219))) (farkas 1 .cse152 1 .cse1218))))) :proves (- .cse152 + .cse154) :EQ)) (.cse175 (! (res .cse26 .cse27 .cse737) :proves (+ .cse174) :rup)) (.cse11 (! (res .cse1215 (res .cse692 .cse693 (and- 1 .cse692)) (res .cse1216 (not+ .cse1216) (=>- .cse1215))) :proves (+ .cse10 + .cse9) :input)) (.cse12 (! (and- 0 .cse10) :proves (- .cse10 + .cse4) :input)) (.cse285 (res .cse714 .cse715 (! (trans .cse226 .cse192 .cse225) :proves (+ .cse274 - .cse714 - .cse40) :trans (.cse226 .cse192 .cse225)))) (.cse308 (! (res .cse286 .cse287 (let ((.cse1213 (< .cse1212 0))) (res .cse1213 (let ((.cse1214 (< 0 .cse1212))) (res .cse1214 (trichotomy .cse1212 0) (farkas 1 .cse286 1 .cse1214))) (farkas 1 .cse274 1 .cse1213)))) :proves (- .cse274 + .cse307) :EQ)) (.cse310 (symm 0 .cse1212)) (.cse165 (! (res .cse243 .cse244 (res .cse425 .cse426 (res .cse569 (! (res .cse570 .cse571 (res .cse1210 .cse1211 (trans 37 percent .cse238 s 115))) :proves (+ .cse569 - .cse243 - .cse43 - .cse47 - .cse425) :trans (37 percent .cse238 s 115)) .cse572))) :proves (- .cse43 - .cse47) :rup)) (.cse301 (! (res .cse236 .cse237 (let ((.cse1208 (< .cse229 .cse303))) (res .cse1208 (let ((.cse1209 (< .cse303 .cse229))) (res .cse1209 (trichotomy .cse229 .cse303) (farkas 1 .cse0 1 .cse1209))) (farkas 1 .cse236 1 .cse1208)))) :proves (+ .cse1 - .cse0) :EQ)) (.cse60 (! (res .cse83 .cse84 (let ((.cse1206 (< .cse225 .cse224))) (res .cse1206 (let ((.cse1207 (< .cse224 .cse225))) (res .cse1207 (trichotomy .cse225 .cse224) (farkas 1 .cse8 1 .cse1207))) (farkas 1 .cse83 1 .cse1206)))) :proves (+ .cse9 - .cse8) :EQ)) (.cse277 (! (res .cse1196 (res .cse49 (and+ .cse49) (res .cse1197 (res .cse1129 .cse1130 (and- 0 .cse1129)) (=>- .cse1197))) (let ((.cse1198 (= .cse1196 .cse276))) (res .cse1198 (res .cse276 (res .cse1196 (=+1 .cse1198) (let ((.cse1199 (= .cse1200 .cse227))) (res .cse1199 (symm .cse1200 .cse227) (let ((.cse1201 (< .cse1203 0))) (res .cse1201 (let ((.cse1202 (< 0 .cse1203))) (res .cse1202 (trichotomy .cse1203 0) (farkas 1 .cse1196 1 .cse1202))) (farkas 1 .cse1199 1 .cse1201)))))) (res .cse1196 (res .cse595 .cse596 (let ((.cse1204 (< .cse227 .cse1200))) (res .cse1204 (let ((.cse1205 (< .cse1200 .cse227))) (res .cse1205 (trichotomy .cse227 .cse1200) (farkas 1 .cse276 1 .cse1205))) (farkas 1 .cse595 1 .cse1204)))) (=+2 .cse1198))) (=-2 .cse1198)))) :proves (- .cse48 + .cse276 - .cse248) :input)) (.cse112 (! (res .cse1194 (res .cse1183 .cse1184 (and- 1 .cse1183)) (res .cse1195 (not+ .cse1195) (=>- .cse1194))) :proves (+ .cse110 + .cse111) :input)) (.cse242 (! (res .cse411 .cse412 (let ((.cse1192 (< .cse192 .cse225))) (res .cse1192 (let ((.cse1193 (< .cse225 .cse192))) (res .cse1193 (trichotomy .cse192 .cse225) (farkas 1 .cse39 1 .cse1193))) (farkas 1 .cse411 1 .cse1192)))) :proves (+ .cse40 - .cse39) :EQ)) (.cse316 (! (and- 0 .cse110) :proves (- .cse110 + .cse43) :input)) (.cse317 (! (and- 1 .cse110) :proves (- .cse110 + .cse294) :input)) (.cse319 (! (res .cse1181 (res .cse110 (and+ .cse110) (res .cse1182 (res .cse1183 .cse1184 (and- 0 .cse1183)) (=>- .cse1182))) (let ((.cse1185 (= .cse1181 .cse318))) (res .cse1185 (res .cse318 (res .cse1181 (=+1 .cse1185) (let ((.cse1186 (= .cse879 .cse228))) (res .cse1186 (symm .cse879 .cse228) (let ((.cse1187 (< .cse1189 0))) (res .cse1187 (let ((.cse1188 (< 0 .cse1189))) (res .cse1188 (trichotomy .cse1189 0) (farkas 1 .cse1181 1 .cse1188))) (farkas 1 .cse1186 1 .cse1187)))))) (res .cse1181 (res .cse339 .cse340 (let ((.cse1190 (< .cse228 .cse879))) (res .cse1190 (let ((.cse1191 (< .cse879 .cse228))) (res .cse1191 (trichotomy .cse228 .cse879) (farkas 1 .cse318 1 .cse1191))) (farkas 1 .cse339 1 .cse1190)))) (=+2 .cse1185))) (=-2 .cse1185)))) :proves (- .cse43 - .cse294 + .cse318) :input)) (.cse216 (! (res .cse1177 .cse1178 (let ((.cse1179 (< .cse1088 0))) (res .cse1179 (let ((.cse1180 (< 0 .cse1088))) (res .cse1180 (trichotomy .cse1088 0) (farkas 1 .cse149 1 .cse1180))) (farkas 1 .cse1177 1 .cse1179)))) :proves (- .cse149 + .cse202) :EQ)) (.cse132 (! (res .cse1168 (res .cse123 (and+ .cse123) (res .cse1169 (res .cse1125 .cse1126 (and- 0 .cse1125)) (=>- .cse1169))) (let ((.cse1170 (= .cse1168 .cse131))) (res .cse1170 (res .cse131 (res .cse1168 (=+1 .cse1170) (let ((.cse1171 (= .cse639 .cse263))) (res .cse1171 (symm .cse639 .cse263) (let ((.cse1172 (< .cse1174 0))) (res .cse1172 (let ((.cse1173 (< 0 .cse1174))) (res .cse1173 (trichotomy .cse1174 0) (farkas 1 .cse1168 1 .cse1173))) (farkas 1 .cse1171 1 .cse1172)))))) (res .cse1168 (res .cse143 .cse144 (let ((.cse1175 (< .cse263 .cse639))) (res .cse1175 (let ((.cse1176 (< .cse639 .cse263))) (res .cse1176 (trichotomy .cse263 .cse639) (farkas 1 .cse131 1 .cse1176))) (farkas 1 .cse143 1 .cse1175)))) (=+2 .cse1170))) (=-2 .cse1170)))) :proves (- .cse128 + .cse131 - .cse125) :input)) (.cse171 (res .cse714 .cse715 (! (res .cse415 .cse416 (trans .cse226 .cse192 .cse227)) :proves (+ .cse52 - .cse714 - .cse50) :trans (.cse226 .cse192 .cse227)))) (.cse162 (! (and- 0 .cse49) :proves (- .cse49 + .cse48) :input)) (.cse254 (! (res .cse16 .cse17 (res .cse30 (res .cse628 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse78 .cse79 (res .cse629 (! (res .cse630 .cse631 (res .cse81 .cse82 (res .cse411 .cse412 (res .cse139 .cse140 (res .cse83 .cse84 (farkas 1 .cse83 1 .cse139 1 .cse411 1 .cse81 1 .cse630 1 .cse78)))))) :proves (- .cse8 - .cse118 - .cse39 - .cse18 + .cse629 - .cse78) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) .cse804))))) .cse633) .cse312)) :proves (- .cse39 + .cse58 + .cse54 + .cse253 - .cse118 + .cse70 - .cse18 - .cse8 + .cse56) :rup)) (.cse215 (! (res .cse314 .cse315 (let ((.cse1166 (< .cse1165 0))) (res .cse1166 (let ((.cse1167 (< 0 .cse1165))) (res .cse1167 (trichotomy .cse1165 0) (farkas 1 .cse205 1 .cse1167))) (farkas 1 .cse314 1 .cse1166)))) :proves (- .cse205 + .cse203) :EQ)) (.cse221 (symm 0 .cse1165)) (.cse163 (! (and- 0 .cse115) :proves (- .cse115 + .cse48) :input)) (.cse296 (! (res .cse1153 (res .cse115 (and+ .cse115) (res .cse1154 (res .cse1155 .cse1156 (and- 0 .cse1155)) (=>- .cse1154))) (let ((.cse1157 (= .cse1153 .cse295))) (res .cse1157 (res .cse295 (res .cse1153 (=+1 .cse1157) (let ((.cse1158 (= .cse1055 .cse313))) (res .cse1158 (symm .cse1055 .cse313) (let ((.cse1159 (< .cse1161 0))) (res .cse1159 (let ((.cse1160 (< 0 .cse1161))) (res .cse1160 (trichotomy .cse1161 0) (farkas 1 .cse1153 1 .cse1160))) (farkas 1 .cse1158 1 .cse1159)))))) (res .cse1153 (let ((.cse1162 (= 0 .cse1161))) (res .cse1162 (symm 0 .cse1161) (let ((.cse1163 (< .cse313 .cse1055))) (res .cse1163 (let ((.cse1164 (< .cse1055 .cse313))) (res .cse1164 (trichotomy .cse313 .cse1055) (farkas 1 .cse295 1 .cse1164))) (farkas 1 .cse1162 1 .cse1163))))) (=+2 .cse1157))) (=-2 .cse1157)))) :proves (- .cse275 - .cse48 + .cse295) :input)) (.cse173 (! (res .cse785 .cse786 (cong (s_count .cse365) (s_count 3))) :proves (+ .cse52 - .cse53) :cong (.cse226 .cse227))) (.cse265 (! (let ((.cse1150 (= .cse229 .cse226))) (res .cse1150 (symm .cse229 .cse226) (let ((.cse1151 (< .cse1089 0))) (res .cse1151 (let ((.cse1152 (< 0 .cse1089))) (res .cse1152 (trichotomy .cse1089 0) (farkas 1 .cse1150 1 .cse1152))) (farkas 1 .cse260 1 .cse1151))))) :proves (- .cse260 + .cse264) :EQ)) (.cse268 (! (let ((.cse1146 (= 0 .cse1147))) (res .cse1146 (symm 0 .cse1147) (let ((.cse1148 (< .cse365 .cse227))) (res .cse1148 (let ((.cse1149 (< .cse227 .cse365))) (res .cse1149 (trichotomy .cse365 .cse227) (farkas 1 .cse253 1 .cse1149))) (farkas 1 .cse1146 1 .cse1148))))) :proves (+ .cse252 - .cse253) :EQ)) (.cse129 (! (and- 0 .cse123) :proves (- .cse123 + .cse128) :input)) (.cse299 (! (res .cse855 .cse856 (trans .cse239 percent .cse282 x)) :proves (+ .cse294 - .cse48 - .cse128 - .cse275) :trans (.cse239 percent .cse282 x))) (.cse300 (! (res .cse243 .cse244 (res .cse245 .cse246 (res .cse998 (! (res .cse842 .cse843 (res .cse369 .cse370 (trans 120 x .cse239 percent 37))) :proves (+ .cse998 - .cse245 - .cse294 - .cse48 - .cse243) :trans (120 x .cse239 percent 37)) .cse999))) :proves (- .cse48 - .cse294) :rup)) (.cse148 (! (res .cse1144 (res .cse1134 .cse1135 (and- 1 .cse1134)) (res .cse1145 (not+ .cse1145) (=>- .cse1144))) :proves (+ .cse130 + .cse147) :input)) (.cse208 (! (and- 0 .cse130) :proves (- .cse130 + .cse128) :input)) (.cse158 (! (and- 1 .cse130) :proves (- .cse130 + .cse127) :input)) (.cse360 (! (res .cse1132 (res .cse130 (and+ .cse130) (res .cse1133 (res .cse1134 .cse1135 (and- 0 .cse1134)) (=>- .cse1133))) (let ((.cse1136 (= .cse1132 .cse359))) (res .cse1136 (res .cse359 (res .cse1132 (=+1 .cse1136) (let ((.cse1137 (= .cse1138 .cse346))) (res .cse1137 (symm .cse1138 .cse346) (let ((.cse1139 (< .cse1141 0))) (res .cse1139 (let ((.cse1140 (< 0 .cse1141))) (res .cse1140 (trichotomy .cse1141 0) (farkas 1 .cse1132 1 .cse1140))) (farkas 1 .cse1137 1 .cse1139)))))) (res .cse1132 (res .cse381 .cse382 (let ((.cse1142 (< .cse346 .cse1138))) (res .cse1142 (let ((.cse1143 (< .cse1138 .cse346))) (res .cse1143 (trichotomy .cse346 .cse1138) (farkas 1 .cse359 1 .cse1143))) (farkas 1 .cse381 1 .cse1142)))) (=+2 .cse1136))) (=-2 .cse1136)))) :proves (- .cse127 + .cse359 - .cse128) :input)) (.cse51 (! (res .cse1128 (res .cse1129 .cse1130 (and- 1 .cse1129)) (res .cse1131 (not+ .cse1131) (=>- .cse1128))) :proves (+ .cse49 + .cse50) :input)) (.cse124 (! (res .cse1124 (res .cse1125 .cse1126 (and- 1 .cse1125)) (res .cse1127 (not+ .cse1127) (=>- .cse1124))) :proves (+ .cse123 + .cse122) :input)) (.cse126 (! (and- 1 .cse123) :proves (- .cse123 + .cse125) :input)) (.cse160 (res .cse261 .cse262 (! (trans .cse226 .cse263 .cse227) :proves (+ .cse52 - .cse261 - .cse122) :trans (.cse226 .cse263 .cse227)))) (.cse42 (! (res .cse1122 (res .cse1112 .cse1113 (and- 1 .cse1112)) (res .cse1123 (not+ .cse1123) (=>- .cse1122))) :proves (+ .cse41 + .cse40) :input)) (.cse44 (! (and- 0 .cse41) :proves (- .cse41 + .cse43) :input)) (.cse46 (! (and- 1 .cse41) :proves (- .cse41 + .cse45) :input)) (.cse114 (! (res .cse1110 (res .cse41 (and+ .cse41) (res .cse1111 (res .cse1112 .cse1113 (and- 0 .cse1112)) (=>- .cse1111))) (let ((.cse1114 (= .cse1110 .cse113))) (res .cse1114 (res .cse113 (res .cse1110 (=+1 .cse1114) (let ((.cse1115 (= .cse1116 .cse192))) (res .cse1115 (symm .cse1116 .cse192) (let ((.cse1117 (< .cse1119 0))) (res .cse1117 (let ((.cse1118 (< 0 .cse1119))) (res .cse1118 (trichotomy .cse1119 0) (farkas 1 .cse1110 1 .cse1118))) (farkas 1 .cse1115 1 .cse1117)))))) (res .cse1110 (res .cse141 .cse142 (let ((.cse1120 (< .cse192 .cse1116))) (res .cse1120 (let ((.cse1121 (< .cse1116 .cse192))) (res .cse1121 (trichotomy .cse192 .cse1116) (farkas 1 .cse113 1 .cse1121))) (farkas 1 .cse141 1 .cse1120)))) (=+2 .cse1114))) (=-2 .cse1114)))) :proves (+ .cse113 - .cse45 - .cse43) :input)) (.cse271 (! (and- 1 .cse49) :proves (- .cse49 + .cse248) :input)) (.cse272 (! (res .cse243 .cse244 (res .cse425 .cse426 (res .cse841 (! (res .cse842 .cse843 (res .cse542 .cse543 (trans 115 s .cse282 percent 37))) :proves (+ .cse841 - .cse425 - .cse248 - .cse128 - .cse243) :trans (115 s .cse282 percent 37)) .cse844))) :proves (- .cse248 - .cse128) :rup)) (.cse170 (! (let ((.cse1106 (= 0 .cse1107))) (res .cse1106 (symm 0 .cse1107) (let ((.cse1108 (< 2 .cse365))) (res .cse1108 (let ((.cse1109 (< .cse365 2))) (res .cse1109 (trichotomy 2 .cse365) (farkas 1 .cse1106 1 .cse1109))) (farkas 1 .cse56 1 .cse1108))))) :proves (+ .cse55 - .cse56) :EQ)) (.cse211 (! (cong (x_count 2) (x_count .cse365)) :proves (+ .cse149 - .cse55) :cong (.cse228 .cse302))) (.cse430 (! (res .cse741 (symm 120 115) .cse742) :proves (- .cse427) :EQ)) (.cse92 (! (res .cse975 .cse1105 (cong (x_count .cse365) (x_count 1))) :proves (+ .cse67 - .cse69) :cong (.cse302 .cse229))) (.cse270 (res .cse274 .cse743 (! (res .cse413 .cse414 (res .cse415 .cse416 (trans .cse226 .cse225 .cse192 .cse227))) :proves (+ .cse52 - .cse274 - .cse40 - .cse50) :trans (.cse226 .cse225 .cse192 .cse227)))) (.cse13 (! (res .cse230 .cse231 (let ((.cse1102 (< .cse1104 0))) (res .cse1102 (let ((.cse1103 (< 0 .cse1104))) (res .cse1103 (trichotomy .cse1104 0) (farkas 1 .cse9 1 .cse1103))) (farkas 1 .cse230 1 .cse1102)))) :proves (- .cse9 + .cse8) :EQ)) (.cse166 (! (res .cse413 .cse414 (let ((.cse1099 (< .cse1101 0))) (res .cse1099 (let ((.cse1100 (< 0 .cse1101))) (res .cse1100 (trichotomy .cse1101 0) (farkas 1 .cse40 1 .cse1100))) (farkas 1 .cse413 1 .cse1099)))) :proves (- .cse40 + .cse39) :EQ)) (.cse119 (! (res .cse415 .cse416 (let ((.cse1096 (< .cse1098 0))) (res .cse1096 (let ((.cse1097 (< 0 .cse1098))) (res .cse1097 (trichotomy .cse1098 0) (farkas 1 .cse50 1 .cse1097))) (farkas 1 .cse415 1 .cse1096)))) :proves (- .cse50 + .cse118) :EQ)) (.cse94 (! (res .cse881 (symm .cse229 .cse302) (let ((.cse1094 (< .cse1091 0))) (res .cse1094 (let ((.cse1095 (< 0 .cse1091))) (res .cse1095 (trichotomy .cse1091 0) (farkas 1 .cse881 1 .cse1095))) (farkas 1 .cse67 1 .cse1094)))) :proves (- .cse67 + .cse65) :EQ)) (.cse200 (! (res .cse662 .cse663 (let ((.cse1092 (< .cse1090 0))) (res .cse1092 (let ((.cse1093 (< 0 .cse1090))) (res .cse1093 (trichotomy .cse1090 0) (farkas 1 .cse662 1 .cse1093))) (farkas 1 .cse52 1 .cse1092)))) :proves (- .cse52 + .cse199) :EQ)) (.cse219 (symm 0 .cse1090)) (.cse157 (symm 0 .cse1091)) (.cse223 (symm 0 .cse1088)) (.cse267 (symm 0 .cse1089)) (.cse358 (symm percent .cse356)) (.cse324 (! (res .cse787 .cse788 (let ((.cse1086 (< .cse1076 0))) (res .cse1086 (let ((.cse1087 (< 0 .cse1076))) (res .cse1087 (trichotomy .cse1076 0) (farkas 1 .cse147 1 .cse1087))) (farkas 1 .cse787 1 .cse1086)))) :proves (- .cse147 + .cse323) :EQ)) (.cse355 (! (and- 0 .cse322) :proves (- .cse322 + .cse321) :input)) (.cse7 (! (res .cse1065 .cse1066 (let ((.cse1083 (< .cse1085 0))) (res .cse1083 (let ((.cse1084 (< 0 .cse1085))) (res .cse1084 (trichotomy .cse1085 0) (farkas 1 .cse1 1 .cse1084))) (farkas 1 .cse1065 1 .cse1083)))) :proves (- .cse1 + .cse0) :EQ)) (.cse326 (! (res .cse1081 (res .cse916 .cse917 (and- 1 .cse916)) (res .cse1082 (not+ .cse1082) (=>- .cse1081))) :proves (+ .cse322 + .cse325) :input)) (.cse328 (! (res .cse789 .cse790 (let ((.cse1079 (< .cse1075 0))) (res .cse1079 (let ((.cse1080 (< 0 .cse1075))) (res .cse1080 (trichotomy .cse1075 0) (farkas 1 .cse325 1 .cse1080))) (farkas 1 .cse789 1 .cse1079)))) :proves (- .cse325 + .cse327) :EQ)) (.cse179 (! (res .cse557 .cse558 (let ((.cse1077 (< .cse1064 0))) (res .cse1077 (let ((.cse1078 (< 0 .cse1064))) (res .cse1078 (trichotomy .cse1064 0) (farkas 1 .cse111 1 .cse1078))) (farkas 1 .cse557 1 .cse1077)))) :proves (- .cse111 + .cse178) :EQ)) (.cse336 (symm 0 .cse1075)) (.cse342 (symm 0 .cse1076)) (.cse279 (res .cse389 .cse390 .cse1074)) (.cse172 (! (let ((.cse1070 (= 0 .cse1071))) (res .cse1070 (symm 0 .cse1071) (let ((.cse1072 (< 3 .cse365))) (res .cse1072 (let ((.cse1073 (< .cse365 3))) (res .cse1073 (trichotomy 3 .cse365) (farkas 1 .cse1070 1 .cse1073))) (farkas 1 .cse54 1 .cse1072))))) :proves (+ .cse53 - .cse54) :EQ)) (.cse212 (! (res (= .cse1069 3) (symm .cse1069 3) (trans .cse1069 3 .cse365)) :proves (+ .cse206 - .cse174 - .cse53) :trans (.cse1069 3 .cse365))) (.cse213 (! (res .cse731 .cse732 (res .cse24 .cse25 (res .cse733 (res .cse734 .cse735 (res .cse720 (res .cse26 .cse736 (res .cse174 .cse737 (res .cse53 (! (trans 3 .cse1069 .cse365) :proves (+ .cse53 - .cse174 - .cse206) :trans (3 .cse1069 .cse365)) (res .cse205 .cse298 .cse465)))) .cse728)) .cse739))) :proves (+ .cse149 - .cse206 - .cse116) :rup)) (.cse400 (symm x .cse356)) (.cse380 (total-int .cse1033 0)) (.cse249 (res .cse115 .cse117 (res .cse275 .cse280 (res .cse998 (! (res .cse283 .cse284 (res .cse842 .cse843 (trans 120 x .cse282 percent 37))) :proves (+ .cse998 - .cse245 - .cse275 - .cse128 - .cse243) :trans (120 x .cse282 percent 37)) .cse999)))) (.cse198 (! (res .cse559 .cse560 (let ((.cse1067 (< .cse1063 0))) (res .cse1067 (let ((.cse1068 (< 0 .cse1063))) (res .cse1068 (trichotomy .cse1063 0) (farkas 1 .cse116 1 .cse1068))) (farkas 1 .cse559 1 .cse1067)))) :proves (- .cse116 + .cse197) :EQ)) (.cse306 (res .cse1065 .cse1066 (trans .cse302 .cse303 .cse229))) (.cse338 (symm 0 .cse1063)) (.cse384 (symm 0 .cse1064))) (let-proof ((.cse420 (! (res .cse433 (! (res .cse434 (res .cse435 .cse436 (and- 1 .cse435)) (res .cse437 (not+ .cse437) (=>- .cse434))) :proves (+ .cse419 + .cse433) :input) (! (res .cse14 .cse15 (res .cse174 .cse175 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (let-proof ((.cse462 (! (res .cse234 .cse235 (farkas 1 .cse234 1 .cse433)) :proves (- .cse22 - .cse433) :LA ((- 1) 1)))) (res .cse22 (let ((.cse1046 (+ fmt1 .cse1062 .cse978 (- 2)))) (let ((.cse548 (<= .cse1046 0)) (.cse1061 (+ fmt1 .cse1062 .cse978 (- 1)))) (let ((.cse479 (= .cse1046 0)) (.cse547 (<= .cse1061 0))) (let-proof ((.cse676 (let ((.cse1058 (< .cse1046 0))) (res .cse1058 (let ((.cse1059 (< 0 .cse1046))) (res .cse1059 (trichotomy .cse1046 0) (farkas 1 .cse1059 1 .cse548))) (let ((.cse1060 (<= 1 .cse1061))) (res .cse1060 (total-int .cse1061 0) (farkas 1 .cse1060 1 .cse1058))))))) (let ((.cse454 (= 0 .cse303)) (.cse549 (<= 1 .cse1046)) (.cse1024 (+ fmt1 .cse1057 .cse978 (- 2)))) (let-proof ((.cse550 (total-int .cse1046 0)) (.cse455 (symm 0 .cse303)) (.cse551 (! .cse676 :proves (- .cse548 + .cse479 + .cse547) :trichotomy)) (.cse664 (! (res .cse553 .cse554 (farkas 1 .cse178 1 .cse553 1 .cse197 1 .cse0 1 .cse547 1 .cse433)) :proves (- .cse178 + .cse30 - .cse197 - .cse0 - .cse547 - .cse433) :LA (1 (- 1) 1 1 1 1)))) (let ((.cse1028 (+ .cse225 .cse1056)) (.cse565 (<= .cse1024 0)) (.cse1043 (+ fmt1 .cse1057 .cse978 (- 1))) (.cse449 (= .cse365 .cse229)) (.cse446 (= 0 .cse229)) (.cse444 (= .cse229 0)) (.cse1017 (+ .cse345 .cse1056)) (.cse478 (= .cse365 .cse313)) (.cse474 (= 0 .cse228)) (.cse472 (= .cse228 0)) (.cse1049 (< 0 .cse228)) (.cse1050 (< .cse228 0))) (let-proof ((.cse833 (symm .cse229 0)) (.cse713 (! (res .cse16 .cse17 (res .cse30 (res .cse547 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse548 (res .cse78 .cse79 (! (res .cse549 .cse550 (res .cse454 .cse455 (res .cse236 .cse237 (res .cse337 .cse338 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse337 1 .cse236 1 .cse454 1 .cse78 1 .cse549)))))) :proves (- .cse178 - .cse197 - .cse0 - .cse433 - .cse78 + .cse548) :LA ((- 1) (- 1) (- 1) (- 1) 1 (- 1)))) .cse551)))) .cse664) .cse312)) :proves (- .cse433 + .cse479 + .cse70 + .cse58 - .cse178 - .cse197 - .cse0 + .cse56 + .cse54) :rup)) (.cse795 (symm .cse228 0)) (.cse797 (res .cse68 .cse634 (! (trans .cse228 .cse229 .cse303 .cse302) :proves (+ .cse149 - .cse111 - .cse1 - .cse68) :trans (.cse228 .cse229 .cse303 .cse302))))) (let ((.cse443 (<= .cse879 0)) (.cse876 (< 0 .cse229)) (.cse877 (< .cse229 0)) (.cse441 (<= .cse229 0)) (.cse781 (= x .cse780)) (.cse530 (= .cse1017 0)) (.cse528 (= .cse302 .cse345)) (.cse566 (<= 1 .cse1024)) (.cse450 (= .cse1024 0)) (.cse519 (<= .cse1043 0)) (.cse502 (= .cse1028 0)) (.cse503 (= .cse302 .cse225)) (.cse506 (= 1 .cse346)) (.cse504 (= .cse1033 0))) (let-proof ((.cse600 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 .cse79)))) (.cse473 (res .cse394 (! (res .cse1051 .cse1052 (farkas 1 .cse1051 1 .cse178 1 .cse0 1 .cse433)) :proves (+ .cse394 - .cse178 - .cse0 - .cse433) :LA ((- 1) 1 1 1)) (let ((.cse1053 (<= .cse1055 0))) (res .cse1053 (! (res .cse1050 (res .cse1049 (trichotomy .cse228 0) (farkas 1 .cse1049 1 .cse394)) (let ((.cse1054 (<= 1 .cse1055))) (res .cse1054 (total-int .cse1055 0) (farkas 1 .cse1054 1 .cse1050)))) :proves (+ .cse1053 + .cse472 - .cse394) :trichotomy) (! (res .cse454 .cse455 (res .cse236 .cse237 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse236 1 .cse454 1 .cse1053)))) :proves (- .cse178 - .cse0 - .cse433 - .cse1053) :LA ((- 1) (- 1) (- 1) 1)))))) (.cse475 (! (res .cse474 (symm 0 .cse228) (res .cse1049 (res .cse1050 (trichotomy 0 .cse228) (farkas 1 .cse474 1 .cse1050)) (farkas 1 .cse472 1 .cse1049))) :proves (+ .cse474 - .cse472) :EQ)) (.cse749 (! (and- 1 .cse322) :proves (- .cse322 + .cse748) :input)) (.cse782 (symm x .cse780)) (.cse882 (cong (x_count 1) (x_count .cse365))) (.cse883 (! (trans .cse228 .cse229 .cse302) :proves (+ .cse149 - .cse111 - .cse881) :trans (.cse228 .cse229 .cse302))) (.cse660 (res .cse548 (! (res .cse549 .cse550 (res .cse454 .cse455 (res .cse236 .cse237 (res .cse337 .cse338 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse337 1 .cse236 1 .cse78 1 .cse454 1 .cse549)))))) :proves (- .cse178 - .cse197 - .cse0 - .cse78 - .cse433 + .cse548) :LA ((- 1) (- 1) (- 1) 1 (- 1) (- 1))) .cse551)) (.cse552 (res .cse396 (! (res .cse794 (res .cse472 .cse795 (trans .cse365 .cse313 .cse228 0)) .cse796) :proves (+ .cse396 - .cse478 - .cse116 - .cse474) :trans (.cse365 .cse313 .cse228 0)) .cse797)) (.cse567 (total-int .cse1024 0)) (.cse480 (res .cse70 .cse713 (res .cse69 .cse91 .cse743))) (.cse487 (! (let ((.cse1045 (= 0 .cse1046))) (res .cse1045 (symm 0 .cse1046) (let ((.cse1047 (< .cse365 .cse313))) (res .cse1047 (let ((.cse1048 (< .cse313 .cse365))) (res .cse1048 (trichotomy .cse365 .cse313) (farkas 1 .cse479 1 .cse1048))) (farkas 1 .cse1045 1 .cse1047))))) :proves (+ .cse478 - .cse479) :EQ)) (.cse561 (! (res .cse794 (res .cse444 .cse833 (trans .cse365 .cse229 0)) .cse796) :proves (+ .cse396 - .cse449 - .cse446) :trans (.cse365 .cse229 0))) (.cse832 (res .cse304 (! (res .cse794 .cse1044 (cong (x_count .cse365) (x_count 0))) :proves (+ .cse304 - .cse396) :cong (.cse302 .cse303)) (! .cse306 :proves (+ .cse67 - .cse304 - .cse1) :trans (.cse302 .cse303 .cse229)))) (.cse1027 (let ((.cse1040 (< .cse1024 0))) (res .cse1040 (let ((.cse1041 (< 0 .cse1024))) (res .cse1041 (trichotomy .cse1024 0) (farkas 1 .cse1041 1 .cse565))) (let ((.cse1042 (<= 1 .cse1043))) (res .cse1042 (total-int .cse1043 0) (farkas 1 .cse1042 1 .cse1040))))))) (let ((.cse510 (= .cse346 1)) (.cse513 (= 0 .cse1028)) (.cse563 (= s .cse356)) (.cse532 (= 0 .cse1017)) (.cse469 (= s .cse239))) (let-proof ((.cse546 (res .cse678 .cse679 (! (res .cse230 .cse231 (trans .cse226 .cse224 .cse225)) :proves (+ .cse274 - .cse678 - .cse9) :trans (.cse226 .cse224 .cse225)))) (.cse536 (res .cse116 .cse249 .cse198)) (.cse505 (res .cse376 (! (res .cse379 .cse380 (farkas 1 .cse379 1 .cse178 1 .cse197 1 .cse359 1 .cse0 1 .cse433)) :proves (+ .cse376 - .cse178 - .cse197 - .cse359 - .cse0 - .cse433) :LA ((- 1) 1 1 1 1 1)) (let ((.cse1036 (<= .cse346 0))) (res .cse1036 (! (let ((.cse1037 (< .cse1033 0))) (res .cse1037 (let ((.cse1038 (< 0 .cse1033))) (res .cse1038 (trichotomy .cse1033 0) (farkas 1 .cse1038 1 .cse376))) (let ((.cse1039 (<= 1 .cse346))) (res .cse1039 (total-int .cse346 0) (farkas 1 .cse1039 1 .cse1037))))) :proves (+ .cse1036 + .cse504 - .cse376) :trichotomy) (! (res .cse454 .cse455 (res .cse236 .cse237 (res .cse381 .cse382 (res .cse337 .cse338 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse337 1 .cse381 1 .cse236 1 .cse454 1 .cse1036)))))) :proves (- .cse178 - .cse197 - .cse359 - .cse0 - .cse433 - .cse1036) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)))))) (.cse507 (! (let ((.cse1032 (= 0 .cse1033))) (res .cse1032 (symm 0 .cse1033) (let ((.cse1034 (< 1 .cse346))) (res .cse1034 (let ((.cse1035 (< .cse346 1))) (res .cse1035 (trichotomy 1 .cse346) (farkas 1 .cse1032 1 .cse1035))) (farkas 1 .cse504 1 .cse1034))))) :proves (+ .cse506 - .cse504) :EQ)) (.cse511 (symm .cse346 1)) (.cse512 (! (let ((.cse1029 (= .cse225 .cse302))) (res .cse1029 (symm .cse225 .cse302) (let ((.cse1030 (< .cse1028 0))) (res .cse1030 (let ((.cse1031 (< 0 .cse1028))) (res .cse1031 (trichotomy .cse1028 0) (farkas 1 .cse1029 1 .cse1031))) (farkas 1 .cse503 1 .cse1030))))) :proves (- .cse503 + .cse502) :EQ)) (.cse514 (symm 0 .cse1028)) (.cse568 (! .cse1027 :proves (- .cse565 + .cse450 + .cse519) :trichotomy)) (.cse453 (res .cse396 .cse561 .cse832)) (.cse539 (! (res .cse413 .cse414 (res .cse662 .cse663 (trans .cse227 .cse226 .cse225 .cse192))) :proves (+ .cse50 - .cse52 - .cse274 - .cse40) :trans (.cse227 .cse226 .cse225 .cse192))) (.cse537 (res .cse479 .cse480 .cse487)) (.cse522 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse78 .cse79 (res .cse565 (! (res .cse454 .cse455 (res .cse236 .cse237 (res .cse566 .cse567 (farkas 1 .cse566 1 .cse236 1 .cse454 1 .cse78)))) :proves (+ .cse565 - .cse0 - .cse433 - .cse78) :LA ((- 1) (- 1) (- 1) 1)) (! .cse1027 :proves (+ .cse519 + .cse450 - .cse565) :trichotomy))))))) (.cse452 (! (let ((.cse1023 (= 0 .cse1024))) (res .cse1023 (symm 0 .cse1024) (let ((.cse1025 (< .cse365 .cse229))) (res .cse1025 (let ((.cse1026 (< .cse229 .cse365))) (res .cse1026 (trichotomy .cse365 .cse229) (farkas 1 .cse450 1 .cse1026))) (farkas 1 .cse1023 1 .cse1025))))) :proves (+ .cse449 - .cse450) :EQ)) (.cse544 (! (res .cse553 .cse554 (farkas 1 .cse553 1 .cse0 1 .cse519 1 .cse433)) :proves (+ .cse30 - .cse0 - .cse519 - .cse433) :LA ((- 1) 1 1 1))) (.cse456 (! (res .cse399 .cse400 (trans .cse239 x .cse356 percent)) :proves (+ .cse48 - .cse294 - .cse127 - .cse321) :trans (.cse239 x .cse356 percent))) (.cse471 (! (res .cse383 .cse384 (let ((.cse1021 (< .cse228 .cse229))) (res .cse1021 (let ((.cse1022 (< .cse229 .cse228))) (res .cse1022 (trichotomy .cse228 .cse229) (farkas 1 .cse178 1 .cse1022))) (farkas 1 .cse383 1 .cse1021)))) :proves (+ .cse111 - .cse178) :EQ)) (.cse564 (symm s .cse356)) (.cse529 (res .cse508 .cse509 (! (res .cse789 .cse790 (trans .cse302 .cse346 .cse345)) :proves (+ .cse528 - .cse508 - .cse325) :trans (.cse302 .cse346 .cse345)))) (.cse531 (! (let ((.cse1018 (= .cse345 .cse302))) (res .cse1018 (symm .cse345 .cse302) (let ((.cse1019 (< .cse1017 0))) (res .cse1019 (let ((.cse1020 (< 0 .cse1017))) (res .cse1020 (trichotomy .cse1017 0) (farkas 1 .cse1018 1 .cse1020))) (farkas 1 .cse528 1 .cse1019))))) :proves (- .cse528 + .cse530) :EQ)) (.cse533 (symm 0 .cse1017)) (.cse534 (! (res .cse243 .cse244 (res .cse245 .cse246 (res .cse998 (! (res .cse399 .cse400 (res .cse842 .cse843 (trans 120 x .cse356 percent 37))) :proves (+ .cse998 - .cse245 - .cse127 - .cse321 - .cse243) :trans (120 x .cse356 percent 37)) .cse999))) :proves (- .cse321 - .cse127) :rup)) (.cse538 (! (res .cse731 .cse732 (res .cse16 .cse17 (res .cse24 .cse25 (res .cse733 (res .cse30 (res .cse0 .cse7 (res .cse734 .cse735 (res .cse720 (res .cse26 .cse736 (res .cse174 .cse737 (res .cse197 .cse198 (res .cse178 .cse179 (res .cse472 .cse473 (res .cse474 .cse475 (res .cse206 (res .cse53 (res .cse54 (res .cse478 (res .cse479 (let ((.cse884 (= .cse894 0))) (res .cse884 (res .cse547 (res .cse78 (res .cse323 .cse324 (res .cse57 (res .cse58 (res .cse70 .cse600 (let ((.cse890 (+ fmt1 (- 3)))) (let ((.cse885 (= .cse890 0))) (res .cse885 (! (res .cse16 .cse17 (let ((.cse898 (+ fmt1 (- 1)))) (let ((.cse886 (<= .cse898 0))) (res .cse886 (res .cse24 .cse25 (res .cse72 .cse73 (res .cse74 .cse75 (let ((.cse887 (<= .cse894 0))) (res .cse887 (res .cse76 .cse77 (let ((.cse888 (<= .cse890 0))) (res .cse888 (! (let ((.cse889 (<= 1 .cse890))) (res .cse889 (total-int .cse890 0) (farkas 1 .cse24 1 .cse889 1 .cse76))) :proves (- .cse24 + .cse888 - .cse76) :LA (1 (- 1) 1)) (! (let ((.cse891 (< .cse890 0))) (res .cse891 (let ((.cse892 (< 0 .cse890))) (res .cse892 (trichotomy .cse890 0) (farkas 1 .cse892 1 .cse888))) (let ((.cse893 (<= 1 .cse894))) (res .cse893 (total-int .cse894 0) (farkas 1 .cse893 1 .cse891))))) :proves (- .cse888 + .cse885 + .cse887) :trichotomy)))) (! (let ((.cse895 (< .cse894 0))) (res .cse895 (let ((.cse896 (< 0 .cse894))) (res .cse896 (trichotomy .cse894 0) (farkas 1 .cse896 1 .cse887))) (let ((.cse897 (<= 1 .cse898))) (res .cse897 (total-int .cse898 0) (farkas 1 .cse897 1 .cse895))))) :proves (- .cse887 + .cse884 + .cse886) :trichotomy)))))) (! (res .cse24 .cse25 (res .cse30 (! (res .cse899 .cse900 (res .cse553 .cse554 (farkas 1 .cse553 1 .cse886 1 .cse899))) :proves (+ .cse30 - .cse886 - .cse24) :LA ((- 1) 1 (- 1))) .cse312)) :proves (- .cse886) :rup))))) :proves (+ .cse884 + .cse885 + .cse58 + .cse54 + .cse56) :rup) (let ((.cse977 (* (- 1) .cse939))) (let ((.cse1009 (+ .cse939 (- 1))) (.cse1002 (+ fmt1 .cse977 .cse978 (- 2)))) (let ((.cse940 (= .cse939 1)) (.cse980 (= .cse365 .cse939)) (.cse937 (= .cse939 .cse365)) (.cse958 (= .cse1002 0)) (.cse965 (<= .cse1002 0)) (.cse1000 (+ fmt1 .cse977 .cse978 (- 1))) (.cse935 (= 1 .cse939)) (.cse932 (<= .cse939 0)) (.cse928 (= .cse1009 0)) (.cse929 (<= .cse1009 0))) (let-proof ((.cse941 (symm .cse939 1)) (.cse981 (symm .cse365 .cse939)) (.cse976 (res .cse881 (! (res .cse69 (symm 1 .cse365) .cse882) :proves (+ .cse881 - .cse975) :cong (.cse229 .cse302)) .cse883))) (let ((.cse930 (<= 1 .cse1009)) (.cse968 (<= 1 .cse1002)) (.cse960 (<= .cse1000 0)) (.cse983 (* (- 1) .cse345))) (let-proof ((.cse905 (res .cse1015 .cse1016 (and- 1 .cse1015))) (.cse931 (total-int .cse1009 0)) (.cse933 (! (let ((.cse1012 (< .cse1009 0))) (res .cse1012 (let ((.cse1013 (< 0 .cse1009))) (res .cse1013 (trichotomy .cse1009 0) (farkas 1 .cse1013 1 .cse929))) (let ((.cse1014 (<= 1 .cse939))) (res .cse1014 (total-int .cse939 0) (farkas 1 .cse1014 1 .cse1012))))) :proves (+ .cse932 + .cse928 - .cse929) :trichotomy)) (.cse936 (! (let ((.cse1008 (= 0 .cse1009))) (res .cse1008 (symm 0 .cse1009) (let ((.cse1010 (< 1 .cse939))) (res .cse1010 (let ((.cse1011 (< .cse939 1))) (res .cse1011 (trichotomy 1 .cse939) (farkas 1 .cse1008 1 .cse1011))) (farkas 1 .cse928 1 .cse1010))))) :proves (+ .cse935 - .cse928) :EQ)) (.cse969 (total-int .cse1002 0)) (.cse970 (let ((.cse1005 (< .cse1002 0))) (res .cse1005 (let ((.cse1006 (< 0 .cse1002))) (res .cse1006 (trichotomy .cse1002 0) (farkas 1 .cse1006 1 .cse965))) (let ((.cse1007 (<= 1 .cse1000))) (res .cse1007 (total-int .cse1000 0) (farkas 1 .cse1007 1 .cse1005)))))) (.cse979 (! (let ((.cse1001 (= 0 .cse1002))) (res .cse1001 (symm 0 .cse1002) (let ((.cse1003 (< .cse939 .cse365))) (res .cse1003 (let ((.cse1004 (< .cse365 .cse939))) (res .cse1004 (trichotomy .cse939 .cse365) (farkas 1 .cse1001 1 .cse1004))) (farkas 1 .cse958 1 .cse1003))))) :proves (+ .cse937 - .cse958) :EQ)) (.cse942 (res .cse975 (! (res .cse940 .cse941 (res .cse980 .cse981 (trans .cse365 .cse939 1))) :proves (+ .cse975 - .cse937 - .cse935) :trans (.cse365 .cse939 1)) .cse976))) (res .cse901 (res .cse902 (! (res .cse903 (res .cse904 .cse905 (and- 1 .cse904)) (res .cse906 (not+ .cse906) (=>- .cse903))) :proves (+ .cse901 + .cse902) :input) (let ((.cse912 (+ .cse939 .cse983))) (let ((.cse907 (= .cse912 0)) (.cse908 (= .cse345 .cse939))) (let-proof ((.cse909 (symm .cse345 .cse939))) (res .cse907 (! (res .cse908 .cse909 (let ((.cse910 (< .cse912 0))) (res .cse910 (let ((.cse911 (< 0 .cse912))) (res .cse911 (trichotomy .cse912 0) (farkas 1 .cse902 1 .cse911))) (farkas 1 .cse908 1 .cse910)))) :proves (- .cse902 + .cse907) :EQ) (res .cse325 (res .cse322 .cse326 (res .cse748 .cse749 (res .cse321 .cse355 (let ((.cse923 (+ .cse345 .cse943 (- 1)))) (let ((.cse913 (= .cse923 0)) (.cse924 (= 0 .cse923))) (let-proof ((.cse925 (symm 0 .cse923))) (res .cse913 (! (res .cse914 (res .cse322 (and+ .cse322) (res .cse915 (res .cse916 .cse917 (and- 0 .cse916)) (=>- .cse915))) (let ((.cse918 (= .cse914 .cse913))) (res .cse918 (res .cse913 (res .cse914 (=+1 .cse918) (let ((.cse919 (= .cse920 .cse345))) (res .cse919 (symm .cse920 .cse345) (let ((.cse921 (< .cse923 0))) (res .cse921 (let ((.cse922 (< 0 .cse923))) (res .cse922 (trichotomy .cse923 0) (farkas 1 .cse914 1 .cse922))) (farkas 1 .cse919 1 .cse921)))))) (res .cse914 (res .cse924 .cse925 (let ((.cse926 (< .cse345 .cse920))) (res .cse926 (let ((.cse927 (< .cse920 .cse345))) (res .cse927 (trichotomy .cse345 .cse920) (farkas 1 .cse913 1 .cse927))) (farkas 1 .cse924 1 .cse926)))) (=+2 .cse918))) (=-2 .cse918)))) :proves (- .cse748 - .cse321 + .cse913) :input) (res .cse928 (res .cse929 (! (res .cse930 .cse931 (farkas 1 .cse930 1 .cse178 1 .cse323 1 .cse913 1 .cse197 1 .cse0 1 .cse907 1 .cse433)) :proves (+ .cse929 - .cse178 - .cse323 - .cse913 - .cse197 - .cse0 - .cse907 - .cse433) :LA ((- 1) 1 1 1 1 1 1 1)) (res .cse932 .cse933 (! (res .cse454 .cse455 (let ((.cse934 (= 0 .cse912))) (res .cse934 (symm 0 .cse912) (res .cse236 .cse237 (res .cse337 .cse338 (res .cse924 .cse925 (res .cse341 .cse342 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse341 1 .cse924 1 .cse337 1 .cse236 1 .cse934 1 .cse454 1 .cse932))))))))) :proves (- .cse178 - .cse323 - .cse913 - .cse197 - .cse0 - .cse907 - .cse433 - .cse932) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) (- 1) (- 1) 1)))) (res .cse935 .cse936 (res .cse937 (res .cse69 (! .cse938 :proves (- .cse70 + .cse69) :EQ) (! (res .cse940 .cse941 (trans .cse939 1 .cse365)) :proves (+ .cse937 - .cse935 - .cse69) :trans (.cse939 1 .cse365))) .cse942)))))))))) (! (res .cse731 .cse732 (res .cse16 .cse17 (res .cse24 .cse25 (res .cse733 (res .cse30 (res .cse0 .cse7 (res .cse734 .cse735 (res .cse720 (res .cse26 .cse736 (res .cse174 .cse737 (res .cse178 .cse179 (res .cse472 .cse473 (res .cse474 .cse475 (res .cse206 (res .cse53 (res .cse54 (res .cse57 (res .cse58 (let ((.cse944 (= 0 .cse939))) (res .cse944 (! (res .cse908 .cse909 (res .cse559 .cse560 (res .cse787 .cse788 (res .cse789 .cse790 (trans 0 .cse228 .cse313 .cse346 .cse345 .cse939))))) :proves (+ .cse944 - .cse474 - .cse116 - .cse147 - .cse325 - .cse902) :trans (0 .cse228 .cse313 .cse346 .cse345 .cse939)) (let ((.cse945 (= .cse228 .cse939))) (res .cse945 (! (res .cse908 .cse909 (res .cse559 .cse560 (res .cse787 .cse788 (res .cse789 .cse790 (trans .cse228 .cse313 .cse346 .cse345 .cse939))))) :proves (+ .cse945 - .cse116 - .cse147 - .cse325 - .cse902) :trans (.cse228 .cse313 .cse346 .cse345 .cse939)) (let ((.cse946 (= .cse939 0))) (res .cse946 (! (res .cse946 (symm .cse939 0) (let ((.cse947 (< .cse939 0))) (res .cse947 (let ((.cse948 (< 0 .cse939))) (res .cse948 (trichotomy .cse939 0) (farkas 1 .cse946 1 .cse948))) (farkas 1 .cse944 1 .cse947)))) :proves (- .cse944 + .cse946) :EQ) (let ((.cse953 (+ .cse939 .cse982))) (let ((.cse949 (= .cse953 0))) (res .cse949 (! (let ((.cse950 (= .cse939 .cse228))) (res .cse950 (symm .cse939 .cse228) (let ((.cse951 (< .cse953 0))) (res .cse951 (let ((.cse952 (< 0 .cse953))) (res .cse952 (trichotomy .cse953 0) (farkas 1 .cse950 1 .cse952))) (farkas 1 .cse945 1 .cse951))))) :proves (- .cse945 + .cse949) :EQ) (let ((.cse954 (= 1 .cse957))) (res .cse954 (! (res .cse944 (symm 0 .cse939) (let ((.cse955 (< 1 .cse957))) (res .cse955 (let ((.cse956 (< .cse957 1))) (res .cse956 (trichotomy 1 .cse957) (farkas 1 .cse944 1 .cse956))) (farkas 1 .cse946 1 .cse955)))) :proves (+ .cse954 - .cse946) :EQ) (res .cse937 (res .cse958 (let ((.cse964 (+ fmt1 .cse977 .cse978 (- 3)))) (let ((.cse959 (= .cse964 0))) (res .cse959 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse960 (let ((.cse961 (<= .cse964 0))) (res .cse961 (! (res .cse454 .cse455 (let ((.cse962 (= 0 .cse953))) (res .cse962 (symm 0 .cse953) (res .cse236 .cse237 (res .cse383 .cse384 (let ((.cse963 (<= 1 .cse964))) (res .cse963 (total-int .cse964 0) (farkas 1 .cse963 1 .cse383 1 .cse236 1 .cse962 1 .cse454 1 .cse76)))))))) :proves (+ .cse961 - .cse178 - .cse0 - .cse949 - .cse433 - .cse76) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) (res .cse965 (! (let ((.cse966 (< .cse964 0))) (res .cse966 (let ((.cse967 (< 0 .cse964))) (res .cse967 (trichotomy .cse964 0) (farkas 1 .cse967 1 .cse961))) (res .cse968 .cse969 (farkas 1 .cse968 1 .cse966)))) :proves (+ .cse965 + .cse959 - .cse961) :trichotomy) (! .cse970 :proves (- .cse965 + .cse958 + .cse960) :trichotomy)))) (! (res .cse553 .cse554 (farkas 1 .cse960 1 .cse178 1 .cse553 1 .cse0 1 .cse949 1 .cse433)) :proves (- .cse960 - .cse178 + .cse30 - .cse0 - .cse949 - .cse433) :LA (1 1 (- 1) 1 1 1)))))) (let ((.cse971 (= .cse957 .cse365))) (res .cse971 (! (let ((.cse972 (= 0 .cse964))) (res .cse972 (symm 0 .cse964) (let ((.cse973 (< .cse957 .cse365))) (res .cse973 (let ((.cse974 (< .cse365 .cse957))) (res .cse974 (trichotomy .cse957 .cse365) (farkas 1 .cse972 1 .cse974))) (farkas 1 .cse959 1 .cse973))))) :proves (+ .cse971 - .cse959) :EQ) (res .cse975 (! (res (= .cse365 .cse957) (symm .cse365 .cse957) (res (= .cse957 1) (symm .cse957 1) (trans .cse365 .cse957 1))) :proves (+ .cse975 - .cse971 - .cse954) :trans (.cse365 .cse957 1)) .cse976)))))) .cse979) (res .cse396 (! (res .cse794 (res .cse472 .cse795 (res .cse980 .cse981 (trans .cse365 .cse939 .cse345 .cse346 .cse313 .cse228 0))) .cse796) :proves (+ .cse396 - .cse937 - .cse902 - .cse325 - .cse147 - .cse116 - .cse474) :trans (.cse365 .cse939 .cse345 .cse346 .cse313 .cse228 0)) .cse797))))))))))))) .cse104) .cse279) .cse172) .cse212) .cse213)))))) .cse728))) .cse312) .cse739)))) :proves (- .cse902 - .cse147 + .cse149 - .cse116 - .cse325 - .cse1 - .cse111 + .cse56 - .cse433) :rup))))))) (! (res .cse243 .cse244 (res .cse245 .cse246 (res .cse984 (! (and- 1 .cse901) :proves (- .cse901 + .cse984) :input) (res .cse751 (! (and- 0 .cse901) :proves (- .cse901 + .cse751) :input) (let ((.cse993 (+ .cse939 .cse983 (- 1)))) (let ((.cse994 (= 0 .cse993)) (.cse985 (= .cse993 0))) (let-proof ((.cse995 (symm 0 .cse993))) (res .cse985 (! (res .cse986 (res .cse901 (and+ .cse901) (res .cse987 (res .cse904 .cse905 (and- 0 .cse904)) (=>- .cse987))) (let ((.cse988 (= .cse986 .cse985))) (res .cse988 (res .cse985 (res .cse986 (=+1 .cse988) (let ((.cse989 (= .cse990 .cse939))) (res .cse989 (symm .cse990 .cse939) (let ((.cse991 (< .cse993 0))) (res .cse991 (let ((.cse992 (< 0 .cse993))) (res .cse992 (trichotomy .cse993 0) (farkas 1 .cse986 1 .cse992))) (farkas 1 .cse989 1 .cse991)))))) (res .cse986 (res .cse994 .cse995 (let ((.cse996 (< .cse939 .cse990))) (res .cse996 (let ((.cse997 (< .cse990 .cse939))) (res .cse997 (trichotomy .cse939 .cse990) (farkas 1 .cse985 1 .cse997))) (farkas 1 .cse994 1 .cse996)))) (=+2 .cse988))) (=-2 .cse988)))) :proves (- .cse751 - .cse984 + .cse985) :input) (res .cse327 (res .cse325 (res .cse322 .cse326 (res .cse748 .cse749 (res .cse998 (! (res .cse842 .cse843 (res .cse781 .cse782 (trans 120 x .cse780 percent 37))) :proves (+ .cse998 - .cse245 - .cse748 - .cse751 - .cse243) :trans (120 x .cse780 percent 37)) .cse999))) .cse328) (! (res .cse24 .cse25 (res .cse30 (res .cse178 .cse179 (res .cse547 (res .cse928 (res .cse929 (! (res .cse930 .cse931 (farkas 1 .cse930 1 .cse178 1 .cse323 1 .cse197 1 .cse985 1 .cse0 1 .cse327 1 .cse433)) :proves (+ .cse929 - .cse178 - .cse323 - .cse197 - .cse985 - .cse0 - .cse327 - .cse433) :LA ((- 1) 1 1 1 1 1 1 1)) (res .cse932 .cse933 (! (res .cse454 .cse455 (res .cse335 .cse336 (res .cse236 .cse237 (res .cse994 .cse995 (res .cse337 .cse338 (res .cse341 .cse342 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse341 1 .cse337 1 .cse994 1 .cse236 1 .cse335 1 .cse454 1 .cse932)))))))) :proves (- .cse178 - .cse323 - .cse197 - .cse985 - .cse0 - .cse327 - .cse433 - .cse932) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) (- 1) (- 1) 1)))) (res .cse935 .cse936 (res .cse960 (res .cse965 (! (res .cse968 .cse969 (res .cse454 .cse455 (res .cse899 .cse900 (res .cse335 .cse336 (res .cse236 .cse237 (res .cse994 .cse995 (res .cse337 .cse338 (res .cse341 .cse342 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse341 1 .cse337 1 .cse994 1 .cse236 1 .cse885 1 .cse335 1 .cse899 1 .cse454 1 .cse968)))))))))) :proves (- .cse178 - .cse323 - .cse197 - .cse985 - .cse0 - .cse885 - .cse327 - .cse24 - .cse433 + .cse965) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1 (- 1) (- 1) (- 1) (- 1))) (res .cse958 (! .cse970 :proves (+ .cse960 + .cse958 - .cse965) :trichotomy) (res .cse937 .cse979 .cse942))) (res .cse548 (! (res .cse549 .cse550 (farkas 1 .cse323 1 .cse985 1 .cse960 1 .cse327 1 .cse549)) :proves (- .cse323 - .cse985 - .cse960 - .cse327 + .cse548) :LA (1 1 1 1 (- 1))) .cse551)))) .cse664)) .cse312)) :proves (- .cse327 - .cse985 - .cse885 + .cse479 + .cse149 - .cse111 - .cse433 - .cse323 - .cse0 - .cse197) :rup)))))))))) :proves (- .cse901 - .cse885 + .cse149 - .cse323 + .cse479 - .cse111 - .cse433 - .cse0 - .cse197) :rup)))))))))))) .cse104) .cse279)) .cse660) .cse664) (res .cse547 (res .cse548 (! (res .cse549 .cse550 (res .cse454 .cse455 (res .cse899 .cse900 (res .cse236 .cse237 (res .cse337 .cse338 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse337 1 .cse236 1 .cse899 1 .cse454 1 .cse884 1 .cse549))))))) :proves (- .cse178 - .cse197 - .cse0 - .cse24 - .cse433 - .cse884 + .cse548) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1 (- 1))) .cse551) (! (res .cse553 .cse554 (farkas 1 .cse547 1 .cse178 1 .cse553 1 .cse197 1 .cse0 1 .cse433)) :proves (- .cse547 - .cse178 + .cse30 - .cse197 - .cse0 - .cse433) :LA (1 1 (- 1) 1 1 1))))) .cse487) .cse552) .cse172) .cse212) .cse213))))))) .cse728))) .cse312) .cse739)))) :proves (- .cse433 - .cse147 - .cse116 + .cse149 + .cse56 - .cse111 - .cse1) :rup)) (.cse535 (res .cse881 (! .cse882 :proves (+ .cse881 - .cse69) :cong (.cse229 .cse302)) .cse883)) (.cse545 (! (res .cse794 (res .cse444 .cse833 (trans .cse365 .cse313 .cse228 .cse229 0)) .cse796) :proves (+ .cse396 - .cse478 - .cse116 - .cse111 - .cse446) :trans (.cse365 .cse313 .cse228 .cse229 0))) (.cse442 (! (let ((.cse880 (<= 1 .cse229))) (res .cse880 (total-int .cse229 0) (farkas 1 .cse880 1 .cse0 1 .cse433))) :proves (+ .cse441 - .cse0 - .cse433) :LA ((- 1) 1 1))) (.cse445 (! (res .cse877 (res .cse876 (trichotomy .cse229 0) (farkas 1 .cse876 1 .cse441)) (let ((.cse878 (<= 1 .cse879))) (res .cse878 (total-int .cse879 0) (farkas 1 .cse878 1 .cse877)))) :proves (+ .cse443 + .cse444 - .cse441) :trichotomy)) (.cse447 (! (res .cse446 (symm 0 .cse229) (res .cse876 (res .cse877 (trichotomy 0 .cse229) (farkas 1 .cse446 1 .cse877)) (farkas 1 .cse444 1 .cse876))) :proves (+ .cse446 - .cse444) :EQ)) (.cse468 (! (res .cse454 .cse455 (res .cse236 .cse237 (farkas 1 .cse236 1 .cse443 1 .cse454))) :proves (- .cse0 - .cse443 - .cse433) :LA ((- 1) 1 (- 1)))) (.cse470 (symm s .cse239))) (let-proof ((.cse461 (! (res .cse14 .cse15 (res .cse174 .cse175 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 (res .cse108 .cse109 (let ((.cse870 (+ .cse227 (- 1))) (.cse866 (+ .cse229 .cse875 (- 1))) (.cse849 (+ .cse762 (* (- 1) .cse263))) (.cse840 (+ .cse762 .cse486))) (let ((.cse619 (= .cse840 0)) (.cse617 (= .cse226 .cse762)) (.cse615 (= .cse849 0)) (.cse764 (= .cse263 .cse762)) (.cse587 (= 0 .cse866)) (.cse585 (= .cse866 0)) (.cse597 (= 1 .cse227)) (.cse593 (<= .cse227 0)) (.cse589 (= .cse870 0)) (.cse590 (<= .cse870 0)) (.cse635 (<= 1 .cse227))) (let-proof ((.cse765 (symm .cse263 .cse762)) (.cse588 (symm 0 .cse866)) (.cse636 (total-int .cse227 0))) (let ((.cse591 (<= 1 .cse870)) (.cse640 (= s .cse238)) (.cse621 (= 0 .cse840))) (let-proof ((.cse592 (total-int .cse870 0)) (.cse594 (! (let ((.cse873 (< .cse870 0))) (res .cse873 (let ((.cse874 (< 0 .cse870))) (res .cse874 (trichotomy .cse870 0) (farkas 1 .cse874 1 .cse590))) (res .cse635 .cse636 (farkas 1 .cse635 1 .cse873)))) :proves (+ .cse593 + .cse589 - .cse590) :trichotomy)) (.cse598 (! (let ((.cse869 (= 0 .cse870))) (res .cse869 (symm 0 .cse870) (let ((.cse871 (< 1 .cse227))) (res .cse871 (let ((.cse872 (< .cse227 1))) (res .cse872 (trichotomy 1 .cse227) (farkas 1 .cse869 1 .cse872))) (farkas 1 .cse589 1 .cse871))))) :proves (+ .cse597 - .cse589) :EQ)) (.cse641 (symm s .cse238)) (.cse586 (! (res .cse857 (res .cse2 (and+ .cse2) (res .cse858 (res .cse859 .cse860 (and- 0 .cse859)) (=>- .cse858))) (let ((.cse861 (= .cse857 .cse585))) (res .cse861 (res .cse585 (res .cse857 (=+1 .cse861) (let ((.cse862 (= .cse863 .cse229))) (res .cse862 (symm .cse863 .cse229) (let ((.cse864 (< .cse866 0))) (res .cse864 (let ((.cse865 (< 0 .cse866))) (res .cse865 (trichotomy .cse866 0) (farkas 1 .cse857 1 .cse865))) (farkas 1 .cse862 1 .cse864)))))) (res .cse857 (res .cse587 .cse588 (let ((.cse867 (< .cse229 .cse863))) (res .cse867 (let ((.cse868 (< .cse863 .cse229))) (res .cse868 (trichotomy .cse229 .cse863) (farkas 1 .cse585 1 .cse868))) (farkas 1 .cse587 1 .cse867)))) (=+2 .cse861))) (=-2 .cse861)))) :proves (- .cse4 - .cse320 + .cse585) :input)) (.cse606 (! (and- 1 .cse10) :proves (- .cse10 + .cse47) :input)) (.cse603 (! (res .cse855 .cse856 (trans .cse239 percent .cse282 s)) :proves (+ .cse45 - .cse48 - .cse128 - .cse248) :trans (.cse239 percent .cse282 s))) (.cse622 (symm 0 .cse840)) (.cse623 (! (and- 0 .cse612) :proves (- .cse612 + .cse321) :input)) (.cse624 (! (res .cse357 .cse358 (trans .cse282 percent .cse356 s)) :proves (+ .cse248 - .cse128 - .cse321 - .cse125) :trans (.cse282 percent .cse356 s))) (.cse614 (! (res .cse850 (res .cse851 (res .cse852 .cse853 (and- 1 .cse852)) (and- 1 .cse851)) (res .cse854 (not+ .cse854) (=>- .cse850))) :proves (+ .cse612 + .cse613) :input)) (.cse616 (! (res .cse764 .cse765 (let ((.cse847 (< .cse849 0))) (res .cse847 (let ((.cse848 (< 0 .cse849))) (res .cse848 (trichotomy .cse849 0) (farkas 1 .cse613 1 .cse848))) (farkas 1 .cse764 1 .cse847)))) :proves (- .cse613 + .cse615) :EQ)) (.cse609 (! (res .cse139 .cse140 (let ((.cse845 (< .cse227 .cse192))) (res .cse845 (let ((.cse846 (< .cse192 .cse227))) (res .cse846 (trichotomy .cse227 .cse192) (farkas 1 .cse118 1 .cse846))) (farkas 1 .cse139 1 .cse845)))) :proves (+ .cse50 - .cse118) :EQ)) (.cse604 (! (res .cse243 .cse244 (res .cse425 .cse426 (res .cse841 (! (res .cse842 .cse843 (res .cse469 .cse470 (trans 115 s .cse239 percent 37))) :proves (+ .cse841 - .cse425 - .cse45 - .cse48 - .cse243) :trans (115 s .cse239 percent 37)) .cse844))) :proves (- .cse48 - .cse45) :rup)) (.cse618 (res .cse261 .cse262 (! (res .cse764 .cse765 (trans .cse226 .cse263 .cse762)) :proves (+ .cse617 - .cse261 - .cse613) :trans (.cse226 .cse263 .cse762)))) (.cse620 (! (let ((.cse837 (= .cse762 .cse226))) (res .cse837 (symm .cse762 .cse226) (let ((.cse838 (< .cse840 0))) (res .cse838 (let ((.cse839 (< 0 .cse840))) (res .cse839 (trichotomy .cse840 0) (farkas 1 .cse837 1 .cse839))) (farkas 1 .cse617 1 .cse838))))) :proves (- .cse617 + .cse619) :EQ))) (let-proof ((.cse608 (! (let ((.cse704 (+ .cse229 .cse708))) (let-proof ((.cse783 (! .cse836 :proves (- .cse74 + .cse56 + .cse76) :trichotomy)) (.cse784 (! .cse835 :proves (- .cse76 + .cse70 + .cse78) :trichotomy))) (let ((.cse669 (< 0 .cse704)) (.cse668 (< .cse704 0)) (.cse671 (= 0 .cse704)) (.cse658 (= .cse704 0)) (.cse666 (= .cse229 .cse225)) (.cse659 (= .cse225 .cse229))) (let-proof ((.cse670 (trichotomy .cse704 0)) (.cse672 (symm 0 .cse704)) (.cse667 (symm .cse229 .cse225)) (.cse677 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse266 .cse267 (farkas 4 .cse178 1 .cse28 4 .cse266 1 .cse101 8 .cse0 4 .cse222 1 .cse24 1 .cse97 8 .cse433 1 .cse95)))))) :proves (- .cse178 - .cse28 - .cse264 - .cse26 - .cse0 - .cse202 - .cse24 - .cse20 - .cse433 - .cse14) :LA (4 1 (- 4) (- 1) 8 (- 4) 1 (- 1) 8 (- 1)))) (.cse652 (res .cse76 (res .cse74 (res .cse72 .cse73 (! .cse834 :proves (- .cse72 + .cse54 + .cse74) :trichotomy)) .cse783) .cse784))) (let-proof ((.cse673 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse1 .cse301 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse9 .cse60 (res .cse658 (let ((.cse702 (<= .cse704 0))) (res .cse702 (! (res .cse81 .cse82 (res .cse83 .cse84 (let ((.cse703 (<= 1 .cse704))) (res .cse703 (total-int .cse704 0) (farkas 1 .cse703 1 .cse83 1 .cse0 1 .cse81 1 .cse433))))) :proves (+ .cse702 - .cse8 - .cse0 - .cse18 - .cse433) :LA ((- 1) (- 1) 1 (- 1) 1)) (let ((.cse707 (+ .cse229 .cse708 1))) (let ((.cse705 (<= .cse707 0))) (res .cse705 (! (res .cse668 (res .cse669 .cse670 (farkas 1 .cse669 1 .cse702)) (let ((.cse706 (<= 1 .cse707))) (res .cse706 (total-int .cse707 0) (farkas 1 .cse706 1 .cse668)))) :proves (+ .cse705 + .cse658 - .cse702) :trichotomy) (! (res .cse454 .cse455 (res .cse236 .cse237 (farkas 1 .cse8 1 .cse236 1 .cse18 1 .cse454 1 .cse705))) :proves (- .cse8 - .cse0 - .cse18 - .cse433 - .cse705) :LA (1 (- 1) 1 (- 1) 1))))))) (res .cse659 (! (res .cse671 .cse672 (let ((.cse709 (< .cse225 .cse229))) (res .cse709 (let ((.cse710 (< .cse229 .cse225))) (res .cse710 (trichotomy .cse225 .cse229) (farkas 1 .cse671 1 .cse710))) (farkas 1 .cse658 1 .cse709)))) :proves (+ .cse659 - .cse658) :EQ) (let ((.cse806 (+ .cse228 .cse708))) (let ((.cse711 (= .cse228 .cse225)) (.cse721 (= .cse806 0))) (let-proof ((.cse816 (res .cse65 .cse94 (res .cse199 .cse200 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse725 .cse726 (res .cse97 .cse98 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse8 1 .cse24 4 .cse18 1 .cse725 1 .cse95 4 .cse218)))))) :proves (- .cse65 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse8 - .cse24 - .cse18 + .cse720 - .cse14 - .cse199) :LA ((- 4) 1 4 4 4 (- 1) 4 4 1 4 (- 1) (- 1) (- 4))))))) (let ((.cse744 (= .cse225 .cse228))) (let-proof ((.cse724 (res .cse617 .cse618 .cse620)) (.cse729 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse0 .cse7 (res .cse8 .cse13 (res .cse720 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse39 .cse166 (let ((.cse820 (+ .cse229 .cse826))) (let ((.cse817 (= .cse820 0))) (res .cse817 (let ((.cse818 (<= .cse820 0))) (res .cse818 (! (res .cse81 .cse82 (res .cse411 .cse412 (res .cse83 .cse84 (let ((.cse819 (<= 1 .cse820))) (res .cse819 (total-int .cse820 0) (farkas 1 .cse819 1 .cse83 1 .cse0 1 .cse411 1 .cse81 1 .cse433)))))) :proves (+ .cse818 - .cse8 - .cse0 - .cse39 - .cse18 - .cse433) :LA ((- 1) (- 1) 1 (- 1) (- 1) 1)) (let ((.cse825 (+ .cse229 .cse826 1))) (let ((.cse821 (<= .cse825 0))) (res .cse821 (! (let ((.cse822 (< .cse820 0))) (res .cse822 (let ((.cse823 (< 0 .cse820))) (res .cse823 (trichotomy .cse820 0) (farkas 1 .cse823 1 .cse818))) (let ((.cse824 (<= 1 .cse825))) (res .cse824 (total-int .cse825 0) (farkas 1 .cse824 1 .cse822))))) :proves (+ .cse821 + .cse817 - .cse818) :trichotomy) (! (res .cse454 .cse455 (res .cse236 .cse237 (farkas 1 .cse8 1 .cse236 1 .cse39 1 .cse18 1 .cse454 1 .cse821))) :proves (- .cse8 - .cse0 - .cse39 - .cse18 - .cse433 - .cse821) :LA (1 (- 1) 1 1 (- 1) 1))))))) (let ((.cse827 (= .cse192 .cse229))) (res .cse827 (! (let ((.cse828 (= 0 .cse820))) (res .cse828 (symm 0 .cse820) (let ((.cse829 (< .cse192 .cse229))) (res .cse829 (let ((.cse830 (< .cse229 .cse192))) (res .cse830 (trichotomy .cse192 .cse229) (farkas 1 .cse828 1 .cse830))) (farkas 1 .cse817 1 .cse829))))) :proves (+ .cse827 - .cse817) :EQ) (res .cse118 .cse119 (let-proof ((.cse831 (! (res .cse794 (res .cse444 .cse833 (trans .cse365 .cse227 .cse192 .cse229 0)) .cse796) :proves (+ .cse396 - .cse252 - .cse50 - .cse827 - .cse446) :trans (.cse365 .cse227 .cse192 .cse229 0)))) (res .cse67 (res .cse396 .cse831 .cse832) (res .cse52 (res .cse396 .cse831 .cse562) .cse816)))))))))))) .cse468)) .cse728))))))) :proves (- .cse252 - .cse433 - .cse50 - .cse18 - .cse40 - .cse1 - .cse9) :rup)) (.cse730 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse720 (res .cse39 .cse166 (res .cse118 .cse119 (res .cse67 .cse92 (res .cse52 .cse270 .cse816)))) .cse728))))) :proves (- .cse69 - .cse433 - .cse50 - .cse18 - .cse40 - .cse0 - .cse8) :rup)) (.cse722 (let ((.cse809 (<= .cse806 0))) (res .cse809 (! (res .cse81 .cse82 (res .cse83 .cse84 (let ((.cse810 (<= 1 .cse806))) (res .cse810 (total-int .cse806 0) (farkas 1 .cse810 1 .cse178 1 .cse83 1 .cse0 1 .cse81 1 .cse433))))) :proves (+ .cse809 - .cse178 - .cse8 - .cse0 - .cse18 - .cse433) :LA ((- 1) 1 (- 1) 1 (- 1) 1)) (let ((.cse815 (+ .cse228 .cse708 1))) (let ((.cse811 (<= .cse815 0))) (res .cse811 (! (let ((.cse812 (< .cse806 0))) (res .cse812 (let ((.cse813 (< 0 .cse806))) (res .cse813 (trichotomy .cse806 0) (farkas 1 .cse813 1 .cse809))) (let ((.cse814 (<= 1 .cse815))) (res .cse814 (total-int .cse815 0) (farkas 1 .cse814 1 .cse812))))) :proves (+ .cse811 + .cse721 - .cse809) :trichotomy) (! (res .cse454 .cse455 (res .cse236 .cse237 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse8 1 .cse236 1 .cse18 1 .cse454 1 .cse811)))) :proves (- .cse178 - .cse8 - .cse0 - .cse18 - .cse433 - .cse811) :LA ((- 1) 1 (- 1) 1 (- 1) 1)))))))) (.cse723 (! (let ((.cse805 (= 0 .cse806))) (res .cse805 (symm 0 .cse806) (let ((.cse807 (< .cse228 .cse225))) (res .cse807 (let ((.cse808 (< .cse225 .cse228))) (res .cse808 (trichotomy .cse228 .cse225) (farkas 1 .cse721 1 .cse808))) (farkas 1 .cse805 1 .cse807))))) :proves (+ .cse711 - .cse721) :EQ)) (.cse740 (res .cse629 (! (res .cse630 .cse631 (res .cse81 .cse82 (res .cse411 .cse412 (res .cse139 .cse140 (res .cse83 .cse84 (farkas 1 .cse83 1 .cse139 1 .cse411 1 .cse81 1 .cse78 1 .cse630)))))) :proves (- .cse8 - .cse118 - .cse39 - .cse18 - .cse78 + .cse629) :LA ((- 1) (- 1) (- 1) (- 1) 1 (- 1))) .cse804)) (.cse718 (! (res .cse425 .cse426 (res .cse245 .cse246 (res .cse427 (! (res .cse428 .cse429 (res .cse542 .cse543 (trans 115 s .cse282 x 120))) :proves (+ .cse427 - .cse425 - .cse248 - .cse275 - .cse245) :trans (115 s .cse282 x 120)) .cse430))) :proves (- .cse248 - .cse275) :rup)) (.cse745 (symm .cse225 .cse228))) (let-proof ((.cse716 (res .cse396 .cse545 (res .cse678 .cse679 (! (res .cse230 .cse231 (res .cse744 .cse745 (trans .cse226 .cse224 .cse225 .cse228 .cse229))) :proves (+ .cse260 - .cse678 - .cse9 - .cse711 - .cse111) :trans (.cse226 .cse224 .cse225 .cse228 .cse229))))) (.cse712 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse0 .cse7 (res .cse720 (res .cse55 (res .cse56 (res .cse111 .cse471 (res .cse472 .cse473 (res .cse721 .cse722 (res .cse474 .cse475 (res .cse711 .cse723 (res .cse69 (res .cse70 (let-proof ((.cse793 (! (res .cse731 .cse732 (res .cse425 .cse426 (res .cse24 .cse25 (res .cse733 (res .cse245 .cse246 (res .cse0 .cse7 (res .cse734 .cse735 (res .cse720 (res .cse26 .cse736 (res .cse174 .cse737 (res .cse55 (res .cse56 (res .cse111 .cse471 (res .cse472 .cse473 (res .cse474 .cse475 (res .cse69 (res .cse70 (res .cse116 (! (res .cse337 .cse338 (let ((.cse802 (< .cse313 .cse228))) (res .cse802 (let ((.cse803 (< .cse228 .cse313))) (res .cse803 (trichotomy .cse313 .cse228) (farkas 1 .cse197 1 .cse803))) (farkas 1 .cse337 1 .cse802)))) :proves (+ .cse116 - .cse197) :EQ) (res .cse147 (res .cse478 (res .cse479 (res .cse206 (res .cse53 (res .cse54 (res .cse130 .cse148 (res .cse58 .cse713 (res .cse57 .cse104 (res .cse128 .cse208 (res .cse127 .cse158 (res .cse359 .cse360 (res .cse248 (res .cse321 (res .cse49 (res .cse322 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse325 .cse326 (res .cse122 (res .cse123 .cse124 (res .cse125 .cse126 (res .cse427 (! (res .cse563 .cse564 (res .cse428 .cse429 (trans 115 s .cse356 x 120))) :proves (+ .cse427 - .cse425 - .cse125 - .cse127 - .cse245) :trans (115 s .cse356 x 120)) .cse430))) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse720 (res .cse327 .cse328 (res .cse528 .cse529 (res .cse52 .cse160 (res .cse530 .cse531 (res .cse199 .cse200 (res .cse39 (res .cse113 (res .cse40 (res .cse41 .cse42 (res .cse43 .cse44 (res .cse45 .cse46 .cse114))) .cse166) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse725 .cse726 (res .cse532 .cse533 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse359 4 .cse0 1 .cse97 4 .cse433 4 .cse532 4 .cse178 4 .cse113 4 .cse8 4 .cse197 4 .cse327 1 .cse24 4 .cse18 1 .cse725 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse118 - .cse359 - .cse0 - .cse20 - .cse433 - .cse530 - .cse178 - .cse113 - .cse8 - .cse197 - .cse327 - .cse24 - .cse18 + .cse720 - .cse14 - .cse199) :LA (1 4 4 4 (- 1) 4 (- 4) 4 4 4 4 4 1 4 (- 1) (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse725 .cse726 (res .cse532 .cse533 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse359 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse532 4 .cse178 4 .cse8 4 .cse197 4 .cse327 1 .cse24 4 .cse18 1 .cse725 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse118 - .cse359 - .cse0 - .cse39 - .cse20 - .cse433 - .cse530 - .cse178 - .cse8 - .cse197 - .cse327 - .cse24 - .cse18 + .cse720 - .cse14 - .cse199) :LA (1 4 4 4 4 (- 1) 4 (- 4) 4 4 4 4 1 4 (- 1) (- 1) (- 4))))))))) .cse728))))) :proves (- .cse433 - .cse325 - .cse359 - .cse122 - .cse178 - .cse18 - .cse0 - .cse8 - .cse57 - .cse118 - .cse197) :rup))))) .cse355) .cse271) .cse534) .cse272))))))) .cse172) .cse212) .cse213) .cse487) .cse552) .cse538)) .cse91) .cse535)))) .cse170) .cse211))) .cse728)))) .cse739)))) :proves (- .cse433 + .cse149 - .cse197 - .cse178 - .cse18 - .cse1 - .cse8) :rup))) (res .cse197 (res .cse116 (res .cse115 .cse117 (res .cse275 .cse280 (res .cse48 .cse163 (res .cse294 (res .cse128 (res .cse45 (res .cse295 .cse296 (res .cse130 (res .cse123 (res .cse41 (res .cse147 .cse148 (res .cse122 .cse124 (let ((.cse800 (+ .cse263 .cse801))) (let ((.cse746 (= .cse800 0)) (.cse769 (= .cse227 .cse263))) (let-proof ((.cse770 (symm .cse227 .cse263))) (let-proof ((.cse747 (! (res .cse769 .cse770 (let ((.cse798 (< .cse800 0))) (res .cse798 (let ((.cse799 (< 0 .cse800))) (res .cse799 (trichotomy .cse800 0) (farkas 1 .cse122 1 .cse799))) (farkas 1 .cse769 1 .cse798)))) :proves (- .cse122 + .cse746) :EQ))) (res .cse746 .cse747 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse248 (res .cse49 (res .cse50 .cse51 (res .cse118 .cse119 (let-proof ((.cse792 (res .cse396 (! (res .cse794 (res .cse472 .cse795 (res .cse744 .cse745 (trans .cse365 .cse227 .cse192 .cse225 .cse228 0))) .cse796) :proves (+ .cse396 - .cse252 - .cse50 - .cse40 - .cse711 - .cse474) :trans (.cse365 .cse227 .cse192 .cse225 .cse228 0)) .cse797))) (res .cse252 (res .cse253 (res .cse325 (res .cse322 .cse326 (res .cse748 .cse749 (res .cse750 (res .cse751 (res .cse612 (res .cse752 (res .cse613 .cse614 (res .cse615 .cse616 (res .cse753 (! (res .cse754 (res .cse755 (res .cse756 .cse757 (and- 1 .cse756)) (and- 1 .cse755)) (res .cse758 (not+ .cse758) (=>- .cse754))) :proves (+ .cse752 + .cse753) :input) (let ((.cse779 (+ .cse763 (* (- 1) .cse762)))) (let ((.cse759 (= .cse779 0)) (.cse766 (= .cse762 .cse763))) (let-proof ((.cse767 (symm .cse762 .cse763))) (let-proof ((.cse760 (! (res .cse766 .cse767 (let ((.cse777 (< .cse779 0))) (res .cse777 (let ((.cse778 (< 0 .cse779))) (res .cse778 (trichotomy .cse779 0) (farkas 1 .cse753 1 .cse778))) (farkas 1 .cse766 1 .cse777)))) :proves (- .cse753 + .cse759) :EQ))) (res .cse759 .cse760 (let ((.cse761 (= .cse226 .cse763))) (let-proof ((.cse768 (res .cse203 .cse215 (let ((.cse775 (+ .cse763 .cse486))) (let ((.cse771 (= .cse775 0))) (res .cse771 (! (let ((.cse772 (= .cse763 .cse226))) (res .cse772 (symm .cse763 .cse226) (let ((.cse773 (< .cse775 0))) (res .cse773 (let ((.cse774 (< 0 .cse775))) (res .cse774 (trichotomy .cse775 0) (farkas 1 .cse772 1 .cse774))) (farkas 1 .cse761 1 .cse773))))) :proves (- .cse761 + .cse771) :EQ) (! (res .cse95 .cse96 (res .cse725 .cse726 (let ((.cse776 (= 0 .cse775))) (res .cse776 (symm 0 .cse775) (res .cse97 .cse98 (res .cse220 .cse221 (farkas 4 .cse615 4 .cse220 1 .cse28 4 .cse118 4 .cse0 4 .cse39 4 .cse746 1 .cse97 4 .cse433 4 .cse776 4 .cse178 4 .cse8 4 .cse295 4 .cse759 1 .cse24 4 .cse18 1 .cse725 1 .cse95))))))) :proves (- .cse615 - .cse203 - .cse28 - .cse118 - .cse0 - .cse39 - .cse746 - .cse20 - .cse433 - .cse771 - .cse178 - .cse8 - .cse295 - .cse759 - .cse24 - .cse18 + .cse720 - .cse14) :LA (4 (- 4) 1 4 4 4 4 (- 1) 4 (- 4) 4 4 4 4 1 4 (- 1) (- 1))))))))) (res .cse53 (res .cse54 (res .cse58 .cse254 (res .cse57 .cse104 (res .cse205 .cse210 (res .cse761 (res .cse261 .cse262 (! (res .cse764 .cse765 (res .cse766 .cse767 (trans .cse226 .cse263 .cse762 .cse763))) :proves (+ .cse761 - .cse261 - .cse613 - .cse753) :trans (.cse226 .cse263 .cse762 .cse763))) .cse768)))) .cse172) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse720 (res .cse746 .cse747 (res .cse615 .cse616 (res .cse759 .cse760 (res .cse205 .cse298 (res .cse761 (res .cse52 .cse173 (! (res .cse764 .cse765 (res .cse769 .cse770 (res .cse766 .cse767 (trans .cse226 .cse227 .cse263 .cse762 .cse763)))) :proves (+ .cse761 - .cse52 - .cse122 - .cse613 - .cse753) :trans (.cse226 .cse227 .cse263 .cse762 .cse763))) .cse768))))) .cse728))))) :proves (- .cse53 - .cse613 - .cse8 - .cse122 - .cse295 - .cse118 - .cse39 - .cse433 - .cse18 - .cse753 - .cse0 - .cse178) :rup)))))))))))) (! (and- 0 .cse752) :proves (- .cse752 + .cse751) :input)) (! (and- 1 .cse612) :proves (- .cse612 + .cse750) :input)) (! (res (= percent .cse780) (symm percent .cse780) (trans .cse239 percent .cse780 x)) :proves (+ .cse294 - .cse48 - .cse751 - .cse748) :trans (.cse239 percent .cse780 x))) (! (res .cse781 .cse782 (trans .cse282 x .cse780 s)) :proves (+ .cse248 - .cse275 - .cse748 - .cse750) :trans (.cse282 x .cse780 s))))) (! (res .cse14 .cse15 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse30 (res .cse0 .cse7 (res .cse720 (res .cse55 (res .cse56 (res .cse111 .cse471 (res .cse472 .cse473 (res .cse721 .cse722 (res .cse474 .cse475 (res .cse711 .cse723 (res .cse69 (res .cse70 (res .cse197 (res .cse116 (res .cse115 .cse117 (res .cse275 .cse280 (res .cse48 .cse163 (res .cse294 (res .cse128 (res .cse45 (res .cse295 .cse296 (res .cse130 (res .cse123 (res .cse41 (res .cse147 .cse148 (res .cse323 .cse324 (res .cse122 .cse124 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse327 .cse328 (res .cse50 .cse609 (let-proof ((.cse791 (res .cse530 .cse531 (res .cse264 .cse265 (! (res .cse95 .cse96 (res .cse725 .cse726 (res .cse532 .cse533 (res .cse97 .cse98 (res .cse266 .cse267 (farkas 4 .cse323 1 .cse28 4 .cse266 8 .cse0 1 .cse97 8 .cse433 4 .cse532 4 .cse178 4 .cse295 4 .cse327 1 .cse24 1 .cse725 1 .cse95)))))) :proves (- .cse323 - .cse28 - .cse264 - .cse0 - .cse20 - .cse433 - .cse530 - .cse178 - .cse295 - .cse327 - .cse24 + .cse720 - .cse14) :LA (4 1 (- 4) 8 (- 1) 8 (- 4) 4 4 4 1 (- 1) (- 1))))))) (res .cse57 (res .cse58 (res .cse252 (res .cse253 (res .cse78 (res .cse54 (res .cse76 (res .cse72 .cse73 (res .cse74 .cse75 .cse783)) .cse784) (res .cse53 .cse172 (res .cse528 (res .cse314 (! (res .cse785 .cse786 (cong (x_count .cse365) (x_count 3))) :proves (+ .cse314 - .cse53) :cong (.cse302 .cse313)) (! (res .cse787 .cse788 (res .cse789 .cse790 (trans .cse302 .cse313 .cse346 .cse345))) :proves (+ .cse528 - .cse314 - .cse147 - .cse325) :trans (.cse302 .cse313 .cse346 .cse345))) (res .cse260 (res .cse52 .cse173 (! (res .cse744 .cse745 (trans .cse226 .cse227 .cse192 .cse225 .cse228 .cse229)) :proves (+ .cse260 - .cse52 - .cse50 - .cse40 - .cse711 - .cse111) :trans (.cse226 .cse227 .cse192 .cse225 .cse228 .cse229))) .cse791)))) (res .cse628 .cse740 (! (res .cse553 .cse554 (farkas 1 .cse628 1 .cse8 1 .cse553 1 .cse118 1 .cse39 1 .cse18)) :proves (- .cse628 - .cse8 + .cse30 - .cse118 - .cse39 - .cse18) :LA (1 1 (- 1) 1 1 1)))) .cse268) .cse792) .cse104) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse720 (res .cse111 .cse471 (res .cse327 .cse328 (res .cse528 .cse529 (res .cse260 (res .cse261 .cse262 (! (res .cse744 .cse745 (trans .cse226 .cse263 .cse227 .cse192 .cse225 .cse228 .cse229)) :proves (+ .cse260 - .cse261 - .cse122 - .cse50 - .cse40 - .cse711 - .cse111) :trans (.cse226 .cse263 .cse227 .cse192 .cse225 .cse228 .cse229))) .cse791)))) .cse728))))) :proves (- .cse325 - .cse295 - .cse122 - .cse57 - .cse711 - .cse50 - .cse40 - .cse433 - .cse323 - .cse0 - .cse178) :rup)))))))))) .cse46) .cse129) .cse208)) .cse604) .cse299) .cse300)))) .cse198) .cse793) .cse91) .cse535)))))) .cse170) .cse211) .cse728)) .cse312)))))) :proves (- .cse433 + .cse149 - .cse325 - .cse178 - .cse18 - .cse118 - .cse1 - .cse8) :rup)) .cse268) .cse792)))) .cse271) .cse718)))))))))) .cse46) .cse129) .cse208)) .cse604) .cse299) .cse300)))) .cse198) .cse793)) .cse91) .cse535)))))) .cse170) .cse211) .cse728)))))) :proves (+ .cse149 - .cse433 - .cse8 - .cse178 - .cse18 - .cse1) :rup)) (.cse717 (res .cse274 .cse743 (! (res .cse744 .cse745 (trans .cse226 .cse225 .cse228 .cse229)) :proves (+ .cse260 - .cse274 - .cse711 - .cse111) :trans (.cse226 .cse225 .cse228 .cse229)))) (.cse719 (! (res .cse14 .cse15 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse30 (res .cse0 .cse7 (res .cse8 .cse13 (res .cse720 (res .cse43 .cse316 (res .cse294 .cse317 (res .cse318 .cse319 (let-proof ((.cse738 (! (res .cse425 .cse426 (res .cse245 .cse246 (res .cse741 (! (res .cse570 .cse571 (res .cse369 .cse370 (trans 120 x .cse239 s 115))) :proves (+ .cse741 - .cse245 - .cse294 - .cse45 - .cse425) :trans (120 x .cse239 s 115)) (! .cse742 :proves (- .cse741) :EQ)))) :proves (- .cse45 - .cse294) :rup))) (res .cse45 (res .cse48 (res .cse41 (res .cse49 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse628 (res .cse69 (res .cse70 (res .cse252 (res .cse253 (res .cse78 (res .cse149 (! (res .cse14 .cse15 (res .cse731 .cse732 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse733 (res .cse28 .cse29 (res .cse734 .cse735 (res .cse720 (res .cse26 .cse736 (res .cse174 .cse737 (res .cse45 (res .cse48 (res .cse41 (res .cse115 (res .cse49 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse69 (res .cse70 (res .cse55 (res .cse56 (res .cse206 (res .cse53 (res .cse54 (res .cse58 .cse652 (res .cse57 .cse104 (res .cse147 (res .cse130 .cse148 (res .cse128 .cse208 (res .cse127 .cse158 (res .cse125 (res .cse321 (res .cse359 .cse360 (res .cse123 (res .cse322 (res .cse122 .cse124 (res .cse325 .cse326 (res .cse327 .cse328 (res .cse528 .cse529 (res .cse52 .cse160 (res .cse530 .cse531 (res .cse199 .cse200 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse725 .cse726 (res .cse532 .cse533 (res .cse97 .cse98 (farkas 4 .cse318 1 .cse28 4 .cse118 4 .cse359 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse532 4 .cse8 4 .cse197 4 .cse327 1 .cse24 4 .cse18 1 .cse725 1 .cse95 4 .cse218)))))) :proves (- .cse318 - .cse28 - .cse118 - .cse359 - .cse0 - .cse39 - .cse20 - .cse433 - .cse530 - .cse8 - .cse197 - .cse327 - .cse24 - .cse18 + .cse720 - .cse14 - .cse199) :LA (4 1 4 4 4 4 (- 1) 4 (- 4) 4 4 4 1 4 (- 1) (- 1) (- 4)))))))))) .cse355) .cse126)) .cse456) (! (res .cse399 .cse400 (trans .cse239 x .cse356 s)) :proves (+ .cse45 - .cse294 - .cse127 - .cse125) :trans (.cse239 x .cse356 s)))))) .cse279))) .cse172) .cse212) .cse213) .cse170) .cse211) .cse91) .cse730))))))) .cse162) .cse163) .cse46) .cse300) .cse738))) .cse728))) .cse739)))))) :proves (- .cse433 + .cse78 + .cse149 - .cse18 - .cse318 - .cse0 - .cse8 - .cse294) :rup) (res .cse202 .cse216 (res .cse199 (res .cse52 (res .cse55 (res .cse56 (res .cse53 (res .cse54 (res .cse58 .cse652 (res .cse57 .cse104 (res .cse122 (res .cse123 .cse124 (res .cse128 .cse129 (res .cse125 .cse126 (res .cse248 (res .cse321 (res .cse131 .cse132 (res .cse612 (res .cse613 .cse614 (res .cse615 .cse616 (res .cse619 .cse724 (! (res .cse95 .cse96 (res .cse725 .cse726 (res .cse222 .cse223 (res .cse621 .cse622 (res .cse97 .cse98 (farkas 4 .cse131 4 .cse615 4 .cse318 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse621 4 .cse8 4 .cse222 1 .cse24 4 .cse18 1 .cse725 1 .cse95)))))) :proves (- .cse131 - .cse615 - .cse318 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse619 - .cse8 - .cse202 - .cse24 - .cse18 + .cse720 - .cse14) :LA (4 4 4 1 4 4 4 (- 1) 4 (- 4) 4 (- 4) 1 4 (- 1) (- 1)))))) .cse623)) .cse624) .cse272)))) .cse160))) .cse172) .cse173) .cse170) .cse171) .cse200) (! (res .cse95 .cse96 (res .cse218 .cse219 (res .cse725 .cse726 (res .cse222 .cse223 (res .cse97 .cse98 (farkas 4 .cse318 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse8 4 .cse222 1 .cse24 4 .cse18 1 .cse725 4 .cse218 1 .cse95)))))) :proves (- .cse318 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse8 - .cse202 - .cse24 - .cse18 + .cse720 - .cse199 - .cse14) :LA (4 1 4 4 4 (- 1) 4 4 (- 4) 1 4 (- 1) (- 4) (- 1)))))) .cse740) .cse268) .cse729) .cse91) .cse730) .cse633))))) .cse162) .cse46) .cse300) .cse738))))) .cse728))) .cse312)))))) :proves (- .cse433 - .cse9 - .cse110 - .cse1 - .cse18) :rup))) (res .cse50 (res .cse110 (res .cse49 .cse51 (res .cse111 .cse112 (res .cse711 (! (res .cse666 .cse667 (trans .cse228 .cse229 .cse225)) :proves (+ .cse711 - .cse111 - .cse659) :trans (.cse228 .cse229 .cse225)) (res .cse178 .cse179 (res .cse48 .cse162 (res .cse248 .cse271 (res .cse149 .cse712 (res .cse202 .cse216 (res .cse264 (res .cse260 (res .cse276 .cse277 (res .cse45 (res .cse128 (res .cse275 (res .cse69 (res .cse70 (res .cse41 (res .cse123 (res .cse115 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse199 (res .cse52 (res .cse122 .cse124 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse53 (res .cse54 (res .cse57 (res .cse58 (res .cse478 (res .cse479 (res .cse56 .cse713 (res .cse55 .cse170 (res .cse714 .cse715 (! (trans .cse226 .cse192 .cse225 .cse229) :proves (+ .cse260 - .cse714 - .cse40 - .cse659) :trans (.cse226 .cse192 .cse225 .cse229))))) .cse487) .cse716) .cse104) .cse160) .cse172) .cse173)))) .cse200) (! (res .cse95 .cse96 (res .cse218 .cse219 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse178 4 .cse276 4 .cse8 1 .cse101 4 .cse222 1 .cse24 4 .cse18 4 .cse218 1 .cse95)))))) :proves (- .cse28 - .cse0 - .cse39 - .cse20 - .cse433 - .cse178 - .cse276 - .cse8 - .cse26 - .cse202 - .cse24 - .cse18 - .cse199 - .cse14) :LA (1 4 4 (- 1) 4 4 4 4 (- 1) (- 4) 1 4 (- 4) (- 1)))))) .cse280) .cse129) .cse46) .cse91) .cse717) .cse718) .cse603) .cse604)) .cse265) .cse677))))))))) .cse719) (! (res .cse14 .cse15 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse30 (res .cse0 .cse7 (res .cse8 .cse13 (res .cse720 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse110 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse721 .cse722 (res .cse711 .cse723 (res .cse149 .cse712 (res .cse202 .cse216 (res .cse264 (res .cse260 (res .cse69 (res .cse70 (res .cse519 (res .cse118 .cse119 (res .cse39 (res .cse40 (res .cse41 .cse42 (res .cse43 .cse44 (res .cse45 .cse46 (res .cse113 .cse114 (let-proof ((.cse727 (! (res .cse95 .cse96 (res .cse218 .cse219 (res .cse725 .cse726 (res .cse222 .cse223 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse0 1 .cse97 4 .cse433 4 .cse178 4 .cse113 4 .cse8 4 .cse222 1 .cse24 4 .cse18 1 .cse725 4 .cse218 1 .cse95)))))) :proves (- .cse28 - .cse118 - .cse0 - .cse20 - .cse433 - .cse178 - .cse113 - .cse8 - .cse202 - .cse24 - .cse18 + .cse720 - .cse199 - .cse14) :LA (1 4 4 (- 1) 4 4 4 4 (- 4) 1 4 (- 1) (- 4) (- 1))))) (res .cse199 (res .cse52 (res .cse48 (res .cse57 (res .cse58 (res .cse53 (res .cse54 (res .cse55 (res .cse56 (res .cse450 .cse522 (res .cse449 .cse452 (res .cse115 (res .cse116 .cse117 (res .cse478 (! (res .cse557 .cse558 (res .cse559 .cse560 (trans .cse365 .cse229 .cse228 .cse313))) :proves (+ .cse478 - .cse449 - .cse111 - .cse116) :trans (.cse365 .cse229 .cse228 .cse313)) .cse716)) .cse163))) .cse170) .cse171) .cse172) .cse173) .cse104) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse720 (res .cse48 (res .cse199 (res .cse52 (res .cse122 (res .cse123 .cse124 (res .cse128 .cse129 (res .cse125 .cse126 (res .cse321 (res .cse131 .cse132 (res .cse612 (res .cse613 .cse614 (res .cse615 .cse616 (res .cse619 .cse724 (! (res .cse95 .cse96 (res .cse725 .cse726 (res .cse222 .cse223 (res .cse621 .cse622 (res .cse97 .cse98 (farkas 4 .cse131 4 .cse615 1 .cse28 4 .cse118 4 .cse0 1 .cse97 4 .cse433 4 .cse621 4 .cse178 4 .cse113 4 .cse8 4 .cse222 1 .cse24 4 .cse18 1 .cse725 1 .cse95)))))) :proves (- .cse131 - .cse615 - .cse28 - .cse118 - .cse0 - .cse20 - .cse433 - .cse619 - .cse178 - .cse113 - .cse8 - .cse202 - .cse24 - .cse18 + .cse720 - .cse14) :LA (4 4 1 4 4 (- 1) 4 (- 4) 4 4 4 (- 4) 1 4 (- 1) (- 1)))))) .cse623)) (! (res .cse563 .cse564 (trans .cse239 s .cse356 percent)) :proves (+ .cse48 - .cse45 - .cse125 - .cse321) :trans (.cse239 s .cse356 percent)))))) .cse160) .cse200) .cse727) .cse604) .cse728))))) :proves (- .cse433 - .cse202 - .cse57 - .cse113 - .cse18 - .cse45 - .cse8 - .cse118 - .cse0 - .cse178) :rup)) .cse604) .cse200) .cse727)))))) .cse166) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse28 .cse29 (res .cse0 .cse7 (res .cse8 .cse13 (res .cse720 (res .cse110 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse149 .cse712 (res .cse202 .cse216 (res .cse118 .cse119 (res .cse40 .cse242 (res .cse199 (res .cse52 (res .cse69 (res .cse70 (res .cse252 (res .cse253 (res .cse53 (res .cse54 (res .cse55 (res .cse56 (res .cse58 .cse254 (res .cse57 .cse104 (res .cse122 (res .cse123 .cse124 (res .cse125 .cse126 (res .cse128 .cse129 (res .cse131 .cse132 (res .cse248 (res .cse321 (res .cse612 (res .cse613 .cse614 (res .cse615 .cse616 (res .cse619 .cse724 (! (res .cse95 .cse96 (res .cse725 .cse726 (res .cse222 .cse223 (res .cse621 .cse622 (res .cse97 .cse98 (farkas 4 .cse131 4 .cse615 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse621 4 .cse178 4 .cse8 4 .cse222 1 .cse24 4 .cse18 1 .cse725 1 .cse95)))))) :proves (- .cse131 - .cse615 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse619 - .cse178 - .cse8 - .cse202 - .cse24 - .cse18 + .cse720 - .cse14) :LA (4 4 1 4 4 4 (- 1) 4 (- 4) 4 4 (- 4) 1 4 (- 1) (- 1)))))) .cse623) .cse624) .cse272))))) .cse160))) .cse170) .cse171) .cse172) .cse173) .cse268) .cse729) .cse91) .cse730) .cse200) (! (res .cse95 .cse96 (res .cse218 .cse219 (res .cse725 .cse726 (res .cse222 .cse223 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse178 4 .cse8 4 .cse222 1 .cse24 4 .cse18 1 .cse725 4 .cse218 1 .cse95)))))) :proves (- .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse178 - .cse8 - .cse202 - .cse24 - .cse18 + .cse720 - .cse199 - .cse14) :LA (1 4 4 4 (- 1) 4 4 4 (- 4) 1 4 (- 1) (- 4) (- 1)))))))))) .cse719) .cse728))))))) :proves (- .cse433 - .cse50 - .cse39 - .cse18 - .cse1 - .cse9) :rup))) .cse544) .cse91) .cse717) .cse265) (! (res .cse95 .cse96 (res .cse725 .cse726 (res .cse97 .cse98 (res .cse222 .cse223 (res .cse266 .cse267 (farkas 4 .cse178 1 .cse28 4 .cse266 8 .cse0 4 .cse222 1 .cse24 1 .cse97 8 .cse433 1 .cse725 1 .cse95)))))) :proves (- .cse178 - .cse28 - .cse264 - .cse0 - .cse202 - .cse24 - .cse20 - .cse433 + .cse720 - .cse14) :LA (4 1 (- 4) 8 (- 4) 1 (- 1) 8 (- 1) (- 1)))))))))) .cse719))) .cse468)) .cse728))) .cse312)))))) :proves (- .cse433 - .cse50 - .cse9 - .cse1 - .cse18) :rup))))))))))))) .cse468)))))))) :proves (- .cse433 - .cse8 - .cse0 - .cse18) :rup))) (res .cse8 (res .cse9 (res .cse10 .cse11 (res .cse47 .cse606 (res .cse43 (res .cse110 (res .cse41 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse40 .cse42 (! (res .cse14 .cse15 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 (res .cse519 (res .cse8 (res .cse9 (res .cse10 .cse11 (res .cse47 .cse606 (res .cse4 .cse12 (let ((.cse699 (+ .cse225 .cse688 (- 1)))) (let ((.cse654 (= 0 .cse699)) (.cse642 (= .cse699 0))) (let-proof ((.cse655 (symm 0 .cse699))) (let-proof ((.cse643 (! (res .cse690 (res .cse10 (and+ .cse10) (res .cse691 (res .cse692 .cse693 (and- 0 .cse692)) (=>- .cse691))) (let ((.cse694 (= .cse690 .cse642))) (res .cse694 (res .cse642 (res .cse690 (=+1 .cse694) (let ((.cse695 (= .cse696 .cse225))) (res .cse695 (symm .cse696 .cse225) (let ((.cse697 (< .cse699 0))) (res .cse697 (let ((.cse698 (< 0 .cse699))) (res .cse698 (trichotomy .cse699 0) (farkas 1 .cse690 1 .cse698))) (farkas 1 .cse695 1 .cse697)))))) (res .cse690 (res .cse654 .cse655 (let ((.cse700 (< .cse225 .cse696))) (res .cse700 (let ((.cse701 (< .cse696 .cse225))) (res .cse701 (trichotomy .cse225 .cse696) (farkas 1 .cse642 1 .cse701))) (farkas 1 .cse654 1 .cse700)))) (=+2 .cse694))) (=-2 .cse694)))) :proves (- .cse47 - .cse4 + .cse642) :input))) (res .cse642 .cse643 (res .cse111 .cse471 (let ((.cse681 (+ .cse228 .cse688))) (let ((.cse644 (<= .cse681 0))) (let-proof ((.cse645 (! (let ((.cse689 (<= 1 .cse681))) (res .cse689 (total-int .cse681 0) (res .cse81 .cse82 (farkas 1 .cse178 1 .cse0 1 .cse81 1 .cse689 1 .cse433)))) :proves (- .cse178 - .cse0 - .cse18 + .cse644 - .cse433) :LA (1 1 (- 1) (- 1) 1)))) (res .cse644 .cse645 (let ((.cse687 (+ .cse228 .cse688 1))) (let ((.cse646 (<= .cse687 0))) (let-proof ((.cse665 (! (res .cse454 .cse455 (res .cse236 .cse237 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse236 1 .cse646 1 .cse18 1 .cse454)))) :proves (- .cse178 - .cse0 - .cse646 - .cse18 - .cse433) :LA ((- 1) (- 1) 1 1 (- 1))))) (res .cse646 (let ((.cse647 (= .cse681 0))) (let-proof ((.cse648 (! (let ((.cse684 (< .cse681 0))) (res .cse684 (let ((.cse685 (< 0 .cse681))) (res .cse685 (trichotomy .cse681 0) (farkas 1 .cse685 1 .cse644))) (let ((.cse686 (<= 1 .cse687))) (res .cse686 (total-int .cse687 0) (farkas 1 .cse686 1 .cse684))))) :proves (+ .cse646 + .cse647 - .cse644) :trichotomy))) (res .cse647 .cse648 (let ((.cse649 (= .cse228 .cse224))) (let-proof ((.cse650 (! (let ((.cse680 (= 0 .cse681))) (res .cse680 (symm 0 .cse681) (let ((.cse682 (< .cse228 .cse224))) (res .cse682 (let ((.cse683 (< .cse224 .cse228))) (res .cse683 (trichotomy .cse228 .cse224) (farkas 1 .cse647 1 .cse683))) (farkas 1 .cse680 1 .cse682))))) :proves (+ .cse649 - .cse647) :EQ))) (res .cse649 .cse650 (let-proof ((.cse675 (res .cse678 .cse679 (! (res (= .cse224 .cse228) (symm .cse224 .cse228) (trans .cse226 .cse224 .cse228 .cse229)) :proves (+ .cse260 - .cse678 - .cse649 - .cse111) :trans (.cse226 .cse224 .cse228 .cse229))))) (let-proof ((.cse661 (res .cse396 .cse545 .cse675))) (let-proof ((.cse656 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse8 (res .cse9 (res .cse10 .cse11 (res .cse47 .cse606 (res .cse4 .cse12 (res .cse642 .cse643 (res .cse111 .cse471 (res .cse644 .cse645 (res .cse646 (res .cse647 .cse648 (res .cse649 .cse650 (res .cse197 .cse198 (res .cse264 (res .cse307 (res .cse260 (res .cse274 (res .cse55 (res .cse56 (res .cse478 .cse537 .cse661) .cse170) .cse285) .cse308) .cse265) (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse309 .cse310 (farkas 4 .cse309 4 .cse178 4 .cse642 1 .cse28 1 .cse101 4 .cse0 4 .cse222 1 .cse24 1 .cse97 4 .cse18 4 .cse433 1 .cse95)))))) :proves (- .cse307 - .cse178 - .cse642 - .cse28 - .cse26 - .cse0 - .cse202 - .cse24 - .cse20 - .cse18 - .cse433 - .cse14) :LA ((- 4) 4 4 1 (- 1) 4 (- 4) 1 (- 1) 4 4 (- 1)))) .cse677)))) .cse665))))))) .cse13) .cse673))) .cse468))))))) :proves (- .cse202 - .cse433 + .cse58 - .cse18 - .cse0 - .cse116 + .cse54 - .cse40 - .cse178) :rup))) (let-proof ((.cse657 (! (res .cse16 .cse17 (res .cse30 (res .cse1 .cse301 (res .cse111 .cse471 (res .cse472 .cse473 (res .cse474 .cse475 (res .cse197 .cse198 (res .cse547 (res .cse53 (res .cse54 (res .cse57 (res .cse58 (res .cse202 (res .cse149 (res .cse55 (res .cse56 (res .cse69 (res .cse70 (res .cse479 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse78 .cse79 (res .cse548 (! (res .cse454 .cse455 (res .cse236 .cse237 (res .cse337 .cse338 (res .cse383 .cse384 (res .cse549 .cse550 (farkas 1 .cse549 1 .cse383 1 .cse337 1 .cse236 1 .cse454 1 .cse78)))))) :proves (+ .cse548 - .cse178 - .cse197 - .cse0 - .cse433 - .cse78) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) (! .cse676 :proves (+ .cse547 + .cse479 - .cse548) :trichotomy)))))) (res .cse478 .cse487 .cse552)) .cse91) .cse535) .cse170) .cse211) .cse216) .cse656) .cse104) .cse160) .cse172) .cse173) .cse664)))))) .cse312)) :proves (- .cse433 - .cse122 + .cse52 - .cse116 - .cse18 - .cse0 - .cse40 - .cse178) :rup)) (.cse674 (! (res .cse587 .cse588 (farkas 1 .cse587 1 .cse0)) :proves (- .cse585 - .cse0) :LA ((- 1) 1)))) (let-proof ((.cse651 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse1 .cse301 (res .cse585 (res .cse8 (res .cse9 (res .cse10 .cse11 (res .cse47 .cse606 (res .cse4 .cse12 (res .cse320 (res .cse642 .cse643 (res .cse111 .cse471 (res .cse49 .cse51 (res .cse248 .cse271 (res .cse275 (res .cse48 .cse162 (res .cse128 (res .cse43 (res .cse115 (res .cse276 .cse277 (res .cse123 (res .cse130 (res .cse41 (res .cse116 .cse117 (res .cse122 .cse124 (res .cse147 .cse148 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse52 .cse657 (res .cse274 (res .cse199 .cse200 (res .cse55 (res .cse56 (res .cse149 .cse538 (res .cse202 .cse216 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 4 .cse642 1 .cse28 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse178 4 .cse276 1 .cse101 4 .cse222 1 .cse24 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse642 - .cse28 - .cse0 - .cse39 - .cse20 - .cse433 - .cse178 - .cse276 - .cse26 - .cse202 - .cse24 - .cse18 - .cse14 - .cse199) :LA (4 1 4 4 (- 1) 4 4 4 (- 1) (- 4) 1 4 (- 1) (- 4))))) .cse170) .cse285)) .cse539))))))) .cse44) .cse208) .cse129)) .cse280) (! (res .cse640 .cse641 (trans .cse282 s .cse238 percent)) :proves (+ .cse128 - .cse248 - .cse47 - .cse43) :trans (.cse282 s .cse238 percent))) .cse272)) (! (res .cse542 .cse543 (trans .cse238 s .cse282 x)) :proves (+ .cse320 - .cse47 - .cse248 - .cse275) :trans (.cse238 s .cse282 x))))))) .cse586)))) .cse13) .cse673) .cse674))))))) :proves (+ .cse50 - .cse433 - .cse178 - .cse18 - .cse0) :rup))) (res .cse50 .cse651 (res .cse118 .cse119 (res .cse449 (res .cse450 (res .cse78 (res .cse39 .cse166 (let-proof ((.cse653 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 4 .cse642 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse178 1 .cse101 4 .cse222 1 .cse24 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse642 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse178 - .cse26 - .cse202 - .cse24 - .cse18 - .cse14 - .cse199) :LA (4 1 4 4 4 (- 1) 4 4 (- 1) (- 4) 1 4 (- 1) (- 4))))) (res .cse116 (res .cse115 .cse117 (res .cse275 .cse280 (res .cse48 .cse163 (res .cse295 .cse296 (res .cse294 (res .cse128 (res .cse123 (res .cse130 (res .cse122 .cse124 (res .cse147 .cse148 (res .cse52 (! (res .cse16 .cse17 (res .cse57 (res .cse58 (res .cse53 (res .cse54 (res .cse55 (res .cse56 (res .cse70 .cse600 (res .cse69 .cse91 .cse270)) .cse170) .cse171) .cse172) .cse173) .cse104) .cse160)) :proves (- .cse122 - .cse40 + .cse78 + .cse52 - .cse50) :rup) (res .cse199 .cse200 (res .cse202 (res .cse203 (res .cse149 (res .cse205 (res .cse55 (res .cse56 (res .cse69 (res .cse70 (res .cse53 (res .cse54 (res .cse58 .cse652 .cse297) .cse172) .cse298) .cse91) .cse535) .cse170) .cse211) .cse215) .cse216) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse220 .cse221 (farkas 4 .cse642 4 .cse220 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse178 1 .cse101 4 .cse295 1 .cse24 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse642 - .cse203 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse178 - .cse26 - .cse295 - .cse24 - .cse18 - .cse14 - .cse199) :LA (4 (- 4) 1 4 4 4 (- 1) 4 4 (- 1) 4 1 4 (- 1) (- 4)))) .cse653))))) .cse208) .cse129) .cse299) .cse300))))) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse1 .cse301 (res .cse585 (res .cse8 (res .cse9 (res .cse10 .cse11 (res .cse47 .cse606 (res .cse4 .cse12 (res .cse320 (res .cse642 .cse643 (res .cse111 .cse471 (res .cse50 .cse651 (res .cse118 .cse119 (res .cse39 .cse166 (res .cse52 (res .cse53 (res .cse54 (res .cse122 (res .cse55 (res .cse56 (res .cse123 .cse124 (res .cse128 .cse129 (res .cse125 .cse126 (res .cse127 (res .cse131 .cse132 (res .cse133 (res .cse134 (! (res .cse135 .cse136 (farkas 1 .cse135 1 .cse131 1 .cse642 1 .cse118 1 .cse39 1 .cse18)) :proves (+ .cse134 - .cse131 - .cse642 - .cse118 - .cse39 - .cse18) :LA ((- 1) 1 1 1 1 1)) (res .cse137 .cse138 (! (res .cse81 .cse82 (res .cse411 .cse412 (res .cse139 .cse140 (res .cse654 .cse655 (res .cse143 .cse144 (farkas 1 .cse143 1 .cse654 1 .cse139 1 .cse411 1 .cse81 1 .cse137)))))) :proves (- .cse131 - .cse642 - .cse118 - .cse39 - .cse18 - .cse137) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)))) (res .cse145 .cse146 (res .cse130 (res .cse147 .cse148 (res .cse149 .cse538 (res .cse67 .cse151 (res .cse202 .cse216 (res .cse65 .cse94 (res .cse58 .cse656 (res .cse57 .cse104 (res .cse152 .cse153 (res .cse154 .cse155 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 1 .cse101 4 .cse0 1 .cse24 1 .cse97 4 .cse433 4 .cse154 1 .cse95))))) :proves (- .cse65 - .cse28 - .cse26 - .cse0 - .cse24 - .cse20 - .cse433 - .cse154 - .cse14) :LA ((- 4) 1 (- 1) 4 1 (- 1) 4 4 (- 1)))))))))))) .cse158)))) (! (res .cse563 .cse564 (trans .cse238 s .cse356 x)) :proves (+ .cse320 - .cse47 - .cse125 - .cse127) :trans (.cse238 s .cse356 x)))))) .cse170) .cse171) .cse657) .cse172) .cse173) (! (res .cse14 .cse15 (res .cse174 .cse175 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 (res .cse1 .cse301 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse8 (res .cse9 (res .cse10 .cse11 (res .cse47 .cse606 (res .cse4 .cse12 (res .cse642 .cse643 (res .cse658 (res .cse659 (res .cse111 .cse471 (res .cse644 .cse645 (res .cse646 (res .cse647 .cse648 (res .cse649 .cse650 (res .cse50 .cse651 (res .cse118 .cse119 (res .cse39 .cse166 (res .cse589 (res .cse590 (! (res .cse591 .cse592 (farkas 1 .cse591 1 .cse642 1 .cse118 1 .cse39 1 .cse18)) :proves (+ .cse590 - .cse642 - .cse118 - .cse39 - .cse18) :LA ((- 1) 1 1 1 1)) (res .cse593 .cse594 (! (res .cse81 .cse82 (res .cse411 .cse412 (res .cse139 .cse140 (res .cse654 .cse655 (farkas 1 .cse654 1 .cse139 1 .cse411 1 .cse81 1 .cse593))))) :proves (- .cse642 - .cse118 - .cse39 - .cse18 - .cse593) :LA ((- 1) (- 1) (- 1) (- 1) 1)))) (res .cse597 .cse598 (res .cse197 .cse198 (res .cse547 (res .cse260 (res .cse199 .cse200 (res .cse478 (res .cse479 (res .cse78 (res .cse202 (res .cse502 (res .cse149 (res .cse503 (res .cse69 (res .cse70 (res .cse55 (res .cse56 (res .cse206 (res .cse53 (res .cse54 (res .cse58 .cse652 (res .cse57 .cse104 (res .cse147 (res .cse130 .cse148 (res .cse128 .cse208 (res .cse127 .cse158 (res .cse359 .cse360 (res .cse504 .cse505 (res .cse506 .cse507 (res .cse508 .cse509 (! (res .cse510 .cse511 (trans .cse302 .cse346 1 .cse227 .cse192 .cse225)) :proves (+ .cse503 - .cse508 - .cse506 - .cse597 - .cse50 - .cse40) :trans (.cse302 .cse346 1 .cse227 .cse192 .cse225))))))))) .cse538))) .cse172) .cse212) .cse213) .cse170) .cse211) .cse91) .cse535) .cse512) .cse216) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse513 .cse514 (res .cse101 .cse102 (farkas 8 .cse642 1 .cse28 1 .cse101 4 .cse118 4 .cse513 4 .cse39 1 .cse24 1 .cse97 8 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse642 - .cse28 - .cse26 - .cse118 - .cse502 - .cse39 - .cse24 - .cse20 - .cse18 - .cse14 - .cse199) :LA (8 1 (- 1) 4 (- 4) 4 1 (- 1) 8 (- 1) (- 4)))) .cse653) .cse660) .cse487) .cse661)) (! (res .cse413 .cse414 (res .cse415 .cse416 (res .cse662 .cse663 (trans .cse225 .cse192 .cse227 .cse226 .cse229)))) :proves (+ .cse659 - .cse40 - .cse50 - .cse52 - .cse260) :trans (.cse225 .cse192 .cse227 .cse226 .cse229))) .cse664))))))))) .cse665))) (! (res .cse666 .cse667 (res .cse668 (res .cse669 .cse670 (farkas 1 .cse666 1 .cse669)) (farkas 1 .cse659 1 .cse668))) :proves (- .cse659 + .cse658) :EQ)) (! (res .cse81 .cse82 (res .cse654 .cse655 (res .cse671 .cse672 (farkas 1 .cse671 1 .cse654 1 .cse0 1 .cse81 1 .cse433)))) :proves (- .cse658 - .cse642 - .cse0 - .cse18 - .cse433) :LA ((- 1) (- 1) 1 (- 1) 1))))))) .cse13) .cse673))) .cse468))) .cse312)))))))) :proves (- .cse52 - .cse433 - .cse116 - .cse18 - .cse0 - .cse40 - .cse178) :rup))))))) .cse586)))) .cse13) .cse673) .cse674))))))) :proves (- .cse116 - .cse433 - .cse40 - .cse18 - .cse0 - .cse178) :rup)))) (res .cse565 (! (res .cse566 .cse567 (res .cse454 .cse455 (res .cse236 .cse237 (farkas 1 .cse236 1 .cse78 1 .cse454 1 .cse566)))) :proves (- .cse0 - .cse78 - .cse433 + .cse565) :LA ((- 1) 1 (- 1) (- 1))) .cse568)) .cse452) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse1 .cse301 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse260 (res .cse396 .cse561 .cse675) (res .cse264 .cse265 (res .cse67 .cse453 (res .cse65 .cse94 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse266 .cse267 (res .cse101 .cse102 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 1 .cse101 4 .cse266 8 .cse0 1 .cse24 1 .cse97 8 .cse433 1 .cse95)))))) :proves (- .cse65 - .cse28 - .cse26 - .cse264 - .cse0 - .cse24 - .cse20 - .cse433 - .cse14) :LA ((- 4) 1 (- 1) (- 4) 8 1 (- 1) 8 (- 1))))))))) .cse468)))))))) :proves (- .cse449 - .cse649 - .cse111 - .cse433 - .cse0) :rup))))))))))))))) .cse665))))))))))))))))) .cse13) .cse673) .cse544) .cse312))))))) :proves (- .cse433 - .cse40 - .cse178 - .cse0 - .cse18) :rup)))) .cse44) .cse316) .cse165))) .cse13) .cse673)))))) :proves (- .cse18 - .cse433 - .cse0) :rup))) (res .cse0 (res .cse1 (res .cse2 .cse3 (let-proof ((.cse584 (! (and- 1 .cse2) :proves (- .cse2 + .cse320) :input))) (res .cse320 .cse584 (res .cse4 .cse5 (res .cse585 .cse586 (res .cse176 (res .cse177 (let-proof ((.cse607 (! (res .cse425 .cse426 (res .cse245 .cse246 (res .cse427 (! (res .cse428 .cse429 (res .cse640 .cse641 (trans 115 s .cse238 x 120))) :proves (+ .cse427 - .cse425 - .cse47 - .cse320 - .cse245) :trans (115 s .cse238 x 120)) .cse430))) :proves (- .cse320 - .cse47) :rup))) (res .cse47 (res .cse10 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse43 (res .cse41 (res .cse110 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse180 (res .cse391 (! (res .cse392 .cse393 (farkas 1 .cse392 1 .cse178 1 .cse585 1 .cse433)) :proves (+ .cse391 - .cse178 - .cse585 - .cse433) :LA ((- 1) 1 1 1)) (res .cse394 .cse395 (! (res .cse454 .cse455 (res .cse587 .cse588 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse587 1 .cse454 1 .cse394)))) :proves (- .cse178 - .cse585 - .cse433 - .cse394) :LA ((- 1) (- 1) (- 1) 1)))) (res .cse182 .cse183 (let-proof ((.cse605 (! (res .cse14 .cse15 (res .cse243 .cse244 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse245 .cse246 (res .cse0 (res .cse1 (res .cse2 .cse3 (res .cse320 .cse584 (res .cse4 .cse5 (res .cse585 .cse586 (res .cse47 (res .cse10 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse50 .cse609 (res .cse40 .cse242 (let-proof ((.cse610 (res .cse593 (! (res .cse635 .cse636 (farkas 1 .cse635 1 .cse8 1 .cse118 1 .cse39 1 .cse18)) :proves (+ .cse593 - .cse8 - .cse118 - .cse39 - .cse18) :LA ((- 1) 1 1 1 1)) (let ((.cse637 (<= .cse639 0))) (res .cse637 (! (res .cse289 (res .cse290 .cse291 (farkas 1 .cse290 1 .cse593)) (let ((.cse638 (<= 1 .cse639))) (res .cse638 (total-int .cse639 0) (farkas 1 .cse638 1 .cse289)))) :proves (+ .cse637 + .cse273 - .cse593) :trichotomy) (! (res .cse81 .cse82 (res .cse411 .cse412 (res .cse139 .cse140 (res .cse83 .cse84 (farkas 1 .cse83 1 .cse139 1 .cse411 1 .cse81 1 .cse637))))) :proves (- .cse8 - .cse118 - .cse39 - .cse18 - .cse637) :LA ((- 1) (- 1) (- 1) (- 1) 1))))))) (res .cse273 .cse610 (let-proof ((.cse611 (! (res .cse250 (symm 0 .cse227) (res .cse290 (res .cse289 (trichotomy 0 .cse227) .cse293) .cse292)) :proves (+ .cse250 - .cse273) :EQ))) (res .cse250 .cse611 (res .cse199 (res .cse52 (res .cse69 (res .cse70 (res .cse55 (res .cse56 (res .cse53 (res .cse54 (res .cse252 (res .cse253 (res .cse58 .cse254 (res .cse57 .cse104 (res .cse122 (res .cse205 (! (res .cse47 (res .cse147 (res .cse122 (res .cse130 .cse148 (res .cse123 .cse124 (res .cse127 .cse158 (res .cse125 .cse126 (! (res .cse399 .cse400 (trans .cse238 x .cse356 s)) :proves (+ .cse47 - .cse320 - .cse127 - .cse125) :trans (.cse238 x .cse356 s)))))) .cse160) .cse210) .cse607) :proves (- .cse320 + .cse52 + .cse205 - .cse57) :rup) (res .cse203 .cse215 (res .cse123 .cse124 (res .cse128 .cse129 (res .cse125 .cse126 (res .cse248 (res .cse321 (res .cse131 .cse132 (res .cse612 (res .cse613 .cse614 (res .cse615 .cse616 (res .cse617 .cse618 (res .cse619 .cse620 (res .cse197 .cse536 (! (res .cse95 .cse96 (res .cse101 .cse102 (res .cse621 .cse622 (res .cse97 .cse98 (res .cse220 .cse221 (farkas 4 .cse131 4 .cse615 4 .cse220 1 .cse28 4 .cse118 4 .cse39 1 .cse97 4 .cse433 4 .cse621 4 .cse178 4 .cse8 4 .cse585 4 .cse197 1 .cse101 1 .cse24 4 .cse18 1 .cse95)))))) :proves (- .cse131 - .cse615 - .cse203 - .cse28 - .cse118 - .cse39 - .cse20 - .cse433 - .cse619 - .cse178 - .cse8 - .cse585 - .cse197 - .cse26 - .cse24 - .cse18 - .cse14) :LA (4 4 (- 4) 1 4 4 (- 1) 4 (- 4) 4 4 4 4 (- 1) 1 4 (- 1)))))))) .cse623)) .cse624) .cse272)))))) .cse160))) .cse268) .cse269) .cse172) .cse173) .cse170) .cse171) .cse91) .cse270) .cse200) (! (res .cse14 .cse15 (res .cse174 .cse175 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse0 (res .cse1 (res .cse2 .cse3 (res .cse320 .cse584 (res .cse4 .cse5 (res .cse585 .cse586 (res .cse111 .cse471 (let-proof ((.cse625 (res .cse396 (! (res (= .cse227 .cse365) (symm .cse227 .cse365) (trans 0 .cse227 .cse365)) :proves (+ .cse396 - .cse250 - .cse252) :trans (0 .cse227 .cse365)) .cse634)) (.cse626 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse99 .cse100 (res .cse101 .cse102 (farkas 4 .cse8 1 .cse28 1 .cse101 4 .cse118 4 .cse99 4 .cse39 1 .cse24 1 .cse97 4 .cse18 4 .cse433 1 .cse95 4 .cse218)))))) :proves (- .cse8 - .cse28 - .cse26 - .cse118 - .cse66 - .cse39 - .cse24 - .cse20 - .cse18 - .cse433 - .cse14 - .cse199) :LA (4 1 (- 1) 4 (- 4) 4 1 (- 1) 4 4 (- 1) (- 4)))) (.cse627 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse39 1 .cse97 4 .cse433 4 .cse178 4 .cse8 4 .cse585 1 .cse101 4 .cse222 1 .cse24 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse118 - .cse39 - .cse20 - .cse433 - .cse178 - .cse8 - .cse585 - .cse26 - .cse202 - .cse24 - .cse18 - .cse14 - .cse199) :LA (1 4 4 (- 1) 4 4 4 4 (- 1) (- 4) 1 4 (- 1) (- 4))))) (res .cse115 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse273 .cse610 (res .cse202 (res .cse203 (res .cse66 (res .cse250 .cse611 (res .cse149 (res .cse205 (res .cse68 (res .cse55 (res .cse56 (res .cse69 (res .cse70 (res .cse206 (res .cse53 (res .cse54 (res .cse252 (res .cse253 (res .cse58 .cse254 (res .cse57 .cse104 (res .cse147 (res .cse130 .cse148 (res .cse127 .cse158 (res .cse128 .cse208 (res .cse359 .cse360 (res .cse361 .cse362 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse363 .cse364 (farkas 4 .cse363 1 .cse28 4 .cse118 4 .cse359 4 .cse39 1 .cse97 4 .cse433 4 .cse178 4 .cse8 4 .cse585 1 .cse101 4 .cse197 1 .cse24 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse361 - .cse28 - .cse118 - .cse359 - .cse39 - .cse20 - .cse433 - .cse178 - .cse8 - .cse585 - .cse26 - .cse197 - .cse24 - .cse18 - .cse14 - .cse199) :LA ((- 4) 1 4 4 4 (- 1) 4 4 4 4 (- 1) 4 1 4 (- 1) (- 4)))))))) .cse210))) .cse268) .cse625) .cse172) .cse212) .cse213) .cse91) .cse535) .cse170) .cse211) .cse93) .cse215) .cse216)) .cse626) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse220 .cse221 (farkas 4 .cse220 1 .cse28 4 .cse118 4 .cse39 1 .cse97 4 .cse433 4 .cse178 4 .cse8 4 .cse585 1 .cse101 4 .cse197 1 .cse24 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse203 - .cse28 - .cse118 - .cse39 - .cse20 - .cse433 - .cse178 - .cse8 - .cse585 - .cse26 - .cse197 - .cse24 - .cse18 - .cse14 - .cse199) :LA ((- 4) 1 4 4 (- 1) 4 4 4 4 (- 1) 4 1 4 (- 1) (- 4)))) .cse627)))) (! (res .cse14 .cse15 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 (res .cse0 (res .cse1 (res .cse2 .cse3 (res .cse320 .cse584 (res .cse4 .cse5 (res .cse585 .cse586 (res .cse111 .cse471 (res .cse276 (res .cse48 .cse163 (res .cse275 .cse280 (res .cse294 (res .cse128 (res .cse248 (res .cse47 (res .cse295 .cse296 (res .cse130 (res .cse10 (res .cse147 .cse148 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse273 .cse610 (res .cse202 (res .cse203 (res .cse628 (res .cse250 .cse611 (res .cse149 (res .cse205 (res .cse69 (res .cse70 (res .cse55 (res .cse56 (res .cse53 (res .cse54 (res .cse57 (res .cse58 (res .cse253 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse78 .cse79 (res .cse629 (! (res .cse81 .cse82 (res .cse411 .cse412 (res .cse139 .cse140 (res .cse83 .cse84 (res .cse630 .cse631 (farkas 1 .cse630 1 .cse83 1 .cse139 1 .cse411 1 .cse81 1 .cse78)))))) :proves (+ .cse629 - .cse8 - .cse118 - .cse39 - .cse18 - .cse78) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) (! .cse632 :proves (+ .cse628 + .cse253 - .cse629) :trichotomy)))))) (res .cse252 .cse268 (res .cse68 .cse625 (res .cse66 .cse93 .cse626)))) .cse104) .cse210) .cse172) .cse298) .cse170) .cse211) .cse91) .cse535) .cse215) .cse216)) .cse633) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse220 .cse221 (farkas 4 .cse220 1 .cse28 4 .cse118 4 .cse39 1 .cse97 4 .cse433 4 .cse178 4 .cse8 4 .cse585 1 .cse101 4 .cse295 1 .cse24 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse203 - .cse28 - .cse118 - .cse39 - .cse20 - .cse433 - .cse178 - .cse8 - .cse585 - .cse26 - .cse295 - .cse24 - .cse18 - .cse14 - .cse199) :LA ((- 4) 1 4 4 (- 1) 4 4 4 4 (- 1) 4 1 4 (- 1) (- 4)))) .cse627))))) .cse606) .cse208)) (! (res (= x .cse238) (symm x .cse238) (trans .cse282 x .cse238 s)) :proves (+ .cse248 - .cse275 - .cse320 - .cse47) :trans (.cse282 x .cse238 s))) .cse277) .cse299) .cse300))) (! (res .cse595 .cse596 (farkas 1 .cse595 1 .cse118)) :proves (- .cse276 - .cse118) :LA ((- 1) 1)))))))) .cse7) .cse608) .cse312))))))) :proves (- .cse115 - .cse433 - .cse118 - .cse199 - .cse18 - .cse178 - .cse39) :rup)))))))) .cse7) .cse608))))))) :proves (- .cse118 - .cse433 - .cse199 - .cse178 - .cse18 - .cse39 - .cse8) :rup)))))))))) .cse606) .cse607))))) .cse7) .cse608)))))))) :proves (- .cse118 - .cse433 - .cse39 - .cse178 - .cse18) :rup))) (res .cse118 (res .cse50 (res .cse49 .cse51 (res .cse48 .cse162 (res .cse248 .cse271 (res .cse275 (res .cse45 (res .cse128 (res .cse276 .cse277 (res .cse115 (res .cse589 (res .cse590 (! (res .cse591 .cse592 (farkas 1 .cse591 1 .cse276 1 .cse8 1 .cse39 1 .cse18)) :proves (+ .cse590 - .cse276 - .cse8 - .cse39 - .cse18) :LA ((- 1) 1 1 1 1)) (res .cse593 .cse594 (! (res .cse81 .cse82 (res .cse411 .cse412 (res .cse83 .cse84 (res .cse595 .cse596 (farkas 1 .cse595 1 .cse83 1 .cse411 1 .cse81 1 .cse593))))) :proves (- .cse276 - .cse8 - .cse39 - .cse18 - .cse593) :LA ((- 1) (- 1) (- 1) (- 1) 1)))) (res .cse597 .cse598 (res .cse130 (res .cse116 .cse117 (res .cse147 .cse148 (res .cse36 (let-proof ((.cse602 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse0 (res .cse1 (res .cse2 .cse3 (res .cse320 .cse584 (res .cse47 (res .cse10 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse37 .cse38 (res .cse68 .cse90 (res .cse66 .cse93 (res .cse274 (res .cse396 .cse397 .cse546) (res .cse307 .cse308 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse99 .cse100 (res .cse101 .cse102 (res .cse309 .cse310 (farkas 4 .cse309 4 .cse8 1 .cse28 1 .cse101 4 .cse99 1 .cse24 1 .cse97 4 .cse18 4 .cse433 1 .cse95)))))) :proves (- .cse307 - .cse8 - .cse28 - .cse26 - .cse66 - .cse24 - .cse20 - .cse18 - .cse433 - .cse14) :LA ((- 4) 4 1 (- 1) (- 4) 1 (- 1) 4 4 (- 1))))))))) .cse62)))) .cse606) .cse607))) .cse7) .cse608)))))) :proves (- .cse88 - .cse433 - .cse18) :rup))) (res .cse88 (res .cse71 (let-proof ((.cse601 (res .cse80 (! (res .cse85 .cse86 (res .cse81 .cse82 (res .cse83 .cse84 (farkas 1 .cse83 1 .cse81 1 .cse78 1 .cse85)))) :proves (- .cse8 - .cse18 - .cse78 + .cse80) :LA ((- 1) (- 1) 1 (- 1))) .cse417))) (res .cse78 (let-proof ((.cse599 (res .cse70 .cse600 (res .cse69 .cse91 .cse535)))) (res .cse52 (! (res .cse14 .cse15 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 (res .cse0 (res .cse1 (res .cse2 .cse3 (res .cse320 .cse584 (res .cse4 .cse5 (res .cse585 .cse586 (res .cse47 (res .cse10 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse43 (res .cse41 (res .cse110 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse118 (res .cse50 (res .cse49 .cse51 (res .cse48 .cse162 (res .cse248 .cse271 (res .cse45 (res .cse128 (res .cse123 (res .cse122 .cse124 (res .cse36 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse37 .cse38 (res .cse88 (res .cse71 (res .cse78 (res .cse53 (res .cse54 (res .cse57 (res .cse58 (res .cse149 (! (res .cse16 .cse17 (res .cse55 (res .cse56 .cse599 .cse170) .cse211)) :proves (+ .cse149 + .cse78 + .cse58 - .cse111 + .cse54) :rup) (res .cse67 .cse151 (res .cse65 .cse94 (res .cse63 (res .cse307 (res .cse59 (res .cse274 (res .cse55 (res .cse56 (res .cse70 .cse600 .cse371) .cse170) .cse285) .cse308) .cse64) (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse156 .cse157 (res .cse309 .cse310 (farkas 4 .cse309 4 .cse8 4 .cse156 4 .cse585 1 .cse28 1 .cse101 1 .cse24 1 .cse97 4 .cse18 4 .cse433 1 .cse95)))))) :proves (- .cse307 - .cse8 - .cse65 - .cse585 - .cse28 - .cse26 - .cse24 - .cse20 - .cse18 - .cse433 - .cse14) :LA ((- 4) 4 (- 4) 4 1 (- 1) 1 (- 1) 4 4 (- 1)))) (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse156 .cse157 (farkas 4 .cse156 4 .cse585 1 .cse28 1 .cse101 4 .cse63 1 .cse24 1 .cse97 4 .cse433 1 .cse95))))) :proves (- .cse65 - .cse585 - .cse28 - .cse26 - .cse63 - .cse24 - .cse20 - .cse433 - .cse14) :LA ((- 4) 4 1 (- 1) 4 1 (- 1) 4 (- 1))))))) .cse104) .cse160) .cse172) .cse173) .cse601) .cse89) .cse602))) .cse62)) .cse311)) .cse129) .cse603) .cse604)))) .cse119) .cse605))))) .cse316) .cse44) .cse368))) .cse606) .cse607))))) .cse7) .cse608) .cse312))))))) :proves (- .cse433 + .cse52 - .cse18) :rup) (res .cse274 (res .cse199 .cse200 (res .cse55 (res .cse56 (res .cse202 (res .cse149 (res .cse206 (res .cse53 (res .cse54 (res .cse120 (res .cse57 (res .cse58 .cse599 .cse104) .cse121) .cse150) .cse172) .cse212) .cse213) .cse216) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse39 1 .cse97 4 .cse433 4 .cse178 4 .cse276 4 .cse8 4 .cse585 1 .cse101 4 .cse222 1 .cse24 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse39 - .cse20 - .cse433 - .cse178 - .cse276 - .cse8 - .cse585 - .cse26 - .cse202 - .cse24 - .cse18 - .cse14 - .cse199) :LA (1 4 (- 1) 4 4 4 4 4 (- 1) (- 4) 1 4 (- 1) (- 4)))) .cse170) .cse285)) (! (res .cse230 .cse231 (res (= .cse227 1) (symm .cse227 1) (res .cse286 .cse287 (trans .cse224 .cse225 .cse226 .cse227 1 .cse228 .cse229)))) :proves (+ .cse177 - .cse9 - .cse274 - .cse52 - .cse597 - .cse182 - .cse111) :trans (.cse224 .cse225 .cse226 .cse227 1 .cse228 .cse229))))) .cse601)) .cse89) .cse602)) .cse311))) .cse208))) .cse280)) .cse603) .cse604) (! (res .cse283 .cse284 (trans .cse238 x .cse282 s)) :proves (+ .cse47 - .cse320 - .cse275 - .cse248) :trans (.cse238 x .cse282 s)))))) .cse119) .cse605)))))))) .cse316) .cse44) .cse368))) .cse606) .cse607)) .cse233) (! (res .cse454 .cse455 (res .cse587 .cse588 (farkas 1 .cse587 1 .cse176 1 .cse18 1 .cse454))) :proves (- .cse585 - .cse176 - .cse18 - .cse433) :LA ((- 1) 1 1 (- 1))))))))) .cse7) .cse608)))))))) .cse312)))))))) :proves (- .cse433 - .cse18) :rup))) (res .cse18 (res .cse422 .cse423 (let-proof ((.cse438 (! (and- 0 .cse422) :proves (- .cse422 + .cse418) :input))) (res .cse418 .cse438 (res .cse107 .cse424 (res .cse105 (let ((.cse581 (+ .cse224 (- 1)))) (let ((.cse517 (= 0 .cse581)) (.cse439 (= .cse581 0))) (let-proof ((.cse518 (symm 0 .cse581))) (let-proof ((.cse440 (! (res .cse573 (res .cse422 (and+ .cse422) (res .cse574 (res .cse575 .cse576 (and- 0 .cse575)) (=>- .cse574))) (let ((.cse577 (= .cse573 .cse439))) (res .cse577 (res .cse439 (res .cse573 (=+1 .cse577) (let ((.cse578 (= 1 .cse224))) (res .cse578 (symm 1 .cse224) (let ((.cse579 (< .cse581 0))) (res .cse579 (let ((.cse580 (< 0 .cse581))) (res .cse580 (trichotomy .cse581 0) (farkas 1 .cse573 1 .cse580))) (farkas 1 .cse578 1 .cse579)))))) (res .cse573 (res .cse517 .cse518 (let ((.cse582 (< .cse224 1))) (res .cse582 (let ((.cse583 (< 1 .cse224))) (res .cse583 (trichotomy .cse224 1) (farkas 1 .cse439 1 .cse583))) (farkas 1 .cse517 1 .cse582)))) (=+2 .cse577))) (=-2 .cse577)))) :proves (+ .cse439 - .cse107 - .cse418) :input))) (res .cse439 .cse440 (let-proof ((.cse460 (! (res .cse243 .cse244 (res .cse425 .cse426 (res .cse569 (! (res .cse570 .cse571 (res .cse366 .cse367 (trans 37 percent .cse281 s 115))) :proves (+ .cse569 - .cse243 - .cse4 - .cse107 - .cse425) :trans (37 percent .cse281 s 115)) .cse572))) :proves (- .cse4 - .cse107) :rup))) (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (let-proof ((.cse463 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse439 4 .cse8 1 .cse101 1 .cse24 1 .cse95 4 .cse218)))))) :proves (- .cse65 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse439 - .cse8 - .cse26 - .cse24 - .cse14 - .cse199) :LA ((- 4) 1 4 4 4 (- 1) 4 4 4 (- 1) 1 (- 1) (- 4)))) (.cse451 (! (res .cse16 .cse17 (res .cse30 (res .cse519 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse78 .cse79 (res .cse565 (! (res .cse566 .cse567 (res .cse454 .cse455 (res .cse236 .cse237 (farkas 1 .cse236 1 .cse454 1 .cse566 1 .cse78)))) :proves (- .cse0 - .cse433 + .cse565 - .cse78) :LA ((- 1) (- 1) (- 1) 1)) .cse568))))) .cse544) .cse312)) :proves (+ .cse450 - .cse433 + .cse70 + .cse58 + .cse54 - .cse0 + .cse56) :rup)) (.cse464 (! (res .cse122 (res .cse123 .cse124 (res .cse125 .cse126 (res .cse128 .cse129 (res .cse131 .cse132 (res .cse133 (res .cse134 (! (res .cse135 .cse136 (farkas 1 .cse135 1 .cse131 1 .cse8 1 .cse118 1 .cse39 1 .cse439)) :proves (+ .cse134 - .cse131 - .cse8 - .cse118 - .cse39 - .cse439) :LA ((- 1) 1 1 1 1 1)) (res .cse137 .cse138 (! (res .cse517 .cse518 (res .cse411 .cse412 (res .cse139 .cse140 (res .cse83 .cse84 (res .cse143 .cse144 (farkas 1 .cse143 1 .cse83 1 .cse139 1 .cse411 1 .cse517 1 .cse137)))))) :proves (- .cse131 - .cse8 - .cse118 - .cse39 - .cse439 - .cse137) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)))) (res .cse145 .cse146 .cse153)))))) .cse160) :proves (+ .cse152 - .cse439 - .cse57 + .cse52 - .cse39 - .cse118 - .cse8) :rup)) (.cse466 (! (res .cse563 .cse564 (trans .cse281 s .cse356 x)) :proves (+ .cse105 - .cse107 - .cse125 - .cse127) :trans (.cse281 s .cse356 x))) (.cse467 (res .cse396 .cse561 .cse562))) (let-proof ((.cse459 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse111 .cse471 (res .cse472 .cse473 (res .cse474 .cse475 (let ((.cse526 (= .cse313 0)) (.cse524 (= 0 .cse313))) (let-proof ((.cse525 (! (res .cse557 .cse558 (res .cse559 .cse560 (trans 0 .cse229 .cse228 .cse313))) :proves (+ .cse524 - .cse446 - .cse111 - .cse116) :trans (0 .cse229 .cse228 .cse313))) (.cse527 (! (res .cse526 (symm .cse313 0) (let ((.cse555 (< .cse313 0))) (res .cse555 (let ((.cse556 (< 0 .cse313))) (res .cse556 (trichotomy .cse313 0) (farkas 1 .cse526 1 .cse556))) (farkas 1 .cse524 1 .cse555)))) :proves (- .cse524 + .cse526) :EQ))) (let-proof ((.cse476 (! (res .cse174 .cse175 (res .cse16 .cse17 (res .cse30 (res .cse69 (res .cse70 (res .cse55 (res .cse56 (res .cse524 .cse525 (res .cse526 .cse527 (res .cse547 (res .cse478 (res .cse479 (res .cse206 (res .cse53 (res .cse54 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse548 (res .cse78 .cse79 (! (res .cse549 .cse550 (res .cse524 (symm 0 .cse313) (farkas 1 .cse524 1 .cse78 1 .cse549))) :proves (- .cse526 - .cse78 + .cse548) :LA ((- 1) 1 (- 1)))) .cse551)))) .cse172) .cse212) .cse213) .cse487) .cse552) (! (res .cse553 .cse554 (farkas 1 .cse553 1 .cse526 1 .cse547)) :proves (+ .cse30 - .cse526 - .cse547) :LA ((- 1) 1 1))))) .cse170) .cse211) .cse91) .cse535) .cse312))) :proves (+ .cse149 - .cse474 + .cse58 - .cse111 - .cse116 - .cse1 - .cse446) :rup)) (.cse477 (! (res .cse18 (res .cse422 .cse423 (res .cse107 .cse424 (res .cse4 (res .cse2 (res .cse1 .cse3 (res .cse56 .cse538 (res .cse55 .cse170 .cse211))) .cse5) .cse460))) .cse461) :proves (- .cse433 + .cse149 - .cse147 - .cse111 - .cse116) :rup)) (.cse488 (res .cse396 .cse545 .cse546)) (.cse489 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse156 .cse157 (res .cse309 .cse310 (farkas 4 .cse309 4 .cse8 4 .cse156 1 .cse28 1 .cse101 4 .cse0 1 .cse24 1 .cse97 4 .cse433 4 .cse439 1 .cse95)))))) :proves (- .cse307 - .cse8 - .cse65 - .cse28 - .cse26 - .cse0 - .cse24 - .cse20 - .cse433 - .cse439 - .cse14) :LA ((- 4) 4 (- 4) 1 (- 1) 4 1 (- 1) 4 4 (- 1))))) (let-proof ((.cse516 (! (res .cse14 .cse15 (res .cse16 .cse17 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse111 .cse471 (res .cse472 .cse473 (res .cse474 .cse475 (res .cse519 (let-proof ((.cse520 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse22 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse105 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse111 .cse471 (res .cse40 .cse242 (res .cse49 .cse51 (res .cse248 .cse271 (let-proof ((.cse541 (! (res .cse542 .cse543 (trans .cse281 s .cse282 percent)) :proves (+ .cse4 - .cse107 - .cse248 - .cse128) :trans (.cse281 s .cse282 percent)))) (res .cse128 (let-proof ((.cse540 (! (res .cse542 .cse543 (trans .cse281 s .cse282 x)) :proves (+ .cse105 - .cse107 - .cse248 - .cse275) :trans (.cse281 s .cse282 x)))) (res .cse275 (res .cse130 (res .cse123 (res .cse115 (res .cse147 .cse148 (res .cse122 .cse124 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse52 (res .cse57 (res .cse58 (res .cse53 (res .cse54 (res .cse149 .cse477 (res .cse67 .cse151 (res .cse65 .cse94 (res .cse307 (res .cse274 (res .cse55 (res .cse56 (res .cse478 .cse537 .cse488) .cse170) .cse285) .cse308) .cse489)))) .cse172) .cse173) .cse104) .cse160) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse22 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse105 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse111 .cse471 (res .cse40 .cse242 (res .cse49 .cse51 (res .cse248 .cse271 (res .cse128 (res .cse275 (res .cse48 .cse162 (res .cse276 .cse277 (res .cse130 (res .cse115 (res .cse147 .cse148 (res .cse116 .cse117 (res .cse274 (res .cse199 .cse200 (res .cse202 (res .cse149 (res .cse55 (res .cse56 .cse538 .cse170) .cse285) .cse216) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse439 4 .cse178 4 .cse276 4 .cse8 1 .cse101 4 .cse222 1 .cse24 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse0 - .cse39 - .cse20 - .cse433 - .cse439 - .cse178 - .cse276 - .cse8 - .cse26 - .cse202 - .cse24 - .cse14 - .cse199) :LA (1 4 4 (- 1) 4 4 4 4 4 (- 1) (- 4) 1 (- 1) (- 4))))) .cse539))) .cse280) .cse208))) .cse540) .cse541))))))))) .cse5) .cse12) .cse460)) .cse421)))) .cse461) .cse462)))))) :proves (- .cse433 + .cse50 - .cse52 - .cse178 - .cse39) :rup)))))) .cse280) .cse129) .cse208) .cse540)) .cse541)))))))) .cse468)))))) .cse5) .cse12) .cse460)) .cse421)))) .cse461) .cse462)))))) :proves (+ .cse50 - .cse433 - .cse39 - .cse178) :rup))) (res .cse50 .cse520 (res .cse118 .cse119 (let-proof ((.cse521 (! (res .cse14 .cse15 (res .cse243 .cse244 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse245 .cse246 (res .cse22 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse105 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse40 .cse242 (res .cse50 .cse520 (res .cse118 .cse119 (res .cse53 (res .cse54 (res .cse55 (res .cse56 (res .cse69 (res .cse70 (res .cse449 (res .cse450 (res .cse58 .cse451 (res .cse57 .cse104 (res .cse122 (res .cse152 .cse464 (res .cse154 .cse155 (res .cse123 .cse124 (res .cse128 .cse129 (res .cse125 .cse126 (res .cse127 (res .cse130 (res .cse147 .cse148 (res .cse205 .cse210 (res .cse203 .cse215 (res .cse197 .cse536 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse220 .cse221 (farkas 4 .cse178 4 .cse220 1 .cse28 4 .cse197 1 .cse101 4 .cse0 1 .cse24 1 .cse97 4 .cse433 4 .cse154 1 .cse95))))) :proves (- .cse178 - .cse203 - .cse28 - .cse197 - .cse26 - .cse0 - .cse24 - .cse20 - .cse433 - .cse154 - .cse14) :LA (4 (- 4) 1 4 (- 1) 4 1 (- 1) 4 4 (- 1))))))) .cse158) .cse466)))))) .cse160))) .cse452) .cse467) .cse91) .cse270) .cse170) .cse171) .cse172) .cse173)))))) .cse468)))))) .cse5) .cse12) .cse460)) .cse421)))) .cse461) .cse462)))))))) :proves (+ .cse52 - .cse433 - .cse39 - .cse178) :rup))) (res .cse52 .cse521 (res .cse199 .cse200 (res .cse65 (res .cse202 (res .cse67 (res .cse149 (res .cse69 (res .cse70 (res .cse55 (res .cse56 (let-proof ((.cse523 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse220 .cse221 (farkas 4 .cse220 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse439 4 .cse178 4 .cse8 1 .cse101 4 .cse295 1 .cse24 1 .cse95 4 .cse218)))))) :proves (- .cse203 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse439 - .cse178 - .cse8 - .cse26 - .cse295 - .cse24 - .cse14 - .cse199) :LA ((- 4) 1 4 4 4 (- 1) 4 4 4 4 (- 1) 4 1 (- 1) (- 4))))) (res .cse57 (res .cse58 (res .cse116 (res .cse115 .cse117 (res .cse48 .cse163 (res .cse275 .cse280 (res .cse295 .cse296 (res .cse203 (res .cse205 (res .cse53 (res .cse54 (res .cse450 .cse522 (res .cse449 .cse452 .cse453)) .cse172) .cse298) .cse215) .cse523))))) .cse476) .cse104) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse111 .cse471 (res .cse50 .cse520 (res .cse118 .cse119 (res .cse52 .cse521 (res .cse199 .cse200 (res .cse65 (res .cse67 (res .cse115 (res .cse116 .cse117 (res .cse524 .cse525 (res .cse147 (res .cse526 .cse527 (res .cse130 .cse148 (res .cse127 .cse158 (res .cse128 .cse208 (res .cse321 (res .cse359 .cse360 (res .cse322 (res .cse325 .cse326 (res .cse528 .cse529 (res .cse327 .cse328 (res .cse530 .cse531 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse532 .cse533 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse359 4 .cse39 1 .cse97 4 .cse439 4 .cse532 4 .cse8 1 .cse101 4 .cse327 1 .cse24 4 .cse526 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse118 - .cse359 - .cse39 - .cse20 - .cse439 - .cse530 - .cse8 - .cse26 - .cse327 - .cse24 - .cse526 - .cse14 - .cse199) :LA (1 4 4 4 (- 1) 4 (- 4) 4 (- 1) 4 1 4 (- 1) (- 4))))))) .cse355)) .cse534))))) (res .cse508 .cse509 (! (trans .cse302 .cse346 .cse313 .cse228 .cse229) :proves (+ .cse67 - .cse508 - .cse147 - .cse116 - .cse111) :trans (.cse302 .cse346 .cse313 .cse228 .cse229)))))) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse50 .cse520 (res .cse118 .cse119 (res .cse52 .cse521 (res .cse199 .cse200 (res .cse275 .cse280 (res .cse48 .cse163 (res .cse294 (res .cse128 (res .cse295 .cse296 (res .cse130 (res .cse147 .cse148 (res .cse205 .cse210 (res .cse203 .cse215 .cse523))) .cse208)) .cse299) .cse300))))))))))) .cse5) .cse12) .cse460))))) .cse461)))))) :proves (- .cse115 - .cse433 - .cse57 - .cse39 - .cse178) :rup)) .cse94) .cse463)))))))) .cse468)))))) .cse5) .cse12) .cse460))))) .cse461)))))) :proves (- .cse57 - .cse433 - .cse39 - .cse178) :rup))) .cse170) .cse211) .cse91) .cse535) .cse216) .cse94) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse439 4 .cse178 4 .cse8 1 .cse101 4 .cse222 1 .cse24 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse439 - .cse178 - .cse8 - .cse26 - .cse202 - .cse24 - .cse14 - .cse199) :LA (1 4 4 4 (- 1) 4 4 4 4 (- 1) (- 4) 1 (- 1) (- 4)))) .cse463))))))) .cse544)))))) .cse468)))))) .cse5) .cse12) .cse460))))) .cse461) .cse312))))))) :proves (- .cse39 - .cse433 - .cse178) :rup))) (res .cse39 (res .cse40 (res .cse41 .cse42 (res .cse45 .cse46 (let-proof ((.cse515 (! (res .cse469 .cse470 (trans .cse281 s .cse239 percent)) :proves (+ .cse4 - .cse107 - .cse45 - .cse48) :trans (.cse281 s .cse239 percent)))) (res .cse48 (res .cse43 .cse44 (res .cse49 (res .cse115 (res .cse113 .cse114 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse199 (res .cse52 (res .cse55 (res .cse56 (res .cse53 (res .cse54 (res .cse149 (! (res .cse22 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse105 (res .cse4 (res .cse2 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse58 .cse476 (res .cse57 .cse104 (res .cse147 (res .cse122 (res .cse130 .cse148 (res .cse123 .cse124 (res .cse127 .cse158 (res .cse125 .cse126 .cse466)))) .cse160) .cse477))))) .cse468)))) .cse5) .cse460) .cse421)))) .cse461) .cse462) :proves (+ .cse149 - .cse433 - .cse116 - .cse111 + .cse52 - .cse474) :rup) (res .cse67 .cse151 (res .cse65 .cse94 (res .cse307 (res .cse274 (res .cse478 (res .cse479 (res .cse57 (res .cse58 .cse480 .cse104) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse122 (res .cse123 .cse124 (res .cse128 .cse129 (res .cse125 .cse126 (res .cse131 .cse132 (let ((.cse484 (+ .cse263 .cse486))) (let ((.cse481 (= .cse484 0))) (res .cse481 (res .cse261 .cse262 (! (res .cse348 (symm .cse263 .cse226) (let ((.cse482 (< .cse484 0))) (res .cse482 (let ((.cse483 (< 0 .cse484))) (res .cse483 (trichotomy .cse484 0) (farkas 1 .cse348 1 .cse483))) (farkas 1 .cse261 1 .cse482)))) :proves (- .cse261 + .cse481) :EQ)) (! (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (let ((.cse485 (= 0 .cse484))) (res .cse485 (symm 0 .cse484) (res .cse156 .cse157 (farkas 4 .cse131 4 .cse156 4 .cse485 1 .cse28 4 .cse118 4 .cse0 1 .cse97 4 .cse433 4 .cse439 4 .cse113 4 .cse8 1 .cse101 1 .cse24 1 .cse95))))))) :proves (- .cse131 - .cse65 - .cse481 - .cse28 - .cse118 - .cse0 - .cse20 - .cse433 - .cse439 - .cse113 - .cse8 - .cse26 - .cse24 - .cse14) :LA (4 (- 4) (- 4) 1 4 4 (- 1) 4 4 4 4 (- 1) 1 (- 1)))))))))) .cse160))))) .cse5) .cse12) .cse460))))) .cse461)))))) :proves (- .cse433 - .cse65 - .cse57 - .cse113 + .cse52 - .cse118) :rup)) .cse487) .cse488) .cse308) .cse489)))) .cse172) .cse173) .cse170) .cse171) .cse200) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse31 (let ((.cse493 (+ .cse225 (- 1)))) (let ((.cse490 (= .cse493 0))) (res .cse490 (let ((.cse491 (<= .cse493 0))) (res .cse491 (! (let ((.cse492 (<= 1 .cse493))) (res .cse492 (total-int .cse493 0) (farkas 1 .cse492 1 .cse8 1 .cse439))) :proves (+ .cse491 - .cse8 - .cse439) :LA ((- 1) 1 1)) (! (let ((.cse494 (< .cse493 0))) (res .cse494 (let ((.cse495 (< 0 .cse493))) (res .cse495 (trichotomy .cse493 0) (farkas 1 .cse495 1 .cse491))) (res .cse496 .cse497 (farkas 1 .cse496 1 .cse494)))) :proves (+ .cse31 + .cse490 - .cse491) :trichotomy))) (let ((.cse498 (= 1 .cse225))) (res .cse498 (! (let ((.cse499 (= 0 .cse493))) (res .cse499 (symm 0 .cse493) (let ((.cse500 (< 1 .cse225))) (res .cse500 (let ((.cse501 (< .cse225 1))) (res .cse501 (trichotomy 1 .cse225) (farkas 1 .cse499 1 .cse501))) (farkas 1 .cse490 1 .cse500))))) :proves (+ .cse498 - .cse490) :EQ) (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse111 .cse471 (res .cse472 .cse473 (res .cse474 .cse475 (res .cse39 (res .cse40 (res .cse41 .cse42 (res .cse45 .cse46 (res .cse48 (res .cse43 .cse44 (res .cse49 (res .cse115 (res .cse113 .cse114 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse202 (res .cse502 (res .cse149 (res .cse503 (res .cse147 (res .cse58 .cse476 (res .cse57 .cse104 (res .cse130 .cse148 (res .cse128 .cse208 (res .cse127 .cse158 (res .cse359 .cse360 (res .cse504 .cse505 (res .cse506 .cse507 (res .cse508 .cse509 (! (res .cse510 .cse511 (trans .cse302 .cse346 1 .cse225)) :proves (+ .cse503 - .cse508 - .cse506 - .cse498) :trans (.cse302 .cse346 1 .cse225))))))))))) .cse477) .cse512) .cse216) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse513 .cse514 (res .cse101 .cse102 (farkas 4 .cse113 8 .cse8 1 .cse28 1 .cse101 4 .cse118 4 .cse513 1 .cse24 1 .cse97 8 .cse439 1 .cse95 4 .cse218)))))) :proves (- .cse113 - .cse8 - .cse28 - .cse26 - .cse118 - .cse502 - .cse24 - .cse20 - .cse439 - .cse14 - .cse199) :LA (4 8 1 (- 1) 4 (- 4) 1 (- 1) 8 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse0 1 .cse97 4 .cse433 4 .cse439 4 .cse178 4 .cse113 4 .cse8 1 .cse101 4 .cse222 1 .cse24 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse118 - .cse0 - .cse20 - .cse433 - .cse439 - .cse178 - .cse113 - .cse8 - .cse26 - .cse202 - .cse24 - .cse14 - .cse199) :LA (1 4 4 (- 1) 4 4 4 4 4 (- 1) (- 4) 1 (- 1) (- 4))))))))) .cse163) .cse162)) .cse515))) .cse166) .cse516)))))) .cse468))))))))) (! (res .cse517 .cse518 (res .cse83 .cse84 (farkas 1 .cse31 1 .cse83 1 .cse517))) :proves (- .cse31 - .cse8 - .cse439) :LA (1 (- 1) (- 1)))))) .cse5) .cse12) .cse460))))) .cse461)))))) :proves (- .cse199 - .cse433 - .cse178) :rup))))))) .cse163) .cse162)) .cse515)))) .cse166) .cse516)))))))))) .cse468)))))) .cse5) .cse12) .cse460))))) .cse461)))))) :proves (- .cse178 - .cse433) :rup))) (res .cse178 (res .cse111 (res .cse110 .cse112 (res .cse294 .cse317 (let-proof ((.cse458 (! (res .cse469 .cse470 (trans .cse281 s .cse239 x)) :proves (+ .cse105 - .cse107 - .cse45 - .cse294) :trans (.cse281 s .cse239 x)))) (res .cse45 (res .cse43 .cse316 (res .cse48 (res .cse41 (res .cse318 .cse319 (res .cse115 (res .cse49 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse116 .cse117 (res .cse50 .cse51 (res .cse118 .cse119 (let-proof ((.cse448 (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse22 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse105 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse441 .cse442 (res .cse443 (res .cse444 .cse445 (res .cse446 .cse447 (res .cse178 (res .cse111 (res .cse110 .cse112 (res .cse294 .cse317 (res .cse45 (res .cse43 .cse316 (res .cse48 (res .cse41 (res .cse318 .cse319 (res .cse115 (res .cse49 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse116 .cse117 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse53 (res .cse54 (res .cse55 (res .cse56 (res .cse449 (res .cse450 (res .cse69 (res .cse70 (res .cse58 .cse451 (res .cse57 .cse104 (res .cse122 (res .cse152 .cse464 (res .cse154 .cse155 (res .cse123 .cse124 (res .cse125 .cse126 (res .cse127 (res .cse130 (res .cse147 .cse148 (res .cse205 .cse210 (res .cse149 .cse465 (res .cse202 .cse216 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse222 .cse223 (res .cse101 .cse102 (farkas 4 .cse318 1 .cse28 1 .cse101 4 .cse0 4 .cse222 1 .cse24 1 .cse97 4 .cse433 4 .cse154 1 .cse95))))) :proves (- .cse318 - .cse28 - .cse26 - .cse0 - .cse202 - .cse24 - .cse20 - .cse433 - .cse154 - .cse14) :LA (4 1 (- 1) 4 (- 4) 1 (- 1) 4 4 (- 1))))))) .cse158) .cse466))))) .cse160))) .cse91) .cse270) .cse452) .cse467) .cse170) .cse171) .cse172) .cse173)))))) .cse162) .cse163)) .cse46) .cse300)) .cse458))) .cse179) .cse459))) .cse468)))))) .cse5) .cse12) .cse460)) .cse421)))) .cse461) .cse462)))))) :proves (+ .cse52 - .cse433) :rup))) (res .cse52 .cse448 (res .cse199 .cse200 (res .cse65 (let-proof ((.cse457 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 4 .cse318 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse433 4 .cse439 4 .cse8 1 .cse101 4 .cse222 1 .cse24 1 .cse95 4 .cse218)))))) :proves (- .cse318 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse433 - .cse439 - .cse8 - .cse26 - .cse202 - .cse24 - .cse14 - .cse199) :LA (4 1 4 4 4 (- 1) 4 4 4 (- 1) (- 4) 1 (- 1) (- 4))))) (res .cse202 (res .cse67 (res .cse149 (res .cse206 (res .cse53 (res .cse54 (res .cse55 (res .cse56 (res .cse57 (res .cse58 (res .cse449 (res .cse450 (res .cse70 .cse451 (res .cse69 .cse91 .cse92)) .cse452) .cse453) .cse104) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse22 (res .cse18 (res .cse422 .cse423 (res .cse418 .cse438 (res .cse107 .cse424 (res .cse105 (res .cse439 .cse440 (res .cse4 (res .cse10 (res .cse2 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse1 .cse3 (res .cse0 .cse7 (res .cse178 (res .cse111 (res .cse110 .cse112 (res .cse294 .cse317 (res .cse45 (res .cse43 .cse316 (res .cse48 (res .cse41 (res .cse318 .cse319 (res .cse115 (res .cse49 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse52 .cse448 (res .cse199 .cse200 (res .cse201 (res .cse202 (res .cse204 (res .cse149 (res .cse147 (res .cse130 .cse148 (res .cse128 .cse208 (res .cse127 .cse158 (res .cse321 (res .cse359 .cse360 (res .cse322 (res .cse325 .cse326 (res .cse327 .cse328 (res .cse329 (res .cse330 (! (res .cse331 .cse332 (farkas 1 .cse331 1 .cse318 1 .cse197 1 .cse359 1 .cse0 1 .cse327 1 .cse433)) :proves (+ .cse330 - .cse318 - .cse197 - .cse359 - .cse0 - .cse327 - .cse433) :LA ((- 1) 1 1 1 1 1 1)) (res .cse333 .cse334 (! (res .cse454 .cse455 (res .cse335 .cse336 (res .cse236 .cse237 (res .cse381 .cse382 (res .cse337 .cse338 (res .cse339 .cse340 (farkas 1 .cse339 1 .cse337 1 .cse381 1 .cse236 1 .cse335 1 .cse454 1 .cse333))))))) :proves (- .cse318 - .cse197 - .cse359 - .cse0 - .cse327 - .cse433 - .cse333) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) (- 1) 1)))) (res .cse343 .cse344 (res .cse389 .cse390 (! (trans 2 .cse345 .cse346 .cse302) :proves (+ .cse204 - .cse343 - .cse325 - .cse389) :trans (2 .cse345 .cse346 .cse302))))))) .cse355)) .cse456)))) .cse279) .cse216) .cse217) .cse457) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (farkas 4 .cse8 1 .cse28 1 .cse101 4 .cse118 4 .cse39 1 .cse24 1 .cse97 4 .cse201 4 .cse439 1 .cse95 4 .cse218))))) :proves (- .cse8 - .cse28 - .cse26 - .cse118 - .cse39 - .cse24 - .cse20 - .cse201 - .cse439 - .cse14 - .cse199) :LA (4 1 (- 1) 4 4 1 (- 1) 4 4 (- 1) (- 4)))))))))))) .cse162) .cse163)) .cse46) .cse300)) .cse458))) .cse179) .cse459))))) .cse5) .cse12) .cse460)) .cse421)))) .cse461) .cse462)))))) :proves (- .cse433 - .cse57) :rup)) .cse170) .cse211) .cse172) .cse212) .cse213) .cse216) .cse94) .cse457)) .cse463))))))))) .cse162) .cse163)) .cse46) .cse300)) .cse458)))) .cse179) .cse459))))) .cse468)))))) .cse5) .cse12) .cse460))))))) .cse421))))) .cse461)))))))))))))) .cse462)))))))) :proves (- .cse433) :rup)) :proves (+ .cse419) :rup))) (let-proof ((.cse106 (! (res .cse419 .cse420 (! (and- 1 .cse419) :proves (- .cse419 + .cse105) :input)) :proves (+ .cse105) :rup))) (let-proof ((.cse6 (! (res .cse243 .cse244 (res .cse105 .cse106 (res .cse245 .cse246 (res .cse431 (! (res .cse366 .cse367 (res .cse428 .cse429 (trans 37 percent .cse281 x 120))) :proves (+ .cse431 - .cse243 - .cse4 - .cse105 - .cse245) :trans (37 percent .cse281 x 120)) .cse432)))) :proves (- .cse4) :rup))) (res .cse0 (! (res .cse1 (! (res .cse2 .cse3 (! (res .cse4 .cse5 .cse6) :proves (- .cse2) :rup)) :proves (+ .cse1) :rup) .cse7) :proves (+ .cse0) :rup) (res .cse8 (! (res .cse9 (! (res .cse10 .cse11 (! (res .cse4 .cse12 .cse6) :proves (- .cse10) :rup)) :proves (+ .cse9) :rup) .cse13) :proves (+ .cse8) :rup) (! (res .cse14 .cse15 (res .cse16 .cse17 (let-proof ((.cse169 (! (res .cse425 .cse426 (res .cse105 .cse106 (res .cse245 .cse246 (res .cse427 (! (res .cse428 .cse429 (res (= s .cse281) (symm s .cse281) (trans 115 s .cse281 x 120))) :proves (+ .cse427 - .cse425 - .cse107 - .cse105 - .cse245) :trans (115 s .cse281 x 120)) .cse430)))) :proves (- .cse107) :rup))) (let-proof ((.cse19 (! (res .cse422 .cse423 (! (res .cse107 .cse424 .cse169) :proves (- .cse422) :rup)) :proves (+ .cse18) :rup))) (res .cse18 .cse19 (res .cse20 .cse21 (let-proof ((.cse23 (! (res .cse105 .cse106 (res .cse418 (! (res .cse419 .cse420 (! (and- 0 .cse419) :proves (- .cse419 + .cse418) :input)) :proves (+ .cse418) :rup) .cse421)) :proves (+ .cse22) :rup))) (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse36 (res .cse37 .cse38 (let ((.cse257 (= 1 .cse263)) (.cse255 (= .cse402 0))) (let-proof ((.cse278 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse78 .cse79 (res .cse80 (! (res .cse85 .cse86 (res .cse81 .cse82 (res .cse83 .cse84 (farkas 1 .cse83 1 .cse81 1 .cse85 1 .cse78)))) :proves (- .cse8 - .cse18 + .cse80 - .cse78) :LA ((- 1) (- 1) (- 1) 1)) .cse417))))))) (let ((.cse240 (= percent .cse239))) (let-proof ((.cse251 (! (res .cse413 .cse414 (res .cse415 .cse416 (trans 0 .cse225 .cse192 .cse227))) :proves (+ .cse250 - .cse37 - .cse40 - .cse50) :trans (0 .cse225 .cse192 .cse227))) (.cse256 (res .cse137 (! (res .cse405 .cse406 (farkas 1 .cse405 1 .cse131 1 .cse8 1 .cse118 1 .cse39 1 .cse18)) :proves (+ .cse137 - .cse131 - .cse8 - .cse118 - .cse39 - .cse18) :LA ((- 1) 1 1 1 1 1)) (let ((.cse407 (<= .cse263 0))) (res .cse407 (! (let ((.cse408 (< .cse402 0))) (res .cse408 (let ((.cse409 (< 0 .cse402))) (res .cse409 (trichotomy .cse402 0) (farkas 1 .cse409 1 .cse137))) (let ((.cse410 (<= 1 .cse263))) (res .cse410 (total-int .cse263 0) (farkas 1 .cse410 1 .cse408))))) :proves (+ .cse407 + .cse255 - .cse137) :trichotomy) (! (res .cse81 .cse82 (res .cse411 .cse412 (res .cse139 .cse140 (res .cse83 .cse84 (res .cse143 .cse144 (farkas 1 .cse143 1 .cse83 1 .cse139 1 .cse411 1 .cse81 1 .cse407)))))) :proves (- .cse131 - .cse8 - .cse118 - .cse39 - .cse18 - .cse407) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)))))) (.cse258 (! (let ((.cse401 (= 0 .cse402))) (res .cse401 (symm 0 .cse402) (let ((.cse403 (< 1 .cse263))) (res .cse403 (let ((.cse404 (< .cse263 1))) (res .cse404 (trichotomy 1 .cse263) (farkas 1 .cse401 1 .cse404))) (farkas 1 .cse255 1 .cse403))))) :proves (+ .cse257 - .cse255) :EQ)) (.cse159 (! (res .cse399 .cse400 (trans .cse281 x .cse356 s)) :proves (+ .cse107 - .cse105 - .cse127 - .cse125) :trans (.cse281 x .cse356 s))) (.cse241 (symm percent .cse239)) (.cse207 (! (res .cse16 .cse17 (res .cse18 .cse19 (res .cse30 (res .cse36 .cse278 .cse311) .cse312))) :proves (+ .cse70 + .cse71 + .cse58 + .cse54 - .cse8 + .cse56) :rup)) (.cse214 (res .cse396 .cse397 (let ((.cse398 (= .cse224 .cse226))) (res .cse398 (! (cong (s_count 0) (s_count .cse365)) :proves (+ .cse398 - .cse396) :cong (.cse224 .cse226)) (! (trans 0 .cse225 .cse224 .cse226) :proves (+ .cse59 - .cse37 - .cse9 - .cse398) :trans (0 .cse225 .cse224 .cse226))))))) (let-proof ((.cse181 (res .cse391 (! (res .cse392 .cse393 (farkas 1 .cse392 1 .cse178 1 .cse0 1 .cse22)) :proves (+ .cse391 - .cse178 - .cse0 - .cse22) :LA ((- 1) 1 1 1)) (res .cse394 .cse395 (! (res .cse234 .cse235 (res .cse236 .cse237 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse236 1 .cse234 1 .cse394)))) :proves (- .cse178 - .cse0 - .cse22 - .cse394) :LA ((- 1) (- 1) (- 1) 1))))) (.cse209 (res .cse359 .cse360 (let ((.cse375 (+ .cse346 (- 2)))) (let ((.cse372 (= .cse375 0))) (res .cse372 (let ((.cse373 (<= .cse375 0))) (res .cse373 (! (let ((.cse374 (<= 1 .cse375))) (res .cse374 (total-int .cse375 0) (farkas 1 .cse374 1 .cse178 1 .cse197 1 .cse359 1 .cse0 1 .cse22))) :proves (+ .cse373 - .cse178 - .cse197 - .cse359 - .cse0 - .cse22) :LA ((- 1) 1 1 1 1 1)) (res .cse376 (! (let ((.cse377 (< .cse375 0))) (res .cse377 (let ((.cse378 (< 0 .cse375))) (res .cse378 (trichotomy .cse375 0) (farkas 1 .cse378 1 .cse373))) (res .cse379 .cse380 (farkas 1 .cse379 1 .cse377)))) :proves (+ .cse376 + .cse372 - .cse373) :trichotomy) (! (res .cse234 .cse235 (res .cse236 .cse237 (res .cse381 .cse382 (res .cse337 .cse338 (res .cse383 .cse384 (farkas 1 .cse383 1 .cse337 1 .cse381 1 .cse236 1 .cse234 1 .cse376)))))) :proves (- .cse178 - .cse197 - .cse359 - .cse0 - .cse22 - .cse376) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1))))) (let ((.cse385 (= 2 .cse346))) (res .cse385 (! (let ((.cse386 (= 0 .cse375))) (res .cse386 (symm 0 .cse375) (let ((.cse387 (< 2 .cse346))) (res .cse387 (let ((.cse388 (< .cse346 2))) (res .cse388 (trichotomy 2 .cse346) (farkas 1 .cse386 1 .cse388))) (farkas 1 .cse372 1 .cse387))))) :proves (+ .cse385 - .cse372) :EQ) (res .cse389 .cse390 (! (trans 2 .cse346 .cse302) :proves (+ .cse204 - .cse385 - .cse389) :trans (2 .cse346 .cse302)))))))))) (.cse61 (res .cse88 (res .cse71 (res .cse70 .cse207 .cse371) .cse89) .cse214)) (.cse103 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 1 .cse101 4 .cse0 4 .cse63 1 .cse24 4 .cse22 1 .cse97 1 .cse95))))) :proves (- .cse65 - .cse28 - .cse26 - .cse0 - .cse63 - .cse24 - .cse22 - .cse20 - .cse14) :LA ((- 4) 1 (- 1) 4 4 1 4 (- 1) (- 1)))) (.cse168 (! (res .cse14 .cse15 (res .cse18 .cse19 (res .cse22 .cse23 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse105 .cse106 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse107 (res .cse43 .cse316 (res .cse294 .cse317 (res .cse45 (res .cse318 .cse319 (res .cse320 (res .cse4 (res .cse48 (res .cse47 (res .cse41 (res .cse10 (res .cse49 (res .cse115 (res .cse40 .cse42 (res .cse39 .cse166 (res .cse9 .cse11 (res .cse8 .cse13 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse37 .cse38 (res .cse50 .cse51 (res .cse250 .cse251 (res .cse118 .cse119 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse199 (res .cse52 (res .cse69 (res .cse70 (res .cse55 (res .cse56 (res .cse53 (res .cse54 (res .cse252 (res .cse253 (res .cse58 .cse254 (res .cse57 .cse104 (res .cse122 (res .cse123 .cse124 (res .cse128 .cse129 (res .cse125 .cse126 (res .cse127 (res .cse321 (res .cse131 .cse132 (res .cse255 .cse256 (res .cse257 .cse258 (res .cse130 (res .cse322 (res .cse147 .cse148 (res .cse323 .cse324 (res .cse325 .cse326 (res .cse327 .cse328 (res .cse329 (res .cse330 (! (res .cse331 .cse332 (farkas 1 .cse331 1 .cse323 1 .cse318 1 .cse197 1 .cse0 1 .cse327 1 .cse22)) :proves (+ .cse330 - .cse323 - .cse318 - .cse197 - .cse0 - .cse327 - .cse22) :LA ((- 1) 1 1 1 1 1 1)) (res .cse333 .cse334 (! (res .cse234 .cse235 (res .cse335 .cse336 (res .cse236 .cse237 (res .cse337 .cse338 (res .cse339 .cse340 (res .cse341 .cse342 (farkas 1 .cse341 1 .cse339 1 .cse337 1 .cse236 1 .cse335 1 .cse234 1 .cse333))))))) :proves (- .cse323 - .cse318 - .cse197 - .cse0 - .cse327 - .cse22 - .cse333) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) (- 1) 1)))) (res .cse343 .cse344 (res .cse149 .cse279 (res .cse204 (! (trans 2 .cse345 .cse346 .cse313 .cse228 .cse302) :proves (+ .cse204 - .cse343 - .cse325 - .cse147 - .cse116 - .cse149) :trans (2 .cse345 .cse346 .cse313 .cse228 .cse302)) (res .cse201 .cse217 (let ((.cse347 (= 1 .cse226))) (res .cse347 (res .cse348 .cse349 (! (trans 1 .cse263 .cse226) :proves (+ .cse347 - .cse257 - .cse348) :trans (1 .cse263 .cse226))) (let ((.cse354 (+ .cse226 (- 1)))) (let ((.cse350 (= .cse354 0))) (res .cse350 (! (let ((.cse351 (= .cse226 1))) (res .cse351 (symm .cse226 1) (let ((.cse352 (< .cse354 0))) (res .cse352 (let ((.cse353 (< 0 .cse354))) (res .cse353 (trichotomy .cse354 0) (farkas 1 .cse351 1 .cse353))) (farkas 1 .cse347 1 .cse352))))) :proves (- .cse347 + .cse350) :EQ) (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (farkas 4 .cse350 1 .cse28 1 .cse101 1 .cse24 1 .cse97 4 .cse201 1 .cse95)))) :proves (- .cse350 - .cse28 - .cse26 - .cse24 - .cse20 - .cse201 - .cse14) :LA (4 1 (- 1) 1 (- 1) 4 (- 1))))))))))))))))) .cse355) .cse158)))) (! (res .cse357 .cse358 (trans .cse238 percent .cse356 s)) :proves (+ .cse47 - .cse43 - .cse321 - .cse125) :trans (.cse238 percent .cse356 s))) .cse159)))) .cse160))) .cse268) .cse269) .cse172) .cse173) .cse170) .cse171) .cse91) .cse270) .cse200) (! (res .cse14 .cse15 (res .cse174 .cse175 (res .cse18 .cse19 (res .cse22 .cse23 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse39 .cse166 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse37 .cse38 (res .cse118 .cse119 (res .cse197 .cse198 (res .cse65 (res .cse202 (res .cse66 (res .cse67 (res .cse149 (res .cse68 (res .cse55 (res .cse56 (res .cse206 (res .cse53 (res .cse54 (res .cse88 (res .cse252 (res .cse253 (res .cse69 (res .cse70 (res .cse58 .cse254 (res .cse57 .cse104 (res .cse147 (res .cse130 .cse148 (res .cse128 .cse208 (res .cse127 .cse158 (res .cse359 .cse360 (res .cse361 .cse362 (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse363 .cse364 (farkas 4 .cse363 4 .cse318 1 .cse28 4 .cse118 4 .cse359 4 .cse0 4 .cse39 1 .cse97 4 .cse8 1 .cse101 4 .cse197 1 .cse24 4 .cse22 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse361 - .cse318 - .cse28 - .cse118 - .cse359 - .cse0 - .cse39 - .cse20 - .cse8 - .cse26 - .cse197 - .cse24 - .cse22 - .cse18 - .cse14 - .cse199) :LA ((- 4) 4 1 4 4 4 4 (- 1) 4 (- 1) 4 1 4 4 (- 1) (- 4)))))))) .cse279))) .cse91) .cse92) .cse268) (! (trans .cse365 .cse227 .cse192 .cse225) :proves (+ .cse88 - .cse252 - .cse50 - .cse40) :trans (.cse365 .cse227 .cse192 .cse225))) .cse90) .cse172) .cse212) .cse213) .cse170) .cse211) .cse93) .cse216) .cse94) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse99 .cse100 (res .cse101 .cse102 (farkas 4 .cse8 1 .cse28 1 .cse101 4 .cse118 4 .cse99 4 .cse39 1 .cse24 4 .cse22 1 .cse97 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse8 - .cse28 - .cse26 - .cse118 - .cse66 - .cse39 - .cse24 - .cse22 - .cse20 - .cse18 - .cse14 - .cse199) :LA (4 1 (- 1) 4 (- 4) 4 1 4 (- 1) 4 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 4 .cse318 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse8 1 .cse101 4 .cse222 1 .cse24 4 .cse22 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse318 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse8 - .cse26 - .cse202 - .cse24 - .cse22 - .cse18 - .cse14 - .cse199) :LA (4 1 4 4 4 (- 1) 4 (- 1) (- 4) 1 4 4 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 4 .cse118 4 .cse0 4 .cse39 1 .cse97 4 .cse8 1 .cse101 1 .cse24 4 .cse22 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse65 - .cse28 - .cse118 - .cse0 - .cse39 - .cse20 - .cse8 - .cse26 - .cse24 - .cse22 - .cse18 - .cse14 - .cse199) :LA ((- 4) 1 4 4 4 (- 1) 4 (- 1) 1 4 4 (- 1) (- 4)))))))) .cse62))))))))))) :proves (- .cse199 - .cse318 - .cse8 - .cse40 - .cse50 - .cse116 - .cse0) :rup))))))))) .cse62)))))) .cse163) .cse162) .cse12) .cse46) .cse165) (! (res .cse240 .cse241 (trans .cse238 percent .cse239 x)) :proves (+ .cse320 - .cse43 - .cse48 - .cse294) :trans (.cse238 percent .cse239 x))) (! (res .cse366 .cse367 (trans .cse238 percent .cse281 x)) :proves (+ .cse320 - .cse43 - .cse4 - .cse105) :trans (.cse238 percent .cse281 x))) .cse368)) (! (res .cse369 .cse370 (trans .cse281 x .cse239 s)) :proves (+ .cse107 - .cse105 - .cse294 - .cse45) :trans (.cse281 x .cse239 s))))) .cse169))))))))) :proves (- .cse110 - .cse0) :rup))) (let-proof ((.cse167 (! (res .cse14 .cse15 (res .cse174 .cse175 (res .cse16 .cse17 (res .cse18 .cse19 (res .cse22 .cse23 (res .cse20 .cse21 (res .cse24 .cse25 (res .cse105 .cse106 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 (res .cse107 (res .cse110 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse9 .cse60 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse36 (res .cse37 .cse38 (res .cse40 .cse242 (let-proof ((.cse259 (! (res .cse314 .cse315 (trans .cse302 .cse313 .cse228 .cse229)) :proves (+ .cse67 - .cse205 - .cse116 - .cse111) :trans (.cse302 .cse313 .cse228 .cse229))) (.cse247 (! (res .cse16 .cse17 (res .cse18 .cse19 (res .cse30 (res .cse1 .cse301 (res .cse110 (res .cse111 .cse112 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse36 (res .cse37 .cse38 (res .cse65 (res .cse67 (res .cse68 (res .cse149 (res .cse69 (res .cse70 (res .cse88 (res .cse71 (res .cse55 (res .cse56 .cse278 .cse170) .cse211) .cse89) .cse90) .cse91) .cse92) .cse151) (! (res .cse304 .cse305 .cse306) :proves (+ .cse67 - .cse68 - .cse1) :trans (.cse302 .cse303 .cse229))) .cse94) (! (res .cse14 .cse15 (res .cse18 .cse19 (res .cse20 .cse21 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse9 .cse60 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse37 .cse38 (res .cse63 (res .cse307 (res .cse59 (res .cse274 (res .cse55 (res .cse56 .cse61 .cse170) .cse285) .cse308) .cse64) (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse156 .cse157 (res .cse309 .cse310 (farkas 4 .cse309 4 .cse8 4 .cse156 1 .cse28 1 .cse101 4 .cse0 1 .cse24 4 .cse22 1 .cse97 4 .cse18 1 .cse95)))))) :proves (- .cse307 - .cse8 - .cse65 - .cse28 - .cse26 - .cse0 - .cse24 - .cse22 - .cse20 - .cse18 - .cse14) :LA ((- 4) 4 (- 4) 1 (- 1) 4 1 4 (- 1) 4 (- 1)))) .cse103))) .cse62)))))))))) :proves (- .cse65 - .cse40 + .cse58 - .cse8 + .cse54 - .cse0) :rup))) .cse311)) .cse62))) .cse168)) .cse312))) :proves (- .cse40 + .cse58 + .cse54 - .cse8 - .cse0) :rup))) (res .cse52 (! (res .cse243 .cse244 (res .cse245 .cse246 (res .cse40 .cse242 (res .cse53 (res .cse54 (res .cse58 .cse247 (res .cse57 .cse104 (res .cse122 (res .cse123 .cse124 (res .cse128 .cse129 (res .cse248 (res .cse49 (res .cse50 .cse51 (res .cse116 .cse249 (! (res .cse14 .cse15 (res .cse18 .cse19 (res .cse20 .cse21 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse105 .cse106 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse107 (res .cse110 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse180 .cse181 (res .cse182 .cse183 (res .cse9 .cse60 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse37 .cse38 (res .cse40 .cse242 (res .cse53 (res .cse54 (res .cse250 .cse251 (res .cse118 .cse119 (res .cse55 (res .cse56 (res .cse69 (res .cse70 (res .cse252 (res .cse253 (res .cse58 .cse254 (res .cse57 .cse104 (res .cse122 (res .cse123 .cse124 (res .cse125 .cse126 (res .cse127 (res .cse128 .cse129 (res .cse131 .cse132 (res .cse255 .cse256 (res .cse257 .cse258 (res .cse130 (res .cse147 .cse148 (res .cse205 .cse210 (res .cse67 .cse259 (res .cse65 .cse94 (res .cse260 (res .cse261 .cse262 (! (res (= .cse263 1) (symm .cse263 1) (trans .cse226 .cse263 1 .cse228 .cse229)) :proves (+ .cse260 - .cse261 - .cse257 - .cse182 - .cse111) :trans (.cse226 .cse263 1 .cse228 .cse229))) (res .cse264 .cse265 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse266 .cse267 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 4 .cse266 1 .cse101 8 .cse0 1 .cse24 8 .cse22 1 .cse97 1 .cse95)))))) :proves (- .cse65 - .cse28 - .cse264 - .cse26 - .cse0 - .cse24 - .cse22 - .cse20 - .cse14) :LA ((- 4) 1 (- 4) (- 1) 8 1 8 (- 1) (- 1))))))))) .cse158))))) .cse159))) .cse160))) .cse268) .cse269) .cse91) .cse270) .cse170) .cse171))) .cse172) .cse173)))) .cse62))))))) .cse168) .cse169))))))))) :proves (+ .cse52 - .cse39 - .cse116 - .cse50 - .cse8 - .cse0) :rup))) .cse271) .cse272))) .cse160))) .cse172) .cse173)))) :proves (+ .cse52 - .cse39 - .cse8 - .cse0) :rup) (res .cse199 .cse200 (res .cse273 (res .cse250 (res .cse274 (res .cse59 (res .cse50 (res .cse55 (res .cse56 (res .cse88 (res .cse71 (res .cse49 .cse51 (res .cse248 .cse271 (res .cse275 (res .cse48 .cse162 (res .cse128 (res .cse115 (res .cse276 .cse277 (res .cse130 (res .cse116 .cse117 (res .cse147 .cse148 (res .cse65 (res .cse202 (res .cse67 (res .cse149 (res .cse69 (res .cse70 (res .cse206 (res .cse53 (res .cse54 (res .cse57 (res .cse58 .cse278 .cse104) .cse279) .cse172) .cse212) .cse213) .cse91) .cse92) .cse216) .cse94) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse0 4 .cse39 1 .cse97 4 .cse178 4 .cse276 4 .cse8 1 .cse101 4 .cse222 1 .cse24 4 .cse22 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse0 - .cse39 - .cse20 - .cse178 - .cse276 - .cse8 - .cse26 - .cse202 - .cse24 - .cse22 - .cse18 - .cse14 - .cse199) :LA (1 4 4 (- 1) 4 4 4 (- 1) (- 4) 1 4 4 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 4 .cse0 4 .cse39 1 .cse97 4 .cse276 4 .cse8 1 .cse101 1 .cse24 4 .cse22 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse65 - .cse28 - .cse0 - .cse39 - .cse20 - .cse276 - .cse8 - .cse26 - .cse24 - .cse22 - .cse18 - .cse14 - .cse199) :LA ((- 4) 1 4 4 (- 1) 4 4 (- 1) 1 4 4 (- 1) (- 4)))))) .cse208)) .cse280) .cse272)) (! (res .cse283 .cse284 (trans .cse281 x .cse282 s)) :proves (+ .cse107 - .cse105 - .cse275 - .cse248) :trans (.cse281 x .cse282 s))))) .cse89) .cse214) .cse170) .cse285) .cse251) (! (trans 0 .cse226 .cse227) :proves (+ .cse250 - .cse59 - .cse52) :trans (0 .cse226 .cse227))) (! (res .cse286 .cse287 (trans 0 .cse225 .cse226 .cse227)) :proves (+ .cse250 - .cse37 - .cse274 - .cse52) :trans (0 .cse225 .cse226 .cse227))) (! (res .cse273 .cse288 (res .cse289 (res .cse290 .cse291 .cse292) .cse293)) :proves (- .cse250 + .cse273) :EQ)) (! (res .cse14 .cse15 (res .cse174 .cse175 (res .cse20 .cse21 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse110 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse201 (res .cse65 (res .cse202 (res .cse204 (res .cse67 (res .cse149 (res .cse115 (res .cse116 .cse117 (res .cse205 (res .cse197 .cse198 (res .cse206 (res .cse53 (res .cse54 (res .cse58 .cse247 (res .cse57 .cse104 (res .cse147 (res .cse130 .cse148 (res .cse127 .cse158 (res .cse128 .cse208 .cse209))) .cse210))) .cse172) .cse212) .cse213)) .cse259)) (! (res .cse14 .cse15 (res .cse20 .cse21 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse110 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse48 .cse163 (res .cse275 .cse280 (res .cse294 (res .cse128 (res .cse295 .cse296 (res .cse203 (res .cse205 (res .cse130 (res .cse53 (res .cse54 (res .cse147 .cse148 (res .cse58 .cse247 .cse297)) .cse172) .cse298) .cse208) .cse215) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse220 .cse221 (farkas 4 .cse178 4 .cse220 1 .cse28 1 .cse101 4 .cse295 4 .cse0 1 .cse24 4 .cse22 1 .cse97 4 .cse273 1 .cse95 4 .cse218)))))) :proves (- .cse178 - .cse203 - .cse28 - .cse26 - .cse295 - .cse0 - .cse24 - .cse22 - .cse20 - .cse273 - .cse14 - .cse199) :LA (4 (- 4) 1 (- 1) 4 4 1 4 (- 1) 4 (- 1) (- 4))))) .cse299) .cse300))))) .cse168))))))) :proves (- .cse115 - .cse273 - .cse40 - .cse8 - .cse199 - .cse0) :rup)) .cse216) .cse94) .cse217) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse222 .cse223 (res .cse101 .cse102 (farkas 4 .cse178 1 .cse28 1 .cse101 4 .cse222 4 .cse0 1 .cse24 4 .cse22 1 .cse97 4 .cse273 1 .cse95 4 .cse218)))))) :proves (- .cse178 - .cse28 - .cse26 - .cse202 - .cse0 - .cse24 - .cse22 - .cse20 - .cse273 - .cse14 - .cse199) :LA (4 1 (- 1) (- 4) 4 1 4 (- 1) 4 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 1 .cse101 4 .cse0 1 .cse24 4 .cse22 1 .cse97 4 .cse273 1 .cse95 4 .cse218)))))) :proves (- .cse65 - .cse28 - .cse26 - .cse0 - .cse24 - .cse22 - .cse20 - .cse273 - .cse14 - .cse199) :LA ((- 4) 1 (- 1) 4 1 4 (- 1) 4 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (farkas 1 .cse28 1 .cse101 1 .cse24 1 .cse97 4 .cse273 4 .cse201 1 .cse95 4 .cse218))))) :proves (- .cse28 - .cse26 - .cse24 - .cse20 - .cse273 - .cse201 - .cse14 - .cse199) :LA (1 (- 1) 1 (- 1) 4 4 (- 1) (- 4)))))) .cse168)))))))) :proves (- .cse273 - .cse40 - .cse8 - .cse199 - .cse0) :rup))))))) .cse311)) .cse62))))) .cse168) .cse169) .cse312))))))))))) :proves (- .cse8 - .cse39 - .cse0) :rup))) (res .cse39 (res .cse40 (res .cse41 .cse42 (res .cse43 .cse44 (res .cse45 .cse46 (res .cse47 (let-proof ((.cse164 (! (res .cse240 .cse241 (trans .cse238 percent .cse239 s)) :proves (+ .cse47 - .cse43 - .cse48 - .cse45) :trans (.cse238 percent .cse239 s)))) (res .cse48 (res .cse49 (res .cse50 .cse51 (let-proof ((.cse161 (! (res .cse14 .cse15 (res .cse18 .cse19 (res .cse174 .cse175 (res .cse20 .cse21 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse176 (res .cse177 (res .cse110 (res .cse111 .cse112 (res .cse178 .cse179 (res .cse180 .cse181 (res .cse182 .cse183 (res .cse9 .cse60 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse37 .cse38 (res .cse39 (res .cse40 (res .cse41 .cse42 (res .cse43 .cse44 (res .cse45 .cse46 (res .cse47 (res .cse48 (res .cse113 .cse114 (let ((.cse187 (+ .cse192 (- 1)))) (let ((.cse184 (= .cse187 0))) (res .cse184 (let ((.cse185 (<= .cse187 0))) (res .cse185 (! (let ((.cse186 (<= 1 .cse187))) (res .cse186 (total-int .cse187 0) (farkas 1 .cse186 1 .cse113 1 .cse8 1 .cse18))) :proves (+ .cse185 - .cse113 - .cse8 - .cse18) :LA ((- 1) 1 1 1)) (let ((.cse188 (<= .cse192 0))) (res .cse188 (! (let ((.cse189 (< .cse187 0))) (res .cse189 (let ((.cse190 (< 0 .cse187))) (res .cse190 (trichotomy .cse187 0) (farkas 1 .cse190 1 .cse185))) (let ((.cse191 (<= 1 .cse192))) (res .cse191 (total-int .cse192 0) (farkas 1 .cse191 1 .cse189))))) :proves (+ .cse188 + .cse184 - .cse185) :trichotomy) (! (res .cse81 .cse82 (res .cse83 .cse84 (res .cse141 .cse142 (farkas 1 .cse141 1 .cse83 1 .cse81 1 .cse188)))) :proves (- .cse113 - .cse8 - .cse18 - .cse188) :LA ((- 1) (- 1) (- 1) 1)))))) (let ((.cse193 (= 1 .cse192))) (res .cse193 (! (let ((.cse194 (= 0 .cse187))) (res .cse194 (symm 0 .cse187) (let ((.cse195 (< 1 .cse192))) (res .cse195 (let ((.cse196 (< .cse192 1))) (res .cse196 (trichotomy 1 .cse192) (farkas 1 .cse194 1 .cse196))) (farkas 1 .cse184 1 .cse195))))) :proves (+ .cse193 - .cse184) :EQ) (res .cse115 (res .cse49 (res .cse116 .cse117 (res .cse197 .cse198 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse59 (res .cse199 .cse200 (res .cse201 (res .cse65 (res .cse202 (res .cse203 (res .cse204 (res .cse67 (res .cse149 (res .cse205 (res .cse88 (res .cse71 (res .cse69 (res .cse70 (res .cse206 (res .cse53 (res .cse54 (res .cse55 (res .cse56 (res .cse58 .cse207 (res .cse57 .cse104 (res .cse147 (res .cse130 .cse148 (res .cse128 .cse208 (res .cse127 .cse158 .cse209))) .cse210))) .cse170) .cse211) .cse172) .cse212) .cse213) .cse91) .cse92) .cse89) .cse214) .cse215) .cse216) .cse94) .cse217) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse220 .cse221 (farkas 4 .cse220 1 .cse28 4 .cse118 4 .cse0 1 .cse97 4 .cse178 4 .cse113 4 .cse8 1 .cse101 4 .cse197 1 .cse24 4 .cse22 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse203 - .cse28 - .cse118 - .cse0 - .cse20 - .cse178 - .cse113 - .cse8 - .cse26 - .cse197 - .cse24 - .cse22 - .cse18 - .cse14 - .cse199) :LA ((- 4) 1 4 4 (- 1) 4 4 4 (- 1) 4 1 4 4 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse222 .cse223 (res .cse101 .cse102 (res .cse97 .cse98 (farkas 1 .cse28 4 .cse118 4 .cse0 1 .cse97 4 .cse178 4 .cse113 4 .cse8 1 .cse101 4 .cse222 1 .cse24 4 .cse22 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse28 - .cse118 - .cse0 - .cse20 - .cse178 - .cse113 - .cse8 - .cse26 - .cse202 - .cse24 - .cse22 - .cse18 - .cse14 - .cse199) :LA (1 4 4 (- 1) 4 4 4 (- 1) (- 4) 1 4 4 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse101 .cse102 (res .cse97 .cse98 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 4 .cse118 4 .cse0 1 .cse97 4 .cse113 4 .cse8 1 .cse101 1 .cse24 4 .cse22 4 .cse18 1 .cse95 4 .cse218)))))) :proves (- .cse65 - .cse28 - .cse118 - .cse0 - .cse20 - .cse113 - .cse8 - .cse26 - .cse24 - .cse22 - .cse18 - .cse14 - .cse199) :LA ((- 4) 1 4 4 (- 1) 4 4 (- 1) 1 4 4 (- 1) (- 4)))) (! (res .cse218 .cse219 (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (farkas 4 .cse113 4 .cse8 1 .cse28 1 .cse101 4 .cse118 1 .cse24 1 .cse97 4 .cse18 4 .cse201 1 .cse95 4 .cse218))))) :proves (- .cse113 - .cse8 - .cse28 - .cse26 - .cse118 - .cse24 - .cse20 - .cse18 - .cse201 - .cse14 - .cse199) :LA (4 4 1 (- 1) 4 1 (- 1) 4 4 (- 1) (- 4))))) (! (res .cse230 .cse231 (res (= .cse192 1) (symm .cse192 1) (res .cse34 .cse232 (trans .cse224 .cse225 0 .cse226 .cse227 .cse192 1 .cse228 .cse229)))) :proves (+ .cse177 - .cse9 - .cse37 - .cse59 - .cse52 - .cse50 - .cse193 - .cse182 - .cse111) :trans (.cse224 .cse225 0 .cse226 .cse227 .cse192 1 .cse228 .cse229))))))) .cse162) .cse163))))))) .cse164) .cse165)))) .cse166) .cse167))) .cse62))))))) .cse168) .cse233) (! (res .cse234 .cse235 (res .cse236 .cse237 (farkas 1 .cse236 1 .cse176 1 .cse234 1 .cse18))) :proves (- .cse0 - .cse176 - .cse22 - .cse18) :LA ((- 1) 1 (- 1) 1))))))))))) :proves (- .cse52 - .cse8 - .cse0) :rup))) (res .cse52 (res .cse53 (res .cse54 (res .cse55 (res .cse56 (res .cse57 (res .cse58 (res .cse59 (! (res .cse18 .cse19 (res .cse9 .cse60 (res .cse31 .cse32 (res .cse33 (res .cse34 .cse35 (res .cse37 .cse38 .cse61)) .cse62)))) :proves (- .cse8 + .cse59 + .cse56 + .cse54 + .cse58) :rup) (res .cse63 .cse64 (res .cse65 (res .cse66 (res .cse67 (res .cse68 (res .cse69 (res .cse70 (res .cse71 (res .cse72 .cse73 (res .cse74 .cse75 (res .cse76 .cse77 (res .cse78 .cse79 (res .cse80 (! (res .cse81 .cse82 (res .cse83 .cse84 (res .cse85 .cse86 (farkas 1 .cse85 1 .cse83 1 .cse81 1 .cse78)))) :proves (+ .cse80 - .cse8 - .cse18 - .cse78) :LA ((- 1) (- 1) (- 1) 1)) (! .cse87 :proves (+ .cse36 + .cse71 - .cse80) :trichotomy)))))) (res .cse88 .cse89 .cse90)) .cse91) .cse92) .cse93) .cse94) (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse99 .cse100 (res .cse101 .cse102 (farkas 1 .cse28 1 .cse101 4 .cse99 4 .cse63 1 .cse24 4 .cse22 1 .cse97 1 .cse95))))) :proves (- .cse28 - .cse26 - .cse66 - .cse63 - .cse24 - .cse22 - .cse20 - .cse14) :LA (1 (- 1) (- 4) 4 1 4 (- 1) (- 1)))) .cse103))) .cse104) (! (res .cse14 .cse15 (res .cse18 .cse19 (res .cse20 .cse21 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse105 .cse106 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse107 (res .cse108 .cse109 (res .cse110 (res .cse111 .cse112 (res .cse39 (res .cse40 (res .cse41 .cse42 (res .cse43 .cse44 (res .cse45 .cse46 (res .cse47 (res .cse48 (res .cse113 .cse114 (res .cse115 (res .cse49 (res .cse116 .cse117 (res .cse50 .cse51 (res .cse118 .cse119 (res .cse52 (res .cse120 .cse121 (res .cse122 (res .cse123 .cse124 (res .cse125 .cse126 (res .cse127 (res .cse128 .cse129 (res .cse130 (res .cse131 .cse132 (res .cse133 (res .cse134 (! (res .cse135 .cse136 (farkas 1 .cse135 1 .cse131 1 .cse113 1 .cse8 1 .cse118 1 .cse18)) :proves (+ .cse134 - .cse131 - .cse113 - .cse8 - .cse118 - .cse18) :LA ((- 1) 1 1 1 1 1)) (res .cse137 .cse138 (! (res .cse81 .cse82 (res .cse139 .cse140 (res .cse83 .cse84 (res .cse141 .cse142 (res .cse143 .cse144 (farkas 1 .cse143 1 .cse141 1 .cse83 1 .cse139 1 .cse81 1 .cse137)))))) :proves (- .cse131 - .cse113 - .cse8 - .cse118 - .cse18 - .cse137) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)))) (res .cse145 .cse146 (res .cse147 .cse148 (res .cse149 .cse150 (res .cse67 .cse151 (res .cse65 .cse94 (res .cse152 .cse153 (res .cse154 .cse155 (! (res .cse95 .cse96 (res .cse97 .cse98 (res .cse101 .cse102 (res .cse156 .cse157 (farkas 4 .cse156 1 .cse28 1 .cse101 4 .cse0 1 .cse24 4 .cse22 1 .cse97 4 .cse154 1 .cse95))))) :proves (- .cse65 - .cse28 - .cse26 - .cse0 - .cse24 - .cse22 - .cse20 - .cse154 - .cse14) :LA ((- 4) 1 (- 1) 4 1 4 (- 1) 4 (- 1)))))))))))) .cse158)) .cse159))) .cse160)) .cse161)))) .cse162) .cse163)) .cse164) .cse165)))) .cse166) .cse167)) .cse168)) .cse169))))))))) :proves (- .cse8 - .cse57 - .cse0) :rup)) .cse170) .cse171) .cse172) .cse173) .cse161))) .cse162) .cse164)) .cse165)))) .cse166) .cse167)))))))) .cse311)) .cse62)) .cse312)))))))))))) :proves (- .cse8 - .cse0) :rup)))))))))))))))))))))))))))))))))))))))))))) :proves () :rup)
