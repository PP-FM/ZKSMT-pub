unsat
(! (let ((.cse1021 (* (- 1) distance)) (.cse159 (format 2)) (.cse189 (format 1)) (.cse1475 (format 0))) (let ((.cse250 (format 3)) (.cse264 (= .cse1475 percent)) (.cse46 (= .cse189 s)) (.cse33 (= .cse189 percent)) (.cse142 (= .cse159 s)) (.cse95 (s_count 0)) (.cse1431 (+ fmt0 1)) (.cse1229 (+ fmt0 .cse1021)) (.cse899 (* (- 1) arg1))) (let ((.cse144 (= .cse189 x)) (.cse147 (= .cse159 x)) (.cse685 (x_count 0)) (.cse371 (* (- 1) fmt0)) (.cse1457 (+ fmt0 .cse899)) (.cse447 (= fmt0 0)) (.cse1226 (= arg0 .cse1229)) (.cse1458 (+ fmt0 fmt_length (* (- 1) fmt1) (- 1))) (.cse1485 (+ fmt0 2)) (.cse1371 (= fmt1 fmt0)) (.cse1369 (= fmt1 .cse1431)) (.cse166 (format 4)) (.cse1145 (+ .cse95 1)) (.cse203 (and .cse33 .cse142)) (.cse179 (and .cse264 .cse46)) (.cse194 (= .cse159 percent)) (.cse213 (= .cse250 s)) (.cse317 (s_count 1))) (let ((.cse160 (format 5)) (.cse1195 (+ .cse317 1)) (.cse197 (and .cse194 .cse213)) (.cse1251 (not .cse179)) (.cse25 (= .cse95 0)) (.cse1239 (= .cse95 1)) (.cse1152 (not .cse203)) (.cse207 (= .cse317 .cse95)) (.cse1139 (= .cse317 .cse1145)) (.cse23 (= .cse250 percent)) (.cse50 (= .cse166 s)) (.cse318 (s_count 2)) (.cse1484 (+ fmt0 3)) (.cse1368 (or .cse1371 .cse1369)) (.cse1366 (= fmt1 .cse1485)) (.cse1218 (= distance 13)) (.cse1105 (= fmt_length 8)) (.cse1055 (<= .cse1458 0)) (.cse1023 (and .cse447 .cse1226)) (.cse1166 (<= .cse1457 0)) (.cse1279 (+ fmt1 .cse371 (- 1))) (.cse1265 (+ .cse685 1)) (.cse183 (and .cse33 .cse147)) (.cse172 (and .cse264 .cse144)) (.cse224 (= .cse250 x)) (.cse520 (x_count 1))) (let ((.cse831 (+ .cse520 1)) (.cse192 (and .cse194 .cse224)) (.cse1206 (not .cse172)) (.cse31 (= .cse685 0)) (.cse1252 (= .cse685 1)) (.cse1165 (not .cse183)) (.cse145 (= .cse520 .cse685)) (.cse1261 (= .cse520 .cse1265)) (.cse148 (= .cse166 x)) (.cse258 (x_count 2)) (.cse6 (<= .cse1279 0)) (.cse1167 (and .cse1023 .cse1166)) (.cse1059 (not .cse1055)) (.cse376 (+ fmt1 .cse371 (- 2))) (.cse1106 (and .cse1218 .cse1105)) (.cse1483 (+ fmt0 4)) (.cse1365 (or .cse1368 .cse1366)) (.cse1363 (= fmt1 .cse1484)) (.cse435 (+ .cse318 1)) (.cse21 (and .cse23 .cse50)) (.cse1140 (=> .cse203 .cse1139)) (.cse1151 (=> .cse1152 .cse207)) (.cse1240 (=> .cse179 .cse1239)) (.cse1250 (=> .cse1251 .cse25)) (.cse1238 (not .cse197)) (.cse176 (= .cse318 .cse317)) (.cse1189 (= .cse318 .cse1195)) (.cse52 (= .cse166 percent)) (.cse107 (= .cse160 s)) (.cse62 (s_count 3))) (let ((.cse412 (+ .cse62 1)) (.cse63 (s_count 4)) (.cse55 (and .cse52 .cse107)) (.cse1190 (=> .cse197 .cse1189)) (.cse1237 (=> .cse1238 .cse176)) (.cse1241 (and .cse1240 .cse1250)) (.cse1141 (and .cse1140 .cse1151)) (.cse428 (not .cse21)) (.cse12 (= .cse62 .cse318)) (.cse431 (= .cse62 .cse435)) (.cse1362 (or .cse1365 .cse1363)) (.cse1360 (= fmt1 .cse1483)) (.cse554 (= arg1 fmt0)) (.cse1342 (= arg1 .cse1431)) (.cse1293 (and .cse1106 (= adr_lo 3))) (.cse257 (x_count .cse376)) (.cse64 (s_count .cse376)) (.cse1426 (+ arg0 distance .cse899)) (.cse1067 (and .cse1167 .cse1059)) (.cse1030 (not .cse6)) (.cse1459 (+ arg0 distance fmt_length .cse899 (- 4))) (.cse1000 (+ .cse258 1)) (.cse150 (and .cse23 .cse148)) (.cse1262 (=> .cse183 .cse1261)) (.cse1162 (=> .cse1165 .cse145)) (.cse1253 (=> .cse172 .cse1252)) (.cse1203 (=> .cse1206 .cse31)) (.cse1188 (not .cse192)) (.cse138 (= .cse258 .cse520)) (.cse1176 (= .cse258 .cse831)) (.cse149 (= .cse160 x)) (.cse256 (x_count 3))) (let ((.cse967 (+ .cse256 1)) (.cse276 (x_count 4)) (.cse151 (and .cse52 .cse149)) (.cse1177 (=> .cse192 .cse1176)) (.cse1187 (=> .cse1188 .cse138)) (.cse1204 (and .cse1253 .cse1203)) (.cse1163 (and .cse1262 .cse1162)) (.cse1075 (not .cse150)) (.cse152 (= .cse256 .cse258)) (.cse1043 (= .cse256 .cse1000)) (.cse1005 (<= .cse1459 0)) (.cse1028 (and .cse1067 .cse1030)) (.cse1422 (<= .cse1426 0)) (.cse1390 (* 4 .cse64)) (.cse1380 (* 4 .cse257)) (.cse1294 (and .cse1293 (= adr_medlo 4))) (.cse314 (= percent 37)) (.cse219 (= s 115)) (.cse1341 (or .cse554 .cse1342)) (.cse1339 (= arg1 .cse1485)) (.cse1359 (or .cse1362 .cse1360)) (.cse1357 (= fmt1 (+ fmt0 5))) (.cse432 (=> .cse21 .cse431)) (.cse425 (=> .cse428 .cse12)) (.cse1160 (and .cse1241 .cse1141)) (.cse1191 (and .cse1190 .cse1237)) (.cse419 (not .cse55)) (.cse58 (= .cse63 .cse62)) (.cse406 (= .cse63 .cse412))) (let ((.cse407 (=> .cse55 .cse406)) (.cse418 (=> .cse419 .cse58)) (.cse1291 (and .cse1160 .cse1191)) (.cse426 (and .cse432 .cse425)) (.cse1356 (or .cse1359 .cse1357)) (.cse1354 (= fmt1 (+ fmt0 6))) (.cse1338 (or .cse1341 .cse1339)) (.cse1336 (= arg1 .cse1484)) (.cse1288 (and .cse314 .cse219)) (.cse386 (= x 120)) (.cse1295 (and .cse1294 (= adr_medhi 5))) (.cse1212 (+ arg0 .cse1390 .cse1380)) (.cse1305 (and .cse1028 .cse1422)) (.cse1009 (not .cse1005)) (.cse1044 (=> .cse150 .cse1043)) (.cse1074 (=> .cse1075 .cse152)) (.cse1283 (and .cse1204 .cse1163)) (.cse1178 (and .cse1177 .cse1187)) (.cse1042 (not .cse151)) (.cse154 (= .cse276 .cse256)) (.cse961 (= .cse276 .cse967))) (let ((.cse962 (=> .cse151 .cse961)) (.cse1041 (=> .cse1042 .cse154)) (.cse1300 (and .cse1283 .cse1178)) (.cse1045 (and .cse1044 .cse1074)) (.cse1017 (and .cse1305 .cse1009)) (.cse1207 (= arg1 .cse1212)) (.cse1296 (and .cse1295 (= adr_hi 6))) (.cse1285 (and .cse1288 .cse386)) (.cse1335 (or .cse1338 .cse1336)) (.cse1333 (= arg1 .cse1483)) (.cse1353 (or .cse1356 .cse1354)) (.cse1351 (= fmt1 (+ fmt0 7))) (.cse1477 (format 6)) (.cse441 (and .cse1291 .cse426)) (.cse408 (and .cse407 .cse418))) (let ((.cse1025 (and .cse441 .cse408)) (.cse1481 (s_count 5)) (.cse1473 (= .cse160 percent)) (.cse1476 (= .cse1477 s)) (.cse1350 (or .cse1353 .cse1351)) (.cse1332 (or .cse1335 .cse1333)) (.cse1297 (and .cse1296 .cse1285)) (.cse1208 (and .cse1017 .cse1207)) (.cse1479 (format 7)) (.cse1103 (and .cse1300 .cse1045)) (.cse963 (and .cse962 .cse1041))) (let ((.cse1116 (and .cse1103 .cse963)) (.cse1469 (x_count 5)) (.cse1474 (= .cse1477 x)) (.cse1463 (= .cse1479 percent)) (.cse1471 (= .cse1479 x)) (.cse1303 (and .cse1297 .cse1208)) (.cse1330 (and .cse1350 .cse1332)) (.cse1311 (and .cse1025 (let ((.cse1482 (and .cse1473 .cse1476))) (and (=> .cse1482 (= .cse1481 (+ .cse63 1))) (=> (not .cse1482) (= .cse1481 .cse63)))))) (.cse1467 (s_count 6)) (.cse1470 (= .cse1477 percent)) (.cse1478 (= .cse1479 s))) (let ((.cse1312 (and .cse1311 (let ((.cse1480 (and .cse1470 .cse1478))) (and (=> .cse1480 (= .cse1467 (+ .cse1481 1))) (=> (not .cse1480) (= .cse1467 .cse1481)))))) (.cse1464 (format 8)) (.cse1316 (and .cse1303 .cse1330)) (.cse1327 (and (and (and (and (and (and (and (or (or (or (or (or (or (or .cse264 (= .cse1475 s)) (= .cse1475 x)) (= .cse1475 3)) (= .cse1475 4)) (= .cse1475 5)) (= .cse1475 6)) (= .cse1475 255)) (or (or (or (or (or (or (or .cse33 .cse46) .cse144) (= .cse189 3)) (= .cse189 4)) (= .cse189 5)) (= .cse189 6)) (= .cse189 255))) (or (or (or (or (or (or (or .cse194 .cse142) .cse147) (= .cse159 3)) (= .cse159 4)) (= .cse159 5)) (= .cse159 6)) (= .cse159 255))) (or (or (or (or (or (or (or .cse23 .cse213) .cse224) (= .cse250 3)) (= .cse250 4)) (= .cse250 5)) (= .cse250 6)) (= .cse250 255))) (or (or (or (or (or (or (or .cse52 .cse50) .cse148) (= .cse166 3)) (= .cse166 4)) (= .cse166 5)) (= .cse166 6)) (= .cse166 255))) (or (or (or (or (or (or (or .cse1473 .cse107) .cse149) (= .cse160 3)) (= .cse160 4)) (= .cse160 5)) (= .cse160 6)) (= .cse160 255))) (or (or (or (or (or (or (or .cse1470 .cse1476) .cse1474) (= .cse1477 3)) (= .cse1477 4)) (= .cse1477 5)) (= .cse1477 6)) (= .cse1477 255))) (or (or (or (or (or (or (or .cse1463 .cse1478) .cse1471) (= .cse1479 3)) (= .cse1479 4)) (= .cse1479 5)) (= .cse1479 6)) (= .cse1479 255)))) (.cse1306 (and .cse1116 (let ((.cse1472 (and .cse1473 .cse1474))) (and (=> .cse1472 (= .cse1469 (+ .cse276 1))) (=> (not .cse1472) (= .cse1469 .cse276)))))) (.cse1462 (x_count 6))) (let ((.cse1307 (and .cse1306 (let ((.cse1468 (and .cse1470 .cse1471))) (and (=> .cse1468 (= .cse1462 (+ .cse1469 1))) (=> (not .cse1468) (= .cse1462 .cse1469)))))) (.cse1317 (and .cse1316 .cse1327)) (.cse1313 (and .cse1312 (let ((.cse1465 (and .cse1463 (= .cse1464 s))) (.cse1466 (s_count 7))) (and (=> .cse1465 (= .cse1466 (+ .cse1467 1))) (=> (not .cse1465) (= .cse1466 .cse1467))))))) (let ((.cse1314 (and .cse1317 .cse1313)) (.cse1308 (and .cse1307 (let ((.cse1460 (and .cse1463 (= .cse1464 x))) (.cse1461 (x_count 7))) (and (=> .cse1460 (= .cse1461 (+ .cse1462 1))) (=> (not .cse1460) (= .cse1461 .cse1462))))))) (let ((.cse910 (+ fmt1 (- 2))) (.cse1013 (< 0 .cse1459)) (.cse1063 (< 0 .cse1458)) (.cse1171 (< 0 .cse1457)) (.cse1309 (and .cse1314 .cse1308)) (.cse904 (+ fmt1 1)) (.cse956 (+ arg1 1))) (let-proof ((.cse1010 (not+ .cse1009)) (.cse1014 (total .cse1459 0)) (.cse1019 (not- .cse1009)) (.cse1031 (not- .cse1030)) (.cse1060 (not+ .cse1059)) (.cse1064 (total .cse1458 0)) (.cse1069 (not- .cse1059)) (.cse1172 (total .cse1457 0))) (let-proof ((.cse1310 (let ((.cse1323 (and (and (and (and (and (not (= (format fmt1) percent)) (= (format .cse904) s)) (= (format arg1) adr_lo)) (= (format .cse956) adr_medlo)) (= (format (+ arg1 2)) adr_medhi)) (= (format (+ arg1 3)) adr_hi)))) (let ((.cse1318 (=> .cse1309 .cse1323))) (res .cse1318 (=>+ 0 .cse1318) (let ((.cse1348 (+ fmt0 0)) (.cse1456 (- fmt0 distance))) (let ((.cse1455 (= arg0 .cse1456)) (.cse1444 (- fmt_length 1)) (.cse1398 (- fmt1 2)) (.cse1370 (= fmt1 .cse1348))) (let ((.cse1367 (or .cse1370 .cse1369)) (.cse1384 (- .cse1398 fmt0)) (.cse1442 (+ fmt0 .cse1444)) (.cse1454 (and .cse447 .cse1455)) (.cse1451 (>= arg1 fmt0))) (let ((.cse1412 (- fmt_length 4)) (.cse1448 (and .cse1454 .cse1451)) (.cse1437 (< fmt1 .cse1442)) (.cse1391 (s_count .cse1384)) (.cse1364 (or .cse1367 .cse1366))) (let ((.cse1361 (or .cse1364 .cse1363)) (.cse1343 (= arg1 .cse1348)) (.cse1381 (x_count .cse1384)) (.cse1389 (* 4 .cse1391)) (.cse1421 (+ arg0 distance)) (.cse1436 (and .cse1448 .cse1437)) (.cse1432 (> fmt1 .cse1431)) (.cse1409 (+ distance .cse1412))) (let ((.cse1407 (+ arg0 .cse1409)) (.cse1428 (and .cse1436 .cse1432)) (.cse1423 (>= arg1 .cse1421)) (.cse1387 (+ arg0 .cse1389)) (.cse1379 (* 4 .cse1381)) (.cse1340 (or .cse1343 .cse1342)) (.cse1358 (or .cse1361 .cse1360))) (let ((.cse1355 (or .cse1358 .cse1357)) (.cse1337 (or .cse1340 .cse1339)) (.cse1377 (+ .cse1387 .cse1379)) (.cse1418 (and .cse1428 .cse1423)) (.cse1402 (< arg1 .cse1407))) (let ((.cse1401 (and .cse1418 .cse1402)) (.cse1376 (= arg1 .cse1377)) (.cse1334 (or .cse1337 .cse1336)) (.cse1352 (or .cse1355 .cse1354))) (let ((.cse1349 (or .cse1352 .cse1351)) (.cse1331 (or .cse1334 .cse1333)) (.cse1375 (and .cse1401 .cse1376))) (let ((.cse1374 (and .cse1297 .cse1375)) (.cse1329 (and .cse1349 .cse1331))) (let ((.cse1328 (and .cse1374 .cse1329))) (let ((.cse1326 (and .cse1328 .cse1327))) (let ((.cse1325 (and .cse1326 .cse1313))) (let ((.cse1324 (and .cse1325 .cse1308))) (let ((.cse1319 (=> .cse1324 .cse1323))) (let ((.cse1321 (not .cse1319))) (res .cse1319 (let ((.cse1320 (not .cse1318))) (res .cse1320 (res .cse1321 (not+ .cse1321) (let ((.cse1322 (= .cse1321 .cse1320))) (res .cse1322 (res (= .cse1319 .cse1318) (res (= .cse1323 .cse1323) (refl .cse1323) (res (= .cse1324 .cse1309) (res (= .cse1308 .cse1308) (refl .cse1308) (res (= .cse1325 .cse1314) (res (= .cse1313 .cse1313) (refl .cse1313) (res (= .cse1326 .cse1317) (res (= .cse1327 .cse1327) (refl .cse1327) (res (= .cse1328 .cse1316) (let ((.cse1346 (= arg1 arg1)) (.cse1372 (= fmt1 fmt1))) (let-proof ((.cse1347 (refl arg1)) (.cse1373 (refl fmt1))) (res (= .cse1329 .cse1330) (let ((.cse1344 (= .cse1348 fmt0))) (let-proof ((.cse1345 (poly+ .cse1348 fmt0))) (res (= .cse1331 .cse1332) (res (= .cse1333 .cse1333) (refl .cse1333) (res (= .cse1334 .cse1335) (res (= .cse1336 .cse1336) (refl .cse1336) (res (= .cse1337 .cse1338) (res (= .cse1339 .cse1339) (refl .cse1339) (res (= .cse1340 .cse1341) (res (= .cse1342 .cse1342) (refl .cse1342) (res (= .cse1343 .cse554) (res .cse1344 .cse1345 (res .cse1346 .cse1347 (cong (= arg1 .cse1348) (= arg1 fmt0)))) (cong (or .cse1343 .cse1342) (or .cse554 .cse1342)))) (cong (or .cse1340 .cse1339) (or .cse1341 .cse1339)))) (cong (or .cse1337 .cse1336) (or .cse1338 .cse1336)))) (cong (or .cse1334 .cse1333) (or .cse1335 .cse1333)))) (res (= .cse1349 .cse1350) (res (= .cse1351 .cse1351) (refl .cse1351) (res (= .cse1352 .cse1353) (res (= .cse1354 .cse1354) (refl .cse1354) (res (= .cse1355 .cse1356) (res (= .cse1357 .cse1357) (refl .cse1357) (res (= .cse1358 .cse1359) (res (= .cse1360 .cse1360) (refl .cse1360) (res (= .cse1361 .cse1362) (res (= .cse1363 .cse1363) (refl .cse1363) (res (= .cse1364 .cse1365) (res (= .cse1366 .cse1366) (refl .cse1366) (res (= .cse1367 .cse1368) (res (= .cse1369 .cse1369) (refl .cse1369) (res (= .cse1370 .cse1371) (res .cse1344 .cse1345 (res .cse1372 .cse1373 (cong (= fmt1 .cse1348) (= fmt1 fmt0)))) (cong (or .cse1370 .cse1369) (or .cse1371 .cse1369)))) (cong (or .cse1367 .cse1366) (or .cse1368 .cse1366)))) (cong (or .cse1364 .cse1363) (or .cse1365 .cse1363)))) (cong (or .cse1361 .cse1360) (or .cse1362 .cse1360)))) (cong (or .cse1358 .cse1357) (or .cse1359 .cse1357)))) (cong (or .cse1355 .cse1354) (or .cse1356 .cse1354)))) (cong (or .cse1352 .cse1351) (or .cse1353 .cse1351)))) (cong (and .cse1349 .cse1331) (and .cse1350 .cse1332)))))) (res (= .cse1374 .cse1303) (res (= .cse1375 .cse1208) (let ((.cse1396 (= fmt0 fmt0)) (.cse1392 (= arg0 arg0))) (let-proof ((.cse1397 (refl fmt0)) (.cse1393 (refl arg0))) (res (= .cse1376 .cse1207) (res (= .cse1377 .cse1212) (let ((.cse1388 (+ arg0 .cse1390))) (let ((.cse1378 (+ .cse1388 .cse1380))) (res (= .cse1378 .cse1212) (poly+ .cse1378 .cse1212) (res (= .cse1377 .cse1378) (let ((.cse1382 (= .cse1384 .cse376)) (.cse1385 (= 4 4))) (let-proof ((.cse1383 (let ((.cse1394 (- .cse910 fmt0))) (res (= .cse1394 .cse376) (res (= .cse371 .cse371) (refl .cse371) (res (= .cse910 .cse910) (refl .cse910) (let ((.cse1395 (+ .cse910 .cse371))) (res (= .cse1395 .cse1395) (cong (+ .cse910 .cse371) (+ .cse910 .cse371)) (res (= .cse1394 .cse1395) (-def .cse910 fmt0) (res (= .cse1395 .cse376) (poly+ .cse1395 .cse376) (trans .cse1394 .cse1395 .cse1395 .cse376))))))) (res (= .cse1384 .cse1394) (res .cse1396 .cse1397 (res (= .cse1398 .cse910) (let ((.cse1399 (* (- 1) 2))) (res (= .cse1399 (- 2)) (poly* .cse1399 (- 2)) (res .cse1372 .cse1373 (let ((.cse1400 (+ fmt1 .cse1399))) (res (= .cse1400 .cse910) (cong (+ fmt1 .cse1399) (+ fmt1 (- 2))) (res (= .cse1398 .cse1400) (-def fmt1 2) (trans .cse1398 .cse1400 .cse910))))))) (cong (- .cse1398 fmt0) (- .cse910 fmt0)))) (trans .cse1384 .cse1394 .cse376))))) (.cse1386 (refl 4))) (res (= .cse1379 .cse1380) (res (= .cse1381 .cse257) (res .cse1382 .cse1383 (cong (x_count .cse1384) (x_count .cse376))) (res .cse1385 .cse1386 (cong (* 4 .cse1381) (* 4 .cse257)))) (res (= .cse1387 .cse1388) (res (= .cse1389 .cse1390) (res (= .cse1391 .cse64) (res .cse1382 .cse1383 (cong (s_count .cse1384) (s_count .cse376))) (res .cse1385 .cse1386 (cong (* 4 .cse1391) (* 4 .cse64)))) (res .cse1392 .cse1393 (cong (+ arg0 .cse1389) (+ arg0 .cse1390)))) (cong (+ .cse1387 .cse1379) (+ .cse1388 .cse1380)))))) (trans .cse1377 .cse1378 .cse1212))))) (res .cse1346 .cse1347 (cong (= arg1 .cse1377) (= arg1 .cse1212)))) (res (= .cse1401 .cse1017) (let ((.cse1415 (= fmt_length fmt_length))) (let-proof ((.cse1416 (refl fmt_length))) (res (= .cse1402 .cse1009) (let ((.cse1406 (+ arg0 distance fmt_length (- 4)))) (let ((.cse1404 (< arg1 .cse1406))) (let ((.cse1403 (= .cse1404 .cse1009))) (res .cse1403 (res .cse1009 (res .cse1404 (=+1 .cse1403) (res .cse1005 .cse1010 (farkas 1 .cse1404 1 .cse1005))) (res .cse1404 (let ((.cse1405 (<= .cse1406 arg1))) (res .cse1405 (total .cse1406 arg1) (res .cse1005 (res .cse1013 .cse1014 (farkas 1 .cse1405 1 .cse1013)) .cse1019))) (=+2 .cse1403))) (res (= .cse1402 .cse1404) (res (= .cse1407 .cse1406) (let ((.cse1410 (+ distance fmt_length (- 4)))) (let ((.cse1408 (+ arg0 .cse1410))) (res (= .cse1408 .cse1406) (poly+ .cse1408 .cse1406) (res (= .cse1407 .cse1408) (res (= .cse1409 .cse1410) (let ((.cse1413 (+ fmt_length (- 4)))) (let ((.cse1411 (+ distance .cse1413))) (res (= .cse1411 .cse1410) (poly+ .cse1411 .cse1410) (res (= .cse1409 .cse1411) (res (= .cse1412 .cse1413) (let ((.cse1414 (* (- 1) 4))) (res (= .cse1414 (- 4)) (poly* .cse1414 (- 4)) (res .cse1415 .cse1416 (let ((.cse1417 (+ fmt_length .cse1414))) (res (= .cse1417 .cse1413) (cong (+ fmt_length .cse1414) (+ fmt_length (- 4))) (res (= .cse1412 .cse1417) (-def fmt_length 4) (trans .cse1412 .cse1417 .cse1413))))))) (res (= distance distance) (refl distance) (cong (+ distance .cse1412) (+ distance .cse1413)))) (trans .cse1409 .cse1411 .cse1410))))) (res .cse1392 .cse1393 (cong (+ arg0 .cse1409) (+ arg0 .cse1410)))) (trans .cse1407 .cse1408 .cse1406))))) (res .cse1346 .cse1347 (cong (< arg1 .cse1407) (< arg1 .cse1406)))) (trans .cse1402 .cse1404 .cse1009)))))) (res (= .cse1418 .cse1305) (let ((.cse1419 (= .cse1423 .cse1422))) (res .cse1419 (let ((.cse1424 (<= .cse1421 arg1))) (let ((.cse1420 (= .cse1423 .cse1424))) (res .cse1420 (>=def arg1 .cse1421) (res .cse1422 (res .cse1423 (=+1 .cse1419) (res .cse1424 (=-2 .cse1420) (let ((.cse1425 (< 0 .cse1426))) (res .cse1425 (total .cse1426 0) (farkas 1 .cse1424 1 .cse1425))))) (res .cse1423 (res .cse1424 (let ((.cse1427 (< arg1 .cse1421))) (res .cse1427 (total .cse1421 arg1) (farkas 1 .cse1427 1 .cse1422))) (=-1 .cse1420)) (=+2 .cse1419)))))) (res (= .cse1428 .cse1028) (let ((.cse1429 (= .cse1432 .cse1030))) (res .cse1429 (let ((.cse1433 (< .cse1431 fmt1))) (let ((.cse1430 (= .cse1432 .cse1433))) (res .cse1430 (>def fmt1 .cse1431) (res .cse1030 (res .cse1432 (=+1 .cse1429) (res .cse1433 (=-2 .cse1430) (res .cse6 (not+ .cse1030) (farkas 1 .cse1433 1 .cse6)))) (res .cse1432 (res .cse1433 (let ((.cse1434 (<= fmt1 .cse1431))) (res .cse1434 (total fmt1 .cse1431) (res .cse6 (let ((.cse1435 (< 0 .cse1279))) (res .cse1435 (total .cse1279 0) (farkas 1 .cse1434 1 .cse1435))) .cse1031))) (=-1 .cse1430)) (=+2 .cse1429)))))) (res (= .cse1436 .cse1067) (res (= .cse1437 .cse1059) (let ((.cse1441 (+ fmt0 fmt_length (- 1)))) (let ((.cse1439 (< fmt1 .cse1441))) (let ((.cse1438 (= .cse1439 .cse1059))) (res .cse1438 (res .cse1059 (res .cse1439 (=+1 .cse1438) (res .cse1055 .cse1060 (farkas 1 .cse1439 1 .cse1055))) (res .cse1439 (let ((.cse1440 (<= .cse1441 fmt1))) (res .cse1440 (total .cse1441 fmt1) (res .cse1055 (res .cse1063 .cse1064 (farkas 1 .cse1440 1 .cse1063)) .cse1069))) (=+2 .cse1438))) (res (= .cse1437 .cse1439) (res (= .cse1442 .cse1441) (let ((.cse1445 (+ fmt_length (- 1)))) (let ((.cse1443 (+ fmt0 .cse1445))) (res (= .cse1443 .cse1441) (poly+ .cse1443 .cse1441) (res (= .cse1442 .cse1443) (res (= .cse1444 .cse1445) (let ((.cse1446 (* (- 1) 1))) (res (= .cse1446 (- 1)) (poly* .cse1446 (- 1)) (res .cse1415 .cse1416 (let ((.cse1447 (+ fmt_length .cse1446))) (res (= .cse1447 .cse1445) (cong (+ fmt_length .cse1446) (+ fmt_length (- 1))) (res (= .cse1444 .cse1447) (-def fmt_length 1) (trans .cse1444 .cse1447 .cse1445))))))) (res .cse1396 .cse1397 (cong (+ fmt0 .cse1444) (+ fmt0 .cse1445)))) (trans .cse1442 .cse1443 .cse1441))))) (res .cse1372 .cse1373 (cong (< fmt1 .cse1442) (< fmt1 .cse1441)))) (trans .cse1437 .cse1439 .cse1059)))))) (res (= .cse1448 .cse1167) (let ((.cse1449 (= .cse1451 .cse1166))) (res .cse1449 (let ((.cse1452 (<= fmt0 arg1))) (let ((.cse1450 (= .cse1451 .cse1452))) (res .cse1450 (>=def arg1 fmt0) (res .cse1166 (res .cse1451 (=+1 .cse1449) (res .cse1452 (=-2 .cse1450) (res .cse1171 .cse1172 (farkas 1 .cse1452 1 .cse1171)))) (res .cse1451 (res .cse1452 (let ((.cse1453 (< arg1 fmt0))) (res .cse1453 (total fmt0 arg1) (farkas 1 .cse1453 1 .cse1166))) (=-1 .cse1450)) (=+2 .cse1449)))))) (res (= .cse1454 .cse1023) (res (= .cse1455 .cse1226) (res (= .cse1456 .cse1229) (-def fmt0 distance) (res .cse1392 .cse1393 (cong (= arg0 .cse1456) (= arg0 .cse1229)))) (res (= .cse447 .cse447) (refl .cse447) (cong (and .cse447 .cse1455) (and .cse447 .cse1226)))) (cong (and .cse1454 .cse1451) (and .cse1023 .cse1166))))) (cong (and .cse1448 .cse1437) (and .cse1167 .cse1059)))) (cong (and .cse1436 .cse1432) (and .cse1067 .cse1030))))) (cong (and .cse1428 .cse1423) (and .cse1028 .cse1422))))) (cong (and .cse1418 .cse1402) (and .cse1305 .cse1009)))))) (cong (and .cse1401 .cse1376) (and .cse1017 .cse1207)))))) (res (= .cse1297 .cse1297) (refl .cse1297) (cong (and .cse1297 .cse1375) (and .cse1297 .cse1208)))) (cong (and .cse1374 .cse1329) (and .cse1303 .cse1330)))))) (cong (and .cse1328 .cse1327) (and .cse1316 .cse1327)))) (cong (and .cse1326 .cse1313) (and .cse1317 .cse1313)))) (cong (and .cse1325 .cse1308) (and .cse1314 .cse1308)))) (cong (=> .cse1324 .cse1323) (=> .cse1309 .cse1323)))) (cong (not .cse1319) (not .cse1318))) (=-2 .cse1322)))) (not- .cse1320))) (res .cse1321 (assume .cse1321) (not- .cse1321)))))))))))))))))))))))) (let-proof ((.cse1315 (res .cse1309 .cse1310 (and- 0 .cse1309)))) (let-proof ((.cse1304 (res .cse1316 (res .cse1317 (res .cse1314 .cse1315 (and- 0 .cse1314)) (and- 0 .cse1317)) (and- 0 .cse1316)))) (let-proof ((.cse1209 (res .cse1303 .cse1304 (and- 1 .cse1303)))) (let-proof ((.cse1018 (res .cse1208 .cse1209 (and- 0 .cse1208))) (.cse1026 (res .cse1311 (res .cse1312 (res .cse1313 (res .cse1314 .cse1315 (and- 1 .cse1314)) (and- 0 .cse1313)) (and- 0 .cse1312)) (and- 0 .cse1311))) (.cse1117 (res .cse1306 (res .cse1307 (res .cse1308 (res .cse1309 .cse1310 (and- 1 .cse1309)) (and- 0 .cse1308)) (and- 0 .cse1307)) (and- 0 .cse1306)))) (let-proof ((.cse1104 (res .cse1116 .cse1117 (and- 0 .cse1116))) (.cse442 (res .cse1025 .cse1026 (and- 0 .cse1025))) (.cse1029 (res .cse1305 (res .cse1017 .cse1018 (and- 0 .cse1017)) (and- 0 .cse1305))) (.cse1298 (res .cse1303 .cse1304 (and- 0 .cse1303)))) (let ((.cse777 (* (- 1) .cse520)) (.cse218 (= 120 115)) (.cse1088 (= 115 37)) (.cse1020 (* (- 1) arg0)) (.cse370 (* (- 1) .cse317)) (.cse313 (= 120 37)) (.cse1138 (* (- 1) .cse685)) (.cse1036 (+ fmt1 .cse371 (- 4))) (.cse1079 (+ fmt1 .cse371 (- 3))) (.cse1098 (+ fmt1 .cse371 (- 5)))) (let-proof ((.cse1286 (res .cse1297 .cse1298 (and- 1 .cse1297))) (.cse1068 (res .cse1028 .cse1029 (and- 0 .cse1028))) (.cse1292 (res .cse441 .cse442 (and- 0 .cse441))) (.cse1301 (res .cse1103 .cse1104 (and- 0 .cse1103)))) (let ((.cse349 (<= .cse1098 0)) (.cse353 (<= .cse1079 0)) (.cse367 (<= 1 .cse376)) (.cse1071 (+ fmt1 .cse371 (- 6))) (.cse351 (<= .cse1036 0)) (.cse1268 (+ .cse520 .cse1138 (- 1))) (.cse385 (= 37 120)) (.cse216 (= 120 x)) (.cse311 (= 37 percent)) (.cse1258 (+ .cse685 (- 1))) (.cse1247 (+ .cse95 (- 1))) (.cse1033 (+ .cse318 .cse370)) (.cse1232 (+ fmt0 .cse1020 .cse1021)) (.cse1223 (+ distance (- 13))) (.cse1215 (+ arg1 .cse1020 (* (- 4) .cse64) (* (- 4) .cse257))) (.cse1001 (+ .cse520 .cse1138)) (.cse1198 (+ .cse318 .cse370 (- 1))) (.cse1130 (= 37 115)) (.cse214 (= 115 s)) (.cse1184 (+ .cse258 .cse777 (- 1))) (.cse1093 (+ .cse258 .cse777)) (.cse1302 (+ arg1 .cse371 1)) (.cse86 (* (- 1) .cse64)) (.cse476 (* (- 1) .cse257)) (.cse633 (* (- 1) .cse95))) (let-proof ((.cse368 (total-int .cse376 0)) (.cse1090 (farkas 1 .cse313)) (.cse387 (symm x 120)) (.cse315 (symm percent 37)) (.cse1284 (res .cse1300 .cse1301 (and- 0 .cse1300))) (.cse1161 (res .cse1291 .cse1292 (and- 0 .cse1291))) (.cse1168 (res .cse1067 .cse1068 (and- 0 .cse1067))) (.cse1089 (farkas 1 .cse1088)) (.cse1289 (res .cse1285 .cse1286 (and- 0 .cse1285))) (.cse220 (symm s 115)) (.cse759 (farkas 1 .cse218))) (let ((.cse1148 (+ .cse317 .cse633 (- 1))) (.cse1159 (+ .cse258 .cse476)) (.cse1155 (+ .cse318 .cse86)) (.cse1077 (+ .cse317 .cse633)) (.cse79 (<= 1 .cse1302)) (.cse39 (<= .cse1302 0)) (.cse29 (= .cse1093 0)) (.cse521 (= .cse520 .cse258)) (.cse337 (= 0 .cse1184)) (.cse300 (= .cse1184 0)) (.cse645 (= s .cse250)) (.cse474 (= 0 .cse1198)) (.cse323 (= .cse1198 0)) (.cse42 (= .cse1001 0)) (.cse911 (= .cse685 .cse520)) (.cse472 (= 0 .cse1215)) (.cse44 (= .cse1215 0)) (.cse81 (= 0 .cse1223)) (.cse40 (= .cse1223 0)) (.cse75 (= 0 .cse1232)) (.cse35 (= .cse1232 0)) (.cse37 (= .cse1033 0)) (.cse638 (= .cse317 .cse318)) (.cse266 (= .cse1247 0)) (.cse355 (= 0 .cse1247)) (.cse344 (= x .cse250)) (.cse765 (= 0 .cse1258)) (.cse287 (= .cse1258 0)) (.cse251 (= percent .cse189)) (.cse305 (= percent .cse159)) (.cse664 (= 0 .cse1268)) (.cse228 (= .cse1268 0)) (.cse1112 (+ fmt_length (- 8))) (.cse943 (* (- 1) .cse258)) (.cse2 (= .cse1036 0)) (.cse8 (= .cse1071 0)) (.cse3 (<= .cse1071 0)) (.cse7 (= .cse376 0)) (.cse1082 (< 0 .cse376)) (.cse735 (<= 1 .cse1279)) (.cse1083 (< .cse376 0)) (.cse5 (= .cse1079 0)) (.cse366 (<= .cse376 0)) (.cse1 (= .cse1098 0))) (let-proof ((.cse80 (total-int .cse1302 0)) (.cse522 (symm .cse520 .cse258)) (.cse338 (symm 0 .cse1184)) (.cse1179 (res .cse1300 .cse1301 (and- 1 .cse1300))) (.cse223 (! .cse759 :proves (- .cse218) :EQ)) (.cse215 (! (res .cse219 (res .cse1288 .cse1289 (and- 1 .cse1288)) (let ((.cse1299 (= .cse219 .cse214))) (res .cse1299 (res .cse214 (res .cse219 (=+1 .cse1299) (symm 115 s)) (res .cse219 .cse220 (=+2 .cse1299))) (=-2 .cse1299)))) :proves (+ .cse214) :input)) (.cse1131 (! (res .cse1088 (symm 115 37) .cse1089) :proves (- .cse1130) :EQ)) (.cse646 (symm s .cse250)) (.cse475 (symm 0 .cse1198)) (.cse912 (symm .cse685 .cse520)) (.cse473 (symm 0 .cse1215)) (.cse1107 (res .cse1293 (res .cse1294 (res .cse1295 (res .cse1296 (res .cse1297 .cse1298 (and- 0 .cse1297)) (and- 0 .cse1296)) (and- 0 .cse1295)) (and- 0 .cse1294)) (and- 0 .cse1293))) (.cse82 (symm 0 .cse1223)) (.cse1024 (res .cse1167 .cse1168 (and- 0 .cse1167))) (.cse76 (symm 0 .cse1232)) (.cse639 (symm .cse317 .cse318)) (.cse1192 (res .cse1291 .cse1292 (and- 1 .cse1291))) (.cse1242 (res .cse1160 .cse1161 (and- 0 .cse1160))) (.cse356 (symm 0 .cse1247)) (.cse345 (symm x .cse250)) (.cse1205 (res .cse1283 .cse1284 (and- 0 .cse1283))) (.cse766 (symm 0 .cse1258)) (.cse312 (! (res .cse314 (res .cse1288 .cse1289 (and- 0 .cse1288)) (let ((.cse1290 (= .cse314 .cse311))) (res .cse1290 (res .cse311 (res .cse314 (=+1 .cse1290) (symm 37 percent)) (res .cse314 .cse315 (=+2 .cse1290))) (=-2 .cse1290)))) :proves (+ .cse311) :input)) (.cse217 (! (res .cse386 (res .cse1285 .cse1286 (and- 1 .cse1285)) (let ((.cse1287 (= .cse386 .cse216))) (res .cse1287 (res .cse216 (res .cse386 (=+1 .cse1287) (symm 120 x)) (res .cse386 .cse387 (=+2 .cse1287))) (=-2 .cse1287)))) :proves (+ .cse216) :input)) (.cse252 (symm percent .cse189)) (.cse388 (! (res .cse313 (symm 120 37) .cse1090) :proves (- .cse385) :EQ)) (.cse306 (symm percent .cse159)) (.cse1164 (res .cse1283 .cse1284 (and- 1 .cse1283))) (.cse665 (symm 0 .cse1268)) (.cse1092 (let ((.cse1280 (< .cse1036 0))) (res .cse1280 (let ((.cse1281 (< 0 .cse1036))) (res .cse1281 (trichotomy .cse1036 0) (farkas 1 .cse1281 1 .cse351))) (let ((.cse1282 (<= 1 .cse1079))) (res .cse1282 (total-int .cse1079 0) (farkas 1 .cse1282 1 .cse1280)))))) (.cse736 (total-int .cse1279 0)) (.cse1091 (let ((.cse1277 (< .cse1079 0))) (res .cse1277 (let ((.cse1278 (< 0 .cse1079))) (res .cse1278 (trichotomy .cse1079 0) (farkas 1 .cse1278 1 .cse353))) (res .cse367 .cse368 (farkas 1 .cse367 1 .cse1277))))) (.cse1102 (let ((.cse1274 (< .cse1098 0))) (res .cse1274 (let ((.cse1275 (< 0 .cse1098))) (res .cse1275 (trichotomy .cse1098 0) (farkas 1 .cse1275 1 .cse349))) (let ((.cse1276 (<= 1 .cse1036))) (res .cse1276 (total-int .cse1036 0) (farkas 1 .cse1276 1 .cse1274))))))) (let ((.cse505 (= .cse257 .cse276)) (.cse404 (= .cse376 4)) (.cse10 (= 4 .cse376)) (.cse809 (= .cse257 .cse256)) (.cse402 (= .cse376 3)) (.cse0 (= 3 .cse376)) (.cse683 (= .cse257 .cse685)) (.cse88 (= 0 .cse376)) (.cse603 (= .cse257 .cse520)) (.cse186 (= 1 .cse376)) (.cse429 (= .cse376 1)) (.cse960 (+ .cse256 .cse943)) (.cse445 (= .cse1112 0)) (.cse1051 (+ .cse256 .cse943 (- 1))) (.cse209 (= .cse1077 0)) (.cse383 (= .cse95 .cse317)) (.cse291 (= s .cse189)) (.cse73 (= 0 .cse1159)) (.cse462 (= 0 .cse1155)) (.cse124 (= 0 .cse1148)) (.cse47 (= .cse1148 0)) (.cse443 (= .cse1155 0)) (.cse640 (= .cse318 .cse64)) (.cse101 (= .cse64 .cse318)) (.cse27 (= .cse1159 0)) (.cse141 (= .cse257 .cse258))) (let-proof ((.cse405 (symm .cse376 4)) (.cse959 (cong (x_count .cse376) (x_count 4))) (.cse403 (symm .cse376 3)) (.cse954 (cong (x_count .cse376) (x_count 3))) (.cse352 (! .cse1102 :proves (+ .cse351 + .cse1 - .cse349) :trichotomy)) (.cse1076 (! .cse1091 :proves (- .cse353 + .cse5 + .cse366) :trichotomy)) (.cse369 (! (res .cse1083 (res .cse1082 (trichotomy .cse376 0) (farkas 1 .cse1082 1 .cse366)) (res .cse735 .cse736 (farkas 1 .cse735 1 .cse1083))) :proves (- .cse366 + .cse7 + .cse6) :trichotomy)) (.cse796 (symm .cse376 0)) (.cse430 (symm .cse376 1)) (.cse916 (cong (x_count .cse376) (x_count 1))) (.cse350 (! (let ((.cse1271 (< .cse1071 0))) (res .cse1271 (let ((.cse1272 (< 0 .cse1071))) (res .cse1272 (trichotomy .cse1071 0) (farkas 1 .cse1272 1 .cse3))) (let ((.cse1273 (<= 1 .cse1098))) (res .cse1273 (total-int .cse1098 0) (farkas 1 .cse1273 1 .cse1271))))) :proves (+ .cse349 + .cse8 - .cse3) :trichotomy)) (.cse1101 (! .cse1092 :proves (- .cse351 + .cse2 + .cse353) :trichotomy)) (.cse229 (! (res .cse1261 (res .cse183 (and+ .cse183) (res .cse1262 (res .cse1163 .cse1164 (and- 0 .cse1163)) (=>- .cse1262))) (let ((.cse1263 (= .cse1261 .cse228))) (res .cse1263 (res .cse228 (res .cse1261 (=+1 .cse1263) (let ((.cse1264 (= .cse1265 .cse520))) (res .cse1264 (symm .cse1265 .cse520) (let ((.cse1266 (< .cse1268 0))) (res .cse1266 (let ((.cse1267 (< 0 .cse1268))) (res .cse1267 (trichotomy .cse1268 0) (farkas 1 .cse1261 1 .cse1267))) (farkas 1 .cse1264 1 .cse1266)))))) (res .cse1261 (res .cse664 .cse665 (let ((.cse1269 (< .cse520 .cse1265))) (res .cse1269 (let ((.cse1270 (< .cse1265 .cse520))) (res .cse1270 (trichotomy .cse520 .cse1265) (farkas 1 .cse228 1 .cse1270))) (farkas 1 .cse664 1 .cse1269)))) (=+2 .cse1263))) (=-2 .cse1263)))) :proves (- .cse147 + .cse228 - .cse33) :input)) (.cse694 (! (res .cse305 .cse306 (trans .cse189 percent .cse159 x)) :proves (+ .cse144 - .cse33 - .cse194 - .cse147) :trans (.cse189 percent .cse159 x))) (.cse182 (! (res .cse311 .cse312 (res .cse216 .cse217 (res .cse385 (! (res .cse251 .cse252 (res .cse386 .cse387 (trans 37 percent .cse189 x 120))) :proves (+ .cse385 - .cse311 - .cse33 - .cse144 - .cse216) :trans (37 percent .cse189 x 120)) .cse388))) :proves (- .cse144 - .cse33) :rup)) (.cse303 (! (res .cse1252 (res .cse172 (and+ .cse172) (res .cse1253 (res .cse1204 .cse1205 (and- 0 .cse1204)) (=>- .cse1253))) (let ((.cse1254 (= .cse1252 .cse287))) (res .cse1254 (res .cse287 (res .cse1252 (=+1 .cse1254) (let ((.cse1255 (= 1 .cse685))) (res .cse1255 (symm 1 .cse685) (let ((.cse1256 (< .cse1258 0))) (res .cse1256 (let ((.cse1257 (< 0 .cse1258))) (res .cse1257 (trichotomy .cse1258 0) (farkas 1 .cse1252 1 .cse1257))) (farkas 1 .cse1255 1 .cse1256)))))) (res .cse1252 (res .cse765 .cse766 (let ((.cse1259 (< .cse685 1))) (res .cse1259 (let ((.cse1260 (< 1 .cse685))) (res .cse1260 (trichotomy .cse685 1) (farkas 1 .cse287 1 .cse1260))) (farkas 1 .cse765 1 .cse1259)))) (=+2 .cse1254))) (=-2 .cse1254)))) :proves (- .cse264 - .cse144 + .cse287) :input)) (.cse779 (! (res .cse344 .cse345 (trans .cse189 x .cse250 s)) :proves (+ .cse46 - .cse144 - .cse224 - .cse213) :trans (.cse189 x .cse250 s))) (.cse302 (! (and- 0 .cse172) :proves (- .cse172 + .cse264) :input)) (.cse378 (! (res .cse355 .cse356 (farkas 1 .cse25 1 .cse355)) :proves (- .cse25 - .cse266) :LA (1 (- 1)))) (.cse180 (! (res .cse1250 (res .cse1241 .cse1242 (and- 1 .cse1241)) (res .cse1251 (not+ .cse1251) (=>- .cse1250))) :proves (+ .cse179 + .cse25) :input)) (.cse181 (! (and- 1 .cse179) :proves (- .cse179 + .cse46) :input)) (.cse265 (! (and- 0 .cse179) :proves (- .cse179 + .cse264) :input)) (.cse267 (! (res .cse1239 (res .cse179 (and+ .cse179) (res .cse1240 (res .cse1241 .cse1242 (and- 0 .cse1241)) (=>- .cse1240))) (let ((.cse1243 (= .cse1239 .cse266))) (res .cse1243 (res .cse266 (res .cse1239 (=+1 .cse1243) (let ((.cse1244 (= 1 .cse95))) (res .cse1244 (symm 1 .cse95) (let ((.cse1245 (< .cse1247 0))) (res .cse1245 (let ((.cse1246 (< 0 .cse1247))) (res .cse1246 (trichotomy .cse1247 0) (farkas 1 .cse1239 1 .cse1246))) (farkas 1 .cse1244 1 .cse1245)))))) (res .cse1239 (res .cse355 .cse356 (let ((.cse1248 (< .cse95 1))) (res .cse1248 (let ((.cse1249 (< 1 .cse95))) (res .cse1249 (trichotomy .cse95 1) (farkas 1 .cse266 1 .cse1249))) (farkas 1 .cse355 1 .cse1248)))) (=+2 .cse1243))) (=-2 .cse1243)))) :proves (- .cse264 - .cse46 + .cse266) :input)) (.cse195 (! (and- 0 .cse192) :proves (- .cse192 + .cse194) :input)) (.cse199 (! (and- 0 .cse197) :proves (- .cse197 + .cse194) :input)) (.cse198 (! (res .cse1237 (res .cse1191 .cse1192 (and- 1 .cse1191)) (res .cse1238 (not+ .cse1238) (=>- .cse1237))) :proves (+ .cse197 + .cse176) :input)) (.cse178 (! (res .cse638 .cse639 (let ((.cse1235 (< .cse1033 0))) (res .cse1235 (let ((.cse1236 (< 0 .cse1033))) (res .cse1236 (trichotomy .cse1033 0) (farkas 1 .cse176 1 .cse1236))) (farkas 1 .cse638 1 .cse1235)))) :proves (- .cse176 + .cse37) :EQ)) (.cse322 (! (and- 1 .cse197) :proves (- .cse197 + .cse213) :input)) (.cse36 (! (res .cse1226 (res .cse1023 .cse1024 (and- 1 .cse1023)) (let ((.cse1227 (= .cse1226 .cse35))) (res .cse1227 (res .cse35 (res .cse1226 (=+1 .cse1227) (let ((.cse1228 (= .cse1229 arg0))) (res .cse1228 (symm .cse1229 arg0) (let ((.cse1230 (< .cse1232 0))) (res .cse1230 (let ((.cse1231 (< 0 .cse1232))) (res .cse1231 (trichotomy .cse1232 0) (farkas 1 .cse1228 1 .cse1231))) (farkas 1 .cse1226 1 .cse1230)))))) (res .cse1226 (res .cse75 .cse76 (let ((.cse1233 (< arg0 .cse1229))) (res .cse1233 (let ((.cse1234 (< .cse1229 arg0))) (res .cse1234 (trichotomy arg0 .cse1229) (farkas 1 .cse75 1 .cse1234))) (farkas 1 .cse35 1 .cse1233)))) (=+2 .cse1227))) (=-2 .cse1227)))) :proves (+ .cse35) :input)) (.cse41 (! (res .cse1218 (res .cse1106 .cse1107 (and- 0 .cse1106)) (let ((.cse1219 (= .cse1218 .cse40))) (res .cse1219 (res .cse40 (res .cse1218 (=+1 .cse1219) (let ((.cse1220 (= 13 distance))) (res .cse1220 (symm 13 distance) (let ((.cse1221 (< .cse1223 0))) (res .cse1221 (let ((.cse1222 (< 0 .cse1223))) (res .cse1222 (trichotomy .cse1223 0) (farkas 1 .cse1218 1 .cse1222))) (farkas 1 .cse1220 1 .cse1221)))))) (res .cse1218 (res .cse81 .cse82 (let ((.cse1224 (< distance 13))) (res .cse1224 (let ((.cse1225 (< 13 distance))) (res .cse1225 (trichotomy distance 13) (farkas 1 .cse40 1 .cse1225))) (farkas 1 .cse81 1 .cse1224)))) (=+2 .cse1219))) (=-2 .cse1219)))) :proves (+ .cse40) :input)) (.cse45 (! (res .cse1207 (res .cse1208 .cse1209 (and- 1 .cse1208)) (let ((.cse1210 (= .cse1207 .cse44))) (res .cse1210 (res .cse44 (res .cse1207 (=+1 .cse1210) (let ((.cse1211 (= .cse1212 arg1))) (res .cse1211 (symm .cse1212 arg1) (let ((.cse1213 (< .cse1215 0))) (res .cse1213 (let ((.cse1214 (< 0 .cse1215))) (res .cse1214 (trichotomy .cse1215 0) (farkas 1 .cse1207 1 .cse1214))) (farkas 1 .cse1211 1 .cse1213)))))) (res .cse1207 (res .cse472 .cse473 (let ((.cse1216 (< arg1 .cse1212))) (res .cse1216 (let ((.cse1217 (< .cse1212 arg1))) (res .cse1217 (trichotomy arg1 .cse1212) (farkas 1 .cse44 1 .cse1217))) (farkas 1 .cse472 1 .cse1216)))) (=+2 .cse1210))) (=-2 .cse1210)))) :proves (+ .cse44) :input)) (.cse173 (! (res .cse1203 (res .cse1204 .cse1205 (and- 1 .cse1204)) (res .cse1206 (not+ .cse1206) (=>- .cse1203))) :proves (+ .cse172 + .cse31) :input)) (.cse171 (! (res .cse911 .cse912 (let ((.cse1201 (< .cse1001 0))) (res .cse1201 (let ((.cse1202 (< 0 .cse1001))) (res .cse1202 (trichotomy .cse1001 0) (farkas 1 .cse145 1 .cse1202))) (farkas 1 .cse911 1 .cse1201)))) :proves (- .cse145 + .cse42) :EQ)) (.cse324 (! (res .cse1189 (res .cse197 (and+ .cse197) (res .cse1190 (res .cse1191 .cse1192 (and- 0 .cse1191)) (=>- .cse1190))) (let ((.cse1193 (= .cse1189 .cse323))) (res .cse1193 (res .cse323 (res .cse1189 (=+1 .cse1193) (let ((.cse1194 (= .cse1195 .cse318))) (res .cse1194 (symm .cse1195 .cse318) (let ((.cse1196 (< .cse1198 0))) (res .cse1196 (let ((.cse1197 (< 0 .cse1198))) (res .cse1197 (trichotomy .cse1198 0) (farkas 1 .cse1189 1 .cse1197))) (farkas 1 .cse1194 1 .cse1196)))))) (res .cse1189 (res .cse474 .cse475 (let ((.cse1199 (< .cse318 .cse1195))) (res .cse1199 (let ((.cse1200 (< .cse1195 .cse318))) (res .cse1200 (trichotomy .cse318 .cse1195) (farkas 1 .cse323 1 .cse1200))) (farkas 1 .cse474 1 .cse1199)))) (=+2 .cse1193))) (=-2 .cse1193)))) :proves (- .cse194 - .cse213 + .cse323) :input)) (.cse347 (! (res .cse645 .cse646 (trans .cse189 s .cse250 x)) :proves (+ .cse144 - .cse46 - .cse213 - .cse224) :trans (.cse189 s .cse250 x))) (.cse227 (! (and- 0 .cse183) :proves (- .cse183 + .cse33) :input)) (.cse174 (! (and- 1 .cse172) :proves (- .cse172 + .cse144) :input)) (.cse202 (! (res .cse311 .cse312 (res .cse214 .cse215 (res .cse1130 (! (res .cse219 .cse220 (res .cse251 .cse252 (trans 37 percent .cse189 s 115))) :proves (+ .cse1130 - .cse311 - .cse33 - .cse46 - .cse214) :trans (37 percent .cse189 s 115)) .cse1131))) :proves (- .cse33 - .cse46) :rup)) (.cse307 (! (res .cse214 .cse215 (res .cse216 .cse217 (res .cse218 (! (res (= x .cse189) (symm x .cse189) (res .cse219 .cse220 (trans 120 x .cse189 s 115))) :proves (+ .cse218 - .cse216 - .cse144 - .cse46 - .cse214) :trans (120 x .cse189 s 115)) .cse223))) :proves (- .cse144 - .cse46) :rup)) (.cse193 (! (res .cse1187 (res .cse1178 .cse1179 (and- 1 .cse1178)) (res .cse1188 (not+ .cse1188) (=>- .cse1187))) :proves (+ .cse192 + .cse138) :input)) (.cse279 (! (and- 1 .cse192) :proves (- .cse192 + .cse224) :input)) (.cse301 (! (res .cse1176 (res .cse192 (and+ .cse192) (res .cse1177 (res .cse1178 .cse1179 (and- 0 .cse1178)) (=>- .cse1177))) (let ((.cse1180 (= .cse1176 .cse300))) (res .cse1180 (res .cse300 (res .cse1176 (=+1 .cse1180) (let ((.cse1181 (= .cse831 .cse258))) (res .cse1181 (symm .cse831 .cse258) (let ((.cse1182 (< .cse1184 0))) (res .cse1182 (let ((.cse1183 (< 0 .cse1184))) (res .cse1183 (trichotomy .cse1184 0) (farkas 1 .cse1176 1 .cse1183))) (farkas 1 .cse1181 1 .cse1182)))))) (res .cse1176 (res .cse337 .cse338 (let ((.cse1185 (< .cse258 .cse831))) (res .cse1185 (let ((.cse1186 (< .cse831 .cse258))) (res .cse1186 (trichotomy .cse258 .cse831) (farkas 1 .cse300 1 .cse1186))) (farkas 1 .cse337 1 .cse1185)))) (=+2 .cse1180))) (=-2 .cse1180)))) :proves (- .cse194 - .cse224 + .cse300) :input)) (.cse140 (! (res .cse521 .cse522 (let ((.cse1174 (< .cse1093 0))) (res .cse1174 (let ((.cse1175 (< 0 .cse1093))) (res .cse1175 (trichotomy .cse1093 0) (farkas 1 .cse138 1 .cse1175))) (farkas 1 .cse521 1 .cse1174)))) :proves (- .cse138 + .cse29) :EQ)) (.cse72 (! (res .cse1166 (res .cse1167 .cse1168 (and- 1 .cse1167)) (let ((.cse1169 (not .cse39))) (let-proof ((.cse1173 (not- .cse1169))) (res .cse1169 (let ((.cse1170 (= .cse1166 .cse1169))) (res .cse1170 (res .cse1169 (res .cse1166 (=+1 .cse1170) (res .cse39 (not+ .cse1169) (farkas 1 .cse1166 1 .cse39))) (res .cse1166 (res .cse1171 .cse1172 (res .cse39 (res .cse79 .cse80 (farkas 1 .cse1171 1 .cse79)) .cse1173)) (=+2 .cse1170))) (=-2 .cse1170))) .cse1173)))) :proves (- .cse39) :input)) (.cse384 (symm .cse95 .cse317)) (.cse292 (symm s .cse189)) (.cse184 (! (res .cse1162 (res .cse1163 .cse1164 (and- 1 .cse1163)) (res .cse1165 (not+ .cse1165) (=>- .cse1162))) :proves (+ .cse183 + .cse145) :input)) (.cse185 (! (and- 1 .cse183) :proves (- .cse183 + .cse147) :input)) (.cse1032 (res .cse218 (! (res (= x .cse159) (symm x .cse159) (res .cse219 .cse220 (trans 120 x .cse159 s 115))) :proves (+ .cse218 - .cse216 - .cse147 - .cse142 - .cse214) :trans (120 x .cse159 s 115)) .cse223)) (.cse463 (symm 0 .cse1155)) (.cse74 (symm 0 .cse1159)) (.cse125 (symm 0 .cse1148)) (.cse1142 (res .cse1160 .cse1161 (and- 1 .cse1160))) (.cse641 (symm .cse318 .cse64))) (let ((.cse299 (* (- 1) .cse62)) (.cse254 (= .cse256 .cse257)) (.cse190 (= percent .cse166)) (.cse274 (= .cse276 .cse257)) (.cse285 (= 0 .cse1051)) (.cse263 (= .cse1051 0)) (.cse1022 (* (- 1) fmt_length)) (.cse259 (= .cse960 0)) (.cse525 (= .cse258 .cse256)) (.cse992 (+ .cse64 (- 1))) (.cse631 (= 0 .cse1093)) (.cse90 (= 0 .cse95)) (.cse1027 (* (- 1) .cse318))) (let-proof ((.cse170 (! (let ((.cse1156 (= .cse258 .cse257))) (res .cse1156 (symm .cse258 .cse257) (let ((.cse1157 (< .cse1159 0))) (res .cse1157 (let ((.cse1158 (< 0 .cse1159))) (res .cse1158 (trichotomy .cse1159 0) (farkas 1 .cse1156 1 .cse1158))) (farkas 1 .cse141 1 .cse1157))))) :proves (- .cse141 + .cse27) :EQ)) (.cse444 (! (res .cse640 .cse641 (let ((.cse1153 (< .cse1155 0))) (res .cse1153 (let ((.cse1154 (< 0 .cse1155))) (res .cse1154 (trichotomy .cse1155 0) (farkas 1 .cse640 1 .cse1154))) (farkas 1 .cse101 1 .cse1153)))) :proves (- .cse101 + .cse443) :EQ)) (.cse208 (! (res .cse1151 (res .cse1141 .cse1142 (and- 1 .cse1141)) (res .cse1152 (not+ .cse1152) (=>- .cse1151))) :proves (+ .cse203 + .cse207) :input)) (.cse205 (! (and- 1 .cse203) :proves (- .cse203 + .cse142) :input)) (.cse206 (! (and- 0 .cse203) :proves (- .cse203 + .cse33) :input)) (.cse175 (! (res .cse1139 (res .cse203 (and+ .cse203) (res .cse1140 (res .cse1141 .cse1142 (and- 0 .cse1141)) (=>- .cse1140))) (let ((.cse1143 (= .cse1139 .cse47))) (res .cse1143 (res .cse47 (res .cse1139 (=+1 .cse1143) (let ((.cse1144 (= .cse1145 .cse317))) (res .cse1144 (symm .cse1145 .cse317) (let ((.cse1146 (< .cse1148 0))) (res .cse1146 (let ((.cse1147 (< 0 .cse1148))) (res .cse1147 (trichotomy .cse1148 0) (farkas 1 .cse1139 1 .cse1147))) (farkas 1 .cse1144 1 .cse1146)))))) (res .cse1139 (res .cse124 .cse125 (let ((.cse1149 (< .cse317 .cse1145))) (res .cse1149 (let ((.cse1150 (< .cse1145 .cse317))) (res .cse1150 (trichotomy .cse317 .cse1145) (farkas 1 .cse47 1 .cse1150))) (farkas 1 .cse124 1 .cse1149)))) (=+2 .cse1143))) (=-2 .cse1143)))) :proves (+ .cse47 - .cse142 - .cse33) :input)) (.cse944 (let ((.cse1137 (+ .cse258 .cse1138))) (let ((.cse1132 (= .cse1137 0))) (res .cse1132 (let ((.cse1133 (= .cse685 .cse258))) (res .cse1133 (res .cse145 (res .cse183 .cse184 (res .cse147 .cse185 .cse1032)) (! (res .cse521 .cse522 (res .cse911 .cse912 (trans .cse685 .cse520 .cse258))) :proves (+ .cse1133 - .cse145 - .cse138) :trans (.cse685 .cse520 .cse258))) (! (let ((.cse1134 (= .cse258 .cse685))) (res .cse1134 (symm .cse258 .cse685) (let ((.cse1135 (< .cse1137 0))) (res .cse1135 (let ((.cse1136 (< 0 .cse1137))) (res .cse1136 (trichotomy .cse1137 0) (farkas 1 .cse1134 1 .cse1136))) (farkas 1 .cse1133 1 .cse1135))))) :proves (- .cse1133 + .cse1132) :EQ))) (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse47 4 .cse73 4 .cse1132 1 .cse44 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse25 4 .cse31)))))) :proves (- .cse47 - .cse27 - .cse1132 - .cse44 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25 - .cse31) :LA (4 (- 4) 4 1 (- 1) (- 1) 4 (- 1) (- 4) 4 4)))))) (.cse917 (! (res .cse291 .cse292 (trans .cse159 s .cse189 percent)) :proves (+ .cse194 - .cse142 - .cse46 - .cse33) :trans (.cse159 s .cse189 percent))) (.cse342 (! (res .cse311 .cse312 (res .cse214 .cse215 (res .cse1130 (! (res .cse219 .cse220 (res .cse305 .cse306 (trans 37 percent .cse159 s 115))) :proves (+ .cse1130 - .cse311 - .cse194 - .cse142 - .cse214) :trans (37 percent .cse159 s 115)) .cse1131))) :proves (- .cse194 - .cse142) :rup)) (.cse210 (! (res .cse383 .cse384 (let ((.cse1128 (< .cse1077 0))) (res .cse1128 (let ((.cse1129 (< 0 .cse1077))) (res .cse1129 (trichotomy .cse1077 0) (farkas 1 .cse207 1 .cse1129))) (farkas 1 .cse383 1 .cse1128)))) :proves (- .cse207 + .cse209) :EQ)) (.cse945 (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (let-proof ((.cse1120 (res .cse138 (res .cse224 (res .cse192 .cse193 .cse279) .cse301) .cse140)) (.cse1118 (res .cse138 .cse193 .cse140))) (let-proof ((.cse1125 (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse181 (res .cse264 .cse265 (res .cse144 (res .cse33 (res .cse266 .cse267 (res .cse172 (res .cse183 (res .cse31 .cse173 (res .cse145 .cse184 (res .cse42 .cse171 (let-proof ((.cse1127 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse31 4 .cse266)))))) :proves (- .cse29 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse31 - .cse266) :LA (4 4 (- 4) 1 4 (- 1) (- 1) 4 (- 1) (- 4) 4 4)))) (res .cse194 (res .cse197 (res .cse192 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse29 .cse1118 .cse1127))) .cse195) .cse199) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse144 (res .cse33 (res .cse172 (res .cse183 (res .cse31 .cse173 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse213 (res .cse197 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse29 (res .cse300 .cse1120 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse209 4 .cse73 4 .cse300 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse31 4 .cse266)))))) :proves (- .cse209 - .cse27 - .cse300 - .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse31 - .cse266) :LA (4 (- 4) 4 1 4 (- 1) (- 1) 4 (- 1) (- 4) 4 4))) .cse1127))) .cse322) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse144 (res .cse33 (res .cse172 (res .cse183 (res .cse31 .cse173 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse224 (res .cse323 .cse324 (res .cse192 (res .cse29 .cse1118 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse323 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse462 4 .cse31 4 .cse266)))))) :proves (- .cse29 - .cse323 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse35 - .cse443 - .cse31 - .cse266) :LA (4 4 4 (- 4) 1 4 (- 1) (- 1) (- 1) (- 4) 4 4))) .cse279)) .cse347)))) .cse227) .cse174) .cse202) .cse307))) .cse72)) :proves (- .cse27 - .cse443 - .cse266 - .cse194 - .cse213 - .cse209 - .cse46) :rup))))) .cse227) .cse174) .cse202) .cse307))) .cse72)) :proves (- .cse443 - .cse27 - .cse46 - .cse266 - .cse194 - .cse209) :rup)))))) .cse227) .cse174)) .cse202) .cse307))))) .cse72)) :proves (- .cse27 - .cse443 - .cse179 - .cse209) :rup))) (res .cse179 (res .cse25 .cse180 (res .cse42 (res .cse145 (res .cse183 .cse184 (res .cse33 .cse227 (res .cse147 .cse185 (res .cse144 (res .cse194 (res .cse228 .cse229 (res .cse172 (res .cse192 (res .cse197 (res .cse31 .cse173 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse176 .cse198 (res .cse37 .cse178 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse209 4 .cse73 4 .cse228 1 .cse44 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse25 4 .cse31)))))) :proves (- .cse29 - .cse209 - .cse27 - .cse228 - .cse44 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25 - .cse31) :LA (4 4 (- 4) 4 1 (- 1) (- 1) 4 (- 1) (- 4) 4 4))))))) .cse199) .cse195) .cse174)) .cse694) .cse182)))) .cse171) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse179 (res .cse25 .cse180 (let-proof ((.cse1126 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse25 4 .cse31)))))) :proves (- .cse29 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25 - .cse31) :LA (4 4 (- 4) 1 4 (- 1) (- 1) 4 (- 1) (- 4) 4 4)))) (let-proof ((.cse1122 (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse179 (res .cse25 .cse180 (res .cse192 (res .cse197 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse176 .cse198 (res .cse37 .cse178 .cse1126)))) .cse199) .cse195)) .cse1125))) .cse72)) :proves (- .cse443 - .cse31 - .cse27 - .cse42 + .cse194 - .cse209) :rup))) (let-proof ((.cse1123 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse323 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse462 4 .cse25 4 .cse31)))))) :proves (- .cse29 - .cse323 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse35 - .cse443 - .cse25 - .cse31) :LA (4 4 4 (- 4) 1 4 (- 1) (- 1) (- 1) (- 4) 4 4))) (.cse1124 (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse179 (res .cse25 .cse180 (res .cse194 .cse1122 (res .cse29 (res .cse300 .cse1120 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse209 4 .cse73 4 .cse300 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse25 4 .cse31)))))) :proves (- .cse209 - .cse27 - .cse300 - .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25 - .cse31) :LA (4 (- 4) 4 1 4 (- 1) (- 1) 4 (- 1) (- 4) 4 4))) .cse1126))) .cse1125))) .cse72)) :proves (- .cse31 - .cse443 - .cse27 - .cse37 - .cse209 - .cse42) :rup))) (let-proof ((.cse1121 (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse179 (res .cse25 .cse180 (res .cse37 (res .cse176 (res .cse194 .cse1122 (res .cse197 .cse198 (res .cse213 .cse322 (res .cse323 .cse324 (res .cse29 (res .cse300 .cse1120 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse323 4 .cse209 4 .cse73 4 .cse300 1 .cse44 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse462 4 .cse25 4 .cse31)))))) :proves (- .cse323 - .cse209 - .cse27 - .cse300 - .cse44 - .cse42 - .cse40 + .cse39 - .cse35 - .cse443 - .cse25 - .cse31) :LA (4 4 (- 4) 4 1 4 (- 1) (- 1) (- 1) (- 4) 4 4))) .cse1123))))) .cse178) .cse1124)) .cse1125))) .cse72)) :proves (- .cse443 - .cse27 - .cse31 - .cse42 - .cse209) :rup))) (res .cse31 (res .cse172 .cse173 (res .cse144 .cse174 (res .cse264 .cse302 (res .cse287 .cse303 (let-proof ((.cse1119 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 4 .cse287 1 .cse75 4 .cse462 4 .cse25)))))) :proves (- .cse29 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse287 - .cse35 - .cse443 - .cse25) :LA (4 4 (- 4) 1 4 (- 1) (- 1) 4 4 (- 1) (- 4) 4)))) (res .cse194 (res .cse197 (res .cse192 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse29 .cse1118 .cse1119))) .cse195) .cse199) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse179 (res .cse25 .cse180 (res .cse31 (res .cse172 .cse173 (res .cse144 .cse174 (res .cse264 .cse302 (res .cse287 .cse303 (res .cse213 (res .cse197 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse29 (res .cse300 .cse1120 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse209 4 .cse73 4 .cse300 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 4 .cse287 1 .cse75 4 .cse462 4 .cse25)))))) :proves (- .cse209 - .cse27 - .cse300 - .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse287 - .cse35 - .cse443 - .cse25) :LA (4 (- 4) 4 1 4 (- 1) (- 1) 4 4 (- 1) (- 4) 4))) .cse1119))) .cse322) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse179 (res .cse25 .cse180 (res .cse46 (res .cse31 (res .cse172 .cse173 (res .cse144 .cse174 (res .cse264 .cse302 (res .cse287 .cse303 (res .cse224 (res .cse323 .cse324 (res .cse192 (res .cse29 .cse1118 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse323 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse287 1 .cse75 4 .cse462 4 .cse25)))))) :proves (- .cse29 - .cse323 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse287 - .cse35 - .cse443 - .cse25) :LA (4 4 4 (- 4) 1 4 (- 1) (- 1) 4 (- 1) (- 4) 4))) .cse279)) .cse779))))) .cse1121) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse179 (res .cse25 .cse180 (res .cse266 (res .cse264 (res .cse33 (res .cse144 (res .cse172 (res .cse183 (res .cse31 .cse173 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse194 .cse1122 (res .cse37 (res .cse176 (res .cse197 .cse198 (res .cse213 .cse322 (res .cse224 (res .cse323 .cse324 (res .cse192 (res .cse29 .cse1118 .cse1123) .cse279)) .cse347))) .cse178) .cse1124))))) .cse227) .cse302) .cse307) .cse202) .cse267) .cse378)) .cse1125))) .cse72)) :proves (- .cse27 - .cse443 - .cse46 - .cse209) :rup))) .cse1125))) .cse72)) :proves (- .cse443 - .cse27 - .cse42 - .cse194 - .cse213 - .cse209) :rup)))))) .cse1121)) .cse1125))) .cse72)) :proves (- .cse27 - .cse443 - .cse42 - .cse194 - .cse209) :rup))))))) .cse1121)))))) .cse1125))) .cse72)) :proves (- .cse27 - .cse443 - .cse42 - .cse209) :rup))) .cse1125))))) .cse72)) :proves (- .cse443 - .cse27 - .cse209) :rup)) (.cse191 (symm percent .cse166)) (.cse964 (res .cse1116 .cse1117 (and- 1 .cse1116))) (.cse286 (symm 0 .cse1051)) (.cse446 (! (res .cse1105 (res .cse1106 .cse1107 (and- 1 .cse1106)) (let ((.cse1108 (= .cse1105 .cse445))) (res .cse1108 (res .cse445 (res .cse1105 (=+1 .cse1108) (let ((.cse1109 (= 8 fmt_length))) (res .cse1109 (symm 8 fmt_length) (let ((.cse1110 (< .cse1112 0))) (res .cse1110 (let ((.cse1111 (< 0 .cse1112))) (res .cse1111 (trichotomy .cse1112 0) (farkas 1 .cse1105 1 .cse1111))) (farkas 1 .cse1109 1 .cse1110)))))) (res .cse1105 (let ((.cse1113 (= 0 .cse1112))) (res .cse1113 (symm 0 .cse1112) (let ((.cse1114 (< fmt_length 8))) (res .cse1114 (let ((.cse1115 (< 8 fmt_length))) (res .cse1115 (trichotomy fmt_length 8) (farkas 1 .cse445 1 .cse1115))) (farkas 1 .cse1113 1 .cse1114))))) (=+2 .cse1108))) (=-2 .cse1108)))) :proves (+ .cse445) :input)) (.cse526 (symm .cse258 .cse256)) (.cse1046 (res .cse1103 .cse1104 (and- 1 .cse1103))) (.cse726 (res .cse351 (res .cse349 .cse350 (! .cse1102 :proves (- .cse349 + .cse1 + .cse351) :trichotomy)) .cse1101)) (.cse604 (! (res .cse429 .cse430 .cse916) :proves (+ .cse603 - .cse186) :cong (.cse257 .cse520))) (.cse684 (! (res .cse7 .cse796 (cong (x_count .cse376) (x_count 0))) :proves (+ .cse683 - .cse88) :cong (.cse257 .cse685))) (.cse741 (symm 0 .cse376)) (.cse9 (res .cse366 (res .cse353 (res .cse349 .cse350 (res .cse351 .cse352 .cse1101)) .cse1076) .cse369)) (.cse19 (! (let ((.cse1097 (= 0 .cse1098))) (res .cse1097 (symm 0 .cse1098) (let ((.cse1099 (< 3 .cse376))) (res .cse1099 (let ((.cse1100 (< .cse376 3))) (res .cse1100 (trichotomy 3 .cse376) (farkas 1 .cse1097 1 .cse1100))) (farkas 1 .cse1 1 .cse1099))))) :proves (+ .cse0 - .cse1) :EQ)) (.cse810 (! (res .cse402 .cse403 .cse954) :proves (+ .cse809 - .cse0) :cong (.cse257 .cse256))) (.cse955 (! (trans .cse257 .cse256 .cse258) :proves (+ .cse141 - .cse809 - .cse152) :trans (.cse257 .cse256 .cse258))) (.cse11 (! (let ((.cse1094 (= 0 .cse1071))) (res .cse1094 (symm 0 .cse1071) (let ((.cse1095 (< 4 .cse376))) (res .cse1095 (let ((.cse1096 (< .cse376 4))) (res .cse1096 (trichotomy 4 .cse376) (farkas 1 .cse1094 1 .cse1096))) (farkas 1 .cse8 1 .cse1095))))) :proves (+ .cse10 - .cse8) :EQ)) (.cse632 (symm 0 .cse1093)) (.cse119 (symm 0 .cse95)) (.cse506 (! (res .cse404 .cse405 .cse959) :proves (+ .cse505 - .cse10) :cong (.cse257 .cse276))) (.cse354 (! .cse1092 :proves (+ .cse353 + .cse2 - .cse351) :trichotomy)) (.cse713 (! .cse1091 :proves (+ .cse366 + .cse5 - .cse353) :trichotomy)) (.cse316 (! .cse1090 :proves (- .cse313) :EQ))) (let ((.cse438 (+ .cse62 .cse1027 (- 1))) (.cse221 (= x .cse166)) (.cse238 (= 0 .cse1077)) (.cse393 (<= 1 .cse992)) (.cse277 (= .cse256 .cse276)) (.cse395 (= .cse64 1)) (.cse120 (= 0 .cse1033)) (.cse247 (= 1 .cse64)) (.cse246 (= .cse992 0)) (.cse398 (< 0 .cse992)) (.cse98 (<= .cse992 0)) (.cse397 (< .cse992 0)) (.cse123 (+ .cse62 .cse1027)) (.cse415 (+ .cse63 .cse299 (- 1)))) (let-proof ((.cse282 (! (res .cse311 .cse312 (res .cse216 .cse217 (res .cse313 (! (res .cse314 .cse315 (res .cse344 .cse345 (trans 120 x .cse250 percent 37))) :proves (+ .cse313 - .cse216 - .cse224 - .cse23 - .cse311) :trans (120 x .cse250 percent 37)) .cse316))) :proves (- .cse23 - .cse224) :rup)) (.cse359 (res .cse349 .cse350 (res .cse351 .cse352 (res .cse353 .cse354 (res .cse366 .cse713 .cse369))))) (.cse156 (res .cse505 .cse506 (! (trans .cse257 .cse276 .cse256 .cse258) :proves (+ .cse141 - .cse505 - .cse154 - .cse152) :trans (.cse257 .cse276 .cse256 .cse258)))) (.cse281 (! (res .cse311 .cse312 (res .cse214 .cse215 (res .cse1088 (! (res .cse314 .cse315 (res .cse645 .cse646 (trans 115 s .cse250 percent 37))) :proves (+ .cse1088 - .cse214 - .cse213 - .cse23 - .cse311) :trans (115 s .cse250 percent 37)) (! .cse1089 :proves (- .cse1088) :EQ)))) :proves (- .cse23 - .cse213) :rup)) (.cse91 (! (res .cse90 .cse119 (let ((.cse1086 (< 0 .cse95))) (res .cse1086 (let ((.cse1087 (< .cse95 0))) (res .cse1087 (trichotomy 0 .cse95) (farkas 1 .cse90 1 .cse1087))) (farkas 1 .cse25 1 .cse1086)))) :proves (+ .cse90 - .cse25) :EQ)) (.cse333 (! (res .cse631 .cse632 (let ((.cse1084 (< .cse258 .cse520))) (res .cse1084 (let ((.cse1085 (< .cse520 .cse258))) (res .cse1085 (trichotomy .cse258 .cse520) (farkas 1 .cse29 1 .cse1085))) (farkas 1 .cse631 1 .cse1084)))) :proves (+ .cse138 - .cse29) :EQ)) (.cse379 (res .cse8 (res .cse1 .cse9 (res .cse0 .cse19 (res .cse809 .cse810 .cse955))) .cse11)) (.cse222 (symm x .cse166)) (.cse89 (! (res .cse88 .cse741 (res .cse1082 (res .cse1083 (trichotomy 0 .cse376) (farkas 1 .cse88 1 .cse1083)) (farkas 1 .cse7 1 .cse1082))) :proves (+ .cse88 - .cse7) :EQ)) (.cse167 (res .cse683 .cse684 (! (res .cse521 .cse522 (res .cse911 .cse912 (trans .cse257 .cse685 .cse520 .cse258))) :proves (+ .cse141 - .cse683 - .cse145 - .cse138) :trans (.cse257 .cse685 .cse520 .cse258)))) (.cse187 (! (let ((.cse1078 (= 0 .cse1079))) (res .cse1078 (symm 0 .cse1079) (let ((.cse1080 (< 1 .cse376))) (res .cse1080 (let ((.cse1081 (< .cse376 1))) (res .cse1081 (trichotomy 1 .cse376) (farkas 1 .cse1078 1 .cse1081))) (farkas 1 .cse5 1 .cse1080))))) :proves (+ .cse186 - .cse5) :EQ)) (.cse326 (res .cse603 .cse604 (! (res .cse521 .cse522 (trans .cse257 .cse520 .cse258)) :proves (+ .cse141 - .cse603 - .cse138) :trans (.cse257 .cse520 .cse258)))) (.cse239 (symm 0 .cse1077)) (.cse49 (res .cse366 (res .cse353 .cse726 .cse1076) .cse369)) (.cse394 (total-int .cse992 0)) (.cse153 (! (res .cse1074 (res .cse1045 .cse1046 (and- 1 .cse1045)) (res .cse1075 (not+ .cse1075) (=>- .cse1074))) :proves (+ .cse150 + .cse152) :input)) (.cse260 (! (res .cse525 .cse526 (let ((.cse1072 (< .cse960 0))) (res .cse1072 (let ((.cse1073 (< 0 .cse960))) (res .cse1073 (trichotomy .cse960 0) (farkas 1 .cse152 1 .cse1073))) (farkas 1 .cse525 1 .cse1072)))) :proves (- .cse152 + .cse259) :EQ)) (.cse157 (! (and- 1 .cse151) :proves (- .cse151 + .cse149) :input)) (.cse4 (! (res .cse445 .cse446 (let ((.cse1066 (+ fmt1 .cse371 .cse1022 2))) (let ((.cse1054 (<= .cse1066 0))) (res .cse1054 (! (res .cse1055 (let ((.cse1056 (not .cse1054))) (let-proof ((.cse1057 (not+ .cse1056))) (res .cse1056 .cse1057 (let ((.cse1058 (not .cse1056))) (res .cse1058 (res .cse1059 .cse1060 (let ((.cse1061 (= .cse1059 .cse1058))) (res .cse1061 (let ((.cse1062 (= .cse1055 .cse1056))) (res .cse1062 (res .cse1056 (res .cse1055 (=+1 .cse1062) (res .cse1054 .cse1057 (farkas 1 .cse1055 1 .cse1054))) (res .cse1055 (res .cse1063 .cse1064 (res .cse1054 (let ((.cse1065 (<= 1 .cse1066))) (res .cse1065 (total-int .cse1066 0) (farkas 1 .cse1063 1 .cse1065))) (not- .cse1056))) (=+2 .cse1062))) (cong (not .cse1055) (not .cse1056)))) (=-2 .cse1061)))) (not- .cse1058)))))) (res .cse1067 .cse1068 (res .cse1059 (and- 1 .cse1067) .cse1069))) :proves (+ .cse1054) :input) (! (let ((.cse1070 (<= 1 .cse1071))) (res .cse1070 (total-int .cse1071 0) (farkas 1 .cse1054 1 .cse1070 1 .cse445))) :proves (- .cse1054 + .cse3 - .cse445) :LA (1 (- 1) 1)))))) :proves (+ .cse3) :rup)) (.cse340 (! (and- 0 .cse150) :proves (- .cse150 + .cse23) :input)) (.cse158 (! (and- 1 .cse150) :proves (- .cse150 + .cse148) :input)) (.cse271 (! (res .cse1043 (res .cse150 (and+ .cse150) (res .cse1044 (res .cse1045 .cse1046 (and- 0 .cse1045)) (=>- .cse1044))) (let ((.cse1047 (= .cse1043 .cse263))) (res .cse1047 (res .cse263 (res .cse1043 (=+1 .cse1047) (let ((.cse1048 (= .cse1000 .cse256))) (res .cse1048 (symm .cse1000 .cse256) (let ((.cse1049 (< .cse1051 0))) (res .cse1049 (let ((.cse1050 (< 0 .cse1051))) (res .cse1050 (trichotomy .cse1051 0) (farkas 1 .cse1043 1 .cse1050))) (farkas 1 .cse1048 1 .cse1049)))))) (res .cse1043 (res .cse285 .cse286 (let ((.cse1052 (< .cse256 .cse1000))) (res .cse1052 (let ((.cse1053 (< .cse1000 .cse256))) (res .cse1053 (trichotomy .cse256 .cse1000) (farkas 1 .cse263 1 .cse1053))) (farkas 1 .cse285 1 .cse1052)))) (=+2 .cse1047))) (=-2 .cse1047)))) :proves (+ .cse263 - .cse148 - .cse23) :input)) (.cse155 (! (res .cse1041 (res .cse963 .cse964 (and- 1 .cse963)) (res .cse1042 (not+ .cse1042) (=>- .cse1041))) :proves (+ .cse151 + .cse154) :input)) (.cse275 (! (cong (x_count 4) (x_count .cse376)) :proves (+ .cse274 - .cse10) :cong (.cse276 .cse257))) (.cse278 (symm .cse256 .cse276)) (.cse165 (! (and- 0 .cse151) :proves (- .cse151 + .cse52) :input)) (.cse163 (! (res .cse190 .cse191 (trans .cse189 percent .cse166 x)) :proves (+ .cse144 - .cse33 - .cse52 - .cse148) :trans (.cse189 percent .cse166 x))) (.cse18 (! (let ((.cse1034 (= 2 .cse376))) (res .cse1034 (! (let ((.cse1035 (= 0 .cse1036))) (res .cse1035 (symm 0 .cse1036) (let ((.cse1037 (< 2 .cse376))) (res .cse1037 (let ((.cse1038 (< .cse376 2))) (res .cse1038 (trichotomy 2 .cse376) (farkas 1 .cse1035 1 .cse1038))) (farkas 1 .cse2 1 .cse1037))))) :proves (+ .cse1034 - .cse2) :EQ) (! (res .cse214 .cse215 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse216 .cse217 (let ((.cse1039 (= .cse376 2))) (let-proof ((.cse1040 (symm .cse376 2))) (res .cse141 (! (res .cse1039 .cse1040 (cong (x_count .cse376) (x_count 2))) :proves (+ .cse141 - .cse1034) :cong (.cse257 .cse258)) (res .cse101 (! (res .cse1039 .cse1040 (cong (s_count .cse376) (s_count 2))) :proves (+ .cse101 - .cse1034) :cong (.cse64 .cse318)) (res .cse27 .cse170 (res .cse443 .cse444 (res .cse209 (res .cse207 (res .cse203 .cse208 (res .cse142 .cse205 (res .cse33 .cse206 (res .cse194 (res .cse46 (res .cse47 .cse175 (res .cse144 (res .cse197 (res .cse192 (res .cse179 (res .cse172 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse138 .cse193 (res .cse25 .cse180 (res .cse31 .cse173 .cse944))))) .cse174) .cse181) .cse195) .cse199) .cse182)) .cse917) .cse342)))) .cse210) .cse945)))))))))) .cse72))) :proves (- .cse1034) :rup))) :proves (- .cse2) :rup)) (.cse396 (symm .cse64 1)) (.cse121 (symm 0 .cse1033)) (.cse200 (! (res .cse214 .cse215 (res .cse216 .cse217 .cse1032)) :proves (- .cse147 - .cse142) :rup)) (.cse16 (! (res .cse1028 .cse1029 (res .cse1030 (and- 1 .cse1028) .cse1031)) :proves (- .cse6) :input)) (.cse201 (! (res .cse305 .cse306 (trans .cse189 percent .cse159 s)) :proves (+ .cse46 - .cse33 - .cse194 - .cse142) :trans (.cse189 percent .cse159 s))) (.cse255 (! (cong (x_count 3) (x_count .cse376)) :proves (+ .cse254 - .cse0) :cong (.cse256 .cse257))) (.cse399 (trichotomy .cse992 0))) (let ((.cse93 (= .cse95 .cse64)) (.cse83 (= .cse64 .cse62)) (.cse390 (= .cse64 .cse63)) (.cse126 (= 0 .cse415)) (.cse109 (= .cse415 0)) (.cse60 (= .cse63 .cse64)) (.cse103 (= .cse123 0)) (.cse96 (= .cse64 0)) (.cse92 (= 0 .cse64)) (.cse319 (= .cse64 .cse317)) (.cse240 (= 0 .cse438)) (.cse53 (= .cse438 0)) (.cse57 (= .cse62 .cse64)) (.cse234 (+ .cse63 (- 1)))) (let-proof ((.cse127 (symm 0 .cse415)) (.cse409 (res .cse1025 .cse1026 (and- 1 .cse1025))) (.cse321 (res .cse638 .cse639 (trans .cse64 .cse317 .cse318))) (.cse137 (! (res .cse443 .cse444 (! (res .cse445 .cse446 (res .cse35 .cse36 (let-proof ((.cse448 (! (res .cse1023 .cse1024 (and- 0 .cse1023)) :proves (+ .cse447) :input))) (res .cse447 .cse448 (res .cse39 (let ((.cse1016 (+ arg1 .cse1020 .cse1021 .cse1022 5))) (let ((.cse449 (<= .cse1016 0))) (let-proof ((.cse450 (! (res .cse1005 (let ((.cse1006 (not .cse449))) (let-proof ((.cse1007 (not+ .cse1006))) (res .cse1006 .cse1007 (let ((.cse1008 (not .cse1006))) (res .cse1008 (res .cse1009 .cse1010 (let ((.cse1011 (= .cse1009 .cse1008))) (res .cse1011 (let ((.cse1012 (= .cse1005 .cse1006))) (res .cse1012 (res .cse1006 (res .cse1005 (=+1 .cse1012) (res .cse449 .cse1007 (farkas 1 .cse1005 1 .cse449))) (res .cse1005 (res .cse1013 .cse1014 (res .cse449 (let ((.cse1015 (<= 1 .cse1016))) (res .cse1015 (total-int .cse1016 0) (farkas 1 .cse1013 1 .cse1015))) (not- .cse1006))) (=+2 .cse1012))) (cong (not .cse1005) (not .cse1006)))) (=-2 .cse1011)))) (not- .cse1008)))))) (res .cse1017 .cse1018 (res .cse1009 (and- 1 .cse1017) .cse1019))) :proves (+ .cse449) :input))) (res .cse449 .cse450 (let ((.cse920 (+ arg1 (- 3)))) (let ((.cse451 (<= .cse920 0))) (let-proof ((.cse452 (! (res .cse445 .cse446 (res .cse35 .cse36 (res .cse447 .cse448 (res .cse449 .cse450 (! (res .cse75 .cse76 (let ((.cse1004 (<= 1 .cse920))) (res .cse1004 (total-int .cse920 0) (farkas 1 .cse1004 1 .cse449 1 .cse447 1 .cse75 1 .cse445)))) :proves (+ .cse451 - .cse449 - .cse447 - .cse35 - .cse445) :LA ((- 1) 1 1 (- 1) 1)))))) :proves (+ .cse451) :rup))) (res .cse451 .cse452 (res .cse40 .cse41 (res .cse44 .cse45 (let-proof ((.cse453 (! (res .cse462 .cse463 (let ((.cse1002 (< .cse64 .cse318))) (res .cse1002 (let ((.cse1003 (< .cse318 .cse64))) (res .cse1003 (trichotomy .cse64 .cse318) (farkas 1 .cse462 1 .cse1003))) (farkas 1 .cse443 1 .cse1002)))) :proves (+ .cse101 - .cse443) :EQ))) (res .cse101 .cse453 (let ((.cse737 (* (- 1) .cse256))) (let ((.cse981 (+ .cse258 .cse371)) (.cse970 (+ .cse276 .cse737 (- 1))) (.cse947 (+ .cse256 .cse86)) (.cse953 (+ .cse256 .cse86 1)) (.cse465 (+ .cse64 .cse476)) (.cse935 (+ fmt1 .cse943 .cse371 (- 2))) (.cse931 (+ arg1 .cse476)) (.cse933 (+ arg1 .cse476 1)) (.cse928 (+ arg1 .cse371)) (.cse924 (+ arg1 .cse371 (- 2))) (.cse922 (+ arg1 (- 2)))) (let ((.cse529 (+ .cse257 (- 2))) (.cse493 (<= .cse922 0)) (.cse549 (<= .cse924 0)) (.cse550 (= .cse928 0)) (.cse551 (<= .cse933 0)) (.cse562 (<= .cse931 0)) (.cse718 (= .cse376 .cse258)) (.cse712 (= .cse935 0)) (.cse714 (<= .cse935 0)) (.cse460 (= .cse465 0)) (.cse468 (< 0 .cse465)) (.cse523 (= .cse257 .cse64)) (.cse467 (< .cse465 0)) (.cse477 (= .cse64 .cse257)) (.cse876 (= .cse64 .cse256)) (.cse593 (= .cse256 .cse64)) (.cse587 (<= .cse953 0)) (.cse583 (= .cse947 0)) (.cse584 (<= .cse947 0)) (.cse502 (= arg1 .cse376)) (.cse605 (= arg1 3)) (.cse842 (= 0 .cse970)) (.cse517 (= .cse970 0)) (.cse832 (= .cse956 .cse376)) (.cse957 (= .cse956 4)) (.cse552 (= 4 .cse956)) (.cse566 (= arg1 .cse257)) (.cse561 (= .cse931 0)) (.cse500 (= 3 arg1)) (.cse503 (= 0 .cse920)) (.cse492 (= .cse920 0)) (.cse611 (= .cse258 fmt0)) (.cse497 (= 0 fmt0)) (.cse609 (= .cse981 0)) (.cse543 (<= .cse64 0)) (.cse708 (= 0 .cse258)) (.cse787 (<= 1 .cse258)) (.cse704 (= .cse258 0)) (.cse996 (< 0 .cse258)) (.cse784 (<= .cse258 0)) (.cse997 (< .cse258 0)) (.cse579 (= 0 .cse1001)) (.cse577 (= 0 .cse685))) (let-proof ((.cse524 (symm .cse257 .cse64)) (.cse469 (trichotomy .cse465 0)) (.cse877 (symm .cse64 .cse256)) (.cse606 (symm arg1 3)) (.cse843 (symm 0 .cse970)) (.cse958 (symm .cse956 4)) (.cse504 (symm 0 .cse920)) (.cse498 (symm 0 fmt0)) (.cse788 (total-int .cse258 0)) (.cse578 (symm 0 .cse685)) (.cse580 (symm 0 .cse1001))) (let ((.cse581 (= 0 .cse960)) (.cse585 (<= 1 .cse947)) (.cse478 (= 0 .cse465)) (.cse715 (<= 1 .cse935)) (.cse795 (= .cse376 .cse64)) (.cse563 (<= 1 .cse931)) (.cse535 (<= 1 .cse529)) (.cse483 (<= .cse529 0))) (let-proof ((.cse705 (res .cse784 (! (res .cse787 .cse788 (farkas 1 .cse787 1 .cse29 1 .cse42 1 .cse31)) :proves (+ .cse784 - .cse29 - .cse42 - .cse31) :LA ((- 1) 1 1 1)) (let ((.cse998 (<= .cse1000 0))) (res .cse998 (! (res .cse997 (res .cse996 (trichotomy .cse258 0) (farkas 1 .cse996 1 .cse784)) (let ((.cse999 (<= 1 .cse1000))) (res .cse999 (total-int .cse1000 0) (farkas 1 .cse999 1 .cse997)))) :proves (+ .cse998 + .cse704 - .cse784) :trichotomy) (! (res .cse577 .cse578 (res .cse579 .cse580 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse579 1 .cse577 1 .cse998)))) :proves (- .cse29 - .cse42 - .cse31 - .cse998) :LA ((- 1) (- 1) (- 1) 1)))))) (.cse709 (! (res .cse708 (symm 0 .cse258) (res .cse996 (res .cse997 (trichotomy 0 .cse258) (farkas 1 .cse708 1 .cse997)) (farkas 1 .cse704 1 .cse996))) :proves (+ .cse708 - .cse704) :EQ)) (.cse544 (! (res .cse397 (res .cse398 .cse399 (farkas 1 .cse398 1 .cse98)) (let ((.cse995 (<= 1 .cse64))) (res .cse995 (total-int .cse64 0) (farkas 1 .cse995 1 .cse397)))) :proves (+ .cse543 + .cse246 - .cse98) :trichotomy)) (.cse546 (! (let ((.cse991 (= 0 .cse992))) (res .cse991 (symm 0 .cse992) (let ((.cse993 (< 1 .cse64))) (res .cse993 (let ((.cse994 (< .cse64 1))) (res .cse994 (trichotomy 1 .cse64) (farkas 1 .cse991 1 .cse994))) (farkas 1 .cse246 1 .cse993))))) :proves (+ .cse247 - .cse246) :EQ)) (.cse610 (let ((.cse984 (<= .cse981 0))) (res .cse984 (! (res .cse497 .cse498 (let ((.cse985 (<= 1 .cse981))) (res .cse985 (total-int .cse981 0) (farkas 1 .cse985 1 .cse29 1 .cse42 1 .cse497 1 .cse31)))) :proves (+ .cse984 - .cse29 - .cse42 - .cse447 - .cse31) :LA ((- 1) 1 1 (- 1) 1)) (let ((.cse990 (+ .cse258 .cse371 1))) (let ((.cse986 (<= .cse990 0))) (res .cse986 (! (let ((.cse987 (< .cse981 0))) (res .cse987 (let ((.cse988 (< 0 .cse981))) (res .cse988 (trichotomy .cse981 0) (farkas 1 .cse988 1 .cse984))) (let ((.cse989 (<= 1 .cse990))) (res .cse989 (total-int .cse990 0) (farkas 1 .cse989 1 .cse987))))) :proves (+ .cse986 + .cse609 - .cse984) :trichotomy) (! (res .cse577 .cse578 (res .cse579 .cse580 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse579 1 .cse447 1 .cse577 1 .cse986)))) :proves (- .cse29 - .cse42 - .cse447 - .cse31 - .cse986) :LA ((- 1) (- 1) 1 (- 1) 1)))))))) (.cse612 (! (let ((.cse980 (= 0 .cse981))) (res .cse980 (symm 0 .cse981) (let ((.cse982 (< .cse258 fmt0))) (res .cse982 (let ((.cse983 (< fmt0 .cse258))) (res .cse983 (trichotomy .cse258 fmt0) (farkas 1 .cse609 1 .cse983))) (farkas 1 .cse980 1 .cse982))))) :proves (+ .cse611 - .cse609) :EQ)) (.cse501 (! (res .cse503 .cse504 (let ((.cse978 (< 3 arg1))) (res .cse978 (let ((.cse979 (< arg1 3))) (res .cse979 (trichotomy 3 arg1) (farkas 1 .cse503 1 .cse979))) (farkas 1 .cse492 1 .cse978)))) :proves (+ .cse500 - .cse492) :EQ)) (.cse567 (! (let ((.cse975 (= 0 .cse931))) (res .cse975 (symm 0 .cse931) (let ((.cse976 (< arg1 .cse257))) (res .cse976 (let ((.cse977 (< .cse257 arg1))) (res .cse977 (trichotomy arg1 .cse257) (farkas 1 .cse561 1 .cse977))) (farkas 1 .cse975 1 .cse976))))) :proves (+ .cse566 - .cse561) :EQ)) (.cse553 (! (res .cse503 .cse504 (let ((.cse973 (< 4 .cse956))) (res .cse973 (let ((.cse974 (< .cse956 4))) (res .cse974 (trichotomy 4 .cse956) (farkas 1 .cse503 1 .cse974))) (farkas 1 .cse492 1 .cse973)))) :proves (+ .cse552 - .cse492) :EQ)) (.cse833 (! (res .cse957 .cse958 (trans .cse956 4 .cse376)) :proves (+ .cse832 - .cse552 - .cse10) :trans (.cse956 4 .cse376))) (.cse518 (! (res .cse961 (res .cse151 (and+ .cse151) (res .cse962 (res .cse963 .cse964 (and- 0 .cse963)) (=>- .cse962))) (let ((.cse965 (= .cse961 .cse517))) (res .cse965 (res .cse517 (res .cse961 (=+1 .cse965) (let ((.cse966 (= .cse967 .cse276))) (res .cse966 (symm .cse967 .cse276) (let ((.cse968 (< .cse970 0))) (res .cse968 (let ((.cse969 (< 0 .cse970))) (res .cse969 (trichotomy .cse970 0) (farkas 1 .cse961 1 .cse969))) (farkas 1 .cse966 1 .cse968)))))) (res .cse961 (res .cse842 .cse843 (let ((.cse971 (< .cse276 .cse967))) (res .cse971 (let ((.cse972 (< .cse967 .cse276))) (res .cse972 (trichotomy .cse276 .cse967) (farkas 1 .cse517 1 .cse972))) (farkas 1 .cse842 1 .cse971)))) (=+2 .cse965))) (=-2 .cse965)))) :proves (- .cse52 - .cse149 + .cse517) :input)) (.cse582 (symm 0 .cse960)) (.cse848 (res .cse404 (! (res .cse957 .cse958 (res (= .cse376 .cse956) (symm .cse376 .cse956) (trans .cse376 .cse956 4))) :proves (+ .cse404 - .cse832 - .cse552) :trans (.cse376 .cse956 4)) (res .cse505 (! .cse959 :proves (+ .cse505 - .cse404) :cong (.cse257 .cse276)) (! (trans arg1 .cse257 .cse276 .cse256 .cse258 fmt0) :proves (+ .cse554 - .cse566 - .cse505 - .cse154 - .cse152 - .cse611) :trans (arg1 .cse257 .cse276 .cse256 .cse258 fmt0))))) (.cse507 (! (res .cse605 .cse606 (trans arg1 3 .cse376)) :proves (+ .cse502 - .cse500 - .cse0) :trans (arg1 3 .cse376))) (.cse508 (res .cse402 (! (res .cse605 .cse606 (res (= .cse376 arg1) (symm .cse376 arg1) (trans .cse376 arg1 3))) :proves (+ .cse402 - .cse502 - .cse500) :trans (.cse376 arg1 3)) (res .cse809 (! .cse954 :proves (+ .cse809 - .cse402) :cong (.cse257 .cse256)) .cse955))) (.cse586 (total-int .cse947 0)) (.cse588 (! (let ((.cse950 (< .cse947 0))) (res .cse950 (let ((.cse951 (< 0 .cse947))) (res .cse951 (trichotomy .cse947 0) (farkas 1 .cse951 1 .cse584))) (let ((.cse952 (<= 1 .cse953))) (res .cse952 (total-int .cse953 0) (farkas 1 .cse952 1 .cse950))))) :proves (+ .cse587 + .cse583 - .cse584) :trichotomy)) (.cse594 (! (let ((.cse946 (= 0 .cse947))) (res .cse946 (symm 0 .cse947) (let ((.cse948 (< .cse256 .cse64))) (res .cse948 (let ((.cse949 (< .cse64 .cse256))) (res .cse949 (trichotomy .cse256 .cse64) (farkas 1 .cse583 1 .cse949))) (farkas 1 .cse946 1 .cse948))))) :proves (+ .cse593 - .cse583) :EQ)) (.cse648 (res .cse254 .cse255 (! (res .cse876 .cse877 (trans .cse64 .cse256 .cse257)) :proves (+ .cse477 - .cse593 - .cse254) :trans (.cse64 .cse256 .cse257)))) (.cse617 (! (res .cse523 .cse524 (res .cse467 (res .cse468 .cse469 (farkas 1 .cse477 1 .cse468)) (farkas 1 .cse523 1 .cse467))) :proves (- .cse477 + .cse460) :EQ)) (.cse479 (symm 0 .cse465)) (.cse510 (! (res .cse214 .cse215 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse216 .cse217 (res .cse209 (res .cse207 (res .cse203 .cse208 (res .cse33 .cse206 (res .cse142 .cse205 (res .cse144 (res .cse47 .cse175 (res .cse46 (res .cse194 (res .cse172 (res .cse179 (res .cse192 (res .cse197 (res .cse31 .cse173 (res .cse25 .cse180 (res .cse138 .cse193 (res .cse176 .cse198 (res .cse37 .cse178 .cse944))))) .cse199) .cse195) .cse181) .cse174) .cse201) .cse202)) .cse182)))) .cse210) .cse945)))) .cse72))) :proves (- .cse27 - .cse443) :rup)) (.cse716 (total-int .cse935 0)) (.cse717 (let ((.cse942 (+ fmt1 .cse943 .cse371 (- 1)))) (let ((.cse938 (<= .cse942 0))) (res .cse938 (! (let ((.cse939 (< .cse935 0))) (res .cse939 (let ((.cse940 (< 0 .cse935))) (res .cse940 (trichotomy .cse935 0) (farkas 1 .cse940 1 .cse714))) (let ((.cse941 (<= 1 .cse942))) (res .cse941 (total-int .cse942 0) (farkas 1 .cse941 1 .cse939))))) :proves (+ .cse938 + .cse712 - .cse714) :trichotomy) (! (res .cse735 .cse736 (farkas 1 .cse29 1 .cse735 1 .cse42 1 .cse31 1 .cse938)) :proves (- .cse29 + .cse6 - .cse42 - .cse31 - .cse938) :LA (1 (- 1) 1 1 1)))))) (.cse719 (! (let ((.cse934 (= 0 .cse935))) (res .cse934 (symm 0 .cse935) (let ((.cse936 (< .cse376 .cse258))) (res .cse936 (let ((.cse937 (< .cse258 .cse376))) (res .cse937 (trichotomy .cse376 .cse258) (farkas 1 .cse712 1 .cse937))) (farkas 1 .cse934 1 .cse936))))) :proves (+ .cse718 - .cse712) :EQ)) (.cse720 (! (res .cse7 (res .cse704 (symm .cse258 0) (trans .cse376 .cse258 0)) .cse741) :proves (+ .cse88 - .cse718 - .cse708) :trans (.cse376 .cse258 0))) (.cse564 (total-int .cse931 0)) (.cse565 (! (let ((.cse929 (< .cse931 0))) (res .cse929 (let ((.cse930 (< 0 .cse931))) (res .cse930 (trichotomy .cse931 0) (farkas 1 .cse930 1 .cse562))) (let ((.cse932 (<= 1 .cse933))) (res .cse932 (total-int .cse933 0) (farkas 1 .cse932 1 .cse929))))) :proves (+ .cse551 + .cse561 - .cse562) :trichotomy)) (.cse614 (! (let ((.cse925 (= fmt0 arg1))) (res .cse925 (symm fmt0 arg1) (let ((.cse926 (< .cse928 0))) (res .cse926 (let ((.cse927 (< 0 .cse928))) (res .cse927 (trichotomy .cse928 0) (farkas 1 .cse554 1 .cse927))) (farkas 1 .cse925 1 .cse926))))) :proves (- .cse554 + .cse550) :EQ)) (.cse615 (! (let ((.cse923 (<= 1 .cse924))) (res .cse923 (total-int .cse924 0) (farkas 1 .cse550 1 .cse923))) :proves (- .cse550 + .cse549) :LA (1 (- 1)))) (.cse494 (! (let ((.cse918 (< .cse920 0))) (res .cse918 (let ((.cse919 (< 0 .cse920))) (res .cse919 (trichotomy .cse920 0) (farkas 1 .cse919 1 .cse451))) (let ((.cse921 (<= 1 .cse922))) (res .cse921 (total-int .cse922 0) (farkas 1 .cse921 1 .cse918))))) :proves (+ .cse493 + .cse492 - .cse451) :trichotomy)) (.cse536 (total-int .cse529 0))) (let-proof ((.cse489 (! (res .cse445 .cse446 (res .cse35 .cse36 (res .cse447 .cse448 (res .cse39 (res .cse451 .cse452 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse142 .cse205 (res .cse33 .cse206 (res .cse194 (res .cse46 (res .cse47 .cse175 (res .cse144 (res .cse197 (res .cse192 (res .cse179 (res .cse172 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse25 .cse180 (res .cse31 .cse173 (res .cse147 (res .cse183 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse704 .cse705 (res .cse609 .cse610 (res .cse708 .cse709 (res .cse611 .cse612 (let-proof ((.cse881 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse47 1 .cse44 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse483 4 .cse25))))) :proves (- .cse47 - .cse44 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse483 - .cse25) :LA (4 1 (- 1) (- 1) 4 (- 1) (- 4) 4 4)))) (res .cse483 (let-proof ((.cse860 (res .cse493 .cse494 (! (res .cse535 .cse536 (res .cse90 .cse119 (res .cse497 .cse498 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse124 .cse125 (farkas 4 .cse124 1 .cse472 1 .cse40 4 .cse120 1 .cse497 1 .cse35 4 .cse443 4 .cse90 4 .cse535 1 .cse493))))))) :proves (- .cse47 - .cse44 - .cse40 - .cse37 - .cse447 - .cse35 - .cse443 - .cse25 + .cse483 - .cse493) :LA ((- 4) (- 1) 1 (- 4) (- 1) 1 4 (- 4) (- 4) 1))))) (res .cse492 .cse860 (let-proof ((.cse880 (! (res .cse535 .cse536 (res .cse90 .cse119 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse124 .cse125 (farkas 4 .cse124 1 .cse472 1 .cse549 1 .cse40 4 .cse120 1 .cse35 4 .cse443 4 .cse90 4 .cse535)))))) :proves (- .cse47 - .cse44 - .cse549 - .cse40 - .cse37 - .cse35 - .cse443 - .cse25 + .cse483) :LA ((- 4) (- 1) 1 1 (- 4) 1 4 (- 4) (- 4))))) (res .cse549 (res .cse550 (res .cse500 .cse501 (res .cse554 (let-proof ((.cse879 (! (res .cse535 .cse536 (res .cse90 .cse119 (res .cse497 .cse498 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse124 .cse125 (farkas 4 .cse124 1 .cse472 1 .cse40 4 .cse120 1 .cse497 1 .cse551 1 .cse35 4 .cse443 4 .cse90 3 .cse535))))))) :proves (- .cse47 - .cse44 - .cse40 - .cse37 - .cse447 - .cse551 - .cse35 - .cse443 - .cse25 + .cse483) :LA ((- 4) (- 1) 1 (- 4) (- 1) 1 1 4 (- 4) (- 3))))) (res .cse551 (let-proof ((.cse861 (res .cse562 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse81 .cse82 (res .cse563 .cse564 (farkas 4 .cse563 4 .cse47 1 .cse44 1 .cse81 3 .cse449 4 .cse37 4 .cse447 4 .cse75 4 .cse462 4 .cse25 3 .cse445))))) :proves (+ .cse562 - .cse47 - .cse44 - .cse40 - .cse449 - .cse37 - .cse447 - .cse35 - .cse443 - .cse25 - .cse445) :LA ((- 4) 4 1 (- 1) 3 4 4 (- 4) (- 4) 4 3)) .cse565))) (res .cse561 .cse861 (res .cse566 .cse567 (res .cse98 (! (res .cse462 .cse463 (res .cse393 .cse394 (farkas 1 .cse47 1 .cse393 1 .cse37 1 .cse462 1 .cse25))) :proves (- .cse47 + .cse98 - .cse37 - .cse443 - .cse25) :LA (1 (- 1) 1 (- 1) 1)) (res .cse543 (res .cse246 .cse544 (res .cse247 .cse546 (res .cse795 (let ((.cse884 (+ fmt1 .cse371 .cse86 (- 2)))) (let ((.cse862 (= .cse884 0))) (res .cse862 (res .cse353 (! (res .cse2 (res .cse445 .cse446 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse447 .cse448 (res .cse39 (res .cse451 .cse452 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse27 (res .cse141 (res .cse144 (res .cse172 (let-proof ((.cse878 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse478 .cse479 (res .cse81 .cse82 (farkas 8 .cse47 1 .cse44 1 .cse81 4 .cse478 1 .cse79 8 .cse37 1 .cse75 8 .cse462 8 .cse25)))))) :proves (- .cse47 - .cse44 - .cse40 - .cse460 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25) :LA (8 1 (- 1) (- 4) (- 1) 8 (- 1) (- 8) 8)))) (res .cse460 (res .cse477 (res .cse31 .cse173 (res .cse609 .cse610 (res .cse611 .cse612 (res .cse483 (res .cse492 .cse860 (res .cse549 (res .cse550 (res .cse500 .cse501 (res .cse554 (res .cse551 (res .cse561 .cse861 (res .cse566 .cse567 (res .cse552 .cse553 (res .cse150 (res .cse152 .cse153 (res .cse259 .cse260 (res .cse502 (res .cse0 (res .cse1 (res .cse8 .cse726 (res .cse10 .cse11 (res .cse832 .cse833 (res .cse154 (res .cse151 .cse155 (res .cse149 .cse157 (res .cse52 .cse165 (res .cse517 .cse518 (let ((.cse866 (+ .cse276 .cse86))) (let ((.cse863 (= .cse866 0))) (res .cse863 (let ((.cse864 (<= .cse866 0))) (res .cse864 (! (res .cse90 .cse119 (res .cse120 .cse121 (res .cse124 .cse125 (let ((.cse865 (<= 1 .cse866))) (res .cse865 (total-int .cse866 0) (farkas 1 .cse865 1 .cse29 1 .cse124 1 .cse259 1 .cse517 1 .cse42 1 .cse120 1 .cse443 1 .cse90 1 .cse31)))))) :proves (+ .cse864 - .cse29 - .cse47 - .cse259 - .cse517 - .cse42 - .cse37 - .cse443 - .cse25 - .cse31) :LA ((- 1) 1 (- 1) 1 1 1 (- 1) 1 (- 1) 1)) (let ((.cse871 (+ .cse276 .cse86 1))) (let ((.cse867 (<= .cse871 0))) (res .cse867 (! (let ((.cse868 (< .cse866 0))) (res .cse868 (let ((.cse869 (< 0 .cse866))) (res .cse869 (trichotomy .cse866 0) (farkas 1 .cse869 1 .cse864))) (let ((.cse870 (<= 1 .cse871))) (res .cse870 (total-int .cse871 0) (farkas 1 .cse870 1 .cse868))))) :proves (+ .cse867 + .cse863 - .cse864) :trichotomy) (! (res .cse577 .cse578 (res .cse462 .cse463 (res .cse579 .cse580 (res .cse842 .cse843 (res .cse581 .cse582 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse47 1 .cse581 1 .cse842 1 .cse579 1 .cse37 1 .cse462 1 .cse25 1 .cse577 1 .cse867))))))) :proves (- .cse29 - .cse47 - .cse259 - .cse517 - .cse42 - .cse37 - .cse443 - .cse25 - .cse31 - .cse867) :LA ((- 1) 1 (- 1) (- 1) (- 1) 1 (- 1) 1 (- 1) 1))))))) (let ((.cse872 (= .cse276 .cse64))) (res .cse872 (! (let ((.cse873 (= 0 .cse866))) (res .cse873 (symm 0 .cse866) (let ((.cse874 (< .cse276 .cse64))) (res .cse874 (let ((.cse875 (< .cse64 .cse276))) (res .cse875 (trichotomy .cse276 .cse64) (farkas 1 .cse863 1 .cse875))) (farkas 1 .cse873 1 .cse874))))) :proves (+ .cse872 - .cse863) :EQ) (res .cse274 .cse275 (! (res (= .cse64 .cse276) (symm .cse64 .cse276) (trans .cse64 .cse276 .cse257)) :proves (+ .cse477 - .cse872 - .cse274) :trans (.cse64 .cse276 .cse257)))))))))))) .cse848)))) .cse19) .cse507) .cse508))) (! (res .cse2 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse144 (res .cse172 (res .cse460 (res .cse477 (res .cse31 .cse173 (res .cse23 .cse340 (res .cse148 .cse158 (res .cse52 (res .cse263 .cse271 (res .cse583 (res .cse584 (! (res .cse90 .cse119 (res .cse120 .cse121 (res .cse124 .cse125 (res .cse585 .cse586 (farkas 1 .cse585 1 .cse29 1 .cse124 1 .cse263 1 .cse42 1 .cse120 1 .cse443 1 .cse90 1 .cse31))))) :proves (+ .cse584 - .cse29 - .cse47 - .cse263 - .cse42 - .cse37 - .cse443 - .cse25 - .cse31) :LA ((- 1) 1 (- 1) 1 1 (- 1) 1 (- 1) 1)) (res .cse587 .cse588 (! (res .cse577 .cse578 (res .cse462 .cse463 (res .cse579 .cse580 (res .cse285 .cse286 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse47 1 .cse285 1 .cse579 1 .cse37 1 .cse462 1 .cse25 1 .cse577 1 .cse587)))))) :proves (- .cse29 - .cse47 - .cse263 - .cse42 - .cse37 - .cse443 - .cse25 - .cse31 - .cse587) :LA ((- 1) 1 (- 1) (- 1) 1 (- 1) 1 (- 1) 1)))) (res .cse593 .cse594 (res .cse151 (res .cse154 .cse155 (res .cse0 (res .cse1 (res .cse8 .cse726 (res .cse10 .cse11 (res .cse274 .cse275 (! (res .cse277 .cse278 (res .cse876 .cse877 (trans .cse64 .cse256 .cse276 .cse257))) :proves (+ .cse477 - .cse593 - .cse154 - .cse274) :trans (.cse64 .cse256 .cse276 .cse257))))) .cse19) .cse648)) .cse165)))) .cse163)))) .cse617) .cse878) .cse174) .cse182))) .cse72))) .cse18) :proves (- .cse150 - .cse443 + .cse353 - .cse47 - .cse37 - .cse33 - .cse25 - .cse42 - .cse29) :rup))))) .cse879) .cse614)) .cse615) .cse880)) .cse881)))) .cse617) .cse878)) .cse174) .cse182) .cse170) .cse510))))) .cse72))))) .cse18) :proves (+ .cse353 - .cse443 - .cse29 - .cse47 - .cse37 - .cse33 - .cse25 - .cse42) :rup) (let ((.cse882 (<= .cse884 0))) (res .cse882 (! (let ((.cse883 (<= 1 .cse884))) (res .cse883 (total-int .cse884 0) (res .cse90 .cse119 (res .cse120 .cse121 (res .cse124 .cse125 (farkas 1 .cse124 1 .cse353 1 .cse120 1 .cse443 1 .cse90 1 .cse883)))))) :proves (- .cse47 - .cse353 - .cse37 - .cse443 - .cse25 + .cse882) :LA ((- 1) 1 (- 1) 1 (- 1) (- 1))) (let ((.cse894 (+ fmt1 .cse899 1))) (let ((.cse885 (= .cse894 0))) (res .cse885 (! (let ((.cse898 (+ fmt1 .cse899 2))) (let ((.cse886 (<= .cse898 0))) (res .cse886 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse483 (let ((.cse887 (<= .cse894 0))) (res .cse887 (let ((.cse892 (+ fmt1 .cse371 .cse86 (- 1)))) (let ((.cse888 (<= .cse892 0))) (res .cse888 (! (let ((.cse889 (< .cse884 0))) (res .cse889 (let ((.cse890 (< 0 .cse884))) (res .cse890 (trichotomy .cse884 0) (farkas 1 .cse890 1 .cse882))) (let ((.cse891 (<= 1 .cse892))) (res .cse891 (total-int .cse892 0) (farkas 1 .cse891 1 .cse889))))) :proves (+ .cse888 + .cse862 - .cse882) :trichotomy) (! (let ((.cse893 (<= 1 .cse894))) (res .cse893 (total-int .cse894 0) (res .cse535 .cse536 (res .cse90 .cse119 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse124 .cse125 (farkas 3 .cse124 1 .cse472 1 .cse40 3 .cse120 1 .cse35 3 .cse443 3 .cse90 4 .cse535 1 .cse888 1 .cse893)))))))) :proves (- .cse47 - .cse44 - .cse40 - .cse37 - .cse35 - .cse443 - .cse25 + .cse483 - .cse888 + .cse887) :LA ((- 3) (- 1) 1 (- 3) 1 3 (- 3) (- 4) 1 (- 1)))))) (! (let ((.cse895 (< .cse894 0))) (res .cse895 (let ((.cse896 (< 0 .cse894))) (res .cse896 (trichotomy .cse894 0) (farkas 1 .cse896 1 .cse887))) (let ((.cse897 (<= 1 .cse898))) (res .cse897 (total-int .cse898 0) (farkas 1 .cse897 1 .cse895))))) :proves (- .cse887 + .cse885 + .cse886) :trichotomy))) .cse881))) .cse72)) (! (res .cse445 .cse446 (res .cse35 .cse36 (res .cse449 .cse450 (res .cse6 (! (res .cse75 .cse76 (res .cse735 .cse736 (farkas 1 .cse735 1 .cse449 1 .cse75 1 .cse445 1 .cse886))) :proves (+ .cse6 - .cse449 - .cse35 - .cse445 - .cse886) :LA ((- 1) 1 (- 1) 1 1)) .cse16)))) :proves (- .cse886) :rup)))) :proves (- .cse443 + .cse885 - .cse882 - .cse47 + .cse862 - .cse37 - .cse25) :rup) (let ((.cse900 (= .cse904 arg1))) (res .cse900 (! (let ((.cse901 (= 0 .cse894))) (res .cse901 (symm 0 .cse894) (let ((.cse902 (< .cse904 arg1))) (res .cse902 (let ((.cse903 (< arg1 .cse904))) (res .cse903 (trichotomy .cse904 arg1) (farkas 1 .cse885 1 .cse903))) (farkas 1 .cse901 1 .cse902))))) :proves (+ .cse900 - .cse885) :EQ) (let ((.cse905 (= 3 .cse904))) (res .cse905 (! (res (= arg1 .cse904) (symm arg1 .cse904) (trans 3 arg1 .cse904)) :proves (+ .cse905 - .cse500 - .cse900) :trans (3 arg1 .cse904)) (let ((.cse906 (= .cse910 0))) (res .cse906 (! (let ((.cse907 (= .cse904 3))) (res .cse907 (symm .cse904 3) (let ((.cse908 (< .cse910 0))) (res .cse908 (let ((.cse909 (< 0 .cse910))) (res .cse909 (trichotomy .cse910 0) (farkas 1 .cse907 1 .cse909))) (farkas 1 .cse905 1 .cse908))))) :proves (- .cse905 + .cse906) :EQ) (res .cse712 (res .cse714 (! (res .cse577 .cse578 (res .cse497 .cse498 (res .cse579 .cse580 (res .cse631 .cse632 (res .cse715 .cse716 (farkas 1 .cse715 1 .cse631 1 .cse579 1 .cse497 1 .cse577 1 .cse906)))))) :proves (+ .cse714 - .cse29 - .cse42 - .cse447 - .cse31 - .cse906) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) .cse717) (res .cse718 .cse719 (res .cse88 .cse720 (res .cse683 .cse684 (! (res .cse521 .cse522 (res .cse911 .cse912 (trans arg1 .cse257 .cse685 .cse520 .cse258 fmt0))) :proves (+ .cse554 - .cse566 - .cse683 - .cse145 - .cse138 - .cse611) :trans (arg1 .cse257 .cse685 .cse520 .cse258 fmt0)))))))))))))))))) (! (let ((.cse913 (= 0 .cse884))) (res .cse913 (symm 0 .cse884) (let ((.cse914 (< .cse376 .cse64))) (res .cse914 (let ((.cse915 (< .cse64 .cse376))) (res .cse915 (trichotomy .cse376 .cse64) (farkas 1 .cse862 1 .cse915))) (farkas 1 .cse913 1 .cse914))))) :proves (+ .cse795 - .cse862) :EQ)))) (res .cse429 (! (res .cse395 .cse396 (trans .cse376 .cse64 1)) :proves (+ .cse429 - .cse795 - .cse247) :trans (.cse376 .cse64 1)) (res .cse603 (! .cse916 :proves (+ .cse603 - .cse429) :cong (.cse257 .cse520)) (! (res .cse521 .cse522 (trans arg1 .cse257 .cse520 .cse258 fmt0)) :proves (+ .cse554 - .cse566 - .cse603 - .cse138 - .cse611) :trans (arg1 .cse257 .cse520 .cse258 fmt0))))))) (! (res .cse90 .cse119 (res .cse120 .cse121 (res .cse124 .cse125 (farkas 1 .cse124 1 .cse543 1 .cse120 1 .cse443 1 .cse90)))) :proves (- .cse47 - .cse543 - .cse37 - .cse443 - .cse25) :LA ((- 1) 1 (- 1) 1 (- 1)))))))) .cse879)) .cse614)) .cse615) .cse880)))) .cse881)))))))) .cse185) .cse200))))))) .cse174) .cse181) .cse195) .cse199) .cse182)) .cse917) .cse342))) .cse16))))) .cse72)))) :proves (- .cse203 - .cse443) :rup))) (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (let ((.cse850 (+ .cse520 .cse371)) (.cse742 (= .cse685 .cse257)) (.cse822 (+ .cse520 .cse476)) (.cse811 (+ .cse257 (- 3))) (.cse815 (+ .cse276 (- 3))) (.cse814 (+ .cse276 .cse737))) (let ((.cse642 (= .cse814 0)) (.cse597 (= .cse815 0)) (.cse601 (= .cse276 3)) (.cse595 (= 3 .cse276)) (.cse559 (= 3 .cse257)) (.cse698 (= 0 .cse811)) (.cse555 (= .cse811 0)) (.cse556 (<= .cse811 0)) (.cse545 (= .cse822 0)) (.cse547 (= .cse520 .cse257)) (.cse456 (= 0 .cse520)) (.cse454 (= .cse520 0)) (.cse825 (< 0 .cse520)) (.cse826 (< .cse520 0)) (.cse541 (= fmt0 .cse520)) (.cse539 (= .cse850 0)) (.cse575 (+ .cse256 (- 1)))) (let-proof ((.cse602 (symm .cse276 3)) (.cse699 (symm 0 .cse811)) (.cse743 (! (cong (x_count 0) (x_count .cse376)) :proves (+ .cse742 - .cse88) :cong (.cse685 .cse257)))) (let ((.cse570 (<= 1 .cse575)) (.cse569 (<= .cse575 0)) (.cse532 (< 0 .cse529)) (.cse490 (= 2 .cse257)) (.cse531 (< .cse529 0)) (.cse482 (= .cse529 0)) (.cse607 (= .cse520 fmt0)) (.cse619 (= 0 .cse822)) (.cse599 (= 0 .cse815)) (.cse649 (<= 1 .cse811))) (let-proof ((.cse571 (total-int .cse575 0)) (.cse533 (trichotomy .cse529 0)) (.cse540 (let ((.cse853 (<= .cse850 0))) (res .cse853 (! (res .cse497 .cse498 (let ((.cse854 (<= 1 .cse850))) (res .cse854 (total-int .cse850 0) (farkas 1 .cse854 1 .cse42 1 .cse497 1 .cse31)))) :proves (+ .cse853 - .cse42 - .cse447 - .cse31) :LA ((- 1) 1 (- 1) 1)) (let ((.cse859 (+ .cse520 .cse371 1))) (let ((.cse855 (<= .cse859 0))) (res .cse855 (! (let ((.cse856 (< .cse850 0))) (res .cse856 (let ((.cse857 (< 0 .cse850))) (res .cse857 (trichotomy .cse850 0) (farkas 1 .cse857 1 .cse853))) (let ((.cse858 (<= 1 .cse859))) (res .cse858 (total-int .cse859 0) (farkas 1 .cse858 1 .cse856))))) :proves (+ .cse855 + .cse539 - .cse853) :trichotomy) (! (res .cse577 .cse578 (res .cse579 .cse580 (farkas 1 .cse579 1 .cse447 1 .cse577 1 .cse855))) :proves (- .cse42 - .cse447 - .cse31 - .cse855) :LA ((- 1) 1 (- 1) 1)))))))) (.cse542 (! (let ((.cse849 (= 0 .cse850))) (res .cse849 (symm 0 .cse850) (let ((.cse851 (< fmt0 .cse520))) (res .cse851 (let ((.cse852 (< .cse520 fmt0))) (res .cse852 (trichotomy fmt0 .cse520) (farkas 1 .cse849 1 .cse852))) (farkas 1 .cse539 1 .cse851))))) :proves (+ .cse541 - .cse539) :EQ)) (.cse608 (symm .cse520 fmt0)) (.cse613 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse832 .cse833 (res .cse154 (res .cse151 .cse155 (res .cse149 .cse157 (res .cse52 .cse165 (res .cse517 .cse518 (let ((.cse837 (+ .cse276 (- 1)))) (let ((.cse834 (= .cse837 0))) (res .cse834 (let ((.cse835 (<= .cse837 0))) (res .cse835 (! (let ((.cse836 (<= 1 .cse837))) (res .cse836 (total-int .cse837 0) (farkas 1 .cse836 1 .cse29 1 .cse259 1 .cse517 1 .cse42 1 .cse31))) :proves (+ .cse835 - .cse29 - .cse259 - .cse517 - .cse42 - .cse31) :LA ((- 1) 1 1 1 1 1)) (let ((.cse838 (<= .cse276 0))) (res .cse838 (! (let ((.cse839 (< .cse837 0))) (res .cse839 (let ((.cse840 (< 0 .cse837))) (res .cse840 (trichotomy .cse837 0) (farkas 1 .cse840 1 .cse835))) (let ((.cse841 (<= 1 .cse276))) (res .cse841 (total-int .cse276 0) (farkas 1 .cse841 1 .cse839))))) :proves (+ .cse838 + .cse834 - .cse835) :trichotomy) (! (res .cse577 .cse578 (res .cse579 .cse580 (res .cse842 .cse843 (res .cse581 .cse582 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse581 1 .cse842 1 .cse579 1 .cse577 1 .cse838)))))) :proves (- .cse29 - .cse259 - .cse517 - .cse42 - .cse31 - .cse838) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)))))) (let ((.cse844 (= 1 .cse276))) (res .cse844 (! (let ((.cse845 (= 0 .cse837))) (res .cse845 (symm 0 .cse837) (let ((.cse846 (< 1 .cse276))) (res .cse846 (let ((.cse847 (< .cse276 1))) (res .cse847 (trichotomy 1 .cse276) (farkas 1 .cse845 1 .cse847))) (farkas 1 .cse834 1 .cse846))))) :proves (+ .cse844 - .cse834) :EQ) (res .cse274 .cse275 (! (res .cse395 .cse396 (trans .cse64 1 .cse276 .cse257)) :proves (+ .cse477 - .cse247 - .cse844 - .cse274) :trans (.cse64 1 .cse276 .cse257)))))))))))) .cse848))))) (.cse644 (! (res .cse190 .cse191 (trans .cse250 percent .cse166 x)) :proves (+ .cse224 - .cse23 - .cse52 - .cse148) :trans (.cse250 percent .cse166 x))) (.cse455 (let ((.cse827 (<= .cse520 0))) (res .cse827 (! (let ((.cse828 (<= 1 .cse520))) (res .cse828 (total-int .cse520 0) (farkas 1 .cse828 1 .cse42 1 .cse31))) :proves (+ .cse827 - .cse42 - .cse31) :LA ((- 1) 1 1)) (let ((.cse829 (<= .cse831 0))) (res .cse829 (! (res .cse826 (res .cse825 (trichotomy .cse520 0) (farkas 1 .cse825 1 .cse827)) (let ((.cse830 (<= 1 .cse831))) (res .cse830 (total-int .cse831 0) (farkas 1 .cse830 1 .cse826)))) :proves (+ .cse829 + .cse454 - .cse827) :trichotomy) (! (res .cse577 .cse578 (res .cse579 .cse580 (farkas 1 .cse579 1 .cse577 1 .cse829))) :proves (- .cse42 - .cse31 - .cse829) :LA ((- 1) (- 1) 1))))))) (.cse457 (! (res .cse456 (symm 0 .cse520) (res .cse825 (res .cse826 (trichotomy 0 .cse520) (farkas 1 .cse456 1 .cse826)) (farkas 1 .cse454 1 .cse825))) :proves (+ .cse456 - .cse454) :EQ)) (.cse616 (res .cse742 .cse743 (! (trans .cse520 .cse685 .cse257) :proves (+ .cse547 - .cse145 - .cse742) :trans (.cse520 .cse685 .cse257)))) (.cse618 (! (res .cse603 (symm .cse257 .cse520) (let ((.cse823 (< .cse822 0))) (res .cse823 (let ((.cse824 (< 0 .cse822))) (res .cse824 (trichotomy .cse822 0) (farkas 1 .cse547 1 .cse824))) (farkas 1 .cse603 1 .cse823)))) :proves (- .cse547 + .cse545) :EQ)) (.cse620 (symm 0 .cse822)) (.cse558 (! (let ((.cse820 (< .cse811 0))) (res .cse820 (let ((.cse821 (< 0 .cse811))) (res .cse821 (trichotomy .cse811 0) (farkas 1 .cse821 1 .cse556))) (res .cse535 .cse536 (farkas 1 .cse535 1 .cse820)))) :proves (+ .cse483 + .cse555 - .cse556) :trichotomy)) (.cse560 (! (res .cse698 .cse699 (let ((.cse818 (< 3 .cse257))) (res .cse818 (let ((.cse819 (< .cse257 3))) (res .cse819 (trichotomy 3 .cse257) (farkas 1 .cse698 1 .cse819))) (farkas 1 .cse555 1 .cse818)))) :proves (+ .cse559 - .cse555) :EQ)) (.cse647 (res .cse505 .cse506 (! (trans 3 .cse257 .cse276) :proves (+ .cse595 - .cse559 - .cse505) :trans (3 .cse257 .cse276)))) (.cse598 (! (res .cse601 .cse602 (let ((.cse816 (< .cse815 0))) (res .cse816 (let ((.cse817 (< 0 .cse815))) (res .cse817 (trichotomy .cse815 0) (farkas 1 .cse601 1 .cse817))) (farkas 1 .cse595 1 .cse816)))) :proves (- .cse595 + .cse597) :EQ)) (.cse600 (symm 0 .cse815)) (.cse643 (! (res .cse277 .cse278 (let ((.cse812 (< .cse814 0))) (res .cse812 (let ((.cse813 (< 0 .cse814))) (res .cse813 (trichotomy .cse814 0) (farkas 1 .cse154 1 .cse813))) (farkas 1 .cse277 1 .cse812)))) :proves (- .cse154 + .cse642) :EQ)) (.cse650 (total-int .cse811 0))) (let-proof ((.cse488 (! (res .cse35 .cse36 (res .cse447 .cse448 (res .cse451 .cse452 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (let ((.cse670 (= 4 .cse276)) (.cse653 (= 4 .cse257)) (.cse807 (+ .cse257 (- 4)))) (let ((.cse701 (<= .cse807 0)) (.cse800 (+ .cse276 (- 4)))) (let-proof ((.cse674 (res .cse505 .cse506 (! (trans 4 .cse257 .cse276) :proves (+ .cse670 - .cse653 - .cse505) :trans (4 .cse257 .cse276)))) (.cse721 (res .cse809 .cse810 (! (res .cse277 .cse278 (trans 4 .cse257 .cse256 .cse276)) :proves (+ .cse670 - .cse653 - .cse809 - .cse154) :trans (4 .cse257 .cse256 .cse276))))) (let ((.cse675 (= .cse800 0)) (.cse672 (= .cse276 4)) (.cse692 (= 0 .cse807)) (.cse651 (= .cse807 0))) (let-proof ((.cse673 (symm .cse276 4)) (.cse671 (! (res .cse2 (res .cse3 .cse4 (res .cse6 (res .cse0 (res .cse1 (res .cse8 .cse49 (res .cse10 .cse11 .cse674)) .cse19) .cse721) .cse16)) .cse18) :proves (+ .cse670 - .cse653 - .cse154 + .cse5 + .cse7) :rup)) (.cse778 (! (res (= .cse257 4) (symm .cse257 4) (trans .cse257 4 .cse276 .cse256 .cse258)) :proves (+ .cse141 - .cse653 - .cse670 - .cse154 - .cse152) :trans (.cse257 4 .cse276 .cse256 .cse258))) (.cse693 (symm 0 .cse807)) (.cse702 (! (let ((.cse808 (<= 1 .cse807))) (res .cse808 (total-int .cse807 0) (res .cse90 .cse119 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse238 .cse239 (farkas 4 .cse238 1 .cse472 1 .cse40 1 .cse449 4 .cse120 4 .cse443 4 .cse90 1 .cse445 4 .cse808))))))) :proves (- .cse209 - .cse44 - .cse40 - .cse449 - .cse37 - .cse443 - .cse25 - .cse445 + .cse701) :LA ((- 4) (- 1) 1 1 (- 4) 4 (- 4) 1 (- 4)))) (.cse797 (let ((.cse805 (< .cse807 0))) (res .cse805 (let ((.cse806 (< 0 .cse807))) (res .cse806 (trichotomy .cse807 0) (farkas 1 .cse806 1 .cse701))) (res .cse649 .cse650 (farkas 1 .cse649 1 .cse805)))))) (let ((.cse677 (= 0 .cse800))) (let-proof ((.cse652 (! (res .cse445 .cse446 (res .cse35 .cse36 (res .cse39 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse556 (res .cse701 .cse702 (! .cse797 :proves (- .cse701 + .cse651 + .cse556) :trichotomy)) (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse556 4 .cse209 1 .cse44 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse25))))) :proves (- .cse556 - .cse209 - .cse44 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25) :LA (4 4 1 (- 1) (- 1) 4 (- 1) (- 4) 4))))) .cse489)))) .cse72))) :proves (- .cse443 + .cse651 - .cse25 - .cse37) :rup)) (.cse655 (res .cse493 .cse494 (! (res .cse90 .cse119 (res .cse692 .cse693 (res .cse497 .cse498 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse238 .cse239 (farkas 4 .cse238 1 .cse472 1 .cse40 4 .cse120 1 .cse497 4 .cse692 1 .cse35 4 .cse443 4 .cse90 1 .cse493))))))) :proves (- .cse209 - .cse44 - .cse40 - .cse37 - .cse447 - .cse651 - .cse35 - .cse443 - .cse25 - .cse493) :LA ((- 4) (- 1) 1 (- 4) (- 1) (- 4) 1 4 (- 4) 1)))) (.cse654 (! (res .cse692 .cse693 (let ((.cse803 (< 4 .cse257))) (res .cse803 (let ((.cse804 (< .cse257 4))) (res .cse804 (trichotomy 4 .cse257) (farkas 1 .cse692 1 .cse804))) (farkas 1 .cse651 1 .cse803)))) :proves (+ .cse653 - .cse651) :EQ)) (.cse679 (! (res .cse670 .cse671 .cse778) :proves (- .cse152 - .cse653 + .cse141 - .cse154 + .cse7 + .cse5) :rup)) (.cse676 (! (res .cse672 .cse673 (let ((.cse801 (< .cse800 0))) (res .cse801 (let ((.cse802 (< 0 .cse800))) (res .cse802 (trichotomy .cse800 0) (farkas 1 .cse672 1 .cse802))) (farkas 1 .cse670 1 .cse801)))) :proves (- .cse670 + .cse675) :EQ)) (.cse678 (symm 0 .cse800))) (res .cse42 (res .cse145 (res .cse183 .cse184 (res .cse33 .cse227 (res .cse147 .cse185 (res .cse144 (res .cse194 (res .cse228 .cse229 (res .cse172 (res .cse197 (res .cse192 (res .cse31 .cse173 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse651 .cse652 (res .cse653 .cse654 (res .cse482 (res .cse492 .cse655 (res .cse490 (res .cse500 .cse501 (res .cse186 (res .cse5 (let ((.cse689 (+ .cse685 (- 4)))) (let ((.cse656 (= .cse689 0))) (let-proof ((.cse682 (! (let ((.cse690 (= 0 .cse689))) (res .cse690 (symm 0 .cse689) (farkas 1 .cse690 1 .cse31))) :proves (- .cse656 - .cse31) :LA ((- 1) 1)))) (res .cse656 (let ((.cse657 (= 4 .cse685))) (let-proof ((.cse681 (! (let ((.cse686 (= .cse685 4))) (res .cse686 (symm .cse685 4) (let ((.cse687 (< .cse689 0))) (res .cse687 (let ((.cse688 (< 0 .cse689))) (res .cse688 (trichotomy .cse689 0) (farkas 1 .cse686 1 .cse688))) (farkas 1 .cse657 1 .cse687))))) :proves (- .cse657 + .cse656) :EQ))) (res .cse657 (let-proof ((.cse680 (res .cse683 .cse684 (! (trans 4 .cse257 .cse685) :proves (+ .cse657 - .cse653 - .cse683) :trans (4 .cse257 .cse685))))) (res .cse88 (res .cse7 (res .cse152 (res .cse150 .cse153 (res .cse23 .cse340 (res .cse148 .cse158 (res .cse52 (res .cse263 .cse271 (res .cse151 (let ((.cse661 (+ .cse256 (- 2)))) (let ((.cse658 (= .cse661 0))) (res .cse658 (let ((.cse659 (<= .cse661 0))) (res .cse659 (! (let ((.cse660 (<= 1 .cse661))) (res .cse660 (total-int .cse661 0) (farkas 1 .cse660 1 .cse29 1 .cse228 1 .cse263 1 .cse31))) :proves (+ .cse659 - .cse29 - .cse228 - .cse263 - .cse31) :LA ((- 1) 1 1 1 1)) (res .cse569 (! (let ((.cse662 (< .cse661 0))) (res .cse662 (let ((.cse663 (< 0 .cse661))) (res .cse663 (trichotomy .cse661 0) (farkas 1 .cse663 1 .cse659))) (res .cse570 .cse571 (farkas 1 .cse570 1 .cse662)))) :proves (+ .cse569 + .cse658 - .cse659) :trichotomy) (! (res .cse577 .cse578 (res .cse285 .cse286 (res .cse664 .cse665 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse664 1 .cse285 1 .cse577 1 .cse569))))) :proves (- .cse29 - .cse228 - .cse263 - .cse31 - .cse569) :LA ((- 1) (- 1) (- 1) (- 1) 1))))) (let ((.cse666 (= 2 .cse256))) (res .cse666 (! (let ((.cse667 (= 0 .cse661))) (res .cse667 (symm 0 .cse661) (let ((.cse668 (< 2 .cse256))) (res .cse668 (let ((.cse669 (< .cse256 2))) (res .cse669 (trichotomy 2 .cse256) (farkas 1 .cse667 1 .cse669))) (farkas 1 .cse658 1 .cse668))))) :proves (+ .cse666 - .cse658) :EQ) (res .cse154 .cse155 (res .cse670 .cse671 (! (res .cse277 .cse278 (res .cse672 .cse673 (trans 2 .cse256 .cse276 4 .cse257))) :proves (+ .cse490 - .cse666 - .cse154 - .cse670 - .cse653) :trans (2 .cse256 .cse276 4 .cse257))))))))) .cse165)) .cse163)))) (! (res .cse2 (res .cse3 .cse4 (res .cse6 (res .cse656 (res .cse657 (res .cse88 (res .cse7 (res .cse259 .cse260 (res .cse502 (res .cse0 (res .cse1 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse154 (res .cse670 .cse674 (res .cse675 .cse676 (res .cse151 .cse155 (res .cse52 .cse165 (res .cse149 .cse157 (res .cse517 .cse518 (! (res .cse677 .cse678 (farkas 1 .cse29 1 .cse228 1 .cse259 1 .cse677 1 .cse517 1 .cse31)) :proves (- .cse29 - .cse228 - .cse259 - .cse675 - .cse517 - .cse31) :LA (1 1 1 (- 1) 1 1)))))))) .cse679))) .cse19) .cse507) .cse508)) .cse89) .cse680) .cse681) .cse682) .cse16)) .cse18) :proves (- .cse653 - .cse500 - .cse228 - .cse152 + .cse141 - .cse29 - .cse31 + .cse5) :rup)) .cse89) .cse680)) .cse681))) .cse682)))) .cse187) .cse326)) (! (let ((.cse691 (= .cse257 2))) (res .cse691 (symm .cse257 2) (res .cse531 (res .cse532 .cse533 (farkas 1 .cse691 1 .cse532)) (farkas 1 .cse490 1 .cse531)))) :proves (- .cse490 + .cse482) :EQ))) (! (res .cse692 .cse693 (farkas 1 .cse692 1 .cse482)) :proves (- .cse651 - .cse482) :LA ((- 1) 1)))))))))) .cse195) .cse199) .cse174)) .cse694) .cse182)))) .cse171) (! (res .cse2 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse447 .cse448 (res .cse451 .cse452 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (let-proof ((.cse695 (! (res .cse579 .cse580 (let ((.cse798 (< .cse520 .cse685))) (res .cse798 (let ((.cse799 (< .cse685 .cse520))) (res .cse799 (trichotomy .cse520 .cse685) (farkas 1 .cse42 1 .cse799))) (farkas 1 .cse579 1 .cse798)))) :proves (+ .cse145 - .cse42) :EQ))) (res .cse145 .cse695 (let-proof ((.cse696 (! (res .cse462 .cse463 (res .cse393 .cse394 (farkas 1 .cse323 1 .cse209 1 .cse393 1 .cse462 1 .cse25))) :proves (- .cse323 - .cse209 + .cse98 - .cse443 - .cse25) :LA (1 1 (- 1) (- 1) 1))) (.cse697 (! (res .cse90 .cse119 (res .cse649 .cse650 (res .cse472 .cse473 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 4 .cse474 4 .cse238 1 .cse472 4 .cse649 1 .cse40 1 .cse449 4 .cse443 4 .cse90 1 .cse445)))))) :proves (- .cse323 - .cse209 - .cse44 + .cse556 - .cse40 - .cse449 - .cse443 - .cse25 - .cse445) :LA ((- 4) (- 4) (- 1) (- 4) 1 1 4 (- 4) 1))) (.cse700 (! (res .cse90 .cse119 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 1 .cse474 1 .cse238 1 .cse543 1 .cse443 1 .cse90)))) :proves (- .cse323 - .cse209 - .cse543 - .cse443 - .cse25) :LA ((- 1) (- 1) 1 1 (- 1)))) (.cse703 (! .cse797 :proves (+ .cse556 + .cse651 - .cse701) :trichotomy)) (.cse760 (symm .cse95 0))) (let-proof ((.cse761 (! (res .cse35 .cse36 (res .cse447 .cse448 (res .cse451 .cse452 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse145 .cse695 (res .cse144 .cse174 (res .cse264 .cse302 (res .cse287 .cse303 (res .cse33 (res .cse46 (res .cse29 (res .cse138 (res .cse192 .cse193 (res .cse194 .cse195 (res .cse224 .cse279 (res .cse213 (res .cse23 (res .cse300 .cse301 (res .cse197 (res .cse150 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse152 .cse153 (res .cse259 .cse260 (res .cse651 .cse652 (res .cse653 .cse654 (res .cse492 .cse655 (res .cse545 (res .cse500 .cse501 (res .cse547 (res .cse502 (res .cse0 (res .cse1 (res .cse88 (res .cse7 (res .cse10 (! (res .cse2 (res .cse3 .cse4 (res .cse6 (let ((.cse772 (+ fmt1 .cse777 .cse371 (- 1)))) (let ((.cse762 (<= .cse772 0))) (res .cse762 (res .cse8 (res .cse5 .cse359 (let ((.cse768 (+ fmt1 .cse777 .cse371 (- 2)))) (let ((.cse763 (= .cse768 0))) (res .cse763 (res .cse349 .cse350 (res .cse351 .cse352 (res .cse353 .cse354 (let ((.cse764 (<= .cse768 0))) (res .cse764 (! (res .cse765 .cse766 (res .cse579 .cse580 (let ((.cse767 (<= 1 .cse768))) (res .cse767 (total-int .cse768 0) (farkas 1 .cse767 1 .cse579 1 .cse765 1 .cse353))))) :proves (+ .cse764 - .cse42 - .cse287 - .cse353) :LA ((- 1) (- 1) (- 1) 1)) (! (let ((.cse769 (< .cse768 0))) (res .cse769 (let ((.cse770 (< 0 .cse768))) (res .cse770 (trichotomy .cse768 0) (farkas 1 .cse770 1 .cse764))) (let ((.cse771 (<= 1 .cse772))) (res .cse771 (total-int .cse772 0) (farkas 1 .cse771 1 .cse769))))) :proves (+ .cse762 + .cse763 - .cse764) :trichotomy)))))) (res .cse186 .cse187 (let ((.cse773 (= .cse376 .cse520))) (res .cse773 (! (let ((.cse774 (= 0 .cse768))) (res .cse774 (symm 0 .cse768) (let ((.cse775 (< .cse376 .cse520))) (res .cse775 (let ((.cse776 (< .cse520 .cse376))) (res .cse776 (trichotomy .cse376 .cse520) (farkas 1 .cse763 1 .cse776))) (farkas 1 .cse774 1 .cse775))))) :proves (+ .cse773 - .cse763) :EQ) (res .cse603 .cse604 (! (res (= .cse520 .cse376) (symm .cse520 .cse376) (trans 4 .cse257 .cse520 .cse376)) :proves (+ .cse10 - .cse653 - .cse603 - .cse773) :trans (4 .cse257 .cse520 .cse376)))))))))) .cse11) (res .cse366 (! (res .cse367 .cse368 (farkas 1 .cse762 1 .cse42 1 .cse287 1 .cse367)) :proves (- .cse762 - .cse42 - .cse287 + .cse366) :LA (1 1 1 (- 1))) .cse369)))) .cse16)) .cse18) :proves (- .cse653 - .cse287 + .cse10 + .cse1 + .cse7 - .cse42) :rup) (res .cse670 .cse674 (res .cse154 (res .cse675 .cse676 (res .cse151 .cse155 (res .cse149 .cse157 (res .cse52 .cse165 (res .cse517 .cse518 (! (res .cse677 .cse678 (farkas 1 .cse300 1 .cse259 1 .cse677 1 .cse517 1 .cse42 1 .cse287)) :proves (- .cse300 - .cse259 - .cse675 - .cse517 - .cse42 - .cse287) :LA (1 1 (- 1) 1 1 1))))))) .cse778))) .cse89) .cse616) .cse19) .cse507) .cse508) .cse618)) (! (res .cse692 .cse693 (res .cse619 .cse620 (farkas 1 .cse619 1 .cse42 1 .cse287 1 .cse692))) :proves (- .cse545 - .cse42 - .cse287 - .cse651) :LA ((- 1) 1 1 (- 1))))))))))) .cse340) .cse322)) (! (res .cse344 .cse345 (trans .cse189 x .cse250 percent)) :proves (+ .cse33 - .cse144 - .cse224 - .cse23) :trans (.cse189 x .cse250 percent))) .cse779)))) .cse140) (! (res .cse2 (res .cse445 .cse446 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse145 .cse695 (res .cse138 .cse333 (let ((.cse783 (+ .cse258 (- 1)))) (let ((.cse780 (= .cse783 0))) (res .cse780 (let ((.cse781 (<= .cse783 0))) (res .cse781 (! (let ((.cse782 (<= 1 .cse783))) (res .cse782 (total-int .cse783 0) (farkas 1 .cse782 1 .cse29 1 .cse42 1 .cse287))) :proves (+ .cse781 - .cse29 - .cse42 - .cse287) :LA ((- 1) 1 1 1)) (res .cse784 (! (let ((.cse785 (< .cse783 0))) (res .cse785 (let ((.cse786 (< 0 .cse783))) (res .cse786 (trichotomy .cse783 0) (farkas 1 .cse786 1 .cse781))) (res .cse787 .cse788 (farkas 1 .cse787 1 .cse785)))) :proves (+ .cse784 + .cse780 - .cse781) :trichotomy) (! (res .cse765 .cse766 (res .cse579 .cse580 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse579 1 .cse765 1 .cse784)))) :proves (- .cse29 - .cse42 - .cse287 - .cse784) :LA ((- 1) (- 1) (- 1) 1))))) (let ((.cse789 (= 1 .cse258))) (res .cse789 (! (let ((.cse790 (= 0 .cse783))) (res .cse790 (symm 0 .cse783) (let ((.cse791 (< 1 .cse258))) (res .cse791 (let ((.cse792 (< .cse258 1))) (res .cse792 (trichotomy 1 .cse258) (farkas 1 .cse790 1 .cse792))) (farkas 1 .cse780 1 .cse791))))) :proves (+ .cse789 - .cse780) :EQ) (res .cse186 (res .cse5 (res .cse37 (res .cse176 (res .cse197 .cse198 (res .cse213 .cse322 (res .cse194 .cse199 (res .cse23 (res .cse323 .cse324 (res .cse98 .cse696 (res .cse543 (res .cse246 .cse544 (res .cse556 .cse697 (res .cse247 .cse546 (res .cse477 (res .cse150 (res .cse152 .cse153 (res .cse593 (! (res (= .cse258 1) (symm .cse258 1) (trans .cse256 .cse258 1 .cse64)) :proves (+ .cse593 - .cse152 - .cse789 - .cse247) :trans (.cse256 .cse258 1 .cse64)) (res .cse259 .cse260 (res .cse0 (res .cse1 (res .cse483 (res .cse555 .cse558 (res .cse559 .cse560 (res .cse88 (res .cse7 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse154 (res .cse595 .cse647 (res .cse597 .cse598 (res .cse151 .cse155 (res .cse52 .cse165 (res .cse149 .cse157 (res .cse517 .cse518 (! (res .cse599 .cse600 (farkas 1 .cse29 1 .cse599 1 .cse259 1 .cse517 1 .cse42 1 .cse287)) :proves (- .cse29 - .cse597 - .cse259 - .cse517 - .cse42 - .cse287) :LA (1 (- 1) 1 1 1 1)))))))) .cse156))) .cse89) .cse167))) (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse323 4 .cse209 1 .cse44 1 .cse81 1 .cse79 1 .cse75 4 .cse462 4 .cse483 4 .cse25))))) :proves (- .cse323 - .cse209 - .cse44 - .cse40 + .cse39 - .cse35 - .cse443 - .cse483 - .cse25) :LA (4 4 1 (- 1) (- 1) (- 1) (- 4) 4 4))) .cse19) .cse648)))) .cse340) (! (res .cse523 .cse524 (res .cse395 .cse396 (trans .cse257 .cse64 1 .cse258))) :proves (+ .cse141 - .cse477 - .cse247 - .cse789) :trans (.cse257 .cse64 1 .cse258)))))) .cse700))) .cse281)))) .cse178) (! (res .cse2 (res .cse445 .cse446 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse101 .cse453 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse90 .cse91 (res .cse145 .cse695 (res .cse138 .cse333 (res .cse186 (res .cse5 (res .cse176 (! (res .cse120 .cse121 (let ((.cse793 (< .cse318 .cse317))) (res .cse793 (let ((.cse794 (< .cse317 .cse318))) (res .cse794 (trichotomy .cse318 .cse317) (farkas 1 .cse37 1 .cse794))) (farkas 1 .cse120 1 .cse793)))) :proves (+ .cse176 - .cse37) :EQ) (res .cse795 (res .cse88 (res .cse7 (res .cse701 .cse702 (res .cse651 (res .cse556 .cse703 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse209 1 .cse44 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse25 4 .cse556))))) :proves (- .cse209 - .cse44 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25 - .cse556) :LA (4 1 (- 1) (- 1) 4 (- 1) (- 4) 4 4))) (res .cse653 .cse654 (res .cse150 (res .cse152 .cse153 (res .cse259 .cse260 (res .cse154 (res .cse151 .cse155 (res .cse149 .cse157 (res .cse52 .cse165 (res .cse517 .cse518 (res .cse675 (res .cse670 (res .cse10 .cse379 .cse674) .cse676) (! (res .cse677 .cse678 (farkas 1 .cse29 1 .cse677 1 .cse259 1 .cse517 1 .cse42 1 .cse287)) :proves (- .cse29 - .cse675 - .cse259 - .cse517 - .cse42 - .cse287) :LA (1 (- 1) 1 1 1 1))))))) .cse679))) (! (res .cse33 (res .cse148 .cse158 (res .cse52 (res .cse23 .cse340 (res .cse151 (res .cse263 .cse271 (res .cse154 .cse155 (res .cse642 .cse643 (res .cse675 (res .cse670 .cse671 .cse676) (! (res .cse677 .cse678 (farkas 1 .cse29 1 .cse642 1 .cse677 1 .cse263 1 .cse42 1 .cse287)) :proves (- .cse29 - .cse642 - .cse675 - .cse263 - .cse42 - .cse287) :LA (1 1 (- 1) 1 1 1)))))) .cse165)) (! (res .cse221 .cse222 (trans .cse189 x .cse166 percent)) :proves (+ .cse33 - .cse144 - .cse148 - .cse52) :trans (.cse189 x .cse166 percent)))) .cse182) :proves (- .cse653 - .cse144 - .cse150 - .cse29 + .cse7 + .cse5 - .cse287 - .cse42) :rup))))) .cse89) (! (res .cse383 .cse384 (res .cse638 .cse639 (res .cse640 .cse641 (res .cse7 .cse796 (trans .cse376 0 .cse95 .cse317 .cse318 .cse64))))) :proves (+ .cse795 - .cse88 - .cse90 - .cse207 - .cse176 - .cse101) :trans (.cse376 0 .cse95 .cse317 .cse318 .cse64))) (res .cse88 (! (res .cse7 (res .cse25 .cse760 (trans .cse376 .cse64 .cse318 .cse317 .cse95 0)) .cse741) :proves (+ .cse88 - .cse795 - .cse101 - .cse176 - .cse207 - .cse90) :trans (.cse376 .cse64 .cse318 .cse317 .cse95 0)) .cse167))) .cse187) .cse326)))))) .cse489) .cse170) .cse510)) .cse16)))) .cse72)))) .cse18) :proves (- .cse287 - .cse144 - .cse29 - .cse37 - .cse443 - .cse42 - .cse25) :rup)) .cse187) .cse326)))))))))) .cse489) .cse170) .cse510) .cse16)))) .cse72)))) .cse18) :proves (- .cse443 - .cse287 - .cse144 - .cse29 - .cse25 - .cse42) :rup)) .cse307) .cse182))))))) .cse489) .cse170) .cse510)))))) :proves (- .cse172 - .cse443 - .cse42 - .cse25) :rup))) (res .cse172 (res .cse31 .cse173 (res .cse539 .cse540 (res .cse541 .cse542 (let ((.cse710 (= .cse64 .cse520))) (let-proof ((.cse744 (res .cse547 (! (cong (x_count 1) (x_count .cse376)) :proves (+ .cse547 - .cse186) :cong (.cse520 .cse257)) (! (trans .cse64 .cse520 .cse257) :proves (+ .cse477 - .cse710 - .cse547) :trans (.cse64 .cse520 .cse257))))) (res .cse192 (res .cse138 .cse193 (res .cse611 (! (res .cse607 .cse608 (trans .cse258 .cse520 fmt0)) :proves (+ .cse611 - .cse138 - .cse541) :trans (.cse258 .cse520 fmt0)) (res .cse29 .cse140 (res .cse88 (res .cse7 (res .cse186 (res .cse5 (res .cse37 (res .cse176 (res .cse197 .cse198 (res .cse213 .cse322 (res .cse194 .cse199 (res .cse23 (res .cse323 .cse324 (res .cse98 .cse696 (res .cse543 (res .cse246 .cse544 (res .cse247 .cse546 (res .cse150 (res .cse555 (! (res .cse445 .cse446 (res .cse35 .cse36 (res .cse39 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse556 .cse697 (res .cse483 .cse558 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse323 4 .cse209 1 .cse44 1 .cse81 1 .cse79 1 .cse75 4 .cse462 4 .cse25 4 .cse483))))) :proves (- .cse323 - .cse209 - .cse44 - .cse40 + .cse39 - .cse35 - .cse443 - .cse25 - .cse483) :LA (4 4 1 (- 1) (- 1) (- 1) (- 4) 4 4)))))) .cse489)))) .cse72))) :proves (+ .cse555 - .cse443 - .cse25 - .cse323) :rup) (res .cse492 (res .cse493 .cse494 (! (res .cse698 .cse699 (res .cse90 .cse119 (res .cse497 .cse498 (res .cse472 .cse473 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 4 .cse474 4 .cse238 1 .cse472 1 .cse40 1 .cse497 1 .cse35 4 .cse443 4 .cse90 4 .cse698 1 .cse493))))))) :proves (- .cse323 - .cse209 - .cse44 - .cse40 - .cse447 - .cse35 - .cse443 - .cse25 - .cse555 - .cse493) :LA ((- 4) (- 4) (- 1) 1 (- 1) 1 4 (- 4) (- 4) 1))) (res .cse549 (res .cse550 (res .cse460 (res .cse551 (res .cse561 (res .cse562 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse81 .cse82 (res .cse563 .cse564 (farkas 1 .cse563 4 .cse323 4 .cse209 1 .cse44 1 .cse81 1 .cse447 1 .cse75 4 .cse462 4 .cse25 3 .cse555))))) :proves (+ .cse562 - .cse323 - .cse209 - .cse44 - .cse40 - .cse447 - .cse35 - .cse443 - .cse25 - .cse555) :LA ((- 1) 4 4 1 (- 1) 1 (- 1) (- 4) 4 3)) .cse565) (res .cse500 .cse501 (res .cse552 .cse553 (res .cse554 (res .cse477 (res .cse566 .cse567 (res .cse152 .cse153 (res .cse259 .cse260 (res .cse502 (res .cse0 (res .cse1 .cse613 .cse19) .cse507) .cse508)))) .cse617) .cse614)))) (! (res .cse698 .cse699 (res .cse90 .cse119 (res .cse497 .cse498 (res .cse472 .cse473 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 4 .cse474 4 .cse238 1 .cse472 1 .cse40 1 .cse497 1 .cse551 1 .cse35 4 .cse443 4 .cse90 3 .cse698))))))) :proves (- .cse323 - .cse209 - .cse44 - .cse40 - .cse447 - .cse551 - .cse35 - .cse443 - .cse25 - .cse555) :LA ((- 4) (- 4) (- 1) 1 (- 1) 1 1 4 (- 4) (- 3)))) (! (res .cse698 .cse699 (res .cse462 .cse463 (res .cse478 .cse479 (farkas 1 .cse323 1 .cse209 1 .cse478 1 .cse462 1 .cse25 1 .cse698)))) :proves (- .cse323 - .cse209 - .cse460 - .cse443 - .cse25 - .cse555) :LA (1 1 (- 1) (- 1) 1 (- 1)))) .cse615) (! (res .cse698 .cse699 (res .cse90 .cse119 (res .cse472 .cse473 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 4 .cse474 4 .cse238 1 .cse472 1 .cse549 1 .cse40 1 .cse35 4 .cse443 4 .cse90 4 .cse698)))))) :proves (- .cse323 - .cse209 - .cse44 - .cse549 - .cse40 - .cse35 - .cse443 - .cse25 - .cse555) :LA ((- 4) (- 4) (- 1) 1 1 1 4 (- 4) (- 4)))))) .cse340))) .cse700))) .cse281)))) .cse178) (! (res .cse2 (res .cse445 .cse446 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (let-proof ((.cse746 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse478 .cse479 (res .cse81 .cse82 (farkas 8 .cse209 1 .cse44 1 .cse81 4 .cse478 1 .cse79 8 .cse37 1 .cse75 8 .cse462 8 .cse25)))))) :proves (- .cse209 - .cse44 - .cse40 - .cse460 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25) :LA (8 1 (- 1) (- 4) (- 1) 8 (- 1) (- 8) 8)))) (res .cse460 (res .cse477 (res .cse701 .cse702 (let-proof ((.cse745 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse209 1 .cse44 4 .cse556 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse25))))) :proves (- .cse209 - .cse44 - .cse556 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse25) :LA (4 1 4 (- 1) (- 1) 4 (- 1) (- 4) 4)))) (res .cse556 (res .cse651 .cse703 (res .cse653 .cse654 (res .cse145 .cse695 (res .cse138 .cse333 (res .cse704 .cse705 (let ((.cse748 (+ .cse520 .cse86))) (let ((.cse706 (= .cse748 0))) (let-proof ((.cse707 (let ((.cse751 (<= .cse748 0))) (res .cse751 (! (res .cse90 .cse119 (res .cse120 .cse121 (res .cse238 .cse239 (let ((.cse752 (<= 1 .cse748))) (res .cse752 (total-int .cse748 0) (farkas 1 .cse752 1 .cse238 1 .cse42 1 .cse120 1 .cse443 1 .cse90 1 .cse31)))))) :proves (+ .cse751 - .cse209 - .cse42 - .cse37 - .cse443 - .cse25 - .cse31) :LA ((- 1) (- 1) 1 (- 1) 1 (- 1) 1)) (let ((.cse757 (+ .cse520 .cse86 1))) (let ((.cse753 (<= .cse757 0))) (res .cse753 (! (let ((.cse754 (< .cse748 0))) (res .cse754 (let ((.cse755 (< 0 .cse748))) (res .cse755 (trichotomy .cse748 0) (farkas 1 .cse755 1 .cse751))) (let ((.cse756 (<= 1 .cse757))) (res .cse756 (total-int .cse757 0) (farkas 1 .cse756 1 .cse754))))) :proves (+ .cse753 + .cse706 - .cse751) :trichotomy) (! (res .cse577 .cse578 (res .cse462 .cse463 (res .cse579 .cse580 (farkas 1 .cse209 1 .cse579 1 .cse37 1 .cse462 1 .cse25 1 .cse577 1 .cse753)))) :proves (- .cse209 - .cse42 - .cse37 - .cse443 - .cse25 - .cse31 - .cse753) :LA (1 (- 1) 1 (- 1) 1 (- 1) 1))))))))) (res .cse706 .cse707 (res .cse708 .cse709 (let-proof ((.cse711 (! (let ((.cse747 (= 0 .cse748))) (res .cse747 (symm 0 .cse748) (let ((.cse749 (< .cse64 .cse520))) (res .cse749 (let ((.cse750 (< .cse520 .cse64))) (res .cse750 (trichotomy .cse64 .cse520) (farkas 1 .cse747 1 .cse750))) (farkas 1 .cse706 1 .cse749))))) :proves (+ .cse710 - .cse706) :EQ))) (res .cse710 .cse711 (res .cse186 (res .cse5 (res .cse259 (res .cse152 (res .cse150 .cse153 (res .cse148 .cse158 (res .cse23 .cse340 (res .cse224 (res .cse52 (res .cse263 .cse271 (res .cse151 (res .cse154 .cse155 (res .cse642 .cse643 (res .cse675 (res .cse670 (res .cse10 (res .cse8 (res .cse0 (res .cse1 (res .cse712 (res .cse349 .cse350 (res .cse351 .cse352 (res .cse353 .cse354 (res .cse366 .cse713 (res .cse714 (! (res .cse577 .cse578 (res .cse579 .cse580 (res .cse631 .cse632 (res .cse715 .cse716 (farkas 1 .cse715 1 .cse631 1 .cse579 1 .cse577 1 .cse366))))) :proves (+ .cse714 - .cse29 - .cse42 - .cse31 - .cse366) :LA ((- 1) (- 1) (- 1) (- 1) 1)) .cse717))))) (res .cse718 .cse719 (res .cse88 .cse720 .cse167))) .cse19) .cse721) .cse11) .cse674) .cse676) (! (res .cse677 .cse678 (farkas 1 .cse29 1 .cse642 1 .cse677 1 .cse263 1 .cse42 1 .cse31)) :proves (- .cse29 - .cse642 - .cse675 - .cse263 - .cse42 - .cse31) :LA (1 1 (- 1) 1 1 1))))) .cse165)) .cse644) .cse282)))) .cse260) (! (res .cse2 (res .cse445 .cse446 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse460 (res .cse477 (res .cse701 .cse702 (res .cse556 (res .cse651 .cse703 (res .cse653 .cse654 (res .cse145 .cse695 (res .cse138 .cse333 (res .cse454 .cse455 (res .cse706 .cse707 (res .cse456 .cse457 (res .cse710 .cse711 (res .cse186 (res .cse5 (res .cse152 (! (res .cse581 .cse582 (let ((.cse722 (< .cse256 .cse258))) (res .cse722 (let ((.cse723 (< .cse258 .cse256))) (res .cse723 (trichotomy .cse256 .cse258) (farkas 1 .cse259 1 .cse723))) (farkas 1 .cse581 1 .cse722)))) :proves (+ .cse152 - .cse259) :EQ) (res .cse583 (res .cse584 (! (res .cse90 .cse119 (res .cse120 .cse121 (res .cse238 .cse239 (res .cse585 .cse586 (farkas 1 .cse585 1 .cse29 1 .cse238 1 .cse259 1 .cse42 1 .cse120 1 .cse443 1 .cse90 1 .cse31))))) :proves (+ .cse584 - .cse29 - .cse209 - .cse259 - .cse42 - .cse37 - .cse443 - .cse25 - .cse31) :LA ((- 1) 1 (- 1) 1 1 (- 1) 1 (- 1) 1)) (res .cse587 .cse588 (! (res .cse577 .cse578 (res .cse462 .cse463 (res .cse579 .cse580 (res .cse581 .cse582 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse209 1 .cse581 1 .cse579 1 .cse37 1 .cse462 1 .cse25 1 .cse577 1 .cse587)))))) :proves (- .cse29 - .cse209 - .cse259 - .cse42 - .cse37 - .cse443 - .cse25 - .cse31 - .cse587) :LA ((- 1) 1 (- 1) (- 1) 1 (- 1) 1 (- 1) 1)))) (res .cse593 .cse594 (let ((.cse724 (= .cse256 .cse376))) (res .cse724 (let ((.cse730 (+ fmt1 .cse737 .cse371 (- 2)))) (let ((.cse725 (= .cse730 0))) (res .cse725 (res .cse0 (res .cse1 (res .cse353 (res .cse8 .cse726 (res .cse10 .cse11 (res .cse154 (res .cse670 .cse674 (res .cse675 .cse676 (res .cse151 .cse155 (res .cse52 .cse165 (res .cse149 .cse157 (res .cse517 .cse518 (! (res .cse677 .cse678 (farkas 1 .cse29 1 .cse259 1 .cse677 1 .cse517 1 .cse42 1 .cse31)) :proves (- .cse29 - .cse259 - .cse675 - .cse517 - .cse42 - .cse31) :LA (1 1 (- 1) 1 1 1)))))))) .cse156))) (! (res .cse6 (let ((.cse734 (+ fmt1 .cse737 .cse371 (- 1)))) (let ((.cse727 (<= .cse734 0))) (res .cse727 (res .cse366 .cse713 (let ((.cse728 (<= .cse730 0))) (res .cse728 (! (let ((.cse729 (<= 1 .cse730))) (res .cse729 (total-int .cse730 0) (res .cse577 .cse578 (res .cse579 .cse580 (res .cse581 .cse582 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse581 1 .cse579 1 .cse577 1 .cse729 1 .cse366))))))) :proves (- .cse29 - .cse259 - .cse42 - .cse31 + .cse728 - .cse366) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) (! (let ((.cse731 (< .cse730 0))) (res .cse731 (let ((.cse732 (< 0 .cse730))) (res .cse732 (trichotomy .cse730 0) (farkas 1 .cse732 1 .cse728))) (let ((.cse733 (<= 1 .cse734))) (res .cse733 (total-int .cse734 0) (farkas 1 .cse733 1 .cse731))))) :proves (- .cse728 + .cse725 + .cse727) :trichotomy)))) (! (res .cse735 .cse736 (farkas 1 .cse29 1 .cse735 1 .cse259 1 .cse42 1 .cse727 1 .cse31)) :proves (- .cse29 + .cse6 - .cse259 - .cse42 - .cse727 - .cse31) :LA (1 (- 1) 1 1 1 1))))) .cse16) :proves (- .cse353 + .cse725 - .cse259 + .cse5 - .cse42 - .cse31 - .cse29) :rup)) .cse19) .cse648) (! (let ((.cse738 (= 0 .cse730))) (res .cse738 (symm 0 .cse730) (let ((.cse739 (< .cse256 .cse376))) (res .cse739 (let ((.cse740 (< .cse376 .cse256))) (res .cse740 (trichotomy .cse256 .cse376) (farkas 1 .cse738 1 .cse740))) (farkas 1 .cse725 1 .cse739))))) :proves (+ .cse724 - .cse725) :EQ)))) (res .cse88 (! (res .cse7 (res .cse454 (symm .cse520 0) (res (= .cse376 .cse256) (symm .cse376 .cse256) (trans .cse376 .cse256 .cse258 .cse520 0))) .cse741) :proves (+ .cse88 - .cse724 - .cse152 - .cse138 - .cse456) :trans (.cse376 .cse256 .cse258 .cse520 0)) (res .cse742 .cse743 (! (trans .cse64 .cse520 .cse685 .cse257) :proves (+ .cse477 - .cse710 - .cse145 - .cse742) :trans (.cse64 .cse520 .cse685 .cse257))))))))) .cse187) .cse744))))))))) .cse745)) .cse617) .cse746))) .cse489) .cse170) .cse510)))) .cse72)))) .cse18) :proves (- .cse31 - .cse443 - .cse25 - .cse42 - .cse29 - .cse37 - .cse259) :rup)) .cse187) .cse744))))))))))))) .cse745))) .cse617) .cse746)))) .cse489) .cse170) .cse510) .cse16)))) .cse72)))) .cse18) :proves (- .cse443 - .cse31 - .cse25 - .cse42 - .cse29 - .cse37) :rup)) .cse187) .cse326) .cse89) .cse167)))) (! (res .cse214 .cse215 (res .cse216 .cse217 (res .cse224 .cse279 (res .cse194 .cse195 (res .cse300 .cse301 (res .cse23 (res .cse150 (res .cse152 .cse153 (res .cse176 (res .cse197 .cse198 (res .cse213 .cse322 (let ((.cse758 (= 115 120))) (res .cse758 (! (res .cse386 .cse387 (res .cse645 .cse646 (trans 115 s .cse250 x 120))) :proves (+ .cse758 - .cse214 - .cse213 - .cse224 - .cse216) :trans (115 s .cse250 x 120)) (! (res .cse218 (symm 120 115) .cse759) :proves (- .cse758) :EQ))))) (! (res .cse2 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse447 .cse448 (res .cse451 .cse452 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse101 .cse453 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse90 .cse91 (res .cse145 .cse695 (res .cse172 (res .cse31 .cse173 (res .cse454 .cse455 (res .cse456 .cse457 (res .cse259 .cse260 (res .cse710 (! (res .cse25 .cse760 (trans .cse64 .cse318 .cse317 .cse95 0 .cse520)) :proves (+ .cse710 - .cse101 - .cse176 - .cse207 - .cse90 - .cse456) :trans (.cse64 .cse318 .cse317 .cse95 0 .cse520)) (res .cse37 .cse178 (res .cse651 .cse652 (res .cse653 .cse654 (res .cse492 .cse655 (res .cse545 (res .cse460 (res .cse500 .cse501 (res .cse547 (res .cse477 (res .cse502 (res .cse0 (res .cse1 (res .cse88 (res .cse7 (res .cse186 (res .cse5 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse154 (res .cse670 .cse674 (res .cse675 .cse676 (res .cse151 .cse155 (res .cse52 .cse165 (res .cse149 .cse157 (res .cse517 .cse518 (! (res .cse677 .cse678 (farkas 1 .cse300 1 .cse259 1 .cse677 1 .cse517 1 .cse42 1 .cse31)) :proves (- .cse300 - .cse259 - .cse675 - .cse517 - .cse42 - .cse31) :LA (1 1 (- 1) 1 1 1)))))))) .cse679))) .cse187) .cse744) .cse89) .cse616) .cse19) .cse507) .cse508) .cse617) .cse618)) (! (res .cse462 .cse463 (res .cse692 .cse693 (res .cse478 .cse479 (farkas 1 .cse209 1 .cse478 1 .cse37 1 .cse692 1 .cse462 1 .cse25)))) :proves (- .cse209 - .cse460 - .cse37 - .cse651 - .cse443 - .cse25) :LA (1 (- 1) 1 (- 1) (- 1) 1))) (! (res .cse692 .cse693 (res .cse619 .cse620 (farkas 1 .cse619 1 .cse42 1 .cse692 1 .cse31))) :proves (- .cse545 - .cse42 - .cse651 - .cse31) :LA ((- 1) 1 (- 1) 1)))))))))))) .cse761))))) .cse489) .cse170) .cse510)) .cse16))))))) .cse18) :proves (- .cse443 - .cse25 - .cse300 - .cse176 - .cse152 - .cse42) :rup))) .cse340) .cse282)))))) :proves (- .cse192 - .cse443 - .cse25 - .cse42) :rup))))))) .cse761))))))) .cse489) .cse170) .cse510) .cse16))))))) .cse18) :proves (- .cse443 - .cse25 - .cse42) :rup))))))))))) .cse489) .cse170) .cse510)))))) :proves (- .cse443 - .cse25) :rup))) (res .cse25 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse144 (res .cse33 (res .cse266 .cse267 (res .cse172 (res .cse183 (res .cse31 .cse173 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse454 .cse455 (res .cse456 .cse457 (let-proof ((.cse557 (! (res .cse355 .cse356 (res .cse120 .cse121 (res .cse649 .cse650 (res .cse472 .cse473 (res .cse238 .cse239 (farkas 4 .cse238 1 .cse472 4 .cse649 1 .cse40 1 .cse449 4 .cse120 4 .cse443 1 .cse445 4 .cse355)))))) :proves (- .cse209 - .cse44 + .cse556 - .cse40 - .cse449 - .cse37 - .cse443 - .cse445 - .cse266) :LA ((- 4) (- 1) (- 4) 1 1 (- 4) 4 1 (- 4))))) (let-proof ((.cse548 (res .cse493 .cse494 (! (res .cse355 .cse356 (res .cse535 .cse536 (res .cse497 .cse498 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse238 .cse239 (farkas 4 .cse238 1 .cse472 1 .cse40 4 .cse120 1 .cse497 1 .cse35 4 .cse443 4 .cse535 4 .cse355 1 .cse493))))))) :proves (- .cse209 - .cse44 - .cse40 - .cse37 - .cse447 - .cse35 - .cse443 + .cse483 - .cse266 - .cse493) :LA ((- 4) (- 1) 1 (- 4) (- 1) 1 4 (- 4) (- 4) 1)))) (.cse621 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse209 1 .cse44 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse483 4 .cse266))))) :proves (- .cse209 - .cse44 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse483 - .cse266) :LA (4 1 (- 1) (- 1) 4 (- 1) (- 4) 4 4))) (.cse596 (! (res .cse2 (res .cse445 .cse446 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse447 .cse448 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse25 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse266 .cse267 (res .cse556 .cse557 (res .cse483 (res .cse555 .cse558 (res .cse460 (res .cse559 .cse560 (res .cse477 (res .cse0 (res .cse1 (res .cse8 .cse49 (res .cse10 .cse11 .cse647)) .cse19) .cse648) .cse617)) (! (res .cse503 .cse504 (res .cse462 .cse463 (res .cse75 .cse76 (res .cse478 .cse479 (res .cse81 .cse82 (farkas 8 .cse209 1 .cse44 1 .cse81 4 .cse478 8 .cse37 1 .cse447 1 .cse75 8 .cse462 8 .cse266 1 .cse503)))))) :proves (- .cse209 - .cse44 - .cse40 - .cse460 - .cse37 - .cse447 - .cse35 - .cse443 - .cse266 - .cse492) :LA (8 1 (- 1) (- 4) 8 1 (- 1) (- 8) 8 (- 1))))) (! (res .cse503 .cse504 (res .cse462 .cse463 (res .cse75 .cse76 (res .cse81 .cse82 (farkas 4 .cse209 1 .cse44 1 .cse81 4 .cse37 1 .cse447 1 .cse75 4 .cse462 4 .cse483 4 .cse266 1 .cse503))))) :proves (- .cse209 - .cse44 - .cse40 - .cse37 - .cse447 - .cse35 - .cse443 - .cse483 - .cse266 - .cse492) :LA (4 1 (- 1) 4 1 (- 1) (- 4) 4 4 (- 1))))))))) .cse488))) .cse489) .cse16)))))))) .cse18) :proves (- .cse593 - .cse492 + .cse595 + .cse5 - .cse37 + .cse7 - .cse443) :rup))) (let-proof ((.cse509 (! (res .cse35 .cse36 (res .cse447 .cse448 (res .cse39 (res .cse451 .cse452 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse101 .cse453 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse25 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse144 (res .cse33 (res .cse266 .cse267 (res .cse172 (res .cse183 (res .cse31 .cse173 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse148 .cse158 (res .cse23 .cse340 (res .cse213 (res .cse263 .cse271 (res .cse224 (res .cse52 (res .cse197 (res .cse192 (res .cse151 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse138 .cse193 (res .cse29 .cse140 (let ((.cse625 (+ .cse256 .cse633))) (let ((.cse622 (= .cse625 0))) (res .cse622 (let ((.cse623 (<= .cse625 0))) (res .cse623 (! (res .cse355 .cse356 (let ((.cse624 (<= 1 .cse625))) (res .cse624 (total-int .cse625 0) (farkas 1 .cse624 1 .cse29 1 .cse263 1 .cse42 1 .cse31 1 .cse355)))) :proves (+ .cse623 - .cse29 - .cse263 - .cse42 - .cse31 - .cse266) :LA ((- 1) 1 1 1 1 (- 1))) (let ((.cse630 (+ .cse256 .cse633 1))) (let ((.cse626 (<= .cse630 0))) (res .cse626 (! (let ((.cse627 (< .cse625 0))) (res .cse627 (let ((.cse628 (< 0 .cse625))) (res .cse628 (trichotomy .cse625 0) (farkas 1 .cse628 1 .cse623))) (let ((.cse629 (<= 1 .cse630))) (res .cse629 (total-int .cse630 0) (farkas 1 .cse629 1 .cse627))))) :proves (+ .cse626 + .cse622 - .cse623) :trichotomy) (! (res .cse577 .cse578 (res .cse579 .cse580 (res .cse285 .cse286 (res .cse631 .cse632 (farkas 1 .cse631 1 .cse285 1 .cse579 1 .cse577 1 .cse266 1 .cse626))))) :proves (- .cse29 - .cse263 - .cse42 - .cse31 - .cse266 - .cse626) :LA ((- 1) (- 1) (- 1) (- 1) 1 1))))))) (let ((.cse634 (= .cse256 .cse95))) (res .cse634 (! (let ((.cse635 (= 0 .cse625))) (res .cse635 (symm 0 .cse625) (let ((.cse636 (< .cse256 .cse95))) (res .cse636 (let ((.cse637 (< .cse95 .cse256))) (res .cse637 (trichotomy .cse256 .cse95) (farkas 1 .cse622 1 .cse637))) (farkas 1 .cse635 1 .cse636))))) :proves (+ .cse634 - .cse622) :EQ) (res .cse593 (! (res .cse383 .cse384 (res .cse638 .cse639 (res .cse640 .cse641 (trans .cse256 .cse95 .cse317 .cse318 .cse64)))) :proves (+ .cse593 - .cse634 - .cse207 - .cse176 - .cse101) :trans (.cse256 .cse95 .cse317 .cse318 .cse64)) (res .cse154 .cse155 (res .cse642 .cse643 (res .cse597 (res .cse595 (res .cse186 (res .cse5 (res .cse88 (res .cse7 (res .cse492 (res .cse483 .cse548 .cse621) .cse596) .cse89) .cse167) .cse187) .cse326) .cse598) (! (res .cse599 .cse600 (farkas 1 .cse29 1 .cse599 1 .cse642 1 .cse263 1 .cse42 1 .cse31)) :proves (- .cse29 - .cse597 - .cse642 - .cse263 - .cse42 - .cse31) :LA (1 (- 1) 1 1 1 1))))))))))))))) .cse165) .cse279) .cse322) .cse644) .cse282)) (! (res .cse645 .cse646 (trans .cse189 s .cse250 percent)) :proves (+ .cse33 - .cse46 - .cse213 - .cse23) :trans (.cse189 s .cse250 percent)))))))) .cse227) .cse174)) .cse202) .cse307)))) .cse488))) .cse489) .cse170) .cse510))))) .cse72))) :proves (- .cse150 - .cse443) :rup))) (res .cse150 (res .cse152 .cse153 (res .cse259 .cse260 (let-proof ((.cse487 (! (res .cse35 .cse36 (res .cse447 .cse448 (res .cse39 (res .cse451 .cse452 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse25 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse144 (res .cse33 (res .cse266 .cse267 (res .cse172 (res .cse183 (res .cse31 .cse173 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse539 .cse540 (res .cse541 .cse542 (res .cse150 (res .cse152 .cse153 (res .cse259 .cse260 (res .cse98 (! (res .cse462 .cse463 (res .cse393 .cse394 (farkas 1 .cse209 1 .cse393 1 .cse37 1 .cse462 1 .cse266))) :proves (- .cse209 + .cse98 - .cse37 - .cse443 - .cse266) :LA (1 (- 1) 1 (- 1) 1)) (res .cse543 (res .cse246 .cse544 (res .cse483 (res .cse545 (res .cse460 (res .cse247 .cse546 (res .cse547 (res .cse477 (res .cse88 (res .cse7 (res .cse492 .cse548 (res .cse549 (res .cse550 (res .cse551 (res .cse500 .cse501 (res .cse552 .cse553 (res .cse554 (res .cse555 (! (res .cse445 .cse446 (res .cse35 .cse36 (res .cse447 .cse448 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse25 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse266 .cse267 (res .cse556 .cse557 (res .cse483 .cse558 (! (res .cse503 .cse504 (res .cse462 .cse463 (res .cse75 .cse76 (res .cse81 .cse82 (farkas 4 .cse209 1 .cse44 1 .cse81 4 .cse37 1 .cse447 1 .cse75 4 .cse462 4 .cse266 1 .cse503 4 .cse483))))) :proves (- .cse209 - .cse44 - .cse40 - .cse37 - .cse447 - .cse35 - .cse443 - .cse266 - .cse492 - .cse483) :LA (4 1 (- 1) 4 1 (- 1) (- 4) 4 (- 1) 4)))))))) .cse488))) .cse489))))))) :proves (- .cse443 - .cse492 + .cse555 - .cse37) :rup) (res .cse559 .cse560 (res .cse561 (res .cse562 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse81 .cse82 (res .cse563 .cse564 (farkas 1 .cse563 4 .cse209 1 .cse44 1 .cse81 4 .cse37 1 .cse447 1 .cse75 4 .cse462 3 .cse555 4 .cse266))))) :proves (+ .cse562 - .cse209 - .cse44 - .cse40 - .cse37 - .cse447 - .cse35 - .cse443 - .cse555 - .cse266) :LA ((- 1) 4 1 (- 1) 4 1 (- 1) (- 4) 3 4)) .cse565) (res .cse566 .cse567 (res .cse502 (res .cse0 (res .cse1 (res .cse29 (res .cse138 (res .cse192 .cse193 (res .cse194 .cse195 (res .cse224 .cse279 (res .cse300 .cse301 (let ((.cse568 (= .cse575 0))) (res .cse568 (res .cse569 (! (res .cse570 .cse571 (farkas 1 .cse570 1 .cse300 1 .cse259 1 .cse42 1 .cse31)) :proves (+ .cse569 - .cse300 - .cse259 - .cse42 - .cse31) :LA ((- 1) 1 1 1 1)) (let ((.cse572 (<= .cse256 0))) (res .cse572 (! (let ((.cse573 (< .cse575 0))) (res .cse573 (let ((.cse574 (< 0 .cse575))) (res .cse574 (trichotomy .cse575 0) (farkas 1 .cse574 1 .cse569))) (let ((.cse576 (<= 1 .cse256))) (res .cse576 (total-int .cse256 0) (farkas 1 .cse576 1 .cse573))))) :proves (+ .cse572 + .cse568 - .cse569) :trichotomy) (! (res .cse577 .cse578 (res .cse579 .cse580 (res .cse581 .cse582 (res .cse337 .cse338 (farkas 1 .cse337 1 .cse581 1 .cse579 1 .cse577 1 .cse572))))) :proves (- .cse300 - .cse259 - .cse42 - .cse31 - .cse572) :LA ((- 1) (- 1) (- 1) (- 1) 1))))) (res .cse583 (res .cse584 (! (res .cse355 .cse356 (res .cse120 .cse121 (res .cse238 .cse239 (res .cse585 .cse586 (farkas 1 .cse585 1 .cse238 1 .cse300 1 .cse259 1 .cse42 1 .cse120 1 .cse443 1 .cse31 1 .cse355))))) :proves (+ .cse584 - .cse209 - .cse300 - .cse259 - .cse42 - .cse37 - .cse443 - .cse31 - .cse266) :LA ((- 1) (- 1) 1 1 1 (- 1) 1 1 (- 1))) (res .cse587 .cse588 (! (res .cse577 .cse578 (res .cse462 .cse463 (res .cse579 .cse580 (res .cse581 .cse582 (res .cse337 .cse338 (farkas 1 .cse209 1 .cse337 1 .cse581 1 .cse579 1 .cse37 1 .cse462 1 .cse577 1 .cse266 1 .cse587)))))) :proves (- .cse209 - .cse300 - .cse259 - .cse42 - .cse37 - .cse443 - .cse31 - .cse266 - .cse587) :LA (1 (- 1) (- 1) (- 1) 1 (- 1) (- 1) 1 1)))) (let ((.cse589 (= 1 .cse256))) (res .cse589 (! (let ((.cse590 (= 0 .cse575))) (res .cse590 (symm 0 .cse575) (let ((.cse591 (< 1 .cse256))) (res .cse591 (let ((.cse592 (< .cse256 1))) (res .cse592 (trichotomy 1 .cse256) (farkas 1 .cse590 1 .cse592))) (farkas 1 .cse568 1 .cse591))))) :proves (+ .cse589 - .cse568) :EQ) (res .cse593 .cse594 (res .cse186 (res .cse5 (res .cse595 .cse596 (res .cse154 (res .cse597 .cse598 (res .cse151 .cse155 (res .cse149 .cse157 (res .cse52 .cse165 (res .cse517 .cse518 (! (res .cse599 .cse600 (farkas 1 .cse599 1 .cse300 1 .cse259 1 .cse517 1 .cse42 1 .cse31)) :proves (- .cse597 - .cse300 - .cse259 - .cse517 - .cse42 - .cse31) :LA ((- 1) 1 1 1 1 1))))))) (! (res .cse395 .cse396 (res .cse277 .cse278 (res .cse601 .cse602 (trans .cse64 1 .cse256 .cse276 3 .cse257)))) :proves (+ .cse477 - .cse247 - .cse589 - .cse154 - .cse595 - .cse559) :trans (.cse64 1 .cse256 .cse276 3 .cse257)))) .cse187) (res .cse603 .cse604 (! (res .cse605 .cse606 (res .cse607 .cse608 (trans arg1 3 .cse257 .cse520 fmt0))) :proves (+ .cse554 - .cse500 - .cse559 - .cse603 - .cse541) :trans (arg1 3 .cse257 .cse520 fmt0)))))))))))))) .cse140) (! (res .cse2 (res .cse3 .cse4 (res .cse447 .cse448 (res .cse6 (res .cse259 .cse260 (res .cse138 .cse333 (res .cse609 .cse610 (res .cse611 .cse612 (res .cse186 (res .cse5 .cse613 .cse187) .cse326))))) .cse16))) .cse18) :proves (- .cse566 + .cse554 - .cse247 - .cse29 + .cse141 - .cse552 + .cse7 - .cse152 + .cse1 - .cse31 + .cse477 - .cse42) :rup)) .cse19) .cse507) .cse508))))) .cse614))) (! (res .cse355 .cse356 (res .cse535 .cse536 (res .cse497 .cse498 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse238 .cse239 (farkas 4 .cse238 1 .cse472 1 .cse40 4 .cse120 1 .cse497 1 .cse551 1 .cse35 4 .cse443 3 .cse535 4 .cse355))))))) :proves (- .cse209 - .cse44 - .cse40 - .cse37 - .cse447 - .cse551 - .cse35 - .cse443 + .cse483 - .cse266) :LA ((- 4) (- 1) 1 (- 4) (- 1) 1 1 4 (- 3) (- 4)))) .cse615) (! (res .cse355 .cse356 (res .cse535 .cse536 (res .cse120 .cse121 (res .cse472 .cse473 (res .cse238 .cse239 (farkas 4 .cse238 1 .cse472 1 .cse549 1 .cse40 4 .cse120 1 .cse35 4 .cse443 4 .cse535 4 .cse355)))))) :proves (- .cse209 - .cse44 - .cse549 - .cse40 - .cse37 - .cse35 - .cse443 + .cse483 - .cse266) :LA ((- 4) (- 1) 1 1 (- 4) 1 4 (- 4) (- 4))))) .cse89) .cse616) .cse617) .cse618)) (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse478 .cse479 (res .cse81 .cse82 (farkas 8 .cse209 1 .cse44 1 .cse81 4 .cse478 1 .cse79 8 .cse37 1 .cse75 8 .cse462 8 .cse266)))))) :proves (- .cse209 - .cse44 - .cse40 - .cse460 + .cse39 - .cse37 - .cse35 - .cse443 - .cse266) :LA (8 1 (- 1) (- 4) (- 1) 8 (- 1) (- 8) 8))) (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse619 .cse620 (farkas 4 .cse619 4 .cse209 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse462 4 .cse31 4 .cse266)))))) :proves (- .cse545 - .cse209 - .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse443 - .cse31 - .cse266) :LA ((- 4) 4 1 4 (- 1) (- 1) 4 (- 1) (- 4) 4 4))) .cse621)) (! (res .cse355 .cse356 (res .cse120 .cse121 (res .cse238 .cse239 (farkas 1 .cse238 1 .cse543 1 .cse120 1 .cse443 1 .cse355)))) :proves (- .cse209 - .cse543 - .cse37 - .cse443 - .cse266) :LA ((- 1) 1 (- 1) 1 (- 1))))))) .cse509)))))) .cse227) .cse174)) .cse202) .cse307)))) .cse488))) .cse489) .cse170) .cse510)))) .cse72))) :proves (- .cse37 - .cse443) :rup))) (res .cse37 (res .cse176 (res .cse197 .cse198 (res .cse213 .cse322 (res .cse224 (res .cse194 .cse199 (res .cse192 (res .cse323 .cse324 (res .cse138 .cse193 (res .cse29 .cse140 (let ((.cse458 (= .cse318 0))) (res .cse458 (let ((.cse459 (= 0 .cse318))) (res .cse459 (res .cse460 (let ((.cse461 (<= .cse465 0))) (res .cse461 (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (let ((.cse464 (<= 1 .cse465))) (res .cse464 (total-int .cse465 0) (farkas 4 .cse464 8 .cse323 8 .cse209 1 .cse44 1 .cse81 1 .cse79 1 .cse75 8 .cse462 8 .cse266))))))) :proves (+ .cse461 - .cse323 - .cse209 - .cse44 - .cse40 + .cse39 - .cse35 - .cse443 - .cse266) :LA ((- 4) 8 8 1 (- 1) (- 1) (- 1) (- 8) 8)) (let ((.cse471 (+ .cse64 .cse476 1))) (let ((.cse466 (<= .cse471 0))) (res .cse466 (! (res .cse467 (res .cse468 .cse469 (farkas 1 .cse468 1 .cse461)) (let ((.cse470 (<= 1 .cse471))) (res .cse470 (total-int .cse471 0) (farkas 1 .cse470 1 .cse467)))) :proves (+ .cse466 + .cse460 - .cse461) :trichotomy) (! (res .cse355 .cse356 (res .cse472 .cse473 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 8 .cse474 8 .cse238 1 .cse472 1 .cse40 1 .cse449 8 .cse443 1 .cse445 8 .cse355 4 .cse466))))) :proves (- .cse323 - .cse209 - .cse44 - .cse40 - .cse449 - .cse443 - .cse445 - .cse266 - .cse466) :LA ((- 8) (- 8) (- 1) 1 1 8 1 (- 8) 4))))))) (res .cse477 (! (res .cse478 .cse479 (let ((.cse480 (< .cse64 .cse257))) (res .cse480 (let ((.cse481 (< .cse257 .cse64))) (res .cse481 (trichotomy .cse64 .cse257) (farkas 1 .cse460 1 .cse481))) (farkas 1 .cse478 1 .cse480)))) :proves (+ .cse477 - .cse460) :EQ) (let ((.cse530 (+ .cse257 (- 1)))) (let ((.cse485 (<= .cse530 0))) (let-proof ((.cse484 (! (res .cse355 .cse356 (res .cse535 .cse536 (res .cse472 .cse473 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 4 .cse474 4 .cse238 1 .cse472 1 .cse40 1 .cse449 4 .cse443 4 .cse535 1 .cse445 4 .cse355)))))) :proves (- .cse323 - .cse209 - .cse44 - .cse40 - .cse449 - .cse443 + .cse483 - .cse445 - .cse266) :LA ((- 4) (- 4) (- 1) 1 1 4 (- 4) 1 (- 4)))) (.cse486 (res .cse531 (res .cse532 .cse533 (farkas 1 .cse532 1 .cse483)) (let ((.cse534 (<= 1 .cse530))) (res .cse534 (total-int .cse530 0) (farkas 1 .cse534 1 .cse531)))))) (res .cse482 (! (res .cse445 .cse446 (res .cse35 .cse36 (res .cse39 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse25 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse266 .cse267 (res .cse37 (res .cse176 (res .cse197 .cse198 (res .cse213 .cse322 (res .cse194 .cse199 (res .cse323 .cse324 (res .cse483 .cse484 (res .cse485 (! .cse486 :proves (- .cse483 + .cse482 + .cse485) :trichotomy) (! (res .cse462 .cse463 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse485 4 .cse323 4 .cse209 1 .cse44 1 .cse81 1 .cse79 1 .cse75 4 .cse462 4 .cse266))))) :proves (- .cse485 - .cse323 - .cse209 - .cse44 - .cse40 + .cse39 - .cse35 - .cse443 - .cse266) :LA (4 4 4 1 (- 1) (- 1) (- 1) (- 4) 4)))))))) .cse178) .cse487))))) .cse488))) .cse489)))) .cse72))) :proves (+ .cse482 - .cse443) :rup) (let ((.cse495 (= 0 .cse529))) (let-proof ((.cse496 (symm 0 .cse529))) (let-proof ((.cse491 (! (res .cse495 .cse496 (let ((.cse527 (< 2 .cse257))) (res .cse527 (let ((.cse528 (< .cse257 2))) (res .cse528 (trichotomy 2 .cse257) (farkas 1 .cse495 1 .cse528))) (farkas 1 .cse482 1 .cse527)))) :proves (+ .cse490 - .cse482) :EQ))) (res .cse490 .cse491 (res .cse492 (res .cse493 .cse494 (! (res .cse355 .cse356 (res .cse495 .cse496 (res .cse497 .cse498 (res .cse472 .cse473 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 4 .cse474 4 .cse238 1 .cse472 1 .cse40 1 .cse497 1 .cse35 4 .cse443 4 .cse495 4 .cse355 1 .cse493))))))) :proves (- .cse323 - .cse209 - .cse44 - .cse40 - .cse447 - .cse35 - .cse443 - .cse482 - .cse266 - .cse493) :LA ((- 4) (- 4) (- 1) 1 (- 1) 1 4 (- 4) (- 4) 1))) (let ((.cse499 (= 2 .cse276))) (res .cse499 (! (res .cse2 (res .cse445 .cse446 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse447 .cse448 (res .cse449 .cse450 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse27 (res .cse141 (res .cse203 (res .cse207 .cse208 (res .cse209 .cse210 (res .cse25 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse144 (res .cse33 (res .cse266 .cse267 (res .cse183 (res .cse145 .cse184 (res .cse150 (res .cse152 .cse153 (res .cse37 (res .cse176 (res .cse197 .cse198 (res .cse213 .cse322 (res .cse224 (res .cse194 .cse199 (res .cse192 (res .cse323 .cse324 (res .cse138 .cse193 (res .cse186 (res .cse5 (res .cse88 (res .cse7 (res .cse483 .cse484 (res .cse500 .cse501 (res .cse502 (res .cse0 (res .cse1 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse490 (res .cse482 (res .cse485 (! .cse486 :proves (+ .cse485 + .cse482 - .cse483) :trichotomy) (! (res .cse503 .cse504 (res .cse462 .cse463 (res .cse75 .cse76 (res .cse81 .cse82 (farkas 4 .cse323 4 .cse209 1 .cse44 1 .cse81 1 .cse447 1 .cse75 4 .cse462 4 .cse266 1 .cse503 4 .cse485))))) :proves (- .cse323 - .cse209 - .cse44 - .cse40 - .cse447 - .cse35 - .cse443 - .cse266 - .cse492 - .cse485) :LA (4 4 1 (- 1) 1 (- 1) (- 4) 4 (- 1) 4))) .cse491) (res .cse505 .cse506 (! (trans 2 .cse257 .cse276) :proves (+ .cse499 - .cse490 - .cse505) :trans (2 .cse257 .cse276)))))) .cse19) .cse507) .cse508))) .cse89) .cse167) .cse187) .cse326))) .cse279)) .cse347))) .cse178) .cse487)) .cse509)) .cse227)) .cse202) .cse307)))) .cse488))) .cse489) .cse170) .cse510) .cse16)))))))) .cse18) :proves (- .cse443 + .cse499 - .cse492) :rup) (let ((.cse512 (= .cse276 2))) (let-proof ((.cse513 (symm .cse276 2))) (res .cse154 (let ((.cse516 (+ .cse276 (- 2)))) (let ((.cse511 (= .cse516 0))) (res .cse511 (! (res .cse512 .cse513 (let ((.cse514 (< .cse516 0))) (res .cse514 (let ((.cse515 (< 0 .cse516))) (res .cse515 (trichotomy .cse516 0) (farkas 1 .cse512 1 .cse515))) (farkas 1 .cse499 1 .cse514)))) :proves (- .cse499 + .cse511) :EQ) (res .cse151 .cse155 (res .cse149 .cse157 (res .cse52 .cse165 (res .cse517 .cse518 (! (let ((.cse519 (= 0 .cse516))) (res .cse519 (symm 0 .cse516) (farkas 1 .cse29 1 .cse259 1 .cse517 1 .cse42 1 .cse519 1 .cse31))) :proves (- .cse29 - .cse259 - .cse517 - .cse42 - .cse511 - .cse31) :LA (1 1 1 1 (- 1) 1))))))))) (! (res .cse521 .cse522 (res .cse523 .cse524 (res .cse512 .cse513 (res .cse525 .cse526 (res .cse277 .cse278 (trans 0 .cse520 .cse258 .cse256 .cse276 2 .cse257 .cse64 .cse318)))))) :proves (+ .cse459 - .cse456 - .cse138 - .cse152 - .cse154 - .cse499 - .cse490 - .cse477 - .cse101) :trans (0 .cse520 .cse258 .cse256 .cse276 2 .cse257 .cse64 .cse318)))))))))))))))))) (! (res .cse458 (symm .cse318 0) (let ((.cse537 (< .cse318 0))) (res .cse537 (let ((.cse538 (< 0 .cse318))) (res .cse538 (trichotomy .cse318 0) (farkas 1 .cse458 1 .cse538))) (farkas 1 .cse459 1 .cse537)))) :proves (- .cse459 + .cse458) :EQ))) (! (res .cse355 .cse356 (res .cse238 .cse239 (res .cse474 .cse475 (farkas 1 .cse474 1 .cse238 1 .cse458 1 .cse355)))) :proves (- .cse323 - .cse209 - .cse458 - .cse266) :LA ((- 1) (- 1) 1 (- 1)))))))) .cse279)) .cse347))) .cse178) .cse487)))) .cse509))))))))) .cse227) .cse174)) .cse202) .cse307)))) .cse488))))))))) .cse489)))))))))))))))))))) .cse72))))) :proves (- .cse443) :rup)) :proves (- .cse101) :rup)) (.cse427 (res .cse441 .cse442 (and- 1 .cse441))) (.cse241 (symm 0 .cse438))) (let ((.cse117 (<= 1 .cse234)) (.cse111 (<= .cse234 0)) (.cse65 (= .cse62 .cse63)) (.cse161 (= s .cse160))) (let-proof ((.cse164 (res .cse152 .cse153 (res .cse10 .cse379 .cse156))) (.cse118 (total-int .cse234 0)) (.cse71 (! (cong (s_count 3) (s_count .cse376)) :proves (+ .cse57 - .cse0) :cong (.cse62 .cse64))) (.cse51 (! (and- 1 .cse21) :proves (- .cse21 + .cse50) :input)) (.cse54 (! (res .cse431 (res .cse21 (and+ .cse21) (res .cse432 (res .cse426 .cse427 (and- 0 .cse426)) (=>- .cse432))) (let ((.cse433 (= .cse431 .cse53))) (res .cse433 (res .cse53 (res .cse431 (=+1 .cse433) (let ((.cse434 (= .cse435 .cse62))) (res .cse434 (symm .cse435 .cse62) (let ((.cse436 (< .cse438 0))) (res .cse436 (let ((.cse437 (< 0 .cse438))) (res .cse437 (trichotomy .cse438 0) (farkas 1 .cse431 1 .cse437))) (farkas 1 .cse434 1 .cse436)))))) (res .cse431 (res .cse240 .cse241 (let ((.cse439 (< .cse62 .cse435))) (res .cse439 (let ((.cse440 (< .cse435 .cse62))) (res .cse440 (trichotomy .cse62 .cse435) (farkas 1 .cse53 1 .cse440))) (farkas 1 .cse240 1 .cse439)))) (=+2 .cse433))) (=-2 .cse433)))) :proves (- .cse50 + .cse53 - .cse23) :input)) (.cse66 (symm .cse62 .cse63)) (.cse188 (! (res .cse101 (res .cse319 (! (res .cse429 .cse430 (cong (s_count .cse376) (s_count 1))) :proves (+ .cse319 - .cse186) :cong (.cse64 .cse317)) (! .cse321 :proves (+ .cse101 - .cse319 - .cse176) :trans (.cse64 .cse317 .cse318))) .cse137) :proves (- .cse186 - .cse176) :rup)) (.cse22 (! (res .cse425 (res .cse426 .cse427 (and- 1 .cse426)) (res .cse428 (not+ .cse428) (=>- .cse425))) :proves (+ .cse21 + .cse12) :input)) (.cse97 (! (res .cse96 (symm .cse64 0) (let ((.cse423 (< .cse64 0))) (res .cse423 (let ((.cse424 (< 0 .cse64))) (res .cse424 (trichotomy .cse64 0) (farkas 1 .cse96 1 .cse424))) (farkas 1 .cse92 1 .cse423)))) :proves (- .cse92 + .cse96) :EQ)) (.cse99 (! (res .cse393 .cse394 (farkas 1 .cse393 1 .cse96)) :proves (+ .cse98 - .cse96) :LA ((- 1) 1))) (.cse100 (! (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse73 4 .cse98 1 .cse44 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse31))))) :proves (- .cse29 - .cse27 - .cse98 - .cse44 - .cse42 - .cse40 + .cse39 - .cse35 - .cse31) :LA (4 (- 4) 4 1 4 (- 1) (- 1) (- 1) 4))) (.cse162 (symm s .cse160)) (.cse104 (! (let ((.cse420 (= .cse318 .cse62))) (res .cse420 (symm .cse318 .cse62) (let ((.cse421 (< .cse123 0))) (res .cse421 (let ((.cse422 (< 0 .cse123))) (res .cse422 (trichotomy .cse123 0) (farkas 1 .cse12 1 .cse422))) (farkas 1 .cse420 1 .cse421))))) :proves (- .cse12 + .cse103) :EQ)) (.cse61 (! (cong (s_count 4) (s_count .cse376)) :proves (+ .cse60 - .cse10) :cong (.cse63 .cse64))) (.cse59 (! (res .cse418 (res .cse408 .cse409 (and- 1 .cse408)) (res .cse419 (not+ .cse419) (=>- .cse418))) :proves (+ .cse55 + .cse58) :input)) (.cse108 (! (and- 1 .cse55) :proves (- .cse55 + .cse107) :input)) (.cse69 (! (and- 0 .cse55) :proves (- .cse55 + .cse52) :input)) (.cse110 (! (res .cse406 (res .cse55 (and+ .cse55) (res .cse407 (res .cse408 .cse409 (and- 0 .cse408)) (=>- .cse407))) (let ((.cse410 (= .cse406 .cse109))) (res .cse410 (res .cse109 (res .cse406 (=+1 .cse410) (let ((.cse411 (= .cse412 .cse63))) (res .cse411 (symm .cse412 .cse63) (let ((.cse413 (< .cse415 0))) (res .cse413 (let ((.cse414 (< 0 .cse415))) (res .cse414 (trichotomy .cse415 0) (farkas 1 .cse406 1 .cse414))) (farkas 1 .cse411 1 .cse413)))))) (res .cse406 (res .cse126 .cse127 (let ((.cse416 (< .cse63 .cse412))) (res .cse416 (let ((.cse417 (< .cse412 .cse63))) (res .cse417 (trichotomy .cse63 .cse412) (farkas 1 .cse109 1 .cse417))) (farkas 1 .cse126 1 .cse416)))) (=+2 .cse410))) (=-2 .cse410)))) :proves (- .cse52 - .cse107 + .cse109) :input)) (.cse131 (res .cse390 (! (res .cse404 .cse405 (cong (s_count .cse376) (s_count 4))) :proves (+ .cse390 - .cse10) :cong (.cse64 .cse63)) (! (trans .cse64 .cse63 .cse62 .cse318) :proves (+ .cse101 - .cse390 - .cse58 - .cse12) :trans (.cse64 .cse63 .cse62 .cse318)))) (.cse20 (! (res .cse101 (res .cse83 (! (res .cse402 .cse403 (cong (s_count .cse376) (s_count 3))) :proves (+ .cse83 - .cse0) :cong (.cse64 .cse62)) (! (trans .cse64 .cse62 .cse318) :proves (+ .cse101 - .cse83 - .cse12) :trans (.cse64 .cse62 .cse318))) .cse137) :proves (- .cse0 - .cse12) :rup)) (.cse24 (! (and- 0 .cse21) :proves (- .cse21 + .cse23) :input)) (.cse94 (! (cong (s_count 0) (s_count .cse376)) :proves (+ .cse93 - .cse88) :cong (.cse95 .cse64)))) (let-proof ((.cse204 (! (res .cse207 .cse208 (! (res .cse209 .cse210 (! (res .cse101 (res .cse2 (res .cse3 .cse4 (res .cse6 (let-proof ((.cse211 (! (res .cse238 .cse239 (let ((.cse400 (< .cse317 .cse95))) (res .cse400 (let ((.cse401 (< .cse95 .cse317))) (res .cse401 (trichotomy .cse317 .cse95) (farkas 1 .cse209 1 .cse401))) (farkas 1 .cse238 1 .cse400)))) :proves (+ .cse207 - .cse209) :EQ))) (res .cse207 .cse211 (let ((.cse389 (+ .cse63 .cse86))) (let ((.cse261 (= .cse389 0)) (.cse212 (= .cse317 .cse64))) (let ((.cse289 (= 0 .cse389))) (let-proof ((.cse295 (res .cse93 .cse94 (! (trans .cse317 .cse95 .cse64) :proves (+ .cse212 - .cse207 - .cse93) :trans (.cse317 .cse95 .cse64)))) (.cse248 (! (res .cse395 .cse396 (res .cse397 (res .cse398 .cse399 (farkas 1 .cse395 1 .cse398)) (farkas 1 .cse247 1 .cse397))) :proves (- .cse247 + .cse246) :EQ)) (.cse249 (! (res .cse393 .cse394 (farkas 1 .cse246 1 .cse393)) :proves (- .cse246 + .cse98) :LA (1 (- 1)))) (.cse320 (symm .cse64 .cse317)) (.cse262 (! (res .cse390 (symm .cse64 .cse63) (let ((.cse391 (< .cse389 0))) (res .cse391 (let ((.cse392 (< 0 .cse389))) (res .cse392 (trichotomy .cse389 0) (farkas 1 .cse60 1 .cse392))) (farkas 1 .cse390 1 .cse391)))) :proves (- .cse60 + .cse261) :EQ)) (.cse290 (symm 0 .cse389))) (let-proof ((.cse284 (! (res .cse2 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse207 .cse211 (res .cse194 .cse199 (res .cse213 .cse322 (res .cse323 .cse324 (let-proof ((.cse343 (! (res .cse311 .cse312 (res .cse216 .cse217 (res .cse385 (! (res .cse305 .cse306 (res .cse386 .cse387 (trans 37 percent .cse159 x 120))) :proves (+ .cse385 - .cse311 - .cse194 - .cse147 - .cse216) :trans (37 percent .cse159 x 120)) .cse388))) :proves (- .cse194 - .cse147) :rup))) (res .cse147 (res .cse142 (let-proof ((.cse341 (! (res (= percent .cse250) (symm percent .cse250) (trans .cse159 percent .cse250 s)) :proves (+ .cse142 - .cse194 - .cse23 - .cse213) :trans (.cse159 percent .cse250 s)))) (res .cse23 (res .cse183 (res .cse21 (res .cse150 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse12 .cse22 (res .cse152 .cse153 (res .cse0 (res .cse1 (let ((.cse382 (+ .cse317 .cse86))) (let-proof ((.cse377 (! (cong (s_count 1) (s_count .cse376)) :proves (+ .cse212 - .cse186) :cong (.cse317 .cse64)))) (let ((.cse328 (= .cse382 0)) (.cse331 (= 0 .cse382))) (let-proof ((.cse332 (symm 0 .cse382)) (.cse334 (res .cse5 .cse359 (res .cse186 .cse187 (res .cse212 .cse377 (! (res .cse383 .cse384 (trans 0 .cse95 .cse317 .cse64)) :proves (+ .cse92 - .cse90 - .cse207 - .cse212) :trans (0 .cse95 .cse317 .cse64))))))) (let-proof ((.cse329 (res .cse8 .cse334 .cse11)) (.cse335 (! (res .cse101 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse103 .cse104 (res .cse60 .cse61 (res .cse58 (res .cse261 .cse262 (res .cse55 .cse59 (res .cse107 .cse108 (res .cse52 .cse69 (res .cse109 .cse110 (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse31 4 .cse29 4 .cse323 4 .cse209 4 .cse73 4 .cse25 4 .cse289)))))) :proves (- .cse109 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse35 - .cse31 - .cse29 - .cse323 - .cse209 - .cse27 - .cse25 - .cse261) :LA (4 1 4 4 (- 1) (- 1) (- 1) 4 4 4 4 (- 4) 4 (- 4)))))))) .cse131))))) .cse72)) .cse137) :proves (- .cse323 - .cse31 - .cse27 - .cse10 - .cse12 - .cse209 - .cse25 - .cse42 - .cse29) :rup)) (.cse336 (! (res .cse331 .cse332 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse25 4 .cse331 4 .cse31)))))) :proves (- .cse29 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse35 - .cse25 - .cse328 - .cse31) :LA (4 4 (- 4) 1 4 (- 1) (- 1) (- 1) 4 (- 4) 4))) (.cse330 (! (res .cse319 .cse320 (let ((.cse380 (< .cse382 0))) (res .cse380 (let ((.cse381 (< 0 .cse382))) (res .cse381 (trichotomy .cse382 0) (farkas 1 .cse212 1 .cse381))) (farkas 1 .cse319 1 .cse380)))) :proves (- .cse212 + .cse328) :EQ))) (let-proof ((.cse339 (! (res .cse2 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse207 .cse211 (res .cse42 .cse171 (res .cse0 (res .cse1 (let-proof ((.cse346 (! (res .cse2 (res .cse3 .cse4 (res .cse6 (res .cse88 (res .cse7 (res .cse186 (res .cse5 (res .cse10 .cse379 (! (res .cse101 (res .cse144 (res .cse154 (res .cse58 (res .cse151 .cse155 (res .cse55 .cse59 (res .cse149 .cse157 (res .cse107 .cse108 (! (res .cse161 .cse162 (trans .cse189 s .cse160 x)) :proves (+ .cse144 - .cse46 - .cse107 - .cse149) :trans (.cse189 s .cse160 x)))))) .cse131) .cse156) .cse307) .cse137) :proves (- .cse10 - .cse46 - .cse152 + .cse141 - .cse12) :rup)) .cse187) .cse326) .cse89) .cse167) .cse16)) .cse18) :proves (- .cse46 - .cse12 - .cse152 + .cse141 - .cse138 - .cse145) :rup))) (res .cse266 (res .cse144 (res .cse224 (res .cse264 (res .cse172 (res .cse192 (res .cse179 (res .cse31 .cse173 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse25 .cse180 (res .cse90 .cse91 (res .cse141 .cse346 (res .cse27 .cse170 (res .cse98 (res .cse96 (res .cse328 (res .cse92 (res .cse212 (res .cse88 (res .cse7 (res .cse10 .cse329 .cse335) .cse89) .cse295) .cse330) .cse97) .cse336) .cse99) .cse100)))))))) .cse265) .cse279) .cse174) .cse267) .cse347) .cse307) (! (res .cse101 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse207 .cse211 (res .cse42 .cse171 (res .cse103 .cse104 (res .cse0 (res .cse1 (res .cse25 (res .cse179 .cse180 (res .cse46 .cse181 (res .cse144 (res .cse224 (res .cse172 (res .cse192 (res .cse31 .cse173 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse141 .cse346 (res .cse27 .cse170 (res .cse98 (res .cse246 (res .cse328 (res .cse247 (res .cse212 (res .cse88 (res .cse7 (res .cse8 (! (res .cse2 (res .cse3 .cse4 (res .cse6 (let ((.cse358 (+ fmt1 .cse370 .cse371 (- 2)))) (let ((.cse348 (<= .cse358 0))) (res .cse348 (res .cse349 .cse350 (res .cse351 .cse352 (res .cse353 .cse354 (! (res .cse355 .cse356 (let ((.cse357 (<= 1 .cse358))) (res .cse357 (total-int .cse358 0) (res .cse238 .cse239 (farkas 1 .cse238 1 .cse357 1 .cse355 1 .cse353))))) :proves (- .cse209 + .cse348 - .cse266 - .cse353) :LA ((- 1) (- 1) (- 1) 1))))) (res .cse5 .cse359 (let ((.cse360 (= .cse358 0))) (res .cse360 (let ((.cse365 (+ fmt1 .cse370 .cse371 (- 1)))) (let ((.cse361 (<= .cse365 0))) (res .cse361 (! (let ((.cse362 (< .cse358 0))) (res .cse362 (let ((.cse363 (< 0 .cse358))) (res .cse363 (trichotomy .cse358 0) (farkas 1 .cse363 1 .cse348))) (let ((.cse364 (<= 1 .cse365))) (res .cse364 (total-int .cse365 0) (farkas 1 .cse364 1 .cse362))))) :proves (+ .cse361 + .cse360 - .cse348) :trichotomy) (res .cse366 (! (res .cse367 .cse368 (farkas 1 .cse209 1 .cse266 1 .cse367 1 .cse361)) :proves (- .cse209 - .cse266 + .cse366 - .cse361) :LA (1 1 (- 1) 1)) .cse369)))) (res .cse186 .cse187 (let ((.cse372 (= .cse376 .cse317))) (res .cse372 (! (let ((.cse373 (= 0 .cse358))) (res .cse373 (symm 0 .cse358) (let ((.cse374 (< .cse376 .cse317))) (res .cse374 (let ((.cse375 (< .cse317 .cse376))) (res .cse375 (trichotomy .cse376 .cse317) (farkas 1 .cse360 1 .cse375))) (farkas 1 .cse373 1 .cse374))))) :proves (+ .cse372 - .cse360) :EQ) (res .cse212 .cse377 (! (trans 1 .cse376 .cse317 .cse64) :proves (+ .cse247 - .cse186 - .cse372 - .cse212) :trans (1 .cse376 .cse317 .cse64)))))))))))) .cse16)) .cse18) :proves (- .cse266 + .cse1 + .cse8 + .cse7 - .cse209 + .cse247) :rup) (res .cse10 .cse11 (res .cse60 .cse61 (res .cse58 (res .cse261 .cse262 (res .cse55 .cse59 (res .cse52 .cse69 (res .cse107 .cse108 (res .cse109 .cse110 (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse31 4 .cse266 4 .cse29 4 .cse323 4 .cse209 4 .cse73 4 .cse289)))))) :proves (- .cse109 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse35 - .cse31 - .cse266 - .cse29 - .cse323 - .cse209 - .cse27 - .cse261) :LA (4 1 4 4 (- 1) (- 1) (- 1) 4 4 4 4 4 (- 4) (- 4)))))))) .cse131)))) .cse89) .cse295) .cse330) .cse248) (! (res .cse331 .cse332 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse331 4 .cse31 4 .cse266)))))) :proves (- .cse29 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse35 - .cse328 - .cse31 - .cse266) :LA (4 4 (- 4) 1 4 (- 1) (- 1) (- 1) (- 4) 4 4))) .cse249) .cse100)))))) .cse279) .cse174) .cse347) .cse307))) .cse378) .cse19) .cse20)))))) .cse72)) .cse137) :proves (- .cse266 - .cse323 - .cse152 - .cse209 - .cse12 - .cse213 - .cse145) :rup))) .cse19) .cse20))) .cse16))) .cse72))) .cse18) :proves (- .cse46 - .cse323 - .cse145 - .cse152 - .cse209 - .cse213 - .cse12) :rup))) (res .cse46 (res .cse179 (res .cse25 .cse180 (res .cse90 .cse91 (let-proof ((.cse327 (! (res .cse214 .cse215 (res .cse216 .cse217 (res .cse218 (! (res .cse219 .cse220 (res .cse344 .cse345 (trans 120 x .cse250 s 115))) :proves (+ .cse218 - .cse216 - .cse224 - .cse213 - .cse214) :trans (120 x .cse250 s 115)) .cse223))) :proves (- .cse213 - .cse224) :rup))) (res .cse224 (res .cse192 (res .cse138 .cse193 (res .cse29 .cse140 (let-proof ((.cse325 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse154 (res .cse58 (res .cse151 .cse155 (res .cse55 .cse59 (res .cse149 .cse157 (res .cse107 .cse108 (! (res .cse161 .cse162 (trans .cse250 s .cse160 x)) :proves (+ .cse224 - .cse213 - .cse107 - .cse149) :trans (.cse250 s .cse160 x)))))) .cse131) .cse156))))) (res .cse31 (res .cse172 .cse173 (res .cse264 .cse302 (res .cse144 .cse174 (res .cse287 .cse303 (res .cse141 (! (res .cse2 (res .cse101 (res .cse3 .cse4 (res .cse6 (res .cse0 (res .cse1 (res .cse224 (res .cse192 (res .cse138 .cse193 (res .cse88 (res .cse7 (res .cse186 (res .cse5 .cse325 .cse187) .cse326) .cse89) .cse167)) .cse279) .cse327) .cse19) .cse20) .cse16)) .cse137) .cse18) :proves (- .cse213 - .cse152 + .cse141 - .cse145 - .cse12) :rup) (res .cse27 .cse170 (res .cse98 (res .cse96 (res .cse328 (res .cse92 (res .cse212 (res .cse88 (res .cse7 (res .cse10 .cse329 (! (res .cse101 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse103 .cse104 (res .cse60 .cse61 (res .cse58 (res .cse261 .cse262 (res .cse55 .cse59 (res .cse52 .cse69 (res .cse107 .cse108 (res .cse109 .cse110 (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse29 4 .cse323 4 .cse209 4 .cse73 4 .cse287 4 .cse25 4 .cse289)))))) :proves (- .cse109 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse35 - .cse29 - .cse323 - .cse209 - .cse27 - .cse287 - .cse25 - .cse261) :LA (4 1 4 4 (- 1) (- 1) (- 1) 4 4 4 (- 4) 4 4 (- 4)))))))) .cse131))))) .cse72)) .cse137) :proves (- .cse10 - .cse323 - .cse12 - .cse209 - .cse25 - .cse42 - .cse27 - .cse287 - .cse29) :rup)) .cse89) .cse295) .cse330) .cse97) (! (res .cse331 .cse332 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse209 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse287 1 .cse75 4 .cse25 4 .cse331)))))) :proves (- .cse29 - .cse209 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse287 - .cse35 - .cse25 - .cse328) :LA (4 4 (- 4) 1 4 (- 1) (- 1) 4 (- 1) 4 (- 4)))) .cse99) (! (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse73 4 .cse98 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse287 1 .cse75))))) :proves (- .cse29 - .cse27 - .cse98 - .cse44 - .cse42 - .cse40 + .cse39 - .cse287 - .cse35) :LA (4 (- 4) 4 1 4 (- 1) (- 1) 4 (- 1)))))))))) (! (res .cse2 (res .cse101 (res .cse3 .cse4 (res .cse6 (res .cse323 .cse324 (res .cse147 (res .cse142 (res .cse23 (res .cse183 (res .cse21 (res .cse150 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse12 .cse22 (res .cse152 .cse153 (res .cse0 (res .cse1 (res .cse46 (res .cse179 (res .cse25 .cse180 (res .cse138 .cse333 (res .cse300 (res .cse224 (res .cse27 (res .cse141 (res .cse186 (res .cse5 (res .cse88 (res .cse7 .cse325 .cse89) .cse167) .cse187) .cse326) .cse170) (! (res .cse2 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse207 .cse211 (res .cse0 (res .cse1 (res .cse90 .cse91 (res .cse98 (res .cse96 (res .cse328 (res .cse92 (res .cse212 (res .cse10 (res .cse8 (res .cse88 (res .cse7 .cse334 .cse89) .cse295) .cse11) .cse335) .cse330) .cse97) .cse336) .cse99) .cse100)) .cse19) .cse20)) .cse16))) .cse72))) .cse18) :proves (- .cse323 - .cse31 - .cse25 - .cse27 - .cse29 - .cse12 - .cse209 - .cse42) :rup)) .cse301) (! (res .cse337 .cse338 (farkas 1 .cse29 1 .cse337)) :proves (- .cse29 - .cse300) :LA (1 (- 1)))))) .cse181) .cse339) .cse19) .cse20))))) .cse340) .cse24) .cse185) .cse341) .cse342) .cse343)) .cse16)) .cse137) .cse18) :proves (- .cse194 - .cse31 - .cse29 - .cse213 - .cse209) :rup))))) .cse279) .cse327)))) .cse181) .cse339))))))) .cse19) .cse20))))) .cse340) .cse24) .cse185) .cse341)) .cse342) .cse343)))))) .cse16))) .cse72))) .cse18) :proves (- .cse209 - .cse197) :rup))) (res .cse197 (res .cse176 .cse198 (let-proof ((.cse296 (! (res .cse319 .cse320 .cse321) :proves (+ .cse101 - .cse212 - .cse176) :trans (.cse64 .cse317 .cse318)))) (res .cse212 (res .cse88 (res .cse7 (res .cse186 (res .cse5 (let-proof ((.cse268 (res .cse172 .cse173 .cse174)) (.cse288 (res .cse172 .cse173 (res .cse144 .cse174 (res .cse264 .cse302 .cse303))))) (let-proof ((.cse283 (! (res .cse2 (res .cse101 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse207 .cse211 (res .cse197 (res .cse176 .cse198 (res .cse212 (res .cse37 .cse178 (res .cse88 (res .cse7 (res .cse186 (res .cse5 (res .cse103 .cse104 (res .cse0 (res .cse1 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse60 .cse61 (res .cse58 (res .cse261 .cse262 (res .cse55 .cse59 (res .cse107 .cse108 (res .cse52 .cse69 (res .cse109 .cse110 (let-proof ((.cse310 (! (res .cse311 .cse312 (res .cse216 .cse217 (res .cse313 (! (res .cse221 .cse222 (res .cse314 .cse315 (trans 120 x .cse166 percent 37))) :proves (+ .cse313 - .cse216 - .cse148 - .cse52 - .cse311) :trans (120 x .cse166 percent 37)) .cse316))) :proves (- .cse148 - .cse52) :rup))) (res .cse148 (res .cse150 (res .cse152 .cse153 (let ((.cse308 (= x .cse160))) (let-proof ((.cse309 (symm x .cse160))) (let-proof ((.cse304 (! (res .cse214 .cse215 (res .cse216 .cse217 (res .cse218 (! (res .cse219 .cse220 (res .cse308 .cse309 (trans 120 x .cse160 s 115))) :proves (+ .cse218 - .cse216 - .cse149 - .cse107 - .cse214) :trans (120 x .cse160 s 115)) .cse223))) :proves (- .cse149 - .cse107) :rup))) (res .cse149 (res .cse151 (res .cse154 .cse155 (res .cse141 .cse156 (res .cse27 .cse170 (res .cse29 (res .cse138 (res .cse192 .cse193 (res .cse194 .cse195 (res .cse147 (res .cse224 .cse279 (res .cse183 (res .cse300 .cse301 (res .cse145 .cse184 (res .cse42 .cse171 (res .cse179 (res .cse25 .cse180 (res .cse31 (res .cse287 (res .cse172 .cse173 (res .cse264 .cse302 (res .cse144 .cse174 .cse303))) (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 4 .cse300 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse209 4 .cse73 4 .cse287 4 .cse25 4 .cse289)))))) :proves (- .cse109 - .cse300 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse209 - .cse27 - .cse287 - .cse25 - .cse261) :LA (4 4 1 4 4 (- 1) (- 1) 4 (- 1) 4 (- 4) 4 4 (- 4)))) (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 4 .cse300 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse31 4 .cse209 4 .cse73 4 .cse25 4 .cse289)))))) :proves (- .cse109 - .cse300 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse31 - .cse209 - .cse27 - .cse25 - .cse261) :LA (4 4 1 4 4 (- 1) (- 1) 4 (- 1) 4 4 (- 4) 4 (- 4))))) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse197 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse149 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse144 (res .cse266 .cse267 (res .cse172 (res .cse31 .cse173 (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 4 .cse300 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse31 4 .cse266 4 .cse209 4 .cse73 4 .cse289)))))) :proves (- .cse109 - .cse300 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse31 - .cse266 - .cse209 - .cse27 - .cse261) :LA (4 4 1 4 4 (- 1) (- 1) 4 (- 1) 4 4 4 (- 4) (- 4)))) .cse174)) (! (res .cse291 .cse292 (trans .cse160 s .cse189 x)) :proves (+ .cse149 - .cse107 - .cse46 - .cse144) :trans (.cse160 s .cse189 x))))) .cse304))) .cse284))) .cse72)) :proves (- .cse179 - .cse103 - .cse209 - .cse300 - .cse109 - .cse107 - .cse261 - .cse27 - .cse42) :rup))))) .cse185)) (! (res .cse305 .cse306 (trans .cse166 percent .cse159 x)) :proves (+ .cse148 - .cse52 - .cse194 - .cse147) :trans (.cse166 percent .cse159 x))))) .cse140) (! (res .cse60 .cse61 (res .cse261 .cse262 (res .cse109 .cse110 (res .cse148 (res .cse150 (res .cse152 .cse153 (res .cse149 (res .cse151 (res .cse154 .cse155 (res .cse141 .cse156 (res .cse27 .cse170 (res .cse183 (res .cse42 (res .cse145 .cse184 .cse171) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse197 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse25 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse266 .cse267 (res .cse31 (res .cse144 .cse268 .cse307) (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse31 4 .cse266 4 .cse29 4 .cse209 4 .cse73 4 .cse289)))))) :proves (- .cse109 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse31 - .cse266 - .cse29 - .cse209 - .cse27 - .cse261) :LA (4 1 4 4 (- 1) (- 1) 4 (- 1) 4 4 4 4 (- 4) (- 4)))))))) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse197 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse31 (res .cse287 .cse288 (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse29 4 .cse209 4 .cse73 4 .cse287 4 .cse25 4 .cse289)))))) :proves (- .cse109 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse29 - .cse209 - .cse27 - .cse287 - .cse25 - .cse261) :LA (4 1 4 4 (- 1) (- 1) 4 (- 1) 4 4 (- 4) 4 4 (- 4)))) (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 1 .cse44 4 .cse103 4 .cse42 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse31 4 .cse29 4 .cse209 4 .cse73 4 .cse25 4 .cse289)))))) :proves (- .cse109 - .cse44 - .cse103 - .cse42 - .cse40 + .cse39 - .cse37 - .cse35 - .cse31 - .cse29 - .cse209 - .cse27 - .cse25 - .cse261) :LA (4 1 4 4 (- 1) (- 1) 4 (- 1) 4 4 4 (- 4) 4 (- 4)))))) .cse284))) .cse72)) :proves (- .cse209 - .cse103 - .cse27 - .cse25 - .cse42 - .cse29 - .cse109 - .cse261) :rup)))) .cse284))) .cse72)) :proves (- .cse103 - .cse209 - .cse27 - .cse42 - .cse29 - .cse109 - .cse261) :rup)) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse47 (res .cse197 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse60 .cse61 (res .cse261 .cse262 (res .cse109 .cse110 (res .cse33 .cse227 (res .cse147 .cse185 (res .cse228 .cse229 (res .cse46 (res .cse144 (res .cse148 (res .cse142 (res .cse149 (res .cse179 (res .cse172 (res .cse150 (res .cse151 (res .cse25 .cse180 (res .cse31 .cse173 (res .cse152 .cse153 (res .cse154 .cse155 (res .cse141 .cse156 (res .cse27 .cse170 (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse109 1 .cse44 4 .cse103 1 .cse81 1 .cse79 4 .cse37 1 .cse75 4 .cse31 4 .cse29 4 .cse209 4 .cse73 4 .cse228 4 .cse25 4 .cse289)))))) :proves (- .cse109 - .cse44 - .cse103 - .cse40 + .cse39 - .cse37 - .cse35 - .cse31 - .cse29 - .cse209 - .cse27 - .cse228 - .cse25 - .cse261) :LA (4 1 4 (- 1) (- 1) 4 (- 1) 4 4 4 (- 4) 4 4 (- 4))))))))) .cse157) .cse158) .cse174) .cse181) (! (res .cse308 .cse309 (trans .cse159 x .cse160 s)) :proves (+ .cse142 - .cse147 - .cse149 - .cse107) :trans (.cse159 x .cse160 s))) .cse175) .cse163) .cse182) .cse202))))))))) .cse284) (! (res .cse124 .cse125 (farkas 1 .cse124 1 .cse209)) :proves (- .cse47 - .cse209) :LA ((- 1) 1))))) .cse72)) :proves (- .cse183 - .cse103 - .cse29 - .cse209 - .cse107 - .cse10 - .cse52) :rup))))) .cse157) .cse304)) .cse158) .cse310)))) :proves (- .cse209 - .cse52 - .cse29 - .cse107 - .cse10 - .cse103) :rup))))) .cse157) .cse304))))) .cse158) .cse310))))))) .cse131)))) .cse19) .cse20)) .cse187) .cse188) .cse89) .cse295)) .cse296)) .cse284)) .cse16))) .cse72))) .cse137) .cse18) :proves (- .cse209 - .cse12) :rup))) (res .cse12 (res .cse21 .cse22 (res .cse50 .cse51 (res .cse23 .cse24 (res .cse213 (let-proof ((.cse280 (! (res .cse190 .cse191 (trans .cse250 percent .cse166 s)) :proves (+ .cse213 - .cse23 - .cse52 - .cse50) :trans (.cse250 percent .cse166 s)))) (res .cse52 (res .cse151 (res .cse154 .cse155 (res .cse27 (res .cse141 (res .cse148 (res .cse150 .cse164 .cse158) (! (res .cse214 .cse215 (res .cse216 .cse217 (res .cse218 (! (res .cse219 .cse220 (res .cse221 .cse222 (trans 120 x .cse166 s 115))) :proves (+ .cse218 - .cse216 - .cse148 - .cse50 - .cse214) :trans (120 x .cse166 s 115)) .cse223))) :proves (- .cse50 - .cse148) :rup)) .cse170) (! (res .cse101 (res .cse2 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse207 .cse211 (res .cse197 (res .cse176 .cse198 (res .cse212 (res .cse37 .cse178 (res .cse88 (res .cse7 (res .cse186 (res .cse5 (res .cse12 (res .cse21 .cse22 (res .cse50 .cse51 (res .cse23 .cse24 (res .cse224 (res .cse213 (res .cse52 (res .cse53 .cse54 (res .cse192 (res .cse55 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse58 .cse59 (let ((.cse237 (+ .cse63 .cse299))) (let ((.cse225 (= .cse237 0))) (let-proof ((.cse226 (! (res .cse65 .cse66 (let ((.cse297 (< .cse237 0))) (res .cse297 (let ((.cse298 (< 0 .cse237))) (res .cse298 (trichotomy .cse237 0) (farkas 1 .cse58 1 .cse298))) (farkas 1 .cse65 1 .cse297)))) :proves (- .cse58 + .cse225) :EQ))) (res .cse225 .cse226 (res .cse42 (res .cse145 (res .cse183 .cse184 (res .cse147 .cse185 (res .cse33 .cse227 (res .cse144 (res .cse46 (res .cse228 .cse229 (res .cse172 (res .cse179 (res .cse31 .cse173 (res .cse25 .cse180 (let ((.cse230 (= .cse234 0))) (res .cse230 (res .cse111 (! (res .cse117 .cse118 (farkas 1 .cse117 1 .cse53 1 .cse209 1 .cse37 1 .cse225 1 .cse25)) :proves (+ .cse111 - .cse53 - .cse209 - .cse37 - .cse225 - .cse25) :LA ((- 1) 1 1 1 1 1)) (let ((.cse231 (<= .cse63 0))) (res .cse231 (! (let ((.cse232 (< .cse234 0))) (res .cse232 (let ((.cse233 (< 0 .cse234))) (res .cse233 (trichotomy .cse234 0) (farkas 1 .cse233 1 .cse111))) (let ((.cse235 (<= 1 .cse63))) (res .cse235 (total-int .cse63 0) (farkas 1 .cse235 1 .cse232))))) :proves (+ .cse231 + .cse230 - .cse111) :trichotomy) (! (res .cse90 .cse119 (let ((.cse236 (= 0 .cse237))) (res .cse236 (symm 0 .cse237) (res .cse120 .cse121 (res .cse238 .cse239 (res .cse240 .cse241 (farkas 1 .cse240 1 .cse238 1 .cse120 1 .cse236 1 .cse90 1 .cse231))))))) :proves (- .cse53 - .cse209 - .cse37 - .cse225 - .cse25 - .cse231) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1))))) (let ((.cse242 (= 1 .cse63))) (res .cse242 (! (let ((.cse243 (= 0 .cse234))) (res .cse243 (symm 0 .cse234) (let ((.cse244 (< 1 .cse63))) (res .cse244 (let ((.cse245 (< .cse63 1))) (res .cse245 (trichotomy 1 .cse63) (farkas 1 .cse243 1 .cse245))) (farkas 1 .cse230 1 .cse244))))) :proves (+ .cse242 - .cse230) :EQ) (res .cse98 (res .cse246 (res .cse247 (res .cse0 (res .cse1 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse60 .cse61 (! (trans 1 .cse63 .cse64) :proves (+ .cse247 - .cse242 - .cse60) :trans (1 .cse63 .cse64))))) .cse19) (res .cse57 .cse71 (! (trans 1 .cse63 .cse62 .cse64) :proves (+ .cse247 - .cse242 - .cse58 - .cse57) :trans (1 .cse63 .cse62 .cse64)))) .cse248) .cse249) (! (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse73 4 .cse98 4 .cse228 1 .cse44 1 .cse81 1 .cse79 1 .cse75 4 .cse31))))) :proves (- .cse29 - .cse27 - .cse98 - .cse228 - .cse44 - .cse40 + .cse39 - .cse35 - .cse31) :LA (4 (- 4) 4 4 1 (- 1) (- 1) (- 1) 4))))))))) .cse181) .cse174)) (! (res .cse251 .cse252 (trans .cse250 percent .cse189 s)) :proves (+ .cse213 - .cse23 - .cse33 - .cse46) :trans (.cse250 percent .cse189 s))) (! (res .cse251 .cse252 (trans .cse250 percent .cse189 x)) :proves (+ .cse224 - .cse23 - .cse33 - .cse144) :trans (.cse250 percent .cse189 x)))))) .cse171) (! (res .cse101 (res .cse2 (res .cse3 .cse4 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse6 (res .cse207 .cse211 (res .cse197 (res .cse176 .cse198 (res .cse212 (res .cse37 .cse178 (res .cse88 (res .cse7 (res .cse186 (res .cse5 (res .cse12 (res .cse21 .cse22 (res .cse50 .cse51 (res .cse23 .cse24 (res .cse224 (res .cse213 (res .cse52 (res .cse53 .cse54 (res .cse192 (res .cse55 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse58 .cse59 (res .cse225 .cse226 (let-proof ((.cse253 (! (res .cse73 .cse74 (let ((.cse293 (< .cse257 .cse258))) (res .cse293 (let ((.cse294 (< .cse258 .cse257))) (res .cse294 (trichotomy .cse257 .cse258) (farkas 1 .cse73 1 .cse294))) (farkas 1 .cse27 1 .cse293)))) :proves (+ .cse141 - .cse27) :EQ))) (res .cse141 .cse253 (let-proof ((.cse269 (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 4 .cse225 1 .cse75 4 .cse31 4 .cse266 4 .cse29 4 .cse53 4 .cse209 4 .cse73 4 .cse289)))))) :proves (- .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse225 - .cse35 - .cse31 - .cse266 - .cse29 - .cse53 - .cse209 - .cse27 - .cse261) :LA (1 4 (- 1) (- 1) 4 4 (- 1) 4 4 4 4 4 (- 4) (- 4)))) (.cse270 (! (res .cse291 .cse292 (trans .cse166 s .cse189 x)) :proves (+ .cse148 - .cse50 - .cse46 - .cse144) :trans (.cse166 s .cse189 x))) (.cse272 (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse197 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse12 (res .cse21 .cse22 (res .cse50 .cse51 (res .cse23 .cse24 (res .cse224 (res .cse213 (res .cse52 (res .cse53 .cse54 (res .cse192 (res .cse55 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse58 .cse59 (res .cse225 .cse226 (res .cse31 (res .cse287 .cse288 (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 4 .cse225 1 .cse75 4 .cse29 4 .cse53 4 .cse209 4 .cse73 4 .cse287 4 .cse25 4 .cse289)))))) :proves (- .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse225 - .cse35 - .cse29 - .cse53 - .cse209 - .cse27 - .cse287 - .cse25 - .cse261) :LA (1 4 (- 1) (- 1) 4 4 (- 1) 4 4 4 (- 4) 4 4 (- 4)))) (! (res .cse289 .cse290 (res .cse73 .cse74 (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (farkas 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse37 4 .cse225 1 .cse75 4 .cse31 4 .cse29 4 .cse53 4 .cse209 4 .cse73 4 .cse25 4 .cse289)))))) :proves (- .cse44 - .cse42 - .cse40 + .cse39 - .cse37 - .cse225 - .cse35 - .cse31 - .cse29 - .cse53 - .cse209 - .cse27 - .cse25 - .cse261) :LA (1 4 (- 1) (- 1) 4 4 (- 1) 4 4 4 4 (- 4) 4 (- 4)))))))) .cse69) .cse279)) .cse280) .cse281) .cse282)))) .cse283))) .cse284))) .cse72)) :proves (- .cse261 - .cse209 - .cse27 - .cse25 - .cse42) :rup)) (.cse273 (! (res .cse285 .cse286 (farkas 1 .cse259 1 .cse285)) :proves (- .cse259 - .cse263) :LA (1 (- 1))))) (res .cse10 (res .cse8 (res .cse1 .cse9 (res .cse0 .cse19 (res .cse152 (res .cse254 .cse255 (! (trans .cse256 .cse257 .cse258) :proves (+ .cse152 - .cse254 - .cse141) :trans (.cse256 .cse257 .cse258))) (res .cse60 (res .cse57 .cse71 (! (trans .cse63 .cse62 .cse64) :proves (+ .cse60 - .cse58 - .cse57) :trans (.cse63 .cse62 .cse64))) (res .cse259 .cse260 (res .cse261 .cse262 (res .cse263 (res .cse25 (res .cse148 (res .cse179 .cse180 (res .cse264 .cse265 (res .cse46 .cse181 (res .cse144 (res .cse266 .cse267 (res .cse31 .cse268 .cse269)) .cse270)))) .cse271) .cse272) .cse273))))))) .cse11) (! (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse197 (res .cse176 .cse198 (res .cse37 .cse178 (res .cse12 (res .cse21 .cse22 (res .cse50 .cse51 (res .cse23 .cse24 (res .cse224 (res .cse213 (res .cse52 (res .cse53 .cse54 (res .cse192 (res .cse151 (res .cse55 (res .cse138 .cse193 (res .cse29 .cse140 (res .cse154 .cse155 (res .cse58 .cse59 (res .cse225 .cse226 (res .cse141 .cse253 (res .cse152 (res .cse274 .cse275 (! (res .cse277 .cse278 (trans .cse256 .cse276 .cse257 .cse258)) :proves (+ .cse152 - .cse154 - .cse274 - .cse141) :trans (.cse256 .cse276 .cse257 .cse258))) (res .cse60 .cse61 (res .cse259 .cse260 (res .cse261 .cse262 (res .cse263 (res .cse148 (res .cse25 (res .cse179 .cse180 (res .cse46 .cse181 (res .cse144 (res .cse264 .cse265 (res .cse172 (res .cse266 .cse267 (res .cse31 .cse173 .cse269)) .cse174)) .cse270))) .cse272) .cse271) .cse273))))))))))) .cse69) .cse165) .cse279)) .cse280) .cse281) .cse282)))) .cse283))) .cse284))) .cse72)) :proves (- .cse10 - .cse209 - .cse27 - .cse42) :rup))))))))) .cse69) .cse279)) .cse280) .cse281) .cse282)))) .cse283) .cse187) .cse188) .cse89) .cse295)) .cse296)) .cse284)) .cse16))) .cse72))) .cse18) .cse137) :proves (- .cse209 - .cse27 - .cse42) :rup))))))))) .cse69) .cse279)) .cse280) .cse281) .cse282)))) .cse283) .cse187) .cse188) .cse89) .cse295)) .cse296)) .cse284)) .cse16))) .cse72))) .cse18) .cse137) :proves (- .cse209 - .cse27) :rup))) .cse165) .cse280)) .cse281)))) .cse283))) .cse187) .cse188) .cse89) .cse295) .cse296))) .cse284)))))))) .cse16)) .cse18) .cse137) :proves (- .cse209) :rup)) :proves (- .cse207) :rup)) :proves (+ .cse203) :rup))) (let-proof ((.cse34 (! (res .cse203 .cse204 .cse206) :proves (+ .cse33) :rup))) (let-proof ((.cse143 (! (res .cse203 .cse204 .cse205) :proves (+ .cse142) :rup)) (.cse87 (! (res .cse33 .cse34 .cse202) :proves (- .cse46) :rup))) (let-proof ((.cse196 (! (res .cse142 .cse143 (res .cse33 .cse34 (res .cse46 .cse201 .cse87))) :proves (- .cse194) :rup))) (let-proof ((.cse168 (! (res .cse142 .cse143 .cse200) :proves (- .cse147) :rup)) (.cse177 (! (res .cse197 .cse198 (! (res .cse194 .cse199 .cse196) :proves (- .cse197) :rup)) :proves (+ .cse176) :rup))) (let-proof ((.cse139 (! (res .cse192 .cse193 (! (res .cse194 .cse195 .cse196) :proves (- .cse192) :rup)) :proves (+ .cse138) :rup)) (.cse70 (! (res .cse190 .cse191 (trans .cse189 percent .cse166 s)) :proves (+ .cse46 - .cse33 - .cse52 - .cse50) :trans (.cse189 percent .cse166 s))) (.cse17 (! (res .cse186 .cse187 (! (res .cse176 .cse177 .cse188) :proves (- .cse186) :rup)) :proves (- .cse5) :rup)) (.cse146 (! (res .cse183 .cse184 (! (res .cse147 .cse185 .cse168) :proves (- .cse183) :rup)) :proves (+ .cse145) :rup)) (.cse169 (! (res .cse33 .cse34 .cse182) :proves (- .cse144) :rup))) (let-proof ((.cse26 (! (res .cse179 .cse180 (! (res .cse46 .cse181 .cse87) :proves (- .cse179) :rup)) :proves (+ .cse25) :rup)) (.cse38 (! (res .cse176 .cse177 .cse178) :proves (+ .cse37) :rup)) (.cse48 (! (res .cse33 .cse34 (res .cse142 .cse143 .cse175)) :proves (+ .cse47) :rup)) (.cse32 (! (res .cse172 .cse173 (! (res .cse144 .cse174 .cse169) :proves (- .cse172) :rup)) :proves (+ .cse31) :rup)) (.cse43 (! (res .cse145 .cse146 .cse171) :proves (+ .cse42) :rup)) (.cse28 (! (res .cse141 (! (res .cse2 (res .cse101 (res .cse3 .cse4 (res .cse33 .cse34 (res .cse142 .cse143 (res .cse138 .cse139 (res .cse144 (res .cse145 .cse146 (res .cse5 (res .cse147 (res .cse6 (res .cse88 (res .cse7 (res .cse50 (res .cse21 (res .cse12 .cse22 (res .cse0 (res .cse1 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse58 (res .cse55 .cse59 (res .cse52 .cse69 (res .cse148 (res .cse107 .cse108 (res .cse149 (res .cse150 (res .cse151 (res .cse152 .cse153 (res .cse154 .cse155 .cse156)) .cse157) .cse158) (! (res .cse161 .cse162 (trans .cse159 s .cse160 x)) :proves (+ .cse147 - .cse142 - .cse107 - .cse149) :trans (.cse159 s .cse160 x)))) .cse163))) .cse131))) .cse19) .cse20)) .cse51) (! (res .cse2 (res .cse33 .cse34 (res .cse142 .cse143 (res .cse3 .cse4 (res .cse138 .cse139 (res .cse145 .cse146 (res .cse5 (res .cse147 (res .cse46 (res .cse6 (res .cse88 (res .cse7 (res .cse52 (res .cse148 (res .cse151 (res .cse150 (res .cse154 .cse155 .cse164) .cse158) .cse165) (! (res (= s .cse166) (symm s .cse166) (trans .cse159 s .cse166 x)) :proves (+ .cse147 - .cse142 - .cse50 - .cse148) :trans (.cse159 s .cse166 x))) .cse70) .cse89) .cse167) .cse16) .cse87) .cse168) .cse17)))))) .cse18) :proves (- .cse50 + .cse141) :rup)) .cse89) .cse167) .cse16) .cse168) .cse17)) .cse169))))) .cse137) .cse18) :proves (+ .cse141) :rup) .cse170) :proves (+ .cse27) :rup)) (.cse30 (! (res .cse138 .cse139 .cse140) :proves (+ .cse29) :rup))) (let-proof ((.cse14 (! (res .cse101 (let ((.cse102 (= 2 .cse64))) (res .cse102 (res .cse25 .cse26 (res .cse37 .cse38 (res .cse47 .cse48 (res .cse103 .cse104 (res .cse58 (let ((.cse105 (= 2 .cse63))) (res .cse105 (let ((.cse114 (+ .cse63 (- 2)))) (let ((.cse106 (= .cse114 0))) (res .cse106 (res .cse55 .cse59 (res .cse107 .cse108 (res .cse52 .cse69 (res .cse109 .cse110 (res .cse111 (let ((.cse112 (<= .cse114 0))) (res .cse112 (! (let ((.cse113 (<= 1 .cse114))) (res .cse113 (total-int .cse114 0) (farkas 1 .cse109 1 .cse47 1 .cse103 1 .cse37 1 .cse25 1 .cse113))) :proves (- .cse109 - .cse47 - .cse103 - .cse37 - .cse25 + .cse112) :LA (1 1 1 1 1 (- 1))) (! (let ((.cse115 (< .cse114 0))) (res .cse115 (let ((.cse116 (< 0 .cse114))) (res .cse116 (trichotomy .cse114 0) (farkas 1 .cse116 1 .cse112))) (res .cse117 .cse118 (farkas 1 .cse117 1 .cse115)))) :proves (- .cse112 + .cse106 + .cse111) :trichotomy))) (! (res .cse90 .cse119 (res .cse120 .cse121 (let ((.cse122 (= 0 .cse123))) (res .cse122 (symm 0 .cse123) (res .cse124 .cse125 (res .cse126 .cse127 (farkas 1 .cse111 1 .cse126 1 .cse124 1 .cse122 1 .cse120 1 .cse90))))))) :proves (- .cse111 - .cse109 - .cse47 - .cse103 - .cse37 - .cse25) :LA (1 (- 1) (- 1) (- 1) (- 1) (- 1)))))))) (! (let ((.cse128 (= 0 .cse114))) (res .cse128 (symm 0 .cse114) (let ((.cse129 (< 2 .cse63))) (res .cse129 (let ((.cse130 (< .cse63 2))) (res .cse130 (trichotomy 2 .cse63) (farkas 1 .cse128 1 .cse130))) (farkas 1 .cse106 1 .cse129))))) :proves (+ .cse105 - .cse106) :EQ)))) (res .cse60 .cse61 (! (trans 2 .cse63 .cse64) :proves (+ .cse102 - .cse105 - .cse60) :trans (2 .cse63 .cse64))))) .cse131))))) (! (let ((.cse136 (+ .cse64 (- 2)))) (let ((.cse132 (= .cse136 0))) (res .cse132 (! (let ((.cse133 (= .cse64 2))) (res .cse133 (symm .cse64 2) (let ((.cse134 (< .cse136 0))) (res .cse134 (let ((.cse135 (< 0 .cse136))) (res .cse135 (trichotomy .cse136 0) (farkas 1 .cse133 1 .cse135))) (farkas 1 .cse102 1 .cse134))))) :proves (- .cse102 + .cse132) :EQ) (! (res .cse31 .cse32 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse27 .cse28 (res .cse29 .cse30 (! (res .cse75 .cse76 (res .cse79 .cse80 (res .cse81 .cse82 (res .cse73 .cse74 (farkas 4 .cse29 4 .cse73 1 .cse44 4 .cse42 1 .cse81 1 .cse79 1 .cse75 4 .cse31 4 .cse132))))) :proves (- .cse29 - .cse27 - .cse44 - .cse42 - .cse40 + .cse39 - .cse35 - .cse31 - .cse132) :LA (4 (- 4) 1 4 (- 1) (- 1) (- 1) 4 4))))))) .cse72))) :proves (- .cse132) :rup)))) :proves (- .cse102) :rup))) .cse137) :proves (- .cse12 - .cse10) :rup)) (.cse15 (! (res .cse88 .cse89 (! (res .cse90 (! (res .cse25 .cse26 .cse91) :proves (+ .cse90) :rup) (res .cse92 (res .cse93 .cse94 (! (trans 0 .cse95 .cse64) :proves (+ .cse92 - .cse90 - .cse93) :trans (0 .cse95 .cse64))) (! (res .cse96 .cse97 (! (res .cse98 .cse99 (! (res .cse31 .cse32 (res .cse35 .cse36 (res .cse39 (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse27 .cse28 (res .cse29 .cse30 .cse100))))) .cse72))) :proves (- .cse98) :rup)) :proves (- .cse96) :rup)) :proves (- .cse92) :rup))) :proves (- .cse88) :rup)) :proves (- .cse7) :rup))) (let-proof ((.cse13 (! (res .cse21 .cse22 (! (res .cse23 .cse24 (! (res .cse2 (res .cse25 .cse26 (res .cse5 (res .cse27 .cse28 (res .cse29 .cse30 (res .cse31 .cse32 (res .cse3 .cse4 (res .cse33 .cse34 (res .cse35 .cse36 (res .cse37 .cse38 (res .cse39 (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse6 (res .cse7 (res .cse46 (res .cse47 .cse48 (let ((.cse78 (+ .cse62 .cse86))) (let ((.cse56 (= .cse78 0))) (let-proof ((.cse67 (! (res .cse83 (symm .cse64 .cse62) (let ((.cse84 (< .cse78 0))) (res .cse84 (let ((.cse85 (< 0 .cse78))) (res .cse85 (trichotomy .cse78 0) (farkas 1 .cse57 1 .cse85))) (farkas 1 .cse83 1 .cse84)))) :proves (- .cse57 + .cse56) :EQ)) (.cse68 (! (res .cse73 .cse74 (res .cse75 .cse76 (let ((.cse77 (= 0 .cse78))) (res .cse77 (symm 0 .cse78) (res .cse79 .cse80 (res .cse81 .cse82 (farkas 4 .cse47 1 .cse44 4 .cse42 1 .cse81 1 .cse79 4 .cse77 4 .cse37 1 .cse75 4 .cse31 4 .cse29 4 .cse53 4 .cse73 4 .cse25))))))) :proves (- .cse47 - .cse44 - .cse42 - .cse40 + .cse39 - .cse56 - .cse37 - .cse35 - .cse31 - .cse29 - .cse53 - .cse27 - .cse25) :LA (4 1 4 (- 1) (- 1) (- 4) 4 (- 1) 4 4 4 (- 4) 4)))) (res .cse0 (res .cse1 (res .cse8 .cse49 (res .cse10 .cse11 (res .cse12 (res .cse21 .cse22 (res .cse50 .cse51 (res .cse52 (res .cse53 .cse54 (res .cse55 (res .cse56 (res .cse57 (res .cse58 .cse59 (res .cse60 .cse61 (! (res .cse65 .cse66 (trans .cse62 .cse63 .cse64)) :proves (+ .cse57 - .cse58 - .cse60) :trans (.cse62 .cse63 .cse64)))) .cse67) .cse68) .cse69)) .cse70))) .cse14))) .cse19) (! (res .cse31 .cse32 (res .cse25 .cse26 (res .cse35 .cse36 (res .cse37 .cse38 (res .cse39 (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse27 .cse28 (res .cse29 .cse30 (res .cse47 .cse48 (res .cse12 (res .cse21 .cse22 (res .cse50 .cse51 (res .cse53 .cse54 (res .cse56 (res .cse57 .cse71 .cse67) .cse68)))) .cse20))))))) .cse72))))) :proves (- .cse0 - .cse23) :rup)))))) .cse87) .cse15) .cse16)))) .cse72)))))))) .cse17)) .cse18) :proves (- .cse23) :rup)) :proves (- .cse21) :rup)) :proves (+ .cse12) :rup))) (res .cse0 (! (res .cse1 (! (res .cse2 (res .cse3 .cse4 (res .cse5 (res .cse6 (res .cse7 (res .cse8 .cse9 (! (res .cse10 .cse11 (! (res .cse12 .cse13 .cse14) :proves (- .cse10) :rup)) :proves (- .cse8) :rup)) .cse15) .cse16) .cse17)) .cse18) :proves (+ .cse1) :rup) .cse19) :proves (+ .cse0) :rup) (res .cse12 .cse13 .cse20))))))))))))))))))))))))))))))))))))))))))))))))) :proves () :rup)
