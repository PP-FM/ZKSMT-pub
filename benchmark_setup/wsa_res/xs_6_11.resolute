unsat
(! (let ((.cse553 (* (- 1) distance))) (let ((.cse705 (+ fmt0 .cse553)) (.cse454 (* (- 1) arg1))) (let ((.cse455 (* (- 1) fmt0)) (.cse952 (+ fmt0 .cse454)) (.cse365 (= fmt0 0)) (.cse702 (= arg0 .cse705)) (.cse953 (+ fmt0 fmt_length (* (- 1) fmt1) (- 1))) (.cse105 (format 2)) (.cse186 (format 1)) (.cse961 (format 0))) (let ((.cse95 (format 3)) (.cse170 (= .cse961 percent)) (.cse44 (= .cse186 s)) (.cse46 (= .cse186 percent)) (.cse104 (= .cse105 s)) (.cse54 (s_count 0)) (.cse926 (+ fmt0 1)) (.cse692 (= distance 11)) (.cse763 (= fmt_length 6)) (.cse772 (<= .cse953 0)) (.cse486 (and .cse365 .cse702)) (.cse646 (<= .cse952 0)) (.cse817 (+ fmt1 .cse455 (- 1)))) (let ((.cse121 (= .cse186 x)) (.cse74 (= .cse105 x)) (.cse289 (x_count 0)) (.cse6 (<= .cse817 0)) (.cse647 (and .cse486 .cse646)) (.cse776 (not .cse772)) (.cse313 (+ fmt1 .cse455 (- 2))) (.cse693 (and .cse692 .cse763)) (.cse962 (+ fmt0 2)) (.cse865 (= fmt1 fmt0)) (.cse863 (= fmt1 .cse926)) (.cse96 (format 4)) (.cse578 (+ .cse54 1)) (.cse127 (and .cse46 .cse104)) (.cse42 (and .cse170 .cse44)) (.cse227 (= .cse105 percent)) (.cse50 (= .cse95 s)) (.cse55 (s_count 1))) (let ((.cse315 (format 5)) (.cse681 (+ .cse55 1)) (.cse56 (s_count 2)) (.cse202 (and .cse227 .cse50)) (.cse668 (not .cse42)) (.cse41 (= .cse54 0)) (.cse655 (= .cse54 1)) (.cse727 (not .cse127)) (.cse38 (= .cse55 .cse54)) (.cse572 (= .cse55 .cse578)) (.cse48 (= .cse95 percent)) (.cse102 (= .cse96 s)) (.cse862 (or .cse865 .cse863)) (.cse860 (= fmt1 .cse962)) (.cse804 (and .cse693 (= adr_lo 3))) (.cse185 (x_count .cse313)) (.cse194 (s_count .cse313)) (.cse921 (+ arg0 distance .cse454)) (.cse784 (and .cse647 .cse776)) (.cse754 (not .cse6)) (.cse954 (+ arg0 distance fmt_length .cse454 (- 4))) (.cse591 (+ .cse289 1)) (.cse124 (and .cse46 .cse74)) (.cse119 (and .cse170 .cse121)) (.cse94 (= .cse95 x)) (.cse184 (x_count 1))) (let ((.cse517 (+ .cse184 1)) (.cse233 (x_count 2)) (.cse179 (and .cse227 .cse94)) (.cse738 (not .cse119)) (.cse69 (= .cse289 0)) (.cse791 (= .cse289 1)) (.cse725 (not .cse124)) (.cse132 (= .cse184 .cse289)) (.cse585 (= .cse184 .cse591)) (.cse92 (= .cse96 x)) (.cse532 (<= .cse954 0)) (.cse752 (and .cse784 .cse754)) (.cse917 (<= .cse921 0)) (.cse884 (* 4 .cse194)) (.cse874 (* 4 .cse185)) (.cse805 (and .cse804 (= adr_medlo 4))) (.cse210 (= percent 37)) (.cse750 (= s 115)) (.cse859 (or .cse862 .cse860)) (.cse857 (= fmt1 (+ fmt0 3))) (.cse57 (s_count 3)) (.cse100 (and .cse48 .cse102)) (.cse573 (=> .cse127 .cse572)) (.cse726 (=> .cse727 .cse38)) (.cse656 (=> .cse42 .cse655)) (.cse667 (=> .cse668 .cse41)) (.cse689 (not .cse202)) (.cse24 (= .cse56 .cse55)) (.cse675 (= .cse56 .cse681)) (.cse91 (= .cse96 percent)) (.cse306 (= .cse315 s))) (let ((.cse58 (s_count 4)) (.cse89 (and .cse91 .cse306)) (.cse676 (=> .cse202 .cse675)) (.cse688 (=> .cse689 .cse24)) (.cse657 (and .cse656 .cse667)) (.cse574 (and .cse573 .cse726)) (.cse632 (not .cse100)) (.cse26 (= .cse57 .cse56)) (.cse856 (or .cse859 .cse857)) (.cse854 (= fmt1 (+ fmt0 4))) (.cse843 (= arg1 fmt0)) (.cse841 (= arg1 .cse926)) (.cse569 (and .cse210 .cse750)) (.cse499 (= x 120)) (.cse806 (and .cse805 (= adr_medhi 5))) (.cse716 (+ arg0 .cse884 .cse874)) (.cse813 (and .cse752 .cse917)) (.cse536 (not .cse532)) (.cse258 (x_count 3)) (.cse107 (and .cse48 .cse92)) (.cse586 (=> .cse124 .cse585)) (.cse724 (=> .cse725 .cse132)) (.cse792 (=> .cse119 .cse791)) (.cse735 (=> .cse738 .cse69)) (.cse674 (not .cse179)) (.cse16 (= .cse233 .cse184)) (.cse511 (= .cse233 .cse517)) (.cse303 (= .cse315 x))) (let ((.cse385 (x_count 4)) (.cse297 (and .cse91 .cse303)) (.cse512 (=> .cse179 .cse511)) (.cse673 (=> .cse674 .cse16)) (.cse736 (and .cse792 .cse735)) (.cse587 (and .cse586 .cse724)) (.cse224 (not .cse107)) (.cse219 (= .cse258 .cse233)) (.cse544 (and .cse813 .cse536)) (.cse711 (= arg1 .cse716)) (.cse807 (and .cse806 (= adr_hi 6))) (.cse747 (and .cse569 .cse499)) (.cse840 (or .cse843 .cse841)) (.cse838 (= arg1 .cse962)) (.cse853 (or .cse856 .cse854)) (.cse851 (= fmt1 (+ fmt0 5))) (.cse628 (=> .cse632 .cse26)) (.cse730 (and .cse657 .cse574)) (.cse677 (and .cse676 .cse688)) (.cse627 (not .cse89)) (.cse28 (= .cse58 .cse57))) (let ((.cse623 (=> .cse627 .cse28)) (.cse743 (and .cse730 .cse677)) (.cse629 (and (=> .cse100 (= .cse57 (+ .cse56 1))) .cse628)) (.cse850 (or .cse853 .cse851)) (.cse837 (or .cse840 .cse838)) (.cse800 (and .cse807 .cse747)) (.cse712 (and .cse544 .cse711)) (.cse220 (=> .cse224 .cse219)) (.cse732 (and .cse736 .cse587)) (.cse513 (and .cse512 .cse673)) (.cse302 (not .cse297)) (.cse296 (= .cse385 .cse258))) (let ((.cse298 (=> .cse302 .cse296)) (.cse745 (and .cse732 .cse513)) (.cse221 (and (=> .cse107 (= .cse258 (+ .cse233 1))) .cse220)) (.cse957 (= .cse315 percent)) (.cse808 (and .cse800 .cse712)) (.cse835 (and .cse850 .cse837)) (.cse630 (and .cse743 .cse629)) (.cse624 (and (=> .cse89 (= .cse58 (+ .cse57 1))) .cse623))) (let ((.cse625 (and .cse630 .cse624)) (.cse958 (format 6)) (.cse821 (and .cse808 .cse835)) (.cse832 (and (and (and (and (and (or (or (or (or (or (or (or .cse170 (= .cse961 s)) (= .cse961 x)) (= .cse961 3)) (= .cse961 4)) (= .cse961 5)) (= .cse961 6)) (= .cse961 255)) (or (or (or (or (or (or (or .cse46 .cse44) .cse121) (= .cse186 3)) (= .cse186 4)) (= .cse186 5)) (= .cse186 6)) (= .cse186 255))) (or (or (or (or (or (or (or .cse227 .cse104) .cse74) (= .cse105 3)) (= .cse105 4)) (= .cse105 5)) (= .cse105 6)) (= .cse105 255))) (or (or (or (or (or (or (or .cse48 .cse50) .cse94) (= .cse95 3)) (= .cse95 4)) (= .cse95 5)) (= .cse95 6)) (= .cse95 255))) (or (or (or (or (or (or (or .cse91 .cse102) .cse92) (= .cse96 3)) (= .cse96 4)) (= .cse96 5)) (= .cse96 6)) (= .cse96 255))) (or (or (or (or (or (or (or .cse957 .cse306) .cse303) (= .cse315 3)) (= .cse315 4)) (= .cse315 5)) (= .cse315 6)) (= .cse315 255)))) (.cse222 (and .cse745 .cse221)) (.cse299 (and (=> .cse297 (= .cse385 (+ .cse258 1))) .cse298))) (let ((.cse300 (and .cse222 .cse299)) (.cse822 (and .cse821 .cse832)) (.cse814 (and .cse625 (let ((.cse959 (and .cse957 (= .cse958 s))) (.cse960 (s_count 5))) (and (=> .cse959 (= .cse960 (+ .cse58 1))) (=> (not .cse959) (= .cse960 .cse58))))))) (let ((.cse815 (and .cse822 .cse814)) (.cse818 (and .cse300 (let ((.cse955 (and .cse957 (= .cse958 x))) (.cse956 (x_count 5))) (and (=> .cse955 (= .cse956 (+ .cse385 1))) (=> (not .cse955) (= .cse956 .cse385))))))) (let ((.cse540 (< 0 .cse954)) (.cse780 (< 0 .cse953)) (.cse651 (< 0 .cse952)) (.cse819 (and .cse815 .cse818)) (.cse418 (+ arg1 1))) (let-proof ((.cse537 (not+ .cse536)) (.cse541 (total .cse954 0)) (.cse546 (not- .cse536)) (.cse755 (not- .cse754)) (.cse777 (not+ .cse776)) (.cse781 (total .cse953 0)) (.cse786 (not- .cse776)) (.cse652 (total .cse952 0))) (let-proof ((.cse820 (let ((.cse828 (and (and (and (and (and (not (= (format fmt1) percent)) (= (format (+ fmt1 1)) s)) (= (format arg1) adr_lo)) (= (format .cse418) adr_medlo)) (= (format (+ arg1 2)) adr_medhi)) (= (format (+ arg1 3)) adr_hi)))) (let ((.cse823 (=> .cse819 .cse828))) (res .cse823 (=>+ 0 .cse823) (let ((.cse951 (- fmt0 distance))) (let ((.cse950 (= arg0 .cse951)) (.cse939 (- fmt_length 1)) (.cse893 (- fmt1 2))) (let ((.cse848 (+ fmt0 0)) (.cse878 (- .cse893 fmt0)) (.cse937 (+ fmt0 .cse939)) (.cse949 (and .cse365 .cse950)) (.cse946 (>= arg1 fmt0))) (let ((.cse907 (- fmt_length 4)) (.cse943 (and .cse949 .cse946)) (.cse932 (< fmt1 .cse937)) (.cse885 (s_count .cse878)) (.cse864 (= fmt1 .cse848))) (let ((.cse861 (or .cse864 .cse863)) (.cse875 (x_count .cse878)) (.cse883 (* 4 .cse885)) (.cse916 (+ arg0 distance)) (.cse931 (and .cse943 .cse932)) (.cse927 (> fmt1 .cse926)) (.cse904 (+ distance .cse907))) (let ((.cse902 (+ arg0 .cse904)) (.cse923 (and .cse931 .cse927)) (.cse918 (>= arg1 .cse916)) (.cse881 (+ arg0 .cse883)) (.cse873 (* 4 .cse875)) (.cse858 (or .cse861 .cse860))) (let ((.cse855 (or .cse858 .cse857)) (.cse842 (= arg1 .cse848)) (.cse871 (+ .cse881 .cse873)) (.cse913 (and .cse923 .cse918)) (.cse897 (< arg1 .cse902))) (let ((.cse896 (and .cse913 .cse897)) (.cse870 (= arg1 .cse871)) (.cse839 (or .cse842 .cse841)) (.cse852 (or .cse855 .cse854))) (let ((.cse849 (or .cse852 .cse851)) (.cse836 (or .cse839 .cse838)) (.cse869 (and .cse896 .cse870))) (let ((.cse868 (and .cse800 .cse869)) (.cse834 (and .cse849 .cse836))) (let ((.cse833 (and .cse868 .cse834))) (let ((.cse831 (and .cse833 .cse832))) (let ((.cse830 (and .cse831 .cse814))) (let ((.cse829 (and .cse830 .cse818))) (let ((.cse824 (=> .cse829 .cse828))) (let ((.cse826 (not .cse824))) (res .cse824 (let ((.cse825 (not .cse823))) (res .cse825 (res .cse826 (not+ .cse826) (let ((.cse827 (= .cse826 .cse825))) (res .cse827 (res (= .cse824 .cse823) (res (= .cse828 .cse828) (refl .cse828) (res (= .cse829 .cse819) (res (= .cse818 .cse818) (refl .cse818) (res (= .cse830 .cse815) (res (= .cse814 .cse814) (refl .cse814) (res (= .cse831 .cse822) (res (= .cse832 .cse832) (refl .cse832) (res (= .cse833 .cse821) (let ((.cse846 (= arg1 arg1)) (.cse866 (= fmt1 fmt1))) (let-proof ((.cse847 (refl arg1)) (.cse867 (refl fmt1))) (res (= .cse834 .cse835) (let ((.cse844 (= .cse848 fmt0))) (let-proof ((.cse845 (poly+ .cse848 fmt0))) (res (= .cse836 .cse837) (res (= .cse838 .cse838) (refl .cse838) (res (= .cse839 .cse840) (res (= .cse841 .cse841) (refl .cse841) (res (= .cse842 .cse843) (res .cse844 .cse845 (res .cse846 .cse847 (cong (= arg1 .cse848) (= arg1 fmt0)))) (cong (or .cse842 .cse841) (or .cse843 .cse841)))) (cong (or .cse839 .cse838) (or .cse840 .cse838)))) (res (= .cse849 .cse850) (res (= .cse851 .cse851) (refl .cse851) (res (= .cse852 .cse853) (res (= .cse854 .cse854) (refl .cse854) (res (= .cse855 .cse856) (res (= .cse857 .cse857) (refl .cse857) (res (= .cse858 .cse859) (res (= .cse860 .cse860) (refl .cse860) (res (= .cse861 .cse862) (res (= .cse863 .cse863) (refl .cse863) (res (= .cse864 .cse865) (res .cse844 .cse845 (res .cse866 .cse867 (cong (= fmt1 .cse848) (= fmt1 fmt0)))) (cong (or .cse864 .cse863) (or .cse865 .cse863)))) (cong (or .cse861 .cse860) (or .cse862 .cse860)))) (cong (or .cse858 .cse857) (or .cse859 .cse857)))) (cong (or .cse855 .cse854) (or .cse856 .cse854)))) (cong (or .cse852 .cse851) (or .cse853 .cse851)))) (cong (and .cse849 .cse836) (and .cse850 .cse837)))))) (res (= .cse868 .cse808) (res (= .cse869 .cse712) (let ((.cse891 (= fmt0 fmt0)) (.cse886 (= arg0 arg0))) (let-proof ((.cse892 (refl fmt0)) (.cse887 (refl arg0))) (res (= .cse870 .cse711) (res (= .cse871 .cse716) (let ((.cse882 (+ arg0 .cse884))) (let ((.cse872 (+ .cse882 .cse874))) (res (= .cse872 .cse716) (poly+ .cse872 .cse716) (res (= .cse871 .cse872) (let ((.cse876 (= .cse878 .cse313)) (.cse879 (= 4 4))) (let-proof ((.cse877 (let ((.cse889 (+ fmt1 (- 2)))) (let ((.cse888 (- .cse889 fmt0))) (res (= .cse888 .cse313) (res (= .cse455 .cse455) (refl .cse455) (res (= .cse889 .cse889) (refl .cse889) (let ((.cse890 (+ .cse889 .cse455))) (res (= .cse890 .cse890) (cong (+ .cse889 .cse455) (+ .cse889 .cse455)) (res (= .cse888 .cse890) (-def .cse889 fmt0) (res (= .cse890 .cse313) (poly+ .cse890 .cse313) (trans .cse888 .cse890 .cse890 .cse313))))))) (res (= .cse878 .cse888) (res .cse891 .cse892 (res (= .cse893 .cse889) (let ((.cse894 (* (- 1) 2))) (res (= .cse894 (- 2)) (poly* .cse894 (- 2)) (res .cse866 .cse867 (let ((.cse895 (+ fmt1 .cse894))) (res (= .cse895 .cse889) (cong (+ fmt1 .cse894) (+ fmt1 (- 2))) (res (= .cse893 .cse895) (-def fmt1 2) (trans .cse893 .cse895 .cse889))))))) (cong (- .cse893 fmt0) (- .cse889 fmt0)))) (trans .cse878 .cse888 .cse313)))))) (.cse880 (refl 4))) (res (= .cse873 .cse874) (res (= .cse875 .cse185) (res .cse876 .cse877 (cong (x_count .cse878) (x_count .cse313))) (res .cse879 .cse880 (cong (* 4 .cse875) (* 4 .cse185)))) (res (= .cse881 .cse882) (res (= .cse883 .cse884) (res (= .cse885 .cse194) (res .cse876 .cse877 (cong (s_count .cse878) (s_count .cse313))) (res .cse879 .cse880 (cong (* 4 .cse885) (* 4 .cse194)))) (res .cse886 .cse887 (cong (+ arg0 .cse883) (+ arg0 .cse884)))) (cong (+ .cse881 .cse873) (+ .cse882 .cse874)))))) (trans .cse871 .cse872 .cse716))))) (res .cse846 .cse847 (cong (= arg1 .cse871) (= arg1 .cse716)))) (res (= .cse896 .cse544) (let ((.cse910 (= fmt_length fmt_length))) (let-proof ((.cse911 (refl fmt_length))) (res (= .cse897 .cse536) (let ((.cse901 (+ arg0 distance fmt_length (- 4)))) (let ((.cse899 (< arg1 .cse901))) (let ((.cse898 (= .cse899 .cse536))) (res .cse898 (res .cse536 (res .cse899 (=+1 .cse898) (res .cse532 .cse537 (farkas 1 .cse899 1 .cse532))) (res .cse899 (let ((.cse900 (<= .cse901 arg1))) (res .cse900 (total .cse901 arg1) (res .cse532 (res .cse540 .cse541 (farkas 1 .cse900 1 .cse540)) .cse546))) (=+2 .cse898))) (res (= .cse897 .cse899) (res (= .cse902 .cse901) (let ((.cse905 (+ distance fmt_length (- 4)))) (let ((.cse903 (+ arg0 .cse905))) (res (= .cse903 .cse901) (poly+ .cse903 .cse901) (res (= .cse902 .cse903) (res (= .cse904 .cse905) (let ((.cse908 (+ fmt_length (- 4)))) (let ((.cse906 (+ distance .cse908))) (res (= .cse906 .cse905) (poly+ .cse906 .cse905) (res (= .cse904 .cse906) (res (= .cse907 .cse908) (let ((.cse909 (* (- 1) 4))) (res (= .cse909 (- 4)) (poly* .cse909 (- 4)) (res .cse910 .cse911 (let ((.cse912 (+ fmt_length .cse909))) (res (= .cse912 .cse908) (cong (+ fmt_length .cse909) (+ fmt_length (- 4))) (res (= .cse907 .cse912) (-def fmt_length 4) (trans .cse907 .cse912 .cse908))))))) (res (= distance distance) (refl distance) (cong (+ distance .cse907) (+ distance .cse908)))) (trans .cse904 .cse906 .cse905))))) (res .cse886 .cse887 (cong (+ arg0 .cse904) (+ arg0 .cse905)))) (trans .cse902 .cse903 .cse901))))) (res .cse846 .cse847 (cong (< arg1 .cse902) (< arg1 .cse901)))) (trans .cse897 .cse899 .cse536)))))) (res (= .cse913 .cse813) (let ((.cse914 (= .cse918 .cse917))) (res .cse914 (let ((.cse919 (<= .cse916 arg1))) (let ((.cse915 (= .cse918 .cse919))) (res .cse915 (>=def arg1 .cse916) (res .cse917 (res .cse918 (=+1 .cse914) (res .cse919 (=-2 .cse915) (let ((.cse920 (< 0 .cse921))) (res .cse920 (total .cse921 0) (farkas 1 .cse919 1 .cse920))))) (res .cse918 (res .cse919 (let ((.cse922 (< arg1 .cse916))) (res .cse922 (total .cse916 arg1) (farkas 1 .cse922 1 .cse917))) (=-1 .cse915)) (=+2 .cse914)))))) (res (= .cse923 .cse752) (let ((.cse924 (= .cse927 .cse754))) (res .cse924 (let ((.cse928 (< .cse926 fmt1))) (let ((.cse925 (= .cse927 .cse928))) (res .cse925 (>def fmt1 .cse926) (res .cse754 (res .cse927 (=+1 .cse924) (res .cse928 (=-2 .cse925) (res .cse6 (not+ .cse754) (farkas 1 .cse928 1 .cse6)))) (res .cse927 (res .cse928 (let ((.cse929 (<= fmt1 .cse926))) (res .cse929 (total fmt1 .cse926) (res .cse6 (let ((.cse930 (< 0 .cse817))) (res .cse930 (total .cse817 0) (farkas 1 .cse929 1 .cse930))) .cse755))) (=-1 .cse925)) (=+2 .cse924)))))) (res (= .cse931 .cse784) (res (= .cse932 .cse776) (let ((.cse936 (+ fmt0 fmt_length (- 1)))) (let ((.cse934 (< fmt1 .cse936))) (let ((.cse933 (= .cse934 .cse776))) (res .cse933 (res .cse776 (res .cse934 (=+1 .cse933) (res .cse772 .cse777 (farkas 1 .cse934 1 .cse772))) (res .cse934 (let ((.cse935 (<= .cse936 fmt1))) (res .cse935 (total .cse936 fmt1) (res .cse772 (res .cse780 .cse781 (farkas 1 .cse935 1 .cse780)) .cse786))) (=+2 .cse933))) (res (= .cse932 .cse934) (res (= .cse937 .cse936) (let ((.cse940 (+ fmt_length (- 1)))) (let ((.cse938 (+ fmt0 .cse940))) (res (= .cse938 .cse936) (poly+ .cse938 .cse936) (res (= .cse937 .cse938) (res (= .cse939 .cse940) (let ((.cse941 (* (- 1) 1))) (res (= .cse941 (- 1)) (poly* .cse941 (- 1)) (res .cse910 .cse911 (let ((.cse942 (+ fmt_length .cse941))) (res (= .cse942 .cse940) (cong (+ fmt_length .cse941) (+ fmt_length (- 1))) (res (= .cse939 .cse942) (-def fmt_length 1) (trans .cse939 .cse942 .cse940))))))) (res .cse891 .cse892 (cong (+ fmt0 .cse939) (+ fmt0 .cse940)))) (trans .cse937 .cse938 .cse936))))) (res .cse866 .cse867 (cong (< fmt1 .cse937) (< fmt1 .cse936)))) (trans .cse932 .cse934 .cse776)))))) (res (= .cse943 .cse647) (let ((.cse944 (= .cse946 .cse646))) (res .cse944 (let ((.cse947 (<= fmt0 arg1))) (let ((.cse945 (= .cse946 .cse947))) (res .cse945 (>=def arg1 fmt0) (res .cse646 (res .cse946 (=+1 .cse944) (res .cse947 (=-2 .cse945) (res .cse651 .cse652 (farkas 1 .cse947 1 .cse651)))) (res .cse946 (res .cse947 (let ((.cse948 (< arg1 fmt0))) (res .cse948 (total fmt0 arg1) (farkas 1 .cse948 1 .cse646))) (=-1 .cse945)) (=+2 .cse944)))))) (res (= .cse949 .cse486) (res (= .cse950 .cse702) (res (= .cse951 .cse705) (-def fmt0 distance) (res .cse886 .cse887 (cong (= arg0 .cse951) (= arg0 .cse705)))) (res (= .cse365 .cse365) (refl .cse365) (cong (and .cse365 .cse950) (and .cse365 .cse702)))) (cong (and .cse949 .cse946) (and .cse486 .cse646))))) (cong (and .cse943 .cse932) (and .cse647 .cse776)))) (cong (and .cse931 .cse927) (and .cse784 .cse754))))) (cong (and .cse923 .cse918) (and .cse752 .cse917))))) (cong (and .cse913 .cse897) (and .cse813 .cse536)))))) (cong (and .cse896 .cse870) (and .cse544 .cse711)))))) (res (= .cse800 .cse800) (refl .cse800) (cong (and .cse800 .cse869) (and .cse800 .cse712)))) (cong (and .cse868 .cse834) (and .cse808 .cse835)))))) (cong (and .cse833 .cse832) (and .cse821 .cse832)))) (cong (and .cse831 .cse814) (and .cse822 .cse814)))) (cong (and .cse830 .cse818) (and .cse815 .cse818)))) (cong (=> .cse829 .cse828) (=> .cse819 .cse828)))) (cong (not .cse824) (not .cse823))) (=-2 .cse827)))) (not- .cse825))) (res .cse826 (assume .cse826) (not- .cse826)))))))))))))))))))))))) (let-proof ((.cse816 (res .cse819 .cse820 (and- 0 .cse819)))) (let-proof ((.cse809 (res .cse821 (res .cse822 (res .cse815 .cse816 (and- 0 .cse815)) (and- 0 .cse822)) (and- 0 .cse821))) (.cse301 (res .cse818 (res .cse819 .cse820 (and- 1 .cse819)) (and- 0 .cse818)))) (let ((.cse788 (+ fmt1 .cse455 (- 3)))) (let-proof ((.cse223 (res .cse300 .cse301 (and- 0 .cse300))) (.cse713 (res .cse808 .cse809 (and- 1 .cse808)))) (let ((.cse554 (* (- 1) fmt_length)) (.cse757 (+ fmt1 .cse455 (- 4))) (.cse153 (<= .cse788 0)) (.cse760 (< 0 .cse313)) (.cse155 (<= .cse313 0)) (.cse165 (<= 1 .cse817)) (.cse761 (< .cse313 0))) (let-proof ((.cse166 (total-int .cse817 0)) (.cse626 (res .cse814 (res .cse815 .cse816 (and- 1 .cse815)) (and- 0 .cse814))) (.cse545 (res .cse712 .cse713 (and- 0 .cse712))) (.cse746 (res .cse222 .cse223 (and- 0 .cse222)))) (let ((.cse797 (+ .cse289 (- 1))) (.cse1 (= .cse313 0)) (.cse5 (= .cse788 0)) (.cse2 (= .cse757 0)) (.cse3 (<= .cse757 0)) (.cse414 (<= 1 .cse788)) (.cse783 (+ fmt1 .cse455 .cse554 2)) (.cse768 (+ fmt_length (- 6)))) (let-proof ((.cse733 (res .cse745 .cse746 (and- 0 .cse745))) (.cse753 (res .cse813 (res .cse544 .cse545 (and- 0 .cse544)) (and- 0 .cse813))) (.cse631 (res .cse625 .cse626 (and- 0 .cse625))) (.cse613 (res .cse761 (res .cse760 (trichotomy .cse313 0) (farkas 1 .cse760 1 .cse155)) (res .cse165 .cse166 (farkas 1 .cse165 1 .cse761)))) (.cse742 (let ((.cse810 (< .cse788 0))) (res .cse810 (let ((.cse811 (< 0 .cse788))) (res .cse811 (trichotomy .cse788 0) (farkas 1 .cse811 1 .cse153))) (let ((.cse812 (<= 1 .cse313))) (res .cse812 (total-int .cse313 0) (farkas 1 .cse812 1 .cse810)))))) (.cse415 (total-int .cse788 0)) (.cse801 (res .cse808 .cse809 (and- 0 .cse808)))) (let ((.cse434 (= .cse768 0)) (.cse431 (<= .cse783 0)) (.cse30 (= .cse55 .cse194)) (.cse9 (= 1 .cse313)) (.cse397 (= .cse54 .cse194)) (.cse193 (= .cse56 .cse194)) (.cse14 (= 2 .cse313)) (.cse741 (* (- 1) .cse55)) (.cse611 (= .cse289 .cse185)) (.cse0 (= 0 .cse313)) (.cse643 (= 0 .cse797)) (.cse172 (= .cse797 0)) (.cse475 (* (- 1) .cse185)) (.cse740 (* (- 1) .cse194)) (.cse552 (* (- 1) arg0)) (.cse728 (* (- 1) .cse54)) (.cse729 (* (- 1) .cse289))) (let-proof ((.cse694 (res .cse804 (res .cse805 (res .cse806 (res .cse807 (res .cse800 .cse801 (and- 0 .cse800)) (and- 0 .cse807)) (and- 0 .cse806)) (and- 0 .cse805)) (and- 0 .cse804))) (.cse154 (! (let ((.cse802 (< .cse757 0))) (res .cse802 (let ((.cse803 (< 0 .cse757))) (res .cse803 (trichotomy .cse757 0) (farkas 1 .cse803 1 .cse3))) (res .cse414 .cse415 (farkas 1 .cse414 1 .cse802)))) :proves (+ .cse153 + .cse2 - .cse3) :trichotomy)) (.cse156 (! .cse742 :proves (+ .cse155 + .cse5 - .cse153) :trichotomy)) (.cse417 (! .cse613 :proves (- .cse155 + .cse1 + .cse6) :trichotomy)) (.cse748 (res .cse800 .cse801 (and- 1 .cse800))) (.cse744 (res .cse630 .cse631 (and- 0 .cse630))) (.cse785 (res .cse752 .cse753 (and- 0 .cse752))) (.cse737 (res .cse732 .cse733 (and- 0 .cse732))) (.cse644 (symm 0 .cse797))) (let ((.cse645 (+ .cse184 .cse729)) (.cse555 (+ .cse55 .cse728)) (.cse734 (+ arg1 .cse455 1)) (.cse708 (+ fmt0 .cse552 .cse553)) (.cse599 (+ .cse55 .cse740)) (.cse699 (+ distance (- 11))) (.cse568 (+ .cse184 .cse475)) (.cse11 (= .cse184 .cse185)) (.cse493 (* (- 1) .cse184)) (.cse498 (= 115 120)) (.cse719 (+ arg1 .cse552 (* (- 4) .cse194) (* (- 4) .cse185))) (.cse684 (+ .cse56 .cse741 (- 1))) (.cse231 (= .cse233 .cse185)) (.cse654 (+ .cse56 .cse740)) (.cse663 (+ .cse54 (- 1))) (.cse207 (= 120 x)) (.cse213 (= 115 s)) (.cse61 (= .cse55 .cse56))) (let-proof ((.cse122 (! (and- 1 .cse119) :proves (- .cse119 + .cse121) :input)) (.cse173 (! (res .cse791 (res .cse119 (and+ .cse119) (res .cse792 (res .cse736 .cse737 (and- 0 .cse736)) (=>- .cse792))) (let ((.cse793 (= .cse791 .cse172))) (res .cse793 (res .cse172 (res .cse791 (=+1 .cse793) (let ((.cse794 (= 1 .cse289))) (res .cse794 (symm 1 .cse289) (let ((.cse795 (< .cse797 0))) (res .cse795 (let ((.cse796 (< 0 .cse797))) (res .cse796 (trichotomy .cse797 0) (farkas 1 .cse791 1 .cse796))) (farkas 1 .cse794 1 .cse795)))))) (res .cse791 (res .cse643 .cse644 (let ((.cse798 (< .cse289 1))) (res .cse798 (let ((.cse799 (< 1 .cse289))) (res .cse799 (trichotomy .cse289 1) (farkas 1 .cse172 1 .cse799))) (farkas 1 .cse643 1 .cse798)))) (=+2 .cse793))) (=-2 .cse793)))) :proves (- .cse170 - .cse121 + .cse172) :input)) (.cse612 (! (cong (x_count 0) (x_count .cse313)) :proves (+ .cse611 - .cse0) :cong (.cse289 .cse185))) (.cse648 (res .cse784 .cse785 (and- 0 .cse784))) (.cse731 (res .cse743 .cse744 (and- 0 .cse743))) (.cse500 (symm x 120)) (.cse570 (res .cse747 .cse748 (and- 0 .cse747))) (.cse236 (! (cong (s_count 2) (s_count .cse313)) :proves (+ .cse193 - .cse14) :cong (.cse56 .cse194))) (.cse62 (symm .cse55 .cse56)) (.cse398 (! (cong (s_count 0) (s_count .cse313)) :proves (+ .cse397 - .cse0) :cong (.cse54 .cse194))) (.cse136 (res .cse153 .cse154 (res .cse155 .cse156 .cse417))) (.cse10 (! (let ((.cse787 (= 0 .cse788))) (res .cse787 (symm 0 .cse788) (let ((.cse789 (< 1 .cse313))) (res .cse789 (let ((.cse790 (< .cse313 1))) (res .cse790 (trichotomy 1 .cse313) (farkas 1 .cse787 1 .cse790))) (farkas 1 .cse5 1 .cse789))))) :proves (+ .cse9 - .cse5) :EQ)) (.cse239 (! (cong (s_count 1) (s_count .cse313)) :proves (+ .cse30 - .cse9) :cong (.cse55 .cse194))) (.cse432 (! (res .cse772 (let ((.cse773 (not .cse431))) (let-proof ((.cse774 (not+ .cse773))) (res .cse773 .cse774 (let ((.cse775 (not .cse773))) (res .cse775 (res .cse776 .cse777 (let ((.cse778 (= .cse776 .cse775))) (res .cse778 (let ((.cse779 (= .cse772 .cse773))) (res .cse779 (res .cse773 (res .cse772 (=+1 .cse779) (res .cse431 .cse774 (farkas 1 .cse772 1 .cse431))) (res .cse772 (res .cse780 .cse781 (res .cse431 (let ((.cse782 (<= 1 .cse783))) (res .cse782 (total-int .cse783 0) (farkas 1 .cse780 1 .cse782))) (not- .cse773))) (=+2 .cse779))) (cong (not .cse772) (not .cse773)))) (=-2 .cse778)))) (not- .cse775)))))) (res .cse784 .cse785 (res .cse776 (and- 1 .cse784) .cse786))) :proves (+ .cse431) :input)) (.cse435 (! (res .cse763 (res .cse693 .cse694 (and- 1 .cse693)) (let ((.cse764 (= .cse763 .cse434))) (res .cse764 (res .cse434 (res .cse763 (=+1 .cse764) (let ((.cse765 (= 6 fmt_length))) (res .cse765 (symm 6 fmt_length) (let ((.cse766 (< .cse768 0))) (res .cse766 (let ((.cse767 (< 0 .cse768))) (res .cse767 (trichotomy .cse768 0) (farkas 1 .cse763 1 .cse767))) (farkas 1 .cse765 1 .cse766)))))) (res .cse763 (let ((.cse769 (= 0 .cse768))) (res .cse769 (symm 0 .cse768) (let ((.cse770 (< fmt_length 6))) (res .cse770 (let ((.cse771 (< 6 fmt_length))) (res .cse771 (trichotomy fmt_length 6) (farkas 1 .cse434 1 .cse771))) (farkas 1 .cse769 1 .cse770))))) (=+2 .cse764))) (=-2 .cse764)))) :proves (+ .cse434) :input))) (let ((.cse634 (+ .cse184 (- 1))) (.cse216 (= s .cse95)) (.cse270 (= .cse663 0)) (.cse195 (= .cse654 0)) (.cse310 (= .cse194 .cse56)) (.cse115 (= .cse185 0)) (.cse113 (= 0 .cse185)) (.cse234 (= .cse184 .cse233)) (.cse229 (= .cse684 0)) (.cse59 (= .cse54 .cse55)) (.cse503 (= 0 .cse719)) (.cse622 (+ .cse56 .cse741)) (.cse616 (+ .cse58 .cse740)) (.cse602 (+ fmt1 .cse493 .cse455 (- 2))) (.cse608 (+ fmt1 .cse493 .cse455 (- 1))) (.cse135 (= .cse184 .cse313)) (.cse19 (= .cse568 0)) (.cse77 (= .cse699 0)) (.cse150 (= .cse599 0)) (.cse71 (= .cse708 0)) (.cse21 (<= .cse734 0)) (.cse225 (= .cse555 0)) (.cse87 (= 0 .cse568)) (.cse85 (= 0 .cse699)) (.cse265 (= 0 .cse599)) (.cse83 (= 0 .cse708)) (.cse34 (= .cse719 0)) (.cse79 (<= 1 .cse734)) (.cse147 (= .cse645 0)) (.cse382 (= .cse289 .cse184)) (.cse594 (+ .cse184 .cse729 (- 1))) (.cse581 (+ .cse55 .cse728 (- 1))) (.cse495 (< 0 .cse289)) (.cse111 (= 0 .cse289)) (.cse494 (< .cse289 0))) (let-proof ((.cse4 (! (res .cse431 .cse432 (res .cse434 .cse435 (! (let ((.cse762 (<= 1 .cse757))) (res .cse762 (total-int .cse757 0) (farkas 1 .cse434 1 .cse762 1 .cse431))) :proves (- .cse434 + .cse3 - .cse431) :LA (1 (- 1) 1)))) :proves (+ .cse3) :rup)) (.cse142 (res .cse5 .cse136 (res .cse9 .cse10 .cse239))) (.cse110 (! (res .cse0 (symm 0 .cse313) (res .cse760 (res .cse761 (trichotomy 0 .cse313) (farkas 1 .cse0 1 .cse761)) (farkas 1 .cse1 1 .cse760))) :proves (+ .cse0 - .cse1) :EQ)) (.cse240 (res .cse397 .cse398 (! (trans .cse55 .cse54 .cse194) :proves (+ .cse30 - .cse38 - .cse397) :trans (.cse55 .cse54 .cse194)))) (.cse15 (! (let ((.cse756 (= 0 .cse757))) (res .cse756 (symm 0 .cse757) (let ((.cse758 (< 2 .cse313))) (res .cse758 (let ((.cse759 (< .cse313 2))) (res .cse759 (trichotomy 2 .cse313) (farkas 1 .cse756 1 .cse759))) (farkas 1 .cse2 1 .cse758))))) :proves (+ .cse14 - .cse2) :EQ)) (.cse143 (res .cse193 .cse236 (! (res .cse61 .cse62 (trans .cse55 .cse56 .cse194)) :proves (+ .cse30 - .cse24 - .cse193) :trans (.cse55 .cse56 .cse194)))) (.cse8 (! (res .cse752 .cse753 (res .cse754 (and- 1 .cse752) .cse755)) :proves (- .cse6) :input)) (.cse214 (! (res .cse750 (res .cse569 .cse570 (and- 1 .cse569)) (let ((.cse751 (= .cse750 .cse213))) (res .cse751 (res .cse213 (res .cse750 (=+1 .cse751) (symm 115 s)) (res .cse750 (symm s 115) (=+2 .cse751))) (=-2 .cse751)))) :proves (+ .cse213) :input)) (.cse208 (! (res .cse499 (res .cse747 .cse748 (and- 1 .cse747)) (let ((.cse749 (= .cse499 .cse207))) (res .cse749 (res .cse207 (res .cse499 (=+1 .cse749) (symm 120 x)) (res .cse499 .cse500 (=+2 .cse749))) (=-2 .cse749)))) :proves (+ .cse207) :input)) (.cse217 (symm s .cse95)) (.cse658 (res .cse730 .cse731 (and- 0 .cse730))) (.cse232 (! (cong (x_count 2) (x_count .cse313)) :proves (+ .cse231 - .cse14) :cong (.cse233 .cse185))) (.cse235 (symm .cse184 .cse233)) (.cse514 (res .cse745 .cse746 (and- 1 .cse745))) (.cse678 (res .cse743 .cse744 (and- 1 .cse743))) (.cse416 (! .cse742 :proves (- .cse153 + .cse5 + .cse155) :trichotomy)) (.cse60 (symm .cse54 .cse55)) (.cse487 (res .cse647 .cse648 (and- 0 .cse647))) (.cse504 (symm 0 .cse719)) (.cse501 (! (let ((.cse739 (= 120 115))) (res .cse739 (symm 120 115) (farkas 1 .cse739))) :proves (- .cse498) :EQ)) (.cse384 (res .cse611 .cse612 (! (trans .cse184 .cse289 .cse185) :proves (+ .cse11 - .cse132 - .cse611) :trans (.cse184 .cse289 .cse185)))) (.cse120 (! (res .cse735 (res .cse736 .cse737 (and- 1 .cse736)) (res .cse738 (not+ .cse738) (=>- .cse735))) :proves (+ .cse119 + .cse69) :input)) (.cse600 (res .cse121 .cse122 .cse173)) (.cse80 (total-int .cse734 0)) (.cse84 (symm 0 .cse708)) (.cse266 (symm 0 .cse599)) (.cse86 (symm 0 .cse699)) (.cse88 (symm 0 .cse568)) (.cse383 (symm .cse289 .cse184)) (.cse588 (res .cse732 .cse733 (and- 1 .cse732))) (.cse575 (res .cse730 .cse731 (and- 1 .cse730)))) (let ((.cse328 (= .cse185 .cse184)) (.cse215 (= 115 37)) (.cse205 (= 37 percent)) (.cse209 (= 120 37)) (.cse197 (= .cse581 0)) (.cse473 (= 0 .cse594)) (.cse73 (= .cse594 0)) (.cse163 (<= .cse608 0)) (.cse162 (= .cse602 0)) (.cse152 (<= .cse602 0)) (.cse140 (= .cse194 0)) (.cse141 (= 0 .cse194)) (.cse40 (= 0 .cse54)) (.cse22 (= .cse616 0)) (.cse191 (= .cse622 0)) (.cse23 (= .cse194 .cse58)) (.cse399 (= .cse194 .cse55)) (.cse63 (= .cse57 .cse58)) (.cse65 (= .cse56 .cse57)) (.cse199 (= 0 .cse654)) (.cse174 (= .cse634 0)) (.cse160 (= 0 .cse645)) (.cse178 (= 1 .cse185)) (.cse176 (= 1 .cse184))) (let-proof ((.cse444 (symm .cse185 .cse184)) (.cse290 (symm .cse289 0)) (.cse157 (symm 0 .cse289)) (.cse497 (farkas 1 .cse111 1 .cse494)) (.cse496 (farkas 1 .cse69 1 .cse495)) (.cse211 (symm percent 37)) (.cse474 (symm 0 .cse594)) (.cse128 (! (res .cse726 (res .cse574 .cse575 (and- 1 .cse574)) (res .cse727 (not+ .cse727) (=>- .cse726))) :proves (+ .cse127 + .cse38) :input)) (.cse133 (! (res .cse724 (res .cse587 .cse588 (and- 1 .cse587)) (res .cse725 (not+ .cse725) (=>- .cse724))) :proves (+ .cse124 + .cse132) :input)) (.cse148 (! (res .cse382 .cse383 (let ((.cse722 (< .cse645 0))) (res .cse722 (let ((.cse723 (< 0 .cse645))) (res .cse723 (trichotomy .cse645 0) (farkas 1 .cse132 1 .cse723))) (farkas 1 .cse382 1 .cse722)))) :proves (- .cse132 + .cse147) :EQ)) (.cse171 (! (and- 0 .cse119) :proves (- .cse119 + .cse170) :input)) (.cse460 (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (res .cse87 .cse88 (farkas 4 .cse225 4 .cse87 4 .cse41 1 .cse85 4 .cse147 4 .cse265 1 .cse83 4 .cse69 1 .cse34 1 .cse79)))))) :proves (- .cse225 - .cse19 - .cse41 - .cse77 - .cse147 - .cse150 - .cse71 - .cse69 - .cse34 + .cse21) :LA (4 (- 4) 4 (- 1) 4 (- 4) (- 1) 4 1 (- 1)))) (.cse461 (res .cse119 .cse120 .cse600)) (.cse126 (! (and- 0 .cse124) :proves (- .cse124 + .cse46) :input)) (.cse169 (! (and- 0 .cse127) :proves (- .cse127 + .cse46) :input)) (.cse138 (res .cse0 (! (res .cse382 .cse383 (trans 0 .cse289 .cse184 .cse313)) :proves (+ .cse0 - .cse111 - .cse132 - .cse135) :trans (0 .cse289 .cse184 .cse313)) .cse384)) (.cse505 (symm 0 .cse54)) (.cse339 (res .cse498 (! (res .cse499 .cse500 (res (= s .cse105) (symm s .cse105) (trans 115 s .cse105 x 120))) :proves (+ .cse498 - .cse213 - .cse104 - .cse74 - .cse207) :trans (115 s .cse105 x 120)) .cse501)) (.cse400 (symm .cse194 .cse55)) (.cse64 (symm .cse57 .cse58)) (.cse66 (symm .cse56 .cse57)) (.cse35 (! (res .cse711 (res .cse712 .cse713 (and- 1 .cse712)) (let ((.cse714 (= .cse711 .cse34))) (res .cse714 (res .cse34 (res .cse711 (=+1 .cse714) (let ((.cse715 (= .cse716 arg1))) (res .cse715 (symm .cse716 arg1) (let ((.cse717 (< .cse719 0))) (res .cse717 (let ((.cse718 (< 0 .cse719))) (res .cse718 (trichotomy .cse719 0) (farkas 1 .cse711 1 .cse718))) (farkas 1 .cse715 1 .cse717)))))) (res .cse711 (res .cse503 .cse504 (let ((.cse720 (< arg1 .cse716))) (res .cse720 (let ((.cse721 (< .cse716 arg1))) (res .cse721 (trichotomy arg1 .cse716) (farkas 1 .cse34 1 .cse721))) (farkas 1 .cse503 1 .cse720)))) (=+2 .cse714))) (=-2 .cse714)))) :proves (+ .cse34) :input)) (.cse72 (! (res .cse702 (res .cse486 .cse487 (and- 1 .cse486)) (let ((.cse703 (= .cse702 .cse71))) (res .cse703 (res .cse71 (res .cse702 (=+1 .cse703) (let ((.cse704 (= .cse705 arg0))) (res .cse704 (symm .cse705 arg0) (let ((.cse706 (< .cse708 0))) (res .cse706 (let ((.cse707 (< 0 .cse708))) (res .cse707 (trichotomy .cse708 0) (farkas 1 .cse704 1 .cse707))) (farkas 1 .cse702 1 .cse706)))))) (res .cse702 (res .cse83 .cse84 (let ((.cse709 (< arg0 .cse705))) (res .cse709 (let ((.cse710 (< .cse705 arg0))) (res .cse710 (trichotomy arg0 .cse705) (farkas 1 .cse83 1 .cse710))) (farkas 1 .cse71 1 .cse709)))) (=+2 .cse703))) (=-2 .cse703)))) :proves (+ .cse71) :input)) (.cse78 (! (res .cse692 (res .cse693 .cse694 (and- 0 .cse693)) (let ((.cse695 (= .cse692 .cse77))) (res .cse695 (res .cse77 (res .cse692 (=+1 .cse695) (let ((.cse696 (= 11 distance))) (res .cse696 (symm 11 distance) (let ((.cse697 (< .cse699 0))) (res .cse697 (let ((.cse698 (< 0 .cse699))) (res .cse698 (trichotomy .cse699 0) (farkas 1 .cse692 1 .cse698))) (farkas 1 .cse696 1 .cse697)))))) (res .cse692 (res .cse85 .cse86 (let ((.cse700 (< distance 11))) (res .cse700 (let ((.cse701 (< 11 distance))) (res .cse701 (trichotomy distance 11) (farkas 1 .cse77 1 .cse701))) (farkas 1 .cse85 1 .cse700)))) (=+2 .cse695))) (=-2 .cse695)))) :proves (+ .cse77) :input)) (.cse226 (! (res .cse59 .cse60 (let ((.cse690 (< .cse555 0))) (res .cse690 (let ((.cse691 (< 0 .cse555))) (res .cse691 (trichotomy .cse555 0) (farkas 1 .cse38 1 .cse691))) (farkas 1 .cse59 1 .cse690)))) :proves (- .cse38 + .cse225) :EQ)) (.cse180 (res .cse155 (res .cse153 .cse154 .cse416) .cse417)) (.cse203 (! (res .cse688 (res .cse677 .cse678 (and- 1 .cse677)) (res .cse689 (not+ .cse689) (=>- .cse688))) :proves (+ .cse202 + .cse24) :input)) (.cse204 (! (and- 1 .cse202) :proves (- .cse202 + .cse50) :input)) (.cse228 (! (and- 0 .cse202) :proves (- .cse202 + .cse227) :input)) (.cse230 (! (res .cse675 (res .cse202 (and+ .cse202) (res .cse676 (res .cse677 .cse678 (and- 0 .cse677)) (=>- .cse676))) (let ((.cse679 (= .cse675 .cse229))) (res .cse679 (res .cse229 (res .cse675 (=+1 .cse679) (let ((.cse680 (= .cse681 .cse56))) (res .cse680 (symm .cse681 .cse56) (let ((.cse682 (< .cse684 0))) (res .cse682 (let ((.cse683 (< 0 .cse684))) (res .cse683 (trichotomy .cse684 0) (farkas 1 .cse675 1 .cse683))) (farkas 1 .cse680 1 .cse682)))))) (res .cse675 (let ((.cse685 (= 0 .cse684))) (res .cse685 (symm 0 .cse684) (let ((.cse686 (< .cse56 .cse681))) (res .cse686 (let ((.cse687 (< .cse681 .cse56))) (res .cse687 (trichotomy .cse56 .cse681) (farkas 1 .cse229 1 .cse687))) (farkas 1 .cse685 1 .cse686))))) (=+2 .cse679))) (=-2 .cse679)))) :proves (+ .cse229 - .cse50 - .cse227) :input)) (.cse181 (! (res .cse673 (res .cse513 .cse514 (and- 1 .cse513)) (res .cse674 (not+ .cse674) (=>- .cse673))) :proves (+ .cse179 + .cse16) :input)) (.cse309 (res .cse231 .cse232 (! (res .cse234 .cse235 (res .cse382 .cse383 (trans 0 .cse289 .cse184 .cse233 .cse185))) :proves (+ .cse113 - .cse111 - .cse132 - .cse16 - .cse231) :trans (0 .cse289 .cse184 .cse233 .cse185)))) (.cse116 (! (res .cse115 (symm .cse185 0) (let ((.cse671 (< .cse185 0))) (res .cse671 (let ((.cse672 (< 0 .cse185))) (res .cse672 (trichotomy .cse185 0) (farkas 1 .cse115 1 .cse672))) (farkas 1 .cse113 1 .cse671)))) :proves (- .cse113 + .cse115) :EQ)) (.cse196 (! (res .cse310 (symm .cse194 .cse56) (let ((.cse669 (< .cse654 0))) (res .cse669 (let ((.cse670 (< 0 .cse654))) (res .cse670 (trichotomy .cse654 0) (farkas 1 .cse193 1 .cse670))) (farkas 1 .cse310 1 .cse669)))) :proves (- .cse193 + .cse195) :EQ)) (.cse43 (! (res .cse667 (res .cse657 .cse658 (and- 1 .cse657)) (res .cse668 (not+ .cse668) (=>- .cse667))) :proves (+ .cse42 + .cse41) :input)) (.cse45 (! (and- 1 .cse42) :proves (- .cse42 + .cse44) :input)) (.cse269 (! (and- 0 .cse42) :proves (- .cse42 + .cse170) :input)) (.cse271 (! (res .cse655 (res .cse42 (and+ .cse42) (res .cse656 (res .cse657 .cse658 (and- 0 .cse657)) (=>- .cse656))) (let ((.cse659 (= .cse655 .cse270))) (res .cse659 (res .cse270 (res .cse655 (=+1 .cse659) (let ((.cse660 (= 1 .cse54))) (res .cse660 (symm 1 .cse54) (let ((.cse661 (< .cse663 0))) (res .cse661 (let ((.cse662 (< 0 .cse663))) (res .cse662 (trichotomy .cse663 0) (farkas 1 .cse655 1 .cse662))) (farkas 1 .cse660 1 .cse661)))))) (res .cse655 (let ((.cse664 (= 0 .cse663))) (res .cse664 (symm 0 .cse663) (let ((.cse665 (< .cse54 1))) (res .cse665 (let ((.cse666 (< 1 .cse54))) (res .cse666 (trichotomy .cse54 1) (farkas 1 .cse270 1 .cse666))) (farkas 1 .cse664 1 .cse665))))) (=+2 .cse659))) (=-2 .cse659)))) :proves (+ .cse270 - .cse44 - .cse170) :input)) (.cse200 (symm 0 .cse654)) (.cse183 (! (and- 1 .cse179) :proves (- .cse179 + .cse94) :input)) (.cse318 (! (res .cse213 .cse214 (res .cse207 .cse208 (res .cse498 (! (res .cse499 .cse500 (res .cse216 .cse217 (trans 115 s .cse95 x 120))) :proves (+ .cse498 - .cse213 - .cse50 - .cse94 - .cse207) :trans (115 s .cse95 x 120)) .cse501))) :proves (- .cse50 - .cse94) :rup)) (.cse118 (! (res .cse3 .cse4 (res .cse6 (res .cse14 (res .cse2 (res .cse0 (res .cse1 .cse142 .cse110) .cse240) .cse15) .cse143) .cse8)) :proves (+ .cse30 - .cse38 - .cse24) :rup)) (.cse109 (! (res .cse646 (res .cse647 .cse648 (and- 1 .cse647)) (let ((.cse649 (not .cse21))) (let-proof ((.cse653 (not- .cse649))) (res .cse649 (let ((.cse650 (= .cse646 .cse649))) (res .cse650 (res .cse649 (res .cse646 (=+1 .cse650) (res .cse21 (not+ .cse649) (farkas 1 .cse646 1 .cse21))) (res .cse646 (res .cse651 .cse652 (res .cse21 (res .cse79 .cse80 (farkas 1 .cse651 1 .cse79)) .cse653)) (=+2 .cse650))) (=-2 .cse650))) .cse653)))) :proves (- .cse21) :input)) (.cse161 (symm 0 .cse645))) (let ((.cse187 (= x .cse95)) (.cse81 (= 0 .cse616)) (.cse97 (= percent .cse96)) (.cse158 (<= 1 .cse602))) (let-proof ((.cse188 (symm x .cse95)) (.cse182 (res .cse611 .cse612 (! (trans 1 .cse184 .cse289 .cse185) :proves (+ .cse178 - .cse176 - .cse132 - .cse611) :trans (1 .cse184 .cse289 .cse185)))) (.cse175 (let ((.cse637 (<= .cse634 0))) (res .cse637 (! (let ((.cse638 (<= 1 .cse634))) (res .cse638 (total-int .cse634 0) (farkas 1 .cse638 1 .cse172 1 .cse147))) :proves (+ .cse637 - .cse172 - .cse147) :LA ((- 1) 1 1)) (let ((.cse639 (<= .cse184 0))) (res .cse639 (! (let ((.cse640 (< .cse634 0))) (res .cse640 (let ((.cse641 (< 0 .cse634))) (res .cse641 (trichotomy .cse634 0) (farkas 1 .cse641 1 .cse637))) (let ((.cse642 (<= 1 .cse184))) (res .cse642 (total-int .cse184 0) (farkas 1 .cse642 1 .cse640))))) :proves (+ .cse639 + .cse174 - .cse637) :trichotomy) (! (res .cse160 .cse161 (res .cse643 .cse644 (farkas 1 .cse643 1 .cse160 1 .cse639))) :proves (- .cse172 - .cse147 - .cse639) :LA ((- 1) (- 1) 1))))))) (.cse177 (! (let ((.cse633 (= 0 .cse634))) (res .cse633 (symm 0 .cse634) (let ((.cse635 (< 1 .cse184))) (res .cse635 (let ((.cse636 (< .cse184 1))) (res .cse636 (trichotomy 1 .cse184) (farkas 1 .cse633 1 .cse636))) (farkas 1 .cse174 1 .cse635))))) :proves (+ .cse176 - .cse174) :EQ)) (.cse149 (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (res .cse225 .cse226 (res .cse9 (res .cse5 (res .cse24 (res .cse0 (res .cse1 (res .cse2 .cse180 (res .cse14 .cse15 (res .cse202 .cse203 (res .cse50 .cse204 (res .cse227 .cse228 (res .cse229 .cse230 (res .cse94 (res .cse179 (res .cse16 .cse181 (res .cse113 .cse309 (res .cse193 .cse236 (res .cse115 .cse116 (res .cse195 .cse196 (res .cse41 (res .cse270 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse170 .cse269 .cse271))) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse199 .cse200 (res .cse85 .cse86 (farkas 4 .cse229 4 .cse225 1 .cse85 4 .cse199 1 .cse83 4 .cse115 1 .cse34 4 .cse270 1 .cse79))))) :proves (- .cse229 - .cse225 - .cse77 - .cse195 - .cse71 - .cse115 - .cse34 - .cse270 + .cse21) :LA (4 4 (- 1) (- 4) (- 1) 4 1 4 (- 1)))) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse199 .cse200 (res .cse85 .cse86 (farkas 4 .cse229 4 .cse225 4 .cse41 1 .cse85 4 .cse199 1 .cse83 4 .cse115 1 .cse34 1 .cse79))))) :proves (- .cse229 - .cse225 - .cse41 - .cse77 - .cse195 - .cse71 - .cse115 - .cse34 + .cse21) :LA (4 4 4 (- 1) (- 4) (- 1) 4 1 (- 1))))))))) .cse183) .cse318))))))) .cse110) .cse240) .cse118) .cse10) .cse239))) .cse8)))) .cse109) :proves (- .cse38 + .cse30 - .cse111 - .cse132) :rup)) (.cse18 (res .cse231 .cse232 (! (res .cse234 .cse235 (trans .cse184 .cse233 .cse185)) :proves (+ .cse11 - .cse16 - .cse231) :trans (.cse184 .cse233 .cse185)))) (.cse101 (! (res .cse628 (res .cse629 (res .cse630 .cse631 (and- 1 .cse630)) (and- 1 .cse629)) (res .cse632 (not+ .cse632) (=>- .cse628))) :proves (+ .cse100 + .cse26) :input)) (.cse90 (! (res .cse623 (res .cse624 (res .cse625 .cse626 (and- 1 .cse625)) (and- 1 .cse624)) (res .cse627 (not+ .cse627) (=>- .cse623))) :proves (+ .cse89 + .cse28) :input)) (.cse32 (! (res .cse399 .cse400 (res .cse61 .cse62 (res .cse63 .cse64 (res .cse65 .cse66 (trans .cse194 .cse55 .cse56 .cse57 .cse58))))) :proves (+ .cse23 - .cse30 - .cse24 - .cse26 - .cse28) :trans (.cse194 .cse55 .cse56 .cse57 .cse58))) (.cse192 (! (res .cse61 .cse62 (let ((.cse620 (< .cse622 0))) (res .cse620 (let ((.cse621 (< 0 .cse622))) (res .cse621 (trichotomy .cse622 0) (farkas 1 .cse24 1 .cse621))) (farkas 1 .cse61 1 .cse620)))) :proves (- .cse24 + .cse191) :EQ)) (.cse33 (! (let ((.cse617 (= .cse58 .cse194))) (res .cse617 (symm .cse58 .cse194) (let ((.cse618 (< .cse616 0))) (res .cse618 (let ((.cse619 (< 0 .cse616))) (res .cse619 (trichotomy .cse616 0) (farkas 1 .cse617 1 .cse619))) (farkas 1 .cse23 1 .cse618))))) :proves (- .cse23 + .cse22) :EQ)) (.cse82 (symm 0 .cse616)) (.cse201 (! (res .cse59 .cse60 (trans 0 .cse54 .cse55 .cse194)) :proves (+ .cse141 - .cse40 - .cse38 - .cse30) :trans (0 .cse54 .cse55 .cse194))) (.cse130 (! (res .cse213 .cse214 (res .cse207 .cse208 .cse339)) :proves (- .cse74 - .cse104) :rup)) (.cse103 (! (and- 1 .cse100) :proves (- .cse100 + .cse102) :input)) (.cse98 (symm percent .cse96)) (.cse144 (res .cse397 .cse398 (! (trans 0 .cse54 .cse194) :proves (+ .cse141 - .cse40 - .cse397) :trans (0 .cse54 .cse194)))) (.cse145 (! (res .cse140 (symm .cse194 0) (let ((.cse614 (< .cse194 0))) (res .cse614 (let ((.cse615 (< 0 .cse194))) (res .cse615 (trichotomy .cse194 0) (farkas 1 .cse140 1 .cse615))) (farkas 1 .cse141 1 .cse614)))) :proves (- .cse141 + .cse140) :EQ)) (.cse7 (res .cse153 .cse154 (res .cse155 .cse156 (! .cse613 :proves (+ .cse6 + .cse1 - .cse155) :trichotomy)))) (.cse114 (res .cse611 .cse612 (! (trans 0 .cse289 .cse185) :proves (+ .cse113 - .cse111 - .cse611) :trans (0 .cse289 .cse185)))) (.cse53 (! (res .cse40 .cse505 (let ((.cse609 (< 0 .cse54))) (res .cse609 (let ((.cse610 (< .cse54 0))) (res .cse610 (trichotomy 0 .cse54) (farkas 1 .cse40 1 .cse610))) (farkas 1 .cse41 1 .cse609)))) :proves (+ .cse40 - .cse41) :EQ)) (.cse159 (total-int .cse602 0)) (.cse164 (! (let ((.cse605 (< .cse602 0))) (res .cse605 (let ((.cse606 (< 0 .cse602))) (res .cse606 (trichotomy .cse602 0) (farkas 1 .cse606 1 .cse152))) (let ((.cse607 (<= 1 .cse608))) (res .cse607 (total-int .cse608 0) (farkas 1 .cse607 1 .cse605))))) :proves (+ .cse163 + .cse162 - .cse152) :trichotomy)) (.cse167 (res .cse135 (! (let ((.cse601 (= 0 .cse602))) (res .cse601 (symm 0 .cse602) (let ((.cse603 (< .cse184 .cse313))) (res .cse603 (let ((.cse604 (< .cse313 .cse184))) (res .cse604 (trichotomy .cse184 .cse313) (farkas 1 .cse601 1 .cse604))) (farkas 1 .cse162 1 .cse603))))) :proves (+ .cse135 - .cse162) :EQ) .cse138)) (.cse168 (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse77 .cse78 (res .cse127 (res .cse124 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse42 (res .cse41 .cse43 (res .cse69 (res .cse172 (res .cse119 .cse120 (res .cse170 .cse171 .cse600)) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (res .cse87 .cse88 (farkas 4 .cse225 4 .cse87 4 .cse41 1 .cse85 4 .cse172 4 .cse147 4 .cse265 1 .cse83 1 .cse34 1 .cse79)))))) :proves (- .cse225 - .cse19 - .cse41 - .cse77 - .cse172 - .cse147 - .cse150 - .cse71 - .cse34 + .cse21) :LA (4 (- 4) 4 (- 1) 4 4 (- 4) (- 1) 1 (- 1)))) .cse460)) (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse77 .cse78 (res .cse44 .cse45 (res .cse170 .cse269 (res .cse270 .cse271 (res .cse69 (res .cse172 .cse461 (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (res .cse87 .cse88 (farkas 4 .cse225 4 .cse87 1 .cse85 4 .cse172 4 .cse147 4 .cse265 1 .cse83 1 .cse34 4 .cse270 1 .cse79)))))) :proves (- .cse225 - .cse19 - .cse77 - .cse172 - .cse147 - .cse150 - .cse71 - .cse34 - .cse270 + .cse21) :LA (4 (- 4) (- 1) 4 4 (- 4) (- 1) 1 4 (- 1)))) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (res .cse87 .cse88 (farkas 4 .cse225 4 .cse87 1 .cse85 4 .cse147 4 .cse265 1 .cse83 4 .cse69 1 .cse34 4 .cse270 1 .cse79)))))) :proves (- .cse225 - .cse19 - .cse77 - .cse147 - .cse150 - .cse71 - .cse69 - .cse34 - .cse270 + .cse21) :LA (4 (- 4) (- 1) 4 (- 4) (- 1) 4 1 4 (- 1)))))))))) .cse109) :proves (- .cse42 - .cse19 - .cse150 - .cse147 - .cse225) :rup)))))) .cse126) .cse169)))) .cse109) :proves (- .cse150 + .cse46 - .cse19) :rup)) (.cse151 (! (res .cse399 .cse400 (let ((.cse597 (< .cse599 0))) (res .cse597 (let ((.cse598 (< 0 .cse599))) (res .cse598 (trichotomy .cse599 0) (farkas 1 .cse30 1 .cse598))) (farkas 1 .cse399 1 .cse597)))) :proves (- .cse30 + .cse150) :EQ)) (.cse131 (! (and- 1 .cse124) :proves (- .cse124 + .cse74) :input)) (.cse76 (! (res .cse585 (res .cse124 (and+ .cse124) (res .cse586 (res .cse587 .cse588 (and- 0 .cse587)) (=>- .cse586))) (let ((.cse589 (= .cse585 .cse73))) (res .cse589 (res .cse73 (res .cse585 (=+1 .cse589) (let ((.cse590 (= .cse591 .cse184))) (res .cse590 (symm .cse591 .cse184) (let ((.cse592 (< .cse594 0))) (res .cse592 (let ((.cse593 (< 0 .cse594))) (res .cse593 (trichotomy .cse594 0) (farkas 1 .cse585 1 .cse593))) (farkas 1 .cse590 1 .cse592)))))) (res .cse585 (res .cse473 .cse474 (let ((.cse595 (< .cse184 .cse591))) (res .cse595 (let ((.cse596 (< .cse591 .cse184))) (res .cse596 (trichotomy .cse184 .cse591) (farkas 1 .cse73 1 .cse596))) (farkas 1 .cse473 1 .cse595)))) (=+2 .cse589))) (=-2 .cse589)))) :proves (+ .cse73 - .cse46 - .cse74) :input)) (.cse129 (! (and- 1 .cse127) :proves (- .cse127 + .cse104) :input)) (.cse198 (! (res .cse572 (res .cse127 (and+ .cse127) (res .cse573 (res .cse574 .cse575 (and- 0 .cse574)) (=>- .cse573))) (let ((.cse576 (= .cse572 .cse197))) (res .cse576 (res .cse197 (res .cse572 (=+1 .cse576) (let ((.cse577 (= .cse578 .cse55))) (res .cse577 (symm .cse578 .cse55) (let ((.cse579 (< .cse581 0))) (res .cse579 (let ((.cse580 (< 0 .cse581))) (res .cse580 (trichotomy .cse581 0) (farkas 1 .cse572 1 .cse580))) (farkas 1 .cse577 1 .cse579)))))) (res .cse572 (let ((.cse582 (= 0 .cse581))) (res .cse582 (symm 0 .cse581) (let ((.cse583 (< .cse55 .cse578))) (res .cse583 (let ((.cse584 (< .cse578 .cse55))) (res .cse584 (trichotomy .cse55 .cse578) (farkas 1 .cse197 1 .cse584))) (farkas 1 .cse582 1 .cse583))))) (=+2 .cse576))) (=-2 .cse576)))) :proves (+ .cse197 - .cse104 - .cse46) :input)) (.cse212 (! (farkas 1 .cse209) :proves (- .cse209) :EQ)) (.cse206 (! (res .cse210 (res .cse569 .cse570 (and- 0 .cse569)) (let ((.cse571 (= .cse210 .cse205))) (res .cse571 (res .cse205 (res .cse210 (=+1 .cse571) (symm 37 percent)) (res .cse210 .cse211 (=+2 .cse571))) (=-2 .cse571)))) :proves (+ .cse205) :input)) (.cse218 (! (farkas 1 .cse215) :proves (- .cse215) :EQ)) (.cse112 (! (res .cse111 .cse157 (res .cse495 (res .cse494 (trichotomy 0 .cse289) .cse497) .cse496)) :proves (+ .cse111 - .cse69) :EQ)) (.cse137 (! (res .cse69 .cse290 (trans .cse184 .cse289 0 .cse313)) :proves (+ .cse135 - .cse132 - .cse111 - .cse0) :trans (.cse184 .cse289 0 .cse313))) (.cse20 (! (res .cse328 .cse444 (let ((.cse566 (< .cse568 0))) (res .cse566 (let ((.cse567 (< 0 .cse568))) (res .cse567 (trichotomy .cse568 0) (farkas 1 .cse11 1 .cse567))) (farkas 1 .cse328 1 .cse566)))) :proves (- .cse11 + .cse19) :EQ)) (.cse146 (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse85 .cse86 (farkas 1 .cse85 4 .cse140 1 .cse83 4 .cse115 1 .cse34 1 .cse79)))) :proves (- .cse77 - .cse140 - .cse71 - .cse115 - .cse34 + .cse21) :LA ((- 1) 4 (- 1) 4 1 (- 1)))) (.cse12 (! (cong (x_count 1) (x_count .cse313)) :proves (+ .cse11 - .cse9) :cong (.cse184 .cse185))) (.cse139 (! (res .cse382 .cse383 (trans 0 .cse289 .cse184 .cse185)) :proves (+ .cse113 - .cse111 - .cse132 - .cse11) :trans (0 .cse289 .cse184 .cse185)))) (let-proof ((.cse108 (! (res .cse219 (! (res .cse220 (res .cse221 (res .cse222 .cse223 (and- 1 .cse222)) (and- 1 .cse221)) (res .cse224 (not+ .cse224) (=>- .cse220))) :proves (+ .cse107 + .cse219) :input) (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (let ((.cse526 (+ .cse185 (- 3))) (.cse565 (+ .cse185 (- 2))) (.cse476 (* (- 1) .cse233)) (.cse561 (+ arg1 .cse455))) (let ((.cse433 (= .cse561 0)) (.cse436 (<= .cse561 0)) (.cse549 (+ arg1 .cse455 (- 1))) (.cse282 (+ .cse258 .cse476)) (.cse508 (<= .cse565 0)) (.cse243 (= .cse526 0)) (.cse502 (<= .cse526 0)) (.cse510 (+ .cse258 (- 3))) (.cse520 (+ .cse233 .cse493 (- 1)))) (let ((.cse283 (= 0 .cse520)) (.cse254 (= .cse520 0)) (.cse251 (= .cse510 0)) (.cse259 (= .cse258 3)) (.cse311 (= .cse313 2)) (.cse247 (= 3 .cse258)) (.cse421 (= .cse185 .cse233)) (.cse245 (= 3 .cse185)) (.cse506 (<= 1 .cse526)) (.cse249 (= .cse282 0)) (.cse261 (= .cse233 .cse258)) (.cse241 (= .cse549 0)) (.cse437 (<= 1 .cse561))) (let-proof ((.cse284 (symm 0 .cse520)) (.cse260 (symm .cse258 3)) (.cse312 (symm .cse313 2)) (.cse422 (cong (x_count .cse313) (x_count 2))) (.cse507 (total-int .cse526 0)) (.cse509 (! (let ((.cse562 (< .cse526 0))) (res .cse562 (let ((.cse563 (< 0 .cse526))) (res .cse563 (trichotomy .cse526 0) (farkas 1 .cse563 1 .cse502))) (let ((.cse564 (<= 1 .cse565))) (res .cse564 (total-int .cse565 0) (farkas 1 .cse564 1 .cse562))))) :proves (+ .cse508 + .cse243 - .cse502) :trichotomy)) (.cse262 (symm .cse233 .cse258)) (.cse438 (total-int .cse561 0)) (.cse442 (! (let ((.cse559 (< .cse561 0))) (res .cse559 (let ((.cse560 (< 0 .cse561))) (res .cse560 (trichotomy .cse561 0) (farkas 1 .cse560 1 .cse436))) (res .cse79 .cse80 (farkas 1 .cse79 1 .cse559)))) :proves (- .cse436 + .cse433 + .cse21) :trichotomy)) (.cse443 (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse77 .cse78 (let ((.cse558 (+ .cse194 .cse185 (- 2)))) (let ((.cse556 (<= .cse558 0))) (res .cse556 (! (let ((.cse557 (<= 1 .cse558))) (res .cse557 (total-int .cse558 0) (res .cse503 .cse504 (farkas 1 .cse77 1 .cse71 1 .cse433 1 .cse503 4 .cse557)))) :proves (- .cse77 - .cse71 - .cse433 - .cse34 + .cse556) :LA (1 1 1 (- 1) (- 4))) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse85 .cse86 (farkas 4 .cse556 1 .cse85 1 .cse83 1 .cse34 1 .cse79)))) :proves (- .cse556 - .cse77 - .cse71 - .cse34 + .cse21) :LA (4 (- 1) (- 1) 1 (- 1))))))))) .cse109) :proves (- .cse433) :rup))) (let ((.cse377 (= s .cse186)) (.cse357 (= 0 .cse555)) (.cse256 (= 0 .cse510))) (let-proof ((.cse378 (symm s .cse186)) (.cse358 (symm 0 .cse555)) (.cse242 (! (res .cse21 (let ((.cse543 (+ arg1 .cse552 .cse553 .cse554 5))) (let ((.cse531 (<= .cse543 0))) (res .cse531 (! (res .cse532 (let ((.cse533 (not .cse531))) (let-proof ((.cse534 (not+ .cse533))) (res .cse533 .cse534 (let ((.cse535 (not .cse533))) (res .cse535 (res .cse536 .cse537 (let ((.cse538 (= .cse536 .cse535))) (res .cse538 (let ((.cse539 (= .cse532 .cse533))) (res .cse539 (res .cse533 (res .cse532 (=+1 .cse539) (res .cse531 .cse534 (farkas 1 .cse532 1 .cse531))) (res .cse532 (res .cse540 .cse541 (res .cse531 (let ((.cse542 (<= 1 .cse543))) (res .cse542 (total-int .cse543 0) (farkas 1 .cse540 1 .cse542))) (not- .cse533))) (=+2 .cse539))) (cong (not .cse532) (not .cse533)))) (=-2 .cse538)))) (not- .cse535)))))) (res .cse544 .cse545 (res .cse536 (and- 1 .cse544) .cse546))) :proves (+ .cse531) :input) (res .cse433 (res .cse71 .cse72 (res .cse434 .cse435 (res .cse436 (let ((.cse547 (<= .cse549 0))) (res .cse547 (! (let ((.cse548 (<= 1 .cse549))) (res .cse548 (total-int .cse549 0) (res .cse83 .cse84 (farkas 1 .cse434 1 .cse83 1 .cse531 1 .cse548)))) :proves (- .cse434 - .cse71 - .cse531 + .cse547) :LA (1 (- 1) 1 (- 1))) (! (let ((.cse550 (< .cse549 0))) (res .cse550 (let ((.cse551 (< 0 .cse549))) (res .cse551 (trichotomy .cse549 0) (farkas 1 .cse551 1 .cse547))) (res .cse437 .cse438 (farkas 1 .cse437 1 .cse550)))) :proves (- .cse547 + .cse241 + .cse436) :trichotomy))) .cse442))) .cse443)))) .cse109) :proves (+ .cse241) :rup)) (.cse250 (! (res .cse261 .cse262 (let ((.cse529 (< .cse282 0))) (res .cse529 (let ((.cse530 (< 0 .cse282))) (res .cse530 (trichotomy .cse282 0) (farkas 1 .cse219 1 .cse530))) (farkas 1 .cse261 1 .cse529)))) :proves (- .cse219 + .cse249) :EQ)) (.cse327 (res .cse502 (! (res .cse503 .cse504 (res .cse141 (symm 0 .cse194) (res .cse506 .cse507 (farkas 4 .cse506 1 .cse241 1 .cse77 4 .cse141 1 .cse71 1 .cse503)))) :proves (+ .cse502 - .cse241 - .cse77 - .cse140 - .cse71 - .cse34) :LA ((- 4) 1 1 (- 4) 1 (- 1))) (res .cse508 .cse509 (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse85 .cse86 (farkas 1 .cse85 4 .cse140 1 .cse83 1 .cse34 1 .cse79 4 .cse508)))) :proves (- .cse77 - .cse140 - .cse71 - .cse34 + .cse21 - .cse508) :LA ((- 1) 4 (- 1) 1 (- 1) 4))))) (.cse246 (! (let ((.cse525 (= 0 .cse526))) (res .cse525 (symm 0 .cse526) (let ((.cse527 (< 3 .cse185))) (res .cse527 (let ((.cse528 (< .cse185 3))) (res .cse528 (trichotomy 3 .cse185) (farkas 1 .cse525 1 .cse528))) (farkas 1 .cse243 1 .cse527))))) :proves (+ .cse245 - .cse243) :EQ)) (.cse248 (res .cse421 (! (res .cse311 .cse312 .cse422) :proves (+ .cse421 - .cse14) :cong (.cse185 .cse233)) (! (res .cse261 .cse262 (trans 3 .cse185 .cse233 .cse258)) :proves (+ .cse247 - .cse245 - .cse421 - .cse219) :trans (3 .cse185 .cse233 .cse258)))) (.cse252 (! (res .cse259 .cse260 (let ((.cse523 (< .cse510 0))) (res .cse523 (let ((.cse524 (< 0 .cse510))) (res .cse524 (trichotomy .cse510 0) (farkas 1 .cse259 1 .cse524))) (farkas 1 .cse247 1 .cse523)))) :proves (- .cse247 + .cse251) :EQ)) (.cse253 (! (and- 0 .cse179) :proves (- .cse179 + .cse227) :input)) (.cse255 (! (res .cse511 (res .cse179 (and+ .cse179) (res .cse512 (res .cse513 .cse514 (and- 0 .cse513)) (=>- .cse512))) (let ((.cse515 (= .cse511 .cse254))) (res .cse515 (res .cse254 (res .cse511 (=+1 .cse515) (let ((.cse516 (= .cse517 .cse233))) (res .cse516 (symm .cse517 .cse233) (let ((.cse518 (< .cse520 0))) (res .cse518 (let ((.cse519 (< 0 .cse520))) (res .cse519 (trichotomy .cse520 0) (farkas 1 .cse511 1 .cse519))) (farkas 1 .cse516 1 .cse518)))))) (res .cse511 (res .cse283 .cse284 (let ((.cse521 (< .cse233 .cse517))) (res .cse521 (let ((.cse522 (< .cse517 .cse233))) (res .cse522 (trichotomy .cse233 .cse517) (farkas 1 .cse254 1 .cse522))) (farkas 1 .cse283 1 .cse521)))) (=+2 .cse515))) (=-2 .cse515)))) :proves (+ .cse254 - .cse94 - .cse227) :input)) (.cse257 (symm 0 .cse510)) (.cse288 (res .cse11 .cse12 .cse139))) (let-proof ((.cse291 (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (res .cse241 .cse242 (res .cse249 .cse250 (res .cse111 .cse112 (res .cse147 .cse148 (res .cse115 (res .cse243 .cse327 (res .cse19 (res .cse113 (res .cse245 .cse246 (res .cse11 (res .cse135 (res .cse0 (res .cse1 (res .cse9 (res .cse5 (res .cse2 .cse180 (res .cse14 .cse15 (res .cse247 .cse248 (res .cse16 (res .cse251 .cse252 (res .cse179 .cse181 (res .cse94 .cse183 (res .cse227 .cse253 (res .cse254 .cse255 (! (res .cse256 .cse257 (farkas 1 .cse147 1 .cse256 1 .cse254 1 .cse69 1 .cse249)) :proves (- .cse147 - .cse251 - .cse254 - .cse69 - .cse249) :LA (1 (- 1) 1 1 1))))))) (! (res .cse234 .cse235 (res .cse259 .cse260 (res .cse261 .cse262 (res .cse382 .cse383 (trans 0 .cse289 .cse184 .cse233 .cse258 3 .cse185))))) :proves (+ .cse113 - .cse111 - .cse132 - .cse16 - .cse219 - .cse247 - .cse245) :trans (0 .cse289 .cse184 .cse233 .cse258 3 .cse185)))))) .cse10) .cse288) .cse110) .cse137) .cse138) .cse20)) .cse116) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse85 .cse86 (res .cse87 .cse88 (farkas 4 .cse87 1 .cse85 4 .cse147 4 .cse140 1 .cse83 4 .cse69 1 .cse34 1 .cse79))))) :proves (- .cse19 - .cse77 - .cse147 - .cse140 - .cse71 - .cse69 - .cse34 + .cse21) :LA ((- 4) (- 1) 4 4 (- 1) 4 1 (- 1))))) .cse146)))))) .cse8)))) .cse109) :proves (- .cse140 - .cse219 - .cse69 - .cse132) :rup)) (.cse244 (res .cse502 (! (res .cse503 .cse504 (res .cse40 .cse505 (res .cse357 .cse358 (res .cse506 .cse507 (farkas 4 .cse506 1 .cse241 4 .cse357 4 .cse40 1 .cse77 4 .cse150 1 .cse71 1 .cse503))))) :proves (+ .cse502 - .cse241 - .cse225 - .cse41 - .cse77 - .cse150 - .cse71 - .cse34) :LA ((- 4) 1 (- 4) (- 4) 1 4 1 (- 1))) (res .cse508 .cse509 (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse225 4 .cse41 1 .cse85 4 .cse265 1 .cse83 1 .cse34 1 .cse79 4 .cse508))))) :proves (- .cse225 - .cse41 - .cse77 - .cse150 - .cse71 - .cse34 + .cse21 - .cse508) :LA (4 4 (- 1) (- 4) (- 1) 1 (- 1) 4))))) (.cse267 (! (res .cse213 .cse214 (res .cse207 .cse208 (res .cse498 (! (res .cse499 .cse500 (res .cse377 .cse378 (trans 115 s .cse186 x 120))) :proves (+ .cse498 - .cse213 - .cse44 - .cse121 - .cse207) :trans (115 s .cse186 x 120)) .cse501))) :proves (- .cse121 - .cse44) :rup)) (.cse268 (! (res .cse69 .cse290 (res .cse494 (res .cse495 (trichotomy .cse289 0) .cse496) .cse497)) :proves (- .cse111 + .cse69) :EQ))) (let-proof ((.cse264 (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (let ((.cse490 (+ .cse233 .cse493))) (let ((.cse325 (= .cse490 0)) (.cse491 (= percent .cse105))) (let-proof ((.cse471 (res .cse215 (! (res .cse210 .cse211 (res .cse377 .cse378 (trans 115 s .cse186 percent 37))) :proves (+ .cse215 - .cse213 - .cse44 - .cse46 - .cse205) :trans (115 s .cse186 percent 37)) .cse218)) (.cse492 (symm percent .cse105))) (let ((.cse329 (= .cse313 1))) (let-proof ((.cse331 (! (res .cse491 .cse492 (trans .cse186 percent .cse105 x)) :proves (+ .cse121 - .cse46 - .cse227 - .cse74) :trans (.cse186 percent .cse105 x))) (.cse319 (! (res .cse491 .cse492 (trans .cse186 percent .cse105 s)) :proves (+ .cse44 - .cse46 - .cse227 - .cse104) :trans (.cse186 percent .cse105 s))) (.cse330 (cong (x_count .cse313) (x_count 1))) (.cse326 (! (res .cse234 .cse235 (let ((.cse488 (< .cse490 0))) (res .cse488 (let ((.cse489 (< 0 .cse490))) (res .cse489 (trichotomy .cse490 0) (farkas 1 .cse16 1 .cse489))) (farkas 1 .cse234 1 .cse488)))) :proves (- .cse16 + .cse325) :EQ)) (.cse320 (! (res .cse205 .cse206 (res .cse213 .cse214 .cse471)) :proves (- .cse46 - .cse44) :rup)) (.cse321 (! (res .cse205 .cse206 (res .cse207 .cse208 (res .cse209 (! (res (= x .cse186) (symm x .cse186) (res .cse210 .cse211 (trans 120 x .cse186 percent 37))) :proves (+ .cse209 - .cse207 - .cse121 - .cse46 - .cse205) :trans (120 x .cse186 percent 37)) .cse212))) :proves (- .cse121 - .cse46) :rup))) (res .cse296 (res .cse297 (! (res .cse298 (res .cse299 (res .cse300 .cse301 (and- 1 .cse300)) (and- 1 .cse299)) (res .cse302 (not+ .cse302) (=>- .cse298))) :proves (+ .cse297 + .cse296) :input) (res .cse303 (! (and- 1 .cse297) :proves (- .cse297 + .cse303) :input) (res .cse91 (! (and- 0 .cse297) :proves (- .cse297 + .cse91) :input) (res .cse121 (res .cse44 (res .cse102 (res .cse119 (res .cse42 (res .cse100 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse41 .cse43 (res .cse40 .cse53 (res .cse26 .cse101 (let ((.cse334 (+ .cse57 (* (- 1) .cse56)))) (let ((.cse304 (= .cse334 0))) (let-proof ((.cse305 (! (res .cse65 .cse66 (let ((.cse332 (< .cse334 0))) (res .cse332 (let ((.cse333 (< 0 .cse334))) (res .cse333 (trichotomy .cse334 0) (farkas 1 .cse26 1 .cse333))) (farkas 1 .cse65 1 .cse332)))) :proves (- .cse26 + .cse304) :EQ))) (res .cse304 .cse305 (res .cse74 (res .cse124 (res .cse132 .cse133 (res .cse140 (res .cse141 (let ((.cse324 (+ .cse58 (* (- 1) .cse57)))) (let ((.cse307 (= .cse324 0))) (let ((.cse316 (= s .cse315))) (let-proof ((.cse308 (! (res .cse63 .cse64 (let ((.cse322 (< .cse324 0))) (res .cse322 (let ((.cse323 (< 0 .cse324))) (res .cse323 (trichotomy .cse324 0) (farkas 1 .cse28 1 .cse323))) (farkas 1 .cse63 1 .cse322)))) :proves (- .cse28 + .cse307) :EQ)) (.cse314 (! (and- 1 .cse89) :proves (- .cse89 + .cse306) :input)) (.cse317 (symm s .cse315))) (res .cse30 (res .cse0 (res .cse1 (res .cse9 (res .cse5 (res .cse2 .cse180 (res .cse14 .cse15 (res .cse24 (res .cse202 .cse203 (res .cse227 .cse228 (res .cse104 (res .cse50 .cse204 (res .cse127 (res .cse94 (res .cse306 (res .cse229 .cse230 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse179 (res .cse89 (res .cse16 .cse181 (res .cse28 .cse90 (res .cse307 .cse308 (res .cse113 .cse309 (res .cse23 (res .cse310 (! (res .cse311 .cse312 (cong (s_count .cse313) (s_count 2))) :proves (+ .cse310 - .cse14) :cong (.cse194 .cse56)) (! (res .cse63 .cse64 (res .cse65 .cse66 (trans .cse194 .cse56 .cse57 .cse58))) :proves (+ .cse23 - .cse310 - .cse26 - .cse28) :trans (.cse194 .cse56 .cse57 .cse58))) (res .cse115 .cse116 (res .cse22 .cse33 (! (res .cse79 .cse80 (res .cse81 .cse82 (res .cse83 .cse84 (res .cse85 .cse86 (farkas 4 .cse229 4 .cse225 4 .cse41 1 .cse85 1 .cse83 4 .cse115 1 .cse34 4 .cse307 4 .cse304 4 .cse81 1 .cse79))))) :proves (- .cse229 - .cse225 - .cse41 - .cse77 - .cse71 - .cse115 - .cse34 - .cse307 - .cse304 - .cse22 + .cse21) :LA (4 4 4 (- 1) (- 1) 4 1 4 4 (- 4) (- 1)))))))))) .cse314) .cse183)))) (! (res .cse316 .cse317 (trans .cse95 s .cse315 x)) :proves (+ .cse94 - .cse50 - .cse306 - .cse303) :trans (.cse95 s .cse315 x))) .cse318) .cse129)) .cse319))) .cse143))) .cse10) .cse239) .cse110) .cse144) (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (res .cse121 (res .cse44 (res .cse119 (res .cse42 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse41 .cse43 (res .cse40 .cse53 (res .cse304 .cse305 (res .cse124 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse38 (res .cse127 .cse128 (res .cse104 .cse129 (res .cse306 (res .cse227 (res .cse197 .cse198 (res .cse89 (res .cse202 (res .cse179 (res .cse28 .cse90 (res .cse307 .cse308 (res .cse24 .cse203 (res .cse23 .cse32 (res .cse191 .cse192 (res .cse22 .cse33 (res .cse16 .cse181 (res .cse115 (res .cse19 (res .cse113 (res .cse11 (res .cse9 (res .cse5 (res .cse135 (res .cse0 (res .cse1 (res .cse2 .cse180 (res .cse14 .cse15 .cse309)) .cse110) .cse137) .cse138) .cse10) .cse288) .cse20) .cse116) (! (res .cse81 .cse82 (res .cse83 .cse84 (res .cse79 .cse80 (res .cse85 .cse86 (res .cse87 .cse88 (farkas 4 .cse87 4 .cse41 1 .cse85 4 .cse69 4 .cse307 4 .cse304 1 .cse79 4 .cse147 4 .cse191 1 .cse83 1 .cse34 4 .cse81 4 .cse197)))))) :proves (- .cse19 - .cse41 - .cse77 - .cse69 - .cse307 - .cse304 + .cse21 - .cse147 - .cse191 - .cse71 - .cse34 - .cse22 - .cse197) :LA ((- 4) 4 (- 1) 4 4 4 (- 1) 4 4 (- 1) 1 (- 4) 4))) (! (res .cse79 .cse80 (res .cse81 .cse82 (res .cse83 .cse84 (res .cse85 .cse86 (farkas 4 .cse41 1 .cse85 4 .cse191 1 .cse83 4 .cse115 1 .cse34 4 .cse307 4 .cse304 4 .cse81 1 .cse79 4 .cse197))))) :proves (- .cse41 - .cse77 - .cse191 - .cse71 - .cse115 - .cse34 - .cse307 - .cse304 - .cse22 + .cse21 - .cse197) :LA (4 (- 1) 4 (- 1) 4 1 4 4 (- 4) (- 1) 4)))))))))) .cse253) .cse228) .cse314)) .cse319) (! (res .cse316 .cse317 (trans .cse105 s .cse315 x)) :proves (+ .cse74 - .cse104 - .cse306 - .cse303) :trans (.cse105 s .cse315 x))))) .cse201))) .cse131)))))) .cse45) .cse122) .cse320) .cse321)) .cse8)))) .cse109) :proves (+ .cse141 - .cse303 - .cse26 - .cse30 - .cse46 + .cse74) :rup)))))) .cse145) .cse291)) .cse131) (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (res .cse241 .cse242 (res .cse249 .cse250 (res .cse121 (res .cse44 (res .cse119 (res .cse42 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse41 .cse43 (res .cse40 .cse53 (res .cse227 (res .cse73 .cse76 (res .cse179 (res .cse202 (res .cse16 .cse181 (res .cse325 .cse326 (res .cse251 (res .cse247 (res .cse24 .cse203 (res .cse104 (res .cse127 (res .cse38 .cse128 (res .cse30 .cse118 (res .cse141 .cse201 (res .cse140 .cse145 (res .cse115 (res .cse243 .cse327 (res .cse113 (res .cse245 .cse246 (res .cse9 (res .cse5 (res .cse14 (res .cse2 (res .cse1 .cse7 (res .cse0 .cse110 .cse114)) .cse15) .cse248) .cse10) (res .cse328 (! (res .cse329 (symm .cse313 1) .cse330) :proves (+ .cse328 - .cse9) :cong (.cse185 .cse184)) (! (res .cse234 .cse235 (res .cse261 .cse262 (trans 3 .cse185 .cse184 .cse233 .cse258))) :proves (+ .cse247 - .cse245 - .cse328 - .cse16 - .cse219) :trans (3 .cse185 .cse184 .cse233 .cse258))))) .cse116)) .cse146))))) .cse129) .cse130)) .cse252) (! (res .cse256 .cse257 (farkas 1 .cse325 1 .cse256 1 .cse73 1 .cse69 1 .cse249)) :proves (- .cse325 - .cse251 - .cse73 - .cse69 - .cse249) :LA (1 (- 1) 1 1 1))))) .cse228) .cse253)) .cse331))))) .cse45) .cse122) .cse320) .cse321)))) .cse8)))) .cse109) :proves (- .cse74 - .cse219 - .cse46) :rup))))))))))) .cse103) .cse45) .cse122) (! (res .cse97 .cse98 (trans .cse186 percent .cse96 s)) :proves (+ .cse44 - .cse46 - .cse91 - .cse102) :trans (.cse186 percent .cse96 s))) .cse320) .cse321)))) (! (res .cse3 .cse4 (res .cse213 .cse214 (let ((.cse479 (+ arg1 (- 1)))) (let ((.cse448 (= .cse479 0)) (.cse439 (= 0 fmt0))) (let-proof ((.cse366 (! (res .cse486 .cse487 (and- 0 .cse486)) :proves (+ .cse365) :input)) (.cse440 (symm 0 fmt0))) (let ((.cse335 (= 1 arg1)) (.cse450 (= 0 .cse479))) (let-proof ((.cse449 (! (let ((.cse480 (<= .cse479 0))) (res .cse480 (! (res .cse365 .cse366 (res .cse241 .cse242 (! (let ((.cse481 (<= 1 .cse479))) (res .cse481 (total-int .cse479 0) (farkas 1 .cse241 1 .cse365 1 .cse481))) :proves (- .cse241 - .cse365 + .cse480) :LA (1 1 (- 1))))) :proves (+ .cse480) :rup) (let ((.cse482 (<= arg1 0))) (res .cse482 (! (let ((.cse483 (< .cse479 0))) (res .cse483 (let ((.cse484 (< 0 .cse479))) (res .cse484 (trichotomy .cse479 0) (farkas 1 .cse484 1 .cse480))) (let ((.cse485 (<= 1 arg1))) (res .cse485 (total-int arg1 0) (farkas 1 .cse485 1 .cse483))))) :proves (+ .cse482 + .cse448 - .cse480) :trichotomy) (! (res .cse21 (res .cse365 .cse366 (res .cse433 (res .cse436 (! (res .cse437 .cse438 (res .cse439 .cse440 (farkas 1 .cse439 1 .cse482 1 .cse437))) :proves (- .cse365 - .cse482 + .cse436) :LA ((- 1) 1 (- 1))) .cse442) .cse443)) .cse109) :proves (- .cse482) :rup))))) :proves (+ .cse448) :rup)) (.cse451 (symm 0 .cse479))) (let-proof ((.cse336 (! (res .cse448 .cse449 (! (res .cse450 .cse451 (let ((.cse477 (< 1 arg1))) (res .cse477 (let ((.cse478 (< arg1 1))) (res .cse478 (trichotomy 1 arg1) (farkas 1 .cse450 1 .cse478))) (farkas 1 .cse448 1 .cse477)))) :proves (+ .cse335 - .cse448) :EQ)) :proves (+ .cse335) :rup))) (res .cse335 .cse336 (res .cse6 (res .cse207 .cse208 (let ((.cse469 (+ .cse385 .cse476)) (.cse465 (+ .cse385 .cse475))) (let ((.cse344 (= .cse465 0)) (.cse355 (= 0 .cse465)) (.cse371 (= .cse469 0))) (let-proof ((.cse356 (symm 0 .cse465))) (let ((.cse410 (= .cse385 .cse185)) (.cse345 (= .cse185 .cse385)) (.cse369 (= .cse233 .cse385)) (.cse408 (= .cse258 .cse385))) (let-proof ((.cse462 (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse77 .cse78 (let-proof ((.cse470 (res .cse38 (res .cse104 (res .cse127 .cse128 .cse129) .cse198) .cse226))) (res .cse73 (res .cse121 (res .cse74 (res .cse119 (res .cse124 (res .cse69 .cse120 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse44 (res .cse42 (res .cse41 .cse43 (res .cse225 (res .cse197 .cse470 (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse325 4 .cse41 1 .cse85 4 .cse147 4 .cse265 1 .cse83 4 .cse355 4 .cse69 4 .cse371 1 .cse34 1 .cse79 4 .cse197)))))) :proves (- .cse325 - .cse41 - .cse77 - .cse147 - .cse150 - .cse71 - .cse344 - .cse69 - .cse371 - .cse34 + .cse21 - .cse197) :LA (4 4 (- 1) 4 (- 4) (- 1) (- 4) 4 4 1 (- 1) 4))) (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse225 4 .cse325 4 .cse41 1 .cse85 4 .cse147 4 .cse265 1 .cse83 4 .cse355 4 .cse69 4 .cse371 1 .cse34 1 .cse79)))))) :proves (- .cse225 - .cse325 - .cse41 - .cse77 - .cse147 - .cse150 - .cse71 - .cse344 - .cse69 - .cse371 - .cse34 + .cse21) :LA (4 4 4 (- 1) 4 (- 4) (- 1) (- 4) 4 4 1 (- 1))))) .cse45) .cse320)))) .cse131) .cse122) .cse76) .cse321) (! (res .cse205 .cse206 (res .cse213 .cse214 (let-proof ((.cse472 (! (res .cse473 .cse474 (farkas 1 .cse147 1 .cse473)) :proves (- .cse147 - .cse73) :LA (1 (- 1))))) (res .cse147 (res .cse132 (res .cse124 .cse133 (res .cse46 .cse126 (res .cse41 (res .cse42 .cse43 (res .cse44 .cse45 .cse471)) (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse77 .cse78 (res .cse147 (res .cse132 (res .cse124 .cse133 (res .cse46 .cse126 (res .cse121 (res .cse119 (res .cse69 .cse120 (res .cse225 (res .cse197 .cse470 (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse325 4 .cse41 1 .cse85 4 .cse265 4 .cse73 1 .cse83 4 .cse355 4 .cse69 4 .cse371 1 .cse34 1 .cse79 4 .cse197)))))) :proves (- .cse325 - .cse41 - .cse77 - .cse150 - .cse73 - .cse71 - .cse344 - .cse69 - .cse371 - .cse34 + .cse21 - .cse197) :LA (4 4 (- 1) (- 4) 4 (- 1) (- 4) 4 4 1 (- 1) 4))) (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse225 4 .cse325 4 .cse41 1 .cse85 4 .cse265 4 .cse73 1 .cse83 4 .cse355 4 .cse69 4 .cse371 1 .cse34 1 .cse79)))))) :proves (- .cse225 - .cse325 - .cse41 - .cse77 - .cse150 - .cse73 - .cse71 - .cse344 - .cse69 - .cse371 - .cse34 + .cse21) :LA (4 4 4 (- 1) (- 4) 4 (- 1) (- 4) 4 4 1 (- 1))))) .cse122) .cse321))) .cse148) .cse472)))) .cse109) :proves (- .cse371 - .cse344 - .cse150 - .cse325 - .cse73 - .cse41) :rup)))) .cse148) .cse472)))) :proves (- .cse371 - .cse344 - .cse150 - .cse325 - .cse73) :rup)))))) .cse109) :proves (- .cse371 - .cse344 - .cse150 - .cse325 - .cse46) :rup)) (.cse411 (symm .cse385 .cse185)) (.cse409 (symm .cse258 .cse385))) (let ((.cse456 (= arg1 1)) (.cse337 (= arg1 .cse313))) (let-proof ((.cse370 (! (res .cse261 .cse262 (res .cse408 .cse409 (trans .cse233 .cse258 .cse385))) :proves (+ .cse369 - .cse219 - .cse296) :trans (.cse233 .cse258 .cse385))) (.cse372 (! (let ((.cse466 (= .cse385 .cse233))) (res .cse466 (symm .cse385 .cse233) (let ((.cse467 (< .cse469 0))) (res .cse467 (let ((.cse468 (< 0 .cse469))) (res .cse468 (trichotomy .cse469 0) (farkas 1 .cse466 1 .cse468))) (farkas 1 .cse369 1 .cse467))))) :proves (- .cse369 + .cse371) :EQ)) (.cse457 (symm arg1 1)) (.cse445 (res .cse261 .cse262 (res .cse408 .cse409 (trans .cse185 .cse184 .cse233 .cse258 .cse385)))) (.cse350 (! (res .cse410 .cse411 (let ((.cse463 (< .cse465 0))) (res .cse463 (let ((.cse464 (< 0 .cse465))) (res .cse464 (trichotomy .cse465 0) (farkas 1 .cse410 1 .cse464))) (farkas 1 .cse345 1 .cse463)))) :proves (- .cse345 + .cse344) :EQ)) (.cse401 (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse77 .cse78 (res .cse46 (res .cse124 (res .cse127 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse69 (res .cse172 (res .cse119 .cse120 (res .cse121 .cse122 (res .cse170 .cse171 .cse173))) (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse325 4 .cse225 4 .cse41 1 .cse85 4 .cse172 4 .cse147 4 .cse265 1 .cse83 4 .cse355 4 .cse371 1 .cse34 1 .cse79)))))) :proves (- .cse325 - .cse225 - .cse41 - .cse77 - .cse172 - .cse147 - .cse150 - .cse71 - .cse344 - .cse371 - .cse34 + .cse21) :LA (4 4 4 (- 1) 4 4 (- 4) (- 1) (- 4) 4 1 (- 1)))) (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse325 4 .cse225 4 .cse41 1 .cse85 4 .cse147 4 .cse265 1 .cse83 4 .cse355 4 .cse69 4 .cse371 1 .cse34 1 .cse79)))))) :proves (- .cse325 - .cse225 - .cse41 - .cse77 - .cse147 - .cse150 - .cse71 - .cse344 - .cse69 - .cse371 - .cse34 + .cse21) :LA (4 4 4 (- 1) 4 (- 4) (- 1) (- 4) 4 4 1 (- 1)))))))) .cse169) .cse126) .cse462)))) .cse109) :proves (- .cse344 - .cse371 - .cse150 - .cse325 - .cse41) :rup))) (let-proof ((.cse364 (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse335 .cse336 (res .cse77 .cse78 (let-proof ((.cse458 (! (trans 1 arg1 .cse313) :proves (+ .cse9 - .cse335 - .cse337) :trans (1 arg1 .cse313)))) (res .cse11 (res .cse9 .cse458 .cse12) (let-proof ((.cse459 (res .cse9 .cse458 .cse239))) (res .cse30 .cse459 (res .cse19 .cse20 (res .cse150 .cse151 (res .cse16 (res .cse179 .cse181 (res .cse227 .cse253 (res .cse46 .cse168 (res .cse44 (res .cse104 (res .cse121 (res .cse74 (res .cse42 (res .cse127 (res .cse119 (res .cse124 (res .cse41 .cse43 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse69 .cse120 (res .cse132 .cse133 (res .cse147 .cse148 .cse460)))))) .cse131) .cse122) .cse129) .cse45) .cse331) .cse321) .cse319) .cse320)))) (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse335 .cse336 (res .cse77 .cse78 (res .cse369 .cse370 (res .cse371 .cse372 (res .cse30 .cse459 (res .cse150 .cse151 (res .cse345 (res .cse329 (! (res (= .cse313 arg1) (symm .cse313 arg1) (res .cse456 .cse457 (trans .cse313 arg1 1))) :proves (+ .cse329 - .cse337 - .cse335) :trans (.cse313 arg1 1)) (res .cse328 (! .cse330 :proves (+ .cse328 - .cse329) :cong (.cse185 .cse184)) (! (res .cse234 .cse235 .cse445) :proves (+ .cse345 - .cse328 - .cse16 - .cse219 - .cse296) :trans (.cse185 .cse184 .cse233 .cse258 .cse385)))) (res .cse325 .cse326 (res .cse344 .cse350 (res .cse46 (res .cse124 (res .cse127 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse41 (res .cse42 .cse43 (res .cse170 .cse269 (res .cse44 .cse45 (res .cse270 .cse271 (res .cse69 (res .cse172 .cse461 (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse325 4 .cse225 1 .cse85 4 .cse172 4 .cse147 4 .cse265 1 .cse83 4 .cse355 4 .cse371 1 .cse34 4 .cse270 1 .cse79)))))) :proves (- .cse325 - .cse225 - .cse77 - .cse172 - .cse147 - .cse150 - .cse71 - .cse344 - .cse371 - .cse34 - .cse270 + .cse21) :LA (4 4 (- 1) 4 4 (- 4) (- 1) (- 4) 4 1 4 (- 1)))) (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse325 4 .cse225 1 .cse85 4 .cse147 4 .cse265 1 .cse83 4 .cse355 4 .cse69 4 .cse371 1 .cse34 4 .cse270 1 .cse79)))))) :proves (- .cse325 - .cse225 - .cse77 - .cse147 - .cse150 - .cse71 - .cse344 - .cse69 - .cse371 - .cse34 - .cse270 + .cse21) :LA (4 4 (- 1) 4 (- 4) (- 1) (- 4) 4 4 1 4 (- 1)))))))) .cse401))))) .cse169) .cse126) .cse462)))))))))))) .cse109) :proves (- .cse219 - .cse337 - .cse296 - .cse16) :rup)))))))))))) .cse109) :proves (- .cse219 - .cse337 - .cse296) :rup))) (res .cse337 (let-proof ((.cse363 (! (res .cse456 .cse457 (trans arg1 1 .cse313)) :proves (+ .cse337 - .cse335 - .cse9) :trans (arg1 1 .cse313)))) (res .cse9 (res .cse5 (let ((.cse387 (+ .cse385 (* (- 1) .cse258))) (.cse424 (+ fmt1 .cse454 .cse455 (- 3))) (.cse430 (+ fmt1 .cse454 .cse455 (- 2))) (.cse340 (= 2 .cse418))) (let ((.cse373 (<= .cse430 0)) (.cse374 (= .cse424 0)) (.cse367 (<= .cse424 0)) (.cse346 (= .cse418 .cse313)) (.cse419 (= .cse418 2)) (.cse342 (= .cse387 0))) (let-proof ((.cse341 (! (res .cse448 .cse449 (! (res .cse450 .cse451 (let ((.cse452 (< 2 .cse418))) (res .cse452 (let ((.cse453 (< .cse418 2))) (res .cse453 (trichotomy 2 .cse418) (farkas 1 .cse450 1 .cse453))) (farkas 1 .cse448 1 .cse452)))) :proves (+ .cse340 - .cse448) :EQ)) :proves (+ .cse340) :rup)) (.cse420 (symm .cse418 2))) (let-proof ((.cse343 (! (res .cse408 .cse409 (let ((.cse446 (< .cse387 0))) (res .cse446 (let ((.cse447 (< 0 .cse387))) (res .cse447 (trichotomy .cse387 0) (farkas 1 .cse296 1 .cse447))) (farkas 1 .cse408 1 .cse446)))) :proves (- .cse296 + .cse342) :EQ)) (.cse348 (! (res .cse419 .cse420 (trans .cse418 2 .cse313)) :proves (+ .cse346 - .cse340 - .cse14) :trans (.cse418 2 .cse313))) (.cse347 (! (res .cse234 .cse235 (res .cse328 .cse444 .cse445)) :proves (+ .cse345 - .cse11 - .cse16 - .cse219 - .cse296) :trans (.cse185 .cse184 .cse233 .cse258 .cse385))) (.cse368 (! (res .cse431 .cse432 (res .cse21 (res .cse365 .cse366 (res .cse433 (res .cse434 .cse435 (res .cse436 (! (res .cse437 .cse438 (res .cse439 .cse440 (let ((.cse441 (<= 1 .cse424))) (res .cse441 (total-int .cse424 0) (farkas 1 .cse434 1 .cse441 1 .cse439 1 .cse431 1 .cse437))))) :proves (- .cse434 + .cse367 - .cse365 - .cse431 + .cse436) :LA (1 (- 1) (- 1) 1 (- 1))) .cse442)) .cse443)) .cse109)) :proves (+ .cse367) :rup)) (.cse375 (! (let ((.cse427 (< .cse424 0))) (res .cse427 (let ((.cse428 (< 0 .cse424))) (res .cse428 (trichotomy .cse424 0) (farkas 1 .cse428 1 .cse367))) (let ((.cse429 (<= 1 .cse430))) (res .cse429 (total-int .cse430 0) (farkas 1 .cse429 1 .cse427))))) :proves (+ .cse373 + .cse374 - .cse367) :trichotomy)) (.cse376 (! (let ((.cse423 (= 0 .cse424))) (res .cse423 (symm 0 .cse424) (let ((.cse425 (< .cse418 .cse313))) (res .cse425 (let ((.cse426 (< .cse313 .cse418))) (res .cse426 (trichotomy .cse418 .cse313) (farkas 1 .cse423 1 .cse426))) (farkas 1 .cse374 1 .cse425))))) :proves (+ .cse346 - .cse374) :EQ)) (.cse349 (! (res .cse340 .cse341 (res .cse311 (! (res .cse419 .cse420 (res (= .cse313 .cse418) (symm .cse313 .cse418) (trans .cse313 .cse418 2))) :proves (+ .cse311 - .cse346 - .cse340) :trans (.cse313 .cse418 2)) (res .cse421 (! .cse422 :proves (+ .cse421 - .cse311) :cong (.cse185 .cse233)) (! (res .cse261 .cse262 (res .cse408 .cse409 (trans .cse185 .cse233 .cse258 .cse385))) :proves (+ .cse345 - .cse421 - .cse219 - .cse296) :trans (.cse185 .cse233 .cse258 .cse385))))) :proves (- .cse219 + .cse345 - .cse346 - .cse296) :rup)) (.cse379 (res .cse155 (res .cse153 (! (res .cse414 .cse415 (farkas 1 .cse241 1 .cse365 1 .cse373 1 .cse414)) :proves (- .cse241 - .cse365 - .cse373 + .cse153) :LA (1 1 1 (- 1))) .cse416) .cse417))) (let-proof ((.cse362 (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse335 .cse336 (res .cse6 (res .cse77 .cse78 (res .cse241 .cse242 (res .cse340 .cse341 (res .cse337 (res .cse9 (res .cse5 (let ((.cse404 (= .cse184 0)) (.cse402 (= 0 .cse184))) (let ((.cse389 (= .cse55 0)) (.cse390 (= 0 .cse55))) (let-proof ((.cse403 (! (res .cse382 .cse383 (trans 0 .cse289 .cse184)) :proves (+ .cse402 - .cse111 - .cse132) :trans (0 .cse289 .cse184))) (.cse405 (! (res .cse404 (symm .cse184 0) (let ((.cse412 (< .cse184 0))) (res .cse412 (let ((.cse413 (< 0 .cse184))) (res .cse413 (trichotomy .cse184 0) (farkas 1 .cse404 1 .cse413))) (farkas 1 .cse402 1 .cse412)))) :proves (- .cse402 + .cse404) :EQ)) (.cse388 (! (res .cse234 .cse235 (res .cse261 .cse262 (res .cse408 .cse409 (res .cse410 .cse411 (trans .cse184 .cse233 .cse258 .cse385 .cse185))))) :proves (+ .cse11 - .cse16 - .cse219 - .cse296 - .cse345) :trans (.cse184 .cse233 .cse258 .cse385 .cse185)))) (let-proof ((.cse391 (! (res .cse59 .cse60 (trans 0 .cse54 .cse55)) :proves (+ .cse390 - .cse40 - .cse38) :trans (0 .cse54 .cse55))) (.cse392 (! (res .cse389 (symm .cse55 0) (let ((.cse406 (< .cse55 0))) (res .cse406 (let ((.cse407 (< 0 .cse55))) (res .cse407 (trichotomy .cse55 0) (farkas 1 .cse389 1 .cse407))) (farkas 1 .cse390 1 .cse406)))) :proves (- .cse390 + .cse389) :EQ)) (.cse393 (! (res .cse21 (res .cse365 .cse366 (res .cse34 .cse35 (res .cse367 .cse368 (res .cse71 .cse72 (res .cse335 .cse336 (res .cse6 (res .cse77 .cse78 (res .cse241 .cse242 (res .cse369 .cse370 (res .cse371 .cse372 (res .cse337 (res .cse9 (res .cse5 (res .cse402 .cse403 (res .cse404 .cse405 (res .cse19 (res .cse11 (res .cse135 (res .cse0 (res .cse1 (res .cse373 (res .cse374 .cse375 (res .cse346 .cse376 (res .cse345 .cse349 (res .cse16 (res .cse344 .cse350 (res .cse179 .cse181 (res .cse94 .cse183 (res .cse227 .cse253 (res .cse254 .cse255 (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse389 1 .cse85 4 .cse265 4 .cse254 1 .cse83 4 .cse355 4 .cse371 4 .cse404 1 .cse34 1 .cse79)))))) :proves (- .cse389 - .cse77 - .cse150 - .cse254 - .cse71 - .cse344 - .cse371 - .cse404 - .cse34 + .cse21) :LA (4 (- 1) (- 4) 4 (- 1) (- 4) 4 4 1 (- 1)))))))) .cse388)))) .cse379) .cse110) .cse137) .cse138) .cse20) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (res .cse87 .cse88 (farkas 4 .cse87 4 .cse389 1 .cse85 4 .cse265 1 .cse83 4 .cse404 1 .cse34 1 .cse79)))))) :proves (- .cse19 - .cse389 - .cse77 - .cse150 - .cse71 - .cse404 - .cse34 + .cse21) :LA ((- 4) 4 (- 1) (- 4) (- 1) 4 1 (- 1)))))) .cse10) .cse363) .cse364))))) .cse8)))))) .cse109) :proves (- .cse389 - .cse219 - .cse111 - .cse296 - .cse150 - .cse132) :rup))) (let-proof ((.cse394 (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse335 .cse336 (res .cse6 (res .cse77 .cse78 (res .cse340 .cse341 (res .cse369 .cse370 (res .cse371 .cse372 (res .cse337 (res .cse9 (res .cse5 (res .cse30 (! (res .cse265 .cse266 (let ((.cse395 (< .cse55 .cse194))) (res .cse395 (let ((.cse396 (< .cse194 .cse55))) (res .cse396 (trichotomy .cse55 .cse194) (farkas 1 .cse150 1 .cse396))) (farkas 1 .cse265 1 .cse395)))) :proves (+ .cse30 - .cse150) :EQ) (res .cse121 (res .cse44 (res .cse119 (res .cse42 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse41 .cse43 (res .cse40 .cse53 (res .cse132 (res .cse124 .cse133 (res .cse74 .cse131 (res .cse227 (res .cse179 (res .cse16 .cse181 (res .cse325 .cse326 (res .cse344 (res .cse345 (res .cse346 (res .cse14 (res .cse2 (res .cse1 .cse7 (res .cse0 .cse110 (res .cse113 .cse114 (res .cse390 (res .cse397 .cse398 (! (res .cse399 .cse400 (trans 0 .cse54 .cse194 .cse55)) :proves (+ .cse390 - .cse40 - .cse397 - .cse30) :trans (0 .cse54 .cse194 .cse55))) (res .cse115 .cse116 (res .cse389 .cse392 (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse389 1 .cse85 4 .cse265 1 .cse83 4 .cse115 1 .cse34 1 .cse79))))) :proves (- .cse389 - .cse77 - .cse150 - .cse71 - .cse115 - .cse34 + .cse21) :LA (4 (- 1) (- 4) (- 1) 4 1 (- 1))))))))) .cse15) .cse348) .cse349) .cse350) .cse401))) .cse253) .cse331))) (! (res .cse3 .cse4 (res .cse335 .cse336 (res .cse6 (res .cse340 .cse341 (res .cse369 .cse370 (res .cse371 .cse372 (res .cse337 (res .cse9 (res .cse5 (res .cse121 (res .cse44 (res .cse119 (res .cse42 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse41 .cse43 (res .cse40 .cse53 (res .cse402 .cse403 (res .cse404 .cse405 (res .cse389 (res .cse390 (res .cse38 (res .cse127 .cse128 (res .cse104 .cse129 (res .cse227 (res .cse179 (res .cse16 .cse181 (res .cse325 .cse326 (res .cse344 (res .cse345 (res .cse11 (res .cse346 (res .cse14 (res .cse2 (res .cse152 (res .cse153 .cse154 (res .cse155 .cse156 (! (res .cse402 (symm 0 .cse184) (res .cse158 .cse159 (farkas 1 .cse158 1 .cse402 1 .cse155))) :proves (+ .cse152 - .cse404 - .cse155) :LA ((- 1) (- 1) 1)))) (res .cse162 (res .cse163 .cse164 (! (res .cse165 .cse166 (farkas 1 .cse165 1 .cse404 1 .cse163)) :proves (+ .cse6 - .cse404 - .cse163) :LA ((- 1) 1 1))) .cse167)) .cse15) .cse348) .cse349) .cse347) .cse350) .cse401))) .cse253) .cse319))) .cse391) .cse392) .cse393))))))) .cse45) .cse122) .cse320) .cse321) .cse10) .cse363) .cse364)))) .cse8))) :proves (- .cse219 - .cse150 - .cse46 - .cse296 - .cse132) :rup)))))) .cse45) .cse122) .cse320) .cse321)) .cse10) .cse363) .cse364))))) .cse8))))) .cse109) :proves (- .cse219 - .cse150 - .cse46 - .cse296) :rup))) (res .cse46 (res .cse124 (res .cse127 (res .cse19 (res .cse11 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse111 (res .cse69 (res .cse119 .cse120 (res .cse121 .cse122 (res .cse170 .cse171 (res .cse172 .cse173 (res .cse44 (res .cse42 (res .cse41 .cse43 (res .cse243 .cse244 (res .cse245 .cse246 (res .cse345 (res .cse346 (res .cse14 (res .cse2 (res .cse1 .cse7 (res .cse0 .cse110 .cse384)) .cse15) .cse348) .cse349) (! (res .cse369 .cse370 (res .cse342 .cse343 (res .cse371 .cse372 (res .cse16 (res .cse247 (! (trans 3 .cse185 .cse385 .cse258) :proves (+ .cse247 - .cse245 - .cse345 - .cse296) :trans (3 .cse185 .cse385 .cse258)) (res .cse251 .cse252 (res .cse179 .cse181 (res .cse94 .cse183 (res .cse227 .cse253 (res .cse254 .cse255 (! (let ((.cse386 (= 0 .cse387))) (res .cse386 (symm 0 .cse387) (res .cse256 .cse257 (farkas 1 .cse172 1 .cse147 1 .cse256 1 .cse254 1 .cse371 1 .cse386)))) :proves (- .cse172 - .cse147 - .cse251 - .cse254 - .cse371 - .cse342) :LA (1 1 (- 1) 1 1 (- 1))))))))) .cse388)))) :proves (- .cse345 - .cse245 - .cse296 - .cse172 - .cse219 + .cse11 - .cse147) :rup))))) .cse45) .cse267))))) .cse112) (! (res .cse21 (res .cse365 .cse366 (res .cse34 .cse35 (res .cse367 .cse368 (res .cse71 .cse72 (res .cse335 .cse336 (res .cse6 (res .cse77 .cse78 (res .cse241 .cse242 (res .cse369 .cse370 (res .cse371 .cse372 (res .cse337 (res .cse9 (res .cse5 (res .cse46 (res .cse124 (res .cse127 (res .cse19 (res .cse11 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse69 .cse268 (res .cse135 (res .cse0 (res .cse1 (res .cse373 (res .cse374 .cse375 (res .cse346 .cse376 (res .cse389 (res .cse390 (res .cse40 (res .cse41 (res .cse345 .cse349 (res .cse16 (res .cse344 .cse350 (res .cse42 .cse43 (res .cse179 .cse181 (res .cse170 .cse269 (res .cse44 .cse45 (res .cse227 .cse253 (res .cse94 .cse183 (res .cse270 .cse271 (res .cse254 .cse255 (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse355 .cse356 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse225 1 .cse85 4 .cse147 4 .cse265 4 .cse254 4 .cse355 1 .cse83 4 .cse69 4 .cse371 1 .cse34 4 .cse270 1 .cse79)))))) :proves (- .cse225 - .cse77 - .cse147 - .cse150 - .cse254 - .cse344 - .cse71 - .cse69 - .cse371 - .cse34 - .cse270 + .cse21) :LA (4 (- 1) 4 (- 4) 4 (- 4) (- 1) 4 4 1 4 (- 1)))))))))))) .cse388)) .cse53) .cse391) .cse392) .cse393))) .cse379) .cse110) .cse137) .cse138)))))) .cse20) .cse168) .cse169) .cse126) .cse394) .cse10) .cse363) .cse364))))) .cse8)))))) .cse109) :proves (- .cse219 - .cse296 - .cse111 - .cse150) :rup)))))) .cse20) .cse168) .cse169) .cse126) .cse394)))))) .cse10) .cse363) .cse364)))) .cse8))))) .cse109) :proves (- .cse219 - .cse150 - .cse296) :rup))) (res .cse150 (res .cse30 (let ((.cse353 (= .cse258 0)) (.cse351 (= 0 .cse258))) (let-proof ((.cse352 (! (res .cse234 .cse235 (res .cse261 .cse262 (res .cse382 .cse383 (trans 0 .cse289 .cse184 .cse233 .cse258)))) :proves (+ .cse351 - .cse111 - .cse132 - .cse16 - .cse219) :trans (0 .cse289 .cse184 .cse233 .cse258))) (.cse354 (! (res .cse353 (symm .cse258 0) (let ((.cse380 (< .cse258 0))) (res .cse380 (let ((.cse381 (< 0 .cse258))) (res .cse381 (trichotomy .cse258 0) (farkas 1 .cse353 1 .cse381))) (farkas 1 .cse351 1 .cse380)))) :proves (- .cse351 + .cse353) :EQ)) (.cse361 (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse199 .cse200 (res .cse85 .cse86 (farkas 4 .cse229 4 .cse225 4 .cse41 1 .cse85 4 .cse199 1 .cse83 4 .cse355 4 .cse342 1 .cse34 4 .cse353 1 .cse79)))))) :proves (- .cse229 - .cse225 - .cse41 - .cse77 - .cse195 - .cse71 - .cse344 - .cse342 - .cse34 - .cse353 + .cse21) :LA (4 4 4 (- 1) (- 4) (- 1) (- 4) 4 1 4 (- 1))))) (let-proof ((.cse338 (! (res .cse21 (res .cse3 .cse4 (res .cse365 .cse366 (res .cse34 .cse35 (res .cse367 .cse368 (res .cse71 .cse72 (res .cse335 .cse336 (res .cse6 (res .cse77 .cse78 (res .cse241 .cse242 (res .cse369 .cse370 (res .cse342 .cse343 (res .cse371 .cse372 (res .cse337 (res .cse9 (res .cse5 (res .cse150 (res .cse30 (res .cse127 (res .cse124 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse0 (res .cse1 (res .cse2 .cse180 (res .cse373 (res .cse374 .cse375 (res .cse14 .cse15 (res .cse346 .cse376 (res .cse345 .cse349 (res .cse344 .cse350 (res .cse24 (res .cse193 .cse236 (res .cse195 .cse196 (res .cse202 .cse203 (res .cse227 .cse228 (res .cse50 .cse204 (res .cse229 .cse230 (res .cse94 (res .cse179 (res .cse16 .cse181 (res .cse119 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse351 .cse352 (res .cse353 .cse354 (res .cse41 (res .cse270 (res .cse42 .cse43 (res .cse170 .cse269 (res .cse44 .cse45 .cse271))) (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse199 .cse200 (res .cse85 .cse86 (farkas 4 .cse229 4 .cse225 1 .cse85 4 .cse199 1 .cse83 4 .cse355 4 .cse342 1 .cse34 4 .cse353 4 .cse270 1 .cse79)))))) :proves (- .cse229 - .cse225 - .cse77 - .cse195 - .cse71 - .cse344 - .cse342 - .cse34 - .cse353 - .cse270 + .cse21) :LA (4 4 (- 1) (- 4) (- 1) (- 4) 4 1 4 4 (- 1)))) .cse361))))) (! (res .cse21 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse77 .cse78 (res .cse94 (res .cse179 (res .cse16 .cse181 (res .cse325 .cse326 (res .cse121 .cse122 (res .cse44 (res .cse170 .cse171 (res .cse42 (res .cse172 .cse173 (res .cse41 .cse43 (! (res .cse355 .cse356 (res .cse83 .cse84 (res .cse79 .cse80 (res .cse199 .cse200 (res .cse85 .cse86 (farkas 4 .cse229 4 .cse325 4 .cse225 4 .cse41 1 .cse85 4 .cse199 1 .cse79 4 .cse172 4 .cse147 1 .cse83 4 .cse355 4 .cse371 1 .cse34)))))) :proves (- .cse229 - .cse325 - .cse225 - .cse41 - .cse77 - .cse195 + .cse21 - .cse172 - .cse147 - .cse71 - .cse344 - .cse371 - .cse34) :LA (4 4 4 4 (- 1) (- 4) (- 1) 4 4 (- 1) (- 4) 4 1)))) .cse45)) (! (res .cse377 .cse378 (trans .cse95 s .cse186 x)) :proves (+ .cse94 - .cse50 - .cse44 - .cse121) :trans (.cse95 s .cse186 x)))))) .cse183) .cse318)))) .cse109) :proves (- .cse50 - .cse371 - .cse119 - .cse195 - .cse225 - .cse229 - .cse147 - .cse344) :rup))) .cse183) .cse318))))))) .cse143)))))) .cse379)) .cse110) .cse240))))) .cse126) .cse169) .cse151) .cse362) .cse10) .cse363) .cse364)))))) .cse8))))))) .cse109) :proves (- .cse296 - .cse219 + .cse46) :rup))) (res .cse46 .cse338 (res .cse121 (res .cse132 (res .cse124 .cse133 (res .cse74 .cse131 (res .cse227 (res .cse202 (res .cse24 .cse203 (res .cse14 (res .cse2 (res .cse1 .cse7 (res .cse0 .cse110 (res .cse38 (res .cse127 .cse128 (res .cse104 .cse129 .cse339)) .cse240))) .cse15) .cse143)) .cse228) .cse331))) (! (res .cse3 .cse4 (res .cse335 .cse336 (res .cse6 (res .cse340 .cse341 (res .cse342 .cse343 (res .cse337 (res .cse9 (res .cse5 (res .cse150 (res .cse30 (res .cse46 .cse338 (res .cse44 (res .cse121 (res .cse119 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse344 (res .cse345 (res .cse346 (res .cse14 (res .cse2 (res .cse1 .cse7 (res .cse0 .cse110 (res .cse135 .cse137 (res .cse38 (res .cse11 .cse138 (res .cse16 (res .cse127 .cse128 (res .cse179 .cse181 (res .cse104 .cse129 (res .cse227 .cse253 .cse319)))) .cse347)) .cse240)))) .cse15) .cse348) .cse349) .cse350) (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (res .cse44 (res .cse121 (res .cse42 (res .cse119 (res .cse41 .cse43 (res .cse40 .cse53 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse225 (res .cse38 (res .cse127 .cse128 (res .cse104 .cse129 (res .cse227 (res .cse179 (res .cse202 (res .cse16 .cse181 (res .cse351 .cse352 (res .cse353 .cse354 (res .cse140 (res .cse141 (res .cse24 .cse203 (res .cse14 (res .cse2 (res .cse1 .cse7 (res .cse0 .cse110 .cse144)) .cse15) .cse143)) .cse145) (! (res .cse79 .cse80 (res .cse355 .cse356 (res .cse83 .cse84 (res .cse85 .cse86 (farkas 1 .cse85 4 .cse140 1 .cse83 4 .cse355 4 .cse342 1 .cse34 4 .cse353 1 .cse79))))) :proves (- .cse77 - .cse140 - .cse71 - .cse344 - .cse342 - .cse34 - .cse353 + .cse21) :LA ((- 1) 4 (- 1) (- 4) 4 1 4 (- 1))))))) .cse228) .cse253) .cse319))) .cse226) (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (res .cse38 (! (res .cse357 .cse358 (let ((.cse359 (< .cse55 .cse54))) (res .cse359 (let ((.cse360 (< .cse54 .cse55))) (res .cse360 (trichotomy .cse55 .cse54) (farkas 1 .cse225 1 .cse360))) (farkas 1 .cse357 1 .cse359)))) :proves (+ .cse38 - .cse225) :EQ) (res .cse0 (res .cse1 (res .cse2 .cse180 (res .cse14 .cse15 (res .cse193 .cse236 (res .cse24 (res .cse195 .cse196 (res .cse202 .cse203 (res .cse50 .cse204 (res .cse227 .cse228 (res .cse94 (res .cse229 .cse230 (res .cse179 (res .cse16 .cse181 (res .cse351 .cse352 (res .cse353 .cse354 .cse361))) .cse183)) .cse318))))) .cse143)))) .cse110) .cse240))) .cse8)))) .cse109) :proves (- .cse219 - .cse344 + .cse5 - .cse342 - .cse225 + .cse30 - .cse41 - .cse132 - .cse111) :rup)))))) .cse122) .cse45) .cse321) .cse320)) .cse8)))) .cse109) :proves (- .cse344 + .cse5 - .cse46 - .cse342 + .cse30 - .cse132 - .cse219) :rup)))) .cse122) .cse321) .cse320)) .cse151) .cse362) .cse10) .cse363) .cse364))) .cse8))) :proves (- .cse296 - .cse219 - .cse132) :rup)) .cse321))))) .cse151) .cse362)))))) .cse10) .cse363)) .cse364)))))))))) .cse8)))))))))) :proves (- .cse219 - .cse296) :rup)))))))) .cse8)))) .cse109) :proves (- .cse219 - .cse46) :rup))) (res .cse46 (res .cse124 (res .cse127 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse38 .cse128 (res .cse225 .cse226 (let ((.cse295 (+ .cse185 (- 1)))) (let ((.cse237 (= .cse295 0))) (let-proof ((.cse238 (! (let ((.cse292 (= .cse185 1))) (res .cse292 (symm .cse185 1) (let ((.cse293 (< .cse295 0))) (res .cse293 (let ((.cse294 (< 0 .cse295))) (res .cse294 (trichotomy .cse295 0) (farkas 1 .cse292 1 .cse294))) (farkas 1 .cse178 1 .cse293))))) :proves (- .cse178 + .cse237) :EQ))) (let-proof ((.cse263 (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (res .cse249 .cse250 (res .cse46 (res .cse124 (res .cse127 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse69 .cse268 (res .cse140 (res .cse141 (res .cse30 .cse149 (res .cse40 (res .cse150 .cse151 (res .cse41 (res .cse19 (res .cse11 (res .cse113 (res .cse42 .cse43 (res .cse135 (res .cse0 (res .cse1 (res .cse9 (res .cse5 (res .cse2 .cse180 (res .cse14 .cse15 (res .cse170 .cse269 (res .cse44 .cse45 (res .cse270 .cse271 (res .cse16 (res .cse237 (res .cse178 (let ((.cse272 (= 1 .cse258))) (res .cse272 (let ((.cse277 (+ .cse258 (- 1)))) (let ((.cse273 (= .cse277 0))) (res .cse273 (res .cse179 .cse181 (res .cse227 .cse253 (res .cse94 .cse183 (res .cse254 .cse255 (let ((.cse274 (<= .cse258 0))) (res .cse274 (let ((.cse275 (<= .cse277 0))) (res .cse275 (! (let ((.cse276 (<= 1 .cse277))) (res .cse276 (total-int .cse277 0) (farkas 1 .cse147 1 .cse254 1 .cse69 1 .cse249 1 .cse276))) :proves (- .cse147 - .cse254 - .cse69 - .cse249 + .cse275) :LA (1 1 1 1 (- 1))) (! (let ((.cse278 (< .cse277 0))) (res .cse278 (let ((.cse279 (< 0 .cse277))) (res .cse279 (trichotomy .cse277 0) (farkas 1 .cse279 1 .cse275))) (let ((.cse280 (<= 1 .cse258))) (res .cse280 (total-int .cse258 0) (farkas 1 .cse280 1 .cse278))))) :proves (- .cse275 + .cse273 + .cse274) :trichotomy))) (! (let ((.cse281 (= 0 .cse282))) (res .cse281 (symm 0 .cse282) (res .cse111 .cse157 (res .cse283 .cse284 (res .cse160 .cse161 (farkas 1 .cse274 1 .cse160 1 .cse283 1 .cse111 1 .cse281)))))) :proves (- .cse274 - .cse147 - .cse254 - .cse69 - .cse249) :LA (1 (- 1) (- 1) (- 1) (- 1))))))))) (! (let ((.cse285 (= 0 .cse277))) (res .cse285 (symm 0 .cse277) (let ((.cse286 (< 1 .cse258))) (res .cse286 (let ((.cse287 (< .cse258 1))) (res .cse287 (trichotomy 1 .cse258) (farkas 1 .cse285 1 .cse287))) (farkas 1 .cse273 1 .cse286))))) :proves (+ .cse272 - .cse273) :EQ)))) (res .cse231 .cse232 (! (trans 1 .cse258 .cse233 .cse185) :proves (+ .cse178 - .cse272 - .cse219 - .cse231) :trans (1 .cse258 .cse233 .cse185))))) .cse238) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse237 4 .cse225 1 .cse85 4 .cse265 1 .cse83 1 .cse34 4 .cse270 1 .cse79))))) :proves (- .cse237 - .cse225 - .cse77 - .cse150 - .cse71 - .cse34 - .cse270 + .cse21) :LA (4 4 (- 1) (- 4) (- 1) 1 4 (- 1)))) .cse18)))))) .cse10) .cse288) .cse110) .cse137) .cse138)) (! (res .cse69 .cse290 (trans .cse184 .cse289 0 .cse185)) :proves (+ .cse11 - .cse132 - .cse111 - .cse113) :trans (.cse184 .cse289 0 .cse185))) .cse20) .cse168) .cse53)) .cse201)) .cse145) .cse291)))))) .cse169) .cse126) .cse264))) .cse8)))) .cse109) :proves (- .cse219 - .cse111) :rup))) (res .cse111 (res .cse69 (res .cse119 .cse120 (res .cse170 .cse171 (res .cse121 .cse122 (res .cse44 (res .cse172 .cse173 (res .cse174 .cse175 (res .cse176 .cse177 (res .cse42 (res .cse41 .cse43 (res .cse150 (res .cse30 (res .cse0 (res .cse1 (res .cse24 (res .cse9 (res .cse5 (res .cse2 .cse180 (res .cse14 .cse15 (res .cse202 .cse203 (res .cse227 .cse228 (res .cse50 .cse204 (res .cse94 (res .cse229 .cse230 (res .cse179 (res .cse16 .cse181 (res .cse178 (res .cse231 .cse232 (! (res .cse234 .cse235 (trans 1 .cse184 .cse233 .cse185)) :proves (+ .cse178 - .cse176 - .cse16 - .cse231) :trans (1 .cse184 .cse233 .cse185))) (res .cse193 .cse236 (res .cse237 .cse238 (res .cse195 .cse196 (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse199 .cse200 (res .cse85 .cse86 (farkas 4 .cse229 4 .cse237 4 .cse225 4 .cse41 1 .cse85 4 .cse199 1 .cse83 1 .cse34 1 .cse79))))) :proves (- .cse229 - .cse237 - .cse225 - .cse41 - .cse77 - .cse195 - .cse71 - .cse34 + .cse21) :LA (4 4 4 4 (- 1) (- 4) (- 1) 1 (- 1)))))))) .cse183)) (! (res .cse187 .cse188 (trans .cse186 x .cse95 s)) :proves (+ .cse44 - .cse121 - .cse94 - .cse50) :trans (.cse186 x .cse95 s)))))))) .cse10) .cse239) .cse118) .cse110) .cse240) .cse151) (! (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse71 .cse72 (res .cse6 (res .cse77 .cse78 (res .cse241 .cse242 (res .cse46 (res .cse124 (res .cse127 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse38 .cse128 (res .cse225 .cse226 (res .cse111 (res .cse69 (res .cse119 .cse120 (res .cse170 .cse171 (res .cse121 .cse122 (res .cse44 (res .cse172 .cse173 (res .cse174 .cse175 (res .cse176 .cse177 (res .cse42 (res .cse41 .cse43 (res .cse237 (res .cse243 .cse244 (res .cse178 (res .cse245 .cse246 (res .cse247 (res .cse14 (res .cse2 (res .cse0 (res .cse1 (res .cse5 .cse136 (res .cse9 .cse10 (res .cse11 .cse12 (! (trans 1 .cse184 .cse185) :proves (+ .cse178 - .cse176 - .cse11) :trans (1 .cse184 .cse185))))) .cse110) .cse182) .cse15) .cse248) (! (res .cse249 .cse250 (res .cse46 (res .cse124 (res .cse132 .cse133 (res .cse147 .cse148 (res .cse111 (res .cse69 (res .cse119 .cse120 (res .cse170 .cse171 (res .cse121 .cse122 (res .cse172 .cse173 (res .cse174 .cse175 (res .cse176 .cse177 (res .cse16 (res .cse251 .cse252 (res .cse179 .cse181 (res .cse94 .cse183 (res .cse227 .cse253 (res .cse254 .cse255 (! (res .cse256 .cse257 (farkas 1 .cse172 1 .cse147 1 .cse256 1 .cse254 1 .cse249)) :proves (- .cse172 - .cse147 - .cse251 - .cse254 - .cse249) :LA (1 1 (- 1) 1 1))))))) (! (res .cse234 .cse235 (res .cse259 .cse260 (res .cse261 .cse262 (trans 1 .cse184 .cse233 .cse258 3 .cse185)))) :proves (+ .cse178 - .cse176 - .cse16 - .cse219 - .cse247 - .cse245) :trans (1 .cse184 .cse233 .cse258 3 .cse185))))))))) .cse112) .cse263))) .cse126) .cse264)) :proves (- .cse247 - .cse245 + .cse178 - .cse219) :rup))) .cse238)) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse265 .cse266 (res .cse85 .cse86 (farkas 4 .cse237 4 .cse225 4 .cse41 1 .cse85 4 .cse265 1 .cse83 1 .cse34 1 .cse79))))) :proves (- .cse237 - .cse225 - .cse41 - .cse77 - .cse150 - .cse71 - .cse34 + .cse21) :LA (4 4 4 (- 1) (- 4) (- 1) 1 (- 1))))) .cse45)))) .cse267)))) .cse112) .cse263))))) .cse169) .cse126) .cse264))) .cse8)))) .cse109) :proves (- .cse219 - .cse150) :rup))) .cse45)))) .cse267)))) .cse112) .cse263))))))))) .cse169) .cse126) .cse264)))))))))) .cse8)))) .cse109) :proves (- .cse219) :rup)) :proves (+ .cse107) :rup))) (let-proof ((.cse49 (! (res .cse107 .cse108 (! (and- 0 .cse107) :proves (- .cse107 + .cse48) :input)) :proves (+ .cse48) :rup))) (let ((.cse189 (= percent .cse186))) (let-proof ((.cse190 (symm percent .cse186)) (.cse52 (! (res .cse205 .cse206 (res .cse213 .cse214 (res .cse48 .cse49 (res .cse215 (! (res .cse210 .cse211 (res .cse216 .cse217 (trans 115 s .cse95 percent 37))) :proves (+ .cse215 - .cse213 - .cse50 - .cse48 - .cse205) :trans (115 s .cse95 percent 37)) .cse218)))) :proves (- .cse50) :rup))) (let-proof ((.cse99 (! (res .cse205 .cse206 (res .cse48 .cse49 (res .cse207 .cse208 (res .cse209 (! (res .cse210 .cse211 (res .cse187 .cse188 (trans 120 x .cse95 percent 37))) :proves (+ .cse209 - .cse207 - .cse94 - .cse48 - .cse205) :trans (120 x .cse95 percent 37)) .cse212)))) :proves (- .cse94) :rup)) (.cse25 (! (res .cse202 .cse203 (! (res .cse50 .cse204 .cse52) :proves (- .cse202) :rup)) :proves (+ .cse24) :rup)) (.cse51 (! (res .cse189 .cse190 (trans .cse95 percent .cse186 s)) :proves (+ .cse50 - .cse48 - .cse46 - .cse44) :trans (.cse95 percent .cse186 s)))) (let-proof ((.cse117 (! (res .cse24 .cse25 (res .cse21 (res .cse34 .cse35 (res .cse50 (res .cse71 .cse72 (res .cse48 .cse49 (res .cse191 (! (res .cse24 .cse25 .cse192) :proves (+ .cse191) :rup) (res .cse77 .cse78 (res .cse44 (res .cse42 (res .cse41 .cse43 (res .cse40 .cse53 (res .cse140 (res .cse141 (res .cse193 (! (trans .cse56 .cse55 .cse194) :proves (+ .cse193 - .cse24 - .cse30) :trans (.cse56 .cse55 .cse194)) (res .cse38 (res .cse195 .cse196 (res .cse197 (res .cse127 .cse128 (res .cse104 .cse129 .cse198)) (! (res .cse79 .cse80 (res .cse83 .cse84 (res .cse199 .cse200 (res .cse85 .cse86 (farkas 4 .cse41 1 .cse85 4 .cse199 4 .cse191 1 .cse83 4 .cse115 1 .cse34 1 .cse79 4 .cse197))))) :proves (- .cse41 - .cse77 - .cse195 - .cse191 - .cse71 - .cse115 - .cse34 + .cse21 - .cse197) :LA (4 (- 1) (- 4) 4 (- 1) 4 1 (- 1) 4)))) .cse201)) .cse145) .cse146))) .cse45) .cse51))))) .cse52)) .cse109)) :proves (- .cse30 - .cse115 - .cse46) :rup)) (.cse123 (! (res .cse189 .cse190 (trans .cse95 percent .cse186 x)) :proves (+ .cse94 - .cse48 - .cse46 - .cse121) :trans (.cse95 percent .cse186 x))) (.cse17 (! (res .cse179 .cse181 (! (res .cse94 .cse183 .cse99) :proves (- .cse179) :rup)) :proves (+ .cse16) :rup))) (let-proof ((.cse125 (! (res .cse132 .cse133 (! (res .cse94 (res .cse24 .cse25 (res .cse21 (res .cse3 .cse4 (res .cse34 .cse35 (res .cse50 (res .cse71 .cse72 (res .cse48 .cse49 (res .cse6 (res .cse77 .cse78 (let-proof ((.cse134 (! (res .cse3 .cse4 (res .cse16 .cse17 (res .cse6 (res .cse147 .cse148 (res .cse119 (res .cse127 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse38 .cse128 (res .cse30 .cse149 (res .cse150 .cse151 (res .cse19 (res .cse11 (res .cse9 (res .cse5 (res .cse14 (res .cse2 (res .cse152 (res .cse153 .cse154 (res .cse155 .cse156 (! (res .cse111 .cse157 (res .cse158 .cse159 (res .cse160 .cse161 (farkas 1 .cse160 1 .cse158 1 .cse111 1 .cse155)))) :proves (- .cse147 + .cse152 - .cse69 - .cse155) :LA ((- 1) (- 1) (- 1) 1)))) (res .cse162 (res .cse163 .cse164 (! (res .cse165 .cse166 (farkas 1 .cse165 1 .cse147 1 .cse69 1 .cse163)) :proves (+ .cse6 - .cse147 - .cse69 - .cse163) :LA ((- 1) 1 1 1))) .cse167)) .cse15) .cse18) .cse10) .cse12) .cse20) .cse168)))))) .cse169) (! (res .cse24 .cse25 (res .cse3 .cse4 (res .cse48 .cse49 (res .cse6 (res .cse147 .cse148 (res .cse127 (res .cse38 .cse128 (res .cse30 .cse118 (res .cse150 .cse151 (res .cse19 (res .cse11 (res .cse9 (res .cse5 (res .cse121 .cse122 (res .cse94 (res .cse170 .cse171 (res .cse172 .cse173 (res .cse174 .cse175 (res .cse176 .cse177 (res .cse178 (res .cse179 (res .cse0 (res .cse1 (res .cse2 .cse180 (res .cse14 .cse15 (res .cse16 .cse181 .cse18))) .cse110) .cse182) .cse183) (! (res (= .cse184 1) (symm .cse184 1) (trans .cse184 1 .cse185)) :proves (+ .cse11 - .cse176 - .cse178) :trans (.cse184 1 .cse185))))))) (! (res .cse187 .cse188 (trans .cse186 x .cse95 percent)) :proves (+ .cse46 - .cse121 - .cse94 - .cse48) :trans (.cse186 x .cse95 percent)))) .cse10) .cse12) .cse20) .cse168)))) .cse169)) .cse8)))) :proves (- .cse119 + .cse46 - .cse132) :rup))) .cse8))) :proves (+ .cse46 - .cse132) :rup))) (res .cse46 .cse134 (res .cse121 (res .cse44 (res .cse119 (res .cse42 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse41 .cse43 (res .cse40 .cse53 (res .cse11 (! (res .cse94 (res .cse3 .cse4 (res .cse16 .cse17 (res .cse48 .cse49 (res .cse6 (res .cse46 .cse134 (res .cse121 (res .cse119 (res .cse69 .cse120 (res .cse111 .cse112 (res .cse135 (res .cse0 (res .cse1 (res .cse14 (res .cse2 (res .cse5 .cse136 (res .cse9 .cse10 .cse12)) .cse15) .cse18) .cse110) .cse137) .cse138))) .cse122) .cse123)) .cse8)))) .cse99) :proves (+ .cse11 - .cse132) :rup) (res .cse113 .cse139 (res .cse115 .cse116 (res .cse140 (res .cse141 (res .cse0 (res .cse1 (res .cse30 (res .cse14 (res .cse2 .cse142 .cse15) .cse143) .cse117) .cse110) .cse144) .cse145) .cse146)))))))) .cse45) .cse122) .cse51) .cse123)))) .cse8))) .cse52))) .cse109)) .cse99) :proves (- .cse132) :rup)) :proves (+ .cse124) :rup))) (let-proof ((.cse75 (! (res .cse124 .cse125 .cse131) :proves (+ .cse74) :rup))) (let-proof ((.cse106 (! (res .cse74 .cse75 .cse130) :proves (- .cse104) :rup))) (let-proof ((.cse39 (! (res .cse127 .cse128 (! (res .cse104 .cse129 .cse106) :proves (- .cse127) :rup)) :proves (+ .cse38) :rup)) (.cse47 (! (res .cse124 .cse125 .cse126) :proves (+ .cse46) :rup))) (let-proof ((.cse70 (! (res .cse119 .cse120 (! (res .cse121 .cse122 (! (res .cse46 .cse47 (res .cse48 .cse49 (res .cse94 .cse123 .cse99))) :proves (- .cse121) :rup)) :proves (- .cse119) :rup)) :proves (+ .cse69) :rup)) (.cse31 (! (res .cse24 .cse25 (res .cse38 .cse39 .cse118)) :proves (+ .cse30) :rup))) (res .cse0 (! (res .cse1 (! (let-proof ((.cse13 (! (res .cse19 .cse20 (! (res .cse21 (let-proof ((.cse93 (! (res .cse107 .cse108 (! (and- 1 .cse107) :proves (- .cse107 + .cse92) :input)) :proves (+ .cse92) :rup))) (let-proof ((.cse27 (! (res .cse100 .cse101 (! (res .cse102 .cse103 (! (res .cse92 .cse93 (res .cse74 .cse75 (res .cse104 (! (res (= x .cse96) (symm x .cse96) (trans .cse105 x .cse96 s)) :proves (+ .cse104 - .cse74 - .cse92 - .cse102) :trans (.cse105 x .cse96 s)) .cse106))) :proves (- .cse102) :rup)) :proves (- .cse100) :rup)) :proves (+ .cse26) :rup)) (.cse29 (! (res .cse89 .cse90 (! (res .cse91 (! (and- 0 .cse89) :proves (- .cse89 + .cse91) :input) (! (res .cse92 .cse93 (res .cse48 .cse49 (res .cse94 (! (res .cse97 .cse98 (trans .cse95 percent .cse96 x)) :proves (+ .cse94 - .cse48 - .cse91 - .cse92) :trans (.cse95 percent .cse96 x)) .cse99))) :proves (- .cse91) :rup)) :proves (- .cse89) :rup)) :proves (+ .cse28) :rup))) (res .cse22 (! (res .cse23 (! (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse30 .cse31 .cse32)))) :proves (+ .cse23) :rup) .cse33) :proves (+ .cse22) :rup) (res .cse34 .cse35 (let ((.cse36 (= .cse58 0))) (res .cse36 (! (let ((.cse37 (= 0 .cse58))) (res .cse37 (! (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 .cse29 (res .cse38 .cse39 (res .cse40 (! (res .cse41 (! (res .cse42 .cse43 (! (res .cse44 .cse45 (! (res .cse46 .cse47 (res .cse48 .cse49 (res .cse50 .cse51 .cse52))) :proves (- .cse44) :rup)) :proves (- .cse42) :rup)) :proves (+ .cse41) :rup) .cse53) :proves (+ .cse40) :rup) (! (res .cse59 .cse60 (res .cse61 .cse62 (res .cse63 .cse64 (res .cse65 .cse66 (trans 0 .cse54 .cse55 .cse56 .cse57 .cse58))))) :proves (+ .cse37 - .cse40 - .cse38 - .cse24 - .cse26 - .cse28) :trans (0 .cse54 .cse55 .cse56 .cse57 .cse58))))))) :proves (+ .cse37) :rup) (! (res .cse36 (symm .cse58 0) (let ((.cse67 (< .cse58 0))) (res .cse67 (let ((.cse68 (< 0 .cse58))) (res .cse68 (trichotomy .cse58 0) (farkas 1 .cse36 1 .cse68))) (farkas 1 .cse37 1 .cse67)))) :proves (- .cse37 + .cse36) :EQ))) :proves (+ .cse36) :rup) (res .cse69 .cse70 (res .cse71 .cse72 (res .cse73 (! (res .cse74 .cse75 (res .cse46 .cse47 .cse76)) :proves (+ .cse73) :rup) (res .cse77 .cse78 (! (res .cse79 .cse80 (res .cse81 .cse82 (res .cse83 .cse84 (res .cse85 .cse86 (res .cse87 .cse88 (farkas 4 .cse87 1 .cse85 4 .cse73 1 .cse83 4 .cse69 4 .cse36 1 .cse34 4 .cse81 1 .cse79)))))) :proves (- .cse19 - .cse77 - .cse73 - .cse71 - .cse69 - .cse36 - .cse34 - .cse22 + .cse21) :LA ((- 4) (- 1) 4 (- 1) 4 4 1 (- 4) (- 1))))))))))))) .cse109) :proves (- .cse19) :rup)) :proves (- .cse11) :rup))) (res .cse2 (res .cse3 .cse4 (res .cse5 (res .cse6 .cse7 .cse8) (! (res .cse9 .cse10 (! (res .cse11 .cse12 .cse13) :proves (- .cse9) :rup)) :proves (- .cse5) :rup))) (! (res .cse14 .cse15 (! (res .cse16 .cse17 (res .cse11 .cse18 .cse13)) :proves (- .cse14) :rup)) :proves (- .cse2) :rup))) :proves (+ .cse1) :rup) .cse110) :proves (+ .cse0) :rup) (res .cse111 (! (res .cse69 .cse70 .cse112) :proves (+ .cse111) :rup) (res .cse113 .cse114 (! (res .cse115 .cse116 (! (res .cse46 .cse47 (res .cse30 .cse31 .cse117)) :proves (- .cse115) :rup)) :proves (- .cse113) :rup)))))))))))))))))))))))))))))))))))))))))))))))))) :proves () :rup)
