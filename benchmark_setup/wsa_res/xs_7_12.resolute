unsat
(! (let ((.cse1522 (* (- 1) distance))) (let ((.cse363 (format 2)) (.cse239 (format 1)) (.cse1690 (format 0)) (.cse1427 (+ fmt0 .cse1522)) (.cse1321 (* (- 1) arg1))) (let ((.cse641 (* (- 1) fmt0)) (.cse1676 (+ fmt0 .cse1321)) (.cse623 (= fmt0 0)) (.cse1422 (= arg0 .cse1427)) (.cse1677 (+ fmt0 fmt_length (* (- 1) fmt1) (- 1))) (.cse1651 (+ fmt0 1)) (.cse364 (format 3)) (.cse393 (= .cse1690 percent)) (.cse186 (= .cse239 s)) (.cse386 (= .cse239 percent)) (.cse175 (= .cse363 s)) (.cse125 (s_count 0))) (let ((.cse240 (format 4)) (.cse751 (+ .cse125 1)) (.cse341 (and .cse386 .cse175)) (.cse303 (and .cse393 .cse186)) (.cse172 (= .cse363 percent)) (.cse170 (= .cse364 s)) (.cse126 (s_count 1)) (.cse1697 (+ fmt0 2)) (.cse1590 (= fmt1 fmt0)) (.cse1588 (= fmt1 .cse1651)) (.cse1386 (= distance 12)) (.cse1493 (= fmt_length 7)) (.cse1455 (<= .cse1677 0)) (.cse1423 (and .cse623 .cse1422)) (.cse1510 (<= .cse1676 0)) (.cse1446 (+ fmt1 .cse641 (- 1))) (.cse184 (= .cse239 x)) (.cse340 (= .cse363 x)) (.cse110 (x_count 0))) (let ((.cse1273 (+ .cse110 1)) (.cse384 (and .cse386 .cse340)) (.cse414 (and .cse393 .cse184)) (.cse246 (= .cse364 x)) (.cse15 (x_count 1)) (.cse87 (<= .cse1446 0)) (.cse1511 (and .cse1423 .cse1510)) (.cse1459 (not .cse1455)) (.cse317 (+ fmt1 .cse641 (- 2))) (.cse1387 (and .cse1386 .cse1493)) (.cse1696 (+ fmt0 3)) (.cse1587 (or .cse1590 .cse1588)) (.cse1585 (= fmt1 .cse1697)) (.cse1692 (format 5)) (.cse1154 (+ .cse126 1)) (.cse178 (and .cse172 .cse170)) (.cse758 (not .cse303)) (.cse78 (= .cse125 0)) (.cse573 (= .cse125 1)) (.cse877 (not .cse341)) (.cse72 (= .cse126 .cse125)) (.cse745 (= .cse126 .cse751)) (.cse144 (= .cse364 percent)) (.cse189 (= .cse240 s)) (.cse14 (s_count 2))) (let ((.cse1139 (+ .cse14 1)) (.cse142 (and .cse144 .cse189)) (.cse746 (=> .cse341 .cse745)) (.cse876 (=> .cse877 .cse72)) (.cse574 (=> .cse303 .cse573)) (.cse757 (=> .cse758 .cse78)) (.cse1369 (not .cse178)) (.cse182 (= .cse14 .cse126)) (.cse1357 (= .cse14 .cse1154)) (.cse192 (= .cse240 percent)) (.cse966 (= .cse1692 s)) (.cse13 (s_count 3)) (.cse1584 (or .cse1587 .cse1585)) (.cse1582 (= fmt1 .cse1696)) (.cse1526 (and .cse1387 (= adr_lo 3))) (.cse109 (x_count .cse317)) (.cse12 (s_count .cse317)) (.cse1646 (+ arg0 distance .cse1321)) (.cse1467 (and .cse1511 .cse1459)) (.cse1435 (not .cse87)) (.cse1678 (+ arg0 distance fmt_length .cse1321 (- 4))) (.cse1221 (+ .cse15 1)) (.cse248 (and .cse172 .cse246)) (.cse760 (not .cse414)) (.cse415 (= .cse110 0)) (.cse602 (= .cse110 1)) (.cse1280 (not .cse384)) (.cse74 (= .cse15 .cse110)) (.cse1267 (= .cse15 .cse1273)) (.cse191 (= .cse240 x)) (.cse62 (x_count 2))) (let ((.cse910 (+ .cse62 1)) (.cse63 (x_count 3)) (.cse167 (and .cse144 .cse191)) (.cse1268 (=> .cse384 .cse1267)) (.cse1279 (=> .cse1280 .cse74)) (.cse603 (=> .cse414 .cse602)) (.cse759 (=> .cse760 .cse415)) (.cse1228 (not .cse248)) (.cse55 (= .cse62 .cse15)) (.cse1215 (= .cse62 .cse1221)) (.cse1691 (= .cse1692 x)) (.cse1396 (<= .cse1678 0)) (.cse1433 (and .cse1467 .cse1435)) (.cse1642 (<= .cse1646 0)) (.cse1609 (* 4 .cse12)) (.cse1599 (* 4 .cse109)) (.cse1527 (and .cse1526 (= adr_medlo 4))) (.cse596 (= percent 37)) (.cse480 (= s 115)) (.cse661 (= arg1 fmt0)) (.cse1564 (= arg1 .cse1651)) (.cse1581 (or .cse1584 .cse1582)) (.cse1579 (= fmt1 (+ fmt0 4))) (.cse974 (+ .cse13 1)) (.cse230 (s_count 4)) (.cse195 (and .cse192 .cse966)) (.cse1358 (=> .cse178 .cse1357)) (.cse1368 (=> .cse1369 .cse182)) (.cse575 (and .cse574 .cse757)) (.cse747 (and .cse746 .cse876)) (.cse1146 (not .cse142)) (.cse8 (= .cse13 .cse14)) (.cse1133 (= .cse13 .cse1139))) (let ((.cse1134 (=> .cse142 .cse1133)) (.cse1145 (=> .cse1146 .cse8)) (.cse763 (and .cse575 .cse747)) (.cse1359 (and .cse1358 .cse1368)) (.cse1296 (not .cse195)) (.cse197 (= .cse230 .cse13)) (.cse968 (= .cse230 .cse974)) (.cse1578 (or .cse1581 .cse1579)) (.cse1576 (= fmt1 (+ fmt0 5))) (.cse1563 (or .cse661 .cse1564)) (.cse1561 (= arg1 .cse1697)) (.cse1381 (and .cse596 .cse480)) (.cse401 (= x 120)) (.cse1528 (and .cse1527 (= adr_medhi 5))) (.cse1416 (+ arg0 .cse1609 .cse1599)) (.cse1540 (and .cse1433 .cse1642)) (.cse1400 (not .cse1396)) (.cse206 (x_count 4)) (.cse196 (and .cse192 .cse1691)) (.cse1216 (=> .cse248 .cse1215)) (.cse1227 (=> .cse1228 .cse55)) (.cse604 (and .cse603 .cse759)) (.cse1269 (and .cse1268 .cse1279)) (.cse1244 (not .cse167)) (.cse57 (= .cse63 .cse62)) (.cse1232 (= .cse63 .cse910))) (let ((.cse1233 (=> .cse167 .cse1232)) (.cse1243 (=> .cse1244 .cse57)) (.cse761 (and .cse604 .cse1269)) (.cse1217 (and .cse1216 .cse1227)) (.cse204 (not .cse196)) (.cse199 (= .cse206 .cse63)) (.cse1408 (and .cse1540 .cse1400)) (.cse1411 (= arg1 .cse1416)) (.cse1529 (and .cse1528 (= adr_hi 6))) (.cse1378 (and .cse1381 .cse401)) (.cse1560 (or .cse1563 .cse1561)) (.cse1558 (= arg1 .cse1696)) (.cse1575 (or .cse1578 .cse1576)) (.cse1573 (= fmt1 (+ fmt0 6))) (.cse969 (=> .cse195 .cse968)) (.cse1295 (=> .cse1296 .cse197)) (.cse1370 (and .cse763 .cse1359)) (.cse1135 (and .cse1134 .cse1145))) (let ((.cse1156 (and .cse1370 .cse1135)) (.cse970 (and .cse969 .cse1295)) (.cse1572 (or .cse1575 .cse1573)) (.cse1557 (or .cse1560 .cse1558)) (.cse1518 (and .cse1529 .cse1378)) (.cse1412 (and .cse1408 .cse1411)) (.cse1694 (format 6)) (.cse1451 (+ .cse63 1)) (.cse200 (=> .cse204 .cse199)) (.cse1481 (and .cse761 .cse1217)) (.cse1234 (and .cse1233 .cse1243))) (let ((.cse1479 (and .cse1481 .cse1234)) (.cse201 (and (=> .cse196 (= .cse206 .cse1451)) .cse200)) (.cse1682 (= .cse1694 percent)) (.cse1689 (= .cse1694 x)) (.cse1530 (and .cse1518 .cse1412)) (.cse1555 (and .cse1572 .cse1557)) (.cse1477 (and .cse1156 .cse970)) (.cse1103 (+ .cse230 1)) (.cse1686 (s_count 5)) (.cse1688 (= .cse1692 percent)) (.cse1693 (= .cse1694 s))) (let ((.cse1532 (and .cse1477 (let ((.cse1695 (and .cse1688 .cse1693))) (and (=> .cse1695 (= .cse1686 .cse1103)) (=> (not .cse1695) (= .cse1686 .cse230)))))) (.cse1683 (format 7)) (.cse1541 (and .cse1530 .cse1555)) (.cse1552 (and (and (and (and (and (and (or (or (or (or (or (or (or .cse393 (= .cse1690 s)) (= .cse1690 x)) (= .cse1690 3)) (= .cse1690 4)) (= .cse1690 5)) (= .cse1690 6)) (= .cse1690 255)) (or (or (or (or (or (or (or .cse386 .cse186) .cse184) (= .cse239 3)) (= .cse239 4)) (= .cse239 5)) (= .cse239 6)) (= .cse239 255))) (or (or (or (or (or (or (or .cse172 .cse175) .cse340) (= .cse363 3)) (= .cse363 4)) (= .cse363 5)) (= .cse363 6)) (= .cse363 255))) (or (or (or (or (or (or (or .cse144 .cse170) .cse246) (= .cse364 3)) (= .cse364 4)) (= .cse364 5)) (= .cse364 6)) (= .cse364 255))) (or (or (or (or (or (or (or .cse192 .cse189) .cse191) (= .cse240 3)) (= .cse240 4)) (= .cse240 5)) (= .cse240 6)) (= .cse240 255))) (or (or (or (or (or (or (or .cse1688 .cse966) .cse1691) (= .cse1692 3)) (= .cse1692 4)) (= .cse1692 5)) (= .cse1692 6)) (= .cse1692 255))) (or (or (or (or (or (or (or .cse1682 .cse1693) .cse1689) (= .cse1694 3)) (= .cse1694 4)) (= .cse1694 5)) (= .cse1694 6)) (= .cse1694 255)))) (.cse202 (and .cse1479 .cse201)) (.cse1681 (x_count 5))) (let ((.cse1536 (and .cse202 (let ((.cse1687 (and .cse1688 .cse1689))) (and (=> .cse1687 (= .cse1681 (+ .cse206 1))) (=> (not .cse1687) (= .cse1681 .cse206)))))) (.cse1542 (and .cse1541 .cse1552)) (.cse1533 (and .cse1532 (let ((.cse1684 (and .cse1682 (= .cse1683 s))) (.cse1685 (s_count 6))) (and (=> .cse1684 (= .cse1685 (+ .cse1686 1))) (=> (not .cse1684) (= .cse1685 .cse1686))))))) (let ((.cse1534 (and .cse1542 .cse1533)) (.cse1537 (and .cse1536 (let ((.cse1679 (and .cse1682 (= .cse1683 x))) (.cse1680 (x_count 6))) (and (=> .cse1679 (= .cse1680 (+ .cse1681 1))) (=> (not .cse1679) (= .cse1680 .cse1681))))))) (let ((.cse1404 (< 0 .cse1678)) (.cse1463 (< 0 .cse1677)) (.cse1515 (< 0 .cse1676)) (.cse1261 (< arg1 fmt0)) (.cse1538 (and .cse1534 .cse1537)) (.cse988 (+ arg1 1)) (.cse1319 (+ arg1 2))) (let-proof ((.cse1401 (not+ .cse1400)) (.cse1405 (total .cse1678 0)) (.cse1410 (not- .cse1400)) (.cse1436 (not- .cse1435)) (.cse1460 (not+ .cse1459)) (.cse1464 (total .cse1677 0)) (.cse1469 (not- .cse1459)) (.cse1516 (total .cse1676 0))) (let-proof ((.cse1539 (let ((.cse1548 (and (and (and (and (and (not (= (format fmt1) percent)) (= (format (+ fmt1 1)) s)) (= (format arg1) adr_lo)) (= (format .cse988) adr_medlo)) (= (format .cse1319) adr_medhi)) (= (format (+ arg1 3)) adr_hi)))) (let ((.cse1543 (=> .cse1538 .cse1548))) (res .cse1543 (=>+ 0 .cse1543) (let ((.cse1675 (- fmt0 distance))) (let ((.cse1674 (= arg0 .cse1675)) (.cse1664 (- fmt_length 1)) (.cse1618 (- fmt1 2)) (.cse1570 (+ fmt0 0))) (let ((.cse1589 (= fmt1 .cse1570)) (.cse1603 (- .cse1618 fmt0)) (.cse1662 (+ fmt0 .cse1664)) (.cse1673 (and .cse623 .cse1674)) (.cse1671 (>= arg1 fmt0))) (let ((.cse1632 (- fmt_length 4)) (.cse1668 (and .cse1673 .cse1671)) (.cse1657 (< fmt1 .cse1662)) (.cse1610 (s_count .cse1603)) (.cse1586 (or .cse1589 .cse1588))) (let ((.cse1583 (or .cse1586 .cse1585)) (.cse1600 (x_count .cse1603)) (.cse1608 (* 4 .cse1610)) (.cse1641 (+ arg0 distance)) (.cse1656 (and .cse1668 .cse1657)) (.cse1652 (> fmt1 .cse1651)) (.cse1629 (+ distance .cse1632))) (let ((.cse1627 (+ arg0 .cse1629)) (.cse1648 (and .cse1656 .cse1652)) (.cse1643 (>= arg1 .cse1641)) (.cse1606 (+ arg0 .cse1608)) (.cse1598 (* 4 .cse1600)) (.cse1565 (= arg1 .cse1570)) (.cse1580 (or .cse1583 .cse1582))) (let ((.cse1577 (or .cse1580 .cse1579)) (.cse1562 (or .cse1565 .cse1564)) (.cse1596 (+ .cse1606 .cse1598)) (.cse1638 (and .cse1648 .cse1643)) (.cse1622 (< arg1 .cse1627))) (let ((.cse1621 (and .cse1638 .cse1622)) (.cse1595 (= arg1 .cse1596)) (.cse1559 (or .cse1562 .cse1561)) (.cse1574 (or .cse1577 .cse1576))) (let ((.cse1571 (or .cse1574 .cse1573)) (.cse1556 (or .cse1559 .cse1558)) (.cse1594 (and .cse1621 .cse1595))) (let ((.cse1593 (and .cse1518 .cse1594)) (.cse1554 (and .cse1571 .cse1556))) (let ((.cse1553 (and .cse1593 .cse1554))) (let ((.cse1551 (and .cse1553 .cse1552))) (let ((.cse1550 (and .cse1551 .cse1533))) (let ((.cse1549 (and .cse1550 .cse1537))) (let ((.cse1544 (=> .cse1549 .cse1548))) (let ((.cse1546 (not .cse1544))) (res .cse1544 (let ((.cse1545 (not .cse1543))) (res .cse1545 (res .cse1546 (not+ .cse1546) (let ((.cse1547 (= .cse1546 .cse1545))) (res .cse1547 (res (= .cse1544 .cse1543) (res (= .cse1548 .cse1548) (refl .cse1548) (res (= .cse1549 .cse1538) (res (= .cse1537 .cse1537) (refl .cse1537) (res (= .cse1550 .cse1534) (res (= .cse1533 .cse1533) (refl .cse1533) (res (= .cse1551 .cse1542) (res (= .cse1552 .cse1552) (refl .cse1552) (res (= .cse1553 .cse1541) (let ((.cse1568 (= arg1 arg1)) (.cse1591 (= fmt1 fmt1))) (let-proof ((.cse1569 (refl arg1)) (.cse1592 (refl fmt1))) (res (= .cse1554 .cse1555) (let ((.cse1566 (= .cse1570 fmt0))) (let-proof ((.cse1567 (poly+ .cse1570 fmt0))) (res (= .cse1556 .cse1557) (res (= .cse1558 .cse1558) (refl .cse1558) (res (= .cse1559 .cse1560) (res (= .cse1561 .cse1561) (refl .cse1561) (res (= .cse1562 .cse1563) (res (= .cse1564 .cse1564) (refl .cse1564) (res (= .cse1565 .cse661) (res .cse1566 .cse1567 (res .cse1568 .cse1569 (cong (= arg1 .cse1570) (= arg1 fmt0)))) (cong (or .cse1565 .cse1564) (or .cse661 .cse1564)))) (cong (or .cse1562 .cse1561) (or .cse1563 .cse1561)))) (cong (or .cse1559 .cse1558) (or .cse1560 .cse1558)))) (res (= .cse1571 .cse1572) (res (= .cse1573 .cse1573) (refl .cse1573) (res (= .cse1574 .cse1575) (res (= .cse1576 .cse1576) (refl .cse1576) (res (= .cse1577 .cse1578) (res (= .cse1579 .cse1579) (refl .cse1579) (res (= .cse1580 .cse1581) (res (= .cse1582 .cse1582) (refl .cse1582) (res (= .cse1583 .cse1584) (res (= .cse1585 .cse1585) (refl .cse1585) (res (= .cse1586 .cse1587) (res (= .cse1588 .cse1588) (refl .cse1588) (res (= .cse1589 .cse1590) (res .cse1566 .cse1567 (res .cse1591 .cse1592 (cong (= fmt1 .cse1570) (= fmt1 fmt0)))) (cong (or .cse1589 .cse1588) (or .cse1590 .cse1588)))) (cong (or .cse1586 .cse1585) (or .cse1587 .cse1585)))) (cong (or .cse1583 .cse1582) (or .cse1584 .cse1582)))) (cong (or .cse1580 .cse1579) (or .cse1581 .cse1579)))) (cong (or .cse1577 .cse1576) (or .cse1578 .cse1576)))) (cong (or .cse1574 .cse1573) (or .cse1575 .cse1573)))) (cong (and .cse1571 .cse1556) (and .cse1572 .cse1557)))))) (res (= .cse1593 .cse1530) (res (= .cse1594 .cse1412) (let ((.cse1616 (= fmt0 fmt0)) (.cse1611 (= arg0 arg0))) (let-proof ((.cse1617 (refl fmt0)) (.cse1612 (refl arg0))) (res (= .cse1595 .cse1411) (res (= .cse1596 .cse1416) (let ((.cse1607 (+ arg0 .cse1609))) (let ((.cse1597 (+ .cse1607 .cse1599))) (res (= .cse1597 .cse1416) (poly+ .cse1597 .cse1416) (res (= .cse1596 .cse1597) (let ((.cse1601 (= .cse1603 .cse317)) (.cse1604 (= 4 4))) (let-proof ((.cse1602 (let ((.cse1614 (+ fmt1 (- 2)))) (let ((.cse1613 (- .cse1614 fmt0))) (res (= .cse1613 .cse317) (res (= .cse641 .cse641) (refl .cse641) (res (= .cse1614 .cse1614) (refl .cse1614) (let ((.cse1615 (+ .cse1614 .cse641))) (res (= .cse1615 .cse1615) (cong (+ .cse1614 .cse641) (+ .cse1614 .cse641)) (res (= .cse1613 .cse1615) (-def .cse1614 fmt0) (res (= .cse1615 .cse317) (poly+ .cse1615 .cse317) (trans .cse1613 .cse1615 .cse1615 .cse317))))))) (res (= .cse1603 .cse1613) (res .cse1616 .cse1617 (res (= .cse1618 .cse1614) (let ((.cse1619 (* (- 1) 2))) (res (= .cse1619 (- 2)) (poly* .cse1619 (- 2)) (res .cse1591 .cse1592 (let ((.cse1620 (+ fmt1 .cse1619))) (res (= .cse1620 .cse1614) (cong (+ fmt1 .cse1619) (+ fmt1 (- 2))) (res (= .cse1618 .cse1620) (-def fmt1 2) (trans .cse1618 .cse1620 .cse1614))))))) (cong (- .cse1618 fmt0) (- .cse1614 fmt0)))) (trans .cse1603 .cse1613 .cse317)))))) (.cse1605 (refl 4))) (res (= .cse1598 .cse1599) (res (= .cse1600 .cse109) (res .cse1601 .cse1602 (cong (x_count .cse1603) (x_count .cse317))) (res .cse1604 .cse1605 (cong (* 4 .cse1600) (* 4 .cse109)))) (res (= .cse1606 .cse1607) (res (= .cse1608 .cse1609) (res (= .cse1610 .cse12) (res .cse1601 .cse1602 (cong (s_count .cse1603) (s_count .cse317))) (res .cse1604 .cse1605 (cong (* 4 .cse1610) (* 4 .cse12)))) (res .cse1611 .cse1612 (cong (+ arg0 .cse1608) (+ arg0 .cse1609)))) (cong (+ .cse1606 .cse1598) (+ .cse1607 .cse1599)))))) (trans .cse1596 .cse1597 .cse1416))))) (res .cse1568 .cse1569 (cong (= arg1 .cse1596) (= arg1 .cse1416)))) (res (= .cse1621 .cse1408) (let ((.cse1635 (= fmt_length fmt_length))) (let-proof ((.cse1636 (refl fmt_length))) (res (= .cse1622 .cse1400) (let ((.cse1626 (+ arg0 distance fmt_length (- 4)))) (let ((.cse1624 (< arg1 .cse1626))) (let ((.cse1623 (= .cse1624 .cse1400))) (res .cse1623 (res .cse1400 (res .cse1624 (=+1 .cse1623) (res .cse1396 .cse1401 (farkas 1 .cse1624 1 .cse1396))) (res .cse1624 (let ((.cse1625 (<= .cse1626 arg1))) (res .cse1625 (total .cse1626 arg1) (res .cse1396 (res .cse1404 .cse1405 (farkas 1 .cse1625 1 .cse1404)) .cse1410))) (=+2 .cse1623))) (res (= .cse1622 .cse1624) (res (= .cse1627 .cse1626) (let ((.cse1630 (+ distance fmt_length (- 4)))) (let ((.cse1628 (+ arg0 .cse1630))) (res (= .cse1628 .cse1626) (poly+ .cse1628 .cse1626) (res (= .cse1627 .cse1628) (res (= .cse1629 .cse1630) (let ((.cse1633 (+ fmt_length (- 4)))) (let ((.cse1631 (+ distance .cse1633))) (res (= .cse1631 .cse1630) (poly+ .cse1631 .cse1630) (res (= .cse1629 .cse1631) (res (= .cse1632 .cse1633) (let ((.cse1634 (* (- 1) 4))) (res (= .cse1634 (- 4)) (poly* .cse1634 (- 4)) (res .cse1635 .cse1636 (let ((.cse1637 (+ fmt_length .cse1634))) (res (= .cse1637 .cse1633) (cong (+ fmt_length .cse1634) (+ fmt_length (- 4))) (res (= .cse1632 .cse1637) (-def fmt_length 4) (trans .cse1632 .cse1637 .cse1633))))))) (res (= distance distance) (refl distance) (cong (+ distance .cse1632) (+ distance .cse1633)))) (trans .cse1629 .cse1631 .cse1630))))) (res .cse1611 .cse1612 (cong (+ arg0 .cse1629) (+ arg0 .cse1630)))) (trans .cse1627 .cse1628 .cse1626))))) (res .cse1568 .cse1569 (cong (< arg1 .cse1627) (< arg1 .cse1626)))) (trans .cse1622 .cse1624 .cse1400)))))) (res (= .cse1638 .cse1540) (let ((.cse1639 (= .cse1643 .cse1642))) (res .cse1639 (let ((.cse1644 (<= .cse1641 arg1))) (let ((.cse1640 (= .cse1643 .cse1644))) (res .cse1640 (>=def arg1 .cse1641) (res .cse1642 (res .cse1643 (=+1 .cse1639) (res .cse1644 (=-2 .cse1640) (let ((.cse1645 (< 0 .cse1646))) (res .cse1645 (total .cse1646 0) (farkas 1 .cse1644 1 .cse1645))))) (res .cse1643 (res .cse1644 (let ((.cse1647 (< arg1 .cse1641))) (res .cse1647 (total .cse1641 arg1) (farkas 1 .cse1647 1 .cse1642))) (=-1 .cse1640)) (=+2 .cse1639)))))) (res (= .cse1648 .cse1433) (let ((.cse1649 (= .cse1652 .cse1435))) (res .cse1649 (let ((.cse1653 (< .cse1651 fmt1))) (let ((.cse1650 (= .cse1652 .cse1653))) (res .cse1650 (>def fmt1 .cse1651) (res .cse1435 (res .cse1652 (=+1 .cse1649) (res .cse1653 (=-2 .cse1650) (res .cse87 (not+ .cse1435) (farkas 1 .cse1653 1 .cse87)))) (res .cse1652 (res .cse1653 (let ((.cse1654 (<= fmt1 .cse1651))) (res .cse1654 (total fmt1 .cse1651) (res .cse87 (let ((.cse1655 (< 0 .cse1446))) (res .cse1655 (total .cse1446 0) (farkas 1 .cse1654 1 .cse1655))) .cse1436))) (=-1 .cse1650)) (=+2 .cse1649)))))) (res (= .cse1656 .cse1467) (res (= .cse1657 .cse1459) (let ((.cse1661 (+ fmt0 fmt_length (- 1)))) (let ((.cse1659 (< fmt1 .cse1661))) (let ((.cse1658 (= .cse1659 .cse1459))) (res .cse1658 (res .cse1459 (res .cse1659 (=+1 .cse1658) (res .cse1455 .cse1460 (farkas 1 .cse1659 1 .cse1455))) (res .cse1659 (let ((.cse1660 (<= .cse1661 fmt1))) (res .cse1660 (total .cse1661 fmt1) (res .cse1455 (res .cse1463 .cse1464 (farkas 1 .cse1660 1 .cse1463)) .cse1469))) (=+2 .cse1658))) (res (= .cse1657 .cse1659) (res (= .cse1662 .cse1661) (let ((.cse1665 (+ fmt_length (- 1)))) (let ((.cse1663 (+ fmt0 .cse1665))) (res (= .cse1663 .cse1661) (poly+ .cse1663 .cse1661) (res (= .cse1662 .cse1663) (res (= .cse1664 .cse1665) (let ((.cse1666 (* (- 1) 1))) (res (= .cse1666 (- 1)) (poly* .cse1666 (- 1)) (res .cse1635 .cse1636 (let ((.cse1667 (+ fmt_length .cse1666))) (res (= .cse1667 .cse1665) (cong (+ fmt_length .cse1666) (+ fmt_length (- 1))) (res (= .cse1664 .cse1667) (-def fmt_length 1) (trans .cse1664 .cse1667 .cse1665))))))) (res .cse1616 .cse1617 (cong (+ fmt0 .cse1664) (+ fmt0 .cse1665)))) (trans .cse1662 .cse1663 .cse1661))))) (res .cse1591 .cse1592 (cong (< fmt1 .cse1662) (< fmt1 .cse1661)))) (trans .cse1657 .cse1659 .cse1459)))))) (res (= .cse1668 .cse1511) (let ((.cse1669 (= .cse1671 .cse1510))) (res .cse1669 (let ((.cse1672 (<= fmt0 arg1))) (let ((.cse1670 (= .cse1671 .cse1672))) (res .cse1670 (>=def arg1 fmt0) (res .cse1510 (res .cse1671 (=+1 .cse1669) (res .cse1672 (=-2 .cse1670) (res .cse1515 .cse1516 (farkas 1 .cse1672 1 .cse1515)))) (res .cse1671 (res .cse1672 (res .cse1261 (total fmt0 arg1) (farkas 1 .cse1261 1 .cse1510)) (=-1 .cse1670)) (=+2 .cse1669)))))) (res (= .cse1673 .cse1423) (res (= .cse1674 .cse1422) (res (= .cse1675 .cse1427) (-def fmt0 distance) (res .cse1611 .cse1612 (cong (= arg0 .cse1675) (= arg0 .cse1427)))) (res (= .cse623 .cse623) (refl .cse623) (cong (and .cse623 .cse1674) (and .cse623 .cse1422)))) (cong (and .cse1673 .cse1671) (and .cse1423 .cse1510))))) (cong (and .cse1668 .cse1657) (and .cse1511 .cse1459)))) (cong (and .cse1656 .cse1652) (and .cse1467 .cse1435))))) (cong (and .cse1648 .cse1643) (and .cse1433 .cse1642))))) (cong (and .cse1638 .cse1622) (and .cse1540 .cse1400)))))) (cong (and .cse1621 .cse1595) (and .cse1408 .cse1411)))))) (res (= .cse1518 .cse1518) (refl .cse1518) (cong (and .cse1518 .cse1594) (and .cse1518 .cse1412)))) (cong (and .cse1593 .cse1554) (and .cse1530 .cse1555)))))) (cong (and .cse1553 .cse1552) (and .cse1541 .cse1552)))) (cong (and .cse1551 .cse1533) (and .cse1542 .cse1533)))) (cong (and .cse1550 .cse1537) (and .cse1534 .cse1537)))) (cong (=> .cse1549 .cse1548) (=> .cse1538 .cse1548)))) (cong (not .cse1544) (not .cse1543))) (=-2 .cse1547)))) (not- .cse1545))) (res .cse1546 (assume .cse1546) (not- .cse1546)))))))))))))))))))))))) (let-proof ((.cse1535 (res .cse1538 .cse1539 (and- 0 .cse1538)))) (let-proof ((.cse1531 (res .cse1541 (res .cse1542 (res .cse1534 .cse1535 (and- 0 .cse1534)) (and- 0 .cse1542)) (and- 0 .cse1541)))) (let-proof ((.cse1413 (res .cse1530 .cse1531 (and- 1 .cse1530)))) (let-proof ((.cse1409 (res .cse1412 .cse1413 (and- 0 .cse1412)))) (let-proof ((.cse1434 (res .cse1540 (res .cse1408 .cse1409 (and- 0 .cse1408)) (and- 0 .cse1540)))) (let ((.cse1509 (+ fmt1 .cse641 (- 3))) (.cse235 (* (- 1) .cse63))) (let-proof ((.cse203 (res .cse1536 (res .cse1537 (res .cse1538 .cse1539 (and- 1 .cse1538)) (and- 0 .cse1537)) (and- 0 .cse1536))) (.cse1468 (res .cse1433 .cse1434 (and- 0 .cse1433)))) (let ((.cse1520 (+ arg1 .cse641 1)) (.cse1472 (* (- 1) fmt_length)) (.cse1521 (* (- 1) arg0)) (.cse1441 (+ fmt1 .cse235 .cse641 (- 2))) (.cse1471 (+ fmt1 .cse641 (- 5))) (.cse358 (<= .cse1509 0)) (.cse1488 (* (- 1) .cse110)) (.cse1498 (+ fmt_length (- 7))) (.cse1483 (+ fmt1 .cse1321 .cse641 (- 2))) (.cse1181 (+ fmt1 .cse1321 .cse641 (- 3))) (.cse1487 (+ fmt1 .cse641 (- 4)))) (let-proof ((.cse1478 (res .cse1532 (res .cse1533 (res .cse1534 .cse1535 (and- 1 .cse1534)) (and- 0 .cse1533)) (and- 0 .cse1532))) (.cse1512 (res .cse1467 .cse1468 (and- 0 .cse1467))) (.cse1519 (res .cse1530 .cse1531 (and- 0 .cse1530))) (.cse1480 (res .cse202 .cse203 (and- 0 .cse202)))) (let ((.cse1385 (+ .cse12 (- 2))) (.cse1473 (+ .cse12 (- 3))) (.cse511 (< 0 .cse1487)) (.cse359 (<= 1 .cse1509)) (.cse510 (< .cse1487 0)) (.cse993 (* (- 1) .cse13)) (.cse1301 (= 120 37)) (.cse1486 (* (- 1) .cse14)) (.cse1085 (* (- 1) .cse230)) (.cse692 (<= .cse1181 0)) (.cse702 (<= 1 .cse1483)) (.cse951 (< 0 .cse1483)) (.cse691 (<= .cse1483 0)) (.cse950 (< .cse1483 0)) (.cse1492 (+ fmt1 .cse1321 .cse641 (- 1))) (.cse166 (* (- 1) .cse12)) (.cse885 (= .cse1498 0)) (.cse1437 (+ .cse15 .cse1488)) (.cse713 (= .cse63 0)) (.cse1126 (< 0 .cse63)) (.cse716 (= 0 .cse63)) (.cse1125 (< .cse63 0)) (.cse102 (= .cse1509 0)) (.cse269 (<= .cse317 0)) (.cse346 (<= .cse1487 0)) (.cse49 (= .cse1471 0)) (.cse85 (<= .cse1471 0)) (.cse348 (<= .cse1441 0)) (.cse1508 (+ fmt1 .cse235 .cse641 (- 1))) (.cse29 (= .cse109 .cse63)) (.cse66 (= .cse62 .cse63)) (.cse100 (= .cse109 .cse62)) (.cse53 (= 2 .cse317)) (.cse508 (= .cse317 2)) (.cse107 (= .cse109 .cse110)) (.cse105 (= 0 .cse317)) (.cse103 (= .cse317 0)) (.cse283 (= .cse109 .cse15)) (.cse101 (= 1 .cse317)) (.cse821 (= .cse317 1)) (.cse1430 (+ fmt0 .cse1521 .cse1522)) (.cse1419 (+ arg1 .cse1521 (* (- 4) .cse12) (* (- 4) .cse109))) (.cse1407 (+ arg1 .cse1521 .cse1522 .cse1472 5)) (.cse1393 (+ distance (- 12))) (.cse1167 (* (- 1) .cse15)) (.cse44 (<= 1 .cse1520)) (.cse32 (<= .cse1520 0)) (.cse291 (* (- 1) .cse109)) (.cse405 (= 120 115)) (.cse141 (* (- 1) .cse125)) (.cse845 (* (- 1) .cse126)) (.cse1376 (* (- 1) .cse62))) (let-proof ((.cse512 (trichotomy .cse1487 0)) (.cse360 (total-int .cse1509 0)) (.cse1482 (res .cse1479 .cse1480 (and- 0 .cse1479))) (.cse703 (total-int .cse1483 0)) (.cse952 (trichotomy .cse1483 0)) (.cse1388 (res .cse1526 (res .cse1527 (res .cse1528 (res .cse1529 (res .cse1518 .cse1519 (and- 0 .cse1518)) (and- 0 .cse1529)) (and- 0 .cse1528)) (and- 0 .cse1527)) (and- 0 .cse1526))) (.cse1177 (let ((.cse1523 (< .cse1509 0))) (res .cse1523 (let ((.cse1524 (< 0 .cse1509))) (res .cse1524 (trichotomy .cse1509 0) (farkas 1 .cse1524 1 .cse358))) (let ((.cse1525 (<= 1 .cse317))) (res .cse1525 (total-int .cse317 0) (farkas 1 .cse1525 1 .cse1523)))))) (.cse67 (symm .cse62 .cse63)) (.cse509 (symm .cse317 2)) (.cse1476 (symm .cse317 0)) (.cse1474 (symm .cse317 1)) (.cse1130 (cong (x_count .cse317) (x_count 1))) (.cse45 (total-int .cse1520 0)) (.cse1424 (res .cse1511 .cse1512 (and- 0 .cse1511))) (.cse1379 (res .cse1518 .cse1519 (and- 1 .cse1518))) (.cse1157 (res .cse1477 .cse1478 (and- 0 .cse1477)))) (let ((.cse897 (+ fmt1 .cse1376 .cse641 (- 2))) (.cse1365 (+ .cse14 .cse845 (- 1))) (.cse1348 (+ arg1 .cse845)) (.cse1356 (+ arg1 .cse845 1)) (.cse1203 (+ .cse126 .cse141)) (.cse398 (= 120 x)) (.cse408 (= 37 percent)) (.cse396 (= 115 s)) (.cse1343 (+ .cse110 .cse291)) (.cse632 (= 0 fmt0)) (.cse768 (<= .cse988 0)) (.cse984 (<= arg1 0)) (.cse785 (<= 1 .cse988)) (.cse1212 (+ .cse63 .cse291)) (.cse1231 (+ .cse63 .cse1376)) (.cse1276 (+ .cse15 .cse1488 (- 1))) (.cse1266 (+ .cse62 .cse1167)) (.cse46 (= 0 .cse1393)) (.cse33 (= .cse1393 0)) (.cse887 (<= .cse1407 0)) (.cse590 (= 0 .cse1419)) (.cse24 (= .cse1419 0)) (.cse40 (= 0 .cse1430)) (.cse22 (= .cse1430 0)) (.cse554 (= 0 .cse1509)) (.cse64 (= .cse15 .cse62)) (.cse356 (= .cse317 .cse63)) (.cse513 (= 0 .cse1487)) (.cse345 (= .cse1441 0)) (.cse344 (<= .cse1508 0)) (.cse537 (= 0 .cse1471)) (.cse712 (<= .cse1451 0)) (.cse505 (<= .cse63 0)) (.cse37 (= .cse1437 0)) (.cse115 (= .cse110 .cse15)) (.cse1336 (+ .cse63 .cse166 3)) (.cse1325 (+ .cse63 .cse641)) (.cse687 (= .cse1483 0)) (.cse685 (<= .cse1492 0)) (.cse690 (= .cse1181 0)) (.cse422 (= 3 .cse14)) (.cse431 (= 3 .cse12)) (.cse10 (= .cse12 .cse13)) (.cse2 (= 3 .cse317)) (.cse530 (= .cse317 3)) (.cse565 (= .cse12 .cse125)) (.cse1306 (+ .cse63 .cse166)) (.cse1297 (+ .cse13 .cse291)) (.cse1285 (+ .cse63 .cse1085)) (.cse1291 (+ .cse63 .cse1085 1)) (.cse1118 (= .cse12 .cse14)) (.cse1281 (+ .cse13 .cse166)) (.cse1197 (+ .cse13 .cse1486)) (.cse1200 (+ .cse14 .cse845)) (.cse1260 (+ arg1 .cse641)) (.cse660 (= 0 arg1)) (.cse1190 (< arg1 0)) (.cse659 (= arg1 0)) (.cse1189 (< 0 arg1)) (.cse1249 (+ arg1 .cse1488)) (.cse1257 (+ arg1 .cse1488 1)) (.cse1263 (+ .cse62 .cse291 2)) (.cse1247 (+ .cse62 .cse291)) (.cse1240 (+ .cse63 .cse1376 (- 1))) (.cse410 (= 37 120)) (.cse1224 (+ .cse62 .cse1167 (- 1))) (.cse1160 (+ .cse63 .cse1167)) (.cse1173 (+ .cse230 .cse993)) (.cse51 (= .cse1487 0)) (.cse228 (= .cse12 .cse230)) (.cse244 (= .cse126 .cse14)) (.cse279 (= .cse13 .cse230)) (.cse113 (= .cse14 .cse13)) (.cse221 (= .cse12 .cse126)) (.cse689 (= .cse988 .cse317)) (.cse680 (= 1 .cse988)) (.cse989 (= .cse988 1)) (.cse1172 (+ .cse230 .cse166)) (.cse1171 (+ .cse14 (- 3))) (.cse595 (= 115 37)) (.cse587 (<= .cse1473 0)) (.cse982 (<= 1 .cse1385))) (let-proof ((.cse1371 (res .cse1156 .cse1157 (and- 0 .cse1156))) (.cse402 (symm x 120)) (.cse597 (symm percent 37)) (.cse406 (farkas 1 .cse405)) (.cse1382 (res .cse1378 .cse1379 (and- 0 .cse1378))) (.cse481 (symm s 115)) (.cse624 (! (res .cse1423 .cse1424 (and- 0 .cse1423)) :proves (+ .cse623) :input)) (.cse633 (symm 0 fmt0)) (.cse48 (! (res .cse1510 (res .cse1511 .cse1512 (and- 1 .cse1511)) (let ((.cse1513 (not .cse32))) (let-proof ((.cse1517 (not- .cse1513))) (res .cse1513 (let ((.cse1514 (= .cse1510 .cse1513))) (res .cse1514 (res .cse1513 (res .cse1510 (=+1 .cse1514) (res .cse32 (not+ .cse1513) (farkas 1 .cse1510 1 .cse32))) (res .cse1510 (res .cse1515 .cse1516 (res .cse32 (res .cse44 .cse45 (farkas 1 .cse1515 1 .cse44)) .cse1517)) (=+2 .cse1514))) (=-2 .cse1514))) .cse1517)))) :proves (- .cse32) :input)) (.cse1258 (trichotomy arg1 0)) (.cse786 (total-int .cse988 0)) (.cse47 (symm 0 .cse1393)) (.cse591 (symm 0 .cse1419)) (.cse41 (symm 0 .cse1430)) (.cse964 (! (res .cse821 .cse1474 .cse1130) :proves (+ .cse283 - .cse101) :cong (.cse109 .cse15))) (.cse555 (symm 0 .cse1509)) (.cse108 (! (res .cse103 .cse1476 (cong (x_count .cse317) (x_count 0))) :proves (+ .cse107 - .cse105) :cong (.cse109 .cse110))) (.cse65 (symm .cse15 .cse62)) (.cse1124 (symm .cse63 0)) (.cse501 (symm 0 .cse317)) (.cse284 (! (res .cse508 .cse509 (cong (x_count .cse317) (x_count 2))) :proves (+ .cse100 - .cse53) :cong (.cse109 .cse62))) (.cse957 (! (res .cse66 .cse67 (trans .cse109 .cse62 .cse63)) :proves (+ .cse29 - .cse100 - .cse57) :trans (.cse109 .cse62 .cse63))) (.cse514 (symm 0 .cse1487)) (.cse1346 (let ((.cse1505 (< .cse1441 0))) (res .cse1505 (let ((.cse1506 (< 0 .cse1441))) (res .cse1506 (trichotomy .cse1441 0) (farkas 1 .cse1506 1 .cse348))) (let ((.cse1507 (<= 1 .cse1508))) (res .cse1507 (total-int .cse1508 0) (farkas 1 .cse1507 1 .cse1505)))))) (.cse538 (symm 0 .cse1471)) (.cse347 (! (let ((.cse1502 (< .cse1471 0))) (res .cse1502 (let ((.cse1503 (< 0 .cse1471))) (res .cse1503 (trichotomy .cse1471 0) (farkas 1 .cse1503 1 .cse85))) (let ((.cse1504 (<= 1 .cse1487))) (res .cse1504 (total-int .cse1487 0) (farkas 1 .cse1504 1 .cse1502))))) :proves (+ .cse346 + .cse49 - .cse85) :trichotomy)) (.cse361 (! .cse1177 :proves (- .cse358 + .cse102 + .cse269) :trichotomy)) (.cse1129 (farkas 1 .cse716 1 .cse1125)) (.cse1128 (farkas 1 .cse713 1 .cse1126)) (.cse1127 (trichotomy .cse63 0)) (.cse116 (symm .cse110 .cse15)) (.cse886 (! (res .cse1493 (res .cse1387 .cse1388 (and- 1 .cse1387)) (let ((.cse1494 (= .cse1493 .cse885))) (res .cse1494 (res .cse885 (res .cse1493 (=+1 .cse1494) (let ((.cse1495 (= 7 fmt_length))) (res .cse1495 (symm 7 fmt_length) (let ((.cse1496 (< .cse1498 0))) (res .cse1496 (let ((.cse1497 (< 0 .cse1498))) (res .cse1497 (trichotomy .cse1498 0) (farkas 1 .cse1493 1 .cse1497))) (farkas 1 .cse1495 1 .cse1496)))))) (res .cse1493 (let ((.cse1499 (= 0 .cse1498))) (res .cse1499 (symm 0 .cse1498) (let ((.cse1500 (< fmt_length 7))) (res .cse1500 (let ((.cse1501 (< 7 fmt_length))) (res .cse1501 (trichotomy fmt_length 7) (farkas 1 .cse885 1 .cse1501))) (farkas 1 .cse1499 1 .cse1500))))) (=+2 .cse1494))) (=-2 .cse1494)))) :proves (+ .cse885) :input)) (.cse1176 (res .cse950 (res .cse951 .cse952 (farkas 1 .cse951 1 .cse691)) (let ((.cse1491 (<= 1 .cse1492))) (res .cse1491 (total-int .cse1492 0) (farkas 1 .cse1491 1 .cse950))))) (.cse1184 (let ((.cse1489 (< .cse1181 0))) (res .cse1489 (let ((.cse1490 (< 0 .cse1181))) (res .cse1490 (trichotomy .cse1181 0) (farkas 1 .cse1490 1 .cse692))) (res .cse702 .cse703 (farkas 1 .cse702 1 .cse1489))))) (.cse531 (symm .cse317 3)) (.cse1320 (cong (s_count .cse317) (s_count 2))) (.cse762 (res .cse1481 .cse1482 (and- 0 .cse1481))) (.cse1377 (farkas 1 .cse1301)) (.cse1449 (res .cse510 (res .cse511 .cse512 (farkas 1 .cse511 1 .cse346)) (res .cse359 .cse360 (farkas 1 .cse359 1 .cse510)))) (.cse245 (symm .cse126 .cse14)) (.cse280 (symm .cse13 .cse230)) (.cse114 (symm .cse14 .cse13)) (.cse1475 (cong (s_count .cse317) (s_count 1))) (.cse990 (symm .cse988 1)) (.cse983 (total-int .cse1385 0))) (let ((.cse916 (+ fmt1 .cse845 .cse641 (- 2))) (.cse1150 (+ fmt1 .cse845 .cse641 (- 1))) (.cse1142 (+ .cse13 .cse1486 (- 1))) (.cse588 (<= 1 .cse1473)) (.cse479 (= 37 115)) (.cse558 (= 0 .cse1171)) (.cse421 (= .cse1171 0)) (.cse286 (= .cse15 .cse109)) (.cse946 (= 0 .cse1483)) (.cse688 (= .cse1172 0)) (.cse277 (= .cse230 .cse12)) (.cse673 (= fmt0 arg1)) (.cse678 (= .cse1173 0)) (.cse273 (= .cse63 .cse109)) (.cse1163 (< 0 .cse1160)) (.cse1162 (< .cse1160 0)) (.cse349 (= 0 .cse1224)) (.cse338 (= .cse1224 0)) (.cse365 (= percent .cse364)) (.cse261 (= 0 .cse1240)) (.cse250 (= .cse1240 0)) (.cse95 (<= .cse1263 0)) (.cse1015 (= 0 .cse1247)) (.cse98 (= .cse1247 0)) (.cse878 (= .cse62 .cse109)) (.cse828 (= arg1 .cse110)) (.cse824 (<= .cse1257 0)) (.cse826 (= .cse1249 0)) (.cse584 (= .cse1260 0)) (.cse1186 (< 0 .cse1260)) (.cse812 (<= .cse1260 0)) (.cse1185 (< .cse1260 0)) (.cse453 (= 0 .cse1197)) (.cse451 (= 0 .cse1200)) (.cse1008 (+ fmt1 .cse993 .cse641 (- 2))) (.cse231 (= .cse1281 0)) (.cse316 (= .cse13 .cse12)) (.cse804 (= .cse230 .cse63)) (.cse800 (<= .cse1291 0)) (.cse792 (= .cse1285 0)) (.cse793 (<= .cse1285 0)) (.cse243 (= 0 .cse13)) (.cse307 (<= .cse974 0)) (.cse308 (= .cse13 0)) (.cse1292 (< 0 .cse13)) (.cse1293 (< .cse13 0)) (.cse305 (<= .cse13 0)) (.cse88 (= .cse1197 0)) (.cse187 (= .cse1200 0)) (.cse463 (<= 1 .cse13)) (.cse94 (= .cse1297 0)) (.cse99 (= .cse109 .cse13)) (.cse241 (= x .cse240)) (.cse70 (= 0 .cse1306)) (.cse68 (= .cse1306 0)) (.cse127 (= .cse125 .cse126)) (.cse686 (= arg1 .cse317)) (.cse948 (= .cse317 arg1)) (.cse61 (= .cse12 .cse63)) (.cse1307 (= .cse126 arg1)) (.cse693 (<= 1 .cse1181)) (.cse724 (= 0 .cse1473)) (.cse429 (= .cse1473 0)) (.cse846 (= fmt0 .cse63)) (.cse834 (= .cse1325 0)) (.cse852 (<= .cse1336 0)) (.cse854 (= 2 .cse1319)) (.cse904 (<= 1 .cse63)) (.cse521 (= .cse15 .cse63)) (.cse1213 (= .cse63 .cse15)) (.cse353 (<= 1 .cse1441)) (.cse618 (<= 1 .cse1446)) (.cse523 (= .cse1160 0)) (.cse139 (= 0 .cse1437)) (.cse873 (= 0 .cse1160)) (.cse351 (= 0 .cse1231)) (.cse802 (= 0 .cse1276)) (.cse263 (= 0 .cse1266)) (.cse417 (= 0 .cse110)) (.cse28 (= .cse1212 0)) (.cse294 (= .cse1231 0)) (.cse790 (= .cse1276 0)) (.cse76 (= .cse1266 0)) (.cse586 (<= .cse1385 0)) (.cse42 (= 0 .cse1212)) (.cse985 (<= 1 arg1)) (.cse389 (= .cse1343 0)) (.cse374 (= .cse110 .cse109)) (.cse620 (= x .cse363)) (.cse818 (= arg1 .cse126)) (.cse83 (= .cse1203 0)) (.cse155 (= 0 .cse1203)) (.cse153 (= 0 .cse125)) (.cse789 (<= .cse1356 0)) (.cse816 (= .cse1348 0)) (.cse157 (= 0 .cse1365)) (.cse90 (= .cse1365 0)) (.cse901 (+ .cse63 (- 1))) (.cse493 (<= .cse897 0)) (.cse1375 (+ fmt1 .cse1376 .cse641 (- 1)))) (let-proof ((.cse593 (let ((.cse1484 (< .cse1473 0))) (res .cse1484 (let ((.cse1485 (< 0 .cse1473))) (res .cse1485 (trichotomy .cse1473 0) (farkas 1 .cse1485 1 .cse587))) (res .cse982 .cse983 (farkas 1 .cse982 1 .cse1484))))) (.cse589 (total-int .cse1473 0)) (.cse598 (farkas 1 .cse595)) (.cse559 (symm 0 .cse1171)) (.cse947 (symm 0 .cse1483)) (.cse278 (symm .cse230 .cse12)) (.cse822 (! (res .cse989 .cse990 (res (= .cse317 .cse988) (symm .cse317 .cse988) (trans .cse317 .cse988 1))) :proves (+ .cse821 - .cse689 - .cse680) :trans (.cse317 .cse988 1))) (.cse823 (! .cse1475 :proves (+ .cse221 - .cse821) :cong (.cse12 .cse126))) (.cse1030 (! (res .cse244 .cse245 (res .cse279 .cse280 (res .cse113 .cse114 (trans .cse12 .cse126 .cse14 .cse13 .cse230)))) :proves (+ .cse228 - .cse221 - .cse182 - .cse8 - .cse197) :trans (.cse12 .cse126 .cse14 .cse13 .cse230))) (.cse424 (! .cse1449 :proves (+ .cse358 + .cse51 - .cse346) :trichotomy)) (.cse674 (symm fmt0 arg1)) (.cse274 (symm .cse63 .cse109)) (.cse1164 (trichotomy .cse1160 0)) (.cse350 (symm 0 .cse1224)) (.cse1218 (res .cse1481 .cse1482 (and- 1 .cse1481))) (.cse366 (symm percent .cse364)) (.cse413 (! (res .cse1301 (symm 120 37) .cse1377) :proves (- .cse410) :EQ)) (.cse262 (symm 0 .cse1240)) (.cse1235 (res .cse1479 .cse1480 (and- 1 .cse1479))) (.cse1016 (symm 0 .cse1247)) (.cse881 (symm .cse62 .cse109)) (.cse1192 (farkas 1 .cse659 1 .cse1189)) (.cse1191 (farkas 1 .cse660 1 .cse1190)) (.cse1187 (trichotomy .cse1260 0)) (.cse1270 (res .cse761 .cse762 (and- 1 .cse761))) (.cse452 (symm 0 .cse1200)) (.cse454 (symm 0 .cse1197)) (.cse319 (symm .cse13 .cse12)) (.cse1119 (! (res .cse508 .cse509 .cse1320) :proves (+ .cse1118 - .cse53) :cong (.cse12 .cse14))) (.cse464 (total-int .cse13 0)) (.cse971 (res .cse1477 .cse1478 (and- 1 .cse1477))) (.cse242 (symm x .cse240)) (.cse71 (symm 0 .cse1306)) (.cse566 (! (res .cse103 .cse1476 (cong (s_count .cse317) (s_count 0))) :proves (+ .cse565 - .cse105) :cong (.cse12 .cse125))) (.cse128 (symm .cse125 .cse126)) (.cse949 (symm .cse317 arg1)) (.cse872 (! (res .cse821 .cse1474 .cse1475) :proves (+ .cse221 - .cse101) :cong (.cse12 .cse126))) (.cse1308 (symm .cse126 arg1)) (.cse11 (! (res .cse530 .cse531 (cong (s_count .cse317) (s_count 3))) :proves (+ .cse10 - .cse2) :cong (.cse12 .cse13))) (.cse557 (! (trans 3 .cse12 .cse13 .cse14) :proves (+ .cse422 - .cse431 - .cse10 - .cse8) :trans (3 .cse12 .cse13 .cse14))) (.cse694 (total-int .cse1181 0)) (.cse695 (! .cse1184 :proves (- .cse692 + .cse690 + .cse691) :trichotomy)) (.cse696 (! .cse1176 :proves (- .cse691 + .cse687 + .cse685) :trichotomy)) (.cse725 (symm 0 .cse1473)) (.cse683 (symm arg1 0)) (.cse1188 (symm 0 arg1)) (.cse86 (! (res .cse885 .cse886 (let ((.cse1466 (+ fmt1 .cse641 .cse1472 2))) (let ((.cse1454 (<= .cse1466 0))) (res .cse1454 (! (res .cse1455 (let ((.cse1456 (not .cse1454))) (let-proof ((.cse1457 (not+ .cse1456))) (res .cse1456 .cse1457 (let ((.cse1458 (not .cse1456))) (res .cse1458 (res .cse1459 .cse1460 (let ((.cse1461 (= .cse1459 .cse1458))) (res .cse1461 (let ((.cse1462 (= .cse1455 .cse1456))) (res .cse1462 (res .cse1456 (res .cse1455 (=+1 .cse1462) (res .cse1454 .cse1457 (farkas 1 .cse1455 1 .cse1454))) (res .cse1455 (res .cse1463 .cse1464 (res .cse1454 (let ((.cse1465 (<= 1 .cse1466))) (res .cse1465 (total-int .cse1466 0) (farkas 1 .cse1463 1 .cse1465))) (not- .cse1456))) (=+2 .cse1462))) (cong (not .cse1455) (not .cse1456)))) (=-2 .cse1461)))) (not- .cse1458)))))) (res .cse1467 .cse1468 (res .cse1459 (and- 1 .cse1467) .cse1469))) :proves (+ .cse1454) :input) (! (let ((.cse1470 (<= 1 .cse1471))) (res .cse1470 (total-int .cse1471 0) (farkas 1 .cse1470 1 .cse1454 1 .cse885))) :proves (+ .cse85 - .cse1454 - .cse885) :LA ((- 1) 1 1)))))) :proves (+ .cse85) :rup)) (.cse335 (! (res .cse115 .cse116 (let ((.cse1452 (< .cse1437 0))) (res .cse1452 (let ((.cse1453 (< 0 .cse1437))) (res .cse1453 (trichotomy .cse1437 0) (farkas 1 .cse74 1 .cse1453))) (farkas 1 .cse115 1 .cse1452)))) :proves (- .cse74 + .cse37) :EQ)) (.cse905 (total-int .cse63 0)) (.cse714 (! (res .cse1125 (res .cse1126 .cse1127 (farkas 1 .cse1126 1 .cse505)) (let ((.cse1450 (<= 1 .cse1451))) (res .cse1450 (total-int .cse1451 0) (farkas 1 .cse1450 1 .cse1125)))) :proves (+ .cse712 + .cse713 - .cse505) :trichotomy)) (.cse717 (! (res .cse716 (symm 0 .cse63) (res .cse1126 (res .cse1125 (trichotomy 0 .cse63) .cse1129) .cse1128)) :proves (+ .cse716 - .cse713) :EQ)) (.cse1214 (symm .cse63 .cse15)) (.cse270 (res .cse358 (res .cse346 .cse347 (! .cse1449 :proves (- .cse346 + .cse51 + .cse358) :trichotomy)) .cse361)) (.cse117 (! (res .cse537 .cse538 (let ((.cse1447 (< 3 .cse317))) (res .cse1447 (let ((.cse1448 (< .cse317 3))) (res .cse1448 (trichotomy 3 .cse317) (farkas 1 .cse537 1 .cse1448))) (farkas 1 .cse49 1 .cse1447)))) :proves (+ .cse2 - .cse49) :EQ)) (.cse30 (! (res .cse530 .cse531 (cong (x_count .cse317) (x_count 3))) :proves (+ .cse29 - .cse2) :cong (.cse109 .cse63))) (.cse354 (total-int .cse1441 0)) (.cse875 (! .cse1346 :proves (- .cse348 + .cse345 + .cse344) :trichotomy)) (.cse619 (total-int .cse1446 0)) (.cse54 (! (res .cse513 .cse514 (let ((.cse1444 (< 2 .cse317))) (res .cse1444 (let ((.cse1445 (< .cse317 2))) (res .cse1445 (trichotomy 2 .cse317) (farkas 1 .cse513 1 .cse1445))) (farkas 1 .cse51 1 .cse1444)))) :proves (+ .cse53 - .cse51) :EQ)) (.cse59 (res .cse100 .cse284 .cse957)) (.cse357 (! (let ((.cse1440 (= 0 .cse1441))) (res .cse1440 (symm 0 .cse1441) (let ((.cse1442 (< .cse317 .cse63))) (res .cse1442 (let ((.cse1443 (< .cse63 .cse317))) (res .cse1443 (trichotomy .cse317 .cse63) (farkas 1 .cse345 1 .cse1443))) (farkas 1 .cse1440 1 .cse1442))))) :proves (+ .cse356 - .cse345) :EQ)) (.cse734 (! (res .cse103 (res .cse713 .cse1124 (trans .cse317 .cse63 0)) .cse501) :proves (+ .cse105 - .cse356 - .cse716) :trans (.cse317 .cse63 0))) (.cse218 (res .cse107 .cse108 (! (res .cse64 .cse65 (res .cse66 .cse67 (res .cse115 .cse116 (trans .cse109 .cse110 .cse15 .cse62 .cse63)))) :proves (+ .cse29 - .cse107 - .cse74 - .cse55 - .cse57) :trans (.cse109 .cse110 .cse15 .cse62 .cse63)))) (.cse118 (! (res .cse554 .cse555 (let ((.cse1438 (< 1 .cse317))) (res .cse1438 (let ((.cse1439 (< .cse317 1))) (res .cse1439 (trichotomy 1 .cse317) (farkas 1 .cse554 1 .cse1439))) (farkas 1 .cse102 1 .cse1438)))) :proves (+ .cse101 - .cse102) :EQ)) (.cse219 (res .cse283 .cse964 (! (res .cse64 .cse65 (res .cse66 .cse67 (trans .cse109 .cse15 .cse62 .cse63))) :proves (+ .cse29 - .cse283 - .cse55 - .cse57) :trans (.cse109 .cse15 .cse62 .cse63)))) (.cse874 (symm 0 .cse1160)) (.cse140 (symm 0 .cse1437)) (.cse131 (! (res .cse1433 .cse1434 (res .cse1435 (and- 1 .cse1433) .cse1436)) :proves (- .cse87) :input)) (.cse1046 (! (res .cse64 .cse65 (trans .cse109 .cse15 .cse62)) :proves (+ .cse100 - .cse283 - .cse55) :trans (.cse109 .cse15 .cse62))) (.cse23 (! (res .cse1422 (res .cse1423 .cse1424 (and- 1 .cse1423)) (let ((.cse1425 (= .cse1422 .cse22))) (res .cse1425 (res .cse22 (res .cse1422 (=+1 .cse1425) (let ((.cse1426 (= .cse1427 arg0))) (res .cse1426 (symm .cse1427 arg0) (let ((.cse1428 (< .cse1430 0))) (res .cse1428 (let ((.cse1429 (< 0 .cse1430))) (res .cse1429 (trichotomy .cse1430 0) (farkas 1 .cse1426 1 .cse1429))) (farkas 1 .cse1422 1 .cse1428)))))) (res .cse1422 (res .cse40 .cse41 (let ((.cse1431 (< arg0 .cse1427))) (res .cse1431 (let ((.cse1432 (< .cse1427 arg0))) (res .cse1432 (trichotomy arg0 .cse1427) (farkas 1 .cse40 1 .cse1432))) (farkas 1 .cse22 1 .cse1431)))) (=+2 .cse1425))) (=-2 .cse1425)))) :proves (+ .cse22) :input)) (.cse25 (! (res .cse1411 (res .cse1412 .cse1413 (and- 1 .cse1412)) (let ((.cse1414 (= .cse1411 .cse24))) (res .cse1414 (res .cse24 (res .cse1411 (=+1 .cse1414) (let ((.cse1415 (= .cse1416 arg1))) (res .cse1415 (symm .cse1416 arg1) (let ((.cse1417 (< .cse1419 0))) (res .cse1417 (let ((.cse1418 (< 0 .cse1419))) (res .cse1418 (trichotomy .cse1419 0) (farkas 1 .cse1411 1 .cse1418))) (farkas 1 .cse1415 1 .cse1417)))))) (res .cse1411 (res .cse590 .cse591 (let ((.cse1420 (< arg1 .cse1416))) (res .cse1420 (let ((.cse1421 (< .cse1416 arg1))) (res .cse1421 (trichotomy arg1 .cse1416) (farkas 1 .cse24 1 .cse1421))) (farkas 1 .cse590 1 .cse1420)))) (=+2 .cse1414))) (=-2 .cse1414)))) :proves (+ .cse24) :input)) (.cse888 (! (res .cse1396 (let ((.cse1397 (not .cse887))) (let-proof ((.cse1398 (not+ .cse1397))) (res .cse1397 .cse1398 (let ((.cse1399 (not .cse1397))) (res .cse1399 (res .cse1400 .cse1401 (let ((.cse1402 (= .cse1400 .cse1399))) (res .cse1402 (let ((.cse1403 (= .cse1396 .cse1397))) (res .cse1403 (res .cse1397 (res .cse1396 (=+1 .cse1403) (res .cse887 .cse1398 (farkas 1 .cse1396 1 .cse887))) (res .cse1396 (res .cse1404 .cse1405 (res .cse887 (let ((.cse1406 (<= 1 .cse1407))) (res .cse1406 (total-int .cse1407 0) (farkas 1 .cse1404 1 .cse1406))) (not- .cse1397))) (=+2 .cse1403))) (cong (not .cse1396) (not .cse1397)))) (=-2 .cse1402)))) (not- .cse1399)))))) (res .cse1408 .cse1409 (res .cse1400 (and- 1 .cse1408) .cse1410))) :proves (+ .cse887) :input)) (.cse34 (! (res .cse1386 (res .cse1387 .cse1388 (and- 0 .cse1387)) (let ((.cse1389 (= .cse1386 .cse33))) (res .cse1389 (res .cse33 (res .cse1386 (=+1 .cse1389) (let ((.cse1390 (= 12 distance))) (res .cse1390 (symm 12 distance) (let ((.cse1391 (< .cse1393 0))) (res .cse1391 (let ((.cse1392 (< 0 .cse1393))) (res .cse1392 (trichotomy .cse1393 0) (farkas 1 .cse1386 1 .cse1392))) (farkas 1 .cse1390 1 .cse1391)))))) (res .cse1386 (res .cse46 .cse47 (let ((.cse1394 (< distance 12))) (res .cse1394 (let ((.cse1395 (< 12 distance))) (res .cse1395 (trichotomy distance 12) (farkas 1 .cse33 1 .cse1395))) (farkas 1 .cse46 1 .cse1394)))) (=+2 .cse1389))) (=-2 .cse1389)))) :proves (+ .cse33) :input)) (.cse476 (symm 0 .cse110)) (.cse264 (symm 0 .cse1266)) (.cse803 (symm 0 .cse1276)) (.cse352 (symm 0 .cse1231)) (.cse986 (total-int arg1 0)) (.cse43 (symm 0 .cse1212)) (.cse987 (! (res .cse1190 (res .cse1189 .cse1258 (farkas 1 .cse1189 1 .cse984)) (res .cse785 .cse786 (farkas 1 .cse785 1 .cse1190))) :proves (- .cse984 + .cse659 + .cse768) :trichotomy)) (.cse788 (! (res .cse32 (res .cse623 .cse624 (! (res .cse44 .cse45 (res .cse632 .cse633 (farkas 1 .cse768 1 .cse632 1 .cse44))) :proves (- .cse768 - .cse623 + .cse32) :LA (1 (- 1) (- 1)))) .cse48) :proves (- .cse768) :rup)) (.cse397 (! (res .cse480 (res .cse1381 .cse1382 (and- 1 .cse1381)) (let ((.cse1384 (= .cse480 .cse396))) (res .cse1384 (res .cse396 (res .cse480 (=+1 .cse1384) (symm 115 s)) (res .cse480 .cse481 (=+2 .cse1384))) (=-2 .cse1384)))) :proves (+ .cse396) :input)) (.cse622 (! .cse406 :proves (- .cse405) :EQ)) (.cse409 (! (res .cse596 (res .cse1381 .cse1382 (and- 0 .cse1381)) (let ((.cse1383 (= .cse596 .cse408))) (res .cse1383 (res .cse408 (res .cse596 (=+1 .cse1383) (symm 37 percent)) (res .cse596 .cse597 (=+2 .cse1383))) (=-2 .cse1383)))) :proves (+ .cse408) :input)) (.cse399 (! (res .cse401 (res .cse1378 .cse1379 (and- 1 .cse1378)) (let ((.cse1380 (= .cse401 .cse398))) (res .cse1380 (res .cse398 (res .cse401 (=+1 .cse1380) (symm 120 x)) (res .cse401 .cse402 (=+2 .cse1380))) (=-2 .cse1380)))) :proves (+ .cse398) :input)) (.cse621 (symm x .cse363)) (.cse1302 (! .cse1377 :proves (- .cse1301) :EQ)) (.cse154 (symm 0 .cse125)) (.cse156 (symm 0 .cse1203)) (.cse158 (symm 0 .cse1365)) (.cse1360 (res .cse1370 .cse1371 (and- 1 .cse1370)))) (let ((.cse890 (+ .cse14 (- 1))) (.cse497 (= .cse317 .cse62)) (.cse494 (<= 1 .cse897)) (.cse492 (= .cse897 0)) (.cse486 (<= .cse1375 0)) (.cse160 (= 1 .cse63)) (.cse259 (<= 1 .cse901)) (.cse35 (= .cse901 0)) (.cse164 (< 0 .cse901)) (.cse256 (<= .cse901 0)) (.cse163 (< .cse901 0)) (.cse487 (= 0 .cse62)) (.cse474 (<= 1 .cse62)) (.cse484 (= .cse62 0)) (.cse906 (< 0 .cse62)) (.cse471 (<= .cse62 0)) (.cse907 (< .cse62 0)) (.cse766 (= .cse317 .cse126)) (.cse50 (= 0 .cse12)) (.cse776 (< .cse12 0)) (.cse92 (= .cse12 0)) (.cse777 (< 0 .cse12)) (.cse868 (+ .cse110 .cse845)) (.cse391 (= 0 .cse1343)) (.cse123 (= 0 .cse1297)) (.cse798 (<= 1 .cse1285)) (.cse233 (= 0 .cse1281)) (.cse535 (< 0 .cse1008)) (.cse534 (< .cse1008 0)) (.cse532 (= .cse13 .cse317)) (.cse528 (= .cse1008 0)) (.cse529 (= .cse317 .cse13)) (.cse569 (= percent .cse363)) (.cse96 (<= 1 .cse1263)) (.cse813 (<= 1 .cse1260)) (.cse830 (= .cse110 arg1)) (.cse796 (= 0 .cse1173)) (.cse700 (= 0 .cse1172)) (.cse613 (= percent .cse240)) (.cse794 (= 0 .cse1142)) (.cse193 (= .cse1142 0)) (.cse552 (<= .cse1150 0)) (.cse548 (= .cse916 0)) (.cse549 (<= .cse916 0)) (.cse81 (= 0 .cse126)) (.cse368 (<= .cse1154 0)) (.cse129 (= .cse126 0)) (.cse1151 (< 0 .cse126)) (.cse1152 (< .cse126 0)) (.cse369 (<= .cse126 0))) (let-proof ((.cse495 (total-int .cse897 0)) (.cse504 (let ((.cse1372 (< .cse897 0))) (res .cse1372 (let ((.cse1373 (< 0 .cse897))) (res .cse1373 (trichotomy .cse897 0) (farkas 1 .cse1373 1 .cse493))) (let ((.cse1374 (<= 1 .cse1375))) (res .cse1374 (total-int .cse1375 0) (farkas 1 .cse1374 1 .cse1372)))))) (.cse260 (total-int .cse901 0)) (.cse165 (trichotomy .cse901 0)) (.cse475 (total-int .cse62 0)) (.cse764 (res .cse1370 .cse1371 (and- 0 .cse1370))) (.cse183 (! (res .cse1368 (res .cse1359 .cse1360 (and- 1 .cse1359)) (res .cse1369 (not+ .cse1369) (=>- .cse1368))) :proves (+ .cse178 + .cse182) :input)) (.cse181 (! (and- 1 .cse178) :proves (- .cse178 + .cse170) :input)) (.cse180 (! (and- 0 .cse178) :proves (- .cse178 + .cse172) :input)) (.cse174 (! (res .cse1357 (res .cse178 (and+ .cse178) (res .cse1358 (res .cse1359 .cse1360 (and- 0 .cse1359)) (=>- .cse1358))) (let ((.cse1361 (= .cse1357 .cse90))) (res .cse1361 (res .cse90 (res .cse1357 (=+1 .cse1361) (let ((.cse1362 (= .cse1154 .cse14))) (res .cse1362 (symm .cse1154 .cse14) (let ((.cse1363 (< .cse1365 0))) (res .cse1363 (let ((.cse1364 (< 0 .cse1365))) (res .cse1364 (trichotomy .cse1365 0) (farkas 1 .cse1357 1 .cse1364))) (farkas 1 .cse1362 1 .cse1363)))))) (res .cse1357 (res .cse157 .cse158 (let ((.cse1366 (< .cse14 .cse1154))) (res .cse1366 (let ((.cse1367 (< .cse1154 .cse14))) (res .cse1367 (trichotomy .cse14 .cse1154) (farkas 1 .cse90 1 .cse1367))) (farkas 1 .cse157 1 .cse1366)))) (=+2 .cse1361))) (=-2 .cse1361)))) :proves (+ .cse90 - .cse172 - .cse170) :input)) (.cse817 (let ((.cse1351 (<= .cse1348 0))) (res .cse1351 (! (res .cse153 .cse154 (res .cse155 .cse156 (let ((.cse1352 (<= 1 .cse1348))) (res .cse1352 (total-int .cse1348 0) (farkas 1 .cse1352 1 .cse155 1 .cse659 1 .cse153))))) :proves (+ .cse1351 - .cse83 - .cse659 - .cse78) :LA ((- 1) (- 1) 1 (- 1))) (! (let ((.cse1353 (< .cse1348 0))) (res .cse1353 (let ((.cse1354 (< 0 .cse1348))) (res .cse1354 (trichotomy .cse1348 0) (farkas 1 .cse1354 1 .cse1351))) (let ((.cse1355 (<= 1 .cse1356))) (res .cse1355 (total-int .cse1356 0) (farkas 1 .cse1355 1 .cse1353))))) :proves (+ .cse789 + .cse816 - .cse1351) :trichotomy)))) (.cse819 (! (let ((.cse1347 (= 0 .cse1348))) (res .cse1347 (symm 0 .cse1348) (let ((.cse1349 (< arg1 .cse126))) (res .cse1349 (let ((.cse1350 (< .cse126 arg1))) (res .cse1350 (trichotomy arg1 .cse126) (farkas 1 .cse816 1 .cse1350))) (farkas 1 .cse1347 1 .cse1349))))) :proves (+ .cse818 - .cse816) :EQ)) (.cse355 (! .cse1346 :proves (+ .cse344 + .cse345 - .cse348) :trichotomy)) (.cse367 (! (res .cse408 .cse409 (res .cse398 .cse399 (res .cse1301 (! (res .cse620 .cse621 (res .cse596 .cse597 (trans 120 x .cse363 percent 37))) :proves (+ .cse1301 - .cse398 - .cse340 - .cse172 - .cse408) :trans (120 x .cse363 percent 37)) .cse1302))) :proves (- .cse172 - .cse340) :rup)) (.cse864 (! (res .cse44 .cse45 (res .cse632 .cse633 (farkas 1 .cse83 1 .cse632 1 .cse789 1 .cse44 1 .cse78))) :proves (- .cse83 - .cse623 - .cse789 + .cse32 - .cse78) :LA (1 (- 1) 1 (- 1) 1))) (.cse315 (! (res .cse396 .cse397 (res .cse398 .cse399 (res .cse405 (! (res .cse480 .cse481 (res (= x .cse364) (symm x .cse364) (trans 120 x .cse364 s 115))) :proves (+ .cse405 - .cse398 - .cse246 - .cse170 - .cse396) :trans (120 x .cse364 s 115)) .cse622))) :proves (- .cse170 - .cse246) :rup)) (.cse390 (! (res .cse107 (symm .cse109 .cse110) (let ((.cse1344 (< .cse1343 0))) (res .cse1344 (let ((.cse1345 (< 0 .cse1343))) (res .cse1345 (trichotomy .cse1343 0) (farkas 1 .cse374 1 .cse1345))) (farkas 1 .cse107 1 .cse1344)))) :proves (- .cse374 + .cse389) :EQ)) (.cse392 (symm 0 .cse1343)) (.cse807 (! (res .cse885 .cse886 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse887 .cse888 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse768 (res .cse586 (! (res .cse590 .cse591 (res .cse417 .cse476 (res .cse982 .cse983 (res .cse263 .cse264 (res .cse802 .cse803 (res .cse351 .cse352 (farkas 4 .cse351 4 .cse802 4 .cse263 1 .cse33 4 .cse982 1 .cse887 4 .cse28 4 .cse417 1 .cse590 1 .cse885))))))) :proves (- .cse294 - .cse790 - .cse76 - .cse33 + .cse586 - .cse887 - .cse28 - .cse415 - .cse24 - .cse885) :LA ((- 4) (- 4) (- 4) 1 (- 4) 1 4 (- 4) (- 1) 1)) (res .cse984 (! (res .cse985 .cse986 (res .cse40 .cse41 (res .cse42 .cse43 (res .cse46 .cse47 (farkas 4 .cse294 4 .cse790 4 .cse76 1 .cse46 4 .cse586 1 .cse623 4 .cse42 4 .cse415 1 .cse24 1 .cse40 1 .cse985))))) :proves (- .cse294 - .cse790 - .cse76 - .cse33 - .cse586 - .cse623 - .cse28 - .cse415 - .cse24 - .cse22 + .cse984) :LA (4 4 4 (- 1) 4 1 (- 4) 4 1 (- 1) (- 1))) .cse987)) .cse788))))))) :proves (- .cse790 + .cse659 - .cse28 - .cse415 - .cse294 - .cse76) :rup)) (.cse806 (! (res .cse42 .cse43 (let ((.cse1341 (< .cse109 .cse63))) (res .cse1341 (let ((.cse1342 (< .cse63 .cse109))) (res .cse1342 (trichotomy .cse109 .cse63) (farkas 1 .cse42 1 .cse1342))) (farkas 1 .cse28 1 .cse1341)))) :proves (+ .cse29 - .cse28) :EQ)) (.cse119 (res .cse283 .cse964 .cse1046)) (.cse525 (! (res .cse87 (res .cse85 .cse86 (res .cse37 .cse335 (res .cse521 (! (res .cse873 .cse874 (let ((.cse1339 (< .cse15 .cse63))) (res .cse1339 (let ((.cse1340 (< .cse63 .cse15))) (res .cse1340 (trichotomy .cse15 .cse63) (farkas 1 .cse873 1 .cse1340))) (farkas 1 .cse523 1 .cse1339)))) :proves (+ .cse521 - .cse523) :EQ) (res .cse505 (! (res .cse904 .cse905 (farkas 1 .cse37 1 .cse523 1 .cse904 1 .cse415)) :proves (- .cse37 - .cse523 + .cse505 - .cse415) :LA (1 1 (- 1) 1)) (res .cse712 (res .cse713 .cse714 (res .cse716 .cse717 (res .cse55 (! (res .cse1213 .cse1214 (res .cse66 .cse67 (trans .cse62 .cse63 .cse15))) :proves (+ .cse55 - .cse57 - .cse521) :trans (.cse62 .cse63 .cse15)) (res .cse101 (res .cse102 (res .cse356 (res .cse345 (res .cse53 (res .cse51 (res .cse344 (res .cse269 (res .cse49 .cse270 (res .cse2 .cse117 .cse30)) (res .cse348 (! (res .cse353 .cse354 (res .cse417 .cse476 (res .cse873 .cse874 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse873 1 .cse269 1 .cse417 1 .cse353))))) :proves (- .cse37 - .cse523 - .cse269 - .cse415 + .cse348) :LA ((- 1) (- 1) 1 (- 1) (- 1))) .cse875)) (! (res .cse618 .cse619 (farkas 1 .cse37 1 .cse523 1 .cse618 1 .cse344 1 .cse415)) :proves (- .cse37 - .cse523 + .cse87 - .cse344 - .cse415) :LA (1 1 (- 1) 1 1))) .cse54) .cse59) .cse357) (res .cse105 .cse734 .cse218)) .cse118) .cse219)))) (! (res .cse417 .cse476 (res .cse873 .cse874 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse712 1 .cse873 1 .cse417)))) :proves (- .cse37 - .cse712 - .cse523 - .cse415) :LA ((- 1) 1 (- 1) (- 1)))))))) .cse131) :proves (+ .cse29 - .cse415 - .cse523 - .cse74 - .cse57) :rup)) (.cse855 (! (res .cse660 .cse1188 (let ((.cse1337 (< 2 .cse1319))) (res .cse1337 (let ((.cse1338 (< .cse1319 2))) (res .cse1338 (trichotomy 2 .cse1319) (farkas 1 .cse660 1 .cse1338))) (farkas 1 .cse659 1 .cse1337)))) :proves (+ .cse854 - .cse659) :EQ)) (.cse711 (! (res .cse904 .cse905 (farkas 1 .cse37 1 .cse294 1 .cse76 1 .cse904 1 .cse415)) :proves (- .cse37 - .cse294 - .cse76 + .cse505 - .cse415) :LA (1 1 1 (- 1) 1))) (.cse853 (! (let ((.cse1335 (<= 1 .cse1336))) (res .cse1335 (total-int .cse1336 0) (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 8 .cse37 8 .cse294 8 .cse76 1 .cse46 1 .cse44 4 .cse42 8 .cse415 1 .cse24 1 .cse40 4 .cse1335))))))) :proves (- .cse37 - .cse294 - .cse76 - .cse33 + .cse32 - .cse28 - .cse415 - .cse24 - .cse22 + .cse852) :LA (8 8 8 (- 1) (- 1) (- 4) 8 1 (- 1) (- 4)))) (.cse835 (let ((.cse1328 (<= .cse1325 0))) (res .cse1328 (! (res .cse632 .cse633 (let ((.cse1329 (<= 1 .cse1325))) (res .cse1329 (total-int .cse1325 0) (farkas 1 .cse1329 1 .cse37 1 .cse294 1 .cse76 1 .cse632 1 .cse415)))) :proves (+ .cse1328 - .cse37 - .cse294 - .cse76 - .cse623 - .cse415) :LA ((- 1) 1 1 1 (- 1) 1)) (let ((.cse1334 (+ .cse63 .cse641 1))) (let ((.cse1330 (<= .cse1334 0))) (res .cse1330 (! (let ((.cse1331 (< .cse1325 0))) (res .cse1331 (let ((.cse1332 (< 0 .cse1325))) (res .cse1332 (trichotomy .cse1325 0) (farkas 1 .cse1332 1 .cse1328))) (let ((.cse1333 (<= 1 .cse1334))) (res .cse1333 (total-int .cse1334 0) (farkas 1 .cse1333 1 .cse1331))))) :proves (+ .cse1330 + .cse834 - .cse1328) :trichotomy) (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse351 .cse352 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse351 1 .cse263 1 .cse623 1 .cse417 1 .cse1330))))) :proves (- .cse37 - .cse294 - .cse76 - .cse623 - .cse415 - .cse1330) :LA ((- 1) (- 1) (- 1) 1 (- 1) 1)))))))) (.cse847 (! (let ((.cse1324 (= 0 .cse1325))) (res .cse1324 (symm 0 .cse1325) (let ((.cse1326 (< fmt0 .cse63))) (res .cse1326 (let ((.cse1327 (< .cse63 fmt0))) (res .cse1327 (trichotomy fmt0 .cse63) (farkas 1 .cse1324 1 .cse1327))) (farkas 1 .cse834 1 .cse1326))))) :proves (+ .cse846 - .cse834) :EQ)) (.cse856 (! (res .cse659 .cse683 (res (= .cse63 fmt0) (symm .cse63 fmt0) (trans arg1 0 .cse63 fmt0))) :proves (+ .cse661 - .cse660 - .cse716 - .cse846) :trans (arg1 0 .cse63 fmt0))) (.cse432 (! (res .cse724 .cse725 (let ((.cse1322 (< 3 .cse12))) (res .cse1322 (let ((.cse1323 (< .cse12 3))) (res .cse1323 (trichotomy 3 .cse12) (farkas 1 .cse724 1 .cse1323))) (farkas 1 .cse429 1 .cse1322)))) :proves (+ .cse431 - .cse429) :EQ)) (.cse857 (res .cse49 (let ((.cse1312 (+ fmt1 .cse1321 .cse641 (- 4)))) (let ((.cse1309 (= .cse1312 0))) (res .cse1309 (res .cse346 .cse347 (res .cse691 (let ((.cse1310 (<= .cse1312 0))) (res .cse1310 (! (res .cse44 .cse45 (res .cse632 .cse633 (let ((.cse1311 (<= 1 .cse1312))) (res .cse1311 (total-int .cse1312 0) (farkas 1 .cse1311 1 .cse632 1 .cse44 1 .cse346))))) :proves (+ .cse1310 - .cse623 + .cse32 - .cse346) :LA ((- 1) (- 1) (- 1) 1)) (res .cse692 (! (let ((.cse1313 (< .cse1312 0))) (res .cse1313 (let ((.cse1314 (< 0 .cse1312))) (res .cse1314 (trichotomy .cse1312 0) (farkas 1 .cse1314 1 .cse1310))) (res .cse693 .cse694 (farkas 1 .cse693 1 .cse1313)))) :proves (+ .cse692 + .cse1309 - .cse1310) :trichotomy) .cse695))) .cse696)) (let ((.cse1315 (= .cse1319 .cse317))) (res .cse1315 (! (let ((.cse1316 (= 0 .cse1312))) (res .cse1316 (symm 0 .cse1312) (let ((.cse1317 (< .cse1319 .cse317))) (res .cse1317 (let ((.cse1318 (< .cse317 .cse1319))) (res .cse1318 (trichotomy .cse1319 .cse317) (farkas 1 .cse1316 1 .cse1318))) (farkas 1 .cse1309 1 .cse1317))))) :proves (+ .cse1315 - .cse1309) :EQ) (res .cse508 (! (res (= .cse317 .cse1319) (symm .cse317 .cse1319) (res (= .cse1319 2) (symm .cse1319 2) (trans .cse317 .cse1319 2))) :proves (+ .cse508 - .cse1315 - .cse854) :trans (.cse317 .cse1319 2)) (res .cse1118 (! .cse1320 :proves (+ .cse1118 - .cse508) :cong (.cse12 .cse14)) (! (trans 3 .cse12 .cse14) :proves (+ .cse422 - .cse431 - .cse1118) :trans (3 .cse12 .cse14))))))))) .cse117)) (.cse539 (res .cse10 .cse11 .cse557)) (.cse858 (! (trans 1 .cse988 .cse317) :proves (+ .cse101 - .cse680 - .cse689) :trans (1 .cse988 .cse317))) (.cse859 (res .cse221 .cse872 (! (res .cse659 .cse683 (res .cse1307 .cse1308 (trans .cse12 .cse126 arg1 0 .cse63))) :proves (+ .cse61 - .cse221 - .cse818 - .cse660 - .cse716) :trans (.cse12 .cse126 arg1 0 .cse63)))) (.cse860 (! (res .cse659 .cse683 (res .cse948 .cse949 (trans .cse317 arg1 0 .cse63))) :proves (+ .cse356 - .cse686 - .cse660 - .cse716) :trans (.cse317 arg1 0 .cse63))) (.cse861 (res .cse105 .cse734 (res .cse565 .cse566 (! (res .cse127 .cse128 (res .cse659 .cse683 (res .cse1307 .cse1308 (trans .cse12 .cse125 .cse126 arg1 0 .cse63)))) :proves (+ .cse61 - .cse565 - .cse72 - .cse818 - .cse660 - .cse716) :trans (.cse12 .cse125 .cse126 arg1 0 .cse63))))) (.cse69 (! (let ((.cse1303 (= .cse63 .cse12))) (res .cse1303 (symm .cse63 .cse12) (let ((.cse1304 (< .cse1306 0))) (res .cse1304 (let ((.cse1305 (< 0 .cse1306))) (res .cse1305 (trichotomy .cse1306 0) (farkas 1 .cse1303 1 .cse1305))) (farkas 1 .cse61 1 .cse1304))))) :proves (- .cse61 + .cse68) :EQ)) (.cse862 (! (res .cse70 .cse71 (farkas 1 .cse70 1 .cse852)) :proves (- .cse68 - .cse852) :LA ((- 1) 1))) (.cse727 (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse351 .cse352 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse351 1 .cse712 1 .cse263 1 .cse417))))) :proves (- .cse37 - .cse294 - .cse712 - .cse76 - .cse415) :LA ((- 1) (- 1) 1 (- 1) (- 1)))) (.cse707 (! (res .cse408 .cse409 (res .cse398 .cse399 (res .cse1301 (! (res .cse241 .cse242 (res .cse596 .cse597 (trans 120 x .cse240 percent 37))) :proves (+ .cse1301 - .cse398 - .cse191 - .cse192 - .cse408) :trans (120 x .cse240 percent 37)) .cse1302))) :proves (- .cse191 - .cse192) :rup)) (.cse121 (! (let ((.cse1298 (= .cse13 .cse109))) (res .cse1298 (symm .cse13 .cse109) (let ((.cse1299 (< .cse1297 0))) (res .cse1299 (let ((.cse1300 (< 0 .cse1297))) (res .cse1300 (trichotomy .cse1297 0) (farkas 1 .cse1298 1 .cse1300))) (farkas 1 .cse99 1 .cse1299))))) :proves (- .cse99 + .cse94) :EQ)) (.cse124 (symm 0 .cse1297)) (.cse198 (! (res .cse1295 (res .cse970 .cse971 (and- 1 .cse970)) (res .cse1296 (not+ .cse1296) (=>- .cse1295))) :proves (+ .cse195 + .cse197) :input)) (.cse236 (! (and- 0 .cse195) :proves (- .cse195 + .cse192) :input)) (.cse306 (! (res .cse463 .cse464 (farkas 1 .cse88 1 .cse83 1 .cse187 1 .cse78 1 .cse463)) :proves (- .cse88 - .cse83 - .cse187 - .cse78 + .cse305) :LA (1 1 1 1 (- 1)))) (.cse309 (! (res .cse1293 (res .cse1292 (trichotomy .cse13 0) (farkas 1 .cse1292 1 .cse305)) (let ((.cse1294 (<= 1 .cse974))) (res .cse1294 (total-int .cse974 0) (farkas 1 .cse1294 1 .cse1293)))) :proves (+ .cse307 + .cse308 - .cse305) :trichotomy)) (.cse310 (! (res .cse243 (symm 0 .cse13) (res .cse1292 (res .cse1293 (trichotomy 0 .cse13) (farkas 1 .cse243 1 .cse1293)) (farkas 1 .cse308 1 .cse1292))) :proves (+ .cse243 - .cse308) :EQ)) (.cse799 (total-int .cse1285 0)) (.cse801 (! (let ((.cse1288 (< .cse1285 0))) (res .cse1288 (let ((.cse1289 (< 0 .cse1285))) (res .cse1289 (trichotomy .cse1285 0) (farkas 1 .cse1289 1 .cse793))) (let ((.cse1290 (<= 1 .cse1291))) (res .cse1290 (total-int .cse1291 0) (farkas 1 .cse1290 1 .cse1288))))) :proves (+ .cse800 + .cse792 - .cse793) :trichotomy)) (.cse805 (! (let ((.cse1284 (= 0 .cse1285))) (res .cse1284 (symm 0 .cse1285) (let ((.cse1286 (< .cse230 .cse63))) (res .cse1286 (let ((.cse1287 (< .cse63 .cse230))) (res .cse1287 (trichotomy .cse230 .cse63) (farkas 1 .cse1284 1 .cse1287))) (farkas 1 .cse792 1 .cse1286))))) :proves (+ .cse804 - .cse792) :EQ)) (.cse60 (res .cse1118 .cse1119 (! (res .cse113 .cse114 (trans .cse12 .cse14 .cse13)) :proves (+ .cse10 - .cse1118 - .cse8) :trans (.cse12 .cse14 .cse13)))) (.cse232 (! (res .cse316 .cse319 (let ((.cse1282 (< .cse1281 0))) (res .cse1282 (let ((.cse1283 (< 0 .cse1281))) (res .cse1283 (trichotomy .cse1281 0) (farkas 1 .cse316 1 .cse1283))) (farkas 1 .cse10 1 .cse1282)))) :proves (- .cse10 + .cse231) :EQ)) (.cse234 (symm 0 .cse1281)) (.cse536 (trichotomy .cse1008 0)) (.cse533 (symm .cse13 .cse317)) (.cse311 (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 1 .cse453 1 .cse155 1 .cse451 1 .cse153 1 .cse307))))) :proves (- .cse88 - .cse83 - .cse187 - .cse78 - .cse307) :LA ((- 1) (- 1) (- 1) (- 1) 1))) (.cse570 (symm percent .cse363)) (.cse385 (! (res .cse1279 (res .cse1269 .cse1270 (and- 1 .cse1269)) (res .cse1280 (not+ .cse1280) (=>- .cse1279))) :proves (+ .cse384 + .cse74) :input)) (.cse594 (! (and- 1 .cse384) :proves (- .cse384 + .cse340) :input)) (.cse387 (! (and- 0 .cse384) :proves (- .cse384 + .cse386) :input)) (.cse791 (! (res .cse1267 (res .cse384 (and+ .cse384) (res .cse1268 (res .cse1269 .cse1270 (and- 0 .cse1269)) (=>- .cse1268))) (let ((.cse1271 (= .cse1267 .cse790))) (res .cse1271 (res .cse790 (res .cse1267 (=+1 .cse1271) (let ((.cse1272 (= .cse1273 .cse15))) (res .cse1272 (symm .cse1273 .cse15) (let ((.cse1274 (< .cse1276 0))) (res .cse1274 (let ((.cse1275 (< 0 .cse1276))) (res .cse1275 (trichotomy .cse1276 0) (farkas 1 .cse1267 1 .cse1275))) (farkas 1 .cse1272 1 .cse1274)))))) (res .cse1267 (res .cse802 .cse803 (let ((.cse1277 (< .cse15 .cse1273))) (res .cse1277 (let ((.cse1278 (< .cse1273 .cse15))) (res .cse1278 (trichotomy .cse15 .cse1273) (farkas 1 .cse790 1 .cse1278))) (farkas 1 .cse802 1 .cse1277)))) (=+2 .cse1271))) (=-2 .cse1271)))) :proves (- .cse386 - .cse340 + .cse790) :input)) (.cse77 (! (res .cse64 .cse65 (let ((.cse1264 (< .cse1266 0))) (res .cse1264 (let ((.cse1265 (< 0 .cse1266))) (res .cse1265 (trichotomy .cse1266 0) (farkas 1 .cse55 1 .cse1265))) (farkas 1 .cse64 1 .cse1264)))) :proves (- .cse55 + .cse76) :EQ)) (.cse97 (total-int .cse1263 0)) (.cse814 (total-int .cse1260 0)) (.cse815 (! (res .cse1185 (res .cse1186 .cse1187 (farkas 1 .cse1186 1 .cse812)) (res .cse44 .cse45 (farkas 1 .cse44 1 .cse1185))) :proves (- .cse812 + .cse584 + .cse32) :trichotomy)) (.cse672 (! (let ((.cse1259 (= 0 .cse1260))) (res .cse1259 (symm 0 .cse1260) (res .cse1261 (let ((.cse1262 (< fmt0 arg1))) (res .cse1262 (trichotomy arg1 fmt0) (farkas 1 .cse584 1 .cse1262))) (farkas 1 .cse1259 1 .cse1261)))) :proves (+ .cse661 - .cse584) :EQ)) (.cse677 (! (res .cse659 .cse683 (res .cse1190 (res .cse1189 .cse1258 .cse1192) .cse1191)) :proves (- .cse660 + .cse659) :EQ)) (.cse827 (let ((.cse1252 (<= .cse1249 0))) (res .cse1252 (! (res .cse417 .cse476 (let ((.cse1253 (<= 1 .cse1249))) (res .cse1253 (total-int .cse1249 0) (farkas 1 .cse1253 1 .cse623 1 .cse584 1 .cse417)))) :proves (+ .cse1252 - .cse623 - .cse584 - .cse415) :LA ((- 1) 1 1 (- 1))) (! (let ((.cse1254 (< .cse1249 0))) (res .cse1254 (let ((.cse1255 (< 0 .cse1249))) (res .cse1255 (trichotomy .cse1249 0) (farkas 1 .cse1255 1 .cse1252))) (let ((.cse1256 (<= 1 .cse1257))) (res .cse1256 (total-int .cse1257 0) (farkas 1 .cse1256 1 .cse1254))))) :proves (+ .cse824 + .cse826 - .cse1252) :trichotomy)))) (.cse829 (! (let ((.cse1248 (= 0 .cse1249))) (res .cse1248 (symm 0 .cse1249) (let ((.cse1250 (< arg1 .cse110))) (res .cse1250 (let ((.cse1251 (< .cse110 arg1))) (res .cse1251 (trichotomy arg1 .cse110) (farkas 1 .cse826 1 .cse1251))) (farkas 1 .cse1248 1 .cse1250))))) :proves (+ .cse828 - .cse826) :EQ)) (.cse831 (symm .cse110 arg1)) (.cse833 (! (res .cse44 .cse45 (res .cse632 .cse633 (farkas 1 .cse632 1 .cse824 1 .cse44 1 .cse415))) :proves (- .cse623 - .cse824 + .cse32 - .cse415) :LA ((- 1) 1 (- 1) 1))) (.cse120 (! (res .cse878 .cse881 (let ((.cse1245 (< .cse1247 0))) (res .cse1245 (let ((.cse1246 (< 0 .cse1247))) (res .cse1246 (trichotomy .cse1247 0) (farkas 1 .cse878 1 .cse1246))) (farkas 1 .cse100 1 .cse1245)))) :proves (- .cse100 + .cse98) :EQ)) (.cse122 (! (res .cse1015 .cse1016 (farkas 1 .cse95 1 .cse1015)) :proves (- .cse95 - .cse98) :LA (1 (- 1)))) (.cse168 (! (res .cse1243 (res .cse1234 .cse1235 (and- 1 .cse1234)) (res .cse1244 (not+ .cse1244) (=>- .cse1243))) :proves (+ .cse167 + .cse57) :input)) (.cse237 (! (and- 1 .cse167) :proves (- .cse167 + .cse191) :input)) (.cse169 (! (and- 0 .cse167) :proves (- .cse167 + .cse144) :input)) (.cse251 (! (res .cse1232 (res .cse167 (and+ .cse167) (res .cse1233 (res .cse1234 .cse1235 (and- 0 .cse1234)) (=>- .cse1233))) (let ((.cse1236 (= .cse1232 .cse250))) (res .cse1236 (res .cse250 (res .cse1232 (=+1 .cse1236) (let ((.cse1237 (= .cse910 .cse63))) (res .cse1237 (symm .cse910 .cse63) (let ((.cse1238 (< .cse1240 0))) (res .cse1238 (let ((.cse1239 (< 0 .cse1240))) (res .cse1239 (trichotomy .cse1240 0) (farkas 1 .cse1232 1 .cse1239))) (farkas 1 .cse1237 1 .cse1238)))))) (res .cse1232 (res .cse261 .cse262 (let ((.cse1241 (< .cse63 .cse910))) (res .cse1241 (let ((.cse1242 (< .cse910 .cse63))) (res .cse1242 (trichotomy .cse63 .cse910) (farkas 1 .cse250 1 .cse1242))) (farkas 1 .cse261 1 .cse1241)))) (=+2 .cse1236))) (=-2 .cse1236)))) :proves (- .cse144 - .cse191 + .cse250) :input)) (.cse313 (! (res .cse408 .cse409 (res .cse398 .cse399 (res .cse410 (! (res .cse401 .cse402 (res .cse365 .cse366 (trans 37 percent .cse364 x 120))) :proves (+ .cse410 - .cse408 - .cse144 - .cse246 - .cse398) :trans (37 percent .cse364 x 120)) .cse413))) :proves (- .cse144 - .cse246) :rup)) (.cse295 (! (res .cse66 .cse67 (let ((.cse1229 (< .cse1231 0))) (res .cse1229 (let ((.cse1230 (< 0 .cse1231))) (res .cse1230 (trichotomy .cse1231 0) (farkas 1 .cse57 1 .cse1230))) (farkas 1 .cse66 1 .cse1229)))) :proves (- .cse57 + .cse294) :EQ)) (.cse249 (! (res .cse1227 (res .cse1217 .cse1218 (and- 1 .cse1217)) (res .cse1228 (not+ .cse1228) (=>- .cse1227))) :proves (+ .cse248 + .cse55) :input)) (.cse337 (! (and- 1 .cse248) :proves (- .cse248 + .cse246) :input)) (.cse336 (! (and- 0 .cse248) :proves (- .cse248 + .cse172) :input)) (.cse339 (! (res .cse1215 (res .cse248 (and+ .cse248) (res .cse1216 (res .cse1217 .cse1218 (and- 0 .cse1217)) (=>- .cse1216))) (let ((.cse1219 (= .cse1215 .cse338))) (res .cse1219 (res .cse338 (res .cse1215 (=+1 .cse1219) (let ((.cse1220 (= .cse1221 .cse62))) (res .cse1220 (symm .cse1221 .cse62) (let ((.cse1222 (< .cse1224 0))) (res .cse1222 (let ((.cse1223 (< 0 .cse1224))) (res .cse1223 (trichotomy .cse1224 0) (farkas 1 .cse1215 1 .cse1223))) (farkas 1 .cse1220 1 .cse1222)))))) (res .cse1215 (res .cse349 .cse350 (let ((.cse1225 (< .cse62 .cse1221))) (res .cse1225 (let ((.cse1226 (< .cse1221 .cse62))) (res .cse1226 (trichotomy .cse62 .cse1221) (farkas 1 .cse338 1 .cse1226))) (farkas 1 .cse349 1 .cse1225)))) (=+2 .cse1219))) (=-2 .cse1219)))) :proves (- .cse172 - .cse246 + .cse338) :input)) (.cse522 (! (res .cse64 .cse65 (res .cse66 .cse67 (trans .cse15 .cse62 .cse63))) :proves (+ .cse521 - .cse55 - .cse57) :trans (.cse15 .cse62 .cse63))) (.cse524 (! (res .cse1213 .cse1214 (res .cse1162 (res .cse1163 .cse1164 (farkas 1 .cse1213 1 .cse1163)) (farkas 1 .cse521 1 .cse1162))) :proves (- .cse521 + .cse523) :EQ)) (.cse31 (! (res .cse273 .cse274 (let ((.cse1210 (< .cse1212 0))) (res .cse1210 (let ((.cse1211 (< 0 .cse1212))) (res .cse1211 (trichotomy .cse1212 0) (farkas 1 .cse273 1 .cse1211))) (farkas 1 .cse29 1 .cse1210)))) :proves (- .cse29 + .cse28) :EQ)) (.cse302 (! (res .cse155 .cse156 (let ((.cse1208 (< .cse126 .cse125))) (res .cse1208 (let ((.cse1209 (< .cse125 .cse126))) (res .cse1209 (trichotomy .cse126 .cse125) (farkas 1 .cse83 1 .cse1209))) (farkas 1 .cse155 1 .cse1208)))) :proves (+ .cse72 - .cse83) :EQ)) (.cse627 (! (res .cse451 .cse452 (let ((.cse1206 (< .cse14 .cse126))) (res .cse1206 (let ((.cse1207 (< .cse126 .cse14))) (res .cse1207 (trichotomy .cse14 .cse126) (farkas 1 .cse187 1 .cse1207))) (farkas 1 .cse451 1 .cse1206)))) :proves (+ .cse182 - .cse187) :EQ)) (.cse679 (! (res .cse279 .cse280 (let ((.cse1204 (< .cse1173 0))) (res .cse1204 (let ((.cse1205 (< 0 .cse1173))) (res .cse1205 (trichotomy .cse1173 0) (farkas 1 .cse197 1 .cse1205))) (farkas 1 .cse279 1 .cse1204)))) :proves (- .cse197 + .cse678) :EQ)) (.cse343 (! (res .cse127 .cse128 (let ((.cse1201 (< .cse1203 0))) (res .cse1201 (let ((.cse1202 (< 0 .cse1203))) (res .cse1202 (trichotomy .cse1203 0) (farkas 1 .cse72 1 .cse1202))) (farkas 1 .cse127 1 .cse1201)))) :proves (- .cse72 + .cse83) :EQ)) (.cse188 (! (res .cse244 .cse245 (let ((.cse1198 (< .cse1200 0))) (res .cse1198 (let ((.cse1199 (< 0 .cse1200))) (res .cse1199 (trichotomy .cse1200 0) (farkas 1 .cse182 1 .cse1199))) (farkas 1 .cse244 1 .cse1198)))) :proves (- .cse182 + .cse187) :EQ)) (.cse89 (! (res .cse113 .cse114 (let ((.cse1195 (< .cse1197 0))) (res .cse1195 (let ((.cse1196 (< 0 .cse1197))) (res .cse1196 (trichotomy .cse1197 0) (farkas 1 .cse8 1 .cse1196))) (farkas 1 .cse113 1 .cse1195)))) :proves (- .cse8 + .cse88) :EQ)) (.cse681 (! (res .cse660 .cse1188 (let ((.cse1193 (< 1 .cse988))) (res .cse1193 (let ((.cse1194 (< .cse988 1))) (res .cse1194 (trichotomy 1 .cse988) (farkas 1 .cse660 1 .cse1194))) (farkas 1 .cse659 1 .cse1193)))) :proves (+ .cse680 - .cse659) :EQ)) (.cse682 (! (res .cse660 .cse1188 (res .cse1189 (res .cse1190 (trichotomy 0 arg1) .cse1191) .cse1192)) :proves (+ .cse660 - .cse659) :EQ)) (.cse684 (! (res .cse673 .cse674 (res .cse1185 (res .cse1186 .cse1187 (farkas 1 .cse661 1 .cse1186)) (farkas 1 .cse673 1 .cse1185))) :proves (- .cse661 + .cse584) :EQ)) (.cse811 (res .cse346 .cse347 (res .cse358 .cse424 (! (res .cse44 .cse45 (res .cse693 .cse694 (res .cse632 .cse633 (farkas 1 .cse632 1 .cse693 1 .cse44 1 .cse358)))) :proves (- .cse623 + .cse692 + .cse32 - .cse358) :LA ((- 1) (- 1) (- 1) 1))))) (.cse820 (! .cse1184 :proves (+ .cse691 + .cse690 - .cse692) :trichotomy)) (.cse697 (! (let ((.cse1180 (= 0 .cse1181))) (res .cse1180 (symm 0 .cse1181) (let ((.cse1182 (< .cse988 .cse317))) (res .cse1182 (let ((.cse1183 (< .cse317 .cse988))) (res .cse1183 (trichotomy .cse988 .cse317) (farkas 1 .cse1180 1 .cse1183))) (farkas 1 .cse690 1 .cse1182))))) :proves (+ .cse689 - .cse690) :EQ)) (.cse698 (res .cse821 .cse822 (res .cse221 .cse823 .cse1030))) (.cse229 (res .cse10 .cse11 (! (res .cse279 .cse280 (trans .cse12 .cse13 .cse230)) :proves (+ .cse228 - .cse10 - .cse197) :trans (.cse12 .cse13 .cse230)))) (.cse699 (! (res .cse277 .cse278 (let ((.cse1178 (< .cse1172 0))) (res .cse1178 (let ((.cse1179 (< 0 .cse1172))) (res .cse1179 (trichotomy .cse1172 0) (farkas 1 .cse277 1 .cse1179))) (farkas 1 .cse228 1 .cse1178)))) :proves (- .cse228 + .cse688) :EQ)) (.cse425 (! .cse1177 :proves (+ .cse269 + .cse102 - .cse358) :trichotomy)) (.cse825 (! .cse1176 :proves (+ .cse685 + .cse687 - .cse691) :trichotomy)) (.cse704 (! (res .cse946 .cse947 (let ((.cse1174 (< arg1 .cse317))) (res .cse1174 (let ((.cse1175 (< .cse317 arg1))) (res .cse1175 (trichotomy arg1 .cse317) (farkas 1 .cse946 1 .cse1175))) (farkas 1 .cse687 1 .cse1174)))) :proves (+ .cse686 - .cse687) :EQ)) (.cse705 (! (res .cse103 (res .cse659 .cse683 (res .cse948 .cse949 (trans .cse317 arg1 0))) .cse501) :proves (+ .cse105 - .cse686 - .cse660) :trans (.cse317 arg1 0))) (.cse375 (! (cong (x_count 0) (x_count .cse317)) :proves (+ .cse374 - .cse105) :cong (.cse110 .cse109))) (.cse377 (! (cong (x_count 1) (x_count .cse317)) :proves (+ .cse286 - .cse101) :cong (.cse15 .cse109))) (.cse706 (! (res .cse618 .cse619 (farkas 1 .cse685 1 .cse618 1 .cse623 1 .cse584)) :proves (- .cse685 + .cse87 - .cse623 - .cse584) :LA (1 (- 1) 1 1))) (.cse797 (symm 0 .cse1173)) (.cse701 (symm 0 .cse1172)) (.cse477 (! (let ((.cse1168 (= .cse14 3))) (res .cse1168 (symm .cse14 3) (let ((.cse1169 (< .cse1171 0))) (res .cse1169 (let ((.cse1170 (< 0 .cse1171))) (res .cse1170 (trichotomy .cse1171 0) (farkas 1 .cse1168 1 .cse1170))) (farkas 1 .cse422 1 .cse1169))))) :proves (- .cse422 + .cse421) :EQ)) (.cse863 (! (res .cse558 .cse559 (farkas 1 .cse83 1 .cse187 1 .cse558 1 .cse78)) :proves (- .cse83 - .cse187 - .cse421 - .cse78) :LA (1 1 (- 1) 1))) (.cse614 (symm percent .cse240)) (.cse482 (! (res .cse595 (symm 115 37) .cse598) :proves (- .cse479) :EQ)) (.cse715 (let ((.cse1158 (<= .cse1160 0))) (res .cse1158 (! (let ((.cse1159 (<= 1 .cse1160))) (res .cse1159 (total-int .cse1160 0) (farkas 1 .cse1159 1 .cse294 1 .cse76))) :proves (+ .cse1158 - .cse294 - .cse76) :LA ((- 1) 1 1)) (let ((.cse1166 (+ .cse63 .cse1167 1))) (let ((.cse1161 (<= .cse1166 0))) (res .cse1161 (! (res .cse1162 (res .cse1163 .cse1164 (farkas 1 .cse1163 1 .cse1158)) (let ((.cse1165 (<= 1 .cse1166))) (res .cse1165 (total-int .cse1166 0) (farkas 1 .cse1165 1 .cse1162)))) :proves (+ .cse1161 + .cse523 - .cse1158) :trichotomy) (! (res .cse263 .cse264 (res .cse351 .cse352 (farkas 1 .cse351 1 .cse263 1 .cse1161))) :proves (- .cse294 - .cse76 - .cse1161) :LA ((- 1) (- 1) 1)))))))) (.cse718 (! (res .cse885 .cse886 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse887 .cse888 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse768 (res .cse587 (! (res .cse590 .cse591 (res .cse417 .cse476 (res .cse588 .cse589 (res .cse873 .cse874 (res .cse139 .cse140 (farkas 4 .cse139 4 .cse873 4 .cse588 1 .cse33 1 .cse887 4 .cse28 4 .cse417 1 .cse590 1 .cse885)))))) :proves (- .cse37 - .cse523 + .cse587 - .cse33 - .cse887 - .cse28 - .cse415 - .cse24 - .cse885) :LA ((- 4) (- 4) (- 4) 1 1 4 (- 4) (- 1) 1)) (res .cse984 (! (res .cse985 .cse986 (res .cse40 .cse41 (res .cse42 .cse43 (res .cse46 .cse47 (farkas 4 .cse37 4 .cse523 4 .cse587 1 .cse46 1 .cse623 4 .cse42 4 .cse415 1 .cse24 1 .cse40 1 .cse985))))) :proves (- .cse37 - .cse523 - .cse587 - .cse33 - .cse623 - .cse28 - .cse415 - .cse24 - .cse22 + .cse984) :LA (4 4 4 (- 1) 1 (- 4) 4 1 (- 1) (- 1))) .cse987)) .cse788))))))) :proves (- .cse415 + .cse659 - .cse28 - .cse523 - .cse37) :rup)) (.cse920 (! (res .cse590 .cse591 (res .cse417 .cse476 (res .cse632 .cse633 (res .cse588 .cse589 (res .cse263 .cse264 (res .cse351 .cse352 (res .cse139 .cse140 (farkas 4 .cse139 4 .cse351 4 .cse263 4 .cse588 1 .cse33 1 .cse632 4 .cse28 1 .cse659 4 .cse417 1 .cse590 1 .cse22)))))))) :proves (- .cse37 - .cse294 - .cse76 + .cse587 - .cse33 - .cse623 - .cse28 - .cse659 - .cse415 - .cse24 - .cse22) :LA ((- 4) (- 4) (- 4) (- 4) 1 (- 1) 4 1 (- 4) (- 1) 1))) (.cse921 (! .cse593 :proves (+ .cse586 + .cse429 - .cse587) :trichotomy)) (.cse795 (symm 0 .cse1142)) (.cse1136 (res .cse1156 .cse1157 (and- 1 .cse1156)))) (let ((.cse550 (<= 1 .cse916)) (.cse223 (= .cse126 .cse12)) (.cse489 (= .cse868 0)) (.cse321 (= .cse125 .cse12)) (.cse783 (= .cse126 .cse317)) (.cse16 (= .cse14 1)) (.cse499 (= .cse62 .cse317)) (.cse490 (= .cse110 .cse126)) (.cse161 (= .cse63 1)) (.cse423 (= 0 .cse109)) (.cse427 (= .cse109 0)) (.cse6 (= 1 .cse14)) (.cse151 (<= .cse14 0)) (.cse147 (= .cse890 0)) (.cse148 (<= .cse890 0))) (let-proof ((.cse370 (! (let ((.cse1155 (<= 1 .cse126))) (res .cse1155 (total-int .cse126 0) (farkas 1 .cse1155 1 .cse83 1 .cse78))) :proves (+ .cse369 - .cse83 - .cse78) :LA ((- 1) 1 1))) (.cse371 (! (res .cse1152 (res .cse1151 (trichotomy .cse126 0) (farkas 1 .cse1151 1 .cse369)) (let ((.cse1153 (<= 1 .cse1154))) (res .cse1153 (total-int .cse1154 0) (farkas 1 .cse1153 1 .cse1152)))) :proves (+ .cse368 + .cse129 - .cse369) :trichotomy)) (.cse373 (! (res .cse81 (symm 0 .cse126) (res .cse1151 (res .cse1152 (trichotomy 0 .cse126) (farkas 1 .cse81 1 .cse1152)) (farkas 1 .cse129 1 .cse1151))) :proves (+ .cse81 - .cse129) :EQ)) (.cse130 (symm .cse126 0)) (.cse372 (! (res .cse153 .cse154 (res .cse155 .cse156 (farkas 1 .cse155 1 .cse153 1 .cse368))) :proves (- .cse83 - .cse78 - .cse368) :LA ((- 1) (- 1) 1))) (.cse551 (total-int .cse916 0)) (.cse553 (! (let ((.cse1147 (< .cse916 0))) (res .cse1147 (let ((.cse1148 (< 0 .cse916))) (res .cse1148 (trichotomy .cse916 0) (farkas 1 .cse1148 1 .cse549))) (let ((.cse1149 (<= 1 .cse1150))) (res .cse1149 (total-int .cse1150 0) (farkas 1 .cse1149 1 .cse1147))))) :proves (+ .cse552 + .cse548 - .cse549) :trichotomy)) (.cse222 (res .cse1118 .cse1119 (! (trans .cse12 .cse14 .cse126) :proves (+ .cse221 - .cse1118 - .cse182) :trans (.cse12 .cse14 .cse126)))) (.cse143 (! (res .cse1145 (res .cse1135 .cse1136 (and- 1 .cse1135)) (res .cse1146 (not+ .cse1146) (=>- .cse1145))) :proves (+ .cse142 + .cse8) :input)) (.cse145 (! (and- 0 .cse142) :proves (- .cse142 + .cse144) :input)) (.cse190 (! (and- 1 .cse142) :proves (- .cse142 + .cse189) :input)) (.cse194 (! (res .cse1133 (res .cse142 (and+ .cse142) (res .cse1134 (res .cse1135 .cse1136 (and- 0 .cse1135)) (=>- .cse1134))) (let ((.cse1137 (= .cse1133 .cse193))) (res .cse1137 (res .cse193 (res .cse1133 (=+1 .cse1137) (let ((.cse1138 (= .cse1139 .cse13))) (res .cse1138 (symm .cse1139 .cse13) (let ((.cse1140 (< .cse1142 0))) (res .cse1140 (let ((.cse1141 (< 0 .cse1142))) (res .cse1141 (trichotomy .cse1142 0) (farkas 1 .cse1133 1 .cse1141))) (farkas 1 .cse1138 1 .cse1140)))))) (res .cse1133 (res .cse794 .cse795 (let ((.cse1143 (< .cse13 .cse1139))) (res .cse1143 (let ((.cse1144 (< .cse1139 .cse13))) (res .cse1144 (trichotomy .cse13 .cse1139) (farkas 1 .cse193 1 .cse1144))) (farkas 1 .cse794 1 .cse1143)))) (=+2 .cse1137))) (=-2 .cse1137)))) :proves (- .cse144 + .cse193 - .cse189) :input)) (.cse526 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse523 .cse715 (res .cse659 .cse718 (res .cse587 .cse920 (res .cse586 .cse921 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse37 4 .cse294 4 .cse76 1 .cse46 1 .cse44 4 .cse42 4 .cse415 1 .cse24 1 .cse40 4 .cse586))))) :proves (- .cse37 - .cse294 - .cse76 - .cse33 + .cse32 - .cse28 - .cse415 - .cse24 - .cse22 - .cse586) :LA (4 4 4 (- 1) (- 1) (- 4) 4 1 (- 1) 4)))))))) .cse48))) :proves (- .cse415 - .cse28 + .cse429 - .cse76 - .cse294 - .cse37) :rup)) (.cse238 (! (res .cse408 .cse409 (res .cse396 .cse397 (res .cse479 (! (res .cse480 .cse481 (res .cse613 .cse614 (trans 37 percent .cse240 s 115))) :proves (+ .cse479 - .cse408 - .cse192 - .cse189 - .cse396) :trans (37 percent .cse240 s 115)) .cse482))) :proves (- .cse189 - .cse192) :rup)) (.cse224 (symm .cse126 .cse12)) (.cse733 (! (res .cse396 .cse397 (res .cse398 .cse399 (res .cse405 (! (res .cse480 .cse481 (res .cse241 .cse242 (trans 120 x .cse240 s 115))) :proves (+ .cse405 - .cse398 - .cse191 - .cse189 - .cse396) :trans (120 x .cse240 s 115)) .cse622))) :proves (- .cse189 - .cse191) :rup)) (.cse446 (! (res .cse408 .cse409 (res .cse396 .cse397 (let-proof ((.cse922 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse37 4 .cse294 4 .cse76 1 .cse46 4 .cse586 1 .cse44 4 .cse42 4 .cse415 1 .cse24 1 .cse40))))) :proves (- .cse37 - .cse294 - .cse76 - .cse33 - .cse586 + .cse32 - .cse28 - .cse415 - .cse24 - .cse22) :LA (4 4 4 (- 1) 4 (- 1) (- 4) 4 1 (- 1)))) (.cse919 (! (res .cse453 .cse454 (let ((.cse1131 (< .cse13 .cse14))) (res .cse1131 (let ((.cse1132 (< .cse14 .cse13))) (res .cse1132 (trichotomy .cse13 .cse14) (farkas 1 .cse88 1 .cse1132))) (farkas 1 .cse453 1 .cse1131)))) :proves (+ .cse8 - .cse88) :EQ))) (let-proof ((.cse923 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse768 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse421 (res .cse422 (let ((.cse1120 (+ arg1 .cse291))) (let ((.cse934 (= .cse1120 0)) (.cse932 (= arg1 .cse109))) (let ((.cse936 (= 0 .cse1120))) (let-proof ((.cse991 (! .cse1130 :proves (+ .cse283 - .cse821) :cong (.cse109 .cse15))) (.cse938 (! (res .cse713 .cse1124 (res .cse1125 (res .cse1126 .cse1127 .cse1128) .cse1129)) :proves (- .cse716 + .cse713) :EQ)) (.cse939 (! (res .cse904 .cse905 (farkas 1 .cse713 1 .cse904)) :proves (- .cse713 + .cse505) :LA (1 (- 1)))) (.cse935 (! (let ((.cse1121 (= .cse109 arg1))) (res .cse1121 (symm .cse109 arg1) (let ((.cse1122 (< .cse1120 0))) (res .cse1122 (let ((.cse1123 (< 0 .cse1120))) (res .cse1123 (trichotomy .cse1120 0) (farkas 1 .cse932 1 .cse1123))) (farkas 1 .cse1121 1 .cse1122))))) :proves (- .cse932 + .cse934) :EQ)) (.cse937 (symm 0 .cse1120))) (let-proof ((.cse943 (! (res .cse408 .cse409 (res .cse398 .cse399 (let ((.cse1107 (+ .cse230 .cse291)) (.cse1109 (+ fmt1 .cse1085 .cse641 (- 2))) (.cse1115 (+ fmt1 .cse1085 .cse641 (- 1))) (.cse1087 (+ .cse230 .cse641))) (let ((.cse1043 (= .cse230 fmt0)) (.cse1036 (= fmt0 .cse230)) (.cse1034 (= .cse1087 0)) (.cse1090 (< 0 .cse230)) (.cse1091 (< .cse230 0)) (.cse1039 (= .cse109 .cse230)) (.cse1024 (<= .cse1115 0)) (.cse1020 (= 0 .cse230)) (.cse1018 (= .cse230 0)) (.cse1022 (= .cse317 .cse230)) (.cse1023 (= .cse1109 0)) (.cse1025 (<= .cse1109 0)) (.cse1038 (= .cse1107 0)) (.cse1072 (= 0 .cse1107))) (let-proof ((.cse1044 (symm .cse230 fmt0)) (.cse1073 (symm 0 .cse1107))) (let ((.cse1026 (<= 1 .cse1109))) (let-proof ((.cse1048 (! (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse1072 .cse1073 (res .cse700 .cse701 (farkas 8 .cse88 4 .cse700 4 .cse1072 8 .cse83 8 .cse678 1 .cse46 1 .cse44 8 .cse187 1 .cse24 1 .cse40 8 .cse78)))))) :proves (- .cse88 - .cse688 - .cse1038 - .cse83 - .cse678 - .cse33 + .cse32 - .cse187 - .cse24 - .cse22 - .cse78) :LA (8 (- 4) (- 4) 8 8 (- 1) (- 1) 8 1 (- 1) 8))) (.cse1013 (res .cse1118 .cse1119 (! (res .cse279 .cse280 (res .cse113 .cse114 (trans .cse12 .cse14 .cse13 .cse230))) :proves (+ .cse228 - .cse1118 - .cse8 - .cse197) :trans (.cse12 .cse14 .cse13 .cse230)))) (.cse1011 (! (res .cse796 .cse797 (let ((.cse1116 (< .cse230 .cse13))) (res .cse1116 (let ((.cse1117 (< .cse13 .cse230))) (res .cse1117 (trichotomy .cse230 .cse13) (farkas 1 .cse678 1 .cse1117))) (farkas 1 .cse796 1 .cse1116)))) :proves (+ .cse197 - .cse678) :EQ)) (.cse1027 (total-int .cse1109 0)) (.cse1028 (let ((.cse1112 (< .cse1109 0))) (res .cse1112 (let ((.cse1113 (< 0 .cse1109))) (res .cse1113 (trichotomy .cse1109 0) (farkas 1 .cse1113 1 .cse1025))) (let ((.cse1114 (<= 1 .cse1115))) (res .cse1114 (total-int .cse1115 0) (farkas 1 .cse1114 1 .cse1112)))))) (.cse1031 (! (let ((.cse1108 (= 0 .cse1109))) (res .cse1108 (symm 0 .cse1109) (let ((.cse1110 (< .cse317 .cse230))) (res .cse1110 (let ((.cse1111 (< .cse230 .cse317))) (res .cse1111 (trichotomy .cse317 .cse230) (farkas 1 .cse1023 1 .cse1111))) (farkas 1 .cse1108 1 .cse1110))))) :proves (+ .cse1022 - .cse1023) :EQ)) (.cse1032 (! (res .cse103 (res .cse1018 (symm .cse230 0) (trans .cse317 .cse230 0)) .cse501) :proves (+ .cse105 - .cse1022 - .cse1020) :trans (.cse317 .cse230 0))) (.cse1029 (! (res .cse618 .cse619 (farkas 1 .cse88 1 .cse83 1 .cse618 1 .cse678 1 .cse1024 1 .cse187 1 .cse78)) :proves (- .cse88 - .cse83 + .cse87 - .cse678 - .cse1024 - .cse187 - .cse78) :LA (1 1 (- 1) 1 1 1 1))) (.cse1047 (! (let ((.cse1104 (= .cse230 .cse109))) (res .cse1104 (symm .cse230 .cse109) (let ((.cse1105 (< .cse1107 0))) (res .cse1105 (let ((.cse1106 (< 0 .cse1107))) (res .cse1106 (trichotomy .cse1107 0) (farkas 1 .cse1104 1 .cse1106))) (farkas 1 .cse1039 1 .cse1105))))) :proves (- .cse1039 + .cse1038) :EQ)) (.cse1019 (let ((.cse1099 (<= .cse230 0))) (res .cse1099 (! (let ((.cse1100 (<= 1 .cse230))) (res .cse1100 (total-int .cse230 0) (farkas 1 .cse1100 1 .cse88 1 .cse83 1 .cse678 1 .cse187 1 .cse78))) :proves (+ .cse1099 - .cse88 - .cse83 - .cse678 - .cse187 - .cse78) :LA ((- 1) 1 1 1 1 1)) (let ((.cse1101 (<= .cse1103 0))) (res .cse1101 (! (res .cse1091 (res .cse1090 (trichotomy .cse230 0) (farkas 1 .cse1090 1 .cse1099)) (let ((.cse1102 (<= 1 .cse1103))) (res .cse1102 (total-int .cse1103 0) (farkas 1 .cse1102 1 .cse1091)))) :proves (+ .cse1101 + .cse1018 - .cse1099) :trichotomy) (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse796 .cse797 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 1 .cse453 1 .cse155 1 .cse796 1 .cse451 1 .cse153 1 .cse1101)))))) :proves (- .cse88 - .cse83 - .cse678 - .cse187 - .cse78 - .cse1101) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1))))))) (.cse1035 (let ((.cse1092 (<= .cse1087 0))) (res .cse1092 (! (res .cse632 .cse633 (let ((.cse1093 (<= 1 .cse1087))) (res .cse1093 (total-int .cse1087 0) (farkas 1 .cse1093 1 .cse88 1 .cse83 1 .cse678 1 .cse632 1 .cse187 1 .cse78)))) :proves (+ .cse1092 - .cse88 - .cse83 - .cse678 - .cse623 - .cse187 - .cse78) :LA ((- 1) 1 1 1 (- 1) 1 1)) (let ((.cse1098 (+ .cse230 .cse641 1))) (let ((.cse1094 (<= .cse1098 0))) (res .cse1094 (! (let ((.cse1095 (< .cse1087 0))) (res .cse1095 (let ((.cse1096 (< 0 .cse1087))) (res .cse1096 (trichotomy .cse1087 0) (farkas 1 .cse1096 1 .cse1092))) (let ((.cse1097 (<= 1 .cse1098))) (res .cse1097 (total-int .cse1098 0) (farkas 1 .cse1097 1 .cse1095))))) :proves (+ .cse1094 + .cse1034 - .cse1092) :trichotomy) (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse796 .cse797 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 1 .cse453 1 .cse155 1 .cse796 1 .cse623 1 .cse451 1 .cse153 1 .cse1094)))))) :proves (- .cse88 - .cse83 - .cse678 - .cse623 - .cse187 - .cse78 - .cse1094) :LA ((- 1) (- 1) (- 1) 1 (- 1) (- 1) 1)))))))) (.cse1021 (! (res .cse1020 (symm 0 .cse230) (res .cse1090 (res .cse1091 (trichotomy 0 .cse230) (farkas 1 .cse1020 1 .cse1091)) (farkas 1 .cse1018 1 .cse1090))) :proves (+ .cse1020 - .cse1018) :EQ)) (.cse1037 (! (let ((.cse1086 (= 0 .cse1087))) (res .cse1086 (symm 0 .cse1087) (let ((.cse1088 (< fmt0 .cse230))) (res .cse1088 (let ((.cse1089 (< .cse230 fmt0))) (res .cse1089 (trichotomy fmt0 .cse230) (farkas 1 .cse1086 1 .cse1089))) (farkas 1 .cse1034 1 .cse1088))))) :proves (+ .cse1036 - .cse1034) :EQ)) (.cse1045 (! (res .cse659 .cse683 (res .cse1043 .cse1044 (trans arg1 0 .cse230 fmt0))) :proves (+ .cse661 - .cse660 - .cse1020 - .cse1036) :trans (arg1 0 .cse230 fmt0))) (.cse1033 (res .cse565 .cse566 (! (res .cse127 .cse128 (res .cse244 .cse245 (res .cse279 .cse280 (res .cse113 .cse114 (trans .cse12 .cse125 .cse126 .cse14 .cse13 .cse230))))) :proves (+ .cse228 - .cse565 - .cse72 - .cse182 - .cse8 - .cse197) :trans (.cse12 .cse125 .cse126 .cse14 .cse13 .cse230))))) (let-proof ((.cse1017 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse197 .cse1011 (res .cse37 .cse335 (let ((.cse1075 (+ .cse15 .cse1085))) (let ((.cse1049 (= .cse1075 0))) (let-proof ((.cse1050 (let ((.cse1078 (<= .cse1075 0))) (res .cse1078 (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse796 .cse797 (res .cse155 .cse156 (res .cse453 .cse454 (let ((.cse1079 (<= 1 .cse1075))) (res .cse1079 (total-int .cse1075 0) (farkas 1 .cse1079 1 .cse37 1 .cse453 1 .cse155 1 .cse796 1 .cse451 1 .cse415 1 .cse153)))))))) :proves (+ .cse1078 - .cse37 - .cse88 - .cse83 - .cse678 - .cse187 - .cse415 - .cse78) :LA ((- 1) 1 (- 1) (- 1) (- 1) (- 1) 1 (- 1))) (let ((.cse1084 (+ .cse15 .cse1085 1))) (let ((.cse1080 (<= .cse1084 0))) (res .cse1080 (! (let ((.cse1081 (< .cse1075 0))) (res .cse1081 (let ((.cse1082 (< 0 .cse1075))) (res .cse1082 (trichotomy .cse1075 0) (farkas 1 .cse1082 1 .cse1078))) (let ((.cse1083 (<= 1 .cse1084))) (res .cse1083 (total-int .cse1084 0) (farkas 1 .cse1083 1 .cse1081))))) :proves (+ .cse1080 + .cse1049 - .cse1078) :trichotomy) (! (res .cse417 .cse476 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse88 1 .cse83 1 .cse678 1 .cse187 1 .cse417 1 .cse78 1 .cse1080))) :proves (- .cse37 - .cse88 - .cse83 - .cse678 - .cse187 - .cse415 - .cse78 - .cse1080) :LA ((- 1) 1 1 1 1 (- 1) 1 1))))))))) (res .cse1049 .cse1050 (let ((.cse1051 (= .cse15 .cse230))) (let-proof ((.cse1052 (! (let ((.cse1074 (= 0 .cse1075))) (res .cse1074 (symm 0 .cse1075) (let ((.cse1076 (< .cse15 .cse230))) (res .cse1076 (let ((.cse1077 (< .cse230 .cse15))) (res .cse1077 (trichotomy .cse15 .cse230) (farkas 1 .cse1049 1 .cse1077))) (farkas 1 .cse1074 1 .cse1076))))) :proves (+ .cse1051 - .cse1049) :EQ))) (res .cse1051 .cse1052 (let ((.cse1060 (= .cse230 .cse15))) (let-proof ((.cse1061 (symm .cse230 .cse15))) (let-proof ((.cse1059 (! (res .cse885 .cse886 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse887 .cse888 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse768 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse197 .cse1011 (res .cse659 (res .cse1039 (! (res .cse87 (res .cse85 .cse86 (res .cse1018 .cse1019 (res .cse1020 .cse1021 (res .cse1024 (res .cse101 (res .cse102 (res .cse1023 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 (res .cse1025 (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse796 .cse797 (res .cse155 .cse156 (res .cse453 .cse454 (res .cse1026 .cse1027 (farkas 1 .cse1026 1 .cse453 1 .cse155 1 .cse796 1 .cse451 1 .cse153 1 .cse269))))))) :proves (+ .cse1025 - .cse88 - .cse83 - .cse678 - .cse187 - .cse78 - .cse269) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) (- 1) 1)) (! .cse1028 :proves (+ .cse1024 + .cse1023 - .cse1025) :trichotomy))))) (res .cse1022 .cse1031 (res .cse105 .cse1032 (res .cse107 .cse108 (! (res .cse115 .cse116 (trans .cse109 .cse110 .cse15 .cse230)) :proves (+ .cse1039 - .cse107 - .cse74 - .cse1051) :trans (.cse109 .cse110 .cse15 .cse230)))))) .cse118) (res .cse283 .cse964 (! (trans .cse109 .cse15 .cse230) :proves (+ .cse1039 - .cse283 - .cse1051) :trans (.cse109 .cse15 .cse230)))) .cse1029)))) .cse131) :proves (+ .cse1039 - .cse1051 + .cse51 - .cse88 - .cse678 + .cse49 - .cse83 - .cse187 - .cse74 - .cse78) :rup) (res .cse1038 .cse1047 (res .cse587 (! (res .cse153 .cse154 (res .cse590 .cse591 (res .cse451 .cse452 (res .cse796 .cse797 (res .cse588 .cse589 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 4 .cse453 4 .cse1038 4 .cse155 4 .cse588 4 .cse796 1 .cse33 1 .cse887 4 .cse451 1 .cse590 4 .cse153 1 .cse885)))))))) :proves (- .cse88 - .cse1038 - .cse83 + .cse587 - .cse678 - .cse33 - .cse887 - .cse187 - .cse24 - .cse78 - .cse885) :LA ((- 4) 4 (- 4) (- 4) (- 4) 1 1 (- 4) (- 1) (- 4) 1)) (res .cse984 (! (res .cse985 .cse986 (res .cse40 .cse41 (res .cse46 .cse47 (res .cse1072 .cse1073 (farkas 4 .cse88 4 .cse1072 4 .cse83 4 .cse587 4 .cse678 1 .cse46 1 .cse623 4 .cse187 1 .cse24 1 .cse40 4 .cse78 1 .cse985))))) :proves (- .cse88 - .cse1038 - .cse83 - .cse587 - .cse678 - .cse33 - .cse623 - .cse187 - .cse24 - .cse22 - .cse78 + .cse984) :LA (4 (- 4) 4 4 4 (- 1) 1 4 1 (- 1) 4 (- 1))) .cse987)))) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse678 .cse679 (res .cse83 .cse343 (res .cse187 .cse188 (res .cse88 .cse89 (res .cse1018 .cse1019 (res .cse1034 .cse1035 (res .cse1020 .cse1021 (res .cse1036 .cse1037 (res .cse680 .cse681 (res .cse660 .cse682 (res .cse661 .cse1045 (res .cse584 .cse684 (res .cse685 (res .cse228 (! (res .cse32 (res .cse623 .cse624 (res .cse85 .cse86 (res .cse2 (res .cse49 (res .cse692 .cse811 (res .cse689 (res .cse690 (res .cse687 (res .cse691 .cse820 .cse825) (res .cse686 .cse704 (res .cse105 .cse705 .cse1033))) .cse697) .cse698)) .cse117) .cse229))) .cse48) :proves (- .cse660 - .cse680 + .cse228 - .cse197 - .cse8 - .cse182 - .cse72 + .cse685 + .cse51) :rup) (res .cse688 .cse699 (res .cse934 (res .cse932 (res .cse101 (res .cse102 (res .cse691 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 (! (res .cse44 .cse45 (res .cse632 .cse633 (res .cse702 .cse703 (farkas 1 .cse702 1 .cse632 1 .cse44 1 .cse269)))) :proves (+ .cse691 - .cse623 + .cse32 - .cse269) :LA ((- 1) (- 1) (- 1) 1))))) (res .cse687 .cse825 (res .cse686 .cse704 (res .cse105 .cse705 (res .cse374 .cse375 (! (res .cse659 .cse683 (res .cse1060 .cse1061 (trans arg1 0 .cse230 .cse15 .cse110 .cse109))) :proves (+ .cse932 - .cse660 - .cse1020 - .cse1051 - .cse74 - .cse374) :trans (arg1 0 .cse230 .cse15 .cse110 .cse109))))))) .cse118) (res .cse286 .cse377 (! (res .cse659 .cse683 (res .cse1060 .cse1061 (trans arg1 0 .cse230 .cse15 .cse109))) :proves (+ .cse932 - .cse660 - .cse1020 - .cse1051 - .cse286) :trans (arg1 0 .cse230 .cse15 .cse109)))) .cse935) (! (res .cse40 .cse41 (res .cse46 .cse47 (res .cse700 .cse701 (res .cse936 .cse937 (farkas 4 .cse936 4 .cse88 4 .cse700 4 .cse83 4 .cse678 1 .cse46 4 .cse623 3 .cse584 4 .cse187 1 .cse24 1 .cse40 4 .cse78))))) :proves (- .cse934 - .cse88 - .cse688 - .cse83 - .cse678 - .cse33 - .cse623 - .cse584 - .cse187 - .cse24 - .cse22 - .cse78) :LA ((- 4) 4 (- 4) 4 4 (- 1) 4 3 4 1 (- 1) 4))))) .cse706)))))))))))))) .cse131))) .cse48))) :proves (- .cse1051 - .cse659 + .cse51 - .cse8 + .cse49 - .cse78 - .cse182 - .cse72 - .cse74 - .cse197) :rup)))))) .cse788))))))) :proves (- .cse1051 - .cse678 + .cse49 + .cse51 - .cse88 - .cse83 - .cse187 - .cse74 - .cse78) :rup))) (res .cse57 (res .cse167 .cse168 (res .cse191 .cse237 (res .cse144 .cse169 (res .cse246 (res .cse250 .cse251 (res .cse248 (res .cse55 .cse249 (let ((.cse1053 (= .cse62 .cse13))) (res .cse1053 (! (trans .cse62 .cse15 .cse230 .cse13) :proves (+ .cse1053 - .cse55 - .cse1051 - .cse197) :trans (.cse62 .cse15 .cse230 .cse13)) (let ((.cse1058 (+ .cse62 .cse993))) (let ((.cse1054 (= .cse1058 0))) (res .cse1054 (! (let ((.cse1055 (= .cse13 .cse62))) (res .cse1055 (symm .cse13 .cse62) (let ((.cse1056 (< .cse1058 0))) (res .cse1056 (let ((.cse1057 (< 0 .cse1058))) (res .cse1057 (trichotomy .cse1058 0) (farkas 1 .cse1053 1 .cse1057))) (farkas 1 .cse1055 1 .cse1056))))) :proves (- .cse1053 + .cse1054) :EQ) (res .cse53 (res .cse51 (res .cse49 .cse1059 (res .cse2 .cse117 (res .cse29 .cse30 (res .cse28 .cse31 (res .cse228 .cse229 (res .cse688 .cse699 (! (res .cse40 .cse41 (res .cse700 .cse701 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 8 .cse88 8 .cse83 4 .cse250 1 .cse46 1 .cse44 8 .cse187 4 .cse42 1 .cse24 8 .cse78 4 .cse700 4 .cse678 1 .cse40 4 .cse1054)))))) :proves (- .cse88 - .cse83 - .cse250 - .cse33 + .cse32 - .cse187 - .cse28 - .cse24 - .cse78 - .cse688 - .cse678 - .cse22 - .cse1054) :LA (8 8 4 (- 1) (- 1) 8 (- 4) 1 8 (- 4) 4 (- 1) 4)))))))) .cse54) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse8 .cse919 (res .cse197 .cse1011 (res .cse1039 (res .cse100 .cse284 (! (trans .cse109 .cse62 .cse15 .cse230) :proves (+ .cse1039 - .cse100 - .cse55 - .cse1051) :trans (.cse109 .cse62 .cse15 .cse230))) (res .cse228 .cse1013 (res .cse1038 .cse1047 (res .cse688 .cse699 .cse1048))))))) .cse48))) :proves (- .cse678 - .cse1051 - .cse53 - .cse88 - .cse55 - .cse187 - .cse78 - .cse83) :rup)))))))) .cse337)) .cse313)))) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse8 .cse919 (res .cse197 .cse1011 (res .cse1018 .cse1019 (res .cse1020 .cse1021 (res .cse37 .cse335 (res .cse1049 .cse1050 (res .cse1051 .cse1052 (res .cse294 .cse295 (let-proof ((.cse1062 (! (res .cse40 .cse41 (res .cse700 .cse701 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse294 4 .cse88 4 .cse83 1 .cse46 1 .cse44 4 .cse187 4 .cse42 4 .cse415 1 .cse24 4 .cse78 4 .cse37 4 .cse700 4 .cse338 4 .cse678 1 .cse40)))))) :proves (- .cse294 - .cse88 - .cse83 - .cse33 + .cse32 - .cse187 - .cse28 - .cse415 - .cse24 - .cse78 - .cse37 - .cse688 - .cse338 - .cse678 - .cse22) :LA (4 4 4 (- 1) (- 1) 4 (- 4) 4 1 4 4 (- 4) 4 4 (- 1))))) (res .cse2 (res .cse49 (res .cse51 .cse1059 (res .cse53 .cse54 (res .cse29 .cse59 (res .cse28 .cse31 (res .cse228 .cse1013 (res .cse688 .cse699 (res .cse505 (res .cse713 (res .cse338 (res .cse716 (res .cse55 (res .cse248 .cse249 (res .cse172 .cse336 (res .cse246 .cse337 .cse339))) (! (res .cse64 .cse65 (res .cse66 .cse67 (res .cse1060 .cse1061 (trans 0 .cse230 .cse15 .cse62 .cse63)))) :proves (+ .cse716 - .cse1020 - .cse1051 - .cse55 - .cse57) :trans (0 .cse230 .cse15 .cse62 .cse63))) .cse938) .cse1062) .cse939) (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse700 .cse701 (farkas 4 .cse88 4 .cse700 4 .cse83 4 .cse678 1 .cse46 1 .cse44 4 .cse187 4 .cse42 4 .cse505 1 .cse24 1 .cse40 4 .cse78)))))) :proves (- .cse88 - .cse688 - .cse83 - .cse678 - .cse33 + .cse32 - .cse187 - .cse28 - .cse505 - .cse24 - .cse22 - .cse78) :LA (4 (- 4) 4 4 (- 1) (- 1) 4 (- 4) 4 1 (- 1) 4))))))))) .cse117) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (let ((.cse1066 (+ .cse13 .cse845))) (let ((.cse1063 (= .cse1066 0))) (res .cse1063 (let ((.cse1064 (<= .cse1066 0))) (res .cse1064 (! (let ((.cse1065 (<= 1 .cse1066))) (res .cse1065 (total-int .cse1066 0) (farkas 1 .cse1065 1 .cse88 1 .cse187))) :proves (+ .cse1064 - .cse88 - .cse187) :LA ((- 1) 1 1)) (let ((.cse1071 (+ .cse13 .cse845 1))) (let ((.cse1067 (<= .cse1071 0))) (res .cse1067 (! (let ((.cse1068 (< .cse1066 0))) (res .cse1068 (let ((.cse1069 (< 0 .cse1066))) (res .cse1069 (trichotomy .cse1066 0) (farkas 1 .cse1069 1 .cse1064))) (let ((.cse1070 (<= 1 .cse1071))) (res .cse1070 (total-int .cse1071 0) (farkas 1 .cse1070 1 .cse1068))))) :proves (+ .cse1067 + .cse1063 - .cse1064) :trichotomy) (! (res .cse451 .cse452 (res .cse453 .cse454 (farkas 1 .cse453 1 .cse451 1 .cse1067))) :proves (- .cse88 - .cse187 - .cse1067) :LA ((- 1) (- 1) 1))))))) (res .cse197 .cse1011 (res .cse294 .cse295 (res .cse228 .cse229 (res .cse688 .cse699 (res .cse29 .cse30 (res .cse28 .cse31 (res .cse523 (res .cse521 (res .cse55 (res .cse248 .cse249 (res .cse246 .cse337 (res .cse172 .cse336 (res .cse338 .cse339 .cse1062)))) .cse522) .cse524) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse678 .cse679 (res .cse29 .cse30 (res .cse228 .cse229 (res .cse28 .cse31 (res .cse688 .cse699 (! (res .cse40 .cse41 (res .cse700 .cse701 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse83 1 .cse46 1 .cse44 4 .cse42 4 .cse415 1 .cse24 4 .cse78 4 .cse37 4 .cse700 4 .cse523 4 .cse678 4 .cse1063 1 .cse40)))))) :proves (- .cse83 - .cse33 + .cse32 - .cse28 - .cse415 - .cse24 - .cse78 - .cse37 - .cse688 - .cse523 - .cse678 - .cse1063 - .cse22) :LA (4 (- 1) (- 1) (- 4) 4 1 4 4 (- 4) 4 4 4 (- 1))))))))) .cse48))) :proves (- .cse197 - .cse415 - .cse2 - .cse523 - .cse1063 - .cse83 - .cse37 - .cse78) :rup)))))))))))) .cse48))) :proves (- .cse415 - .cse678 - .cse2 - .cse78 - .cse57 - .cse88 - .cse83 - .cse37 - .cse187) :rup)))))))))))) .cse48))) :proves (- .cse415 - .cse678 - .cse78 - .cse88 - .cse83 - .cse187 - .cse74 - .cse57) :rup))))))))))))))) .cse48))) :proves (- .cse678 - .cse415 - .cse78 - .cse88 - .cse83 - .cse187 - .cse74) :rup))) (res .cse74 (res .cse384 .cse385 (res .cse340 .cse594 (res .cse55 (res .cse248 .cse249 (res .cse172 .cse336 (res .cse410 (! (res .cse569 .cse570 (res .cse401 .cse402 (trans 37 percent .cse363 x 120))) :proves (+ .cse410 - .cse408 - .cse172 - .cse340 - .cse398) :trans (37 percent .cse363 x 120)) .cse413))) (! (res .cse8 .cse919 (res .cse197 .cse1011 (let-proof ((.cse1014 (! (res .cse885 .cse886 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse887 .cse888 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse1018 .cse1019 (res .cse1034 .cse1035 (res .cse1020 .cse1021 (res .cse1036 .cse1037 (res .cse74 (res .cse384 .cse385 (res .cse340 .cse594 (res .cse386 .cse387 (res .cse790 .cse791 (res .cse76 .cse77 (res .cse1038 (res .cse1039 (res .cse95 (! (res .cse40 .cse41 (res .cse700 .cse701 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse96 .cse97 (farkas 4 .cse88 4 .cse790 4 .cse83 4 .cse96 1 .cse46 1 .cse44 4 .cse187 4 .cse415 1 .cse24 4 .cse78 4 .cse700 4 .cse76 4 .cse678 1 .cse40)))))) :proves (- .cse88 - .cse790 - .cse83 + .cse95 - .cse33 + .cse32 - .cse187 - .cse415 - .cse24 - .cse78 - .cse688 - .cse76 - .cse678 - .cse22) :LA (4 4 4 (- 4) (- 1) (- 1) 4 4 1 4 (- 4) 4 4 (- 1))) (res .cse98 (res .cse100 (res .cse660 (res .cse661 (res .cse584 (let ((.cse1042 (+ .cse109 (- 3)))) (let ((.cse1040 (<= .cse1042 0))) (res .cse1040 (! (let ((.cse1041 (<= 1 .cse1042))) (res .cse1041 (total-int .cse1042 0) (res .cse153 .cse154 (res .cse590 .cse591 (res .cse451 .cse452 (res .cse796 .cse797 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 4 .cse453 4 .cse688 4 .cse155 4 .cse796 1 .cse33 1 .cse887 4 .cse451 1 .cse590 4 .cse153 4 .cse1041 1 .cse885))))))))) :proves (- .cse88 - .cse688 - .cse83 - .cse678 - .cse33 - .cse887 - .cse187 - .cse24 - .cse78 + .cse1040 - .cse885) :LA ((- 4) 4 (- 4) (- 4) 1 1 (- 4) (- 1) (- 4) (- 4) 1)) (res .cse812 (! (res .cse813 .cse814 (res .cse40 .cse41 (res .cse46 .cse47 (res .cse700 .cse701 (farkas 4 .cse88 4 .cse700 4 .cse83 4 .cse678 1 .cse46 4 .cse187 1 .cse24 1 .cse40 4 .cse78 4 .cse1040 1 .cse813))))) :proves (- .cse88 - .cse688 - .cse83 - .cse678 - .cse33 - .cse187 - .cse24 - .cse22 - .cse78 - .cse1040 + .cse812) :LA (4 (- 4) 4 4 (- 1) 4 1 (- 1) 4 4 (- 1))) .cse815)))) .cse672) (! (res .cse1043 .cse1044 (res .cse673 .cse674 (trans 0 .cse230 fmt0 arg1))) :proves (+ .cse660 - .cse1020 - .cse1036 - .cse661) :trans (0 .cse230 fmt0 arg1))) (! (res .cse32 (res .cse623 .cse624 (res .cse87 (res .cse824 (res .cse661 .cse1045 (res .cse659 .cse677 (res .cse584 .cse684 (res .cse680 .cse681 (res .cse685 (res .cse826 .cse827 (res .cse828 .cse829 (res .cse686 (res .cse687 (res .cse690 (res .cse691 .cse820 .cse696) (res .cse689 .cse697 (res .cse821 .cse822 (res .cse283 .cse991 .cse1046)))) .cse704) (res .cse105 .cse705 (res .cse107 .cse108 (! (res .cse830 .cse831 (res .cse659 .cse683 (trans .cse109 .cse110 arg1 0 .cse230))) :proves (+ .cse1039 - .cse107 - .cse828 - .cse660 - .cse1020) :trans (.cse109 .cse110 arg1 0 .cse230))))))) .cse706))))) .cse833) .cse131)) .cse48) :proves (- .cse1020 - .cse660 + .cse100 + .cse1039 - .cse692 - .cse415 - .cse1036 - .cse55) :rup)) .cse120) .cse122)) .cse1047) .cse1048)))))) .cse1017))))))) .cse48))))) :proves (- .cse415 - .cse692 - .cse688 - .cse55 - .cse678 - .cse83 - .cse88 - .cse187 - .cse78) :rup))) (let-proof ((.cse1012 (! (res .cse32 (res .cse623 .cse624 (res .cse85 .cse86 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse197 .cse1011 (res .cse1018 .cse1019 (res .cse1020 .cse1021 (res .cse692 .cse811 (res .cse688 (res .cse228 (res .cse1022 (res .cse1023 (res .cse102 (! (res .cse87 (res .cse85 .cse86 (res .cse1024 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse1025 (res .cse269 .cse425 (! (res .cse1026 .cse1027 (res .cse153 .cse154 (res .cse451 .cse452 (res .cse796 .cse797 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 1 .cse453 1 .cse155 1 .cse796 1 .cse451 1 .cse153 1 .cse269 1 .cse1026))))))) :proves (- .cse88 - .cse83 - .cse678 - .cse187 - .cse78 - .cse269 + .cse1025) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1 (- 1)))) (! .cse1028 :proves (- .cse1025 + .cse1023 + .cse1024) :trichotomy)))) .cse1029)) .cse131) :proves (+ .cse1023 - .cse678 + .cse102 - .cse88 + .cse51 + .cse49 - .cse78 - .cse187 - .cse83) :rup) (res .cse101 .cse118 (res .cse221 .cse872 .cse1030))) .cse1031) (res .cse105 .cse1032 .cse1033)) .cse699) .cse1014)))))))))) .cse48) :proves (- .cse678 - .cse415 + .cse51 + .cse49 - .cse78 - .cse187 - .cse83 - .cse88 - .cse55) :rup))) (res .cse688 (res .cse228 (res .cse2 (res .cse49 (res .cse51 .cse1012 (res .cse53 .cse54 .cse1013)) .cse117) .cse229) .cse699) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse85 .cse86 (res .cse74 (res .cse384 .cse385 (res .cse340 .cse594 (res .cse386 .cse387 (res .cse790 .cse791 (res .cse167 (res .cse57 .cse168 (res .cse294 .cse295 (res .cse76 .cse77 (res .cse28 (res .cse29 (res .cse692 (res .cse2 (res .cse49 (res .cse53 (res .cse51 .cse811 .cse54) .cse59) .cse117) .cse30) .cse1014) .cse31) (! (res .cse40 .cse41 (res .cse700 .cse701 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse294 4 .cse88 4 .cse790 4 .cse83 1 .cse46 1 .cse44 4 .cse42 4 .cse187 4 .cse415 1 .cse24 4 .cse78 4 .cse700 4 .cse76 4 .cse678 1 .cse40)))))) :proves (- .cse294 - .cse88 - .cse790 - .cse83 - .cse33 + .cse32 - .cse28 - .cse187 - .cse415 - .cse24 - .cse78 - .cse688 - .cse76 - .cse678 - .cse22) :LA (4 4 4 4 (- 1) (- 1) (- 4) 4 4 1 4 (- 4) 4 4 (- 1))))))) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse8 .cse919 (res .cse197 .cse1011 (res .cse74 (res .cse384 .cse385 (res .cse340 .cse594 (res .cse386 .cse387 (res .cse790 .cse791 (res .cse144 .cse169 (res .cse191 .cse237 (res .cse250 .cse251 (res .cse246 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse2 (res .cse49 (res .cse51 .cse1012 (res .cse53 .cse54 (res .cse100 .cse284 (res .cse228 .cse1013 (res .cse98 .cse120 (res .cse688 .cse699 (! (res .cse40 .cse41 (res .cse1015 .cse1016 (res .cse700 .cse701 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse88 4 .cse790 4 .cse83 1 .cse46 1 .cse44 4 .cse187 4 .cse415 1 .cse24 4 .cse78 4 .cse700 4 .cse76 4 .cse678 4 .cse1015 1 .cse40)))))) :proves (- .cse88 - .cse790 - .cse83 - .cse33 + .cse32 - .cse187 - .cse415 - .cse24 - .cse78 - .cse688 - .cse76 - .cse678 - .cse98 - .cse22) :LA (4 4 4 (- 1) (- 1) 4 4 1 4 (- 4) 4 4 (- 4) (- 1))))))))) .cse117) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse197 .cse1011 (res .cse74 (res .cse384 .cse385 (res .cse340 .cse594 (res .cse386 .cse387 (res .cse790 .cse791 (res .cse228 .cse229 (res .cse688 .cse699 (res .cse28 (res .cse29 .cse30 .cse31) (! (res .cse40 .cse41 (res .cse700 .cse701 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse88 4 .cse790 4 .cse83 4 .cse250 1 .cse46 1 .cse44 4 .cse42 4 .cse187 4 .cse415 1 .cse24 4 .cse78 4 .cse700 4 .cse76 4 .cse678 1 .cse40)))))) :proves (- .cse88 - .cse790 - .cse83 - .cse250 - .cse33 + .cse32 - .cse28 - .cse187 - .cse415 - .cse24 - .cse78 - .cse688 - .cse76 - .cse678 - .cse22) :LA (4 4 4 4 (- 1) (- 1) (- 4) 4 4 1 4 (- 4) 4 4 (- 1)))))))))) .cse1017))) .cse48))) :proves (- .cse415 - .cse2 - .cse678 - .cse250 - .cse78 - .cse83 - .cse187 - .cse88 - .cse76) :rup)))) .cse337) .cse313)))))))) .cse1017)))) .cse48))) :proves (- .cse78 - .cse415 - .cse678 - .cse167 - .cse88 - .cse83 - .cse187) :rup)))))) .cse1017)))) .cse48))) :proves (- .cse688 - .cse415 - .cse678 - .cse78 - .cse83 - .cse88 - .cse55 - .cse187) :rup)))))) :proves (- .cse415 - .cse678 - .cse78 - .cse55 - .cse88 - .cse83 - .cse187) :rup)))) .cse1017))))))))) :proves (- .cse678 - .cse415 - .cse78 - .cse88 - .cse83 - .cse187) :rup))) (res .cse678 (res .cse197 (res .cse195 .cse198 (res .cse192 .cse236 (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (let ((.cse1006 (+ fmt1 .cse993 .cse641 (- 1)))) (let ((.cse924 (<= .cse1006 0))) (let-proof ((.cse942 (! (res .cse618 .cse619 (farkas 1 .cse88 1 .cse83 1 .cse618 1 .cse187 1 .cse924 1 .cse78)) :proves (- .cse88 - .cse83 + .cse87 - .cse187 - .cse924 - .cse78) :LA (1 1 (- 1) 1 1 1)))) (res .cse924 (let ((.cse953 (<= .cse1008 0))) (let-proof ((.cse933 (! (res .cse103 (res .cse308 (symm .cse13 0) (trans .cse317 .cse13 0)) .cse501) :proves (+ .cse105 - .cse529 - .cse243) :trans (.cse317 .cse13 0)))) (let ((.cse954 (<= 1 .cse1008))) (let-proof ((.cse958 (res .cse221 .cse872 (! (res .cse244 .cse245 (res .cse113 .cse114 (trans .cse12 .cse126 .cse14 .cse13))) :proves (+ .cse10 - .cse221 - .cse182 - .cse8) :trans (.cse12 .cse126 .cse14 .cse13)))) (.cse928 (res .cse105 .cse933 (res .cse565 .cse566 (! (res .cse127 .cse128 (res .cse244 .cse245 (res .cse113 .cse114 (trans .cse12 .cse125 .cse126 .cse14 .cse13)))) :proves (+ .cse10 - .cse565 - .cse72 - .cse182 - .cse8) :trans (.cse12 .cse125 .cse126 .cse14 .cse13))))) (.cse944 (res .cse2 .cse117 .cse11)) (.cse955 (total-int .cse1008 0)) (.cse926 (! (let ((.cse1007 (= 0 .cse1008))) (res .cse1007 (symm 0 .cse1008) (let ((.cse1009 (< .cse317 .cse13))) (res .cse1009 (let ((.cse1010 (< .cse13 .cse317))) (res .cse1010 (trichotomy .cse317 .cse13) (farkas 1 .cse528 1 .cse1010))) (farkas 1 .cse1007 1 .cse1009))))) :proves (+ .cse529 - .cse528) :EQ)) (.cse929 (! (res .cse532 .cse533 (res .cse659 .cse683 (trans arg1 0 .cse13 .cse317))) :proves (+ .cse686 - .cse660 - .cse243 - .cse529) :trans (arg1 0 .cse13 .cse317))) (.cse956 (res .cse534 (res .cse535 .cse536 (farkas 1 .cse535 1 .cse953)) (let ((.cse1005 (<= 1 .cse1006))) (res .cse1005 (total-int .cse1006 0) (farkas 1 .cse1005 1 .cse534)))))) (let-proof ((.cse941 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse768 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse246 .cse337 (res .cse172 .cse336 (res .cse144 (res .cse340 (res .cse338 .cse339 (res .cse167 (res .cse384 (res .cse57 .cse168 (res .cse294 .cse295 (res .cse74 .cse385 (res .cse37 .cse335 (let ((.cse995 (+ .cse15 .cse993))) (let ((.cse959 (= .cse995 0))) (let-proof ((.cse960 (let ((.cse998 (<= .cse995 0))) (res .cse998 (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse155 .cse156 (res .cse453 .cse454 (let ((.cse999 (<= 1 .cse995))) (res .cse999 (total-int .cse995 0) (farkas 1 .cse999 1 .cse37 1 .cse453 1 .cse155 1 .cse451 1 .cse415 1 .cse153))))))) :proves (+ .cse998 - .cse37 - .cse88 - .cse83 - .cse187 - .cse415 - .cse78) :LA ((- 1) 1 (- 1) (- 1) (- 1) 1 (- 1))) (let ((.cse1004 (+ .cse15 .cse993 1))) (let ((.cse1000 (<= .cse1004 0))) (res .cse1000 (! (let ((.cse1001 (< .cse995 0))) (res .cse1001 (let ((.cse1002 (< 0 .cse995))) (res .cse1002 (trichotomy .cse995 0) (farkas 1 .cse1002 1 .cse998))) (let ((.cse1003 (<= 1 .cse1004))) (res .cse1003 (total-int .cse1004 0) (farkas 1 .cse1003 1 .cse1001))))) :proves (+ .cse1000 + .cse959 - .cse998) :trichotomy) (! (res .cse417 .cse476 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse88 1 .cse83 1 .cse187 1 .cse417 1 .cse78 1 .cse1000))) :proves (- .cse37 - .cse88 - .cse83 - .cse187 - .cse415 - .cse78 - .cse1000) :LA ((- 1) 1 1 1 (- 1) 1 1))))))))) (res .cse959 .cse960 (let ((.cse961 (= .cse15 .cse13))) (let-proof ((.cse962 (! (let ((.cse994 (= 0 .cse995))) (res .cse994 (symm 0 .cse995) (let ((.cse996 (< .cse15 .cse13))) (res .cse996 (let ((.cse997 (< .cse13 .cse15))) (res .cse997 (trichotomy .cse15 .cse13) (farkas 1 .cse959 1 .cse997))) (farkas 1 .cse994 1 .cse996))))) :proves (+ .cse961 - .cse959) :EQ))) (res .cse961 .cse962 (let-proof ((.cse992 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse233 .cse234 (farkas 4 .cse233 4 .cse294 4 .cse88 4 .cse83 1 .cse46 1 .cse44 4 .cse187 4 .cse42 4 .cse415 1 .cse24 4 .cse78 4 .cse37 4 .cse338 1 .cse40)))))) :proves (- .cse231 - .cse294 - .cse88 - .cse83 - .cse33 + .cse32 - .cse187 - .cse28 - .cse415 - .cse24 - .cse78 - .cse37 - .cse338 - .cse22) :LA ((- 4) 4 4 4 (- 1) (- 1) 4 (- 4) 4 1 4 4 4 (- 1))))) (res .cse53 (res .cse51 (let-proof ((.cse963 (! .cse956 :proves (- .cse953 + .cse528 + .cse924) :trichotomy))) (res .cse29 (res .cse2 (res .cse49 (let-proof ((.cse965 (res .cse94 .cse121 (res .cse231 .cse232 (! (res .cse123 .cse124 (res .cse40 .cse41 (res .cse46 .cse47 (res .cse785 .cse786 (res .cse233 .cse234 (farkas 4 .cse233 8 .cse88 1 .cse785 8 .cse83 1 .cse46 1 .cse623 8 .cse187 1 .cse24 1 .cse40 8 .cse78 4 .cse123)))))) :proves (- .cse231 - .cse88 + .cse768 - .cse83 - .cse33 - .cse623 - .cse187 - .cse24 - .cse22 - .cse78 - .cse94) :LA ((- 4) 8 (- 1) 8 (- 1) 1 8 1 (- 1) 8 (- 4))))))) (res .cse529 (res .cse528 (res .cse102 (! (res .cse87 (res .cse85 .cse86 (res .cse924 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse953 (res .cse269 .cse425 (! (res .cse954 .cse955 (res .cse153 .cse154 (res .cse451 .cse452 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 1 .cse453 1 .cse155 1 .cse451 1 .cse153 1 .cse269 1 .cse954)))))) :proves (- .cse88 - .cse83 - .cse187 - .cse78 - .cse269 + .cse953) :LA ((- 1) (- 1) (- 1) (- 1) 1 (- 1)))) .cse963))) .cse942)) .cse131) :proves (- .cse187 + .cse528 + .cse102 - .cse88 + .cse51 + .cse49 - .cse78 - .cse83) :rup) (res .cse101 .cse118 (res .cse99 (res .cse283 .cse964 (! (trans .cse109 .cse15 .cse13) :proves (+ .cse99 - .cse283 - .cse961) :trans (.cse109 .cse15 .cse13))) (res .cse10 .cse958 .cse965)))) .cse926) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse768 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (res .cse99 (res .cse105 .cse933 (res .cse107 .cse108 (! (res .cse115 .cse116 (trans .cse109 .cse110 .cse15 .cse13)) :proves (+ .cse99 - .cse107 - .cse74 - .cse961) :trans (.cse109 .cse110 .cse15 .cse13)))) (res .cse10 .cse928 .cse965)))) .cse311))))) .cse788))))) :proves (- .cse529 - .cse187 - .cse88 - .cse961 - .cse74 - .cse83 - .cse78) :rup))) .cse117) .cse30) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse678 (res .cse197 (res .cse195 .cse198 (res .cse966 (! (and- 1 .cse195) :proves (- .cse195 + .cse966) :input) (res .cse192 .cse236 (let ((.cse977 (+ .cse230 .cse993 (- 1)))) (let ((.cse978 (= 0 .cse977)) (.cse967 (= .cse977 0))) (let-proof ((.cse979 (symm 0 .cse977))) (res .cse967 (! (res .cse968 (res .cse195 (and+ .cse195) (res .cse969 (res .cse970 .cse971 (and- 0 .cse970)) (=>- .cse969))) (let ((.cse972 (= .cse968 .cse967))) (res .cse972 (res .cse967 (res .cse968 (=+1 .cse972) (let ((.cse973 (= .cse974 .cse230))) (res .cse973 (symm .cse974 .cse230) (let ((.cse975 (< .cse977 0))) (res .cse975 (let ((.cse976 (< 0 .cse977))) (res .cse976 (trichotomy .cse977 0) (farkas 1 .cse968 1 .cse976))) (farkas 1 .cse973 1 .cse975)))))) (res .cse968 (res .cse978 .cse979 (let ((.cse980 (< .cse230 .cse974))) (res .cse980 (let ((.cse981 (< .cse974 .cse230))) (res .cse981 (trichotomy .cse230 .cse974) (farkas 1 .cse967 1 .cse981))) (farkas 1 .cse978 1 .cse980)))) (=+2 .cse972))) (=-2 .cse972)))) :proves (- .cse192 - .cse966 + .cse967) :input) (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (res .cse924 (res .cse37 .cse335 (res .cse792 (res .cse793 (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse155 .cse156 (res .cse453 .cse454 (res .cse978 .cse979 (res .cse798 .cse799 (farkas 1 .cse798 1 .cse37 1 .cse978 1 .cse294 1 .cse453 1 .cse155 1 .cse338 1 .cse451 1 .cse415 1 .cse153))))))) :proves (+ .cse793 - .cse37 - .cse967 - .cse294 - .cse88 - .cse83 - .cse338 - .cse187 - .cse415 - .cse78) :LA ((- 1) 1 (- 1) 1 (- 1) (- 1) 1 (- 1) 1 (- 1))) (res .cse800 .cse801 (! (res .cse417 .cse476 (res .cse349 .cse350 (res .cse351 .cse352 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse967 1 .cse351 1 .cse88 1 .cse83 1 .cse349 1 .cse187 1 .cse417 1 .cse78 1 .cse800))))) :proves (- .cse37 - .cse967 - .cse294 - .cse88 - .cse83 - .cse338 - .cse187 - .cse415 - .cse78 - .cse800) :LA ((- 1) 1 (- 1) 1 1 (- 1) 1 (- 1) 1 1)))) (res .cse959 .cse960 (res .cse804 .cse805 (res .cse961 .cse962 (res .cse28 .cse31 (res .cse231 (res .cse10 (res .cse659 (! (res .cse885 .cse886 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse887 .cse888 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse768 (res .cse586 (! (res .cse590 .cse591 (res .cse417 .cse476 (res .cse982 .cse983 (res .cse349 .cse350 (res .cse351 .cse352 (res .cse139 .cse140 (farkas 4 .cse139 4 .cse351 4 .cse349 1 .cse33 4 .cse982 1 .cse887 4 .cse28 4 .cse417 1 .cse590 1 .cse885))))))) :proves (- .cse37 - .cse294 - .cse338 - .cse33 + .cse586 - .cse887 - .cse28 - .cse415 - .cse24 - .cse885) :LA ((- 4) (- 4) (- 4) 1 (- 4) 1 4 (- 4) (- 1) 1)) (res .cse984 (! (res .cse985 .cse986 (res .cse40 .cse41 (res .cse42 .cse43 (res .cse46 .cse47 (farkas 4 .cse37 4 .cse294 4 .cse338 1 .cse46 4 .cse586 1 .cse623 4 .cse42 4 .cse415 1 .cse24 1 .cse40 1 .cse985))))) :proves (- .cse37 - .cse294 - .cse338 - .cse33 - .cse586 - .cse623 - .cse28 - .cse415 - .cse24 - .cse22 + .cse984) :LA (4 4 4 (- 1) 4 1 (- 4) 4 1 (- 1) (- 1))) .cse987)) .cse788))))))) :proves (- .cse415 + .cse659 - .cse28 - .cse338 - .cse294 - .cse37) :rup) (res .cse680 .cse681 (res .cse660 .cse682 (res .cse689 (res .cse101 (res .cse102 (res .cse686 (res .cse529 (res .cse528 (res .cse269 (res .cse49 .cse270 .cse944) (res .cse953 (! (res .cse954 .cse955 (res .cse153 .cse154 (res .cse451 .cse452 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 1 .cse453 1 .cse155 1 .cse269 1 .cse451 1 .cse153 1 .cse954)))))) :proves (- .cse88 - .cse83 - .cse269 - .cse187 - .cse78 + .cse953) :LA ((- 1) (- 1) 1 (- 1) (- 1) (- 1))) .cse963)) .cse926) .cse929) (res .cse105 .cse705 (res .cse107 .cse108 (! (res .cse273 .cse274 (res .cse115 .cse116 (trans .cse230 .cse63 .cse109 .cse110 .cse15 .cse13))) :proves (+ .cse197 - .cse804 - .cse29 - .cse107 - .cse74 - .cse961) :trans (.cse230 .cse63 .cse109 .cse110 .cse15 .cse13))))) .cse118) (! (res .cse989 .cse990 (trans .cse988 1 .cse317)) :proves (+ .cse689 - .cse680 - .cse101) :trans (.cse988 1 .cse317))) (res .cse821 .cse822 (res .cse283 .cse991 (! (res .cse273 .cse274 (trans .cse230 .cse63 .cse109 .cse15 .cse13)) :proves (+ .cse197 - .cse804 - .cse29 - .cse283 - .cse961) :trans (.cse230 .cse63 .cse109 .cse15 .cse13)))))))) .cse232) .cse992))))))) .cse942))) .cse311))))))))) .cse679) .cse943)) .cse131)) .cse48))) :proves (- .cse29 - .cse415 + .cse51 - .cse78 - .cse338 - .cse187 - .cse294 - .cse88 - .cse74 - .cse83) :rup))) .cse54) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse8 .cse919 (res .cse294 .cse295 (res .cse29 .cse59 (res .cse28 .cse31 (res .cse10 .cse60 (res .cse231 .cse232 .cse992))))))) .cse48))) :proves (- .cse53 - .cse415 - .cse78 - .cse57 - .cse338 - .cse37 - .cse83 - .cse88 - .cse187) :rup)))))))))))))) .cse594) .cse169)) (! (res .cse620 .cse621 (trans .cse364 x .cse363 percent)) :proves (+ .cse144 - .cse246 - .cse340 - .cse172) :trans (.cse364 x .cse363 percent))) .cse313))))) .cse788))))) :proves (- .cse78 - .cse415 - .cse88 - .cse248 - .cse83 - .cse187) :rup))) (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse191 (res .cse167 (res .cse57 .cse168 (res .cse521 .cse522 (res .cse294 .cse295 (res .cse523 .cse524 (let-proof ((.cse940 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse294 .cse295 (res .cse37 .cse335 (res .cse29 .cse525 (res .cse28 .cse31 (res .cse659 .cse718 (res .cse854 .cse855 (res .cse680 .cse681 (res .cse660 .cse682 (res .cse818 (! (res .cse659 .cse683 (trans arg1 0 .cse13 .cse14 .cse126)) :proves (+ .cse818 - .cse660 - .cse243 - .cse8 - .cse182) :trans (arg1 0 .cse13 .cse14 .cse126)) (res .cse505 .cse711 (res .cse712 (res .cse713 .cse714 (res .cse586 (res .cse852 .cse853 (res .cse68 (res .cse834 .cse835 (res .cse716 .cse717 (res .cse61 (res .cse846 .cse847 (res .cse661 .cse856 (res .cse584 .cse684 (res .cse587 (! (res .cse590 .cse591 (res .cse417 .cse476 (res .cse588 .cse589 (res .cse263 .cse264 (res .cse351 .cse352 (res .cse139 .cse140 (farkas 4 .cse139 4 .cse351 4 .cse263 4 .cse588 1 .cse33 1 .cse584 4 .cse28 4 .cse417 1 .cse590 1 .cse22))))))) :proves (- .cse37 - .cse294 - .cse76 + .cse587 - .cse33 - .cse584 - .cse28 - .cse415 - .cse24 - .cse22) :LA ((- 4) (- 4) (- 4) (- 4) 1 1 4 (- 4) (- 1) 1)) (res .cse429 .cse921 (res .cse685 (res .cse431 .cse432 (res .cse356 (res .cse686 (res .cse687 (res .cse101 (res .cse689 (res .cse690 (res .cse2 .cse857 .cse539) .cse697) .cse858) .cse859) .cse704) .cse860) .cse861)) .cse706)))))) .cse69))) .cse862)) .cse922)) .cse727)))))))))))) .cse131))) .cse48))) :proves (- .cse415 - .cse523 - .cse243 - .cse8 - .cse72 - .cse182 - .cse74 + .cse422 - .cse76 - .cse57) :rup))) (res .cse74 (res .cse384 .cse385 (res .cse386 .cse387 (res .cse340 .cse594 (res .cse790 .cse791 (let-proof ((.cse945 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse233 .cse234 (farkas 4 .cse233 4 .cse294 4 .cse88 4 .cse790 4 .cse83 1 .cse46 1 .cse44 4 .cse187 4 .cse42 4 .cse415 1 .cse24 4 .cse78 4 .cse76 1 .cse40)))))) :proves (- .cse231 - .cse294 - .cse88 - .cse790 - .cse83 - .cse33 + .cse32 - .cse187 - .cse28 - .cse415 - .cse24 - .cse78 - .cse76 - .cse22) :LA ((- 4) 4 4 4 4 (- 1) (- 1) 4 (- 4) 4 1 4 4 (- 1))))) (res .cse101 (res .cse102 (let-proof ((.cse925 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 (res .cse953 (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse155 .cse156 (res .cse453 .cse454 (res .cse954 .cse955 (farkas 1 .cse954 1 .cse453 1 .cse155 1 .cse451 1 .cse153 1 .cse269)))))) :proves (+ .cse953 - .cse88 - .cse83 - .cse187 - .cse78 - .cse269) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) (! .cse956 :proves (+ .cse924 + .cse528 - .cse953) :trichotomy)))))) (.cse927 (! (res .cse532 .cse533 (trans 0 .cse13 .cse317)) :proves (+ .cse105 - .cse243 - .cse529) :trans (0 .cse13 .cse317)))) (res .cse660 (res .cse659 (res .cse28 (res .cse29 (res .cse53 (res .cse51 (res .cse2 (res .cse49 (res .cse528 .cse925 (res .cse529 .cse926 (res .cse374 (res .cse105 .cse927 .cse375) (res .cse10 .cse928 (res .cse389 .cse390 (res .cse231 .cse232 (! (res .cse391 .cse392 (res .cse40 .cse41 (res .cse46 .cse47 (res .cse785 .cse786 (res .cse233 .cse234 (farkas 4 .cse233 4 .cse88 1 .cse785 4 .cse83 1 .cse46 1 .cse623 4 .cse187 4 .cse415 1 .cse24 1 .cse40 4 .cse391 4 .cse78)))))) :proves (- .cse231 - .cse88 + .cse768 - .cse83 - .cse33 - .cse623 - .cse187 - .cse415 - .cse24 - .cse22 - .cse389 - .cse78) :LA ((- 4) 4 (- 1) 4 (- 1) 1 4 4 1 (- 1) (- 4) 4)))))))) .cse117) .cse30) .cse54) .cse59) .cse31) .cse807) .cse682) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse824 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse678 (res .cse197 (res .cse195 .cse198 (res .cse192 .cse236 (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (res .cse924 (res .cse191 (res .cse167 (res .cse57 .cse168 (let-proof ((.cse930 (! (res .cse948 .cse949 (res .cse950 (res .cse951 .cse952 (farkas 1 .cse948 1 .cse951)) (farkas 1 .cse686 1 .cse950))) :proves (- .cse686 + .cse687) :EQ)) (.cse931 (! (res .cse32 (res .cse623 .cse624 (res .cse85 .cse86 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 (res .cse812 (! (res .cse813 .cse814 (res .cse946 .cse947 (res .cse632 .cse633 (farkas 1 .cse632 1 .cse946 1 .cse813 1 .cse269)))) :proves (- .cse623 - .cse687 + .cse812 - .cse269) :LA ((- 1) (- 1) (- 1) 1)) .cse815)))))) .cse48) :proves (- .cse687 + .cse584 + .cse102 + .cse51 + .cse49) :rup))) (res .cse28 (res .cse29 (res .cse2 (res .cse49 (res .cse53 (res .cse51 (res .cse528 .cse925 (res .cse529 .cse926 (res .cse686 .cse929 (res .cse687 .cse930 (res .cse584 .cse931 (res .cse826 .cse827 (res .cse828 .cse829 (res .cse932 (res .cse105 .cse933 (res .cse374 .cse375 (! (trans arg1 .cse110 .cse109) :proves (+ .cse932 - .cse828 - .cse374) :trans (arg1 .cse110 .cse109)))) (res .cse10 .cse928 (res .cse934 .cse935 (res .cse231 .cse232 (! (res .cse40 .cse41 (res .cse46 .cse47 (res .cse233 .cse234 (res .cse936 .cse937 (farkas 4 .cse936 4 .cse233 4 .cse88 4 .cse83 1 .cse46 4 .cse623 3 .cse584 4 .cse187 1 .cse24 1 .cse40 4 .cse78))))) :proves (- .cse934 - .cse231 - .cse88 - .cse83 - .cse33 - .cse623 - .cse584 - .cse187 - .cse24 - .cse22 - .cse78) :LA ((- 4) (- 4) 4 4 (- 1) 4 3 4 1 (- 1) 4))))))))))))) .cse54) .cse59) .cse117) .cse30) .cse31) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse421 (res .cse422 (res .cse678 (res .cse197 (res .cse195 .cse198 (res .cse192 .cse236 (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse191 (res .cse167 (res .cse57 .cse168 (res .cse521 .cse522 (res .cse294 .cse295 (res .cse523 .cse524 (res .cse74 (res .cse384 .cse385 (res .cse386 .cse387 (res .cse340 .cse594 (res .cse790 .cse791 (res .cse29 .cse806 (res .cse231 (res .cse10 (res .cse53 (res .cse51 (res .cse49 (! (res .cse32 (res .cse623 .cse624 (res .cse87 (res .cse85 .cse86 (res .cse824 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse421 (res .cse422 (res .cse678 (res .cse197 (res .cse195 .cse198 (res .cse192 .cse236 (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (res .cse924 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse191 (res .cse167 (res .cse57 .cse168 (res .cse521 .cse522 (res .cse294 .cse295 (res .cse523 .cse524 (res .cse74 (res .cse384 .cse385 (res .cse386 .cse387 (res .cse340 .cse594 (res .cse790 .cse791 (res .cse505 (res .cse713 (res .cse716 (res .cse528 .cse925 (res .cse529 .cse926 (res .cse686 .cse929 (res .cse687 .cse930 (res .cse584 .cse931 (res .cse826 .cse827 (res .cse828 .cse829 (res .cse105 .cse927 (res .cse374 .cse375 (! (trans 0 arg1 .cse110 .cse109 .cse63) :proves (+ .cse716 - .cse660 - .cse828 - .cse374 - .cse29) :trans (0 arg1 .cse110 .cse109 .cse63))))))))))) .cse938) .cse939) (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse802 .cse803 (res .cse351 .cse352 (farkas 1 .cse351 1 .cse802 1 .cse263 1 .cse505 1 .cse417))))) :proves (- .cse294 - .cse790 - .cse76 - .cse505 - .cse415) :LA ((- 1) (- 1) (- 1) 1 (- 1)))))))) .cse940))))) .cse237) .cse707))) .cse941) .cse942))) .cse311)))) .cse679) .cse943) .cse477) .cse863)))) .cse833)) .cse131)) .cse48) :proves (+ .cse49 - .cse660 - .cse29 + .cse51 + .cse102 - .cse88 - .cse187 - .cse83 - .cse415 - .cse78) :rup) .cse944) .cse54) .cse60) .cse232) .cse945)))))) .cse940))))) .cse237) .cse707))) .cse941))) .cse311)))) .cse679) .cse943) .cse477) .cse863))))) .cse48))) :proves (- .cse415 - .cse660 - .cse28 + .cse102 - .cse78 - .cse88 - .cse187 - .cse83) :rup)))) .cse237) .cse707) .cse942))) .cse311)))) .cse679) .cse943)))) .cse833)) .cse131))) .cse48))) :proves (- .cse415 - .cse660 + .cse102 - .cse78 - .cse88 - .cse187 - .cse83) :rup))) .cse118) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse182 .cse627 (res .cse421 (res .cse422 (res .cse678 (res .cse197 (res .cse195 .cse198 (res .cse192 .cse236 (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse191 (res .cse167 (res .cse57 .cse168 (res .cse521 .cse522 (res .cse294 .cse295 (res .cse523 .cse524 (res .cse74 (res .cse384 .cse385 (res .cse386 .cse387 (res .cse340 .cse594 (res .cse790 .cse791 (res .cse100 .cse119 (res .cse29 .cse957 (res .cse28 .cse31 (res .cse10 .cse958 (res .cse231 .cse232 .cse945))))))))) .cse940))))) .cse237) .cse707))) .cse941))) .cse311)))) .cse679) .cse943) .cse477) .cse863))))) .cse48))) :proves (- .cse101 - .cse415 - .cse78 - .cse88 - .cse83 - .cse187) :rup))))))) .cse940)))))) .cse237) .cse707))) .cse941)))))) .cse942)))))) .cse311)))) .cse679) .cse943)))))) .cse477) .cse863)))) .cse788)) .cse131))))) :proves (- .cse415 - .cse78 - .cse88 - .cse83 - .cse187) :rup))) (res .cse187 (res .cse182 (res .cse178 .cse183 (res .cse170 .cse181 (res .cse246 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse57 (res .cse167 .cse168 (res .cse144 .cse169 (res .cse479 (! (res .cse480 .cse481 (res .cse365 .cse366 (trans 37 percent .cse364 s 115))) :proves (+ .cse479 - .cse408 - .cse144 - .cse170 - .cse396) :trans (37 percent .cse364 s 115)) .cse482))) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse72 .cse302 (res .cse8 .cse919 (res .cse789 (res .cse187 (res .cse182 (res .cse178 .cse183 (res .cse170 .cse181 (res .cse172 .cse180 (res .cse90 .cse174 (res .cse421 (res .cse422 (res .cse340 (res .cse384 (res .cse74 .cse385 (res .cse37 .cse335 (res .cse294 .cse295 (res .cse505 .cse711 (res .cse712 (res .cse713 .cse714 (res .cse523 .cse715 (res .cse344 (res .cse716 .cse717 (res .cse29 .cse525 (res .cse28 .cse31 (res .cse659 .cse718 (res .cse660 .cse682 (res .cse587 .cse920 (res .cse816 .cse817 (res .cse818 .cse819 (res .cse586 (res .cse429 .cse921 (res .cse852 .cse853 (res .cse68 (res .cse231 (res .cse431 .cse432 (res .cse61 (res .cse10 (res .cse53 (res .cse51 (res .cse2 (res .cse49 (res .cse101 (res .cse102 (res .cse345 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 (res .cse348 (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse351 .cse352 (res .cse139 .cse140 (res .cse353 .cse354 (farkas 1 .cse353 1 .cse139 1 .cse351 1 .cse263 1 .cse417 1 .cse269)))))) :proves (+ .cse348 - .cse37 - .cse294 - .cse76 - .cse415 - .cse269) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) .cse355)))) (res .cse356 .cse357 .cse861)) .cse118) .cse859) .cse117) .cse539) .cse54) .cse60) .cse232) .cse69)) (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse233 .cse234 (farkas 4 .cse90 4 .cse233 4 .cse294 4 .cse88 4 .cse83 1 .cse46 1 .cse44 4 .cse42 4 .cse415 1 .cse24 4 .cse78 4 .cse37 4 .cse76 1 .cse40)))))) :proves (- .cse90 - .cse231 - .cse294 - .cse88 - .cse83 - .cse33 + .cse32 - .cse28 - .cse415 - .cse24 - .cse78 - .cse37 - .cse76 - .cse22) :LA (4 (- 4) 4 4 4 (- 1) (- 1) (- 4) 4 1 4 4 4 (- 1)))) .cse862))) .cse922))))))))) (! (res .cse618 .cse619 (farkas 1 .cse37 1 .cse294 1 .cse76 1 .cse618 1 .cse344 1 .cse415)) :proves (- .cse37 - .cse294 - .cse76 + .cse87 - .cse344 - .cse415) :LA (1 1 1 (- 1) 1 1))))) .cse727))))) .cse594) .cse367) .cse477) (! (res .cse558 .cse559 (farkas 1 .cse90 1 .cse83 1 .cse558 1 .cse78)) :proves (- .cse90 - .cse83 - .cse421 - .cse78) :LA (1 1 (- 1) 1))))))) .cse188) .cse923) .cse864)))) .cse131))) .cse48))) :proves (- .cse415 - .cse57 - .cse78 - .cse76 - .cse83 - .cse88) :rup)))) .cse337) .cse315))) .cse188) .cse923))))) :proves (- .cse415 - .cse78 - .cse88 - .cse83) :rup)) (.cse778 (trichotomy .cse12 0)) (.cse782 (farkas 1 .cse92 1 .cse777)) (.cse781 (farkas 1 .cse50 1 .cse776)) (.cse767 (! (let ((.cse915 (= 0 .cse916))) (res .cse915 (symm 0 .cse916) (let ((.cse917 (< .cse317 .cse126))) (res .cse917 (let ((.cse918 (< .cse126 .cse317))) (res .cse918 (trichotomy .cse317 .cse126) (farkas 1 .cse548 1 .cse918))) (farkas 1 .cse915 1 .cse917))))) :proves (+ .cse766 - .cse548) :EQ)) (.cse784 (symm .cse126 .cse317)) (.cse748 (res .cse763 .cse764 (and- 1 .cse763))) (.cse541 (! (res .cse244 .cse245 (trans 3 .cse12 .cse126 .cse14)) :proves (+ .cse422 - .cse431 - .cse221 - .cse182) :trans (3 .cse12 .cse126 .cse14))) (.cse483 (! (res .cse263 .cse264 (let ((.cse913 (< .cse62 .cse15))) (res .cse913 (let ((.cse914 (< .cse15 .cse62))) (res .cse914 (trichotomy .cse62 .cse15) (farkas 1 .cse76 1 .cse914))) (farkas 1 .cse263 1 .cse913)))) :proves (+ .cse55 - .cse76) :EQ)) (.cse247 (! (res .cse139 .cse140 (let ((.cse911 (< .cse15 .cse110))) (res .cse911 (let ((.cse912 (< .cse110 .cse15))) (res .cse912 (trichotomy .cse15 .cse110) (farkas 1 .cse37 1 .cse912))) (farkas 1 .cse139 1 .cse911)))) :proves (+ .cse74 - .cse37) :EQ)) (.cse485 (res .cse471 (! (res .cse474 .cse475 (farkas 1 .cse474 1 .cse37 1 .cse76 1 .cse415)) :proves (+ .cse471 - .cse37 - .cse76 - .cse415) :LA ((- 1) 1 1 1)) (let ((.cse908 (<= .cse910 0))) (res .cse908 (! (res .cse907 (res .cse906 (trichotomy .cse62 0) (farkas 1 .cse906 1 .cse471)) (let ((.cse909 (<= 1 .cse910))) (res .cse909 (total-int .cse910 0) (farkas 1 .cse909 1 .cse907)))) :proves (+ .cse908 + .cse484 - .cse471) :trichotomy) (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse263 1 .cse417 1 .cse908)))) :proves (- .cse37 - .cse76 - .cse415 - .cse908) :LA ((- 1) (- 1) (- 1) 1)))))) (.cse488 (! (res .cse487 (symm 0 .cse62) (res .cse906 (res .cse907 (trichotomy 0 .cse62) (farkas 1 .cse487 1 .cse907)) (farkas 1 .cse484 1 .cse906))) :proves (+ .cse487 - .cse484) :EQ)) (.cse506 (res .cse256 (! (res .cse259 .cse260 (farkas 1 .cse259 1 .cse37 1 .cse76 1 .cse250 1 .cse415)) :proves (+ .cse256 - .cse37 - .cse76 - .cse250 - .cse415) :LA ((- 1) 1 1 1 1)) (! (res .cse163 (res .cse164 .cse165 (farkas 1 .cse164 1 .cse256)) (res .cse904 .cse905 (farkas 1 .cse904 1 .cse163))) :proves (+ .cse505 + .cse35 - .cse256) :trichotomy))) (.cse507 (! (let ((.cse900 (= 0 .cse901))) (res .cse900 (symm 0 .cse901) (let ((.cse902 (< 1 .cse63))) (res .cse902 (let ((.cse903 (< .cse63 1))) (res .cse903 (trichotomy 1 .cse63) (farkas 1 .cse900 1 .cse903))) (farkas 1 .cse35 1 .cse902))))) :proves (+ .cse160 - .cse35) :EQ)) (.cse17 (symm .cse14 1)) (.cse662 (res .cse493 (! (res .cse494 .cse495 (res .cse417 .cse476 (res .cse263 .cse264 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse263 1 .cse269 1 .cse417 1 .cse494))))) :proves (- .cse37 - .cse76 - .cse269 - .cse415 + .cse493) :LA ((- 1) (- 1) 1 (- 1) (- 1))) (! .cse504 :proves (- .cse493 + .cse492 + .cse486) :trichotomy))) (.cse498 (! (let ((.cse896 (= 0 .cse897))) (res .cse896 (symm 0 .cse897) (let ((.cse898 (< .cse317 .cse62))) (res .cse898 (let ((.cse899 (< .cse62 .cse317))) (res .cse899 (trichotomy .cse317 .cse62) (farkas 1 .cse492 1 .cse899))) (farkas 1 .cse896 1 .cse898))))) :proves (+ .cse497 - .cse492) :EQ)) (.cse500 (symm .cse62 .cse317)) (.cse162 (symm .cse63 1)) (.cse503 (! (res .cse618 .cse619 (farkas 1 .cse37 1 .cse76 1 .cse618 1 .cse486 1 .cse415)) :proves (- .cse37 - .cse76 + .cse87 - .cse486 - .cse415) :LA (1 1 (- 1) 1 1))) (.cse515 (! (res .cse417 .cse476 (res .cse261 .cse262 (res .cse263 .cse264 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse263 1 .cse261 1 .cse505 1 .cse417))))) :proves (- .cse37 - .cse76 - .cse250 - .cse505 - .cse415) :LA ((- 1) (- 1) (- 1) 1 (- 1)))) (.cse383 (res .cse358 .cse424 .cse361)) (.cse879 (! (cong (x_count 2) (x_count .cse317)) :proves (+ .cse878 - .cse53) :cong (.cse62 .cse109))) (.cse592 (symm 0 .cse109))) (let ((.cse615 (< 0 .cse317)) (.cse616 (< .cse317 0)) (.cse610 (+ .cse110 (- 1))) (.cse149 (<= 1 .cse890)) (.cse546 (= 0 .cse868))) (let-proof ((.cse150 (total-int .cse890 0)) (.cse152 (! (let ((.cse893 (< .cse890 0))) (res .cse893 (let ((.cse894 (< 0 .cse890))) (res .cse894 (trichotomy .cse890 0) (farkas 1 .cse894 1 .cse148))) (let ((.cse895 (<= 1 .cse14))) (res .cse895 (total-int .cse14 0) (farkas 1 .cse895 1 .cse893))))) :proves (+ .cse151 + .cse147 - .cse148) :trichotomy)) (.cse159 (! (let ((.cse889 (= 0 .cse890))) (res .cse889 (symm 0 .cse890) (let ((.cse891 (< 1 .cse14))) (res .cse891 (let ((.cse892 (< .cse14 1))) (res .cse892 (trichotomy 1 .cse14) (farkas 1 .cse889 1 .cse892))) (farkas 1 .cse147 1 .cse891))))) :proves (+ .cse6 - .cse147) :EQ)) (.cse585 (! (res .cse885 .cse886 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse887 .cse888 (res .cse33 .cse34 (res .cse587 (! (res .cse590 .cse591 (res .cse588 .cse589 (res .cse423 .cse592 (farkas 4 .cse423 4 .cse588 1 .cse33 1 .cse887 1 .cse590 1 .cse885)))) :proves (- .cse427 + .cse587 - .cse33 - .cse887 - .cse24 - .cse885) :LA ((- 4) (- 4) 1 1 (- 1) 1)) (res .cse812 (! (res .cse813 .cse814 (res .cse40 .cse41 (res .cse46 .cse47 (farkas 4 .cse427 4 .cse587 1 .cse46 1 .cse24 1 .cse40 1 .cse813)))) :proves (- .cse427 - .cse587 - .cse33 - .cse24 - .cse22 + .cse812) :LA (4 4 (- 1) 1 (- 1) (- 1))) .cse815)))) .cse48)))) :proves (+ .cse584 - .cse427) :rup)) (.cse491 (! (res .cse85 .cse86 (let-proof ((.cse884 (trans 0 .cse62 .cse109))) (res .cse100 (res .cse101 (res .cse102 (res .cse51 (res .cse346 .cse347 .cse383) (res .cse53 .cse54 (res .cse878 .cse879 (! .cse884 :proves (+ .cse423 - .cse487 - .cse878) :trans (0 .cse62 .cse109))))) .cse118) .cse119) (! (res .cse878 .cse881 .cse884) :proves (+ .cse423 - .cse487 - .cse100) :trans (0 .cse62 .cse109))))) :proves (+ .cse423 - .cse487 + .cse49 + .cse269 - .cse55) :rup)) (.cse428 (! (res .cse427 (symm .cse109 0) (let ((.cse882 (< .cse109 0))) (res .cse882 (let ((.cse883 (< 0 .cse109))) (res .cse883 (trichotomy .cse109 0) (farkas 1 .cse427 1 .cse883))) (farkas 1 .cse423 1 .cse882)))) :proves (- .cse423 + .cse427) :EQ)) (.cse516 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse55 .cse483 (res .cse74 .cse247 (res .cse484 .cse485 (res .cse487 .cse488 (res .cse505 (res .cse35 .cse506 (res .cse160 .cse507 (res .cse486 (res .cse29 .cse806 (let-proof ((.cse880 (res .cse115 .cse116 (trans .cse110 .cse15 .cse62 .cse109 .cse63 1 .cse14 .cse126)))) (res .cse100 (res .cse101 (res .cse102 (res .cse497 (res .cse492 (res .cse269 (res .cse53 (res .cse51 (res .cse49 .cse270 (res .cse2 .cse117 (res .cse228 .cse229 (res .cse61 (! (res .cse16 .cse17 (trans .cse12 .cse230 .cse13 .cse14 1 .cse63)) :proves (+ .cse61 - .cse228 - .cse197 - .cse8 - .cse6 - .cse160) :trans (.cse12 .cse230 .cse13 .cse14 1 .cse63)) (res .cse68 .cse69 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse70 .cse71 (res .cse46 .cse47 (farkas 8 .cse37 8 .cse76 8 .cse250 1 .cse46 4 .cse70 1 .cse44 4 .cse42 8 .cse415 1 .cse24 1 .cse40)))))) :proves (- .cse37 - .cse76 - .cse250 - .cse33 - .cse68 + .cse32 - .cse28 - .cse415 - .cse24 - .cse22) :LA (8 8 8 (- 1) (- 4) (- 1) (- 4) 8 1 (- 1)))))))) .cse54) (res .cse878 .cse879 (! (res .cse64 .cse65 (res .cse161 .cse162 .cse880)) :proves (+ .cse490 - .cse74 - .cse55 - .cse878 - .cse29 - .cse160 - .cse6 - .cse182) :trans (.cse110 .cse15 .cse62 .cse109 .cse63 1 .cse14 .cse126)))) .cse662) .cse498) (res .cse105 (! (res .cse499 .cse500 (trans 0 .cse62 .cse317)) :proves (+ .cse105 - .cse487 - .cse497) :trans (0 .cse62 .cse317)) (res .cse374 .cse375 (! (res .cse161 .cse162 (trans .cse110 .cse109 .cse63 1 .cse14 .cse126)) :proves (+ .cse490 - .cse374 - .cse29 - .cse160 - .cse6 - .cse182) :trans (.cse110 .cse109 .cse63 1 .cse14 .cse126))))) .cse118) .cse119) (! (res .cse64 .cse65 (res .cse161 .cse162 (res .cse878 .cse881 .cse880))) :proves (+ .cse490 - .cse74 - .cse55 - .cse100 - .cse29 - .cse160 - .cse6 - .cse182) :trans (.cse110 .cse15 .cse62 .cse109 .cse63 1 .cse14 .cse126))))) .cse503))) .cse515)))))) .cse131)) .cse48))) :proves (- .cse28 - .cse415 - .cse197 - .cse250 - .cse8 - .cse182 - .cse6 + .cse490 - .cse76 - .cse37) :rup)) (.cse434 (res .cse221 .cse872 .cse541)) (.cse342 (! (res .cse876 (res .cse747 .cse748 (and- 1 .cse747)) (res .cse877 (not+ .cse877) (=>- .cse876))) :proves (+ .cse341 + .cse72) :input)) (.cse362 (! (and- 1 .cse341) :proves (- .cse341 + .cse175) :input)) (.cse407 (! (and- 0 .cse341) :proves (- .cse341 + .cse386) :input)) (.cse527 (! (res .cse85 .cse86 (res .cse87 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse344 (res .cse269 .cse425 (res .cse348 (! (res .cse353 .cse354 (res .cse417 .cse476 (res .cse873 .cse874 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse873 1 .cse417 1 .cse353 1 .cse269))))) :proves (- .cse37 - .cse523 - .cse415 + .cse348 - .cse269) :LA ((- 1) (- 1) (- 1) (- 1) 1)) .cse875)) (! (res .cse618 .cse619 (farkas 1 .cse344 1 .cse37 1 .cse523 1 .cse618 1 .cse415)) :proves (- .cse344 - .cse37 - .cse523 + .cse87 - .cse415) :LA (1 1 1 (- 1) 1))))) .cse131)) :proves (- .cse415 + .cse345 + .cse102 + .cse51 + .cse49 - .cse523 - .cse37) :rup)) (.cse556 (res .cse766 .cse767 (res .cse221 .cse872 (! (res .cse783 .cse784 (trans 3 .cse12 .cse126 .cse317)) :proves (+ .cse2 - .cse431 - .cse221 - .cse766) :trans (3 .cse12 .cse126 .cse317))))) (.cse93 (! (res .cse92 (symm .cse12 0) (res .cse776 (res .cse777 .cse778 .cse782) .cse781)) :proves (- .cse50 + .cse92) :EQ)) (.cse322 (! (cong (s_count 0) (s_count .cse317)) :proves (+ .cse321 - .cse105) :cong (.cse125 .cse12))) (.cse545 (! (let ((.cse869 (= .cse126 .cse110))) (res .cse869 (symm .cse126 .cse110) (let ((.cse870 (< .cse868 0))) (res .cse870 (let ((.cse871 (< 0 .cse868))) (res .cse871 (trichotomy .cse868 0) (farkas 1 .cse490 1 .cse871))) (farkas 1 .cse869 1 .cse870))))) :proves (- .cse490 + .cse489) :EQ)) (.cse547 (symm 0 .cse868)) (.cse572 (! (res .cse85 .cse86 (res .cse87 (res .cse72 .cse302 (res .cse88 (res .cse8 (res .cse142 .cse143 (res .cse144 .cse145 (res .cse189 .cse190 (res .cse246 (res .cse191 (res .cse248 (res .cse167 (res .cse55 .cse249 (res .cse57 .cse168 (let ((.cse865 (+ .cse126 .cse166))) (let ((.cse769 (= .cse865 0))) (let ((.cse772 (= 0 .cse865))) (let-proof ((.cse770 (! (res .cse223 .cse224 (let ((.cse866 (< .cse865 0))) (res .cse866 (let ((.cse867 (< 0 .cse865))) (res .cse867 (trichotomy .cse865 0) (farkas 1 .cse223 1 .cse867))) (farkas 1 .cse221 1 .cse866)))) :proves (- .cse221 + .cse769) :EQ)) (.cse773 (symm 0 .cse865))) (let-proof ((.cse787 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse85 .cse86 (res .cse789 (res .cse88 (res .cse8 (res .cse142 .cse143 (res .cse144 .cse145 (res .cse189 .cse190 (res .cse246 (res .cse193 .cse194 (res .cse191 (res .cse192 (let-proof ((.cse832 (! (res (= s .cse364) (symm s .cse364) (trans .cse240 s .cse364 percent)) :proves (+ .cse192 - .cse189 - .cse170 - .cse144) :trans (.cse240 s .cse364 percent)))) (res .cse170 (res .cse248 (res .cse167 (res .cse195 (res .cse178 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse57 .cse168 (res .cse294 .cse295 (res .cse197 .cse198 (res .cse678 .cse679 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse37 (res .cse74 (res .cse384 .cse385 (res .cse386 .cse387 (res .cse340 .cse594 (res .cse790 .cse791 (res .cse792 (res .cse793 (! (res .cse794 .cse795 (res .cse153 .cse154 (res .cse451 .cse452 (res .cse796 .cse797 (res .cse155 .cse156 (res .cse798 .cse799 (farkas 1 .cse798 1 .cse294 1 .cse790 1 .cse76 1 .cse155 1 .cse796 1 .cse451 1 .cse415 1 .cse153 1 .cse794))))))) :proves (+ .cse793 - .cse294 - .cse790 - .cse76 - .cse83 - .cse678 - .cse187 - .cse415 - .cse78 - .cse193) :LA ((- 1) 1 1 1 (- 1) (- 1) (- 1) 1 (- 1) (- 1))) (res .cse800 .cse801 (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse802 .cse803 (res .cse351 .cse352 (farkas 1 .cse351 1 .cse802 1 .cse263 1 .cse83 1 .cse678 1 .cse187 1 .cse417 1 .cse78 1 .cse193 1 .cse800))))) :proves (- .cse294 - .cse790 - .cse76 - .cse83 - .cse678 - .cse187 - .cse415 - .cse78 - .cse193 - .cse800) :LA ((- 1) (- 1) (- 1) 1 1 1 (- 1) 1 1 1)))) (res .cse804 .cse805 (res .cse29 .cse806 (res .cse688 (res .cse228 (res .cse659 .cse807 (res .cse680 .cse681 (res .cse660 .cse682 (res .cse2 (res .cse49 (let ((.cse810 (+ .cse126 .cse166 2))) (let ((.cse808 (<= .cse810 0))) (res .cse808 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (let ((.cse809 (<= 1 .cse810))) (res .cse809 (total-int .cse810 0) (farkas 4 .cse294 4 .cse809 4 .cse790 4 .cse76 4 .cse83 1 .cse46 1 .cse44 4 .cse42 4 .cse415 1 .cse24 1 .cse40 4 .cse78))))))) :proves (- .cse294 + .cse808 - .cse790 - .cse76 - .cse83 - .cse33 + .cse32 - .cse28 - .cse415 - .cse24 - .cse22 - .cse78) :LA (4 (- 4) 4 4 4 (- 1) (- 1) (- 4) 4 1 (- 1) 4)) (res .cse769 (res .cse221 (res .cse53 (res .cse51 (res .cse692 .cse811 (res .cse584 (! (res .cse32 (res .cse623 .cse624 (res .cse812 (! (res .cse813 .cse814 (res .cse632 .cse633 (farkas 1 .cse632 1 .cse659 1 .cse813))) :proves (- .cse623 - .cse659 + .cse812) :LA ((- 1) 1 (- 1))) .cse815)) .cse48) :proves (- .cse659 + .cse584) :rup) (res .cse816 .cse817 (res .cse818 .cse819 (res .cse691 (res .cse690 .cse820 (res .cse689 .cse697 (res .cse821 .cse822 .cse823))) (! (res .cse32 (res .cse623 .cse624 (res .cse87 (res .cse824 (res .cse142 .cse143 (res .cse144 .cse145 (res .cse189 .cse190 (res .cse192 (res .cse170 (res .cse195 (res .cse178 (res .cse197 .cse198 (res .cse182 .cse183 (res .cse685 (res .cse687 .cse825 (res .cse826 .cse827 (res .cse686 .cse704 (res .cse828 .cse829 (res .cse105 (! (trans 0 arg1 .cse317) :proves (+ .cse105 - .cse660 - .cse686) :trans (0 arg1 .cse317)) (res .cse107 .cse108 (! (res .cse830 .cse831 (res .cse273 .cse274 (res .cse244 .cse245 (res .cse279 .cse280 (trans .cse13 .cse230 .cse63 .cse109 .cse110 arg1 .cse126 .cse14))))) :proves (+ .cse8 - .cse197 - .cse804 - .cse29 - .cse107 - .cse828 - .cse818 - .cse182) :trans (.cse13 .cse230 .cse63 .cse109 .cse110 arg1 .cse126 .cse14)))))))) .cse706))) .cse181) .cse236) .cse832) .cse238)))) .cse833) .cse131)) .cse48) :proves (- .cse584 - .cse818 - .cse691 - .cse29 - .cse660 + .cse8 - .cse415 - .cse804) :rup)))))) .cse54) .cse222) .cse770) (! (res .cse772 .cse773 (farkas 1 .cse808 1 .cse772)) :proves (- .cse808 - .cse769) :LA (1 (- 1))))))) .cse117) .cse229)))) .cse699) (! (res .cse40 .cse41 (res .cse700 .cse701 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse294 4 .cse790 4 .cse83 1 .cse46 1 .cse44 4 .cse187 4 .cse42 4 .cse415 1 .cse24 4 .cse78 4 .cse700 4 .cse76 4 .cse678 1 .cse40 4 .cse193)))))) :proves (- .cse294 - .cse790 - .cse83 - .cse33 + .cse32 - .cse187 - .cse28 - .cse415 - .cse24 - .cse78 - .cse688 - .cse76 - .cse678 - .cse22 - .cse193) :LA (4 4 4 (- 1) (- 1) 4 (- 4) 4 1 4 (- 4) 4 4 (- 1) 4)))))))))) .cse335) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse72 .cse302 (res .cse88 (res .cse8 (res .cse142 .cse143 (res .cse144 .cse145 (res .cse189 .cse190 (res .cse246 (res .cse193 .cse194 (res .cse191 (res .cse192 (res .cse170 (res .cse248 (res .cse167 (res .cse195 (res .cse178 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse57 .cse168 (res .cse521 .cse522 (res .cse294 .cse295 (res .cse523 .cse524 (res .cse197 .cse198 (res .cse678 .cse679 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse421 (res .cse422 (res .cse74 .cse247 (res .cse505 .cse711 (res .cse712 (res .cse713 .cse714 (res .cse834 .cse835 (let ((.cse839 (+ .cse63 .cse845))) (let ((.cse836 (= .cse839 0))) (res .cse836 (let ((.cse837 (<= .cse839 0))) (res .cse837 (! (res .cse153 .cse154 (res .cse155 .cse156 (let ((.cse838 (<= 1 .cse839))) (res .cse838 (total-int .cse839 0) (farkas 1 .cse838 1 .cse37 1 .cse294 1 .cse76 1 .cse155 1 .cse415 1 .cse153))))) :proves (+ .cse837 - .cse37 - .cse294 - .cse76 - .cse83 - .cse415 - .cse78) :LA ((- 1) 1 1 1 (- 1) 1 (- 1))) (let ((.cse844 (+ .cse63 .cse845 1))) (let ((.cse840 (<= .cse844 0))) (res .cse840 (! (let ((.cse841 (< .cse839 0))) (res .cse841 (let ((.cse842 (< 0 .cse839))) (res .cse842 (trichotomy .cse839 0) (farkas 1 .cse842 1 .cse837))) (let ((.cse843 (<= 1 .cse844))) (res .cse843 (total-int .cse844 0) (farkas 1 .cse843 1 .cse841))))) :proves (+ .cse840 + .cse836 - .cse837) :trichotomy) (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse351 .cse352 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse351 1 .cse263 1 .cse83 1 .cse417 1 .cse78 1 .cse840))))) :proves (- .cse37 - .cse294 - .cse76 - .cse83 - .cse415 - .cse78 - .cse840) :LA ((- 1) (- 1) (- 1) 1 (- 1) 1 1))))))) (res .cse716 .cse717 (res .cse846 .cse847 (let ((.cse848 (= .cse126 .cse63))) (res .cse848 (! (let ((.cse849 (= 0 .cse839))) (res .cse849 (symm 0 .cse839) (let ((.cse850 (< .cse126 .cse63))) (res .cse850 (let ((.cse851 (< .cse63 .cse126))) (res .cse851 (trichotomy .cse126 .cse63) (farkas 1 .cse849 1 .cse851))) (farkas 1 .cse836 1 .cse850))))) :proves (+ .cse848 - .cse836) :EQ) (res .cse29 .cse525 (res .cse28 .cse31 (res .cse852 .cse853 (res .cse68 (res .cse688 (res .cse61 (res .cse228 (res .cse429 .cse526 (res .cse431 .cse432 (res .cse659 .cse718 (res .cse854 .cse855 (res .cse680 .cse681 (res .cse660 .cse682 (res .cse661 .cse856 (res .cse818 (! (res .cse659 .cse683 (res (= .cse63 .cse126) (symm .cse63 .cse126) (trans arg1 0 .cse63 .cse126))) :proves (+ .cse818 - .cse660 - .cse716 - .cse848) :trans (arg1 0 .cse63 .cse126)) (res .cse584 .cse684 (res .cse685 (res .cse356 (res .cse686 (res .cse687 (res .cse101 (res .cse689 (res .cse690 (res .cse2 .cse857 .cse229) .cse697) .cse858) .cse859) .cse704) .cse860) .cse861) .cse706)))))))))) .cse699) .cse69) (! (res .cse40 .cse41 (res .cse700 .cse701 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse294 4 .cse83 1 .cse46 1 .cse44 4 .cse187 4 .cse42 4 .cse415 1 .cse24 4 .cse78 4 .cse37 4 .cse700 4 .cse76 4 .cse678 1 .cse40 4 .cse193)))))) :proves (- .cse294 - .cse83 - .cse33 + .cse32 - .cse187 - .cse28 - .cse415 - .cse24 - .cse78 - .cse37 - .cse688 - .cse76 - .cse678 - .cse22 - .cse193) :LA (4 4 (- 1) (- 1) 4 (- 4) 4 1 4 4 (- 4) 4 4 (- 1) 4))) .cse862))))))))))))) .cse727))) .cse477) .cse863))))))))))) .cse181) .cse236) .cse237) .cse337) .cse832) .cse238) .cse733)) .cse313)))) .cse89) .cse446))) .cse131))) .cse48))) :proves (- .cse78 - .cse415 - .cse83 - .cse37) :rup)))))))))) .cse181) .cse236) .cse237) .cse337) .cse832)) .cse238) .cse733)) .cse313)))) .cse89) .cse446) .cse864)))) .cse48))) :proves (- .cse415 - .cse28 - .cse78 - .cse83) :rup))) (res .cse28 (res .cse29 (res .cse101 (res .cse102 (res .cse53 (res .cse51 (res .cse2 (res .cse49 (let-proof ((.cse765 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 (res .cse549 (! (res .cse153 .cse154 (res .cse155 .cse156 (res .cse550 .cse551 (farkas 1 .cse550 1 .cse155 1 .cse153 1 .cse269)))) :proves (+ .cse549 - .cse83 - .cse78 - .cse269) :LA ((- 1) (- 1) (- 1) 1)) (res .cse552 .cse553 (! (res .cse618 .cse619 (farkas 1 .cse83 1 .cse618 1 .cse78 1 .cse552)) :proves (- .cse83 + .cse87 - .cse78 - .cse552) :LA (1 (- 1) 1 1))))))))) (res .cse548 .cse765 (res .cse766 .cse767 (res .cse221 (res .cse369 .cse370 (res .cse368 (res .cse129 .cse371 (res .cse81 .cse373 (res .cse105 (! (res .cse103 (res .cse129 .cse130 (trans .cse317 .cse126 0)) .cse501) :proves (+ .cse105 - .cse766 - .cse81) :trans (.cse317 .cse126 0)) (res .cse565 .cse566 (! (res .cse127 .cse128 (trans .cse12 .cse125 .cse126)) :proves (+ .cse221 - .cse565 - .cse72) :trans (.cse12 .cse125 .cse126)))))) .cse372)) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse85 .cse86 (res .cse87 (res .cse768 (res .cse88 (res .cse8 (res .cse142 .cse143 (res .cse144 .cse145 (res .cse189 .cse190 (res .cse246 (res .cse191 (res .cse248 (res .cse167 (res .cse55 .cse249 (res .cse57 .cse168 (res .cse28 (res .cse29 (res .cse101 (res .cse102 (res .cse53 (res .cse51 (res .cse2 (res .cse49 (res .cse548 .cse765 (res .cse766 .cse767 (res .cse769 .cse770 (res .cse92 (let ((.cse771 (<= .cse12 0))) (res .cse771 (! (res .cse772 .cse773 (let ((.cse774 (<= 1 .cse12))) (res .cse774 (total-int .cse12 0) (farkas 1 .cse774 1 .cse83 1 .cse78 1 .cse772)))) :proves (+ .cse771 - .cse83 - .cse78 - .cse769) :LA ((- 1) 1 1 (- 1))) (let ((.cse780 (+ .cse12 1))) (let ((.cse775 (<= .cse780 0))) (res .cse775 (! (res .cse776 (res .cse777 .cse778 (farkas 1 .cse777 1 .cse771)) (let ((.cse779 (<= 1 .cse780))) (res .cse779 (total-int .cse780 0) (farkas 1 .cse779 1 .cse776)))) :proves (+ .cse775 + .cse92 - .cse771) :trichotomy) (! (res .cse153 .cse154 (res .cse155 .cse156 (farkas 1 .cse155 1 .cse153 1 .cse769 1 .cse775))) :proves (- .cse83 - .cse78 - .cse769 - .cse775) :LA ((- 1) (- 1) 1 1))))))) (res .cse389 (res .cse50 (! (res .cse50 (symm 0 .cse12) (res .cse777 (res .cse776 (trichotomy 0 .cse12) .cse781) .cse782)) :proves (+ .cse50 - .cse92) :EQ) (res .cse374 (res .cse105 (! (res .cse783 .cse784 (trans 0 .cse12 .cse126 .cse317)) :proves (+ .cse105 - .cse50 - .cse221 - .cse766) :trans (0 .cse12 .cse126 .cse317)) .cse375) .cse390)) (! (res .cse772 .cse773 (res .cse391 .cse392 (res .cse40 .cse41 (res .cse46 .cse47 (res .cse785 .cse786 (farkas 1 .cse785 4 .cse83 1 .cse46 1 .cse623 4 .cse415 1 .cse24 1 .cse40 4 .cse391 4 .cse78 4 .cse772)))))) :proves (+ .cse768 - .cse83 - .cse33 - .cse623 - .cse415 - .cse24 - .cse22 - .cse389 - .cse78 - .cse769) :LA ((- 1) 4 (- 1) 1 4 1 (- 1) (- 4) 4 (- 4)))))))) .cse117) .cse30) .cse54) .cse59) .cse118) .cse219) .cse31) .cse787))) .cse237) .cse337) .cse733) .cse313)))) .cse89) .cse446) .cse788) .cse131)))))) :proves (- .cse221 - .cse415 - .cse78 - .cse83) :rup))))) .cse117) .cse30) .cse54) .cse59) .cse118) .cse219) .cse31) .cse787)))))))) .cse237) .cse337) .cse733) .cse313)))) .cse89) .cse446)) .cse131)) :proves (- .cse415 - .cse78 - .cse83) :rup)) (.cse576 (res .cse763 .cse764 (and- 0 .cse763))) (.cse605 (res .cse761 .cse762 (and- 0 .cse761)))) (let ((.cse137 (= 0 .cse610)) (.cse26 (= .cse610 0))) (let-proof ((.cse416 (! (res .cse759 (res .cse604 .cse605 (and- 1 .cse604)) (res .cse760 (not+ .cse760) (=>- .cse759))) :proves (+ .cse414 + .cse415) :input)) (.cse304 (! (res .cse757 (res .cse575 .cse576 (and- 1 .cse575)) (res .cse758 (not+ .cse758) (=>- .cse757))) :proves (+ .cse303 + .cse78) :input)) (.cse571 (! (res .cse623 .cse624 (res .cse87 (res .cse83 (res .cse72 (res .cse341 .cse342 (res .cse175 .cse362 (res .cse386 .cse407 (let ((.cse754 (+ .cse126 .cse141 (- 1)))) (let ((.cse628 (= 0 .cse754)) (.cse625 (= .cse754 0))) (let-proof ((.cse629 (symm 0 .cse754))) (let-proof ((.cse626 (! (res .cse745 (res .cse341 (and+ .cse341) (res .cse746 (res .cse747 .cse748 (and- 0 .cse747)) (=>- .cse746))) (let ((.cse749 (= .cse745 .cse625))) (res .cse749 (res .cse625 (res .cse745 (=+1 .cse749) (let ((.cse750 (= .cse751 .cse126))) (res .cse750 (symm .cse751 .cse126) (let ((.cse752 (< .cse754 0))) (res .cse752 (let ((.cse753 (< 0 .cse754))) (res .cse753 (trichotomy .cse754 0) (farkas 1 .cse745 1 .cse753))) (farkas 1 .cse750 1 .cse752)))))) (res .cse745 (res .cse628 .cse629 (let ((.cse755 (< .cse126 .cse751))) (res .cse755 (let ((.cse756 (< .cse751 .cse126))) (res .cse756 (trichotomy .cse126 .cse751) (farkas 1 .cse625 1 .cse756))) (farkas 1 .cse628 1 .cse755)))) (=+2 .cse749))) (=-2 .cse749)))) :proves (- .cse386 - .cse175 + .cse625) :input))) (res .cse625 .cse626 (res .cse489 (res .cse490 (let ((.cse736 (+ arg1 .cse141)) (.cse744 (+ arg1 .cse141 1))) (let ((.cse721 (= arg1 .cse125)) (.cse708 (<= .cse744 0)) (.cse719 (= .cse736 0))) (let-proof ((.cse720 (let ((.cse739 (<= .cse736 0))) (res .cse739 (! (res .cse153 .cse154 (let ((.cse740 (<= 1 .cse736))) (res .cse740 (total-int .cse736 0) (farkas 1 .cse740 1 .cse659 1 .cse153)))) :proves (+ .cse739 - .cse659 - .cse78) :LA ((- 1) 1 (- 1))) (! (let ((.cse741 (< .cse736 0))) (res .cse741 (let ((.cse742 (< 0 .cse736))) (res .cse742 (trichotomy .cse736 0) (farkas 1 .cse742 1 .cse739))) (let ((.cse743 (<= 1 .cse744))) (res .cse743 (total-int .cse744 0) (farkas 1 .cse743 1 .cse741))))) :proves (+ .cse708 + .cse719 - .cse739) :trichotomy)))) (.cse722 (! (let ((.cse735 (= 0 .cse736))) (res .cse735 (symm 0 .cse736) (let ((.cse737 (< arg1 .cse125))) (res .cse737 (let ((.cse738 (< .cse125 arg1))) (res .cse738 (trichotomy arg1 .cse125) (farkas 1 .cse719 1 .cse738))) (farkas 1 .cse735 1 .cse737))))) :proves (+ .cse721 - .cse719) :EQ)) (.cse723 (res .cse105 .cse734 (res .cse321 .cse322 (! (trans 0 arg1 .cse125 .cse12) :proves (+ .cse50 - .cse660 - .cse721 - .cse321) :trans (0 arg1 .cse125 .cse12))))) (.cse726 (! (res .cse724 .cse725 (farkas 1 .cse724 1 .cse92)) :proves (- .cse429 - .cse92) :LA ((- 1) 1))) (.cse728 (! (res .cse558 .cse559 (farkas 1 .cse625 1 .cse187 1 .cse558 1 .cse78)) :proves (- .cse625 - .cse187 - .cse421 - .cse78) :LA (1 1 (- 1) 1))) (.cse730 (! (res .cse44 .cse45 (res .cse632 .cse633 (farkas 1 .cse708 1 .cse632 1 .cse44 1 .cse78))) :proves (- .cse708 - .cse623 + .cse32 - .cse78) :LA (1 (- 1) (- 1) 1)))) (let-proof ((.cse729 (! (res .cse32 (res .cse623 .cse624 (res .cse85 .cse86 (res .cse83 (res .cse72 (res .cse341 .cse342 (res .cse175 .cse362 (res .cse386 .cse407 (res .cse625 .cse626 (res .cse708 (res .cse189 .cse190 (res .cse144 .cse145 (res .cse192 (let ((.cse731 (= s .cse363))) (let-proof ((.cse732 (symm s .cse363))) (res .cse172 (res .cse191 (res .cse340 (res .cse193 .cse194 (res .cse195 (res .cse178 (res .cse248 (res .cse167 (res .cse384 (res .cse197 .cse198 (res .cse678 .cse679 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse421 (res .cse422 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse57 .cse168 (res .cse521 .cse522 (res .cse294 .cse295 (res .cse523 .cse524 (res .cse74 .cse385 (res .cse37 .cse335 (res .cse505 .cse711 (res .cse712 (res .cse713 .cse714 (res .cse716 .cse717 (res .cse29 .cse525 (res .cse28 .cse31 (res .cse659 .cse718 (res .cse660 .cse682 (res .cse719 .cse720 (res .cse721 .cse722 (res .cse429 .cse526 (res .cse431 .cse432 (res .cse92 (res .cse50 (res .cse221 (res .cse53 (res .cse51 (res .cse688 (res .cse228 (res .cse2 (res .cse49 (res .cse356 (res .cse345 (res .cse102 .cse527 (res .cse101 .cse118 (res .cse548 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse549 (! (res .cse153 .cse154 (res .cse628 .cse629 (res .cse550 .cse551 (farkas 1 .cse550 1 .cse628 1 .cse153 1 .cse358)))) :proves (+ .cse549 - .cse625 - .cse78 - .cse358) :LA ((- 1) (- 1) (- 1) 1)) (res .cse552 .cse553 (! (res .cse554 .cse555 (farkas 1 .cse625 1 .cse78 1 .cse554 1 .cse552)) :proves (- .cse625 - .cse78 - .cse102 - .cse552) :LA (1 1 (- 1) 1)))))) .cse556))) .cse357) .cse723) .cse117) .cse229) .cse699) (! (res .cse700 .cse701 (res .cse724 .cse725 (farkas 1 .cse625 1 .cse724 1 .cse700 1 .cse678 1 .cse187 1 .cse78 1 .cse193))) :proves (- .cse625 - .cse429 - .cse688 - .cse678 - .cse187 - .cse78 - .cse193) :LA (1 (- 1) (- 1) 1 1 1 1))) .cse54) .cse222) .cse541) .cse93) .cse726))))))))))) .cse727)))))))))) .cse477) .cse728))))) .cse594) .cse237) .cse336) .cse180) .cse236)) (! (res .cse731 .cse732 (trans .cse240 s .cse363 x)) :proves (+ .cse191 - .cse189 - .cse175 - .cse340) :trans (.cse240 s .cse363 x))) .cse733) (! (res .cse731 .cse732 (trans .cse240 s .cse363 percent)) :proves (+ .cse192 - .cse189 - .cse175 - .cse172) :trans (.cse240 s .cse363 percent))))) .cse238))) .cse730))))) .cse343) .cse572))) .cse48) :proves (- .cse142 - .cse415 - .cse78) :rup))) (res .cse142 (res .cse8 .cse143 (res .cse182 .cse627 (res .cse147 (res .cse148 (! (res .cse149 .cse150 (farkas 1 .cse149 1 .cse625 1 .cse187 1 .cse78)) :proves (+ .cse148 - .cse625 - .cse187 - .cse78) :LA ((- 1) 1 1 1)) (res .cse151 .cse152 (! (res .cse153 .cse154 (res .cse451 .cse452 (res .cse628 .cse629 (farkas 1 .cse628 1 .cse451 1 .cse153 1 .cse151)))) :proves (- .cse625 - .cse187 - .cse78 - .cse151) :LA ((- 1) (- 1) (- 1) 1)))) (res .cse6 .cse159 (res .cse55 .cse483 (res .cse74 .cse247 (res .cse484 .cse485 (let ((.cse635 (+ .cse62 .cse641))) (let ((.cse630 (= .cse635 0))) (res .cse630 (let ((.cse631 (<= .cse635 0))) (res .cse631 (! (res .cse632 .cse633 (let ((.cse634 (<= 1 .cse635))) (res .cse634 (total-int .cse635 0) (farkas 1 .cse634 1 .cse37 1 .cse76 1 .cse632 1 .cse415)))) :proves (+ .cse631 - .cse37 - .cse76 - .cse623 - .cse415) :LA ((- 1) 1 1 (- 1) 1)) (let ((.cse640 (+ .cse62 .cse641 1))) (let ((.cse636 (<= .cse640 0))) (res .cse636 (! (let ((.cse637 (< .cse635 0))) (res .cse637 (let ((.cse638 (< 0 .cse635))) (res .cse638 (trichotomy .cse635 0) (farkas 1 .cse638 1 .cse631))) (let ((.cse639 (<= 1 .cse640))) (res .cse639 (total-int .cse640 0) (farkas 1 .cse639 1 .cse637))))) :proves (+ .cse636 + .cse630 - .cse631) :trichotomy) (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse263 1 .cse623 1 .cse417 1 .cse636)))) :proves (- .cse37 - .cse76 - .cse623 - .cse415 - .cse636) :LA ((- 1) (- 1) 1 (- 1) 1))))))) (let ((.cse645 (+ .cse62 .cse141))) (let ((.cse642 (= .cse645 0))) (res .cse642 (let ((.cse643 (<= .cse645 0))) (res .cse643 (! (res .cse153 .cse154 (let ((.cse644 (<= 1 .cse645))) (res .cse644 (total-int .cse645 0) (farkas 1 .cse644 1 .cse37 1 .cse76 1 .cse415 1 .cse153)))) :proves (+ .cse643 - .cse37 - .cse76 - .cse415 - .cse78) :LA ((- 1) 1 1 1 (- 1))) (let ((.cse650 (+ .cse62 .cse141 1))) (let ((.cse646 (<= .cse650 0))) (res .cse646 (! (let ((.cse647 (< .cse645 0))) (res .cse647 (let ((.cse648 (< 0 .cse645))) (res .cse648 (trichotomy .cse645 0) (farkas 1 .cse648 1 .cse643))) (let ((.cse649 (<= 1 .cse650))) (res .cse649 (total-int .cse650 0) (farkas 1 .cse649 1 .cse647))))) :proves (+ .cse646 + .cse642 - .cse643) :trichotomy) (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse263 1 .cse417 1 .cse78 1 .cse646)))) :proves (- .cse37 - .cse76 - .cse415 - .cse78 - .cse646) :LA ((- 1) (- 1) (- 1) 1 1))))))) (res .cse487 .cse488 (let ((.cse651 (= fmt0 .cse62))) (res .cse651 (! (let ((.cse652 (= 0 .cse635))) (res .cse652 (symm 0 .cse635) (let ((.cse653 (< fmt0 .cse62))) (res .cse653 (let ((.cse654 (< .cse62 fmt0))) (res .cse654 (trichotomy fmt0 .cse62) (farkas 1 .cse652 1 .cse654))) (farkas 1 .cse630 1 .cse653))))) :proves (+ .cse651 - .cse630) :EQ) (let ((.cse655 (= .cse125 .cse62))) (res .cse655 (! (let ((.cse656 (= 0 .cse645))) (res .cse656 (symm 0 .cse645) (let ((.cse657 (< .cse125 .cse62))) (res .cse657 (let ((.cse658 (< .cse62 .cse125))) (res .cse658 (trichotomy .cse125 .cse62) (farkas 1 .cse656 1 .cse658))) (farkas 1 .cse642 1 .cse657))))) :proves (+ .cse655 - .cse642) :EQ) (res .cse294 (res .cse57 (res .cse167 .cse168 (res .cse191 .cse237 (res .cse144 .cse169 (res .cse192 (res .cse250 .cse251 (res .cse195 (res .cse197 .cse198 (res .cse486 (res .cse28 (res .cse29 (res .cse2 (res .cse49 (let ((.cse675 (= .cse62 fmt0))) (let-proof ((.cse676 (symm .cse62 fmt0)) (.cse664 (res .cse374 .cse375 (! (trans 0 .cse62 .cse15 .cse110 .cse109) :proves (+ .cse423 - .cse487 - .cse55 - .cse74 - .cse374) :trans (0 .cse62 .cse15 .cse110 .cse109))))) (res .cse659 (res .cse660 (res .cse661 (res .cse584 (res .cse497 (res .cse492 (res .cse427 (res .cse423 (res .cse269 .cse491 .cse662) .cse428) .cse585) .cse498) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse55 .cse483 (res .cse74 .cse247 (res .cse484 .cse485 (res .cse487 .cse488 (let-proof ((.cse663 (! (res .cse103 (res .cse484 (symm .cse62 0) (trans .cse317 .cse62 0)) .cse501) :proves (+ .cse105 - .cse497 - .cse487) :trans (.cse317 .cse62 0)))) (res .cse423 (res .cse105 .cse663 .cse664) (let ((.cse665 (= .cse12 .cse62))) (res .cse665 (res .cse105 .cse663 (res .cse565 .cse566 (! (trans .cse12 .cse125 .cse62) :proves (+ .cse665 - .cse565 - .cse655) :trans (.cse12 .cse125 .cse62)))) (res .cse427 .cse428 (let ((.cse670 (+ .cse62 .cse166))) (let ((.cse666 (= .cse670 0))) (res .cse666 (! (let ((.cse667 (= .cse62 .cse12))) (res .cse667 (symm .cse62 .cse12) (let ((.cse668 (< .cse670 0))) (res .cse668 (let ((.cse669 (< 0 .cse670))) (res .cse669 (trichotomy .cse670 0) (farkas 1 .cse667 1 .cse669))) (farkas 1 .cse665 1 .cse668))))) :proves (- .cse665 + .cse666) :EQ) (! (let ((.cse671 (= 0 .cse670))) (res .cse671 (symm 0 .cse670) (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse37 4 .cse427 4 .cse76 1 .cse46 1 .cse44 4 .cse415 1 .cse24 1 .cse40 4 .cse671)))))) :proves (- .cse37 - .cse427 - .cse76 - .cse33 + .cse32 - .cse415 - .cse24 - .cse22 - .cse666) :LA (4 4 4 (- 1) (- 1) 4 1 (- 1) (- 4)))))))))))))))) .cse48))) :proves (- .cse497 - .cse655 - .cse76 - .cse415 - .cse37) :rup)) .cse672) (! (res .cse673 .cse674 (res .cse675 .cse676 (trans 0 .cse62 fmt0 arg1))) :proves (+ .cse660 - .cse487 - .cse651 - .cse661) :trans (0 .cse62 fmt0 arg1))) .cse677) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse623 .cse624 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse88 .cse89 (res .cse182 .cse627 (res .cse678 .cse679 (res .cse680 .cse681 (res .cse660 .cse682 (res .cse661 (! (res .cse659 .cse683 (res .cse675 .cse676 (trans arg1 0 .cse62 fmt0))) :proves (+ .cse661 - .cse660 - .cse487 - .cse651) :trans (arg1 0 .cse62 fmt0)) (res .cse584 .cse684 (res .cse685 (res .cse686 (res .cse687 (res .cse269 (res .cse423 .cse491 (res .cse427 .cse428 (res .cse688 (res .cse231 (res .cse228 (res .cse10 (res .cse689 (res .cse690 (res .cse51 (res .cse346 .cse347 (res .cse691 (res .cse358 .cse424 (res .cse692 (! (res .cse693 .cse694 (res .cse44 .cse45 (res .cse632 .cse633 (farkas 1 .cse632 1 .cse44 1 .cse693 1 .cse358)))) :proves (- .cse623 + .cse32 + .cse692 - .cse358) :LA ((- 1) (- 1) (- 1) 1)) .cse695)) .cse696)) (res .cse53 .cse54 .cse60)) .cse697) .cse698) .cse232) .cse699) (! (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse233 .cse234 (farkas 4 .cse625 4 .cse233 4 .cse88 4 .cse427 1 .cse46 1 .cse44 4 .cse187 1 .cse24 1 .cse40 4 .cse78))))) :proves (- .cse625 - .cse231 - .cse88 - .cse427 - .cse33 + .cse32 - .cse187 - .cse24 - .cse22 - .cse78) :LA (4 (- 4) 4 4 (- 1) (- 1) 4 1 (- 1) 4))) (! (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse700 .cse701 (farkas 4 .cse625 4 .cse700 4 .cse88 4 .cse427 4 .cse678 1 .cse46 1 .cse44 4 .cse187 1 .cse24 1 .cse40 4 .cse78))))) :proves (- .cse625 - .cse688 - .cse88 - .cse427 - .cse678 - .cse33 + .cse32 - .cse187 - .cse24 - .cse22 - .cse78) :LA (4 (- 4) 4 4 4 (- 1) (- 1) 4 1 (- 1) 4))))) (res .cse691 (! (res .cse702 .cse703 (res .cse44 .cse45 (res .cse632 .cse633 (farkas 1 .cse632 1 .cse269 1 .cse44 1 .cse702)))) :proves (- .cse623 - .cse269 + .cse32 + .cse691) :LA ((- 1) 1 (- 1) (- 1))) .cse696)) .cse704) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse423 (res .cse105 .cse705 .cse664) (res .cse50 (res .cse105 .cse705 (res .cse321 .cse322 (! (res (= .cse62 .cse125) (symm .cse62 .cse125) (trans 0 .cse62 .cse125 .cse12)) :proves (+ .cse50 - .cse487 - .cse655 - .cse321) :trans (0 .cse62 .cse125 .cse12)))) (res .cse427 .cse428 (res .cse92 .cse93 (! (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse427 1 .cse46 4 .cse92 1 .cse44 1 .cse24 1 .cse40)))) :proves (- .cse427 - .cse33 - .cse92 + .cse32 - .cse24 - .cse22) :LA (4 (- 1) 4 (- 1) 1 (- 1)))))))) .cse48))) :proves (- .cse660 - .cse686 - .cse55 - .cse655 - .cse74 - .cse487) :rup)) .cse706))))))))) .cse131))) .cse48))) :proves (- .cse197 - .cse625 + .cse49 - .cse659 - .cse187 - .cse651 - .cse55 - .cse487 - .cse78 - .cse655 - .cse74 - .cse8) :rup)))) .cse117) .cse30) .cse31) .cse516) .cse503)) .cse236)) .cse707)))) .cse295) (! (res .cse32 (res .cse623 .cse624 (res .cse83 (res .cse72 (res .cse341 .cse342 (res .cse175 .cse362 (res .cse386 .cse407 (res .cse625 .cse626 (res .cse708 (res .cse142 (res .cse8 .cse143 (res .cse88 .cse89 (res .cse182 .cse627 (res .cse421 (res .cse422 (res .cse74 .cse247 (res .cse57 (! (res .cse351 .cse352 (let ((.cse709 (< .cse63 .cse62))) (res .cse709 (let ((.cse710 (< .cse62 .cse63))) (res .cse710 (trichotomy .cse63 .cse62) (farkas 1 .cse294 1 .cse710))) (farkas 1 .cse351 1 .cse709)))) :proves (+ .cse57 - .cse294) :EQ) (res .cse505 .cse711 (res .cse712 (res .cse713 .cse714 (res .cse523 .cse715 (res .cse716 .cse717 (res .cse29 .cse525 (res .cse28 .cse31 (res .cse659 .cse718 (res .cse660 .cse682 (res .cse719 .cse720 (res .cse721 .cse722 (res .cse429 .cse526 (res .cse431 .cse432 (res .cse92 (res .cse231 (res .cse50 (res .cse10 (res .cse356 (res .cse345 (res .cse2 (res .cse49 (res .cse53 (res .cse51 (res .cse102 .cse527 (res .cse101 .cse118 .cse434)) .cse54) .cse60) .cse117) .cse539) .cse357) .cse723) .cse232) .cse93) (! (res .cse233 .cse234 (res .cse724 .cse725 (farkas 1 .cse625 1 .cse724 1 .cse233 1 .cse88 1 .cse187 1 .cse78))) :proves (- .cse625 - .cse429 - .cse231 - .cse88 - .cse187 - .cse78) :LA (1 (- 1) (- 1) 1 1 1))) .cse726)))))))))))) .cse727)))) .cse477) .cse728)))) .cse729) .cse730))))) .cse343) .cse572)) .cse48) :proves (- .cse294 - .cse415 - .cse78 - .cse76 - .cse187 - .cse37) :rup)))))))))))))))))))) .cse729))))) .cse545) (! (res .cse153 .cse154 (res .cse628 .cse629 (res .cse546 .cse547 (farkas 1 .cse546 1 .cse628 1 .cse415 1 .cse153)))) :proves (- .cse489 - .cse625 - .cse415 - .cse78) :LA ((- 1) (- 1) 1 (- 1)))))))))))) .cse343) .cse572) .cse131)) :proves (- .cse78 - .cse415 - .cse187 - .cse76 - .cse37) :rup)) (.cse177 (! (res .cse408 .cse409 (res .cse396 .cse397 (res .cse479 (! (res .cse480 .cse481 (res .cse569 .cse570 (trans 37 percent .cse363 s 115))) :proves (+ .cse479 - .cse408 - .cse172 - .cse175 - .cse396) :trans (37 percent .cse363 s 115)) .cse482))) :proves (- .cse172 - .cse175) :rup)) (.cse599 (! (res .cse396 .cse397 (res .cse398 .cse399 (res .cse405 (! (res .cse620 .cse621 (res .cse480 .cse481 (trans 120 x .cse363 s 115))) :proves (+ .cse405 - .cse398 - .cse340 - .cse175 - .cse396) :trans (120 x .cse363 s 115)) .cse622))) :proves (- .cse340 - .cse175) :rup)) (.cse138 (symm 0 .cse610)) (.cse617 (res .cse616 (res .cse615 (trichotomy .cse317 0) (farkas 1 .cse615 1 .cse269)) (res .cse618 .cse619 (farkas 1 .cse618 1 .cse616))))) (let ((.cse411 (= percent .cse239)) (.cse403 (= s .cse239))) (let-proof ((.cse271 (! .cse617 :proves (- .cse269 + .cse103 + .cse87) :trichotomy)) (.cse104 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 (! .cse617 :proves (+ .cse87 + .cse103 - .cse269) :trichotomy))))) (.cse106 (! (res .cse105 .cse501 (res .cse615 (res .cse616 (trichotomy 0 .cse317) (farkas 1 .cse105 1 .cse616)) (farkas 1 .cse103 1 .cse615))) :proves (+ .cse105 - .cse103) :EQ)) (.cse412 (symm percent .cse239)) (.cse293 (! (res .cse613 .cse614 (trans .cse364 percent .cse240 x)) :proves (+ .cse246 - .cse144 - .cse192 - .cse191) :trans (.cse364 percent .cse240 x))) (.cse176 (! (res .cse365 .cse366 (trans .cse363 percent .cse364 s)) :proves (+ .cse175 - .cse172 - .cse144 - .cse170) :trans (.cse363 percent .cse364 s))) (.cse395 (! (res .cse602 (res .cse414 (and+ .cse414) (res .cse603 (res .cse604 .cse605 (and- 0 .cse604)) (=>- .cse603))) (let ((.cse606 (= .cse602 .cse26))) (res .cse606 (res .cse26 (res .cse602 (=+1 .cse606) (let ((.cse607 (= 1 .cse110))) (res .cse607 (symm 1 .cse110) (let ((.cse608 (< .cse610 0))) (res .cse608 (let ((.cse609 (< 0 .cse610))) (res .cse609 (trichotomy .cse610 0) (farkas 1 .cse602 1 .cse609))) (farkas 1 .cse607 1 .cse608)))))) (res .cse602 (res .cse137 .cse138 (let ((.cse611 (< .cse110 1))) (res .cse611 (let ((.cse612 (< 1 .cse110))) (res .cse612 (trichotomy .cse110 1) (farkas 1 .cse26 1 .cse612))) (farkas 1 .cse137 1 .cse611)))) (=+2 .cse606))) (=-2 .cse606)))) :proves (+ .cse26 - .cse184 - .cse393) :input)) (.cse394 (! (res .cse414 (res .cse303 (res .cse415 .cse416 (res .cse78 .cse304 (res .cse83 (res .cse72 (res .cse341 .cse342 (res .cse175 .cse362 (res .cse340 (res .cse384 (res .cse74 .cse385 (res .cse37 .cse335 (res .cse172 (res .cse178 (res .cse248 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse55 .cse249 (res .cse76 .cse77 .cse571)))) .cse336) .cse180) .cse177))) .cse594) .cse599))) .cse343) .cse572))) (! (and- 0 .cse303) :proves (- .cse303 + .cse393) :input)) (! (and- 0 .cse414) :proves (- .cse414 + .cse393) :input)) :proves (+ .cse393) :rup)) (.cse312 (! (and- 1 .cse303) :proves (- .cse303 + .cse186) :input)) (.cse404 (symm s .cse239))) (let-proof ((.cse185 (! (res .cse414 (! (res .cse415 .cse416 (! (res .cse393 .cse394 (res .cse85 .cse86 (res .cse87 (let-proof ((.cse418 (! (res .cse417 .cse476 (let ((.cse600 (< 0 .cse110))) (res .cse600 (let ((.cse601 (< .cse110 0))) (res .cse601 (trichotomy 0 .cse110) (farkas 1 .cse417 1 .cse601))) (farkas 1 .cse415 1 .cse600)))) :proves (+ .cse417 - .cse415) :EQ))) (res .cse417 .cse418 (let-proof ((.cse448 (! (res .cse408 .cse409 (res .cse396 .cse397 (res .cse386 .cse387 (res .cse340 .cse594 (res .cse175 (res .cse341 (res .cse72 .cse342 (res .cse83 .cse343 (res .cse78 (res .cse303 .cse304 (res .cse186 .cse312 (res .cse595 (! (res .cse596 .cse597 (res .cse403 .cse404 (trans 115 s .cse239 percent 37))) :proves (+ .cse595 - .cse396 - .cse186 - .cse386 - .cse408) :trans (115 s .cse239 percent 37)) (! .cse598 :proves (- .cse595) :EQ)))) .cse572))) .cse362) .cse599))))) :proves (- .cse384 - .cse415) :rup))) (res .cse384 (res .cse74 .cse385 (res .cse37 .cse335 (let ((.cse581 (+ .cse125 (- 1)))) (let ((.cse449 (= 0 .cse581)) (.cse419 (= .cse581 0))) (let-proof ((.cse450 (symm 0 .cse581))) (let-proof ((.cse426 (res .cse374 .cse375 (! (trans 0 .cse110 .cse109) :proves (+ .cse423 - .cse417 - .cse374) :trans (0 .cse110 .cse109)))) (.cse430 (! (res .cse584 .cse585 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse586 (res .cse587 (! (res .cse588 .cse589 (res .cse590 .cse591 (res .cse423 .cse592 (farkas 4 .cse423 1 .cse33 1 .cse584 1 .cse590 1 .cse22 4 .cse588)))) :proves (- .cse427 - .cse33 - .cse584 - .cse24 - .cse22 + .cse587) :LA ((- 4) 1 1 (- 1) 1 (- 4))) (! .cse593 :proves (- .cse587 + .cse429 + .cse586) :trichotomy)) (! (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse586 4 .cse427 1 .cse46 1 .cse44 1 .cse24 1 .cse40)))) :proves (- .cse586 - .cse427 - .cse33 + .cse32 - .cse24 - .cse22) :LA (4 4 (- 1) (- 1) 1 (- 1))))) .cse48))) :proves (- .cse584 - .cse427 + .cse429) :rup)) :proves (+ .cse429 - .cse427) :rup)) (.cse433 (res .cse565 .cse566 (! (res .cse127 .cse128 (res .cse244 .cse245 (trans 3 .cse12 .cse125 .cse126 .cse14))) :proves (+ .cse422 - .cse431 - .cse565 - .cse72 - .cse182) :trans (3 .cse12 .cse125 .cse126 .cse14)))) (.cse478 (! (res .cse558 .cse559 (farkas 1 .cse83 1 .cse187 1 .cse558 1 .cse419)) :proves (- .cse83 - .cse187 - .cse421 - .cse419) :LA (1 1 (- 1) 1))) (.cse420 (! (res .cse573 (res .cse303 (and+ .cse303) (res .cse574 (res .cse575 .cse576 (and- 0 .cse575)) (=>- .cse574))) (let ((.cse577 (= .cse573 .cse419))) (res .cse577 (res .cse419 (res .cse573 (=+1 .cse577) (let ((.cse578 (= 1 .cse125))) (res .cse578 (symm 1 .cse125) (let ((.cse579 (< .cse581 0))) (res .cse579 (let ((.cse580 (< 0 .cse581))) (res .cse580 (trichotomy .cse581 0) (farkas 1 .cse573 1 .cse580))) (farkas 1 .cse578 1 .cse579)))))) (res .cse573 (res .cse449 .cse450 (let ((.cse582 (< .cse125 1))) (res .cse582 (let ((.cse583 (< 1 .cse125))) (res .cse583 (trichotomy .cse125 1) (farkas 1 .cse419 1 .cse583))) (farkas 1 .cse449 1 .cse582)))) (=+2 .cse577))) (=-2 .cse577)))) :proves (+ .cse419 - .cse186 - .cse393) :input))) (let-proof ((.cse447 (! (res .cse408 .cse409 (res .cse396 .cse397 (let-proof ((.cse544 (! (res .cse393 .cse394 (res .cse419 (res .cse83 (res .cse72 (res .cse187 (res .cse182 (res .cse186 (res .cse341 .cse342 (res .cse178 .cse183 (res .cse386 .cse407 (res .cse175 .cse362 (res .cse172 .cse180 (! (res .cse569 .cse570 (trans .cse239 percent .cse363 s)) :proves (+ .cse186 - .cse386 - .cse172 - .cse175) :trans (.cse239 percent .cse363 s))))))) .cse420) .cse188) .cse571) .cse343) .cse572) (! (res .cse449 .cse450 (farkas 1 .cse78 1 .cse449)) :proves (- .cse78 - .cse419) :LA (1 (- 1))))) :proves (- .cse415 - .cse78 - .cse76 - .cse37) :rup))) (res .cse78 (res .cse303 .cse304 (res .cse186 .cse312 (res .cse83 (res .cse72 (res .cse341 .cse342 (res .cse386 .cse407 (res .cse479 (! (res .cse480 .cse481 (res .cse411 .cse412 (trans 37 percent .cse239 s 115))) :proves (+ .cse479 - .cse408 - .cse386 - .cse186 - .cse396) :trans (37 percent .cse239 s 115)) .cse482))) .cse343) (! (res .cse393 .cse394 (res .cse87 (res .cse417 .cse418 (res .cse26 (res .cse184 (res .cse55 .cse483 (res .cse74 .cse247 (res .cse484 .cse485 (res .cse486 (res .cse487 .cse488 (res .cse78 (res .cse303 .cse304 (res .cse186 .cse312 (res .cse419 .cse420 (let ((.cse568 (+ .cse126 (- 1))) (.cse561 (+ .cse126 (- 3)))) (let ((.cse519 (= .cse561 0)) (.cse520 (= 3 .cse126)) (.cse517 (<= .cse568 0))) (let-proof ((.cse518 (! (let ((.cse567 (<= 1 .cse568))) (res .cse567 (total-int .cse568 0) (farkas 1 .cse83 1 .cse419 1 .cse567))) :proves (- .cse83 - .cse419 + .cse517) :LA (1 1 (- 1)))) (.cse540 (res .cse105 (! (res (= .cse63 .cse317) (symm .cse63 .cse317) (res .cse64 .cse65 (res .cse66 .cse67 (res .cse115 .cse116 (trans 0 .cse110 .cse15 .cse62 .cse63 .cse317))))) :proves (+ .cse105 - .cse417 - .cse74 - .cse55 - .cse57 - .cse356) :trans (0 .cse110 .cse15 .cse62 .cse63 .cse317)) (res .cse565 .cse566 (! (res .cse127 .cse128 (trans 3 .cse12 .cse125 .cse126)) :proves (+ .cse520 - .cse431 - .cse565 - .cse72) :trans (3 .cse12 .cse125 .cse126))))) (.cse542 (! (let ((.cse562 (= .cse126 3))) (res .cse562 (symm .cse126 3) (let ((.cse563 (< .cse561 0))) (res .cse563 (let ((.cse564 (< 0 .cse561))) (res .cse564 (trichotomy .cse561 0) (farkas 1 .cse562 1 .cse564))) (farkas 1 .cse520 1 .cse563))))) :proves (- .cse520 + .cse519) :EQ)) (.cse543 (! (let ((.cse560 (= 0 .cse561))) (res .cse560 (symm 0 .cse561) (farkas 1 .cse560 1 .cse517))) :proves (- .cse519 - .cse517) :LA ((- 1) 1)))) (let-proof ((.cse502 (! (res .cse393 .cse394 (res .cse85 .cse86 (res .cse417 .cse418 (res .cse55 .cse483 (res .cse74 .cse247 (res .cse78 (res .cse303 .cse304 (res .cse186 .cse312 (res .cse419 .cse420 (res .cse172 .cse180 (res .cse170 .cse181 (res .cse175 (res .cse144 (res .cse90 .cse174 (res .cse341 (res .cse167 (res .cse142 (res .cse72 .cse342 (res .cse83 .cse343 (res .cse421 (res .cse422 (res .cse57 .cse168 (res .cse521 .cse522 (res .cse294 .cse295 (res .cse523 .cse524 (res .cse8 .cse143 (res .cse29 .cse525 (res .cse28 .cse31 (res .cse429 .cse526 (res .cse431 .cse432 (res .cse10 (res .cse2 (res .cse49 (res .cse53 (res .cse51 (res .cse517 .cse518 (res .cse519 (res .cse520 (res .cse356 (res .cse345 (res .cse102 .cse527 (res .cse101 .cse118 (res .cse548 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse549 (! (res .cse449 .cse450 (res .cse155 .cse156 (res .cse550 .cse551 (farkas 1 .cse550 1 .cse155 1 .cse449 1 .cse358)))) :proves (+ .cse549 - .cse83 - .cse419 - .cse358) :LA ((- 1) (- 1) (- 1) 1)) (res .cse552 .cse553 (! (res .cse554 .cse555 (farkas 1 .cse83 1 .cse554 1 .cse419 1 .cse552)) :proves (- .cse83 - .cse102 - .cse419 - .cse552) :LA (1 (- 1) 1 1)))))) .cse556))) .cse357) .cse540) .cse542) .cse543)) .cse54) .cse60) .cse117) .cse539) .cse557)))))))))) .cse477) (! (res .cse558 .cse559 (farkas 1 .cse90 1 .cse83 1 .cse558 1 .cse419)) :proves (- .cse90 - .cse83 - .cse421 - .cse419) :LA (1 1 (- 1) 1))))) .cse145) .cse169) .cse362)) .cse176) .cse177)))))) .cse544)))))) :proves (- .cse178 - .cse415 - .cse76 - .cse37) :rup))) (res .cse178 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse72 .cse302 (res .cse421 (res .cse147 (res .cse148 (! (res .cse149 .cse150 (farkas 1 .cse149 1 .cse83 1 .cse187 1 .cse419)) :proves (+ .cse148 - .cse83 - .cse187 - .cse419) :LA ((- 1) 1 1 1)) (res .cse151 .cse152 (! (res .cse449 .cse450 (res .cse451 .cse452 (res .cse155 .cse156 (farkas 1 .cse155 1 .cse451 1 .cse449 1 .cse151)))) :proves (- .cse83 - .cse187 - .cse419 - .cse151) :LA ((- 1) (- 1) (- 1) 1)))) (res .cse489 (res .cse422 (res .cse6 .cse159 (res .cse490 (res .cse57 (res .cse167 .cse168 (res .cse144 .cse169 (res .cse191 .cse237 (res .cse189 (res .cse246 (res .cse192 (res .cse250 .cse251 (res .cse142 (res .cse195 (res .cse8 .cse143 (res .cse197 .cse198 (res .cse28 (res .cse29 (res .cse2 (res .cse49 (res .cse53 (res .cse51 (let-proof ((.cse496 (! .cse504 :proves (+ .cse486 + .cse492 - .cse493) :trichotomy))) (res .cse431 (res .cse429 (res .cse427 (res .cse423 (res .cse269 .cse491 (res .cse492 (res .cse493 (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse139 .cse140 (res .cse494 .cse495 (farkas 1 .cse494 1 .cse139 1 .cse263 1 .cse269 1 .cse417))))) :proves (+ .cse493 - .cse37 - .cse76 - .cse269 - .cse415) :LA ((- 1) (- 1) (- 1) 1 (- 1))) .cse496) (res .cse497 .cse498 (res .cse105 (! (res .cse64 .cse65 (res .cse115 .cse116 (res .cse499 .cse500 (trans 0 .cse110 .cse15 .cse62 .cse317)))) :proves (+ .cse105 - .cse417 - .cse74 - .cse55 - .cse497) :trans (0 .cse110 .cse15 .cse62 .cse317)) .cse426)))) .cse428) .cse430) .cse432) (! (res .cse87 (res .cse85 .cse86 (res .cse417 .cse418 (res .cse55 .cse483 (res .cse74 .cse247 (res .cse486 (res .cse178 (res .cse182 .cse183 (res .cse101 (res .cse102 (res .cse492 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 (res .cse493 (! (res .cse417 .cse476 (res .cse263 .cse264 (res .cse139 .cse140 (res .cse494 .cse495 (farkas 1 .cse494 1 .cse139 1 .cse263 1 .cse417 1 .cse269))))) :proves (+ .cse493 - .cse37 - .cse76 - .cse415 - .cse269) :LA ((- 1) (- 1) (- 1) (- 1) 1)) .cse496)))) (res .cse497 .cse498 (res .cse105 (! (res .cse103 (res .cse415 (symm .cse110 0) (trans .cse317 .cse62 .cse15 .cse110 0)) .cse501) :proves (+ .cse105 - .cse497 - .cse55 - .cse74 - .cse417) :trans (.cse317 .cse62 .cse15 .cse110 0)) .cse433))) .cse118) .cse434)) .cse502) .cse503))))) .cse131) :proves (- .cse431 - .cse415 + .cse49 + .cse422 - .cse76 - .cse72 + .cse51 - .cse37) :rup))) .cse54) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse55 .cse483 (res .cse484 .cse485 (res .cse487 .cse488 (res .cse505 (res .cse35 .cse506 (res .cse160 .cse507 (res .cse51 (! (res .cse508 .cse509 (res .cse510 (res .cse511 .cse512 (farkas 1 .cse508 1 .cse511)) (farkas 1 .cse53 1 .cse510))) :proves (- .cse53 + .cse51) :EQ) (res .cse269 (res .cse221 .cse222 (res .cse61 (! (res .cse244 .cse245 (res .cse16 .cse17 (trans .cse12 .cse126 .cse14 1 .cse63))) :proves (+ .cse61 - .cse221 - .cse182 - .cse6 - .cse160) :trans (.cse12 .cse126 .cse14 1 .cse63)) (res .cse68 .cse69 (res .cse423 .cse491 (res .cse427 .cse428 (! (res .cse40 .cse41 (res .cse70 .cse71 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse37 4 .cse427 4 .cse76 4 .cse250 1 .cse46 1 .cse44 4 .cse70 4 .cse415 1 .cse24 1 .cse40))))) :proves (- .cse37 - .cse427 - .cse76 - .cse250 - .cse33 + .cse32 - .cse68 - .cse415 - .cse24 - .cse22) :LA (4 4 4 4 (- 1) (- 1) (- 4) 4 1 (- 1)))))))) (! (res .cse513 .cse514 (farkas 1 .cse269 1 .cse513)) :proves (- .cse269 - .cse51) :LA (1 (- 1))))))) .cse515))))) .cse48))) :proves (- .cse415 + .cse49 - .cse53 - .cse250 - .cse182 - .cse6 - .cse76 - .cse37) :rup)) .cse117) .cse30) .cse31) .cse516))) .cse236) .cse190)) .cse293) .cse313) (! (res (= s .cse240) (symm s .cse240) (trans .cse239 s .cse240 x)) :proves (+ .cse184 - .cse186 - .cse189 - .cse191) :trans (.cse239 s .cse240 x)))))) (! (res .cse393 .cse394 (res .cse417 .cse418 (res .cse55 .cse483 (res .cse74 .cse247 (res .cse78 (res .cse303 .cse304 (res .cse186 .cse312 (res .cse419 .cse420 (res .cse178 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse72 .cse302 (res .cse421 (res .cse517 .cse518 (res .cse519 (res .cse422 (res .cse520 (res .cse521 .cse522 (res .cse294 .cse295 (res .cse523 .cse524 (res .cse29 .cse525 (res .cse28 .cse31 (res .cse429 .cse526 (res .cse431 .cse432 (res .cse221 (res .cse356 (res .cse345 (res .cse53 (res .cse51 (res .cse101 (res .cse102 (res .cse49 .cse527 (res .cse2 .cse117 (res .cse8 (res .cse142 .cse143 (res .cse144 .cse145 (res .cse189 .cse190 (res .cse192 (res .cse193 .cse194 (res .cse528 (res .cse529 (res .cse195 (res .cse197 .cse198 (res .cse228 .cse229 (! (res .cse530 .cse531 (trans .cse317 3 .cse12 .cse230 .cse13)) :proves (+ .cse529 - .cse2 - .cse431 - .cse228 - .cse197) :trans (.cse317 3 .cse12 .cse230 .cse13)))) .cse236) (! (res .cse532 .cse533 (res .cse534 (res .cse535 .cse536 (farkas 1 .cse529 1 .cse535)) (farkas 1 .cse532 1 .cse534))) :proves (- .cse529 + .cse528) :EQ)) (! (res .cse537 .cse538 (farkas 1 .cse83 1 .cse528 1 .cse537 1 .cse187 1 .cse419 1 .cse193)) :proves (- .cse83 - .cse528 - .cse49 - .cse187 - .cse419 - .cse193) :LA (1 1 (- 1) 1 1 1)))) .cse238)))) .cse539))) .cse118) .cse434) .cse54) .cse222) .cse357) .cse540) .cse541)))))))) .cse542) .cse477) .cse543)) .cse478)))) .cse502)))) .cse544))))) :proves (- .cse415 - .cse57 - .cse83 - .cse76 - .cse37) :rup)) .cse545)) .cse477) (! (res .cse449 .cse450 (res .cse155 .cse156 (res .cse546 .cse547 (farkas 1 .cse546 1 .cse155 1 .cse415 1 .cse449)))) :proves (- .cse489 - .cse83 - .cse415 - .cse419) :LA ((- 1) (- 1) 1 (- 1))))) .cse478)))) .cse502)))))))) .cse544)) .cse503)))) .cse395) (! (res .cse137 .cse138 (farkas 1 .cse137 1 .cse415)) :proves (- .cse26 - .cse415) :LA ((- 1) 1)))) .cse131)) :proves (- .cse83 - .cse415 - .cse76 - .cse37) :rup)))) .cse544)))) :proves (- .cse415 - .cse76 - .cse37) :rup))) (res .cse76 (res .cse55 (res .cse248 .cse249 (res .cse246 .cse337 (res .cse172 .cse336 (res .cse144 (res .cse170 (res .cse175 (res .cse142 (res .cse178 (res .cse341 (res .cse8 .cse143 (res .cse88 .cse89 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse72 .cse342 (res .cse83 .cse343 (res .cse78 (res .cse303 .cse304 (res .cse186 .cse312 (res .cse419 .cse420 (res .cse421 (res .cse422 (let ((.cse466 (+ .cse62 (- 1))) (.cse456 (+ .cse13 (- 1)))) (let ((.cse441 (= 1 .cse13)) (.cse439 (= .cse456 0)) (.cse437 (= 1 .cse62)) (.cse435 (= .cse466 0))) (let-proof ((.cse436 (let ((.cse469 (<= .cse466 0))) (res .cse469 (! (let ((.cse470 (<= 1 .cse466))) (res .cse470 (total-int .cse466 0) (farkas 1 .cse470 1 .cse37 1 .cse338 1 .cse415))) :proves (+ .cse469 - .cse37 - .cse338 - .cse415) :LA ((- 1) 1 1 1)) (res .cse471 (! (let ((.cse472 (< .cse466 0))) (res .cse472 (let ((.cse473 (< 0 .cse466))) (res .cse473 (trichotomy .cse466 0) (farkas 1 .cse473 1 .cse469))) (res .cse474 .cse475 (farkas 1 .cse474 1 .cse472)))) :proves (+ .cse471 + .cse435 - .cse469) :trichotomy) (! (res .cse417 .cse476 (res .cse349 .cse350 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse349 1 .cse417 1 .cse471)))) :proves (- .cse37 - .cse338 - .cse415 - .cse471) :LA ((- 1) (- 1) (- 1) 1)))))) (.cse438 (! (let ((.cse465 (= 0 .cse466))) (res .cse465 (symm 0 .cse466) (let ((.cse467 (< 1 .cse62))) (res .cse467 (let ((.cse468 (< .cse62 1))) (res .cse468 (trichotomy 1 .cse62) (farkas 1 .cse465 1 .cse468))) (farkas 1 .cse435 1 .cse467))))) :proves (+ .cse437 - .cse435) :EQ)) (.cse440 (let ((.cse459 (<= .cse456 0))) (res .cse459 (! (let ((.cse460 (<= 1 .cse456))) (res .cse460 (total-int .cse456 0) (farkas 1 .cse460 1 .cse88 1 .cse83 1 .cse187 1 .cse419))) :proves (+ .cse459 - .cse88 - .cse83 - .cse187 - .cse419) :LA ((- 1) 1 1 1 1)) (! (let ((.cse461 (< .cse456 0))) (res .cse461 (let ((.cse462 (< 0 .cse456))) (res .cse462 (trichotomy .cse456 0) (farkas 1 .cse462 1 .cse459))) (res .cse463 .cse464 (farkas 1 .cse463 1 .cse461)))) :proves (+ .cse305 + .cse439 - .cse459) :trichotomy)))) (.cse442 (! (let ((.cse455 (= 0 .cse456))) (res .cse455 (symm 0 .cse456) (let ((.cse457 (< 1 .cse13))) (res .cse457 (let ((.cse458 (< .cse13 1))) (res .cse458 (trichotomy 1 .cse13) (farkas 1 .cse455 1 .cse458))) (farkas 1 .cse439 1 .cse457))))) :proves (+ .cse441 - .cse439) :EQ)) (.cse443 (! (res (= .cse13 1) (symm .cse13 1) (res .cse66 .cse67 (trans .cse12 .cse13 1 .cse62 .cse63))) :proves (+ .cse61 - .cse10 - .cse441 - .cse437 - .cse57) :trans (.cse12 .cse13 1 .cse62 .cse63))) (.cse444 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse70 .cse71 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 8 .cse37 8 .cse294 8 .cse338 1 .cse46 1 .cse44 4 .cse70 4 .cse42 8 .cse415 1 .cse24 1 .cse40)))))) :proves (- .cse37 - .cse294 - .cse338 - .cse33 + .cse32 - .cse68 - .cse28 - .cse415 - .cse24 - .cse22) :LA (8 8 8 (- 1) (- 1) (- 4) (- 4) 8 1 (- 1)))) (.cse445 (! (res .cse449 .cse450 (res .cse451 .cse452 (res .cse155 .cse156 (res .cse453 .cse454 (farkas 1 .cse453 1 .cse155 1 .cse451 1 .cse449 1 .cse305))))) :proves (- .cse88 - .cse83 - .cse187 - .cse419 - .cse305) :LA ((- 1) (- 1) (- 1) (- 1) 1)))) (res .cse53 (res .cse51 (res .cse2 (res .cse49 (res .cse423 (! (res .cse87 (res .cse85 .cse86 (res .cse105 (res .cse103 (res .cse102 (res .cse346 .cse347 (res .cse358 .cse424 (res .cse269 .cse425 .cse271))) (res .cse101 .cse118 (res .cse286 .cse377 (! (res .cse115 .cse116 (trans 0 .cse110 .cse15 .cse109)) :proves (+ .cse423 - .cse417 - .cse74 - .cse286) :trans (0 .cse110 .cse15 .cse109))))) .cse106) .cse426)) .cse131) :proves (+ .cse423 - .cse417 + .cse51 + .cse49 - .cse74) :rup) (res .cse427 .cse428 (res .cse429 .cse430 (res .cse431 .cse432 (res .cse101 (res .cse102 (res .cse103 .cse104 (res .cse105 .cse106 .cse433)) .cse118) .cse434))))) .cse117) (! (res .cse393 .cse394 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse384 (res .cse74 .cse385 (res .cse37 .cse335 (res .cse76 (res .cse55 (res .cse248 .cse249 (res .cse246 .cse337 (res .cse172 .cse336 (res .cse144 (res .cse170 (res .cse175 (res .cse338 .cse339 (res .cse142 (res .cse435 .cse436 (res .cse437 .cse438 (res .cse167 (res .cse178 (res .cse341 (res .cse8 .cse143 (res .cse88 .cse89 (res .cse57 .cse168 (res .cse294 .cse295 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse72 .cse342 (res .cse83 .cse343 (res .cse78 (res .cse303 .cse304 (res .cse186 .cse312 (res .cse419 .cse420 (res .cse305 (res .cse439 .cse440 (res .cse441 .cse442 (res .cse29 .cse30 (res .cse28 .cse31 (res .cse61 (res .cse10 .cse11 .cse443) (res .cse68 .cse69 .cse444)))))) .cse445)))) .cse446))))))))) .cse362) .cse181) .cse169))) .cse145)) .cse177) .cse315) .cse313)))) .cse77) .cse447))) .cse448)) .cse48)))) :proves (- .cse2 - .cse415) :rup)) .cse54) (! (res .cse393 .cse394 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse384 (res .cse74 .cse385 (res .cse37 .cse335 (res .cse76 (res .cse55 (res .cse248 .cse249 (res .cse246 .cse337 (res .cse172 .cse336 (res .cse144 (res .cse170 (res .cse175 (res .cse338 .cse339 (res .cse142 (res .cse435 .cse436 (res .cse437 .cse438 (res .cse167 (res .cse178 (res .cse341 (res .cse8 .cse143 (res .cse88 .cse89 (res .cse57 .cse168 (res .cse294 .cse295 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse72 .cse342 (res .cse83 .cse343 (res .cse78 (res .cse303 .cse304 (res .cse186 .cse312 (res .cse419 .cse420 (res .cse305 (res .cse439 .cse440 (res .cse441 .cse442 (res .cse10 .cse60 (res .cse61 .cse443 (res .cse68 .cse69 (res .cse29 .cse59 (res .cse28 .cse31 .cse444))))))) .cse445)))) .cse446))))))))) .cse362) .cse181) .cse169))) .cse145)) .cse177) .cse315) .cse313)))) .cse77) .cse447))) .cse448)) .cse48)))) :proves (- .cse53 - .cse415) :rup))))) .cse477) .cse478)))) .cse446))))))) .cse362) .cse181) .cse145) .cse177) .cse315) .cse313)))) .cse77) .cse447)))))))) .cse448)))) .cse131))) :proves (- .cse415) :rup)) :proves (+ .cse414) :rup) (! (and- 1 .cse414) :proves (- .cse414 + .cse184) :input)) :proves (+ .cse184) :rup))) (let ((.cse382 (+ .cse109 (- 2)))) (let-proof ((.cse388 (! (res .cse408 .cse409 (res .cse184 .cse185 (res .cse398 .cse399 (res .cse410 (! (res .cse411 .cse412 (res .cse401 .cse402 (trans 37 percent .cse239 x 120))) :proves (+ .cse410 - .cse408 - .cse386 - .cse184 - .cse398) :trans (37 percent .cse239 x 120)) .cse413)))) :proves (- .cse386) :rup))) (let ((.cse275 (= .cse382 0)) (.cse272 (= 2 .cse109))) (let-proof ((.cse73 (! (res .cse341 .cse342 (! (res .cse386 .cse407 .cse388) :proves (- .cse341) :rup)) :proves (+ .cse72) :rup)) (.cse320 (! (res .cse396 .cse397 (res .cse184 .cse185 (res .cse398 .cse399 (let ((.cse400 (= 115 120))) (res .cse400 (! (res .cse401 .cse402 (res .cse403 .cse404 (trans 115 s .cse239 x 120))) :proves (+ .cse400 - .cse396 - .cse186 - .cse184 - .cse398) :trans (115 s .cse239 x 120)) (! (res .cse405 (symm 120 115) .cse406) :proves (- .cse400) :EQ)))))) :proves (- .cse186) :rup)) (.cse27 (! (res .cse393 .cse394 (res .cse184 .cse185 .cse395)) :proves (+ .cse26) :rup)) (.cse323 (! (cong (s_count 1) (s_count .cse317)) :proves (+ .cse223 - .cse101) :cong (.cse126 .cse12))) (.cse376 (res .cse389 .cse390 (res .cse92 .cse93 (! (res .cse391 .cse392 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 1 .cse46 1 .cse44 4 .cse92 4 .cse26 1 .cse24 1 .cse40 4 .cse391))))) :proves (- .cse33 + .cse32 - .cse92 - .cse26 - .cse24 - .cse22 - .cse389) :LA ((- 1) (- 1) 4 4 1 (- 1) (- 4)))))) (.cse378 (trans 0 .cse13 .cse14 .cse126 .cse12))) (let-proof ((.cse75 (! (res .cse384 .cse385 (! (res .cse386 .cse387 .cse388) :proves (- .cse384) :rup)) :proves (+ .cse74) :rup)) (.cse296 (res .cse346 .cse347 (res .cse269 .cse383 .cse271))) (.cse276 (! (let ((.cse379 (= .cse109 2))) (res .cse379 (symm .cse109 2) (let ((.cse380 (< .cse382 0))) (res .cse380 (let ((.cse381 (< 0 .cse382))) (res .cse381 (trichotomy .cse382 0) (farkas 1 .cse379 1 .cse381))) (farkas 1 .cse272 1 .cse380))))) :proves (- .cse272 + .cse275) :EQ)) (.cse297 (! (res .cse223 .cse224 .cse378) :proves (+ .cse50 - .cse243 - .cse8 - .cse182 - .cse221) :trans (0 .cse13 .cse14 .cse126 .cse12))) (.cse281 (res .cse92 .cse93 (! (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse275 1 .cse46 1 .cse44 4 .cse92 1 .cse24 1 .cse40)))) :proves (- .cse275 - .cse33 + .cse32 - .cse92 - .cse24 - .cse22) :LA (4 (- 1) (- 1) 4 1 (- 1))))) (.cse300 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse32 (res .cse33 .cse34 (res .cse374 (res .cse286 .cse377 (! (res .cse115 .cse116 (trans .cse110 .cse15 .cse109)) :proves (+ .cse374 - .cse74 - .cse286) :trans (.cse110 .cse15 .cse109))) (res .cse50 (res .cse223 .cse323 (! .cse378 :proves (+ .cse50 - .cse243 - .cse8 - .cse182 - .cse223) :trans (0 .cse13 .cse14 .cse126 .cse12))) .cse376))) .cse48)))) :proves (- .cse101 - .cse243 - .cse8 - .cse182 - .cse74) :rup)) (.cse301 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse32 (res .cse33 .cse34 (res .cse374 .cse375 (res .cse50 (res .cse321 .cse322 (! (trans 0 .cse13 .cse14 .cse126 .cse125 .cse12) :proves (+ .cse50 - .cse243 - .cse8 - .cse182 - .cse72 - .cse321) :trans (0 .cse13 .cse14 .cse126 .cse125 .cse12))) .cse376))) .cse48)))) :proves (- .cse105 - .cse243 - .cse72 - .cse182 - .cse8) :rup)) (.cse314 (! (res (= x .cse239) (symm x .cse239) (trans .cse364 x .cse239 s)) :proves (+ .cse170 - .cse246 - .cse184 - .cse186) :trans (.cse364 x .cse239 s))) (.cse79 (! (res .cse303 .cse304 (! (res .cse186 .cse312 .cse320) :proves (- .cse303) :rup)) :proves (+ .cse78) :rup)) (.cse84 (! (res .cse72 .cse73 .cse343) :proves (+ .cse83) :rup))) (let ((.cse4 (= 1 .cse15))) (let-proof ((.cse82 (! (res .cse129 (! (res .cse368 (res .cse369 (! (res .cse78 .cse79 (res .cse83 .cse84 .cse370)) :proves (+ .cse369) :rup) .cse371) (! (res .cse78 .cse79 (res .cse83 .cse84 .cse372)) :proves (- .cse368) :rup)) :proves (+ .cse129) :rup) .cse373) :proves (+ .cse81) :rup)) (.cse225 (trans 0 .cse126 .cse12)) (.cse292 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse32 (res .cse184 .cse185 (res .cse33 .cse34 (res .cse172 .cse336 (res .cse246 .cse337 (res .cse338 .cse339 (res .cse175 (res .cse340 (res .cse144 (res .cse170 (res .cse186 (res .cse341 (res .cse167 (res .cse142 (res .cse178 (res .cse303 (res .cse72 .cse342 (res .cse83 .cse343 (res .cse57 .cse168 (res .cse294 .cse295 (res .cse8 .cse143 (res .cse88 .cse89 (res .cse182 .cse183 (res .cse187 .cse188 (res .cse78 .cse304 (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (res .cse105 (res .cse103 (res .cse49 (! (res .cse26 .cse27 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse74 .cse247 (res .cse294 .cse295 (res .cse101 (res .cse102 (res .cse344 (res .cse51 .cse296 (res .cse345 (res .cse346 .cse347 (res .cse348 (! (res .cse137 .cse138 (res .cse349 .cse350 (res .cse351 .cse352 (res .cse139 .cse140 (res .cse353 .cse354 (farkas 1 .cse353 1 .cse139 1 .cse351 1 .cse349 1 .cse137 1 .cse346)))))) :proves (+ .cse348 - .cse37 - .cse294 - .cse338 - .cse26 - .cse346) :LA ((- 1) (- 1) (- 1) (- 1) (- 1) 1)) .cse355)) (res .cse53 .cse54 (res .cse356 .cse357 (res .cse29 .cse59 (res .cse272 (! (res .cse273 .cse274 (trans 2 .cse317 .cse63 .cse109)) :proves (+ .cse272 - .cse53 - .cse356 - .cse29) :trans (2 .cse317 .cse63 .cse109)) (res .cse275 .cse276 (res .cse221 .cse222 (res .cse50 .cse297 .cse281))))))))) (res .cse269 (res .cse358 (! (res .cse359 .cse360 (farkas 1 .cse37 1 .cse294 1 .cse338 1 .cse344 1 .cse26 1 .cse359)) :proves (- .cse37 - .cse294 - .cse338 - .cse344 - .cse26 + .cse358) :LA (1 1 1 1 1 (- 1))) .cse361) .cse271)) .cse118) .cse300)))) .cse131)) .cse48)))) :proves (+ .cse49 - .cse338 - .cse57 - .cse8 - .cse182 + .cse103 - .cse243 - .cse37) :rup) (res .cse2 .cse117 (res .cse29 .cse30 (res .cse28 .cse31 (res .cse10 .cse11 (res .cse231 .cse232 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse233 .cse234 (farkas 4 .cse233 4 .cse294 4 .cse88 4 .cse83 1 .cse46 1 .cse44 4 .cse187 4 .cse42 4 .cse26 1 .cse24 4 .cse78 4 .cse37 4 .cse338 1 .cse40)))))) :proves (- .cse231 - .cse294 - .cse88 - .cse83 - .cse33 + .cse32 - .cse187 - .cse28 - .cse26 - .cse24 - .cse78 - .cse37 - .cse338 - .cse22) :LA ((- 4) 4 4 4 (- 1) (- 1) 4 (- 4) 4 1 4 4 4 (- 1))))))))) .cse106) .cse301))) .cse311))))))))))) .cse312) .cse181) .cse145) .cse169) .cse362) .cse314) .cse315) (! (res .cse365 .cse366 (trans .cse363 percent .cse364 x)) :proves (+ .cse340 - .cse172 - .cse144 - .cse246) :trans (.cse363 percent .cse364 x))) .cse367) .cse177)))))) .cse48)))) :proves (- .cse248 - .cse37) :rup)) (.cse38 (! (res .cse74 .cse75 .cse335) :proves (+ .cse37) :rup))) (let-proof ((.cse5 (! (let ((.cse327 (+ .cse15 (- 1)))) (let ((.cse324 (= .cse327 0))) (res .cse324 (! (res .cse26 .cse27 (res .cse37 .cse38 (let ((.cse325 (<= .cse327 0))) (res .cse325 (! (let ((.cse326 (<= 1 .cse327))) (res .cse326 (total-int .cse327 0) (farkas 1 .cse326 1 .cse37 1 .cse26))) :proves (+ .cse325 - .cse37 - .cse26) :LA ((- 1) 1 1)) (let ((.cse328 (<= .cse15 0))) (res .cse328 (! (let ((.cse329 (< .cse327 0))) (res .cse329 (let ((.cse330 (< 0 .cse327))) (res .cse330 (trichotomy .cse327 0) (farkas 1 .cse330 1 .cse325))) (let ((.cse331 (<= 1 .cse15))) (res .cse331 (total-int .cse15 0) (farkas 1 .cse331 1 .cse329))))) :proves (+ .cse328 + .cse324 - .cse325) :trichotomy) (! (res .cse137 .cse138 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse137 1 .cse328))) :proves (- .cse37 - .cse26 - .cse328) :LA ((- 1) (- 1) 1)))))))) :proves (+ .cse324) :rup) (! (let ((.cse332 (= 0 .cse327))) (res .cse332 (symm 0 .cse327) (let ((.cse333 (< 1 .cse15))) (res .cse333 (let ((.cse334 (< .cse15 1))) (res .cse334 (trichotomy 1 .cse15) (farkas 1 .cse332 1 .cse334))) (farkas 1 .cse324 1 .cse333))))) :proves (+ .cse4 - .cse324) :EQ)))) :proves (+ .cse4) :rup)) (.cse56 (! (res .cse248 .cse249 (! (res .cse37 .cse38 .cse292) :proves (- .cse248) :rup)) :proves (+ .cse55) :rup)) (.cse52 (! (res .cse72 .cse73 (res .cse81 .cse82 (res .cse85 .cse86 (res .cse87 (res .cse101 (res .cse102 (res .cse103 .cse104 (res .cse105 .cse106 (res .cse321 .cse322 (! (trans 0 .cse126 .cse125 .cse12) :proves (+ .cse50 - .cse81 - .cse72 - .cse321) :trans (0 .cse126 .cse125 .cse12))))) .cse118) (! (res .cse81 .cse82 (res .cse223 .cse323 (! .cse225 :proves (+ .cse50 - .cse81 - .cse223) :trans (0 .cse126 .cse12)))) :proves (- .cse101 + .cse50) :rup)) .cse131)))) :proves (+ .cse51 + .cse49 + .cse50) :rup))) (let-proof ((.cse179 (! (res .cse182 .cse183 (! (res .cse4 .cse5 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse55 .cse56 (res .cse32 (res .cse184 .cse185 (res .cse81 .cse82 (res .cse33 .cse34 (res .cse186 (res .cse187 .cse188 (res .cse8 (res .cse142 .cse143 (res .cse189 .cse190 (res .cse191 (res .cse144 .cse145 (res .cse192 (res .cse167 (res .cse193 .cse194 (res .cse195 (res .cse196 (res .cse57 .cse168 (res .cse197 .cse198 (res .cse199 (! (res .cse200 (res .cse201 (res .cse202 .cse203 (and- 1 .cse202)) (and- 1 .cse201)) (res .cse204 (not+ .cse204) (=>- .cse200))) :proves (+ .cse196 + .cse199) :input) (let ((.cse207 (= .cse63 .cse206)) (.cse205 (= 1 .cse206))) (let-proof ((.cse208 (symm .cse63 .cse206))) (res .cse205 (! (res .cse64 .cse65 (res .cse66 .cse67 (res .cse207 .cse208 (trans 1 .cse15 .cse62 .cse63 .cse206)))) :proves (+ .cse205 - .cse4 - .cse55 - .cse57 - .cse199) :trans (1 .cse15 .cse62 .cse63 .cse206)) (let ((.cse212 (+ .cse206 .cse235))) (let ((.cse209 (= .cse212 0))) (res .cse209 (! (res .cse207 .cse208 (let ((.cse210 (< .cse212 0))) (res .cse210 (let ((.cse211 (< 0 .cse212))) (res .cse211 (trichotomy .cse212 0) (farkas 1 .cse199 1 .cse211))) (farkas 1 .cse207 1 .cse210)))) :proves (- .cse199 + .cse209) :EQ) (let ((.cse217 (+ .cse206 (- 1)))) (let ((.cse213 (= .cse217 0))) (res .cse213 (! (let ((.cse214 (= .cse206 1))) (res .cse214 (symm .cse206 1) (let ((.cse215 (< .cse217 0))) (res .cse215 (let ((.cse216 (< 0 .cse217))) (res .cse216 (trichotomy .cse217 0) (farkas 1 .cse214 1 .cse216))) (farkas 1 .cse205 1 .cse215))))) :proves (- .cse205 + .cse213) :EQ) (let ((.cse226 (= 0 .cse212))) (let-proof ((.cse227 (symm 0 .cse212))) (res .cse2 (res .cse49 (let-proof ((.cse220 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse226 .cse227 (res .cse46 .cse47 (farkas 4 .cse213 1 .cse46 4 .cse226 1 .cse44 4 .cse92 4 .cse42 1 .cse24 1 .cse40)))))) :proves (- .cse213 - .cse33 - .cse209 + .cse32 - .cse92 - .cse28 - .cse24 - .cse22) :LA (4 (- 1) (- 4) (- 1) 4 (- 4) 1 (- 1))))) (res .cse51 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse55 .cse56 (res .cse74 .cse75 (res .cse33 .cse34 (res .cse85 .cse86 (res .cse87 (res .cse50 .cse52 (res .cse92 .cse93 (res .cse28 (res .cse29 (res .cse101 (res .cse102 (res .cse103 .cse104 (res .cse105 .cse106 .cse218)) .cse118) .cse219) .cse31) .cse220))) .cse131))))) .cse48))) :proves (- .cse209 - .cse213 + .cse51 + .cse49 - .cse57) :rup) (res .cse53 .cse54 (res .cse221 .cse222 (res .cse50 (! (res .cse223 .cse224 .cse225) :proves (+ .cse50 - .cse81 - .cse221) :trans (0 .cse126 .cse12)) (res .cse92 .cse93 (res .cse28 (res .cse29 .cse59 .cse31) .cse220))))))) .cse117) (! (res .cse78 .cse79 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse83 .cse84 (res .cse29 .cse30 (res .cse28 .cse31 (res .cse228 .cse229 (res .cse10 (! (trans .cse12 .cse230 .cse13) :proves (+ .cse10 - .cse228 - .cse197) :trans (.cse12 .cse230 .cse13)) (res .cse231 .cse232 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse226 .cse227 (res .cse46 .cse47 (res .cse233 .cse234 (farkas 4 .cse233 4 .cse213 4 .cse83 1 .cse46 4 .cse226 1 .cse44 4 .cse187 4 .cse42 1 .cse24 1 .cse40 4 .cse78 4 .cse193))))))) :proves (- .cse231 - .cse213 - .cse83 - .cse33 - .cse209 + .cse32 - .cse187 - .cse28 - .cse24 - .cse22 - .cse78 - .cse193) :LA ((- 4) 4 4 (- 1) (- 4) (- 1) 4 (- 4) 1 (- 1) 4 4))))))))) .cse48)))) :proves (- .cse2 - .cse187 - .cse197 - .cse209 - .cse213 - .cse193) :rup)))))))))))))))) (! (and- 0 .cse196) :proves (- .cse196 + .cse192) :input)) .cse236)) .cse237) .cse238)) (! (res .cse241 .cse242 (trans .cse239 x .cse240 s)) :proves (+ .cse186 - .cse184 - .cse191 - .cse189) :trans (.cse239 x .cse240 s))))) (! (res .cse72 .cse73 (res .cse81 .cse82 (res .cse83 .cse84 (res .cse37 .cse38 (res .cse243 (! (res .cse244 .cse245 (res .cse113 .cse114 (trans 0 .cse126 .cse14 .cse13))) :proves (+ .cse243 - .cse81 - .cse182 - .cse8) :trans (0 .cse126 .cse14 .cse13)) (let-proof ((.cse298 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse37 4 .cse294 4 .cse76 1 .cse46 4 .cse92 1 .cse44 4 .cse42 4 .cse26 1 .cse24 1 .cse40))))) :proves (- .cse37 - .cse294 - .cse76 - .cse33 - .cse92 + .cse32 - .cse28 - .cse26 - .cse24 - .cse22) :LA (4 4 4 (- 1) 4 (- 1) (- 4) 4 1 (- 1)))) (.cse318 (trans 0 .cse13 .cse12))) (let-proof ((.cse282 (! (res .cse316 .cse319 .cse318) :proves (+ .cse50 - .cse243 - .cse10) :trans (0 .cse13 .cse12))) (.cse299 (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse32 (res .cse33 .cse34 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse29 .cse30 (res .cse28 .cse31 (res .cse92 (res .cse50 (res .cse316 (! (cong (s_count 3) (s_count .cse317)) :proves (+ .cse316 - .cse2) :cong (.cse13 .cse12)) (! .cse318 :proves (+ .cse50 - .cse243 - .cse316) :trans (0 .cse13 .cse12))) .cse93) .cse298))))) .cse292)) .cse48)))) :proves (- .cse2 - .cse243 - .cse294 - .cse37) :rup))) (res .cse246 (! (res .cse26 .cse27 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse32 (res .cse33 .cse34 (res .cse87 (res .cse85 .cse86 (res .cse74 .cse247 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse105 (res .cse103 (res .cse101 (res .cse102 (res .cse57 (res .cse167 .cse168 (res .cse191 .cse237 (res .cse144 .cse169 (res .cse192 (res .cse250 .cse251 (let ((.cse255 (+ .cse63 (- 2)))) (let ((.cse252 (= .cse255 0))) (res .cse252 (let ((.cse253 (<= .cse255 0))) (res .cse253 (! (let ((.cse254 (<= 1 .cse255))) (res .cse254 (total-int .cse255 0) (farkas 1 .cse254 1 .cse37 1 .cse76 1 .cse250 1 .cse26))) :proves (+ .cse253 - .cse37 - .cse76 - .cse250 - .cse26) :LA ((- 1) 1 1 1 1)) (res .cse256 (! (let ((.cse257 (< .cse255 0))) (res .cse257 (let ((.cse258 (< 0 .cse255))) (res .cse258 (trichotomy .cse255 0) (farkas 1 .cse258 1 .cse253))) (res .cse259 .cse260 (farkas 1 .cse259 1 .cse257)))) :proves (+ .cse256 + .cse252 - .cse253) :trichotomy) (! (res .cse137 .cse138 (res .cse261 .cse262 (res .cse263 .cse264 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse263 1 .cse261 1 .cse137 1 .cse256))))) :proves (- .cse37 - .cse76 - .cse250 - .cse26 - .cse256) :LA ((- 1) (- 1) (- 1) (- 1) 1))))) (let ((.cse265 (= 2 .cse63))) (res .cse265 (! (let ((.cse266 (= 0 .cse255))) (res .cse266 (symm 0 .cse255) (let ((.cse267 (< 2 .cse63))) (res .cse267 (let ((.cse268 (< .cse63 2))) (res .cse268 (trichotomy 2 .cse63) (farkas 1 .cse266 1 .cse268))) (farkas 1 .cse252 1 .cse267))))) :proves (+ .cse265 - .cse252) :EQ) (res .cse195 (res .cse197 .cse198 (res .cse53 (res .cse51 (res .cse49 (res .cse269 .cse270 .cse271) (res .cse2 .cse117 (res .cse29 .cse30 (res .cse272 (! (res .cse273 .cse274 (trans 2 .cse63 .cse109)) :proves (+ .cse272 - .cse265 - .cse29) :trans (2 .cse63 .cse109)) (res .cse275 .cse276 (res .cse228 .cse229 (res .cse50 (! (res .cse277 .cse278 (res .cse279 .cse280 (trans 0 .cse13 .cse230 .cse12))) :proves (+ .cse50 - .cse243 - .cse197 - .cse228) :trans (0 .cse13 .cse230 .cse12)) .cse281))))))) .cse54) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse32 (res .cse33 .cse34 (res .cse248 (res .cse55 .cse249 (res .cse10 .cse60 (res .cse50 .cse282 (res .cse92 .cse93 (res .cse283 (res .cse100 .cse284 (! (trans .cse109 .cse62 .cse15) :proves (+ .cse283 - .cse100 - .cse55) :trans (.cse109 .cse62 .cse15))) (let ((.cse289 (+ .cse15 .cse291))) (let ((.cse285 (= .cse289 0))) (res .cse285 (! (res .cse286 (symm .cse15 .cse109) (let ((.cse287 (< .cse289 0))) (res .cse287 (let ((.cse288 (< 0 .cse289))) (res .cse288 (trichotomy .cse289 0) (farkas 1 .cse286 1 .cse288))) (farkas 1 .cse283 1 .cse287)))) :proves (- .cse283 + .cse285) :EQ) (! (let ((.cse290 (= 0 .cse289))) (res .cse290 (symm 0 .cse289) (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse37 1 .cse46 1 .cse44 4 .cse92 4 .cse26 1 .cse24 1 .cse40 4 .cse290)))))) :proves (- .cse37 - .cse33 + .cse32 - .cse92 - .cse26 - .cse24 - .cse22 - .cse285) :LA (4 (- 1) (- 1) 4 4 1 (- 1) (- 4))))))))))) .cse292)) .cse48)))) :proves (- .cse243 - .cse53 - .cse8 - .cse37) :rup))) .cse236))))))) .cse293)))) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse32 (res .cse33 .cse34 (res .cse85 .cse86 (res .cse87 (res .cse74 .cse247 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse101 (res .cse102 (res .cse294 .cse295 (res .cse2 (res .cse49 (res .cse51 .cse296 (res .cse53 .cse54 (res .cse29 .cse59 (res .cse28 .cse31 (res .cse92 (res .cse50 (res .cse221 .cse222 .cse297) .cse93) .cse298))))) .cse117) .cse299)) .cse118) .cse300))) .cse292)) .cse131))) .cse48)))) :proves (- .cse243 + .cse103 - .cse57 - .cse8 - .cse182 - .cse37) :rup)) .cse118) .cse300) .cse106) .cse301))) .cse292))) .cse131)) .cse48)))) :proves (- .cse243 - .cse8 + .cse246 - .cse72 - .cse182 - .cse37) :rup) (! (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse32 (res .cse184 .cse185 (res .cse33 .cse34 (res .cse85 .cse86 (res .cse87 (res .cse74 .cse247 (res .cse248 (res .cse55 .cse249 (res .cse76 .cse77 (res .cse187 .cse188 (res .cse88 .cse89 (res .cse72 .cse302 (res .cse170 (res .cse186 (res .cse144 (res .cse303 (res .cse167 (res .cse78 .cse304 (res .cse305 .cse306 (res .cse307 (res .cse308 .cse309 (res .cse243 .cse310 (res .cse57 .cse168 (res .cse294 .cse295 (res .cse101 (res .cse102 (res .cse105 (res .cse103 (res .cse2 (res .cse49 (res .cse51 .cse296 (res .cse53 .cse54 (res .cse10 .cse60 (res .cse50 .cse282 (res .cse92 .cse93 (res .cse29 .cse59 (res .cse28 .cse31 .cse298))))))) .cse117) .cse299) .cse106) .cse301) .cse118) .cse300))))) .cse311))) .cse169) .cse312) .cse313) .cse314) .cse315)))))) .cse292)) .cse131)))) .cse48)))) :proves (- .cse246 - .cse8 - .cse83 - .cse37 - .cse182) :rup))))))))) :proves (- .cse182 - .cse8) :rup))) .cse320)))) .cse48))))) :proves (- .cse182) :rup)) :proves (+ .cse178) :rup))) (let-proof ((.cse171 (! (res .cse178 .cse179 .cse181) :proves (+ .cse170) :rup)) (.cse173 (! (res .cse178 .cse179 .cse180) :proves (+ .cse172) :rup))) (let-proof ((.cse146 (! (res .cse170 .cse171 (res .cse172 .cse173 (res .cse175 .cse176 (! (res .cse172 .cse173 .cse177) :proves (- .cse175) :rup)))) :proves (- .cse144) :rup))) (let-proof ((.cse91 (! (res .cse170 .cse171 (res .cse172 .cse173 .cse174)) :proves (+ .cse90) :rup)) (.cse58 (! (res .cse167 .cse168 (! (res .cse144 .cse169 .cse146) :proves (- .cse167) :rup)) :proves (+ .cse57) :rup))) (let ((.cse21 (+ .cse15 .cse166))) (let-proof ((.cse36 (! (res .cse160 (! (res .cse55 .cse56 (res .cse57 .cse58 (res .cse4 .cse5 (! (res .cse64 .cse65 (res .cse66 .cse67 (trans 1 .cse15 .cse62 .cse63))) :proves (+ .cse160 - .cse4 - .cse55 - .cse57) :trans (1 .cse15 .cse62 .cse63))))) :proves (+ .cse160) :rup) (! (res .cse161 .cse162 (res .cse163 (res .cse164 .cse165 (farkas 1 .cse161 1 .cse164)) (farkas 1 .cse160 1 .cse163))) :proves (- .cse160 + .cse35) :EQ)) :proves (+ .cse35) :rup)) (.cse7 (! (res .cse147 (! (res .cse78 .cse79 (res .cse83 .cse84 (res .cse90 .cse91 (res .cse148 (! (res .cse149 .cse150 (farkas 1 .cse149 1 .cse90 1 .cse83 1 .cse78)) :proves (+ .cse148 - .cse90 - .cse83 - .cse78) :LA ((- 1) 1 1 1)) (res .cse151 .cse152 (! (res .cse153 .cse154 (res .cse155 .cse156 (res .cse157 .cse158 (farkas 1 .cse157 1 .cse155 1 .cse153 1 .cse151)))) :proves (- .cse90 - .cse83 - .cse78 - .cse151) :LA ((- 1) (- 1) (- 1) 1))))))) :proves (+ .cse147) :rup) .cse159) :proves (+ .cse6) :rup)) (.cse9 (! (res .cse142 .cse143 (! (res .cse144 .cse145 .cse146) :proves (- .cse142) :rup)) :proves (+ .cse8) :rup))) (let ((.cse0 (= .cse21 0))) (let-proof ((.cse3 (! (res .cse49 (! (res .cse50 (res .cse51 .cse52 (! (res .cse53 .cse54 (! (res .cse4 .cse5 (res .cse22 .cse23 (res .cse24 .cse25 (res .cse55 .cse56 (res .cse32 (res .cse33 .cse34 (res .cse35 .cse36 (res .cse8 .cse9 (res .cse57 .cse58 (res .cse6 .cse7 (res .cse29 .cse59 (res .cse28 .cse31 (res .cse10 .cse60 (res .cse61 (! (res .cse64 .cse65 (res .cse66 .cse67 (res .cse16 .cse17 (trans .cse12 .cse13 .cse14 1 .cse15 .cse62 .cse63)))) :proves (+ .cse61 - .cse10 - .cse8 - .cse6 - .cse4 - .cse55 - .cse57) :trans (.cse12 .cse13 .cse14 1 .cse15 .cse62 .cse63)) (res .cse68 .cse69 (! (res .cse40 .cse41 (res .cse42 .cse43 (res .cse70 .cse71 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 8 .cse35 1 .cse46 1 .cse44 4 .cse70 4 .cse42 1 .cse24 1 .cse40)))))) :proves (- .cse35 - .cse33 + .cse32 - .cse68 - .cse28 - .cse24 - .cse22) :LA (8 (- 1) (- 1) (- 4) (- 4) 1 (- 1))))))))))))) .cse48))))) :proves (- .cse53) :rup)) :proves (- .cse51) :rup)) (! (res .cse22 .cse23 (res .cse4 .cse5 (res .cse72 .cse73 (res .cse55 .cse56 (res .cse74 .cse75 (res .cse76 (! (res .cse55 .cse56 .cse77) :proves (+ .cse76) :rup) (res .cse37 .cse38 (res .cse6 .cse7 (res .cse78 .cse79 (res .cse24 .cse25 (res .cse26 .cse27 (let ((.cse80 (= .cse125 .cse15))) (res .cse80 (res .cse32 (res .cse81 .cse82 (res .cse33 .cse34 (res .cse83 .cse84 (res .cse85 .cse86 (res .cse87 (res .cse8 .cse9 (res .cse88 (! (res .cse8 .cse9 .cse89) :proves (+ .cse88) :rup) (res .cse90 .cse91 (res .cse57 .cse58 (res .cse10 (res .cse92 .cse93 (res .cse94 (res .cse95 (! (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (res .cse96 .cse97 (farkas 4 .cse37 4 .cse76 4 .cse96 1 .cse46 1 .cse44 4 .cse92 4 .cse26 1 .cse24 1 .cse40))))) :proves (- .cse37 - .cse76 + .cse95 - .cse33 + .cse32 - .cse92 - .cse26 - .cse24 - .cse22) :LA (4 4 (- 4) (- 1) (- 1) 4 4 1 (- 1))) (res .cse98 (res .cse99 (res .cse100 (let ((.cse111 (= .cse15 1))) (let-proof ((.cse112 (symm .cse15 1))) (res .cse29 (res .cse53 (res .cse51 (res .cse101 (res .cse102 (res .cse2 (res .cse49 (res .cse103 .cse104 (res .cse105 .cse106 (res .cse107 .cse108 (! (res .cse111 .cse112 (res .cse113 .cse114 (res .cse115 .cse116 (trans .cse109 .cse110 .cse15 1 .cse14 .cse13)))) :proves (+ .cse99 - .cse107 - .cse74 - .cse4 - .cse6 - .cse8) :trans (.cse109 .cse110 .cse15 1 .cse14 .cse13))))) .cse117) .cse30) .cse118) .cse119) .cse54) .cse60) (! (res .cse111 .cse112 (res .cse113 .cse114 (trans .cse109 .cse63 .cse62 .cse15 1 .cse14 .cse13))) :proves (+ .cse99 - .cse29 - .cse57 - .cse55 - .cse4 - .cse6 - .cse8) :trans (.cse109 .cse63 .cse62 .cse15 1 .cse14 .cse13))))) .cse120) .cse121) .cse122)) (! (res .cse123 .cse124 (res .cse40 .cse41 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse90 4 .cse88 4 .cse83 1 .cse46 1 .cse44 4 .cse92 1 .cse24 1 .cse40 4 .cse78 4 .cse123))))) :proves (- .cse90 - .cse88 - .cse83 - .cse33 + .cse32 - .cse92 - .cse24 - .cse22 - .cse78 - .cse94) :LA (4 4 4 (- 1) (- 1) 4 1 (- 1) 4 (- 4))))) (! (res .cse127 .cse128 (res .cse16 .cse17 (res .cse129 .cse130 (trans .cse125 .cse126 0 .cse12 .cse13 .cse14 1 .cse15)))) :proves (+ .cse80 - .cse72 - .cse81 - .cse50 - .cse10 - .cse8 - .cse6 - .cse4) :trans (.cse125 .cse126 0 .cse12 .cse13 .cse14 1 .cse15))))))) .cse131))))) .cse48) (! (let ((.cse136 (+ .cse15 .cse141))) (let ((.cse132 (= .cse136 0))) (res .cse132 (! (let ((.cse133 (= .cse15 .cse125))) (res .cse133 (symm .cse15 .cse125) (let ((.cse134 (< .cse136 0))) (res .cse134 (let ((.cse135 (< 0 .cse136))) (res .cse135 (trichotomy .cse136 0) (farkas 1 .cse133 1 .cse135))) (farkas 1 .cse80 1 .cse134))))) :proves (- .cse80 + .cse132) :EQ) (! (res .cse78 .cse79 (res .cse26 .cse27 (res .cse37 .cse38 (! (res .cse137 .cse138 (res .cse139 .cse140 (farkas 1 .cse139 1 .cse137 1 .cse132 1 .cse78))) :proves (- .cse37 - .cse26 - .cse132 - .cse78) :LA ((- 1) (- 1) 1 1))))) :proves (- .cse132) :rup)))) :proves (- .cse80) :rup)))))))))))))) :proves (- .cse50) :rup)) :proves (+ .cse49) :rup) .cse117) :proves (+ .cse2) :rup))) (res .cse0 (! (let ((.cse1 (= .cse12 .cse15))) (res .cse1 (! (res .cse2 .cse3 (res .cse4 .cse5 (res .cse6 .cse7 (res .cse8 .cse9 (res .cse10 .cse11 (! (res .cse16 .cse17 (trans .cse12 .cse13 .cse14 1 .cse15)) :proves (+ .cse1 - .cse10 - .cse8 - .cse6 - .cse4) :trans (.cse12 .cse13 .cse14 1 .cse15))))))) :proves (+ .cse1) :rup) (! (let ((.cse18 (= .cse15 .cse12))) (res .cse18 (symm .cse15 .cse12) (let ((.cse19 (< .cse21 0))) (res .cse19 (let ((.cse20 (< 0 .cse21))) (res .cse20 (trichotomy .cse21 0) (farkas 1 .cse18 1 .cse20))) (farkas 1 .cse1 1 .cse19))))) :proves (- .cse1 + .cse0) :EQ))) :proves (+ .cse0) :rup) (res .cse22 .cse23 (res .cse24 .cse25 (res .cse26 .cse27 (res .cse28 (! (res .cse29 (! (res .cse2 .cse3 .cse30) :proves (+ .cse29) :rup) .cse31) :proves (+ .cse28) :rup) (res .cse32 (res .cse33 .cse34 (res .cse35 .cse36 (res .cse37 .cse38 (! (let ((.cse39 (= 0 .cse21))) (res .cse39 (symm 0 .cse21) (res .cse40 .cse41 (res .cse42 .cse43 (res .cse44 .cse45 (res .cse46 .cse47 (farkas 4 .cse37 4 .cse35 1 .cse46 1 .cse44 4 .cse42 4 .cse26 1 .cse24 1 .cse40 4 .cse39))))))) :proves (- .cse37 - .cse35 - .cse33 + .cse32 - .cse28 - .cse26 - .cse24 - .cse22 - .cse0) :LA (4 4 (- 1) (- 1) (- 4) 4 1 (- 1) (- 4)))))) .cse48))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :proves () :rup)
