(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 (Int) Bool)
(declare-fun $generated@@189 (Int) Bool)
(declare-fun $generated@@191 (Int) Bool)
(declare-fun $generated@@192 (Int) Bool)
(declare-fun $generated@@194 (T@T) T@U)
(declare-fun $generated@@195 (T@U) Int)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@202 (T@U T@U T@U) Bool)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 (T@T T@T) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@T T@T) T@U)
(declare-fun $generated@@229 (T@T T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@289 (Int Int) Bool)
(declare-fun $generated@@290 (Int Int) Bool)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@U Int) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@370 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(= (type ($generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@183 $generated@@186) $generated@@186)
 :pattern ( ($generated@@183 $generated@@186))
)))
(assert  (=> (<= 0 $generated@@187) (forall (($generated@@190 Int) ) (!  (=> (or ($generated@@189 $generated@@190) (not (= 0 $generated@@187))) true)
 :pattern ( ($generated@@188 $generated@@190))
))))
(assert  (=> (<= 0 $generated@@187) (forall (($generated@@193 Int) ) (!  (=> (or ($generated@@192 $generated@@193) (not (= 0 $generated@@187))) true)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert  (and (and (forall (($generated@@198 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@198)) 13)) (forall (($generated@@199 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@196 $generated@@199))
))) (forall (($generated@@200 T@T) ) (! (= (type ($generated@@194 $generated@@200)) ($generated@@196 $generated@@200))
 :pattern ( ($generated@@194 $generated@@200))
))))
(assert (forall (($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@201)) 0)
 :pattern ( ($generated@@194 $generated@@201))
)))
(assert  (and (= ($generated@@1 $generated@@204) 14) (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@203 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@61) (= (type $generated@@208) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@202 ($generated@@203 $generated@@206) $generated@@207 $generated@@208) ($generated@@69 $generated@@206 $generated@@207 $generated@@208)))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@206) $generated@@207 $generated@@208))
)))
(assert  (and (and (and (and (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@214 $generated@@215)) 15)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@211 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@211 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@212 (type $generated@@220))))
(= (type ($generated@@209 $generated@@220)) ($generated@@71 $generated@@221 $generated@@4)))
 :pattern ( ($generated@@209 $generated@@220))
))) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= (type ($generated@@210 $generated@@222 $generated@@223)) ($generated@@211 $generated@@222 $generated@@223))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (let (($generated@@226 (type $generated@@224)))
 (not ($generated@@0 ($generated@@76 ($generated@@209 ($generated@@210 $generated@@226 $generated@@225)) $generated@@224))))
 :pattern ( (let (($generated@@226 (type $generated@@224)))
($generated@@76 ($generated@@209 ($generated@@210 $generated@@226 $generated@@225)) $generated@@224)))
)))
(assert  (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@232 $generated@@233)) 16)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@229 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@231 ($generated@@229 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@229 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@227 $generated@@238)) ($generated@@71 $generated@@239 $generated@@4)))
 :pattern ( ($generated@@227 $generated@@238))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= (type ($generated@@228 $generated@@240 $generated@@241)) ($generated@@229 $generated@@240 $generated@@241))
 :pattern ( ($generated@@228 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (let (($generated@@244 (type $generated@@242)))
 (not ($generated@@0 ($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242))))
 :pattern ( (let (($generated@@244 (type $generated@@242)))
($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@213 (type $generated@@245))))
(let (($generated@@247 ($generated@@212 (type $generated@@245))))
 (=> (= (type $generated@@245) ($generated@@211 $generated@@247 $generated@@246)) (or (= $generated@@245 ($generated@@210 $generated@@247 $generated@@246)) (exists (($generated@@248 T@U) ) (!  (and (= (type $generated@@248) $generated@@247) ($generated@@0 ($generated@@76 ($generated@@209 $generated@@245) $generated@@248)))
 :no-pattern (type $generated@@248)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
))))))
 :pattern ( ($generated@@209 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@231 (type $generated@@249))))
(let (($generated@@251 ($generated@@230 (type $generated@@249))))
 (=> (= (type $generated@@249) ($generated@@229 $generated@@251 $generated@@250)) (or (= $generated@@249 ($generated@@228 $generated@@251 $generated@@250)) (exists (($generated@@252 T@U) ) (!  (and (= (type $generated@@252) $generated@@251) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@249) $generated@@252)))
 :no-pattern (type $generated@@252)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
))))))
 :pattern ( ($generated@@227 $generated@@249))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@61)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@255) ($generated@@71 $generated@@204 $generated@@4)) (= (type $generated@@256) $generated@@61)) (= (type $generated@@257) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@255 ($generated@@253 $generated@@256) $generated@@257) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@204) ($generated@@0 ($generated@@76 $generated@@255 $generated@@258))) ($generated@@202 $generated@@258 $generated@@256 $generated@@257))
 :pattern ( ($generated@@76 $generated@@255 $generated@@258))
))))
 :pattern ( ($generated@@69 $generated@@255 ($generated@@253 $generated@@256) $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@61)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@71 $generated@@204 $generated@@4)) (= (type $generated@@262) $generated@@61)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@204) ($generated@@0 ($generated@@76 $generated@@261 $generated@@264))) ($generated@@202 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@76 $generated@@261 $generated@@264))
))))
 :pattern ( ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263))
)))
(assert  (and (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)) (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@213 (type $generated@@269))))
(let (($generated@@271 ($generated@@212 (type $generated@@269))))
(= (type ($generated@@266 $generated@@269)) ($generated@@71 $generated@@271 $generated@@270))))
 :pattern ( ($generated@@266 $generated@@269))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (= (type $generated@@272) ($generated@@211 $generated@@204 $generated@@204)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) $generated@@61)) (= (type $generated@@275) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@272 ($generated@@265 $generated@@273 $generated@@274) $generated@@275) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@204) ($generated@@0 ($generated@@76 ($generated@@209 $generated@@272) $generated@@276))) (and ($generated@@202 ($generated@@76 ($generated@@266 $generated@@272) $generated@@276) $generated@@274 $generated@@275) ($generated@@202 $generated@@276 $generated@@273 $generated@@275)))
 :pattern ( ($generated@@76 ($generated@@266 $generated@@272) $generated@@276))
 :pattern ( ($generated@@76 ($generated@@209 $generated@@272) $generated@@276))
))))
 :pattern ( ($generated@@69 $generated@@272 ($generated@@265 $generated@@273 $generated@@274) $generated@@275))
)))
(assert  (and (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@277 $generated@@279 $generated@@280)) $generated@@61)
 :pattern ( ($generated@@277 $generated@@279 $generated@@280))
)) (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@231 (type $generated@@281))))
(let (($generated@@283 ($generated@@230 (type $generated@@281))))
(= (type ($generated@@278 $generated@@281)) ($generated@@71 $generated@@283 $generated@@282))))
 :pattern ( ($generated@@278 $generated@@281))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) ($generated@@229 $generated@@204 $generated@@204)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) $generated@@61)) (= (type $generated@@287) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@277 $generated@@285 $generated@@286) $generated@@287) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@204) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@284) $generated@@288))) (and ($generated@@202 ($generated@@76 ($generated@@278 $generated@@284) $generated@@288) $generated@@286 $generated@@287) ($generated@@202 $generated@@288 $generated@@285 $generated@@287)))
 :pattern ( ($generated@@76 ($generated@@278 $generated@@284) $generated@@288))
 :pattern ( ($generated@@76 ($generated@@227 $generated@@284) $generated@@288))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@277 $generated@@285 $generated@@286) $generated@@287))
)))
(assert  (=> (<= 0 $generated@@187) (forall (($generated@@291 Int) ($generated@@292 Int) ) (!  (=> (or ($generated@@290 $generated@@291 $generated@@292) (not (= 0 $generated@@187))) true)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@71 $generated@@294 $generated@@4))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@231 (type $generated@@295))))
(let (($generated@@297 ($generated@@230 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@229 $generated@@297 $generated@@296)) (= (= $generated@@295 ($generated@@228 $generated@@297 $generated@@296)) (= ($generated@@227 $generated@@295) ($generated@@293 $generated@@297))))))
 :pattern ( ($generated@@227 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@197 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@196 $generated@@299)) (<= 0 ($generated@@195 $generated@@298))))
 :pattern ( ($generated@@195 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@265 $generated@@302 $generated@@303)) $generated@@302))
 :pattern ( ($generated@@265 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@61) (= (type $generated@@307) $generated@@61)) (= ($generated@@304 ($generated@@265 $generated@@306 $generated@@307)) $generated@@307))
 :pattern ( ($generated@@265 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@67 ($generated@@265 $generated@@308 $generated@@309)) $generated@@58))
 :pattern ( ($generated@@265 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@277 $generated@@312 $generated@@313)) $generated@@312))
 :pattern ( ($generated@@277 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@277 $generated@@316 $generated@@317)) $generated@@317))
 :pattern ( ($generated@@277 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@67 ($generated@@277 $generated@@318 $generated@@319)) $generated@@59))
 :pattern ( ($generated@@277 $generated@@318 $generated@@319))
)))
(assert  (and (forall (($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@320 $generated@@322))
)) (forall (($generated@@323 T@U) ($generated@@324 Int) ) (! (let (($generated@@325 ($generated@@197 (type $generated@@323))))
(= (type ($generated@@321 $generated@@323 $generated@@324)) $generated@@325))
 :pattern ( ($generated@@321 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@326) ($generated@@196 $generated@@204)) (= (type $generated@@327) $generated@@61)) (= (type $generated@@328) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@326 ($generated@@320 $generated@@327) $generated@@328) (forall (($generated@@329 Int) ) (!  (=> (and (<= 0 $generated@@329) (< $generated@@329 ($generated@@195 $generated@@326))) ($generated@@202 ($generated@@321 $generated@@326 $generated@@329) $generated@@327 $generated@@328))
 :pattern ( ($generated@@321 $generated@@326 $generated@@329))
))))
 :pattern ( ($generated@@69 $generated@@326 ($generated@@320 $generated@@327) $generated@@328))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 ($generated@@70 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@70 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@332 ($generated@@253 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@253 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@61) (= ($generated@@67 ($generated@@253 $generated@@335)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@61) (= ($generated@@336 ($generated@@259 $generated@@338)) $generated@@338))
 :pattern ( ($generated@@259 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@67 ($generated@@259 $generated@@339)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@339))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@341 ($generated@@340 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@340 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@340 $generated@@345)) $generated@@56))
 :pattern ( ($generated@@340 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@346 ($generated@@320 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@320 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@61) (= ($generated@@67 ($generated@@320 $generated@@349)) $generated@@57))
 :pattern ( ($generated@@320 $generated@@349))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated@@350 $generated@@354 ($generated@@203 $generated@@353)) $generated@@353))
 :pattern ( ($generated@@203 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
 (not ($generated@@0 ($generated@@76 ($generated@@293 $generated@@356) $generated@@355))))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@76 ($generated@@293 $generated@@356) $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@71 $generated@@204 $generated@@2)) (= (type $generated@@358) $generated@@61)) (= (type $generated@@359) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@357 ($generated@@340 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@204) (< 0 ($generated ($generated@@76 $generated@@357 $generated@@360)))) ($generated@@202 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@76 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@69 $generated@@357 ($generated@@340 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (= ($generated@@203 ($generated@@183 $generated@@361)) ($generated@@183 ($generated@@203 $generated@@361)))
 :pattern ( ($generated@@203 ($generated@@183 $generated@@361)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@197 (type $generated@@362))))
 (=> (and (= (type $generated@@362) ($generated@@196 $generated@@363)) (= ($generated@@195 $generated@@362) 0)) (= $generated@@362 ($generated@@194 $generated@@363))))
 :pattern ( ($generated@@195 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@365) $generated@@2)) ($generated@@69 $generated@@365 $generated@@46 $generated@@364))
 :pattern ( ($generated@@69 $generated@@365 $generated@@46 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@367) $generated@@3)) ($generated@@69 $generated@@367 $generated@@47 $generated@@366))
 :pattern ( ($generated@@69 $generated@@367 $generated@@47 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@369) $generated@@4)) ($generated@@69 $generated@@369 $generated@@44 $generated@@368))
 :pattern ( ($generated@@69 $generated@@369 $generated@@44 $generated@@368))
)))
(assert (= ($generated@@1 $generated@@370) 17))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@372) $generated@@370)) ($generated@@69 $generated@@372 $generated@@45 $generated@@371))
 :pattern ( ($generated@@69 $generated@@372 $generated@@45 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@374) $generated@@204)) ($generated@@69 $generated@@374 $generated@@48 $generated@@373))
 :pattern ( ($generated@@69 $generated@@374 $generated@@48 $generated@@373))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@375 () Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () T@U)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 () Int)
(declare-fun $generated@@380 () Int)
(declare-fun $generated@@381 () Int)
(declare-fun $generated@@382 () T@U)
(declare-fun $generated@@383 () T@U)
(declare-fun $generated@@384 (T@U) Bool)
(declare-fun $generated@@385 (T@U) Bool)
(assert  (and (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@382) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@383) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@386  (=> (and (forall (($generated@@387 Int) ($generated@@388 Int) ) (!  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (and ($generated@@189 $generated@@388) (=> (not ($generated@@188 $generated@@388)) (and ($generated@@192 $generated@@387) (=> (not ($generated@@191 $generated@@387)) ($generated@@290 $generated@@387 $generated@@388))))))
 :pattern ( ($generated@@289 $generated@@387 $generated@@388))
 :pattern ( ($generated@@191 $generated@@387) ($generated@@188 $generated@@388))
)) (= (ControlFlow 0 5) (- 0 4))) (forall (($generated@@389 Int) ($generated@@390 Int) ) (!  (=> true (or (or (or true ($generated@@188 $generated@@390)) ($generated@@191 $generated@@389)) ($generated@@289 $generated@@389 $generated@@390)))
 :pattern ( ($generated@@289 $generated@@389 $generated@@390))
 :pattern ( ($generated@@191 $generated@@389) ($generated@@188 $generated@@390))
)))))
(let (($generated@@391  (=> (and (or (or true ($generated@@188 $generated@@375)) ($generated@@191 $generated@@376)) (= (ControlFlow 0 7) 5)) $generated@@386)))
(let (($generated@@392  (=> (not (or (or true ($generated@@188 $generated@@375)) ($generated@@191 $generated@@376))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@377) ($generated@@69 ($generated@@8 $generated@@375) $generated@@46 $generated@@377)) (and ($generated@@290 $generated@@376 $generated@@375) (= (ControlFlow 0 6) 5))) $generated@@386))))
(let (($generated@@393  (=> (or true ($generated@@188 $generated@@375)) (and (=> (= (ControlFlow 0 9) 6) $generated@@392) (=> (= (ControlFlow 0 9) 7) $generated@@391)))))
(let (($generated@@394  (=> (not (or true ($generated@@188 $generated@@375))) (=> (and ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@377) ($generated@@192 $generated@@376)) (and (=> (= (ControlFlow 0 8) 6) $generated@@392) (=> (= (ControlFlow 0 8) 7) $generated@@391))))))
(let (($generated@@395  (=> ($generated@@0 ($generated@@183 ($generated@@11 true))) (and (=> (= (ControlFlow 0 11) 8) $generated@@394) (=> (= (ControlFlow 0 11) 9) $generated@@393)))))
(let (($generated@@396  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (=> (and ($generated@@69 ($generated@@8 $generated@@375) $generated@@46 $generated@@377) ($generated@@189 $generated@@375)) (and (=> (= (ControlFlow 0 10) 8) $generated@@394) (=> (= (ControlFlow 0 10) 9) $generated@@393))))))
(let (($generated@@397  (and (=> (= (ControlFlow 0 12) 10) $generated@@396) (=> (= (ControlFlow 0 12) 11) $generated@@395))))
(let (($generated@@398 true))
(let (($generated@@399  (=> (forall (($generated@@400 Int) ($generated@@401 Int) ) (!  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (and ($generated@@189 $generated@@401) (=> (not ($generated@@188 $generated@@401)) (and ($generated@@290 $generated@@400 $generated@@401) (=> (not ($generated@@289 $generated@@400 $generated@@401)) ($generated@@192 $generated@@400))))))
 :pattern ( ($generated@@191 $generated@@400) ($generated@@188 $generated@@401))
 :pattern ( ($generated@@289 $generated@@400 $generated@@401))
)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (forall (($generated@@402 Int) ($generated@@403 Int) ) (!  (=> true (or (or (or true ($generated@@188 $generated@@403)) ($generated@@289 $generated@@402 $generated@@403)) ($generated@@191 $generated@@402)))
 :pattern ( ($generated@@191 $generated@@402) ($generated@@188 $generated@@403))
 :pattern ( ($generated@@289 $generated@@402 $generated@@403))
))) (=> (forall (($generated@@404 Int) ($generated@@405 Int) ) (!  (=> true (or (or (or true ($generated@@188 $generated@@405)) ($generated@@289 $generated@@404 $generated@@405)) ($generated@@191 $generated@@404)))
 :pattern ( ($generated@@191 $generated@@404) ($generated@@188 $generated@@405))
 :pattern ( ($generated@@289 $generated@@404 $generated@@405))
)) (and (=> (= (ControlFlow 0 13) 12) $generated@@397) (=> (= (ControlFlow 0 13) 3) $generated@@398)))))))
(let (($generated@@406  (=> (and (or (or true ($generated@@188 $generated@@378)) ($generated@@289 $generated@@379 $generated@@378)) (= (ControlFlow 0 16) 13)) $generated@@399)))
(let (($generated@@407  (=> (and (and (not (or (or true ($generated@@188 $generated@@378)) ($generated@@289 $generated@@379 $generated@@378))) ($generated@@69 ($generated@@8 $generated@@379) $generated@@46 $generated@@377)) (and ($generated@@192 $generated@@379) (= (ControlFlow 0 15) 13))) $generated@@399)))
(let (($generated@@408  (=> (or true ($generated@@188 $generated@@378)) (and (=> (= (ControlFlow 0 18) 15) $generated@@407) (=> (= (ControlFlow 0 18) 16) $generated@@406)))))
(let (($generated@@409  (=> (and (and (not (or true ($generated@@188 $generated@@378))) ($generated@@69 ($generated@@8 $generated@@379) $generated@@46 $generated@@377)) (and ($generated@@69 ($generated@@8 $generated@@378) $generated@@46 $generated@@377) ($generated@@290 $generated@@379 $generated@@378))) (and (=> (= (ControlFlow 0 17) 15) $generated@@407) (=> (= (ControlFlow 0 17) 16) $generated@@406)))))
(let (($generated@@410  (=> ($generated@@0 ($generated@@183 ($generated@@11 true))) (and (=> (= (ControlFlow 0 20) 17) $generated@@409) (=> (= (ControlFlow 0 20) 18) $generated@@408)))))
(let (($generated@@411  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (=> (and ($generated@@69 ($generated@@8 $generated@@378) $generated@@46 $generated@@377) ($generated@@189 $generated@@378)) (and (=> (= (ControlFlow 0 19) 17) $generated@@409) (=> (= (ControlFlow 0 19) 18) $generated@@408))))))
(let (($generated@@412  (and (=> (= (ControlFlow 0 21) 19) $generated@@411) (=> (= (ControlFlow 0 21) 20) $generated@@410))))
(let (($generated@@413 true))
(let (($generated@@414  (=> (forall (($generated@@415 Int) ($generated@@416 Int) ) (!  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (and ($generated@@290 $generated@@415 $generated@@416) (=> (not ($generated@@289 $generated@@415 $generated@@416)) (and ($generated@@189 $generated@@416) (=> (not ($generated@@188 $generated@@416)) ($generated@@192 $generated@@415))))))
 :pattern ( ($generated@@191 $generated@@415) ($generated@@188 $generated@@416))
 :pattern ( ($generated@@289 $generated@@415 $generated@@416))
)) (and (=> (= (ControlFlow 0 22) (- 0 23)) (forall (($generated@@417 Int) ($generated@@418 Int) ) (!  (=> true (or (or (or true ($generated@@289 $generated@@417 $generated@@418)) ($generated@@188 $generated@@418)) ($generated@@191 $generated@@417)))
 :pattern ( ($generated@@191 $generated@@417) ($generated@@188 $generated@@418))
 :pattern ( ($generated@@289 $generated@@417 $generated@@418))
))) (=> (forall (($generated@@419 Int) ($generated@@420 Int) ) (!  (=> true (or (or (or true ($generated@@289 $generated@@419 $generated@@420)) ($generated@@188 $generated@@420)) ($generated@@191 $generated@@419)))
 :pattern ( ($generated@@191 $generated@@419) ($generated@@188 $generated@@420))
 :pattern ( ($generated@@289 $generated@@419 $generated@@420))
)) (and (=> (= (ControlFlow 0 22) 21) $generated@@412) (=> (= (ControlFlow 0 22) 2) $generated@@413)))))))
(let (($generated@@421  (=> (and (or (or true ($generated@@289 $generated@@380 $generated@@381)) ($generated@@188 $generated@@381)) (= (ControlFlow 0 25) 22)) $generated@@414)))
(let (($generated@@422  (=> (and (and (not (or (or true ($generated@@289 $generated@@380 $generated@@381)) ($generated@@188 $generated@@381))) ($generated@@69 ($generated@@8 $generated@@380) $generated@@46 $generated@@377)) (and ($generated@@192 $generated@@380) (= (ControlFlow 0 24) 22))) $generated@@414)))
(let (($generated@@423  (=> (or true ($generated@@289 $generated@@380 $generated@@381)) (and (=> (= (ControlFlow 0 27) 24) $generated@@422) (=> (= (ControlFlow 0 27) 25) $generated@@421)))))
(let (($generated@@424  (=> (not (or true ($generated@@289 $generated@@380 $generated@@381))) (=> (and ($generated@@69 ($generated@@8 $generated@@381) $generated@@46 $generated@@377) ($generated@@189 $generated@@381)) (and (=> (= (ControlFlow 0 26) 24) $generated@@422) (=> (= (ControlFlow 0 26) 25) $generated@@421))))))
(let (($generated@@425  (=> ($generated@@0 ($generated@@183 ($generated@@11 true))) (and (=> (= (ControlFlow 0 29) 26) $generated@@424) (=> (= (ControlFlow 0 29) 27) $generated@@423)))))
(let (($generated@@426  (=> (and (and (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) ($generated@@69 ($generated@@8 $generated@@380) $generated@@46 $generated@@377)) (and ($generated@@69 ($generated@@8 $generated@@381) $generated@@46 $generated@@377) ($generated@@290 $generated@@380 $generated@@381))) (and (=> (= (ControlFlow 0 28) 26) $generated@@424) (=> (= (ControlFlow 0 28) 27) $generated@@423)))))
(let (($generated@@427  (and (=> (= (ControlFlow 0 30) 28) $generated@@426) (=> (= (ControlFlow 0 30) 29) $generated@@425))))
(let (($generated@@428 true))
(let (($generated@@429  (=> (= $generated@@382 ($generated@@128 $generated@@383 $generated@@377 $generated@@60 false)) (and (=> (= (ControlFlow 0 31) 30) $generated@@427) (=> (= (ControlFlow 0 31) 1) $generated@@428)))))
(let (($generated@@430  (=> (and (and ($generated@@384 $generated@@377) ($generated@@385 $generated@@377)) (and (= 1 $generated@@187) (= (ControlFlow 0 32) 31))) $generated@@429)))
$generated@@430))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@187 (T@T) T@U)
(declare-fun $generated@@188 (T@U) Int)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 () T@T)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@T T@T) T@U)
(declare-fun $generated@@204 (T@T T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@T T@T) T@U)
(declare-fun $generated@@222 (T@T T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 () Int)
(declare-fun $generated@@259 (Int Int Int) Bool)
(declare-fun $generated@@260 (Int Int Int) Bool)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (Int Int) Bool)
(declare-fun $generated@@289 (Int Int) Bool)
(declare-fun $generated@@292 (Int Int) Bool)
(declare-fun $generated@@293 (Int Int) Bool)
(declare-fun $generated@@296 (Int Int) Bool)
(declare-fun $generated@@297 (Int Int) Bool)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@U Int) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@377 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(= (type ($generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@183 $generated@@186) $generated@@186)
 :pattern ( ($generated@@183 $generated@@186))
)))
(assert  (and (and (forall (($generated@@191 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@191)) 13)) (forall (($generated@@192 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
))) (forall (($generated@@193 T@T) ) (! (= (type ($generated@@187 $generated@@193)) ($generated@@189 $generated@@193))
 :pattern ( ($generated@@187 $generated@@193))
))))
(assert (forall (($generated@@194 T@T) ) (! (= ($generated@@188 ($generated@@187 $generated@@194)) 0)
 :pattern ( ($generated@@187 $generated@@194))
)))
(assert  (and (= ($generated@@1 $generated@@197) 14) (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@196 $generated@@198))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) $generated@@61) (= (type $generated@@201) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@195 ($generated@@196 $generated@@199) $generated@@200 $generated@@201) ($generated@@69 $generated@@199 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@199) $generated@@200 $generated@@201))
)))
(assert  (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@204 $generated@@207 $generated@@208)) 15)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@205 ($generated@@204 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@204 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@204 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@204 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@202 $generated@@213)) ($generated@@71 $generated@@214 $generated@@4)))
 :pattern ( ($generated@@202 $generated@@213))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= (type ($generated@@203 $generated@@215 $generated@@216)) ($generated@@204 $generated@@215 $generated@@216))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@T) ) (! (let (($generated@@219 (type $generated@@217)))
 (not ($generated@@0 ($generated@@76 ($generated@@202 ($generated@@203 $generated@@219 $generated@@218)) $generated@@217))))
 :pattern ( (let (($generated@@219 (type $generated@@217)))
($generated@@76 ($generated@@202 ($generated@@203 $generated@@219 $generated@@218)) $generated@@217)))
)))
(assert  (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@222 $generated@@225 $generated@@226)) 16)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@223 ($generated@@222 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@222 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@222 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@222 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@220 $generated@@231)) ($generated@@71 $generated@@232 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@231))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= (type ($generated@@221 $generated@@233 $generated@@234)) ($generated@@222 $generated@@233 $generated@@234))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (let (($generated@@237 (type $generated@@235)))
 (not ($generated@@0 ($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235))))
 :pattern ( (let (($generated@@237 (type $generated@@235)))
($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@206 (type $generated@@238))))
(let (($generated@@240 ($generated@@205 (type $generated@@238))))
 (=> (= (type $generated@@238) ($generated@@204 $generated@@240 $generated@@239)) (or (= $generated@@238 ($generated@@203 $generated@@240 $generated@@239)) (exists (($generated@@241 T@U) ) (!  (and (= (type $generated@@241) $generated@@240) ($generated@@0 ($generated@@76 ($generated@@202 $generated@@238) $generated@@241)))
 :no-pattern (type $generated@@241)
 :no-pattern ($generated $generated@@241)
 :no-pattern ($generated@@0 $generated@@241)
))))))
 :pattern ( ($generated@@202 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@224 (type $generated@@242))))
(let (($generated@@244 ($generated@@223 (type $generated@@242))))
 (=> (= (type $generated@@242) ($generated@@222 $generated@@244 $generated@@243)) (or (= $generated@@242 ($generated@@221 $generated@@244 $generated@@243)) (exists (($generated@@245 T@U) ) (!  (and (= (type $generated@@245) $generated@@244) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@242) $generated@@245)))
 :no-pattern (type $generated@@245)
 :no-pattern ($generated $generated@@245)
 :no-pattern ($generated@@0 $generated@@245)
))))))
 :pattern ( ($generated@@220 $generated@@242))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@61)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (= (type $generated@@248) ($generated@@71 $generated@@197 $generated@@4)) (= (type $generated@@249) $generated@@61)) (= (type $generated@@250) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@248 ($generated@@246 $generated@@249) $generated@@250) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@197) ($generated@@0 ($generated@@76 $generated@@248 $generated@@251))) ($generated@@195 $generated@@251 $generated@@249 $generated@@250))
 :pattern ( ($generated@@76 $generated@@248 $generated@@251))
))))
 :pattern ( ($generated@@69 $generated@@248 ($generated@@246 $generated@@249) $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@197 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@197) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@195 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert  (=> (<= 0 $generated@@258) (forall (($generated@@261 Int) ($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (or ($generated@@260 $generated@@261 $generated@@262 $generated@@263) (not (= 0 $generated@@258))) true)
 :pattern ( ($generated@@259 $generated@@261 $generated@@262 $generated@@263))
))))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@206 (type $generated@@268))))
(let (($generated@@270 ($generated@@205 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@204 $generated@@197 $generated@@197)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@197) ($generated@@0 ($generated@@76 ($generated@@202 $generated@@271) $generated@@275))) (and ($generated@@195 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@195 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@202 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@224 (type $generated@@280))))
(let (($generated@@282 ($generated@@223 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@222 $generated@@197 $generated@@197)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@197) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))) (and ($generated@@195 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@195 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 0 $generated@@258) (forall (($generated@@290 Int) ($generated@@291 Int) ) (!  (=> (or ($generated@@289 $generated@@290 $generated@@291) (not (= 0 $generated@@258))) true)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
))))
(assert  (=> (<= 0 $generated@@258) (forall (($generated@@294 Int) ($generated@@295 Int) ) (!  (=> (or ($generated@@293 $generated@@294 $generated@@295) (not (= 0 $generated@@258))) true)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
))))
(assert  (=> (<= 0 $generated@@258) (forall (($generated@@298 Int) ($generated@@299 Int) ) (!  (=> (or ($generated@@297 $generated@@298 $generated@@299) (not (= 0 $generated@@258))) true)
 :pattern ( ($generated@@296 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@71 $generated@@301 $generated@@4))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@224 (type $generated@@302))))
(let (($generated@@304 ($generated@@223 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@222 $generated@@304 $generated@@303)) (= (= $generated@@302 ($generated@@221 $generated@@304 $generated@@303)) (= ($generated@@220 $generated@@302) ($generated@@300 $generated@@304))))))
 :pattern ( ($generated@@220 $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@190 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@189 $generated@@306)) (<= 0 ($generated@@188 $generated@@305))))
 :pattern ( ($generated@@188 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@264 $generated@@309 $generated@@310)) $generated@@309))
 :pattern ( ($generated@@264 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@61)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@311 ($generated@@264 $generated@@313 $generated@@314)) $generated@@314))
 :pattern ( ($generated@@264 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@315 $generated@@316)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@276 $generated@@319 $generated@@320)) $generated@@319))
 :pattern ( ($generated@@276 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@61) (= (type $generated@@324) $generated@@61)) (= ($generated@@321 ($generated@@276 $generated@@323 $generated@@324)) $generated@@324))
 :pattern ( ($generated@@276 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@325 $generated@@326)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@325 $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@329))
)) (forall (($generated@@330 T@U) ($generated@@331 Int) ) (! (let (($generated@@332 ($generated@@190 (type $generated@@330))))
(= (type ($generated@@328 $generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@328 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@189 $generated@@197)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@188 $generated@@333))) ($generated@@195 ($generated@@328 $generated@@333 $generated@@336) $generated@@334 $generated@@335))
 :pattern ( ($generated@@328 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@338 Int) ) (! (= ($generated@@337 ($generated@@70 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@70 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@339 ($generated@@246 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@246 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@246 $generated@@342)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@343 ($generated@@252 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@252 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@346)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@348 ($generated@@347 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@347 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@352)) $generated@@56))
 :pattern ( ($generated@@347 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@327 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@327 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@327 $generated@@356)) $generated@@57))
 :pattern ( ($generated@@327 $generated@@356))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated@@357 $generated@@361 ($generated@@196 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@196 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
 (not ($generated@@0 ($generated@@76 ($generated@@300 $generated@@363) $generated@@362))))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@76 ($generated@@300 $generated@@363) $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@71 $generated@@197 $generated@@2)) (= (type $generated@@365) $generated@@61)) (= (type $generated@@366) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@364 ($generated@@347 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@197) (< 0 ($generated ($generated@@76 $generated@@364 $generated@@367)))) ($generated@@195 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@76 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@69 $generated@@364 ($generated@@347 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (= ($generated@@196 ($generated@@183 $generated@@368)) ($generated@@183 ($generated@@196 $generated@@368)))
 :pattern ( ($generated@@196 ($generated@@183 $generated@@368)))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@190 (type $generated@@369))))
 (=> (and (= (type $generated@@369) ($generated@@189 $generated@@370)) (= ($generated@@188 $generated@@369) 0)) (= $generated@@369 ($generated@@187 $generated@@370))))
 :pattern ( ($generated@@188 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@372) $generated@@2)) ($generated@@69 $generated@@372 $generated@@46 $generated@@371))
 :pattern ( ($generated@@69 $generated@@372 $generated@@46 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@374) $generated@@3)) ($generated@@69 $generated@@374 $generated@@47 $generated@@373))
 :pattern ( ($generated@@69 $generated@@374 $generated@@47 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@4)) ($generated@@69 $generated@@376 $generated@@44 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@44 $generated@@375))
)))
(assert (= ($generated@@1 $generated@@377) 17))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@377)) ($generated@@69 $generated@@379 $generated@@45 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@45 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@381) $generated@@197)) ($generated@@69 $generated@@381 $generated@@48 $generated@@380))
 :pattern ( ($generated@@69 $generated@@381 $generated@@48 $generated@@380))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@382 () Int)
(declare-fun $generated@@383 () Int)
(declare-fun $generated@@384 () Int)
(declare-fun $generated@@385 () Int)
(declare-fun $generated@@386 () Int)
(declare-fun $generated@@387 () Int)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () Int)
(declare-fun $generated@@390 () Int)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 () Int)
(declare-fun $generated@@397 () Int)
(declare-fun $generated@@398 () Int)
(declare-fun $generated@@399 () Int)
(declare-fun $generated@@400 () Int)
(declare-fun $generated@@401 () Int)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Int)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 () Int)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () T@U)
(declare-fun $generated@@408 () T@U)
(declare-fun $generated@@409 (T@U) Bool)
(declare-fun $generated@@410 (T@U) Bool)
(assert  (and (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@407) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@408) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 50) (let (($generated@@411  (=> (and (forall (($generated@@412 Int) ($generated@@413 Int) ($generated@@414 Int) ($generated@@415 Int) ($generated@@416 Int) ($generated@@417 Int) ) (!  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (and ($generated@@289 $generated@@412 $generated@@415) (=> (not ($generated@@288 $generated@@412 $generated@@415)) (and ($generated@@293 $generated@@413 $generated@@416) (=> (not ($generated@@292 $generated@@413 $generated@@416)) (and ($generated@@297 $generated@@414 $generated@@417) (=> (not ($generated@@296 $generated@@414 $generated@@417)) ($generated@@260 $generated@@412 $generated@@413 $generated@@414))))))))
 :pattern ( ($generated@@296 $generated@@414 $generated@@417) ($generated@@292 $generated@@413 $generated@@416) ($generated@@288 $generated@@412 $generated@@415))
)) (= (ControlFlow 0 6) (- 0 5))) (forall (($generated@@418 Int) ($generated@@419 Int) ($generated@@420 Int) ($generated@@421 Int) ($generated@@422 Int) ($generated@@423 Int) ) (!  (=> true (or (or (or (or true ($generated@@288 $generated@@418 $generated@@421)) ($generated@@292 $generated@@419 $generated@@422)) ($generated@@296 $generated@@420 $generated@@423)) ($generated@@259 $generated@@418 $generated@@419 $generated@@420)))
 :pattern ( ($generated@@296 $generated@@420 $generated@@423) ($generated@@292 $generated@@419 $generated@@422) ($generated@@288 $generated@@418 $generated@@421))
)))))
(let (($generated@@424  (=> (and (or (or (or true ($generated@@288 $generated@@382 $generated@@383)) ($generated@@292 $generated@@384 $generated@@385)) ($generated@@296 $generated@@386 $generated@@387)) (= (ControlFlow 0 8) 6)) $generated@@411)))
(let (($generated@@425  (=> (and (not (or (or (or true ($generated@@288 $generated@@382 $generated@@383)) ($generated@@292 $generated@@384 $generated@@385)) ($generated@@296 $generated@@386 $generated@@387))) ($generated@@69 ($generated@@8 $generated@@382) $generated@@46 $generated@@388)) (=> (and (and ($generated@@69 ($generated@@8 $generated@@384) $generated@@46 $generated@@388) ($generated@@69 ($generated@@8 $generated@@386) $generated@@46 $generated@@388)) (and ($generated@@260 $generated@@382 $generated@@384 $generated@@386) (= (ControlFlow 0 7) 6))) $generated@@411))))
(let (($generated@@426  (=> (or (or true ($generated@@288 $generated@@382 $generated@@383)) ($generated@@292 $generated@@384 $generated@@385)) (and (=> (= (ControlFlow 0 10) 7) $generated@@425) (=> (= (ControlFlow 0 10) 8) $generated@@424)))))
(let (($generated@@427  (=> (and (and (not (or (or true ($generated@@288 $generated@@382 $generated@@383)) ($generated@@292 $generated@@384 $generated@@385))) ($generated@@69 ($generated@@8 $generated@@386) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@387) $generated@@46 $generated@@388) ($generated@@297 $generated@@386 $generated@@387))) (and (=> (= (ControlFlow 0 9) 7) $generated@@425) (=> (= (ControlFlow 0 9) 8) $generated@@424)))))
(let (($generated@@428  (=> (or true ($generated@@288 $generated@@382 $generated@@383)) (and (=> (= (ControlFlow 0 12) 9) $generated@@427) (=> (= (ControlFlow 0 12) 10) $generated@@426)))))
(let (($generated@@429  (=> (and (and (not (or true ($generated@@288 $generated@@382 $generated@@383))) ($generated@@69 ($generated@@8 $generated@@384) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@385) $generated@@46 $generated@@388) ($generated@@293 $generated@@384 $generated@@385))) (and (=> (= (ControlFlow 0 11) 9) $generated@@427) (=> (= (ControlFlow 0 11) 10) $generated@@426)))))
(let (($generated@@430  (=> ($generated@@0 ($generated@@183 ($generated@@11 true))) (and (=> (= (ControlFlow 0 14) 11) $generated@@429) (=> (= (ControlFlow 0 14) 12) $generated@@428)))))
(let (($generated@@431  (=> (and (and (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) ($generated@@69 ($generated@@8 $generated@@382) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@383) $generated@@46 $generated@@388) ($generated@@289 $generated@@382 $generated@@383))) (and (=> (= (ControlFlow 0 13) 11) $generated@@429) (=> (= (ControlFlow 0 13) 12) $generated@@428)))))
(let (($generated@@432  (and (=> (= (ControlFlow 0 15) 13) $generated@@431) (=> (= (ControlFlow 0 15) 14) $generated@@430))))
(let (($generated@@433 true))
(let (($generated@@434  (=> (forall (($generated@@435 Int) ($generated@@436 Int) ($generated@@437 Int) ($generated@@438 Int) ($generated@@439 Int) ($generated@@440 Int) ) (!  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (and ($generated@@289 $generated@@435 $generated@@438) (=> (not ($generated@@288 $generated@@435 $generated@@438)) (and ($generated@@293 $generated@@436 $generated@@439) (=> (not ($generated@@292 $generated@@436 $generated@@439)) (and ($generated@@260 $generated@@435 $generated@@436 $generated@@437) (=> (not ($generated@@259 $generated@@435 $generated@@436 $generated@@437)) ($generated@@297 $generated@@437 $generated@@440))))))))
 :pattern ( ($generated@@296 $generated@@437 $generated@@440) ($generated@@292 $generated@@436 $generated@@439) ($generated@@288 $generated@@435 $generated@@438))
)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (forall (($generated@@441 Int) ($generated@@442 Int) ($generated@@443 Int) ($generated@@444 Int) ($generated@@445 Int) ($generated@@446 Int) ) (!  (=> true (or (or (or (or true ($generated@@288 $generated@@441 $generated@@444)) ($generated@@292 $generated@@442 $generated@@445)) ($generated@@259 $generated@@441 $generated@@442 $generated@@443)) ($generated@@296 $generated@@443 $generated@@446)))
 :pattern ( ($generated@@296 $generated@@443 $generated@@446) ($generated@@292 $generated@@442 $generated@@445) ($generated@@288 $generated@@441 $generated@@444))
))) (=> (forall (($generated@@447 Int) ($generated@@448 Int) ($generated@@449 Int) ($generated@@450 Int) ($generated@@451 Int) ($generated@@452 Int) ) (!  (=> true (or (or (or (or true ($generated@@288 $generated@@447 $generated@@450)) ($generated@@292 $generated@@448 $generated@@451)) ($generated@@259 $generated@@447 $generated@@448 $generated@@449)) ($generated@@296 $generated@@449 $generated@@452)))
 :pattern ( ($generated@@296 $generated@@449 $generated@@452) ($generated@@292 $generated@@448 $generated@@451) ($generated@@288 $generated@@447 $generated@@450))
)) (and (=> (= (ControlFlow 0 16) 15) $generated@@432) (=> (= (ControlFlow 0 16) 4) $generated@@433)))))))
(let (($generated@@453  (=> (and (or (or (or true ($generated@@288 $generated@@389 $generated@@390)) ($generated@@292 $generated@@391 $generated@@392)) ($generated@@259 $generated@@389 $generated@@391 $generated@@393)) (= (ControlFlow 0 19) 16)) $generated@@434)))
(let (($generated@@454  (=> (not (or (or (or true ($generated@@288 $generated@@389 $generated@@390)) ($generated@@292 $generated@@391 $generated@@392)) ($generated@@259 $generated@@389 $generated@@391 $generated@@393))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@388) ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@388)) (and ($generated@@297 $generated@@393 $generated@@394) (= (ControlFlow 0 18) 16))) $generated@@434))))
(let (($generated@@455  (=> (or (or true ($generated@@288 $generated@@389 $generated@@390)) ($generated@@292 $generated@@391 $generated@@392)) (and (=> (= (ControlFlow 0 21) 18) $generated@@454) (=> (= (ControlFlow 0 21) 19) $generated@@453)))))
(let (($generated@@456  (=> (not (or (or true ($generated@@288 $generated@@389 $generated@@390)) ($generated@@292 $generated@@391 $generated@@392))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@389) $generated@@46 $generated@@388) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@388) ($generated@@260 $generated@@389 $generated@@391 $generated@@393))) (and (=> (= (ControlFlow 0 20) 18) $generated@@454) (=> (= (ControlFlow 0 20) 19) $generated@@453))))))
(let (($generated@@457  (=> (or true ($generated@@288 $generated@@389 $generated@@390)) (and (=> (= (ControlFlow 0 23) 20) $generated@@456) (=> (= (ControlFlow 0 23) 21) $generated@@455)))))
(let (($generated@@458  (=> (and (and (not (or true ($generated@@288 $generated@@389 $generated@@390))) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@388) ($generated@@293 $generated@@391 $generated@@392))) (and (=> (= (ControlFlow 0 22) 20) $generated@@456) (=> (= (ControlFlow 0 22) 21) $generated@@455)))))
(let (($generated@@459  (=> ($generated@@0 ($generated@@183 ($generated@@11 true))) (and (=> (= (ControlFlow 0 25) 22) $generated@@458) (=> (= (ControlFlow 0 25) 23) $generated@@457)))))
(let (($generated@@460  (=> (and (and (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) ($generated@@69 ($generated@@8 $generated@@389) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@390) $generated@@46 $generated@@388) ($generated@@289 $generated@@389 $generated@@390))) (and (=> (= (ControlFlow 0 24) 22) $generated@@458) (=> (= (ControlFlow 0 24) 23) $generated@@457)))))
(let (($generated@@461  (and (=> (= (ControlFlow 0 26) 24) $generated@@460) (=> (= (ControlFlow 0 26) 25) $generated@@459))))
(let (($generated@@462 true))
(let (($generated@@463  (=> (forall (($generated@@464 Int) ($generated@@465 Int) ($generated@@466 Int) ($generated@@467 Int) ($generated@@468 Int) ($generated@@469 Int) ) (!  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (and ($generated@@289 $generated@@464 $generated@@467) (=> (not ($generated@@288 $generated@@464 $generated@@467)) (and ($generated@@260 $generated@@464 $generated@@465 $generated@@466) (=> (not ($generated@@259 $generated@@464 $generated@@465 $generated@@466)) (and ($generated@@293 $generated@@465 $generated@@468) (=> (not ($generated@@292 $generated@@465 $generated@@468)) ($generated@@297 $generated@@466 $generated@@469))))))))
 :pattern ( ($generated@@296 $generated@@466 $generated@@469) ($generated@@292 $generated@@465 $generated@@468) ($generated@@288 $generated@@464 $generated@@467))
)) (and (=> (= (ControlFlow 0 27) (- 0 28)) (forall (($generated@@470 Int) ($generated@@471 Int) ($generated@@472 Int) ($generated@@473 Int) ($generated@@474 Int) ($generated@@475 Int) ) (!  (=> true (or (or (or (or true ($generated@@288 $generated@@470 $generated@@473)) ($generated@@259 $generated@@470 $generated@@471 $generated@@472)) ($generated@@292 $generated@@471 $generated@@474)) ($generated@@296 $generated@@472 $generated@@475)))
 :pattern ( ($generated@@296 $generated@@472 $generated@@475) ($generated@@292 $generated@@471 $generated@@474) ($generated@@288 $generated@@470 $generated@@473))
))) (=> (forall (($generated@@476 Int) ($generated@@477 Int) ($generated@@478 Int) ($generated@@479 Int) ($generated@@480 Int) ($generated@@481 Int) ) (!  (=> true (or (or (or (or true ($generated@@288 $generated@@476 $generated@@479)) ($generated@@259 $generated@@476 $generated@@477 $generated@@478)) ($generated@@292 $generated@@477 $generated@@480)) ($generated@@296 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@296 $generated@@478 $generated@@481) ($generated@@292 $generated@@477 $generated@@480) ($generated@@288 $generated@@476 $generated@@479))
)) (and (=> (= (ControlFlow 0 27) 26) $generated@@461) (=> (= (ControlFlow 0 27) 3) $generated@@462)))))))
(let (($generated@@482  (=> (and (or (or (or true ($generated@@288 $generated@@395 $generated@@396)) ($generated@@259 $generated@@395 $generated@@397 $generated@@398)) ($generated@@292 $generated@@397 $generated@@399)) (= (ControlFlow 0 30) 27)) $generated@@463)))
(let (($generated@@483  (=> (not (or (or (or true ($generated@@288 $generated@@395 $generated@@396)) ($generated@@259 $generated@@395 $generated@@397 $generated@@398)) ($generated@@292 $generated@@397 $generated@@399))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@398) $generated@@46 $generated@@388) ($generated@@69 ($generated@@8 $generated@@400) $generated@@46 $generated@@388)) (and ($generated@@297 $generated@@398 $generated@@400) (= (ControlFlow 0 29) 27))) $generated@@463))))
(let (($generated@@484  (=> (or (or true ($generated@@288 $generated@@395 $generated@@396)) ($generated@@259 $generated@@395 $generated@@397 $generated@@398)) (and (=> (= (ControlFlow 0 32) 29) $generated@@483) (=> (= (ControlFlow 0 32) 30) $generated@@482)))))
(let (($generated@@485  (=> (and (and (not (or (or true ($generated@@288 $generated@@395 $generated@@396)) ($generated@@259 $generated@@395 $generated@@397 $generated@@398))) ($generated@@69 ($generated@@8 $generated@@397) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@399) $generated@@46 $generated@@388) ($generated@@293 $generated@@397 $generated@@399))) (and (=> (= (ControlFlow 0 31) 29) $generated@@483) (=> (= (ControlFlow 0 31) 30) $generated@@482)))))
(let (($generated@@486  (=> (or true ($generated@@288 $generated@@395 $generated@@396)) (and (=> (= (ControlFlow 0 34) 31) $generated@@485) (=> (= (ControlFlow 0 34) 32) $generated@@484)))))
(let (($generated@@487  (=> (not (or true ($generated@@288 $generated@@395 $generated@@396))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@388) ($generated@@69 ($generated@@8 $generated@@397) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@398) $generated@@46 $generated@@388) ($generated@@260 $generated@@395 $generated@@397 $generated@@398))) (and (=> (= (ControlFlow 0 33) 31) $generated@@485) (=> (= (ControlFlow 0 33) 32) $generated@@484))))))
(let (($generated@@488  (=> ($generated@@0 ($generated@@183 ($generated@@11 true))) (and (=> (= (ControlFlow 0 36) 33) $generated@@487) (=> (= (ControlFlow 0 36) 34) $generated@@486)))))
(let (($generated@@489  (=> (and (and (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@396) $generated@@46 $generated@@388) ($generated@@289 $generated@@395 $generated@@396))) (and (=> (= (ControlFlow 0 35) 33) $generated@@487) (=> (= (ControlFlow 0 35) 34) $generated@@486)))))
(let (($generated@@490  (and (=> (= (ControlFlow 0 37) 35) $generated@@489) (=> (= (ControlFlow 0 37) 36) $generated@@488))))
(let (($generated@@491 true))
(let (($generated@@492  (=> (forall (($generated@@493 Int) ($generated@@494 Int) ($generated@@495 Int) ($generated@@496 Int) ($generated@@497 Int) ($generated@@498 Int) ) (!  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (and ($generated@@260 $generated@@493 $generated@@494 $generated@@495) (=> (not ($generated@@259 $generated@@493 $generated@@494 $generated@@495)) (and ($generated@@289 $generated@@493 $generated@@496) (=> (not ($generated@@288 $generated@@493 $generated@@496)) (and ($generated@@293 $generated@@494 $generated@@497) (=> (not ($generated@@292 $generated@@494 $generated@@497)) ($generated@@297 $generated@@495 $generated@@498))))))))
 :pattern ( ($generated@@296 $generated@@495 $generated@@498) ($generated@@292 $generated@@494 $generated@@497) ($generated@@288 $generated@@493 $generated@@496))
)) (and (=> (= (ControlFlow 0 38) (- 0 39)) (forall (($generated@@499 Int) ($generated@@500 Int) ($generated@@501 Int) ($generated@@502 Int) ($generated@@503 Int) ($generated@@504 Int) ) (!  (=> true (or (or (or (or true ($generated@@259 $generated@@499 $generated@@500 $generated@@501)) ($generated@@288 $generated@@499 $generated@@502)) ($generated@@292 $generated@@500 $generated@@503)) ($generated@@296 $generated@@501 $generated@@504)))
 :pattern ( ($generated@@296 $generated@@501 $generated@@504) ($generated@@292 $generated@@500 $generated@@503) ($generated@@288 $generated@@499 $generated@@502))
))) (=> (forall (($generated@@505 Int) ($generated@@506 Int) ($generated@@507 Int) ($generated@@508 Int) ($generated@@509 Int) ($generated@@510 Int) ) (!  (=> true (or (or (or (or true ($generated@@259 $generated@@505 $generated@@506 $generated@@507)) ($generated@@288 $generated@@505 $generated@@508)) ($generated@@292 $generated@@506 $generated@@509)) ($generated@@296 $generated@@507 $generated@@510)))
 :pattern ( ($generated@@296 $generated@@507 $generated@@510) ($generated@@292 $generated@@506 $generated@@509) ($generated@@288 $generated@@505 $generated@@508))
)) (and (=> (= (ControlFlow 0 38) 37) $generated@@490) (=> (= (ControlFlow 0 38) 2) $generated@@491)))))))
(let (($generated@@511  (=> (and (or (or (or true ($generated@@259 $generated@@401 $generated@@402 $generated@@403)) ($generated@@288 $generated@@401 $generated@@404)) ($generated@@292 $generated@@402 $generated@@405)) (= (ControlFlow 0 41) 38)) $generated@@492)))
(let (($generated@@512  (=> (not (or (or (or true ($generated@@259 $generated@@401 $generated@@402 $generated@@403)) ($generated@@288 $generated@@401 $generated@@404)) ($generated@@292 $generated@@402 $generated@@405))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@403) $generated@@46 $generated@@388) ($generated@@69 ($generated@@8 $generated@@406) $generated@@46 $generated@@388)) (and ($generated@@297 $generated@@403 $generated@@406) (= (ControlFlow 0 40) 38))) $generated@@492))))
(let (($generated@@513  (=> (or (or true ($generated@@259 $generated@@401 $generated@@402 $generated@@403)) ($generated@@288 $generated@@401 $generated@@404)) (and (=> (= (ControlFlow 0 43) 40) $generated@@512) (=> (= (ControlFlow 0 43) 41) $generated@@511)))))
(let (($generated@@514  (=> (and (and (not (or (or true ($generated@@259 $generated@@401 $generated@@402 $generated@@403)) ($generated@@288 $generated@@401 $generated@@404))) ($generated@@69 ($generated@@8 $generated@@402) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@405) $generated@@46 $generated@@388) ($generated@@293 $generated@@402 $generated@@405))) (and (=> (= (ControlFlow 0 42) 40) $generated@@512) (=> (= (ControlFlow 0 42) 41) $generated@@511)))))
(let (($generated@@515  (=> (or true ($generated@@259 $generated@@401 $generated@@402 $generated@@403)) (and (=> (= (ControlFlow 0 45) 42) $generated@@514) (=> (= (ControlFlow 0 45) 43) $generated@@513)))))
(let (($generated@@516  (=> (and (and (not (or true ($generated@@259 $generated@@401 $generated@@402 $generated@@403))) ($generated@@69 ($generated@@8 $generated@@401) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@404) $generated@@46 $generated@@388) ($generated@@289 $generated@@401 $generated@@404))) (and (=> (= (ControlFlow 0 44) 42) $generated@@514) (=> (= (ControlFlow 0 44) 43) $generated@@513)))))
(let (($generated@@517  (=> ($generated@@0 ($generated@@183 ($generated@@11 true))) (and (=> (= (ControlFlow 0 47) 44) $generated@@516) (=> (= (ControlFlow 0 47) 45) $generated@@515)))))
(let (($generated@@518  (=> (not ($generated@@0 ($generated@@183 ($generated@@11 true)))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@401) $generated@@46 $generated@@388) ($generated@@69 ($generated@@8 $generated@@402) $generated@@46 $generated@@388)) (and ($generated@@69 ($generated@@8 $generated@@403) $generated@@46 $generated@@388) ($generated@@260 $generated@@401 $generated@@402 $generated@@403))) (and (=> (= (ControlFlow 0 46) 44) $generated@@516) (=> (= (ControlFlow 0 46) 45) $generated@@515))))))
(let (($generated@@519  (and (=> (= (ControlFlow 0 48) 46) $generated@@518) (=> (= (ControlFlow 0 48) 47) $generated@@517))))
(let (($generated@@520 true))
(let (($generated@@521  (=> (= $generated@@407 ($generated@@128 $generated@@408 $generated@@388 $generated@@60 false)) (and (=> (= (ControlFlow 0 49) 48) $generated@@519) (=> (= (ControlFlow 0 49) 1) $generated@@520)))))
(let (($generated@@522  (=> (and (and ($generated@@409 $generated@@388) ($generated@@410 $generated@@388)) (and (= 1 $generated@@258) (= (ControlFlow 0 50) 49))) $generated@@521)))
$generated@@522)))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
