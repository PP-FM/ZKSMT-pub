(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@T T@U T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 () Int)
(declare-fun $generated@@277 (Int) Int)
(declare-fun $generated@@278 (Int) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U T@U) Bool)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@409 (Int) Bool)
(declare-fun $generated@@410 (Int) Bool)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@T) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 () T@T)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@529 (T@U Int) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@81))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@78) 11)) (= (type $generated@@65) $generated@@78)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@79) 12)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@82 $generated@@60) 0))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@73)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@76)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 13)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@75 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 15)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@75 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@72)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@147) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (= (type $generated@@149) $generated@@72))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@150 $generated@@149 $generated@@151))
 :pattern ( ($generated@@87 $generated@@150 $generated@@149 $generated@@151))
)))
(assert  (and (= (type $generated@@152) $generated@@72) (= (type $generated@@153) $generated@@90)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@90) (= (type $generated@@155) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@154 $generated@@152 $generated@@155)  (or (= $generated@@154 $generated@@153) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@154 $generated@@152 $generated@@155))
)))
(assert  (and (= (type $generated@@156) ($generated@@74 $generated@@2)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@162) $generated@@90)) (and ($generated@@157 $generated@@161) (and (not (= $generated@@162 $generated@@153)) (= ($generated@@158 $generated@@162) $generated@@152)))) ($generated@@159 ($generated@@96 ($generated@@94 $generated@@161 $generated@@162) $generated@@156) $generated@@46))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@161 $generated@@162) $generated@@156))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@2) ($generated@@159 $generated@@163 ($generated@@88 0)))
 :pattern ( ($generated@@159 $generated@@163 ($generated@@88 0)))
)))
(assert  (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@167 $generated@@168)) $generated@@72)
 :pattern ( ($generated@@165 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@72) (= (type $generated@@170) $generated@@72)) (= (type $generated@@171) $generated@@166)) ($generated@@159 $generated@@171 ($generated@@165 $generated@@169 $generated@@170))) ($generated@@164 $generated@@171))
 :pattern ( ($generated@@164 $generated@@171) ($generated@@159 $generated@@171 ($generated@@165 $generated@@169 $generated@@170)))
)))
(assert  (and (and (= ($generated@@1 $generated@@175) 17) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@175)
 :pattern ( ($generated@@174 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@166) (= (type $generated@@179) $generated@@166)) true) (= ($generated@@172 $generated@@178 $generated@@179)  (and (= ($generated@@173 $generated@@178) ($generated@@173 $generated@@179)) (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)))))
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@72)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@89 $generated@@175 $generated@@2)) (= (type $generated@@184) $generated@@72)) ($generated@@159 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@159 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@90) (= ($generated@@159 $generated@@185 $generated@@152)  (or (= $generated@@185 $generated@@153) (= ($generated@@158 $generated@@185) $generated@@152))))
 :pattern ( ($generated@@159 $generated@@185 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 18)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@90 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@90) (= (type $generated@@236) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@90)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (= (type $generated@@242) $generated@@72))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@90) (= (type $generated@@244) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@243 $generated@@242 $generated@@244) ($generated@@87 $generated@@243 $generated@@152 $generated@@244)))
 :pattern ( ($generated@@87 $generated@@243 $generated@@242 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@166)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@72) (= (type $generated@@250) $generated@@72)) (= (type $generated@@251) $generated@@175)) (= (type $generated@@252) $generated@@175)) (= ($generated@@159 ($generated@@245 $generated@@251 $generated@@252) ($generated@@165 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@159 ($generated@@245 $generated@@251 $generated@@252) ($generated@@165 $generated@@249 $generated@@250)))
)))
(assert (= ($generated@@82 $generated@@156) 0))
(assert (forall (($generated@@254 T@T) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@254 $generated@@255 $generated@@256)) ($generated@@74 $generated@@254))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255 $generated@@256))
)))
(assert (= ($generated@@253 $generated@@2 $generated@@65 $generated@@71) $generated@@156))
(assert  (not ($generated@@257 $generated@@156)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@166) (= (type $generated@@259) $generated@@166)) (= ($generated@@172 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@172 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@72)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@89 $generated@@175 $generated@@4)) (= (type $generated@@263) $generated@@72)) (= ($generated@@159 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@175) ($generated@@0 ($generated@@94 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@94 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@159 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@72)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@89 $generated@@175 $generated@@4)) (= (type $generated@@268) $generated@@72)) (= ($generated@@159 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@175) ($generated@@0 ($generated@@94 $generated@@267 $generated@@269))) ($generated@@246 $generated@@269 $generated@@268))
 :pattern ( ($generated@@94 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@159 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert  (=> (<= 0 $generated@@276) (forall (($generated@@279 Int) ) (!  (=> (or ($generated@@278 $generated@@279) (not (= 0 $generated@@276))) true)
 :pattern ( ($generated@@277 $generated@@279))
))))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@72) (= (type $generated@@282) $generated@@72)) (= (type $generated@@283) $generated@@175)) (= (type $generated@@284) $generated@@175)) (= (type $generated@@285) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@157 $generated@@285)) (= ($generated@@87 ($generated@@245 $generated@@283 $generated@@284) ($generated@@165 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@87 ($generated@@245 $generated@@283 $generated@@284) ($generated@@165 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@77)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@166) (= ($generated@@164 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@63)))
 :pattern ( ($generated@@164 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@166) ($generated@@164 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@175) (= (type $generated@@291) $generated@@175)) (= $generated@@289 ($generated@@245 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@164 $generated@@289))
)))
(assert  (and (and (forall (($generated@@296 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@296)) 19)) (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
))) (forall (($generated@@298 T@T) ) (! (= (type ($generated@@292 $generated@@298)) ($generated@@294 $generated@@298))
 :pattern ( ($generated@@292 $generated@@298))
))))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@299)) 0)
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@2) (= ($generated@@159 $generated@@300 $generated@@149) (<= ($generated@@270 0) ($generated $generated@@300))))
 :pattern ( ($generated@@159 $generated@@300 $generated@@149))
)))
(assert ($generated@@257 $generated@@60))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@175)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@72) (= (type $generated@@305) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@280 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@87 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@280 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@306) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@307) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@308) $generated@@175)) (= (type $generated@@309) $generated@@72)) ($generated@@145 $generated@@306 $generated@@307)) ($generated@@280 $generated@@308 $generated@@309 $generated@@306)) ($generated@@280 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@145 $generated@@306 $generated@@307) ($generated@@280 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@310) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@311) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@313) $generated@@72)) ($generated@@145 $generated@@310 $generated@@311)) ($generated@@87 $generated@@312 $generated@@313 $generated@@310)) ($generated@@87 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@145 $generated@@310 $generated@@311) ($generated@@87 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@315) $generated@@90)) (=> (and (and ($generated@@157 $generated@@314) (and (not (= $generated@@315 $generated@@153)) (= ($generated@@158 $generated@@315) $generated@@152))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@314 $generated@@315) $generated@@60))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@314 $generated@@315) $generated@@156) $generated@@46 $generated@@314)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@314 $generated@@315) $generated@@156))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@89 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@92 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@89 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@94 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@89 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@94 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@94 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 21)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@89 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@94 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@94 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@360) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@358 $generated@@359 $generated@@360)) (and ($generated@@145 $generated@@359 $generated@@360) (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@75 (type $generated@@362))))
 (=> (and (and (= (type $generated@@361) $generated@@90) (= (type $generated@@362) ($generated@@74 $generated@@363))) (not ($generated@@257 $generated@@362))) (= ($generated@@96 ($generated@@94 $generated@@359 $generated@@361) $generated@@362) ($generated@@96 ($generated@@94 $generated@@360 $generated@@361) $generated@@362))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@360 $generated@@361) $generated@@362))
))))
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@92 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@89 $generated@@365 $generated@@2)) (= ($generated@@181 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@94 $generated@@364 $generated@@366))) (<= ($generated ($generated@@94 $generated@@364 $generated@@366)) ($generated@@316 $generated@@364))))
 :pattern ( ($generated@@94 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@181 $generated@@364))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@175) ($generated@@246 $generated@@370 $generated@@149)) (and (= ($generated@@301 ($generated@@367 $generated@@2 $generated@@370)) $generated@@370) ($generated@@159 ($generated@@367 $generated@@2 $generated@@370) $generated@@149)))
 :pattern ( ($generated@@246 $generated@@370 $generated@@149))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@175) ($generated@@246 $generated@@371 $generated@@152)) (and (= ($generated@@301 ($generated@@367 $generated@@90 $generated@@371)) $generated@@371) ($generated@@159 ($generated@@367 $generated@@90 $generated@@371) $generated@@152)))
 :pattern ( ($generated@@246 $generated@@371 $generated@@152))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@175) ($generated@@246 $generated@@372 $generated@@242)) (and (= ($generated@@301 ($generated@@367 $generated@@90 $generated@@372)) $generated@@372) ($generated@@159 ($generated@@367 $generated@@90 $generated@@372) $generated@@242)))
 :pattern ( ($generated@@246 $generated@@372 $generated@@242))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@90) (= ($generated@@159 $generated@@373 $generated@@242)  (and ($generated@@159 $generated@@373 $generated@@152) (not (= $generated@@373 $generated@@153)))))
 :pattern ( ($generated@@159 $generated@@373 $generated@@242))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@326 (type $generated@@374))))
(let (($generated@@376 ($generated@@325 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@324 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@323 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@94 ($generated@@322 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@322 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@326 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@89 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@326 (type $generated@@381))))
(let (($generated@@383 ($generated@@325 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@324 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@323 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@94 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@344 (type $generated@@385))))
(let (($generated@@387 ($generated@@343 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@342 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@341 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@94 ($generated@@340 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@340 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@344 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@89 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(let (($generated@@394 ($generated@@343 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@342 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@341 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@94 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@89 $generated@@175 $generated@@2)) (= (type $generated@@397) $generated@@72)) (= ($generated@@159 $generated@@396 ($generated@@180 $generated@@397)) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@175) (< 0 ($generated ($generated@@94 $generated@@396 $generated@@398)))) ($generated@@246 $generated@@398 $generated@@397))
 :pattern ( ($generated@@94 $generated@@396 $generated@@398))
))))
 :pattern ( ($generated@@159 $generated@@396 ($generated@@180 $generated@@397)))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@89 $generated@@175 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@399 ($generated@@260 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@175) ($generated@@0 ($generated@@94 $generated@@399 $generated@@402))) ($generated@@280 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@94 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@87 $generated@@399 ($generated@@260 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@89 $generated@@175 $generated@@4)) (= (type $generated@@404) $generated@@72)) (= (type $generated@@405) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@403 ($generated@@265 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@175) ($generated@@0 ($generated@@94 $generated@@403 $generated@@406))) ($generated@@280 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@94 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@87 $generated@@403 ($generated@@265 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(= ($generated ($generated@@94 ($generated@@317 $generated@@408) $generated@@407)) 0))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@94 ($generated@@317 $generated@@408) $generated@@407)))
)))
(assert  (=> (<= 1 $generated@@276) (forall (($generated@@411 Int) ) (!  (=> (or ($generated@@410 $generated@@411) (and (not (= 1 $generated@@276)) (<= ($generated@@270 0) $generated@@411))) true)
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@89 $generated@@175 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@326 (type $generated@@415))))
(let (($generated@@417 ($generated@@325 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@89 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@419) $generated@@175)) (= ($generated@@0 ($generated@@94 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@94 ($generated@@322 $generated@@418) ($generated@@173 ($generated@@367 $generated@@166 $generated@@419)))) (= ($generated@@94 ($generated@@413 $generated@@418) ($generated@@173 ($generated@@367 $generated@@166 $generated@@419))) ($generated@@174 ($generated@@367 $generated@@166 $generated@@419))))))
 :pattern ( ($generated@@94 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@89 $generated@@175 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@344 (type $generated@@423))))
(let (($generated@@425 ($generated@@343 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@89 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@342 $generated@@175 $generated@@175)) (= (type $generated@@427) $generated@@175)) (= ($generated@@0 ($generated@@94 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@94 ($generated@@340 $generated@@426) ($generated@@173 ($generated@@367 $generated@@166 $generated@@427)))) (= ($generated@@94 ($generated@@421 $generated@@426) ($generated@@173 ($generated@@367 $generated@@166 $generated@@427))) ($generated@@174 ($generated@@367 $generated@@166 $generated@@427))))))
 :pattern ( ($generated@@94 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@325 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@324 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@94 ($generated@@378 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@94 ($generated@@322 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@94 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@94 ($generated@@322 $generated@@428) $generated@@432))
 :pattern ( ($generated@@94 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@94 ($generated@@378 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@343 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@342 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@94 ($generated@@389 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@94 ($generated@@340 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@94 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@94 ($generated@@340 $generated@@433) $generated@@437))
 :pattern ( ($generated@@94 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@94 ($generated@@389 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@175) ($generated@@0 ($generated@@94 ($generated@@322 $generated@@441) $generated@@445))) (and ($generated@@280 ($generated@@94 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@280 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@94 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@94 ($generated@@322 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@87 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@72)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@342 $generated@@175 $generated@@175)) (= (type $generated@@450) $generated@@72)) (= (type $generated@@451) $generated@@72)) (= (type $generated@@452) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@175) ($generated@@0 ($generated@@94 ($generated@@340 $generated@@449) $generated@@453))) (and ($generated@@280 ($generated@@94 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@280 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@94 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@94 ($generated@@340 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@87 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@454) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@455) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@456) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@454 $generated@@456))) (and ($generated@@145 $generated@@454 $generated@@455) ($generated@@145 $generated@@455 $generated@@456))) ($generated@@145 $generated@@454 $generated@@456))
 :pattern ( ($generated@@145 $generated@@454 $generated@@455) ($generated@@145 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@T) ) (! (= (type ($generated@@457 $generated@@458)) ($generated@@89 $generated@@458 $generated@@4))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@344 (type $generated@@459))))
(let (($generated@@461 ($generated@@343 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@342 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@341 $generated@@461 $generated@@460)) (= ($generated@@340 $generated@@459) ($generated@@457 $generated@@461))))))
 :pattern ( ($generated@@340 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@344 (type $generated@@462))))
(let (($generated@@464 ($generated@@343 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@342 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@341 $generated@@464 $generated@@463)) (= ($generated@@389 $generated@@462) ($generated@@457 $generated@@463))))))
 :pattern ( ($generated@@389 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@344 (type $generated@@465))))
(let (($generated@@467 ($generated@@343 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@342 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@341 $generated@@467 $generated@@466)) (= ($generated@@420 $generated@@465) ($generated@@457 $generated@@175))))))
 :pattern ( ($generated@@420 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@326 (type $generated@@468))))
(let (($generated@@470 ($generated@@325 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@324 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@323 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@175) (= (type $generated@@472) $generated@@175)) ($generated@@0 ($generated@@94 ($generated@@412 $generated@@468) ($generated@@301 ($generated@@245 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@412 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@344 (type $generated@@473))))
(let (($generated@@475 ($generated@@343 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@342 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@341 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@175) (= (type $generated@@477) $generated@@175)) ($generated@@0 ($generated@@94 ($generated@@420 $generated@@473) ($generated@@301 ($generated@@245 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@420 $generated@@473))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@78)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@T) ) (!  (=> (and (= (type $generated@@480) $generated@@78) (= (type $generated@@481) $generated@@76)) (and (= ($generated@@478 ($generated@@253 $generated@@482 $generated@@480 $generated@@481)) $generated@@480) (= ($generated@@85 ($generated@@253 $generated@@482 $generated@@480 $generated@@481)) $generated@@481)))
 :pattern ( ($generated@@253 $generated@@482 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@175) ($generated@@246 $generated@@483 $generated@@46)) (and (= ($generated@@301 ($generated@@367 $generated@@2 $generated@@483)) $generated@@483) ($generated@@159 ($generated@@367 $generated@@2 $generated@@483) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@483 $generated@@46))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@175) ($generated@@246 $generated@@484 $generated@@47)) (and (= ($generated@@301 ($generated@@367 $generated@@3 $generated@@484)) $generated@@484) ($generated@@159 ($generated@@367 $generated@@3 $generated@@484) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@484 $generated@@47))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@175) ($generated@@246 $generated@@485 $generated@@44)) (and (= ($generated@@301 ($generated@@367 $generated@@4 $generated@@485)) $generated@@485) ($generated@@159 ($generated@@367 $generated@@4 $generated@@485) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@485 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@486) 22))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@175) ($generated@@246 $generated@@487 $generated@@45)) (and (= ($generated@@301 ($generated@@367 $generated@@486 $generated@@487)) $generated@@487) ($generated@@159 ($generated@@367 $generated@@486 $generated@@487) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@487 $generated@@45))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@72) (= ($generated@@246 ($generated@@301 $generated@@488) $generated@@489) ($generated@@159 $generated@@488 $generated@@489)))
 :pattern ( ($generated@@246 ($generated@@301 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@92 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@89 $generated@@491 $generated@@2)) (<= 0 ($generated@@316 $generated@@490))))
 :pattern ( ($generated@@316 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@295 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@294 $generated@@493)) (<= 0 ($generated@@293 $generated@@492))))
 :pattern ( ($generated@@293 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@72)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@494 ($generated@@438 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@72)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@72) (= (type $generated@@501) $generated@@72)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@83 ($generated@@438 $generated@@502 $generated@@503)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@446 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@446 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@72)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@72) (= (type $generated@@511) $generated@@72)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@72) (= (type $generated@@513) $generated@@72)) (= ($generated@@83 ($generated@@446 $generated@@512 $generated@@513)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@175) (= (type $generated@@515) $generated@@175)) (= ($generated@@286 ($generated@@245 $generated@@514 $generated@@515)) $generated@@63))
 :pattern ( ($generated@@245 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@72)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@72) (= (type $generated@@519) $generated@@72)) (= ($generated@@516 ($generated@@165 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@165 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@72) (= (type $generated@@523) $generated@@72)) (= ($generated@@520 ($generated@@165 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@165 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@175) (= (type $generated@@525) $generated@@175)) (= ($generated@@173 ($generated@@245 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@245 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@175) (= (type $generated@@527) $generated@@175)) (= ($generated@@174 ($generated@@245 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@245 $generated@@526 $generated@@527))
)))
(assert  (and (forall (($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@530)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@530))
)) (forall (($generated@@531 T@U) ($generated@@532 Int) ) (! (let (($generated@@533 ($generated@@295 (type $generated@@531))))
(= (type ($generated@@529 $generated@@531 $generated@@532)) $generated@@533))
 :pattern ( ($generated@@529 $generated@@531 $generated@@532))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@294 $generated@@175)) (= (type $generated@@535) $generated@@72)) (= (type $generated@@536) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@534 ($generated@@528 $generated@@535) $generated@@536) (forall (($generated@@537 Int) ) (!  (=> (and (<= 0 $generated@@537) (< $generated@@537 ($generated@@293 $generated@@534))) ($generated@@280 ($generated@@529 $generated@@534 $generated@@537) $generated@@535 $generated@@536))
 :pattern ( ($generated@@529 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@87 $generated@@534 ($generated@@528 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@88 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@88 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@72)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@72) (= ($generated@@540 ($generated@@260 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@260 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@72) (= ($generated@@83 ($generated@@260 $generated@@543)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@72)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@72) (= ($generated@@544 ($generated@@265 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@265 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@72) (= ($generated@@83 ($generated@@265 $generated@@547)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@72)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@72) (= ($generated@@548 ($generated@@180 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@180 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@72) (= ($generated@@83 ($generated@@180 $generated@@551)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@72)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@72) (= ($generated@@552 ($generated@@528 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@528 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@72) (= ($generated@@83 ($generated@@528 $generated@@555)) $generated@@57))
 :pattern ( ($generated@@528 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@367 $generated@@557 ($generated@@301 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@301 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@559) $generated@@72)) (= (type $generated@@560) $generated@@72)) (= ($generated@@159 $generated@@558 ($generated@@438 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@175) ($generated@@0 ($generated@@94 ($generated@@322 $generated@@558) $generated@@561))) (and ($generated@@246 ($generated@@94 ($generated@@413 $generated@@558) $generated@@561) $generated@@560) ($generated@@246 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@94 ($generated@@413 $generated@@558) $generated@@561))
 :pattern ( ($generated@@94 ($generated@@322 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@159 $generated@@558 ($generated@@438 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@342 $generated@@175 $generated@@175)) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@72)) (= ($generated@@159 $generated@@562 ($generated@@446 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@175) ($generated@@0 ($generated@@94 ($generated@@340 $generated@@562) $generated@@565))) (and ($generated@@246 ($generated@@94 ($generated@@421 $generated@@562) $generated@@565) $generated@@564) ($generated@@246 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@94 ($generated@@421 $generated@@562) $generated@@565))
 :pattern ( ($generated@@94 ($generated@@340 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@159 $generated@@562 ($generated@@446 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@175) (= (type $generated@@569) $generated@@175)) (< ($generated@@566 $generated@@568) ($generated@@567 ($generated@@245 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@245 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@175) (= (type $generated@@571) $generated@@175)) (< ($generated@@566 $generated@@571) ($generated@@567 ($generated@@245 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@245 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@175) (= (type $generated@@573) $generated@@72)) (= (type $generated@@574) $generated@@72)) ($generated@@246 $generated@@572 ($generated@@438 $generated@@573 $generated@@574))) (and (= ($generated@@301 ($generated@@367 ($generated@@324 $generated@@175 $generated@@175) $generated@@572)) $generated@@572) ($generated@@159 ($generated@@367 ($generated@@324 $generated@@175 $generated@@175) $generated@@572) ($generated@@438 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@246 $generated@@572 ($generated@@438 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@175) (= (type $generated@@576) $generated@@72)) (= (type $generated@@577) $generated@@72)) ($generated@@246 $generated@@575 ($generated@@446 $generated@@576 $generated@@577))) (and (= ($generated@@301 ($generated@@367 ($generated@@342 $generated@@175 $generated@@175) $generated@@575)) $generated@@575) ($generated@@159 ($generated@@367 ($generated@@342 $generated@@175 $generated@@175) $generated@@575) ($generated@@446 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@246 $generated@@575 ($generated@@446 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@72) (= (type $generated@@579) $generated@@72)) (= (type $generated@@580) $generated@@175)) ($generated@@246 $generated@@580 ($generated@@165 $generated@@578 $generated@@579))) (and (= ($generated@@301 ($generated@@367 $generated@@166 $generated@@580)) $generated@@580) ($generated@@159 ($generated@@367 $generated@@166 $generated@@580) ($generated@@165 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@246 $generated@@580 ($generated@@165 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@94 ($generated@@457 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@94 ($generated@@457 $generated@@582) $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@79)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@72) (= (type $generated@@586) $generated@@72)) (and (= ($generated@@83 ($generated@@165 $generated@@585 $generated@@586)) $generated@@64) (= ($generated@@583 ($generated@@165 $generated@@585 $generated@@586)) $generated@@69)))
 :pattern ( ($generated@@165 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@166) (= ($generated@@566 ($generated@@301 $generated@@587)) ($generated@@567 $generated@@587)))
 :pattern ( ($generated@@566 ($generated@@301 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@175) ($generated@@246 $generated@@588 ($generated@@88 0))) (and (= ($generated@@301 ($generated@@367 $generated@@2 $generated@@588)) $generated@@588) ($generated@@159 ($generated@@367 ($generated@@89 $generated@@175 $generated@@4) $generated@@588) ($generated@@88 0))))
 :pattern ( ($generated@@246 $generated@@588 ($generated@@88 0)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@175) (= (type $generated@@590) $generated@@72)) ($generated@@246 $generated@@589 ($generated@@260 $generated@@590))) (and (= ($generated@@301 ($generated@@367 ($generated@@89 $generated@@175 $generated@@4) $generated@@589)) $generated@@589) ($generated@@159 ($generated@@367 ($generated@@89 $generated@@175 $generated@@4) $generated@@589) ($generated@@260 $generated@@590))))
 :pattern ( ($generated@@246 $generated@@589 ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@175) (= (type $generated@@592) $generated@@72)) ($generated@@246 $generated@@591 ($generated@@265 $generated@@592))) (and (= ($generated@@301 ($generated@@367 ($generated@@89 $generated@@175 $generated@@4) $generated@@591)) $generated@@591) ($generated@@159 ($generated@@367 ($generated@@89 $generated@@175 $generated@@4) $generated@@591) ($generated@@265 $generated@@592))))
 :pattern ( ($generated@@246 $generated@@591 ($generated@@265 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@175) (= (type $generated@@594) $generated@@72)) ($generated@@246 $generated@@593 ($generated@@180 $generated@@594))) (and (= ($generated@@301 ($generated@@367 ($generated@@89 $generated@@175 $generated@@2) $generated@@593)) $generated@@593) ($generated@@159 ($generated@@367 ($generated@@89 $generated@@175 $generated@@2) $generated@@593) ($generated@@180 $generated@@594))))
 :pattern ( ($generated@@246 $generated@@593 ($generated@@180 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@175) (= (type $generated@@596) $generated@@72)) ($generated@@246 $generated@@595 ($generated@@528 $generated@@596))) (and (= ($generated@@301 ($generated@@367 ($generated@@294 $generated@@175) $generated@@595)) $generated@@595) ($generated@@159 ($generated@@367 ($generated@@294 $generated@@175) $generated@@595) ($generated@@528 $generated@@596))))
 :pattern ( ($generated@@246 $generated@@595 ($generated@@528 $generated@@596)))
)))
(assert (= ($generated@@83 $generated@@149) $generated@@62))
(assert (= ($generated@@583 $generated@@149) $generated@@68))
(assert (= ($generated@@83 $generated@@152) $generated@@66))
(assert (= ($generated@@583 $generated@@152) $generated@@70))
(assert (= ($generated@@83 $generated@@242) $generated@@67))
(assert (= ($generated@@583 $generated@@242) $generated@@70))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@89 $generated@@175 $generated@@2)) (= (type $generated@@598) $generated@@72)) (= (type $generated@@599) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@597 ($generated@@180 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@175) (< 0 ($generated ($generated@@94 $generated@@597 $generated@@600)))) ($generated@@280 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@94 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@87 $generated@@597 ($generated@@180 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@166) (= (type $generated@@602) $generated@@72)) (= (type $generated@@603) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@157 $generated@@603) (and ($generated@@164 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@72) ($generated@@87 $generated@@601 ($generated@@165 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@87 $generated@@601 ($generated@@165 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@280 ($generated@@173 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@280 ($generated@@173 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@166) (= (type $generated@@606) $generated@@72)) (= (type $generated@@607) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@157 $generated@@607) (and ($generated@@164 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@72) ($generated@@87 $generated@@605 ($generated@@165 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@87 $generated@@605 ($generated@@165 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@280 ($generated@@174 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@280 ($generated@@174 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@175) (= (type $generated@@610) $generated@@175)) (= ($generated@@245 ($generated@@272 $generated@@609) ($generated@@272 $generated@@610)) ($generated@@272 ($generated@@245 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@245 ($generated@@272 $generated@@609) ($generated@@272 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@270 $generated@@611))) ($generated@@272 ($generated@@301 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@270 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ) (! (= ($generated@@301 ($generated@@272 $generated@@612)) ($generated@@272 ($generated@@301 $generated@@612)))
 :pattern ( ($generated@@301 ($generated@@272 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@295 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@294 $generated@@614)) (= ($generated@@293 $generated@@613) 0)) (= $generated@@613 ($generated@@292 $generated@@614))))
 :pattern ( ($generated@@293 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@89 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@316 ($generated@@95 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@316 $generated@@615) ($generated ($generated@@94 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@316 ($generated@@95 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@620) $generated@@2)) ($generated@@87 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@87 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@622) $generated@@3)) ($generated@@87 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@87 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@624) $generated@@4)) ($generated@@87 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@87 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@626) $generated@@486)) ($generated@@87 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@87 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@628) $generated@@175)) ($generated@@87 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@87 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@294 $generated@@175)) (= (type $generated@@630) $generated@@72)) (= ($generated@@159 $generated@@629 ($generated@@528 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@293 $generated@@629))) ($generated@@246 ($generated@@529 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@529 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@159 $generated@@629 ($generated@@528 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@294 $generated@@175)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@293 $generated@@633))) (< ($generated@@567 ($generated@@367 $generated@@166 ($generated@@529 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@567 ($generated@@367 $generated@@166 ($generated@@529 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@636) $generated@@72)) (= (type $generated@@637) $generated@@72)) ($generated@@159 $generated@@635 ($generated@@438 $generated@@636 $generated@@637))) (and (and ($generated@@159 ($generated@@322 $generated@@635) ($generated@@260 $generated@@636)) ($generated@@159 ($generated@@378 $generated@@635) ($generated@@260 $generated@@637))) ($generated@@159 ($generated@@412 $generated@@635) ($generated@@260 ($generated@@165 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@159 $generated@@635 ($generated@@438 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@342 $generated@@175 $generated@@175)) (= (type $generated@@639) $generated@@72)) (= (type $generated@@640) $generated@@72)) ($generated@@159 $generated@@638 ($generated@@446 $generated@@639 $generated@@640))) (and (and ($generated@@159 ($generated@@340 $generated@@638) ($generated@@265 $generated@@639)) ($generated@@159 ($generated@@389 $generated@@638) ($generated@@265 $generated@@640))) ($generated@@159 ($generated@@420 $generated@@638) ($generated@@265 ($generated@@165 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@159 $generated@@638 ($generated@@446 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@159 $generated@@641 $generated@@46))
 :pattern ( ($generated@@159 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@159 $generated@@642 $generated@@47))
 :pattern ( ($generated@@159 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@159 $generated@@643 $generated@@44))
 :pattern ( ($generated@@159 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@486) ($generated@@159 $generated@@644 $generated@@45))
 :pattern ( ($generated@@159 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@175) ($generated@@159 $generated@@645 $generated@@48))
 :pattern ( ($generated@@159 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@646) ($generated@@89 $generated@@175 $generated@@4)) (= (type $generated@@647) $generated@@90)) (= (type $generated@@648) $generated@@90)) (= (type $generated@@649) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@650) ($generated@@188 $generated@@90 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@654 true))
(let (($generated@@655  (=> (and (=> (and ($generated@@0 ($generated@@94 $generated@@646 ($generated@@301 $generated@@647))) ($generated@@0 ($generated@@94 $generated@@646 ($generated@@301 $generated@@648)))) (= ($generated ($generated@@96 ($generated@@94 $generated@@649 $generated@@647) $generated@@156)) ($generated ($generated@@96 ($generated@@94 $generated@@649 $generated@@648) $generated@@156)))) (= (ControlFlow 0 5) 1)) $generated@@654)))
(let (($generated@@656  (=> (and ($generated@@0 ($generated@@94 $generated@@646 ($generated@@301 $generated@@647))) ($generated@@0 ($generated@@94 $generated@@646 ($generated@@301 $generated@@648)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@647 $generated@@153))) (=> (not (= $generated@@647 $generated@@153)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@648 $generated@@153))) (=> (not (= $generated@@648 $generated@@153)) (=> (and (= ($generated ($generated@@96 ($generated@@94 $generated@@649 $generated@@647) $generated@@156)) ($generated ($generated@@96 ($generated@@94 $generated@@649 $generated@@648) $generated@@156))) (= (ControlFlow 0 2) 1)) $generated@@654))))))))
(let (($generated@@657  (=> (= $generated@@650 ($generated@@187 $generated@@153 $generated@@649 $generated@@60 false)) (=> (and (<= ($generated@@270 0) $generated@@651) ($generated@@87 ($generated@@8 $generated@@651) $generated@@46 $generated@@649)) (=> (and (and ($generated@@278 $generated@@651) (<= ($generated@@270 0) ($generated@@277 $generated@@651))) (and ($generated@@87 ($generated@@8 $generated@@651) $generated@@46 $generated@@649) ($generated@@278 $generated@@651))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@159 ($generated@@8 ($generated@@277 $generated@@651)) $generated@@149)) (=> ($generated@@159 ($generated@@8 ($generated@@277 $generated@@651)) $generated@@149) (=> (= $generated@@652 ($generated@@277 $generated@@651)) (=> (and (and (and ($generated@@87 ($generated@@8 $generated@@652) $generated@@149 $generated@@649) ($generated@@410 ($generated@@277 $generated@@651))) (and ($generated@@409 ($generated@@277 $generated@@651)) (forall (($generated@@658 Int) ) (!  (=> (<= ($generated@@270 0) $generated@@658) (and (<= ($generated@@270 0) ($generated@@277 $generated@@658)) ($generated@@409 ($generated@@277 $generated@@658))))
 :pattern ( ($generated@@277 $generated@@658))
)))) (and (and ($generated@@159 $generated@@647 $generated@@242) ($generated@@87 $generated@@647 $generated@@242 $generated@@649)) (and ($generated@@159 $generated@@648 $generated@@242) ($generated@@87 $generated@@648 $generated@@242 $generated@@649)))) (and (=> (= (ControlFlow 0 6) 2) $generated@@656) (=> (= (ControlFlow 0 6) 5) $generated@@655)))))))))))
(let (($generated@@659  (=> (and ($generated@@157 $generated@@649) ($generated@@653 $generated@@649)) (=> (and (and ($generated@@159 $generated@@646 ($generated@@260 $generated@@242)) ($generated@@87 $generated@@646 ($generated@@260 $generated@@242) $generated@@649)) (and (= 2 $generated@@276) (= (ControlFlow 0 8) 6))) $generated@@657))))
$generated@@659))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
