(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@361 (T@U) Bool)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@574 () Int)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@63))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@140)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@68) (= (type $generated@@223) $generated@@68)) (= (type $generated@@224) $generated@@149)) (= (type $generated@@225) $generated@@149)) (= ($generated@@136 ($generated@@218 $generated@@224 $generated@@225) ($generated@@139 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@136 ($generated@@218 $generated@@224 $generated@@225) ($generated@@139 $generated@@222 $generated@@223)))
)))
(assert (= (type $generated@@226) $generated@@68))
(assert ($generated@@136 $generated@@155 $generated@@226))
(assert (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@227 $generated@@228)) ($generated@@78 $generated@@155 $generated@@226 $generated@@228))
 :pattern ( ($generated@@78 $generated@@155 $generated@@226 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@140) (= (type $generated@@230) $generated@@140)) (= ($generated@@146 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@146 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@140) (= (type $generated@@233) $generated@@140)) (= ($generated@@231 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@68)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@237) $generated@@68)) (= ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@149) ($generated@@0 ($generated@@85 $generated@@236 $generated@@238))) ($generated@@219 $generated@@238 $generated@@237))
 :pattern ( ($generated@@85 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@68)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@242) $generated@@68)) (= ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@149) ($generated@@0 ($generated@@85 $generated@@241 $generated@@243))) ($generated@@219 $generated@@243 $generated@@242))
 :pattern ( ($generated@@85 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (= (type $generated@@249) $generated@@140) (= (type $generated@@250) $generated@@140)) (and ($generated@@248 $generated@@249) ($generated@@248 $generated@@250))) (= ($generated@@231 $generated@@249 $generated@@250) true))
 :pattern ( ($generated@@231 $generated@@249 $generated@@250) ($generated@@248 $generated@@249))
 :pattern ( ($generated@@231 $generated@@249 $generated@@250) ($generated@@248 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@68) (= (type $generated@@253) $generated@@68)) (= (type $generated@@254) $generated@@149)) (= (type $generated@@255) $generated@@149)) (= (type $generated@@256) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@227 $generated@@256)) (= ($generated@@78 ($generated@@218 $generated@@254 $generated@@255) ($generated@@139 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@78 ($generated@@218 $generated@@254 $generated@@255) ($generated@@139 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@140) (= ($generated@@138 $generated@@257) (= ($generated@@154 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@140) (= ($generated@@248 $generated@@258) (= ($generated@@154 $generated@@258) $generated@@63)))
 :pattern ( ($generated@@248 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@140) (= ($generated@@259 $generated@@260) (= ($generated@@154 $generated@@260) $generated@@65)))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@140) ($generated@@138 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@149) (= (type $generated@@263) $generated@@149)) (= $generated@@261 ($generated@@218 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@138 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@140) ($generated@@248 $generated@@272)) (= $generated@@272 $generated@@155))
 :pattern ( ($generated@@248 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@140)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@140) ($generated@@259 $generated@@275)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@140) (= $generated@@275 ($generated@@273 $generated@@276)))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@259 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@149)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@251 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@78 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@251 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@80 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@83 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@80 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@85 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@80 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@85 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@85 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@80 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@85 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@85 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@83 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@80 $generated@@325 $generated@@2)) (= ($generated@@158 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@85 $generated@@324 $generated@@326))) (<= ($generated ($generated@@85 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@85 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@158 $generated@@324))
)))
(assert (forall (($generated@@328 T@T) ($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@149) ($generated@@219 $generated@@330 $generated@@226)) (and (= ($generated@@277 ($generated@@327 $generated@@140 $generated@@330)) $generated@@330) ($generated@@136 ($generated@@327 $generated@@140 $generated@@330) $generated@@226)))
 :pattern ( ($generated@@219 $generated@@330 $generated@@226))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@140) (= ($generated@@136 ($generated@@273 $generated@@331) $generated@@226) ($generated@@136 $generated@@331 $generated@@226)))
 :pattern ( ($generated@@136 ($generated@@273 $generated@@331) $generated@@226))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@140)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@334) $generated@@140) (= (type $generated@@335) $generated@@140)) (and ($generated@@259 $generated@@334) ($generated@@259 $generated@@335))) (= ($generated@@231 $generated@@334 $generated@@335) ($generated@@231 ($generated@@332 $generated@@334) ($generated@@332 $generated@@335))))
 :pattern ( ($generated@@231 $generated@@334 $generated@@335) ($generated@@259 $generated@@334))
 :pattern ( ($generated@@231 $generated@@334 $generated@@335) ($generated@@259 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@292 (type $generated@@336))))
(let (($generated@@338 ($generated@@291 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@290 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@289 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@85 ($generated@@288 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@288 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@292 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@292 (type $generated@@343))))
(let (($generated@@345 ($generated@@291 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@290 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@289 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@310 (type $generated@@347))))
(let (($generated@@349 ($generated@@309 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@308 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@307 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@306 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@80 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@359) $generated@@68)) (= ($generated@@136 $generated@@358 ($generated@@157 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@358 $generated@@360)))) ($generated@@219 $generated@@360 $generated@@359))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@136 $generated@@358 ($generated@@157 $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@140) ($generated@@361 $generated@@362)) (or ($generated@@248 $generated@@362) ($generated@@259 $generated@@362)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@364) $generated@@68)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@363 ($generated@@234 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@149) ($generated@@0 ($generated@@85 $generated@@363 $generated@@366))) ($generated@@251 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@85 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@363 ($generated@@234 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@368) $generated@@68)) (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@367 ($generated@@239 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@149) ($generated@@0 ($generated@@85 $generated@@367 $generated@@370))) ($generated@@251 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@85 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@78 $generated@@367 ($generated@@239 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated ($generated@@85 ($generated@@283 $generated@@372) $generated@@371)) 0))
 :pattern ( (let (($generated@@372 (type $generated@@371)))
($generated@@85 ($generated@@283 $generated@@372) $generated@@371)))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@292 (type $generated@@376))))
(let (($generated@@378 ($generated@@291 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@80 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@380) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@85 ($generated@@288 $generated@@379) ($generated@@147 ($generated@@327 $generated@@140 $generated@@380)))) (= ($generated@@85 ($generated@@374 $generated@@379) ($generated@@147 ($generated@@327 $generated@@140 $generated@@380))) ($generated@@148 ($generated@@327 $generated@@140 $generated@@380))))))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@310 (type $generated@@384))))
(let (($generated@@386 ($generated@@309 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@80 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@85 ($generated@@306 $generated@@387) ($generated@@147 ($generated@@327 $generated@@140 $generated@@388)))) (= ($generated@@85 ($generated@@382 $generated@@387) ($generated@@147 ($generated@@327 $generated@@140 $generated@@388))) ($generated@@148 ($generated@@327 $generated@@140 $generated@@388))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@291 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@290 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@85 ($generated@@340 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@85 ($generated@@288 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@85 ($generated@@374 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@85 ($generated@@288 $generated@@389) $generated@@393))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@309 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@308 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@85 ($generated@@351 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@85 ($generated@@306 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@85 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@394) $generated@@398))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@68)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@403) $generated@@68)) (= (type $generated@@404) $generated@@68)) (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@288 $generated@@402) $generated@@406))) (and ($generated@@251 ($generated@@85 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@251 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@288 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@78 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@68)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) $generated@@68)) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@410) $generated@@414))) (and ($generated@@251 ($generated@@85 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@251 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@78 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@415) $generated@@140) (= (type $generated@@416) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@227 $generated@@416)) (= ($generated@@78 ($generated@@273 $generated@@415) $generated@@226 $generated@@416) ($generated@@78 $generated@@415 $generated@@226 $generated@@416)))
 :pattern ( ($generated@@78 ($generated@@273 $generated@@415) $generated@@226 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@140) ($generated@@136 $generated@@417 $generated@@226)) (or ($generated@@248 $generated@@417) ($generated@@259 $generated@@417)))
 :pattern ( ($generated@@259 $generated@@417) ($generated@@136 $generated@@417 $generated@@226))
 :pattern ( ($generated@@248 $generated@@417) ($generated@@136 $generated@@417 $generated@@226))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@80 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@310 (type $generated@@420))))
(let (($generated@@422 ($generated@@309 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@308 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@307 $generated@@422 $generated@@421)) (= ($generated@@306 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@306 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@310 (type $generated@@423))))
(let (($generated@@425 ($generated@@309 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@308 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@307 $generated@@425 $generated@@424)) (= ($generated@@351 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@351 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@310 (type $generated@@426))))
(let (($generated@@428 ($generated@@309 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@308 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@307 $generated@@428 $generated@@427)) (= ($generated@@381 $generated@@426) ($generated@@418 $generated@@149))))))
 :pattern ( ($generated@@381 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@292 (type $generated@@429))))
(let (($generated@@431 ($generated@@291 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@290 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@289 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@149) (= (type $generated@@433) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@373 $generated@@429) ($generated@@277 ($generated@@218 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@373 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@310 (type $generated@@434))))
(let (($generated@@436 ($generated@@309 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@308 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@307 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@149) (= (type $generated@@438) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@434) ($generated@@277 ($generated@@218 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@149) ($generated@@219 $generated@@439 $generated@@46)) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@439)) $generated@@439) ($generated@@136 ($generated@@327 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@149) ($generated@@219 $generated@@440 $generated@@47)) (and (= ($generated@@277 ($generated@@327 $generated@@3 $generated@@440)) $generated@@440) ($generated@@136 ($generated@@327 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@149) ($generated@@219 $generated@@441 $generated@@44)) (and (= ($generated@@277 ($generated@@327 $generated@@4 $generated@@441)) $generated@@441) ($generated@@136 ($generated@@327 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@149) ($generated@@219 $generated@@443 $generated@@45)) (and (= ($generated@@277 ($generated@@327 $generated@@442 $generated@@443)) $generated@@443) ($generated@@136 ($generated@@327 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@68) (= ($generated@@219 ($generated@@277 $generated@@444) $generated@@445) ($generated@@136 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@219 ($generated@@277 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@83 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@80 $generated@@447 $generated@@2)) (<= 0 ($generated@@282 $generated@@446))))
 :pattern ( ($generated@@282 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@267 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@266 $generated@@449)) (<= 0 ($generated@@265 $generated@@448))))
 :pattern ( ($generated@@265 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@450 ($generated@@399 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@399 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@454 ($generated@@399 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@399 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@68) (= (type $generated@@459) $generated@@68)) (= ($generated@@76 ($generated@@399 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@460 ($generated@@407 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@407 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@407 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@76 ($generated@@407 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@149) (= (type $generated@@471) $generated@@149)) (= ($generated@@154 ($generated@@218 $generated@@470 $generated@@471)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@139 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@139 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@139 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@139 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@149) (= (type $generated@@481) $generated@@149)) (= ($generated@@147 ($generated@@218 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@218 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@149) (= (type $generated@@483) $generated@@149)) (= ($generated@@148 ($generated@@218 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@218 $generated@@482 $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ($generated@@488 Int) ) (! (let (($generated@@489 ($generated@@267 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487 $generated@@488)) $generated@@489))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@266 $generated@@149)) (= (type $generated@@491) $generated@@68)) (= (type $generated@@492) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@490 ($generated@@484 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@265 $generated@@490))) ($generated@@251 ($generated@@485 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@485 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@78 $generated@@490 ($generated@@484 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@79 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@79 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@68) (= ($generated@@496 ($generated@@234 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@234 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@76 ($generated@@234 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@500 ($generated@@239 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@239 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@76 ($generated@@239 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@504 ($generated@@157 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@157 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@508 ($generated@@484 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@484 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@76 ($generated@@484 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@484 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@140) (= ($generated@@154 ($generated@@273 $generated@@512)) $generated@@65))
 :pattern ( ($generated@@273 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@140) (= ($generated@@332 ($generated@@273 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@273 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@327 $generated@@515 ($generated@@277 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@277 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@517) $generated@@68)) (= (type $generated@@518) $generated@@68)) (= ($generated@@136 $generated@@516 ($generated@@399 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@288 $generated@@516) $generated@@519))) (and ($generated@@219 ($generated@@85 ($generated@@374 $generated@@516) $generated@@519) $generated@@518) ($generated@@219 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@516) $generated@@519))
 :pattern ( ($generated@@85 ($generated@@288 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@136 $generated@@516 ($generated@@399 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) $generated@@68)) (= ($generated@@136 $generated@@520 ($generated@@407 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@520) $generated@@523))) (and ($generated@@219 ($generated@@85 ($generated@@382 $generated@@520) $generated@@523) $generated@@522) ($generated@@219 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@520) $generated@@523))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@136 $generated@@520 ($generated@@407 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@149) (= (type $generated@@527) $generated@@149)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@218 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@218 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@149) (= (type $generated@@529) $generated@@149)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@218 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@218 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@149) (= (type $generated@@531) $generated@@68)) (= (type $generated@@532) $generated@@68)) ($generated@@219 $generated@@530 ($generated@@399 $generated@@531 $generated@@532))) (and (= ($generated@@277 ($generated@@327 ($generated@@290 $generated@@149 $generated@@149) $generated@@530)) $generated@@530) ($generated@@136 ($generated@@327 ($generated@@290 $generated@@149 $generated@@149) $generated@@530) ($generated@@399 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@219 $generated@@530 ($generated@@399 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@149) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) ($generated@@219 $generated@@533 ($generated@@407 $generated@@534 $generated@@535))) (and (= ($generated@@277 ($generated@@327 ($generated@@308 $generated@@149 $generated@@149) $generated@@533)) $generated@@533) ($generated@@136 ($generated@@327 ($generated@@308 $generated@@149 $generated@@149) $generated@@533) ($generated@@407 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@219 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@149)) ($generated@@219 $generated@@538 ($generated@@139 $generated@@536 $generated@@537))) (and (= ($generated@@277 ($generated@@327 $generated@@140 $generated@@538)) $generated@@538) ($generated@@136 ($generated@@327 $generated@@140 $generated@@538) ($generated@@139 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@219 $generated@@538 ($generated@@139 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@140) (< ($generated@@525 $generated@@539) ($generated@@525 ($generated@@273 $generated@@539))))
 :pattern ( ($generated@@273 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@85 ($generated@@418 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@85 ($generated@@418 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@73)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@544 $generated@@545)) $generated@@62) (= ($generated@@542 ($generated@@139 $generated@@544 $generated@@545)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@140) (= ($generated@@524 ($generated@@277 $generated@@546)) ($generated@@525 $generated@@546)))
 :pattern ( ($generated@@524 ($generated@@277 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@149) ($generated@@219 $generated@@547 ($generated@@79 0))) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@547)) $generated@@547) ($generated@@136 ($generated@@327 ($generated@@80 $generated@@149 $generated@@4) $generated@@547) ($generated@@79 0))))
 :pattern ( ($generated@@219 $generated@@547 ($generated@@79 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@149) (= (type $generated@@549) $generated@@68)) ($generated@@219 $generated@@548 ($generated@@234 $generated@@549))) (and (= ($generated@@277 ($generated@@327 ($generated@@80 $generated@@149 $generated@@4) $generated@@548)) $generated@@548) ($generated@@136 ($generated@@327 ($generated@@80 $generated@@149 $generated@@4) $generated@@548) ($generated@@234 $generated@@549))))
 :pattern ( ($generated@@219 $generated@@548 ($generated@@234 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@149) (= (type $generated@@551) $generated@@68)) ($generated@@219 $generated@@550 ($generated@@239 $generated@@551))) (and (= ($generated@@277 ($generated@@327 ($generated@@80 $generated@@149 $generated@@4) $generated@@550)) $generated@@550) ($generated@@136 ($generated@@327 ($generated@@80 $generated@@149 $generated@@4) $generated@@550) ($generated@@239 $generated@@551))))
 :pattern ( ($generated@@219 $generated@@550 ($generated@@239 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@149) (= (type $generated@@553) $generated@@68)) ($generated@@219 $generated@@552 ($generated@@157 $generated@@553))) (and (= ($generated@@277 ($generated@@327 ($generated@@80 $generated@@149 $generated@@2) $generated@@552)) $generated@@552) ($generated@@136 ($generated@@327 ($generated@@80 $generated@@149 $generated@@2) $generated@@552) ($generated@@157 $generated@@553))))
 :pattern ( ($generated@@219 $generated@@552 ($generated@@157 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@149) (= (type $generated@@555) $generated@@68)) ($generated@@219 $generated@@554 ($generated@@484 $generated@@555))) (and (= ($generated@@277 ($generated@@327 ($generated@@266 $generated@@149) $generated@@554)) $generated@@554) ($generated@@136 ($generated@@327 ($generated@@266 $generated@@149) $generated@@554) ($generated@@484 $generated@@555))))
 :pattern ( ($generated@@219 $generated@@554 ($generated@@484 $generated@@555)))
)))
(assert (= ($generated@@76 $generated@@226) $generated@@64))
(assert (= ($generated@@542 $generated@@226) $generated@@67))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@556 ($generated@@157 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@556 $generated@@559)))) ($generated@@251 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@85 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@78 $generated@@556 ($generated@@157 $generated@@557) $generated@@558))
)))
(assert (= $generated@@155 ($generated@@244 $generated@@155)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@140) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@227 $generated@@562) (and ($generated@@138 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@68) ($generated@@78 $generated@@560 ($generated@@139 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@78 $generated@@560 ($generated@@139 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@251 ($generated@@147 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@251 ($generated@@147 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@140) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@227 $generated@@566) (and ($generated@@138 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@68) ($generated@@78 $generated@@564 ($generated@@139 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@78 $generated@@564 ($generated@@139 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@251 ($generated@@148 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@251 ($generated@@148 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@140) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@227 $generated@@569) (and ($generated@@259 $generated@@568) ($generated@@78 $generated@@568 $generated@@226 $generated@@569)))) ($generated@@78 ($generated@@332 $generated@@568) $generated@@226 $generated@@569))
 :pattern ( ($generated@@78 ($generated@@332 $generated@@568) $generated@@226 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) (= (type $generated@@571) $generated@@149)) (= ($generated@@218 ($generated@@244 $generated@@570) ($generated@@244 $generated@@571)) ($generated@@244 ($generated@@218 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@218 ($generated@@244 $generated@@570) ($generated@@244 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@140) (= ($generated@@273 ($generated@@244 $generated@@572)) ($generated@@244 ($generated@@273 $generated@@572))))
 :pattern ( ($generated@@273 ($generated@@244 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@277 ($generated@@244 $generated@@573)) ($generated@@244 ($generated@@277 $generated@@573)))
 :pattern ( ($generated@@277 ($generated@@244 $generated@@573)))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@575 $generated@@577)) $generated@@140)
 :pattern ( ($generated@@575 $generated@@577))
)))
(assert  (=> (<= 1 $generated@@574) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@140) (or ($generated@@576 $generated@@578) (and (not (= 1 $generated@@574)) ($generated@@136 $generated@@578 $generated@@226)))) ($generated@@136 ($generated@@575 $generated@@578) $generated@@226))
 :pattern ( ($generated@@575 $generated@@578))
))))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@267 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@266 $generated@@580)) (= ($generated@@265 $generated@@579) 0)) (= $generated@@579 ($generated@@264 $generated@@580))))
 :pattern ( ($generated@@265 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@80 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@282 ($generated@@86 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@282 $generated@@581) ($generated ($generated@@85 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@282 ($generated@@86 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@586) $generated@@2)) ($generated@@78 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@78 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@588) $generated@@3)) ($generated@@78 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@78 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@590) $generated@@4)) ($generated@@78 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@78 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@442)) ($generated@@78 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@78 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@594) $generated@@149)) ($generated@@78 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@78 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@266 $generated@@149)) (= (type $generated@@596) $generated@@68)) (= ($generated@@136 $generated@@595 ($generated@@484 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@265 $generated@@595))) ($generated@@219 ($generated@@485 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@485 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@136 $generated@@595 ($generated@@484 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@266 $generated@@149)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@265 $generated@@599))) (< ($generated@@525 ($generated@@327 $generated@@140 ($generated@@485 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@525 ($generated@@327 $generated@@140 ($generated@@485 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@136 $generated@@601 ($generated@@399 $generated@@602 $generated@@603))) (and (and ($generated@@136 ($generated@@288 $generated@@601) ($generated@@234 $generated@@602)) ($generated@@136 ($generated@@340 $generated@@601) ($generated@@234 $generated@@603))) ($generated@@136 ($generated@@373 $generated@@601) ($generated@@234 ($generated@@139 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@136 $generated@@601 ($generated@@399 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@68)) ($generated@@136 $generated@@604 ($generated@@407 $generated@@605 $generated@@606))) (and (and ($generated@@136 ($generated@@306 $generated@@604) ($generated@@239 $generated@@605)) ($generated@@136 ($generated@@351 $generated@@604) ($generated@@239 $generated@@606))) ($generated@@136 ($generated@@381 $generated@@604) ($generated@@239 ($generated@@139 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@136 $generated@@604 ($generated@@407 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@136 $generated@@607 $generated@@46))
 :pattern ( ($generated@@136 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@136 $generated@@608 $generated@@47))
 :pattern ( ($generated@@136 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@136 $generated@@609 $generated@@44))
 :pattern ( ($generated@@136 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@442) ($generated@@136 $generated@@610 $generated@@45))
 :pattern ( ($generated@@136 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@149) ($generated@@136 $generated@@611 $generated@@48))
 :pattern ( ($generated@@136 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@613) $generated@@140) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@612) $generated@@140)) (= (type $generated@@615) ($generated@@164 $generated@@81 $generated@@4))) (= (type $generated@@616) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@618  (=> (and (forall (($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@140) ($generated@@136 $generated@@619 $generated@@226)) (not ($generated@@0 ($generated@@244 ($generated@@11 true))))) (and (and ($generated@@361 ($generated@@575 ($generated@@273 $generated@@619))) ($generated@@361 ($generated@@575 $generated@@619))) (and ($generated@@576 ($generated@@273 $generated@@619)) ($generated@@576 $generated@@619))))
 :pattern ( ($generated@@273 $generated@@619))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@140) ($generated@@136 $generated@@620 $generated@@226)) (or true ($generated@@231 ($generated@@575 ($generated@@273 $generated@@620)) ($generated@@575 $generated@@620))))
 :pattern ( ($generated@@273 $generated@@620))
)))))
(let (($generated@@621  (=> (and ($generated@@0 ($generated@@244 ($generated@@11 true))) (= (ControlFlow 0 5) 2)) $generated@@618)))
(let (($generated@@622  (=> (not ($generated@@0 ($generated@@244 ($generated@@11 true)))) (=> (and (= $generated@@612 ($generated@@273 $generated@@613)) ($generated@@78 $generated@@612 $generated@@226 $generated@@614)) (=> (and (and ($generated@@576 ($generated@@273 $generated@@613)) ($generated@@78 $generated@@613 $generated@@226 $generated@@614)) (and ($generated@@576 $generated@@613) (= (ControlFlow 0 4) 2))) $generated@@618)))))
(let (($generated@@623  (=> (and ($generated@@136 $generated@@613 $generated@@226) ($generated@@78 $generated@@613 $generated@@226 $generated@@614)) (and (=> (= (ControlFlow 0 6) 4) $generated@@622) (=> (= (ControlFlow 0 6) 5) $generated@@621)))))
(let (($generated@@624  (=> (and (not (and ($generated@@136 $generated@@613 $generated@@226) ($generated@@78 $generated@@613 $generated@@226 $generated@@614))) (= (ControlFlow 0 3) 2)) $generated@@618)))
(let (($generated@@625  (=> (= $generated@@615 ($generated@@163 $generated@@616 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@623) (=> (= (ControlFlow 0 7) 3) $generated@@624)))))
(let (($generated@@626  (=> (and (and ($generated@@227 $generated@@614) ($generated@@617 $generated@@614)) (and (= 2 $generated@@574) (= (ControlFlow 0 8) 7))) $generated@@625)))
$generated@@626))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
