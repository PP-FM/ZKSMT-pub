(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@T) T@T)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@U Int) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@379 () Int)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) Bool)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert  (and (and (forall (($generated@@250 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@250)) 17)) (forall (($generated@@251 T@T) ) (! (= ($generated@@246 ($generated@@247 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@247 $generated@@251))
))) (forall (($generated@@252 T@U) ($generated@@253 Int) ) (! (let (($generated@@254 ($generated@@246 (type $generated@@252))))
(= (type ($generated@@249 $generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@249 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@246 (type $generated@@255))))
 (=> (and (= (type $generated@@255) ($generated@@247 $generated@@257)) (= (type $generated@@256) ($generated@@247 $generated@@257))) (= ($generated@@245 $generated@@255 $generated@@256)  (and (= ($generated@@248 $generated@@255) ($generated@@248 $generated@@256)) (forall (($generated@@258 Int) ) (!  (=> (and (<= 0 $generated@@258) (< $generated@@258 ($generated@@248 $generated@@255))) (= ($generated@@249 $generated@@255 $generated@@258) ($generated@@249 $generated@@256 $generated@@258)))
 :pattern ( ($generated@@249 $generated@@255 $generated@@258))
 :pattern ( ($generated@@249 $generated@@256 $generated@@258))
))))))
 :pattern ( ($generated@@245 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@211 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@247 $generated@@263))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@248 ($generated@@262 $generated@@264)) 0)
 :pattern ( ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@145)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@64) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@74 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@236 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@76 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@79 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@76 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@81 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 18)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@76 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@79 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@76 $generated@@313 $generated@@2)) (= ($generated@@151 $generated@@312) (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@313) (and (<= 0 ($generated ($generated@@81 $generated@@312 $generated@@314))) (<= ($generated ($generated@@81 $generated@@312 $generated@@314)) ($generated@@270 $generated@@312))))
 :pattern ( ($generated@@81 $generated@@312 $generated@@314))
)))))
 :pattern ( ($generated@@151 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@280 (type $generated@@315))))
(let (($generated@@317 ($generated@@279 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@278 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@277 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@276 $generated@@315))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@280 (type $generated@@320))))
(= (type ($generated@@319 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@280 (type $generated@@322))))
(let (($generated@@324 ($generated@@279 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@278 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@277 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@319 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@298 (type $generated@@326))))
(let (($generated@@328 ($generated@@297 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@296 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@295 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@294 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@298 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@298 (type $generated@@333))))
(let (($generated@@335 ($generated@@297 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@296 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@295 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@338) $generated@@64)) (= ($generated@@132 $generated@@337 ($generated@@150 $generated@@338)) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@337 $generated@@339)))) ($generated@@212 $generated@@339 $generated@@338))
 :pattern ( ($generated@@81 $generated@@337 $generated@@339))
))))
 :pattern ( ($generated@@132 $generated@@337 ($generated@@150 $generated@@338)))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@341) $generated@@64)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@340 ($generated@@221 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@145) ($generated@@0 ($generated@@81 $generated@@340 $generated@@343))) ($generated@@236 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@81 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@74 $generated@@340 ($generated@@221 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@226 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@145) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@236 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@226 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated ($generated@@81 ($generated@@271 $generated@@349) $generated@@348)) 0))
 :pattern ( (let (($generated@@349 (type $generated@@348)))
($generated@@81 ($generated@@271 $generated@@349) $generated@@348)))
)))
(assert  (and (and (forall (($generated@@353 T@U) ) (! (= (type ($generated@@350 $generated@@353)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@350 $generated@@353))
)) (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@351 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@280 (type $generated@@356))))
(let (($generated@@358 ($generated@@279 (type $generated@@356))))
(= (type ($generated@@352 $generated@@356)) ($generated@@76 $generated@@358 $generated@@357))))
 :pattern ( ($generated@@352 $generated@@356))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@360) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@359) $generated@@360))  (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@359) ($generated@@143 ($generated@@351 $generated@@136 $generated@@360)))) (= ($generated@@81 ($generated@@352 $generated@@359) ($generated@@143 ($generated@@351 $generated@@136 $generated@@360))) ($generated@@144 ($generated@@351 $generated@@136 $generated@@360))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@359) $generated@@360))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@298 (type $generated@@364))))
(let (($generated@@366 ($generated@@297 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@76 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@368) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@367) ($generated@@143 ($generated@@351 $generated@@136 $generated@@368)))) (= ($generated@@81 ($generated@@362 $generated@@367) ($generated@@143 ($generated@@351 $generated@@136 $generated@@368))) ($generated@@144 ($generated@@351 $generated@@136 $generated@@368))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@279 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@278 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@319 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@352 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@319 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@297 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@296 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@362 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@374) $generated@@375))
)))
(assert  (and (and (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@380 $generated@@384 $generated@@385)) ($generated@@247 $generated@@145))
 :pattern ( ($generated@@380 $generated@@384 $generated@@385))
)) (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@382 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (= (type ($generated@@383 $generated@@388)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@388))
))))
(assert  (=> (<= 2 $generated@@379) (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@390) ($generated@@247 $generated@@145))) (or ($generated@@381 $generated@@389 $generated@@390) (and (not (= 2 $generated@@379)) (and ($generated@@132 $generated@@389 ($generated@@382 ($generated@@383 $generated@@46) ($generated@@383 $generated@@46))) ($generated@@132 $generated@@390 ($generated@@383 $generated@@46)))))) ($generated@@132 ($generated@@380 $generated@@389 $generated@@390) ($generated@@383 $generated@@46)))
 :pattern ( ($generated@@380 $generated@@389 $generated@@390))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@382 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@391) $generated@@395))) (and ($generated@@236 ($generated@@81 ($generated@@352 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@236 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@382 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@399) $generated@@403))) (and ($generated@@236 ($generated@@81 ($generated@@362 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@236 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@246 (type $generated@@404))))
 (=> (and (and (= (type $generated@@404) ($generated@@247 $generated@@406)) (= (type $generated@@405) ($generated@@247 $generated@@406))) ($generated@@245 $generated@@404 $generated@@405)) (= $generated@@404 $generated@@405)))
 :pattern ( ($generated@@245 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@76 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@298 (type $generated@@409))))
(let (($generated@@411 ($generated@@297 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@296 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@295 $generated@@411 $generated@@410)) (= ($generated@@294 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@294 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@298 (type $generated@@412))))
(let (($generated@@414 ($generated@@297 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@296 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@295 $generated@@414 $generated@@413)) (= ($generated@@330 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@330 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@298 (type $generated@@415))))
(let (($generated@@417 ($generated@@297 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@296 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@295 $generated@@417 $generated@@416)) (= ($generated@@361 $generated@@415) ($generated@@407 $generated@@145))))))
 :pattern ( ($generated@@361 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@280 (type $generated@@418))))
(let (($generated@@420 ($generated@@279 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@278 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@277 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@145) (= (type $generated@@422) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@418) ($generated@@265 ($generated@@211 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@350 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@298 (type $generated@@423))))
(let (($generated@@425 ($generated@@297 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@296 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@295 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@145) (= (type $generated@@427) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@423) ($generated@@265 ($generated@@211 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@361 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@212 $generated@@428 $generated@@46)) (and (= ($generated@@265 ($generated@@351 $generated@@2 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@351 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@212 $generated@@429 $generated@@47)) (and (= ($generated@@265 ($generated@@351 $generated@@3 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@351 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@212 $generated@@430 $generated@@44)) (and (= ($generated@@265 ($generated@@351 $generated@@4 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@351 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@212 $generated@@432 $generated@@45)) (and (= ($generated@@265 ($generated@@351 $generated@@431 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@351 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@64) (= ($generated@@212 ($generated@@265 $generated@@433) $generated@@434) ($generated@@132 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@212 ($generated@@265 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@76 $generated@@436 $generated@@2)) (<= 0 ($generated@@270 $generated@@435))))
 :pattern ( ($generated@@270 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@246 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@247 $generated@@438)) (<= 0 ($generated@@248 $generated@@437))))
 :pattern ( ($generated@@248 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@382 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@382 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@382 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@382 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@382 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@396 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@396 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@396 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@459 $generated@@460)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@135 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@135 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@211 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@211 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@247 $generated@@145)) (= (type $generated@@474) $generated@@64)) (= (type $generated@@475) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@473 ($generated@@383 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@248 $generated@@473))) ($generated@@236 ($generated@@249 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@249 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@74 $generated@@473 ($generated@@383 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@75 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@75 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@221 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@221 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@226 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@226 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@150 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@150 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@383 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@383 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@383 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@383 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(= ($generated@@351 $generated@@496 ($generated@@265 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@265 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) $generated@@64)) (= ($generated@@132 $generated@@497 ($generated@@382 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@497) $generated@@500))) (and ($generated@@212 ($generated@@81 ($generated@@352 $generated@@497) $generated@@500) $generated@@499) ($generated@@212 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@497) $generated@@500))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@132 $generated@@497 ($generated@@382 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) (= ($generated@@132 $generated@@501 ($generated@@396 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@501) $generated@@504))) (and ($generated@@212 ($generated@@81 ($generated@@362 $generated@@501) $generated@@504) $generated@@503) ($generated@@212 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@501) $generated@@504))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@132 $generated@@501 ($generated@@396 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) (= (type $generated@@508) $generated@@145)) (< ($generated@@505 $generated@@507) ($generated@@506 ($generated@@211 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@211 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@145)) (< ($generated@@505 $generated@@510) ($generated@@506 ($generated@@211 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@211 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) ($generated@@212 $generated@@511 ($generated@@382 $generated@@512 $generated@@513))) (and (= ($generated@@265 ($generated@@351 ($generated@@278 $generated@@145 $generated@@145) $generated@@511)) $generated@@511) ($generated@@132 ($generated@@351 ($generated@@278 $generated@@145 $generated@@145) $generated@@511) ($generated@@382 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@511 ($generated@@382 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@514 ($generated@@396 $generated@@515 $generated@@516))) (and (= ($generated@@265 ($generated@@351 ($generated@@296 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@351 ($generated@@296 $generated@@145 $generated@@145) $generated@@514) ($generated@@396 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@396 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@145)) ($generated@@212 $generated@@519 ($generated@@135 $generated@@517 $generated@@518))) (and (= ($generated@@265 ($generated@@351 $generated@@136 $generated@@519)) $generated@@519) ($generated@@132 ($generated@@351 $generated@@136 $generated@@519) ($generated@@135 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@135 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (not ($generated@@0 ($generated@@81 ($generated@@407 $generated@@521) $generated@@520))))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@81 ($generated@@407 $generated@@521) $generated@@520)))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@524 $generated@@525)) $generated@@62) (= ($generated@@522 ($generated@@135 $generated@@524 $generated@@525)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@136) (= ($generated@@505 ($generated@@265 $generated@@526)) ($generated@@506 $generated@@526)))
 :pattern ( ($generated@@505 ($generated@@265 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@212 $generated@@527 ($generated@@75 0))) (and (= ($generated@@265 ($generated@@351 $generated@@2 $generated@@527)) $generated@@527) ($generated@@132 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@75 0)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@528 ($generated@@221 $generated@@529))) (and (= ($generated@@265 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@528) ($generated@@221 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@528 ($generated@@221 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@226 $generated@@531))) (and (= ($generated@@265 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@530) ($generated@@226 $generated@@531))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@226 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@212 $generated@@532 ($generated@@150 $generated@@533))) (and (= ($generated@@265 ($generated@@351 ($generated@@76 $generated@@145 $generated@@2) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@351 ($generated@@76 $generated@@145 $generated@@2) $generated@@532) ($generated@@150 $generated@@533))))
 :pattern ( ($generated@@212 $generated@@532 ($generated@@150 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@212 $generated@@534 ($generated@@383 $generated@@535))) (and (= ($generated@@265 ($generated@@351 ($generated@@247 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@351 ($generated@@247 $generated@@145) $generated@@534) ($generated@@383 $generated@@535))))
 :pattern ( ($generated@@212 $generated@@534 ($generated@@383 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@536 ($generated@@150 $generated@@537) $generated@@538) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@536 $generated@@539)))) ($generated@@236 $generated@@539 $generated@@537 $generated@@538))
 :pattern ( ($generated@@81 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@150 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@136) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@542) (and ($generated@@134 $generated@@540) (exists (($generated@@543 T@U) ) (!  (and (= (type $generated@@543) $generated@@64) ($generated@@74 $generated@@540 ($generated@@135 $generated@@541 $generated@@543) $generated@@542))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@135 $generated@@541 $generated@@543) $generated@@542))
))))) ($generated@@236 ($generated@@143 $generated@@540) $generated@@541 $generated@@542))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@540) $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@136) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@546) (and ($generated@@134 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@135 $generated@@547 $generated@@545) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@135 $generated@@547 $generated@@545) $generated@@546))
))))) ($generated@@236 ($generated@@144 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@548) ($generated@@231 $generated@@549)) ($generated@@231 ($generated@@211 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@548) ($generated@@231 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= ($generated@@265 ($generated@@231 $generated@@550)) ($generated@@231 ($generated@@265 $generated@@550)))
 :pattern ( ($generated@@265 ($generated@@231 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@246 (type $generated@@551))))
 (=> (and (= (type $generated@@551) ($generated@@247 $generated@@552)) (= ($generated@@248 $generated@@551) 0)) (= $generated@@551 ($generated@@262 $generated@@552))))
 :pattern ( ($generated@@248 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@554)))
 (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@556 $generated@@2)) (= (type $generated@@555) $generated@@2)) (<= 0 ($generated $generated@@555))) (= ($generated@@270 ($generated@@82 $generated@@553 $generated@@554 $generated@@555)) (+ (- ($generated@@270 $generated@@553) ($generated ($generated@@81 $generated@@553 $generated@@554))) ($generated $generated@@555)))))
 :pattern ( ($generated@@270 ($generated@@82 $generated@@553 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@2)) ($generated@@74 $generated@@558 $generated@@46 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@46 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@3)) ($generated@@74 $generated@@560 $generated@@47 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@47 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@4)) ($generated@@74 $generated@@562 $generated@@44 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@44 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@431)) ($generated@@74 $generated@@564 $generated@@45 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@45 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@145)) ($generated@@74 $generated@@566 $generated@@48 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@48 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@247 $generated@@145)) (= (type $generated@@568) $generated@@64)) (= ($generated@@132 $generated@@567 ($generated@@383 $generated@@568)) (forall (($generated@@569 Int) ) (!  (=> (and (<= 0 $generated@@569) (< $generated@@569 ($generated@@248 $generated@@567))) ($generated@@212 ($generated@@249 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@249 $generated@@567 $generated@@569))
))))
 :pattern ( ($generated@@132 $generated@@567 ($generated@@383 $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 Int) ) (!  (=> (= (type $generated@@571) ($generated@@247 $generated@@145)) (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@248 $generated@@571))) (< ($generated@@506 ($generated@@351 $generated@@136 ($generated@@249 $generated@@571 $generated@@572))) ($generated@@570 $generated@@571))))
 :pattern ( ($generated@@506 ($generated@@351 $generated@@136 ($generated@@249 $generated@@571 $generated@@572))))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) $generated@@64)) ($generated@@132 $generated@@573 ($generated@@382 $generated@@574 $generated@@575))) (and (and ($generated@@132 ($generated@@276 $generated@@573) ($generated@@221 $generated@@574)) ($generated@@132 ($generated@@319 $generated@@573) ($generated@@221 $generated@@575))) ($generated@@132 ($generated@@350 $generated@@573) ($generated@@221 ($generated@@135 $generated@@574 $generated@@575)))))
 :pattern ( ($generated@@132 $generated@@573 ($generated@@382 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@132 $generated@@576 ($generated@@396 $generated@@577 $generated@@578))) (and (and ($generated@@132 ($generated@@294 $generated@@576) ($generated@@226 $generated@@577)) ($generated@@132 ($generated@@330 $generated@@576) ($generated@@226 $generated@@578))) ($generated@@132 ($generated@@361 $generated@@576) ($generated@@226 ($generated@@135 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@396 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@2) ($generated@@132 $generated@@579 $generated@@46))
 :pattern ( ($generated@@132 $generated@@579 $generated@@46))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@3) ($generated@@132 $generated@@580 $generated@@47))
 :pattern ( ($generated@@132 $generated@@580 $generated@@47))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@4) ($generated@@132 $generated@@581 $generated@@44))
 :pattern ( ($generated@@132 $generated@@581 $generated@@44))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@431) ($generated@@132 $generated@@582 $generated@@45))
 :pattern ( ($generated@@132 $generated@@582 $generated@@45))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@145) ($generated@@132 $generated@@583 $generated@@48))
 :pattern ( ($generated@@132 $generated@@583 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@584) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@585) ($generated@@247 $generated@@145))) (= (type $generated@@586) ($generated@@278 $generated@@145 $generated@@145))) (= (type $generated@@587) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@588) $generated@@77)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@591  (=> (= (ControlFlow 0 2) (- 0 1)) (or true (= ($generated@@0 ($generated@@81 ($generated@@276 $generated@@584) ($generated@@265 $generated@@585))) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@586) ($generated@@265 $generated@@585))))))))
(let (($generated@@592  (=> (and ($generated@@0 ($generated@@231 ($generated@@11 true))) (= (ControlFlow 0 4) 2)) $generated@@591)))
(let (($generated@@593  (=> (and (not ($generated@@0 ($generated@@231 ($generated@@11 true)))) (= (ControlFlow 0 3) 2)) $generated@@591)))
(let (($generated@@594  (=> (= $generated@@587 ($generated@@156 $generated@@588 $generated@@589 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@593) (=> (= (ControlFlow 0 5) 4) $generated@@592)))))
(let (($generated@@595  (=> (and ($generated@@235 $generated@@589) ($generated@@590 $generated@@589)) (=> (and (and ($generated@@132 $generated@@584 ($generated@@382 ($generated@@383 $generated@@46) ($generated@@383 $generated@@46))) ($generated@@74 $generated@@584 ($generated@@382 ($generated@@383 $generated@@46) ($generated@@383 $generated@@46)) $generated@@589)) (and ($generated@@132 $generated@@586 ($generated@@382 ($generated@@383 $generated@@46) ($generated@@383 $generated@@46))) ($generated@@74 $generated@@586 ($generated@@382 ($generated@@383 $generated@@46) ($generated@@383 $generated@@46)) $generated@@589))) (=> (and (and (and ($generated@@132 $generated@@585 ($generated@@383 $generated@@46)) ($generated@@74 $generated@@585 ($generated@@383 $generated@@46) $generated@@589)) (= 3 $generated@@379)) (and (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@247 $generated@@145)) ($generated@@132 $generated@@596 ($generated@@383 $generated@@46))) ($generated@@245 ($generated@@380 $generated@@584 $generated@@596) ($generated@@380 $generated@@586 $generated@@596)))
 :pattern ( ($generated@@380 $generated@@586 $generated@@596))
 :pattern ( ($generated@@380 $generated@@584 $generated@@596))
)) (= (ControlFlow 0 6) 5))) $generated@@594)))))
$generated@@595))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
