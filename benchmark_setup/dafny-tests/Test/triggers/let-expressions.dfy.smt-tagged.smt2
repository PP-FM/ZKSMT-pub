(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@269 (T@T T@U) T@U)
(declare-fun $generated@@270 (T@U Int) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@140 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@140)) 14)) (forall (($generated@@141 T@T) ) (! (= ($generated@@139 ($generated@@134 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@134 $generated@@141))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@143) (and (not (= 0 $generated@@132)) ($generated@@137 $generated@@143 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@137 $generated@@144 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@144 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 16) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@64)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@64) (= (type $generated@@151) $generated@@64)) (= (type $generated@@152) $generated@@147)) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@135)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@135)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@147) (= (type $generated@@159) $generated@@147)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@164) $generated@@64)) ($generated@@137 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@137 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 17)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@77 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@67 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@77) (= (type $generated@@215) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@216) ($generated@@66 $generated@@4))) (= (type $generated@@218) $generated@@77)) (= (type $generated@@219) ($generated@@66 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@77 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@147)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@135)) (= (type $generated@@240) $generated@@135)) (= ($generated@@137 ($generated@@233 $generated@@239 $generated@@240) ($generated@@146 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@137 ($generated@@233 $generated@@239 $generated@@240) ($generated@@146 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@147) (= (type $generated@@242) $generated@@147)) (= ($generated@@153 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@153 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@135) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@135) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@135)) (= (type $generated@@264) $generated@@135)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@233 $generated@@263 $generated@@264) ($generated@@146 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@233 $generated@@263 $generated@@264) ($generated@@146 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@147) (= ($generated@@145 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@T) ($generated@@273 T@U) ) (! (= (type ($generated@@269 $generated@@272 $generated@@273)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ($generated@@275 Int) ) (! (let (($generated@@276 ($generated@@139 (type $generated@@274))))
(= (type ($generated@@270 $generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@270 $generated@@274 $generated@@275))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@277) (and (not (= 0 $generated@@132)) ($generated@@137 $generated@@277 ($generated@@138 $generated@@46))))) (= ($generated@@133 $generated@@277)  (and (and (and (forall (($generated@@278 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@278) (< $generated@@278 ($generated@@271 $generated@@277))) (let (($generated@@279 $generated@@278))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@279))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@278)))
)) (forall (($generated@@280 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@280) (< $generated@@280 ($generated@@271 $generated@@277))) (let (($generated@@281 $generated@@280))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@281))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@280)))
))) (forall (($generated@@282 Int) ($generated@@283 Int) ) (!  (=> (= $generated@@283 (+ $generated@@282 1)) (=> (and (<= ($generated@@253 0) $generated@@282) (< $generated@@282 (- ($generated@@271 $generated@@277) 1))) (= ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@282))) ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@283))))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@283)) ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@282)))
))) (forall (($generated@@284 Int) ($generated@@285 Int) ) (!  (=> (= $generated@@285 (+ $generated@@284 1)) (=> (and (<= ($generated@@253 0) $generated@@284) (< $generated@@284 (- ($generated@@271 $generated@@277) 1))) (= ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@284))) ($generated (let (($generated@@286 $generated@@285))
($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@286)))))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@285)) ($generated@@269 $generated@@2 ($generated@@270 $generated@@277 $generated@@284)))
)))))
 :pattern ( ($generated@@133 $generated@@277))
))))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@147) ($generated@@145 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@135) (= (type $generated@@289) $generated@@135)) (= $generated@@287 ($generated@@233 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@145 $generated@@287))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@134 $generated@@291))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@271 ($generated@@290 $generated@@292)) 0)
 :pattern ( ($generated@@290 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@135)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@64) (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@74 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@260 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@76 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@81 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@2)) (= ($generated@@161 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@81 $generated@@340 $generated@@342))) (<= ($generated ($generated@@81 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@161 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(let (($generated@@345 ($generated@@307 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@306 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@305 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@304 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@308 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@308 (type $generated@@350))))
(let (($generated@@352 ($generated@@307 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@306 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@305 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@326 (type $generated@@354))))
(let (($generated@@356 ($generated@@325 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@324 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@323 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@322 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@326 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@76 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@326 (type $generated@@361))))
(let (($generated@@363 ($generated@@325 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@324 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@323 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@366) $generated@@64)) (= ($generated@@137 $generated@@365 ($generated@@160 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))) ($generated@@234 $generated@@367 $generated@@366))
 :pattern ( ($generated@@81 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@137 $generated@@365 ($generated@@160 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@135) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@248 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@135) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@260 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@248 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@81 ($generated@@299 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@81 ($generated@@299 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@308 (type $generated@@381))))
(let (($generated@@383 ($generated@@307 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@306 $generated@@135 $generated@@135)) (= (type $generated@@385) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@384) ($generated@@154 ($generated@@269 $generated@@147 $generated@@385)))) (= ($generated@@81 ($generated@@379 $generated@@384) ($generated@@154 ($generated@@269 $generated@@147 $generated@@385))) ($generated@@155 ($generated@@269 $generated@@147 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@326 (type $generated@@389))))
(let (($generated@@391 ($generated@@325 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@324 $generated@@135 $generated@@135)) (= (type $generated@@393) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@392) ($generated@@154 ($generated@@269 $generated@@147 $generated@@393)))) (= ($generated@@81 ($generated@@387 $generated@@392) ($generated@@154 ($generated@@269 $generated@@147 $generated@@393))) ($generated@@155 ($generated@@269 $generated@@147 $generated@@393))))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@307 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@306 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@81 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@325 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@324 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@81 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@399) $generated@@400))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@134 $generated@@135)) (or ($generated@@136 ($generated@@255 $generated@@404)) (and (not (= 0 $generated@@132)) ($generated@@137 $generated@@404 ($generated@@138 $generated@@46))))) (= ($generated@@133 ($generated@@255 $generated@@404))  (and (and (and (forall (($generated@@405 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@405) (< $generated@@405 ($generated@@271 ($generated@@255 $generated@@404)))) (let (($generated@@406 $generated@@405))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 ($generated@@255 $generated@@404) $generated@@406))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@404 $generated@@405)))
)) (forall (($generated@@407 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@407) (< $generated@@407 ($generated@@271 ($generated@@255 $generated@@404)))) (let (($generated@@408 $generated@@407))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 ($generated@@255 $generated@@404) $generated@@408))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@404 $generated@@407)))
))) (forall (($generated@@409 Int) ($generated@@410 Int) ) (!  (=> (= $generated@@410 (+ $generated@@409 1)) (=> (and (<= ($generated@@253 0) $generated@@409) (< $generated@@409 (- ($generated@@271 ($generated@@255 $generated@@404)) 1))) (= ($generated ($generated@@269 $generated@@2 ($generated@@270 ($generated@@255 $generated@@404) $generated@@409))) ($generated ($generated@@269 $generated@@2 ($generated@@270 ($generated@@255 $generated@@404) $generated@@410))))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@404 $generated@@410)) ($generated@@269 $generated@@2 ($generated@@270 $generated@@404 $generated@@409)))
))) (forall (($generated@@411 Int) ($generated@@412 Int) ) (!  (=> (= $generated@@412 (+ $generated@@411 1)) (=> (and (<= ($generated@@253 0) $generated@@411) (< $generated@@411 (- ($generated@@271 ($generated@@255 $generated@@404)) 1))) (= ($generated ($generated@@269 $generated@@2 ($generated@@270 ($generated@@255 $generated@@404) $generated@@411))) ($generated (let (($generated@@413 $generated@@412))
($generated@@269 $generated@@2 ($generated@@270 ($generated@@255 $generated@@404) $generated@@413)))))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@404 $generated@@412)) ($generated@@269 $generated@@2 ($generated@@270 $generated@@404 $generated@@411)))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@255 $generated@@404)))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@306 $generated@@135 $generated@@135)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@417) $generated@@421))) (and ($generated@@260 ($generated@@81 ($generated@@379 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@260 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@324 $generated@@135 $generated@@135)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@425) $generated@@429))) (and ($generated@@260 ($generated@@81 ($generated@@387 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@260 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@76 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@326 (type $generated@@432))))
(let (($generated@@434 ($generated@@325 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@324 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@323 $generated@@434 $generated@@433)) (= ($generated@@322 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@322 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@326 (type $generated@@435))))
(let (($generated@@437 ($generated@@325 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@324 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@323 $generated@@437 $generated@@436)) (= ($generated@@358 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@358 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@326 (type $generated@@438))))
(let (($generated@@440 ($generated@@325 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@324 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@323 $generated@@440 $generated@@439)) (= ($generated@@386 $generated@@438) ($generated@@430 $generated@@135))))))
 :pattern ( ($generated@@386 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@308 (type $generated@@441))))
(let (($generated@@443 ($generated@@307 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@306 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@305 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@135) (= (type $generated@@445) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@441) ($generated@@293 ($generated@@233 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@378 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@326 (type $generated@@446))))
(let (($generated@@448 ($generated@@325 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@324 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@323 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@135) (= (type $generated@@450) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@446) ($generated@@293 ($generated@@233 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@386 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@135) ($generated@@234 $generated@@451 $generated@@46)) (and (= ($generated@@293 ($generated@@269 $generated@@2 $generated@@451)) $generated@@451) ($generated@@137 ($generated@@269 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@135) ($generated@@234 $generated@@452 $generated@@47)) (and (= ($generated@@293 ($generated@@269 $generated@@3 $generated@@452)) $generated@@452) ($generated@@137 ($generated@@269 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@135) ($generated@@234 $generated@@453 $generated@@44)) (and (= ($generated@@293 ($generated@@269 $generated@@4 $generated@@453)) $generated@@453) ($generated@@137 ($generated@@269 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@135) ($generated@@234 $generated@@455 $generated@@45)) (and (= ($generated@@293 ($generated@@269 $generated@@454 $generated@@455)) $generated@@455) ($generated@@137 ($generated@@269 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@64) (= ($generated@@234 ($generated@@293 $generated@@456) $generated@@457) ($generated@@137 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@234 ($generated@@293 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@2)) (<= 0 ($generated@@298 $generated@@458))))
 :pattern ( ($generated@@298 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@139 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@134 $generated@@461)) (<= 0 ($generated@@271 $generated@@460))))
 :pattern ( ($generated@@271 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@135) (= (type $generated@@483) $generated@@135)) (= ($generated@@266 ($generated@@233 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@146 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@146 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@146 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@146 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@135) (= (type $generated@@493) $generated@@135)) (= ($generated@@154 ($generated@@233 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@233 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@135) (= (type $generated@@495) $generated@@135)) (= ($generated@@155 ($generated@@233 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@233 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@134 $generated@@135)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@138 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@271 $generated@@496))) ($generated@@260 ($generated@@270 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@270 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@138 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@243 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@248 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@248 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@160 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@160 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@160 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@138 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@138 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@269 $generated@@519 ($generated@@293 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@293 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@306 $generated@@135 $generated@@135)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@137 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@520) $generated@@523))) (and ($generated@@234 ($generated@@81 ($generated@@379 $generated@@520) $generated@@523) $generated@@522) ($generated@@234 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@137 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@324 $generated@@135 $generated@@135)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@137 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@524) $generated@@527))) (and ($generated@@234 ($generated@@81 ($generated@@387 $generated@@524) $generated@@527) $generated@@526) ($generated@@234 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@137 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@135) (= (type $generated@@531) $generated@@135)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@233 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@135) (= (type $generated@@533) $generated@@135)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@233 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@135) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@234 $generated@@534 ($generated@@414 $generated@@535 $generated@@536))) (and (= ($generated@@293 ($generated@@269 ($generated@@306 $generated@@135 $generated@@135) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@269 ($generated@@306 $generated@@135 $generated@@135) $generated@@534) ($generated@@414 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@534 ($generated@@414 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@135) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@234 $generated@@537 ($generated@@422 $generated@@538 $generated@@539))) (and (= ($generated@@293 ($generated@@269 ($generated@@324 $generated@@135 $generated@@135) $generated@@537)) $generated@@537) ($generated@@137 ($generated@@269 ($generated@@324 $generated@@135 $generated@@135) $generated@@537) ($generated@@422 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@234 $generated@@537 ($generated@@422 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@135)) ($generated@@234 $generated@@542 ($generated@@146 $generated@@540 $generated@@541))) (and (= ($generated@@293 ($generated@@269 $generated@@147 $generated@@542)) $generated@@542) ($generated@@137 ($generated@@269 $generated@@147 $generated@@542) ($generated@@146 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@234 $generated@@542 ($generated@@146 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@430 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@430 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@146 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@146 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@146 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@147) (= ($generated@@528 ($generated@@293 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@293 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@135) ($generated@@234 $generated@@550 ($generated@@75 0))) (and (= ($generated@@293 ($generated@@269 $generated@@2 $generated@@550)) $generated@@550) ($generated@@137 ($generated@@269 ($generated@@76 $generated@@135 $generated@@4) $generated@@550) ($generated@@75 0))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@75 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@135) (= (type $generated@@552) $generated@@64)) ($generated@@234 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@293 ($generated@@269 ($generated@@76 $generated@@135 $generated@@4) $generated@@551)) $generated@@551) ($generated@@137 ($generated@@269 ($generated@@76 $generated@@135 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@234 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@135) (= (type $generated@@554) $generated@@64)) ($generated@@234 $generated@@553 ($generated@@248 $generated@@554))) (and (= ($generated@@293 ($generated@@269 ($generated@@76 $generated@@135 $generated@@4) $generated@@553)) $generated@@553) ($generated@@137 ($generated@@269 ($generated@@76 $generated@@135 $generated@@4) $generated@@553) ($generated@@248 $generated@@554))))
 :pattern ( ($generated@@234 $generated@@553 ($generated@@248 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@135) (= (type $generated@@556) $generated@@64)) ($generated@@234 $generated@@555 ($generated@@160 $generated@@556))) (and (= ($generated@@293 ($generated@@269 ($generated@@76 $generated@@135 $generated@@2) $generated@@555)) $generated@@555) ($generated@@137 ($generated@@269 ($generated@@76 $generated@@135 $generated@@2) $generated@@555) ($generated@@160 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@555 ($generated@@160 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@135) (= (type $generated@@558) $generated@@64)) ($generated@@234 $generated@@557 ($generated@@138 $generated@@558))) (and (= ($generated@@293 ($generated@@269 ($generated@@134 $generated@@135) $generated@@557)) $generated@@557) ($generated@@137 ($generated@@269 ($generated@@134 $generated@@135) $generated@@557) ($generated@@138 $generated@@558))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@138 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@559 ($generated@@160 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@559 $generated@@562)))) ($generated@@260 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@81 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@160 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@147) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@565) (and ($generated@@145 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@146 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@146 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@260 ($generated@@154 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@260 ($generated@@154 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@147) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@569) (and ($generated@@145 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@146 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@146 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@260 ($generated@@155 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@135) (= (type $generated@@572) $generated@@135)) (= ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)) ($generated@@255 ($generated@@233 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@253 $generated@@573))) ($generated@@255 ($generated@@293 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@253 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@293 ($generated@@255 $generated@@574)) ($generated@@255 ($generated@@293 $generated@@574)))
 :pattern ( ($generated@@293 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@139 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@134 $generated@@576)) (= ($generated@@271 $generated@@575) 0)) (= $generated@@575 ($generated@@290 $generated@@576))))
 :pattern ( ($generated@@271 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@76 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@298 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@298 $generated@@577) ($generated ($generated@@81 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@298 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@2)) ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@3)) ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@4)) ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@454)) ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@135)) ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@134 $generated@@135)) (= (type $generated@@592) $generated@@64)) (= ($generated@@137 $generated@@591 ($generated@@138 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@271 $generated@@591))) ($generated@@234 ($generated@@270 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@270 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@137 $generated@@591 ($generated@@138 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@271 $generated@@595))) (< ($generated@@529 ($generated@@269 $generated@@147 ($generated@@270 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@529 ($generated@@269 $generated@@147 ($generated@@270 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@306 $generated@@135 $generated@@135)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) ($generated@@137 $generated@@597 ($generated@@414 $generated@@598 $generated@@599))) (and (and ($generated@@137 ($generated@@304 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@137 ($generated@@347 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@137 ($generated@@378 $generated@@597) ($generated@@243 ($generated@@146 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@137 $generated@@597 ($generated@@414 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@324 $generated@@135 $generated@@135)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@137 $generated@@600 ($generated@@422 $generated@@601 $generated@@602))) (and (and ($generated@@137 ($generated@@322 $generated@@600) ($generated@@248 $generated@@601)) ($generated@@137 ($generated@@358 $generated@@600) ($generated@@248 $generated@@602))) ($generated@@137 ($generated@@386 $generated@@600) ($generated@@248 ($generated@@146 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@137 $generated@@600 ($generated@@422 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@137 $generated@@603 $generated@@46))
 :pattern ( ($generated@@137 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@137 $generated@@604 $generated@@47))
 :pattern ( ($generated@@137 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@137 $generated@@605 $generated@@44))
 :pattern ( ($generated@@137 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@454) ($generated@@137 $generated@@606 $generated@@45))
 :pattern ( ($generated@@137 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@135) ($generated@@137 $generated@@607 $generated@@48))
 :pattern ( ($generated@@137 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@609) ($generated@@134 $generated@@135)) (= (type $generated@@621) ($generated@@167 $generated@@77 $generated@@4))) (= (type $generated@@622) $generated@@77)) (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@624) ($generated@@167 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 41) (let (($generated@@626 true))
(let (($generated@@627 true))
(let (($generated@@628 true))
(let (($generated@@629 true))
(let (($generated@@630  (=> (and (not (and (<= ($generated@@253 0) $generated@@608) (< $generated@@608 (- ($generated@@271 $generated@@609) 1)))) (= (ControlFlow 0 9) 3)) $generated@@629)))
(let (($generated@@631  (=> (and (<= ($generated@@253 0) $generated@@608) (< $generated@@608 (- ($generated@@271 $generated@@609) 1))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@271 $generated@@609)))) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@271 $generated@@609))) (=> (= $generated@@610 (+ $generated@@608 1)) (=> (and ($generated@@137 ($generated@@8 $generated@@610) $generated@@46) (= $generated@@611 $generated@@610)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@271 $generated@@609)))) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@271 $generated@@609))) (=> (= (ControlFlow 0 6) 3) $generated@@629))))))))))
(let (($generated@@632  (=> (< $generated@@608 ($generated@@253 0)) (and (=> (= (ControlFlow 0 11) 6) $generated@@631) (=> (= (ControlFlow 0 11) 9) $generated@@630)))))
(let (($generated@@633  (=> (<= ($generated@@253 0) $generated@@608) (and (=> (= (ControlFlow 0 10) 6) $generated@@631) (=> (= (ControlFlow 0 10) 9) $generated@@630)))))
(let (($generated@@634  (and (=> (= (ControlFlow 0 12) 10) $generated@@633) (=> (= (ControlFlow 0 12) 11) $generated@@632))))
(let (($generated@@635  (=> (and (and (forall (($generated@@636 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@636) (< $generated@@636 ($generated@@271 $generated@@609))) (let (($generated@@637 $generated@@636))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@637))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@636)))
)) (forall (($generated@@638 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@638) (< $generated@@638 ($generated@@271 $generated@@609))) (let (($generated@@639 $generated@@638))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@639))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@638)))
))) (forall (($generated@@640 Int) ($generated@@641 Int) ) (!  (=> (= $generated@@641 (+ $generated@@640 1)) (=> (and (<= ($generated@@253 0) $generated@@640) (< $generated@@640 (- ($generated@@271 $generated@@609) 1))) (= ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@640))) ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@641))))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@641)) ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@640)))
))) (and (=> (= (ControlFlow 0 13) 12) $generated@@634) (=> (= (ControlFlow 0 13) 5) $generated@@628)))))
(let (($generated@@642  (=> (and (not (and (and (forall (($generated@@643 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@643) (< $generated@@643 ($generated@@271 $generated@@609))) (let (($generated@@644 $generated@@643))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@644))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@643)))
)) (forall (($generated@@645 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@645) (< $generated@@645 ($generated@@271 $generated@@609))) (let (($generated@@646 $generated@@645))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@646))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@645)))
))) (forall (($generated@@647 Int) ($generated@@648 Int) ) (!  (=> (= $generated@@648 (+ $generated@@647 1)) (=> (and (<= ($generated@@253 0) $generated@@647) (< $generated@@647 (- ($generated@@271 $generated@@609) 1))) (= ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@647))) ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@648))))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@648)) ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@647)))
)))) (= (ControlFlow 0 4) 3)) $generated@@629)))
(let (($generated@@649  (=> (not (and (<= ($generated@@253 0) $generated@@612) (< $generated@@612 (- ($generated@@271 $generated@@609) 1)))) (and (=> (= (ControlFlow 0 19) 13) $generated@@635) (=> (= (ControlFlow 0 19) 4) $generated@@642)))))
(let (($generated@@650  (=> (and (<= ($generated@@253 0) $generated@@612) (< $generated@@612 (- ($generated@@271 $generated@@609) 1))) (and (=> (= (ControlFlow 0 16) (- 0 18)) (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@271 $generated@@609)))) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@271 $generated@@609))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 (+ $generated@@612 1)) (< (+ $generated@@612 1) ($generated@@271 $generated@@609)))) (=> (and (<= 0 (+ $generated@@612 1)) (< (+ $generated@@612 1) ($generated@@271 $generated@@609))) (and (=> (= (ControlFlow 0 16) 13) $generated@@635) (=> (= (ControlFlow 0 16) 4) $generated@@642)))))))))
(let (($generated@@651  (=> (< $generated@@612 ($generated@@253 0)) (and (=> (= (ControlFlow 0 21) 16) $generated@@650) (=> (= (ControlFlow 0 21) 19) $generated@@649)))))
(let (($generated@@652  (=> (<= ($generated@@253 0) $generated@@612) (and (=> (= (ControlFlow 0 20) 16) $generated@@650) (=> (= (ControlFlow 0 20) 19) $generated@@649)))))
(let (($generated@@653  (and (=> (= (ControlFlow 0 22) 20) $generated@@652) (=> (= (ControlFlow 0 22) 21) $generated@@651))))
(let (($generated@@654  (=> (and (forall (($generated@@655 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@655) (< $generated@@655 ($generated@@271 $generated@@609))) (let (($generated@@656 $generated@@655))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@656))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@655)))
)) (forall (($generated@@657 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@657) (< $generated@@657 ($generated@@271 $generated@@609))) (let (($generated@@658 $generated@@657))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@658))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@657)))
))) (and (=> (= (ControlFlow 0 23) 22) $generated@@653) (=> (= (ControlFlow 0 23) 15) $generated@@627)))))
(let (($generated@@659  (=> (not (and (forall (($generated@@660 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@660) (< $generated@@660 ($generated@@271 $generated@@609))) (let (($generated@@661 $generated@@660))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@661))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@660)))
)) (forall (($generated@@662 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@662) (< $generated@@662 ($generated@@271 $generated@@609))) (let (($generated@@663 $generated@@662))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@663))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@662)))
)))) (and (=> (= (ControlFlow 0 14) 13) $generated@@635) (=> (= (ControlFlow 0 14) 4) $generated@@642)))))
(let (($generated@@664  (=> (not (and (<= ($generated@@253 0) $generated@@613) (< $generated@@613 ($generated@@271 $generated@@609)))) (and (=> (= (ControlFlow 0 28) 23) $generated@@654) (=> (= (ControlFlow 0 28) 14) $generated@@659)))))
(let (($generated@@665  (=> (and (and (and (<= ($generated@@253 0) $generated@@613) (< $generated@@613 ($generated@@271 $generated@@609))) (and (= $generated@@614 $generated@@613) ($generated@@137 ($generated@@8 $generated@@614) $generated@@46))) (and (and (= $generated@@615 $generated@@614) (= $generated@@616 $generated@@613)) (and ($generated@@137 ($generated@@8 $generated@@616) $generated@@46) (= $generated@@617 $generated@@616)))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@271 $generated@@609)))) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@271 $generated@@609))) (and (=> (= (ControlFlow 0 26) 23) $generated@@654) (=> (= (ControlFlow 0 26) 14) $generated@@659)))))))
(let (($generated@@666  (=> (< $generated@@613 ($generated@@253 0)) (and (=> (= (ControlFlow 0 30) 26) $generated@@665) (=> (= (ControlFlow 0 30) 28) $generated@@664)))))
(let (($generated@@667  (=> (<= ($generated@@253 0) $generated@@613) (and (=> (= (ControlFlow 0 29) 26) $generated@@665) (=> (= (ControlFlow 0 29) 28) $generated@@664)))))
(let (($generated@@668  (and (=> (= (ControlFlow 0 31) 29) $generated@@667) (=> (= (ControlFlow 0 31) 30) $generated@@666))))
(let (($generated@@669  (=> (forall (($generated@@670 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@670) (< $generated@@670 ($generated@@271 $generated@@609))) (let (($generated@@671 $generated@@670))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@671))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@670)))
)) (and (=> (= (ControlFlow 0 32) 31) $generated@@668) (=> (= (ControlFlow 0 32) 25) $generated@@626)))))
(let (($generated@@672  (=> (not (forall (($generated@@673 Int) ) (!  (=> true (=> (and (<= ($generated@@253 0) $generated@@673) (< $generated@@673 ($generated@@271 $generated@@609))) (let (($generated@@674 $generated@@673))
(> ($generated ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@674))) 0))))
 :pattern ( ($generated@@269 $generated@@2 ($generated@@270 $generated@@609 $generated@@673)))
))) (and (=> (= (ControlFlow 0 24) 23) $generated@@654) (=> (= (ControlFlow 0 24) 14) $generated@@659)))))
(let (($generated@@675  (=> (not (and (<= ($generated@@253 0) $generated@@618) (< $generated@@618 ($generated@@271 $generated@@609)))) (and (=> (= (ControlFlow 0 35) 32) $generated@@669) (=> (= (ControlFlow 0 35) 24) $generated@@672)))))
(let (($generated@@676  (=> (and (and (and (<= ($generated@@253 0) $generated@@618) (< $generated@@618 ($generated@@271 $generated@@609))) (= $generated@@619 $generated@@618)) (and ($generated@@137 ($generated@@8 $generated@@619) $generated@@46) (= $generated@@620 $generated@@619))) (and (=> (= (ControlFlow 0 33) (- 0 34)) (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@271 $generated@@609)))) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@271 $generated@@609))) (and (=> (= (ControlFlow 0 33) 32) $generated@@669) (=> (= (ControlFlow 0 33) 24) $generated@@672)))))))
(let (($generated@@677  (=> (< $generated@@618 ($generated@@253 0)) (and (=> (= (ControlFlow 0 37) 33) $generated@@676) (=> (= (ControlFlow 0 37) 35) $generated@@675)))))
(let (($generated@@678  (=> (<= ($generated@@253 0) $generated@@618) (and (=> (= (ControlFlow 0 36) 33) $generated@@676) (=> (= (ControlFlow 0 36) 35) $generated@@675)))))
(let (($generated@@679  (and (=> (= (ControlFlow 0 38) 36) $generated@@678) (=> (= (ControlFlow 0 38) 37) $generated@@677))))
(let (($generated@@680 true))
(let (($generated@@681  (=> (= $generated@@621 ($generated@@221 $generated@@622 $generated@@623 $generated@@60 false)) (and (=> (= (ControlFlow 0 39) 38) $generated@@679) (=> (= (ControlFlow 0 39) 2) $generated@@680)))))
(let (($generated@@682 true))
(let (($generated@@683  (=> (= $generated@@624 ($generated@@166 $generated@@622 $generated@@623 $generated@@60 false)) (and (=> (= (ControlFlow 0 40) 1) $generated@@682) (=> (= (ControlFlow 0 40) 39) $generated@@681)))))
(let (($generated@@684  (=> (and (and (and ($generated@@259 $generated@@623) ($generated@@625 $generated@@623)) ($generated@@137 $generated@@609 ($generated@@138 $generated@@46))) (and (= 0 $generated@@132) (= (ControlFlow 0 41) 40))) $generated@@683)))
$generated@@684))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
