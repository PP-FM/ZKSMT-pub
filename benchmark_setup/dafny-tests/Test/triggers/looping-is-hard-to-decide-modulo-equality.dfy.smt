(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 () Int)
(declare-fun $generated@@256 (T@U Int) T@U)
(declare-fun $generated@@257 (T@U Int) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) $generated@@152)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 Int) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@80)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert  (=> (<= 1 $generated@@255) (forall (($generated@@260 T@U) ($generated@@261 Int) ) (!  (=> (and (= (type $generated@@260) $generated@@80) (or ($generated@@257 $generated@@260 $generated@@261) (and (not (= 1 $generated@@255)) ($generated@@139 $generated@@260 $generated@@221)))) ($generated@@139 ($generated@@256 $generated@@260 $generated@@261) $generated@@221))
 :pattern ( ($generated@@256 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@71)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@143) (= ($generated@@141 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@143) ($generated@@141 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@152) (= (type $generated@@267) $generated@@152)) (= $generated@@265 ($generated@@224 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@141 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@152)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@67) (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@77 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@249 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@79 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@82 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@79 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@84 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@79 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@79 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@82 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@79 $generated@@324 $generated@@2)) (= ($generated@@158 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@84 $generated@@323 $generated@@325))) (<= ($generated ($generated@@84 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@84 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@158 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@152) ($generated@@225 $generated@@329 $generated@@135)) (and (= ($generated@@276 ($generated@@326 $generated@@80 $generated@@329)) $generated@@329) ($generated@@139 ($generated@@326 $generated@@80 $generated@@329) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@329 $generated@@135))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@152) ($generated@@225 $generated@@330 $generated@@221)) (and (= ($generated@@276 ($generated@@326 $generated@@80 $generated@@330)) $generated@@330) ($generated@@139 ($generated@@326 $generated@@80 $generated@@330) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@330 $generated@@221))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@80) (= ($generated@@139 $generated@@331 $generated@@221)  (and ($generated@@139 $generated@@331 $generated@@135) (not (= $generated@@331 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@331 $generated@@221))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@291 (type $generated@@332))))
(let (($generated@@334 ($generated@@290 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@289 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@288 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@287 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@79 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@291 (type $generated@@339))))
(let (($generated@@341 ($generated@@290 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@289 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@288 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@309 (type $generated@@343))))
(let (($generated@@345 ($generated@@308 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@307 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@306 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@305 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@79 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@309 (type $generated@@350))))
(let (($generated@@352 ($generated@@308 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@307 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@306 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@355) $generated@@67)) (= ($generated@@139 $generated@@354 ($generated@@157 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@354 $generated@@356)))) ($generated@@225 $generated@@356 $generated@@355))
 :pattern ( ($generated@@84 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@139 $generated@@354 ($generated@@157 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@358) $generated@@67)) (= (type $generated@@359) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@357 ($generated@@234 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@152) ($generated@@0 ($generated@@84 $generated@@357 $generated@@360))) ($generated@@249 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@84 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@77 $generated@@357 ($generated@@234 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@362) $generated@@67)) (= (type $generated@@363) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@361 ($generated@@239 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@152) ($generated@@0 ($generated@@84 $generated@@361 $generated@@364))) ($generated@@249 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@84 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@77 $generated@@361 ($generated@@239 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@84 ($generated@@282 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@84 ($generated@@282 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@291 (type $generated@@370))))
(let (($generated@@372 ($generated@@290 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@289 $generated@@152 $generated@@152)) (= (type $generated@@374) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@373) ($generated@@150 ($generated@@326 $generated@@143 $generated@@374)))) (= ($generated@@84 ($generated@@368 $generated@@373) ($generated@@150 ($generated@@326 $generated@@143 $generated@@374))) ($generated@@151 ($generated@@326 $generated@@143 $generated@@374))))))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@309 (type $generated@@378))))
(let (($generated@@380 ($generated@@308 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@307 $generated@@152 $generated@@152)) (= (type $generated@@382) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@381) ($generated@@150 ($generated@@326 $generated@@143 $generated@@382)))) (= ($generated@@84 ($generated@@376 $generated@@381) ($generated@@150 ($generated@@326 $generated@@143 $generated@@382))) ($generated@@151 ($generated@@326 $generated@@143 $generated@@382))))))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@290 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@289 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@308 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@307 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@67)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@289 $generated@@152 $generated@@152)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@396) $generated@@400))) (and ($generated@@249 ($generated@@84 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@249 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@77 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@67)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@307 $generated@@152 $generated@@152)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@404) $generated@@408))) (and ($generated@@249 ($generated@@84 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@249 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@77 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@79 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@309 (type $generated@@411))))
(let (($generated@@413 ($generated@@308 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@307 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@306 $generated@@413 $generated@@412)) (= ($generated@@305 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@305 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@309 (type $generated@@414))))
(let (($generated@@416 ($generated@@308 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@307 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@306 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@309 (type $generated@@417))))
(let (($generated@@419 ($generated@@308 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@307 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@306 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@152))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@291 (type $generated@@420))))
(let (($generated@@422 ($generated@@290 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@289 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@288 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@367 $generated@@420) ($generated@@276 ($generated@@224 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@309 (type $generated@@425))))
(let (($generated@@427 ($generated@@308 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@307 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@306 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@152) (= (type $generated@@429) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@375 $generated@@425) ($generated@@276 ($generated@@224 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@152) ($generated@@225 $generated@@430 $generated@@46)) (and (= ($generated@@276 ($generated@@326 $generated@@2 $generated@@430)) $generated@@430) ($generated@@139 ($generated@@326 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@152) ($generated@@225 $generated@@431 $generated@@47)) (and (= ($generated@@276 ($generated@@326 $generated@@3 $generated@@431)) $generated@@431) ($generated@@139 ($generated@@326 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@152) ($generated@@225 $generated@@432 $generated@@44)) (and (= ($generated@@276 ($generated@@326 $generated@@4 $generated@@432)) $generated@@432) ($generated@@139 ($generated@@326 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@152) ($generated@@225 $generated@@434 $generated@@45)) (and (= ($generated@@276 ($generated@@326 $generated@@433 $generated@@434)) $generated@@434) ($generated@@139 ($generated@@326 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@67) (= ($generated@@225 ($generated@@276 $generated@@435) $generated@@436) ($generated@@139 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@225 ($generated@@276 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@82 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@79 $generated@@438 $generated@@2)) (<= 0 ($generated@@281 $generated@@437))))
 :pattern ( ($generated@@281 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@271 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@270 $generated@@440)) (<= 0 ($generated@@269 $generated@@439))))
 :pattern ( ($generated@@269 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@75 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@75 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@262 ($generated@@224 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@142 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@142 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@142 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@152) (= (type $generated@@472) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@224 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@152) (= (type $generated@@474) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@224 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@271 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@270 $generated@@152)) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@269 $generated@@481))) ($generated@@249 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@77 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@78 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@78 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@487 ($generated@@234 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@234 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@239 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@157 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@157 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@326 $generated@@504 ($generated@@276 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@276 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@289 $generated@@152 $generated@@152)) (= (type $generated@@506) $generated@@67)) (= (type $generated@@507) $generated@@67)) (= ($generated@@139 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@505) $generated@@508))) (and ($generated@@225 ($generated@@84 ($generated@@368 $generated@@505) $generated@@508) $generated@@507) ($generated@@225 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@505) $generated@@508))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@139 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@307 $generated@@152 $generated@@152)) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) (= ($generated@@139 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@509) $generated@@512))) (and ($generated@@225 ($generated@@84 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@225 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@139 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@152)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@224 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@224 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@152)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@224 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@224 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@152) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) ($generated@@225 $generated@@519 ($generated@@393 $generated@@520 $generated@@521))) (and (= ($generated@@276 ($generated@@326 ($generated@@289 $generated@@152 $generated@@152) $generated@@519)) $generated@@519) ($generated@@139 ($generated@@326 ($generated@@289 $generated@@152 $generated@@152) $generated@@519) ($generated@@393 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@225 $generated@@519 ($generated@@393 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@152) (= (type $generated@@523) $generated@@67)) (= (type $generated@@524) $generated@@67)) ($generated@@225 $generated@@522 ($generated@@401 $generated@@523 $generated@@524))) (and (= ($generated@@276 ($generated@@326 ($generated@@307 $generated@@152 $generated@@152) $generated@@522)) $generated@@522) ($generated@@139 ($generated@@326 ($generated@@307 $generated@@152 $generated@@152) $generated@@522) ($generated@@401 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@225 $generated@@522 ($generated@@401 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (= (type $generated@@527) $generated@@152)) ($generated@@225 $generated@@527 ($generated@@142 $generated@@525 $generated@@526))) (and (= ($generated@@276 ($generated@@326 $generated@@143 $generated@@527)) $generated@@527) ($generated@@139 ($generated@@326 $generated@@143 $generated@@527) ($generated@@142 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@225 $generated@@527 ($generated@@142 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@84 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@84 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@72)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@142 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@143) (= ($generated@@513 ($generated@@276 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@276 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@152) ($generated@@225 $generated@@535 ($generated@@78 0))) (and (= ($generated@@276 ($generated@@326 $generated@@2 $generated@@535)) $generated@@535) ($generated@@139 ($generated@@326 ($generated@@79 $generated@@152 $generated@@4) $generated@@535) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@535 ($generated@@78 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) ($generated@@225 $generated@@536 ($generated@@234 $generated@@537))) (and (= ($generated@@276 ($generated@@326 ($generated@@79 $generated@@152 $generated@@4) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@326 ($generated@@79 $generated@@152 $generated@@4) $generated@@536) ($generated@@234 $generated@@537))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@234 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@152) (= (type $generated@@539) $generated@@67)) ($generated@@225 $generated@@538 ($generated@@239 $generated@@539))) (and (= ($generated@@276 ($generated@@326 ($generated@@79 $generated@@152 $generated@@4) $generated@@538)) $generated@@538) ($generated@@139 ($generated@@326 ($generated@@79 $generated@@152 $generated@@4) $generated@@538) ($generated@@239 $generated@@539))))
 :pattern ( ($generated@@225 $generated@@538 ($generated@@239 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@152) (= (type $generated@@541) $generated@@67)) ($generated@@225 $generated@@540 ($generated@@157 $generated@@541))) (and (= ($generated@@276 ($generated@@326 ($generated@@79 $generated@@152 $generated@@2) $generated@@540)) $generated@@540) ($generated@@139 ($generated@@326 ($generated@@79 $generated@@152 $generated@@2) $generated@@540) ($generated@@157 $generated@@541))))
 :pattern ( ($generated@@225 $generated@@540 ($generated@@157 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@152) (= (type $generated@@543) $generated@@67)) ($generated@@225 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@276 ($generated@@326 ($generated@@270 $generated@@152) $generated@@542)) $generated@@542) ($generated@@139 ($generated@@326 ($generated@@270 $generated@@152) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@530 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@530 $generated@@221) $generated@@66))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@544 ($generated@@157 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@544 $generated@@547)))) ($generated@@249 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@84 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@77 $generated@@544 ($generated@@157 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@143) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@550) (and ($generated@@141 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@67) ($generated@@77 $generated@@548 ($generated@@142 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@77 $generated@@548 ($generated@@142 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@249 ($generated@@150 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@143) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@554) (and ($generated@@141 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@67) ($generated@@77 $generated@@552 ($generated@@142 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@77 $generated@@552 ($generated@@142 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@249 ($generated@@151 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@249 ($generated@@151 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@152) (= (type $generated@@557) $generated@@152)) (= ($generated@@224 ($generated@@244 $generated@@556) ($generated@@244 $generated@@557)) ($generated@@244 ($generated@@224 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@556) ($generated@@244 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@276 ($generated@@244 $generated@@558)) ($generated@@244 ($generated@@276 $generated@@558)))
 :pattern ( ($generated@@276 ($generated@@244 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@271 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@270 $generated@@560)) (= ($generated@@269 $generated@@559) 0)) (= $generated@@559 ($generated@@268 $generated@@560))))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@79 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@281 ($generated@@85 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@281 $generated@@561) ($generated ($generated@@84 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@281 ($generated@@85 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@2)) ($generated@@77 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@3)) ($generated@@77 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@4)) ($generated@@77 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@433)) ($generated@@77 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@152)) ($generated@@77 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@270 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= ($generated@@139 $generated@@575 ($generated@@475 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@269 $generated@@575))) ($generated@@225 ($generated@@476 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@476 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@475 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) ($generated@@270 $generated@@152)) (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@269 $generated@@579))) (< ($generated@@514 ($generated@@326 $generated@@143 ($generated@@476 $generated@@579 $generated@@580))) ($generated@@578 $generated@@579))))
 :pattern ( ($generated@@514 ($generated@@326 $generated@@143 ($generated@@476 $generated@@579 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@289 $generated@@152 $generated@@152)) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) $generated@@67)) ($generated@@139 $generated@@581 ($generated@@393 $generated@@582 $generated@@583))) (and (and ($generated@@139 ($generated@@287 $generated@@581) ($generated@@234 $generated@@582)) ($generated@@139 ($generated@@336 $generated@@581) ($generated@@234 $generated@@583))) ($generated@@139 ($generated@@367 $generated@@581) ($generated@@234 ($generated@@142 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@139 $generated@@581 ($generated@@393 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@307 $generated@@152 $generated@@152)) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) $generated@@67)) ($generated@@139 $generated@@584 ($generated@@401 $generated@@585 $generated@@586))) (and (and ($generated@@139 ($generated@@305 $generated@@584) ($generated@@239 $generated@@585)) ($generated@@139 ($generated@@347 $generated@@584) ($generated@@239 $generated@@586))) ($generated@@139 ($generated@@375 $generated@@584) ($generated@@239 ($generated@@142 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@139 $generated@@584 ($generated@@401 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@2) ($generated@@139 $generated@@587 $generated@@46))
 :pattern ( ($generated@@139 $generated@@587 $generated@@46))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@3) ($generated@@139 $generated@@588 $generated@@47))
 :pattern ( ($generated@@139 $generated@@588 $generated@@47))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@4) ($generated@@139 $generated@@589 $generated@@44))
 :pattern ( ($generated@@139 $generated@@589 $generated@@44))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@433) ($generated@@139 $generated@@590 $generated@@45))
 :pattern ( ($generated@@139 $generated@@590 $generated@@45))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@152) ($generated@@139 $generated@@591 $generated@@48))
 :pattern ( ($generated@@139 $generated@@591 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@594) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@595) $generated@@80)) (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@597) $generated@@80)) (= (type $generated@@598) ($generated@@167 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@600  (=> (and (forall (($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@80) ($generated@@139 $generated@@601 $generated@@221)) ($generated@@0 ($generated@@84 $generated@@594 ($generated@@276 $generated@@601)))) (not ($generated@@0 ($generated@@244 ($generated@@11 true))))) (and ($generated@@257 $generated@@601 $generated@@593) (and ($generated@@257 $generated@@601 $generated@@592) ($generated@@257 ($generated@@256 $generated@@601 $generated@@592) $generated@@592))))
 :pattern ( ($generated@@256 ($generated@@256 $generated@@601 $generated@@592) $generated@@592))
 :pattern ( ($generated@@256 $generated@@601 $generated@@593))
 :pattern ( ($generated@@84 $generated@@594 ($generated@@276 $generated@@601)))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@80) (=> (and ($generated@@139 $generated@@602 $generated@@221) ($generated@@0 ($generated@@84 $generated@@594 ($generated@@276 $generated@@602)))) (or true (= ($generated@@256 $generated@@602 $generated@@593) ($generated@@256 ($generated@@256 $generated@@602 $generated@@592) $generated@@592)))))
 :pattern ( ($generated@@256 ($generated@@256 $generated@@602 $generated@@592) $generated@@592))
 :pattern ( ($generated@@256 $generated@@602 $generated@@593))
 :pattern ( ($generated@@84 $generated@@594 ($generated@@276 $generated@@602)))
)))))
(let (($generated@@603  (=> (and ($generated@@0 ($generated@@244 ($generated@@11 true))) (= (ControlFlow 0 6) 2)) $generated@@600)))
(let (($generated@@604  (=> (and (and (not ($generated@@0 ($generated@@244 ($generated@@11 true)))) ($generated@@77 $generated@@595 $generated@@221 $generated@@596)) (and ($generated@@77 ($generated@@8 $generated@@593) $generated@@46 $generated@@596) ($generated@@257 $generated@@595 $generated@@593))) (=> (and (and (and ($generated@@77 $generated@@595 $generated@@221 $generated@@596) ($generated@@77 ($generated@@8 $generated@@592) $generated@@46 $generated@@596)) (and ($generated@@257 $generated@@595 $generated@@592) (= $generated@@597 ($generated@@256 $generated@@595 $generated@@592)))) (and (and ($generated@@77 $generated@@597 $generated@@221 $generated@@596) ($generated@@77 ($generated@@8 $generated@@592) $generated@@46 $generated@@596)) (and ($generated@@257 ($generated@@256 $generated@@595 $generated@@592) $generated@@592) (= (ControlFlow 0 5) 2)))) $generated@@600))))
(let (($generated@@605  (=> ($generated@@0 ($generated@@84 $generated@@594 ($generated@@276 $generated@@595))) (and (=> (= (ControlFlow 0 7) 5) $generated@@604) (=> (= (ControlFlow 0 7) 6) $generated@@603)))))
(let (($generated@@606  (=> (and (not ($generated@@0 ($generated@@84 $generated@@594 ($generated@@276 $generated@@595)))) (= (ControlFlow 0 4) 2)) $generated@@600)))
(let (($generated@@607  (=> (and ($generated@@139 $generated@@595 $generated@@221) ($generated@@77 $generated@@595 $generated@@221 $generated@@596)) (and (=> (= (ControlFlow 0 8) 7) $generated@@605) (=> (= (ControlFlow 0 8) 4) $generated@@606)))))
(let (($generated@@608  (=> (and (not (and ($generated@@139 $generated@@595 $generated@@221) ($generated@@77 $generated@@595 $generated@@221 $generated@@596))) (= (ControlFlow 0 3) 2)) $generated@@600)))
(let (($generated@@609  (=> (= $generated@@598 ($generated@@166 $generated@@136 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@607) (=> (= (ControlFlow 0 9) 3) $generated@@608)))))
(let (($generated@@610  (=> (and ($generated@@248 $generated@@596) ($generated@@599 $generated@@596)) (=> (and (and ($generated@@139 $generated@@594 ($generated@@234 $generated@@221)) ($generated@@77 $generated@@594 ($generated@@234 $generated@@221) $generated@@596)) (and (= 2 $generated@@255) (= (ControlFlow 0 10) 9))) $generated@@609))))
$generated@@610))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 () T@T)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@339 (T@U T@U) T@U)
(declare-fun $generated@@346 (T@U T@U) T@U)
(declare-fun $generated@@356 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@357 (T@U T@U T@U) T@U)
(declare-fun $generated@@358 (T@T T@T T@T) T@T)
(declare-fun $generated@@359 (T@U T@U T@U) T@U)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@363 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@456 () T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@T T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@510 (T@U T@U) T@U)
(declare-fun $generated@@518 (T@U T@U) T@U)
(declare-fun $generated@@534 (T@T) T@U)
(declare-fun $generated@@558 () T@T)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@632 (T@U Int) T@U)
(declare-fun $generated@@641 (T@U) Int)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@669 (T@U) Int)
(declare-fun $generated@@670 (T@U) Int)
(declare-fun $generated@@705 (T@U) T@U)
(declare-fun $generated@@764 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@66) $generated@@75)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@81 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@70)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@70)) ($generated@@138 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@138 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@83 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@73 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@83) (= (type $generated@@211) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@212) ($generated@@72 $generated@@4))) (= (type $generated@@214) $generated@@83)) (= (type $generated@@215) ($generated@@72 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert  (and (= ($generated@@1 $generated@@218) 17) (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@217 $generated@@220 $generated@@221)) $generated@@70)
 :pattern ( ($generated@@217 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@222) $generated@@218) (= (type $generated@@223) $generated@@70)) (= (type $generated@@224) $generated@@70)) (= (type $generated@@225) $generated@@70)) (= (type $generated@@226) $generated@@70)) (and (and ($generated@@138 $generated@@222 ($generated@@217 $generated@@223 $generated@@224)) (forall (($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@151) ($generated@@219 $generated@@227 $generated@@225)) ($generated@@219 $generated@@227 $generated@@223))
 :pattern ( ($generated@@219 $generated@@227 $generated@@225))
 :pattern ( ($generated@@219 $generated@@227 $generated@@223))
))) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@151) ($generated@@219 $generated@@228 $generated@@224)) ($generated@@219 $generated@@228 $generated@@226))
 :pattern ( ($generated@@219 $generated@@228 $generated@@224))
 :pattern ( ($generated@@219 $generated@@228 $generated@@226))
)))) ($generated@@138 $generated@@222 ($generated@@217 $generated@@225 $generated@@226)))
 :pattern ( ($generated@@138 $generated@@222 ($generated@@217 $generated@@223 $generated@@224)) ($generated@@138 $generated@@222 ($generated@@217 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231)) $generated@@142)
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@70) (= (type $generated@@233) $generated@@70)) (= (type $generated@@234) $generated@@151)) (= (type $generated@@235) $generated@@151)) (= ($generated@@138 ($generated@@229 $generated@@234 $generated@@235) ($generated@@141 $generated@@232 $generated@@233))  (and ($generated@@219 $generated@@234 $generated@@232) ($generated@@219 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@138 ($generated@@229 $generated@@234 $generated@@235) ($generated@@141 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@142) (= (type $generated@@237) $generated@@142)) (= ($generated@@148 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@148 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@70)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@241) $generated@@70)) (= ($generated@@138 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@151) ($generated@@0 ($generated@@87 $generated@@240 $generated@@242))) ($generated@@219 $generated@@242 $generated@@241))
 :pattern ( ($generated@@87 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@138 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@70)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@246) $generated@@70)) (= ($generated@@138 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@151) ($generated@@0 ($generated@@87 $generated@@245 $generated@@247))) ($generated@@219 $generated@@247 $generated@@246))
 :pattern ( ($generated@@87 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@138 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@252 $generated@@257 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@252 $generated@@257 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
)) (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84))) (forall (($generated@@262 T@T) ) (! (= (type ($generated@@256 $generated@@262)) ($generated@@82 $generated@@262 $generated@@4))
 :pattern ( ($generated@@256 $generated@@262))
))))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@266) $generated@@218)) (= (type $generated@@267) $generated@@151)) (and ($generated@@254 $generated@@265) (and ($generated@@219 $generated@@267 $generated@@263) ($generated@@138 $generated@@266 ($generated@@217 $generated@@263 $generated@@264))))) (= ($generated@@255 ($generated@@252 $generated@@263 $generated@@264 $generated@@253 $generated@@266 $generated@@267) ($generated@@256 $generated@@151)) ($generated@@255 ($generated@@252 $generated@@263 $generated@@264 $generated@@265 $generated@@266 $generated@@267) ($generated@@256 $generated@@151))))
 :pattern ( ($generated@@252 $generated@@263 $generated@@264 $generated@@253 $generated@@266 $generated@@267) ($generated@@254 $generated@@265))
 :pattern ( ($generated@@252 $generated@@263 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@70) (= (type $generated@@270) $generated@@70)) (= (type $generated@@271) $generated@@151)) (= (type $generated@@272) $generated@@151)) (= (type $generated@@273) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@254 $generated@@273)) (= ($generated@@80 ($generated@@229 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@80 ($generated@@229 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@74)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@140 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@142) ($generated@@140 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@151) (= (type $generated@@279) $generated@@151)) (= $generated@@277 ($generated@@229 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@140 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 18)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert ($generated@@254 $generated@@253))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@151)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@70) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@268 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@80 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@268 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@82 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@85 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@82 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@87 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@82 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@87 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@87 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 20)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@82 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@87 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@87 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@335))))
 (=> (and (= (type $generated@@335) ($generated@@82 $generated@@337 $generated@@4)) (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@4))) (= ($generated@@255 $generated@@335 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (= ($generated@@0 ($generated@@87 $generated@@335 $generated@@338)) ($generated@@0 ($generated@@87 $generated@@336 $generated@@338))))
 :pattern ( ($generated@@87 $generated@@335 $generated@@338))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@255 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@70)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (= (type $generated@@342) $generated@@70) (= (type $generated@@343) $generated@@70)) (= (type $generated@@344) $generated@@218)) (= (type $generated@@345) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@344 ($generated@@339 $generated@@342 $generated@@343) $generated@@345) ($generated@@80 $generated@@344 ($generated@@217 $generated@@342 $generated@@343) $generated@@345)))
 :pattern ( ($generated@@80 $generated@@344 ($generated@@339 $generated@@342 $generated@@343) $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@70)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (= (type $generated@@349) $generated@@70) (= (type $generated@@350) $generated@@70)) (= (type $generated@@351) $generated@@218)) (= (type $generated@@352) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@351 ($generated@@346 $generated@@349 $generated@@350) $generated@@352) ($generated@@80 $generated@@351 ($generated@@339 $generated@@349 $generated@@350) $generated@@352)))
 :pattern ( ($generated@@80 $generated@@351 ($generated@@346 $generated@@349 $generated@@350) $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@85 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@82 $generated@@354 $generated@@2)) (= ($generated@@157 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@87 $generated@@353 $generated@@355))) (<= ($generated ($generated@@87 $generated@@353 $generated@@355)) ($generated@@293 $generated@@353))))
 :pattern ( ($generated@@87 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@157 $generated@@353))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@364 T@T) ($generated@@365 T@T) ($generated@@366 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@364 $generated@@365 $generated@@366)) 21)) (forall (($generated@@367 T@T) ($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@367 $generated@@368 $generated@@369)) $generated@@367)
 :pattern ( ($generated@@358 $generated@@367 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@361 ($generated@@358 $generated@@370 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@358 $generated@@370 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@362 ($generated@@358 $generated@@373 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@358 $generated@@373 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@362 (type $generated@@376))))
(= (type ($generated@@359 $generated@@376 $generated@@377 $generated@@378)) $generated@@379))
 :pattern ( ($generated@@359 $generated@@376 $generated@@377 $generated@@378))
))) (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 (type $generated@@382)))
(let (($generated@@386 (type $generated@@381)))
(= (type ($generated@@363 $generated@@380 $generated@@381 $generated@@382 $generated@@383)) ($generated@@358 $generated@@386 $generated@@385 $generated@@384)))))
 :pattern ( ($generated@@363 $generated@@380 $generated@@381 $generated@@382 $generated@@383))
))) (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@362 (type $generated@@387))))
 (=> (= (type $generated@@390) $generated@@391) (= ($generated@@359 ($generated@@363 $generated@@387 $generated@@388 $generated@@389 $generated@@390) $generated@@388 $generated@@389) $generated@@390)))
 :weight 0
))) (and (and (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (or (= $generated@@394 $generated@@396) (= ($generated@@359 ($generated@@363 $generated@@393 $generated@@394 $generated@@395 $generated@@392) $generated@@396 $generated@@397) ($generated@@359 $generated@@393 $generated@@396 $generated@@397)))
 :weight 0
)) (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (or (= $generated@@401 $generated@@403) (= ($generated@@359 ($generated@@363 $generated@@399 $generated@@400 $generated@@401 $generated@@398) $generated@@402 $generated@@403) ($generated@@359 $generated@@399 $generated@@402 $generated@@403)))
 :weight 0
))) (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (or true (= ($generated@@359 ($generated@@363 $generated@@405 $generated@@406 $generated@@407 $generated@@404) $generated@@408 $generated@@409) ($generated@@359 $generated@@405 $generated@@408 $generated@@409)))
 :weight 0
)))) (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@356 $generated@@410 $generated@@411 $generated@@412 $generated@@413 $generated@@414)) $generated@@151)
 :pattern ( ($generated@@356 $generated@@410 $generated@@411 $generated@@412 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@357 $generated@@415 $generated@@416 $generated@@417)) $generated@@218)
 :pattern ( ($generated@@357 $generated@@415 $generated@@416 $generated@@417))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@418) $generated@@70) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@421) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 $generated@@151))) (= (type $generated@@422) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 $generated@@4))) (= (type $generated@@423) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 ($generated@@82 $generated@@151 $generated@@4)))) (= (type $generated@@424) $generated@@151)) (= ($generated@@356 $generated@@418 $generated@@419 $generated@@420 ($generated@@357 $generated@@421 $generated@@422 $generated@@423) $generated@@424) ($generated@@359 $generated@@421 $generated@@420 $generated@@424)))
 :pattern ( ($generated@@356 $generated@@418 $generated@@419 $generated@@420 ($generated@@357 $generated@@421 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@303 (type $generated@@425))))
(let (($generated@@427 ($generated@@302 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@301 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@300 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) ($generated@@0 ($generated@@87 ($generated@@299 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@299 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@303 (type $generated@@430))))
(= (type ($generated@@429 $generated@@430)) ($generated@@82 $generated@@431 $generated@@4)))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@303 (type $generated@@432))))
(let (($generated@@434 ($generated@@302 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@301 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@300 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@433) ($generated@@0 ($generated@@87 ($generated@@429 $generated@@432) $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@429 $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@321 (type $generated@@436))))
(let (($generated@@438 ($generated@@320 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@319 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@318 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) ($generated@@0 ($generated@@87 ($generated@@317 $generated@@436) $generated@@439)))
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@317 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@321 (type $generated@@441))))
(= (type ($generated@@440 $generated@@441)) ($generated@@82 $generated@@442 $generated@@4)))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@321 (type $generated@@443))))
(let (($generated@@445 ($generated@@320 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@319 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@318 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@444) ($generated@@0 ($generated@@87 ($generated@@440 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@440 $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@448) $generated@@70)) (= ($generated@@138 $generated@@447 ($generated@@156 $generated@@448)) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@447 $generated@@449)))) ($generated@@219 $generated@@449 $generated@@448))
 :pattern ( ($generated@@87 $generated@@447 $generated@@449))
))))
 :pattern ( ($generated@@138 $generated@@447 ($generated@@156 $generated@@448)))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@451) $generated@@218) (= (type $generated@@452) $generated@@70)) (= (type $generated@@453) $generated@@70)) (= (type $generated@@454) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@254 $generated@@454) ($generated@@80 $generated@@451 ($generated@@217 $generated@@452 $generated@@453) $generated@@454))) (forall (($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@151) (=> (and ($generated@@268 $generated@@455 $generated@@452 $generated@@454) ($generated@@450 $generated@@452 $generated@@453 $generated@@454 $generated@@451 $generated@@455)) ($generated@@268 ($generated@@356 $generated@@452 $generated@@453 $generated@@454 $generated@@451 $generated@@455) $generated@@453 $generated@@454)))
 :pattern ( ($generated@@356 $generated@@452 $generated@@453 $generated@@454 $generated@@451 $generated@@455))
)))
 :pattern ( ($generated@@80 $generated@@451 ($generated@@217 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (= (type $generated@@456) $generated@@83))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@457) $generated@@218) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) $generated@@70)) (= (type $generated@@460) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@254 $generated@@460)) (= ($generated@@80 $generated@@457 ($generated@@217 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@151) (=> (and (and ($generated@@219 $generated@@461 $generated@@458) ($generated@@268 $generated@@461 $generated@@458 $generated@@460)) ($generated@@450 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461)) (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@83) (=> (and (not (= $generated@@462 $generated@@456)) ($generated@@0 ($generated@@87 ($generated@@252 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461) ($generated@@288 $generated@@462)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@460 $generated@@462) $generated@@60))))
 :pattern ( ($generated@@87 ($generated@@252 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461) ($generated@@288 $generated@@462)))
))))
 :pattern ( ($generated@@356 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461))
 :pattern ( ($generated@@252 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461))
))))
 :pattern ( ($generated@@80 $generated@@457 ($generated@@217 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (= (type $generated@@463) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@464) $generated@@70)) (= (type $generated@@465) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@463 ($generated@@238 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@151) ($generated@@0 ($generated@@87 $generated@@463 $generated@@466))) ($generated@@268 $generated@@466 $generated@@464 $generated@@465))
 :pattern ( ($generated@@87 $generated@@463 $generated@@466))
))))
 :pattern ( ($generated@@80 $generated@@463 ($generated@@238 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@468) $generated@@70)) (= (type $generated@@469) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@467 ($generated@@243 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@151) ($generated@@0 ($generated@@87 $generated@@467 $generated@@470))) ($generated@@268 $generated@@470 $generated@@468 $generated@@469))
 :pattern ( ($generated@@87 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@80 $generated@@467 ($generated@@243 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@471)))
(= ($generated ($generated@@87 ($generated@@294 $generated@@472) $generated@@471)) 0))
 :pattern ( (let (($generated@@472 (type $generated@@471)))
($generated@@87 ($generated@@294 $generated@@472) $generated@@471)))
)))
(assert  (and (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@473 $generated@@476)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@473 $generated@@476))
)) (forall (($generated@@477 T@T) ($generated@@478 T@U) ) (! (= (type ($generated@@474 $generated@@477 $generated@@478)) $generated@@477)
 :pattern ( ($generated@@474 $generated@@477 $generated@@478))
))) (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@303 (type $generated@@479))))
(let (($generated@@481 ($generated@@302 (type $generated@@479))))
(= (type ($generated@@475 $generated@@479)) ($generated@@82 $generated@@481 $generated@@480))))
 :pattern ( ($generated@@475 $generated@@479))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) ($generated@@301 $generated@@151 $generated@@151)) (= (type $generated@@483) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@473 $generated@@482) $generated@@483))  (and ($generated@@0 ($generated@@87 ($generated@@299 $generated@@482) ($generated@@149 ($generated@@474 $generated@@142 $generated@@483)))) (= ($generated@@87 ($generated@@475 $generated@@482) ($generated@@149 ($generated@@474 $generated@@142 $generated@@483))) ($generated@@150 ($generated@@474 $generated@@142 $generated@@483))))))
 :pattern ( ($generated@@87 ($generated@@473 $generated@@482) $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@321 (type $generated@@487))))
(let (($generated@@489 ($generated@@320 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487)) ($generated@@82 $generated@@489 $generated@@488))))
 :pattern ( ($generated@@485 $generated@@487))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) ($generated@@319 $generated@@151 $generated@@151)) (= (type $generated@@491) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@484 $generated@@490) $generated@@491))  (and ($generated@@0 ($generated@@87 ($generated@@317 $generated@@490) ($generated@@149 ($generated@@474 $generated@@142 $generated@@491)))) (= ($generated@@87 ($generated@@485 $generated@@490) ($generated@@149 ($generated@@474 $generated@@142 $generated@@491))) ($generated@@150 ($generated@@474 $generated@@142 $generated@@491))))))
 :pattern ( ($generated@@87 ($generated@@484 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(let (($generated@@495 ($generated@@302 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@301 $generated@@495 $generated@@494)) (= ($generated@@0 ($generated@@87 ($generated@@429 $generated@@492) $generated@@493)) (exists (($generated@@496 T@U) ) (!  (and (= (type $generated@@496) $generated@@495) (and ($generated@@0 ($generated@@87 ($generated@@299 $generated@@492) $generated@@496)) (= $generated@@493 ($generated@@87 ($generated@@475 $generated@@492) $generated@@496))))
 :pattern ( ($generated@@87 ($generated@@299 $generated@@492) $generated@@496))
 :pattern ( ($generated@@87 ($generated@@475 $generated@@492) $generated@@496))
))))))
 :pattern ( ($generated@@87 ($generated@@429 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(let (($generated@@500 ($generated@@320 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@319 $generated@@500 $generated@@499)) (= ($generated@@0 ($generated@@87 ($generated@@440 $generated@@497) $generated@@498)) (exists (($generated@@501 T@U) ) (!  (and (= (type $generated@@501) $generated@@500) (and ($generated@@0 ($generated@@87 ($generated@@317 $generated@@497) $generated@@501)) (= $generated@@498 ($generated@@87 ($generated@@485 $generated@@497) $generated@@501))))
 :pattern ( ($generated@@87 ($generated@@317 $generated@@497) $generated@@501))
 :pattern ( ($generated@@87 ($generated@@485 $generated@@497) $generated@@501))
))))))
 :pattern ( ($generated@@87 ($generated@@440 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@505) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 $generated@@151))) (= (type $generated@@506) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 $generated@@4))) (= (type $generated@@507) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 ($generated@@82 $generated@@151 $generated@@4)))) (= (type $generated@@508) $generated@@151)) (= (type $generated@@509) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@252 $generated@@502 $generated@@503 $generated@@504 ($generated@@357 $generated@@505 $generated@@506 $generated@@507) $generated@@508) $generated@@509)) ($generated@@0 ($generated@@87 ($generated@@359 $generated@@507 $generated@@504 $generated@@508) $generated@@509))))
 :pattern ( ($generated@@87 ($generated@@252 $generated@@502 $generated@@503 $generated@@504 ($generated@@357 $generated@@505 $generated@@506 $generated@@507) $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) ($generated@@301 $generated@@151 $generated@@151)) (= (type $generated@@514) $generated@@70)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@299 $generated@@513) $generated@@517))) (and ($generated@@268 ($generated@@87 ($generated@@475 $generated@@513) $generated@@517) $generated@@515 $generated@@516) ($generated@@268 $generated@@517 $generated@@514 $generated@@516)))
 :pattern ( ($generated@@87 ($generated@@475 $generated@@513) $generated@@517))
 :pattern ( ($generated@@87 ($generated@@299 $generated@@513) $generated@@517))
))))
 :pattern ( ($generated@@80 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) ($generated@@319 $generated@@151 $generated@@151)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) $generated@@70)) (= (type $generated@@524) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@521 ($generated@@518 $generated@@522 $generated@@523) $generated@@524) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@317 $generated@@521) $generated@@525))) (and ($generated@@268 ($generated@@87 ($generated@@485 $generated@@521) $generated@@525) $generated@@523 $generated@@524) ($generated@@268 $generated@@525 $generated@@522 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@485 $generated@@521) $generated@@525))
 :pattern ( ($generated@@87 ($generated@@317 $generated@@521) $generated@@525))
))))
 :pattern ( ($generated@@80 $generated@@521 ($generated@@518 $generated@@522 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@85 (type $generated@@526))))
 (=> (and (and (= (type $generated@@526) ($generated@@82 $generated@@528 $generated@@4)) (= (type $generated@@527) ($generated@@82 $generated@@528 $generated@@4))) ($generated@@255 $generated@@526 $generated@@527)) (= $generated@@526 $generated@@527)))
 :pattern ( ($generated@@255 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@218) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@138 $generated@@529 ($generated@@217 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@533) $generated@@151)) (=> (and (and ($generated@@254 $generated@@532) ($generated@@219 $generated@@533 $generated@@530)) ($generated@@450 $generated@@530 $generated@@531 $generated@@532 $generated@@529 $generated@@533)) ($generated@@219 ($generated@@356 $generated@@530 $generated@@531 $generated@@532 $generated@@529 $generated@@533) $generated@@531)))
 :pattern ( ($generated@@356 $generated@@530 $generated@@531 $generated@@532 $generated@@529 $generated@@533))
))))
 :pattern ( ($generated@@138 $generated@@529 ($generated@@217 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@T) ) (! (= (type ($generated@@534 $generated@@535)) ($generated@@82 $generated@@535 $generated@@4))
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@321 (type $generated@@536))))
(let (($generated@@538 ($generated@@320 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@319 $generated@@538 $generated@@537)) (= (= $generated@@536 ($generated@@318 $generated@@538 $generated@@537)) (= ($generated@@317 $generated@@536) ($generated@@534 $generated@@538))))))
 :pattern ( ($generated@@317 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@321 (type $generated@@539))))
(let (($generated@@541 ($generated@@320 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@319 $generated@@541 $generated@@540)) (= (= $generated@@539 ($generated@@318 $generated@@541 $generated@@540)) (= ($generated@@440 $generated@@539) ($generated@@534 $generated@@540))))))
 :pattern ( ($generated@@440 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@321 (type $generated@@542))))
(let (($generated@@544 ($generated@@320 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@319 $generated@@544 $generated@@543)) (= (= $generated@@542 ($generated@@318 $generated@@544 $generated@@543)) (= ($generated@@484 $generated@@542) ($generated@@534 $generated@@151))))))
 :pattern ( ($generated@@484 $generated@@542))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@303 (type $generated@@545))))
(let (($generated@@547 ($generated@@302 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@301 $generated@@547 $generated@@546)) (or (= $generated@@545 ($generated@@300 $generated@@547 $generated@@546)) (exists (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (and (and (= (type $generated@@548) $generated@@151) (= (type $generated@@549) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@473 $generated@@545) ($generated@@288 ($generated@@229 $generated@@548 $generated@@549)))))
 :no-pattern (type $generated@@548)
 :no-pattern (type $generated@@549)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
))))))
 :pattern ( ($generated@@473 $generated@@545))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@321 (type $generated@@550))))
(let (($generated@@552 ($generated@@320 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@319 $generated@@552 $generated@@551)) (or (= $generated@@550 ($generated@@318 $generated@@552 $generated@@551)) (exists (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (and (and (= (type $generated@@553) $generated@@151) (= (type $generated@@554) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@484 $generated@@550) ($generated@@288 ($generated@@229 $generated@@553 $generated@@554)))))
 :no-pattern (type $generated@@553)
 :no-pattern (type $generated@@554)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
))))))
 :pattern ( ($generated@@484 $generated@@550))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@151) ($generated@@219 $generated@@555 $generated@@46)) (and (= ($generated@@288 ($generated@@474 $generated@@2 $generated@@555)) $generated@@555) ($generated@@138 ($generated@@474 $generated@@2 $generated@@555) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@555 $generated@@46))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@151) ($generated@@219 $generated@@556 $generated@@47)) (and (= ($generated@@288 ($generated@@474 $generated@@3 $generated@@556)) $generated@@556) ($generated@@138 ($generated@@474 $generated@@3 $generated@@556) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@556 $generated@@47))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@151) ($generated@@219 $generated@@557 $generated@@44)) (and (= ($generated@@288 ($generated@@474 $generated@@4 $generated@@557)) $generated@@557) ($generated@@138 ($generated@@474 $generated@@4 $generated@@557) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@557 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@558) 22))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@151) ($generated@@219 $generated@@559 $generated@@45)) (and (= ($generated@@288 ($generated@@474 $generated@@558 $generated@@559)) $generated@@559) ($generated@@138 ($generated@@474 $generated@@558 $generated@@559) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@559 $generated@@45))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@70) (= ($generated@@219 ($generated@@288 $generated@@560) $generated@@561) ($generated@@138 $generated@@560 $generated@@561)))
 :pattern ( ($generated@@219 ($generated@@288 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@565) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 $generated@@151))) (= (type $generated@@566) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 $generated@@4))) (= (type $generated@@567) ($generated@@358 ($generated@@82 $generated@@83 $generated@@84) $generated@@151 ($generated@@82 $generated@@151 $generated@@4)))) (= (type $generated@@568) $generated@@151)) ($generated@@0 ($generated@@359 $generated@@566 $generated@@564 $generated@@568))) ($generated@@450 $generated@@562 $generated@@563 $generated@@564 ($generated@@357 $generated@@565 $generated@@566 $generated@@567) $generated@@568))
 :pattern ( ($generated@@450 $generated@@562 $generated@@563 $generated@@564 ($generated@@357 $generated@@565 $generated@@566 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@85 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@82 $generated@@570 $generated@@2)) (<= 0 ($generated@@293 $generated@@569))))
 :pattern ( ($generated@@293 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@283 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@282 $generated@@572)) (<= 0 ($generated@@281 $generated@@571))))
 :pattern ( ($generated@@281 $generated@@571))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@70)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@70) (= (type $generated@@576) $generated@@70)) (= ($generated@@573 ($generated@@510 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@510 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@70)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@70) (= (type $generated@@580) $generated@@70)) (= ($generated@@577 ($generated@@510 $generated@@579 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@510 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@70) (= (type $generated@@582) $generated@@70)) (= ($generated@@78 ($generated@@510 $generated@@581 $generated@@582)) $generated@@58))
 :pattern ( ($generated@@510 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@70)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@70) (= (type $generated@@586) $generated@@70)) (= ($generated@@583 ($generated@@518 $generated@@585 $generated@@586)) $generated@@585))
 :pattern ( ($generated@@518 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@70)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@70)) (= ($generated@@587 ($generated@@518 $generated@@589 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@518 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@70) (= (type $generated@@592) $generated@@70)) (= ($generated@@78 ($generated@@518 $generated@@591 $generated@@592)) $generated@@59))
 :pattern ( ($generated@@518 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@70)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@70) (= (type $generated@@596) $generated@@70)) (= ($generated@@593 ($generated@@217 $generated@@595 $generated@@596)) $generated@@595))
 :pattern ( ($generated@@217 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@70)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@70) (= (type $generated@@600) $generated@@70)) (= ($generated@@597 ($generated@@217 $generated@@599 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@217 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@70)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@70) (= (type $generated@@604) $generated@@70)) (= ($generated@@601 ($generated@@339 $generated@@603 $generated@@604)) $generated@@603))
 :pattern ( ($generated@@339 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@70)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@70) (= (type $generated@@608) $generated@@70)) (= ($generated@@605 ($generated@@339 $generated@@607 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@339 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@70)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@70) (= (type $generated@@612) $generated@@70)) (= ($generated@@609 ($generated@@346 $generated@@611 $generated@@612)) $generated@@611))
 :pattern ( ($generated@@346 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@70)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@70) (= (type $generated@@616) $generated@@70)) (= ($generated@@613 ($generated@@346 $generated@@615 $generated@@616)) $generated@@616))
 :pattern ( ($generated@@346 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@151) (= (type $generated@@618) $generated@@151)) (= ($generated@@274 ($generated@@229 $generated@@617 $generated@@618)) $generated@@64))
 :pattern ( ($generated@@229 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@70)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@70) (= (type $generated@@622) $generated@@70)) (= ($generated@@619 ($generated@@141 $generated@@621 $generated@@622)) $generated@@621))
 :pattern ( ($generated@@141 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@70)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@70) (= (type $generated@@626) $generated@@70)) (= ($generated@@623 ($generated@@141 $generated@@625 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@141 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@151) (= (type $generated@@628) $generated@@151)) (= ($generated@@149 ($generated@@229 $generated@@627 $generated@@628)) $generated@@627))
 :pattern ( ($generated@@229 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@151) (= (type $generated@@630) $generated@@151)) (= ($generated@@150 ($generated@@229 $generated@@629 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@229 $generated@@629 $generated@@630))
)))
(assert  (and (forall (($generated@@633 T@U) ) (! (= (type ($generated@@631 $generated@@633)) $generated@@70)
 :pattern ( ($generated@@631 $generated@@633))
)) (forall (($generated@@634 T@U) ($generated@@635 Int) ) (! (let (($generated@@636 ($generated@@283 (type $generated@@634))))
(= (type ($generated@@632 $generated@@634 $generated@@635)) $generated@@636))
 :pattern ( ($generated@@632 $generated@@634 $generated@@635))
))))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@282 $generated@@151)) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@637 ($generated@@631 $generated@@638) $generated@@639) (forall (($generated@@640 Int) ) (!  (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@281 $generated@@637))) ($generated@@268 ($generated@@632 $generated@@637 $generated@@640) $generated@@638 $generated@@639))
 :pattern ( ($generated@@632 $generated@@637 $generated@@640))
))))
 :pattern ( ($generated@@80 $generated@@637 ($generated@@631 $generated@@638) $generated@@639))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@641 ($generated@@81 $generated@@642)) $generated@@642)
 :pattern ( ($generated@@81 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@70)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@70) (= ($generated@@643 ($generated@@238 $generated@@645)) $generated@@645))
 :pattern ( ($generated@@238 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@70) (= ($generated@@78 ($generated@@238 $generated@@646)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@70)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@70) (= ($generated@@647 ($generated@@243 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@243 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@70) (= ($generated@@78 ($generated@@243 $generated@@650)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@70)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@70) (= ($generated@@651 ($generated@@156 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@156 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@70) (= ($generated@@78 ($generated@@156 $generated@@654)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@70)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@70) (= ($generated@@655 ($generated@@631 $generated@@657)) $generated@@657))
 :pattern ( ($generated@@631 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@70) (= ($generated@@78 ($generated@@631 $generated@@658)) $generated@@57))
 :pattern ( ($generated@@631 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@659)))
(= ($generated@@474 $generated@@660 ($generated@@288 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@288 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@301 $generated@@151 $generated@@151)) (= (type $generated@@662) $generated@@70)) (= (type $generated@@663) $generated@@70)) (= ($generated@@138 $generated@@661 ($generated@@510 $generated@@662 $generated@@663)) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@299 $generated@@661) $generated@@664))) (and ($generated@@219 ($generated@@87 ($generated@@475 $generated@@661) $generated@@664) $generated@@663) ($generated@@219 $generated@@664 $generated@@662)))
 :pattern ( ($generated@@87 ($generated@@475 $generated@@661) $generated@@664))
 :pattern ( ($generated@@87 ($generated@@299 $generated@@661) $generated@@664))
))))
 :pattern ( ($generated@@138 $generated@@661 ($generated@@510 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@319 $generated@@151 $generated@@151)) (= (type $generated@@666) $generated@@70)) (= (type $generated@@667) $generated@@70)) (= ($generated@@138 $generated@@665 ($generated@@518 $generated@@666 $generated@@667)) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@317 $generated@@665) $generated@@668))) (and ($generated@@219 ($generated@@87 ($generated@@485 $generated@@665) $generated@@668) $generated@@667) ($generated@@219 $generated@@668 $generated@@666)))
 :pattern ( ($generated@@87 ($generated@@485 $generated@@665) $generated@@668))
 :pattern ( ($generated@@87 ($generated@@317 $generated@@665) $generated@@668))
))))
 :pattern ( ($generated@@138 $generated@@665 ($generated@@518 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@151) (= (type $generated@@672) $generated@@151)) (< ($generated@@669 $generated@@671) ($generated@@670 ($generated@@229 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@229 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@151) (= (type $generated@@674) $generated@@151)) (< ($generated@@669 $generated@@674) ($generated@@670 ($generated@@229 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@229 $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@675) $generated@@70) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) $generated@@218)) (= ($generated@@138 $generated@@677 ($generated@@346 $generated@@675 $generated@@676))  (and ($generated@@138 $generated@@677 ($generated@@339 $generated@@675 $generated@@676)) (forall (($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@678) $generated@@151) ($generated@@219 $generated@@678 $generated@@675)) ($generated@@450 $generated@@675 $generated@@676 $generated@@253 $generated@@677 $generated@@678))
 :no-pattern (type $generated@@678)
 :no-pattern ($generated $generated@@678)
 :no-pattern ($generated@@0 $generated@@678)
)))))
 :pattern ( ($generated@@138 $generated@@677 ($generated@@346 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@70) (= (type $generated@@680) $generated@@70)) (= (type $generated@@681) $generated@@218)) (= ($generated@@138 $generated@@681 ($generated@@339 $generated@@679 $generated@@680))  (and ($generated@@138 $generated@@681 ($generated@@217 $generated@@679 $generated@@680)) (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@151) ($generated@@219 $generated@@682 $generated@@679)) ($generated@@255 ($generated@@252 $generated@@679 $generated@@680 $generated@@253 $generated@@681 $generated@@682) ($generated@@256 $generated@@151)))
 :no-pattern (type $generated@@682)
 :no-pattern ($generated $generated@@682)
 :no-pattern ($generated@@0 $generated@@682)
)))))
 :pattern ( ($generated@@138 $generated@@681 ($generated@@339 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@151) (= (type $generated@@684) $generated@@70)) (= (type $generated@@685) $generated@@70)) ($generated@@219 $generated@@683 ($generated@@510 $generated@@684 $generated@@685))) (and (= ($generated@@288 ($generated@@474 ($generated@@301 $generated@@151 $generated@@151) $generated@@683)) $generated@@683) ($generated@@138 ($generated@@474 ($generated@@301 $generated@@151 $generated@@151) $generated@@683) ($generated@@510 $generated@@684 $generated@@685))))
 :pattern ( ($generated@@219 $generated@@683 ($generated@@510 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@151) (= (type $generated@@687) $generated@@70)) (= (type $generated@@688) $generated@@70)) ($generated@@219 $generated@@686 ($generated@@518 $generated@@687 $generated@@688))) (and (= ($generated@@288 ($generated@@474 ($generated@@319 $generated@@151 $generated@@151) $generated@@686)) $generated@@686) ($generated@@138 ($generated@@474 ($generated@@319 $generated@@151 $generated@@151) $generated@@686) ($generated@@518 $generated@@687 $generated@@688))))
 :pattern ( ($generated@@219 $generated@@686 ($generated@@518 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) $generated@@70) (= (type $generated@@690) $generated@@70)) (= (type $generated@@691) $generated@@151)) ($generated@@219 $generated@@691 ($generated@@217 $generated@@689 $generated@@690))) (and (= ($generated@@288 ($generated@@474 $generated@@218 $generated@@691)) $generated@@691) ($generated@@138 ($generated@@474 $generated@@218 $generated@@691) ($generated@@217 $generated@@689 $generated@@690))))
 :pattern ( ($generated@@219 $generated@@691 ($generated@@217 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@70) (= (type $generated@@693) $generated@@70)) (= (type $generated@@694) $generated@@151)) ($generated@@219 $generated@@694 ($generated@@339 $generated@@692 $generated@@693))) (and (= ($generated@@288 ($generated@@474 $generated@@218 $generated@@694)) $generated@@694) ($generated@@138 ($generated@@474 $generated@@218 $generated@@694) ($generated@@339 $generated@@692 $generated@@693))))
 :pattern ( ($generated@@219 $generated@@694 ($generated@@339 $generated@@692 $generated@@693)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@70) (= (type $generated@@696) $generated@@70)) (= (type $generated@@697) $generated@@151)) ($generated@@219 $generated@@697 ($generated@@346 $generated@@695 $generated@@696))) (and (= ($generated@@288 ($generated@@474 $generated@@218 $generated@@697)) $generated@@697) ($generated@@138 ($generated@@474 $generated@@218 $generated@@697) ($generated@@346 $generated@@695 $generated@@696))))
 :pattern ( ($generated@@219 $generated@@697 ($generated@@346 $generated@@695 $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) $generated@@70) (= (type $generated@@699) $generated@@70)) (= (type $generated@@700) $generated@@151)) ($generated@@219 $generated@@700 ($generated@@141 $generated@@698 $generated@@699))) (and (= ($generated@@288 ($generated@@474 $generated@@142 $generated@@700)) $generated@@700) ($generated@@138 ($generated@@474 $generated@@142 $generated@@700) ($generated@@141 $generated@@698 $generated@@699))))
 :pattern ( ($generated@@219 $generated@@700 ($generated@@141 $generated@@698 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ) (! (let (($generated@@702 (type $generated@@701)))
 (not ($generated@@0 ($generated@@87 ($generated@@256 $generated@@702) $generated@@701))))
 :pattern ( (let (($generated@@702 (type $generated@@701)))
($generated@@87 ($generated@@256 $generated@@702) $generated@@701)))
)))
(assert (forall (($generated@@703 T@U) ) (! (let (($generated@@704 (type $generated@@703)))
 (not ($generated@@0 ($generated@@87 ($generated@@534 $generated@@704) $generated@@703))))
 :pattern ( (let (($generated@@704 (type $generated@@703)))
($generated@@87 ($generated@@534 $generated@@704) $generated@@703)))
)))
(assert (forall (($generated@@706 T@U) ) (! (= (type ($generated@@705 $generated@@706)) $generated@@75)
 :pattern ( ($generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@70) (= (type $generated@@708) $generated@@70)) (and (= ($generated@@78 ($generated@@217 $generated@@707 $generated@@708)) $generated@@61) (= ($generated@@705 ($generated@@217 $generated@@707 $generated@@708)) $generated@@66)))
 :pattern ( ($generated@@217 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@70) (= (type $generated@@710) $generated@@70)) (and (= ($generated@@78 ($generated@@339 $generated@@709 $generated@@710)) $generated@@62) (= ($generated@@705 ($generated@@339 $generated@@709 $generated@@710)) $generated@@67)))
 :pattern ( ($generated@@339 $generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@70) (= (type $generated@@712) $generated@@70)) (and (= ($generated@@78 ($generated@@346 $generated@@711 $generated@@712)) $generated@@63) (= ($generated@@705 ($generated@@346 $generated@@711 $generated@@712)) $generated@@68)))
 :pattern ( ($generated@@346 $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) $generated@@70) (= (type $generated@@714) $generated@@70)) (and (= ($generated@@78 ($generated@@141 $generated@@713 $generated@@714)) $generated@@65) (= ($generated@@705 ($generated@@141 $generated@@713 $generated@@714)) $generated@@69)))
 :pattern ( ($generated@@141 $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@715) $generated@@70) (= (type $generated@@716) $generated@@70)) (= (type $generated@@717) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@718) $generated@@218)) (= (type $generated@@719) $generated@@151)) (and (and ($generated@@254 $generated@@717) (and ($generated@@219 $generated@@719 $generated@@715) ($generated@@138 $generated@@718 ($generated@@217 $generated@@715 $generated@@716)))) ($generated@@255 ($generated@@252 $generated@@715 $generated@@716 $generated@@253 $generated@@718 $generated@@719) ($generated@@256 $generated@@151)))) (= ($generated@@450 $generated@@715 $generated@@716 $generated@@253 $generated@@718 $generated@@719) ($generated@@450 $generated@@715 $generated@@716 $generated@@717 $generated@@718 $generated@@719)))
 :pattern ( ($generated@@450 $generated@@715 $generated@@716 $generated@@253 $generated@@718 $generated@@719) ($generated@@254 $generated@@717))
 :pattern ( ($generated@@450 $generated@@715 $generated@@716 $generated@@717 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) $generated@@142) (= ($generated@@669 ($generated@@288 $generated@@720)) ($generated@@670 $generated@@720)))
 :pattern ( ($generated@@669 ($generated@@288 $generated@@720)))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@151) ($generated@@219 $generated@@721 ($generated@@81 0))) (and (= ($generated@@288 ($generated@@474 $generated@@2 $generated@@721)) $generated@@721) ($generated@@138 ($generated@@474 ($generated@@82 $generated@@151 $generated@@4) $generated@@721) ($generated@@81 0))))
 :pattern ( ($generated@@219 $generated@@721 ($generated@@81 0)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@151) (= (type $generated@@723) $generated@@70)) ($generated@@219 $generated@@722 ($generated@@238 $generated@@723))) (and (= ($generated@@288 ($generated@@474 ($generated@@82 $generated@@151 $generated@@4) $generated@@722)) $generated@@722) ($generated@@138 ($generated@@474 ($generated@@82 $generated@@151 $generated@@4) $generated@@722) ($generated@@238 $generated@@723))))
 :pattern ( ($generated@@219 $generated@@722 ($generated@@238 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@151) (= (type $generated@@725) $generated@@70)) ($generated@@219 $generated@@724 ($generated@@243 $generated@@725))) (and (= ($generated@@288 ($generated@@474 ($generated@@82 $generated@@151 $generated@@4) $generated@@724)) $generated@@724) ($generated@@138 ($generated@@474 ($generated@@82 $generated@@151 $generated@@4) $generated@@724) ($generated@@243 $generated@@725))))
 :pattern ( ($generated@@219 $generated@@724 ($generated@@243 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@151) (= (type $generated@@727) $generated@@70)) ($generated@@219 $generated@@726 ($generated@@156 $generated@@727))) (and (= ($generated@@288 ($generated@@474 ($generated@@82 $generated@@151 $generated@@2) $generated@@726)) $generated@@726) ($generated@@138 ($generated@@474 ($generated@@82 $generated@@151 $generated@@2) $generated@@726) ($generated@@156 $generated@@727))))
 :pattern ( ($generated@@219 $generated@@726 ($generated@@156 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@728) $generated@@151) (= (type $generated@@729) $generated@@70)) ($generated@@219 $generated@@728 ($generated@@631 $generated@@729))) (and (= ($generated@@288 ($generated@@474 ($generated@@282 $generated@@151) $generated@@728)) $generated@@728) ($generated@@138 ($generated@@474 ($generated@@282 $generated@@151) $generated@@728) ($generated@@631 $generated@@729))))
 :pattern ( ($generated@@219 $generated@@728 ($generated@@631 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (= (type $generated@@730) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@731) $generated@@70)) (= (type $generated@@732) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@730 ($generated@@156 $generated@@731) $generated@@732) (forall (($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@730 $generated@@733)))) ($generated@@268 $generated@@733 $generated@@731 $generated@@732))
 :pattern ( ($generated@@87 $generated@@730 $generated@@733))
))))
 :pattern ( ($generated@@80 $generated@@730 ($generated@@156 $generated@@731) $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (and (and (= (type $generated@@734) $generated@@142) (= (type $generated@@735) $generated@@70)) (= (type $generated@@736) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@254 $generated@@736) (and ($generated@@140 $generated@@734) (exists (($generated@@737 T@U) ) (!  (and (= (type $generated@@737) $generated@@70) ($generated@@80 $generated@@734 ($generated@@141 $generated@@735 $generated@@737) $generated@@736))
 :pattern ( ($generated@@80 $generated@@734 ($generated@@141 $generated@@735 $generated@@737) $generated@@736))
))))) ($generated@@268 ($generated@@149 $generated@@734) $generated@@735 $generated@@736))
 :pattern ( ($generated@@268 ($generated@@149 $generated@@734) $generated@@735 $generated@@736))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (and (and (= (type $generated@@738) $generated@@142) (= (type $generated@@739) $generated@@70)) (= (type $generated@@740) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@254 $generated@@740) (and ($generated@@140 $generated@@738) (exists (($generated@@741 T@U) ) (!  (and (= (type $generated@@741) $generated@@70) ($generated@@80 $generated@@738 ($generated@@141 $generated@@741 $generated@@739) $generated@@740))
 :pattern ( ($generated@@80 $generated@@738 ($generated@@141 $generated@@741 $generated@@739) $generated@@740))
))))) ($generated@@268 ($generated@@150 $generated@@738) $generated@@739 $generated@@740))
 :pattern ( ($generated@@268 ($generated@@150 $generated@@738) $generated@@739 $generated@@740))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@151) (= (type $generated@@743) $generated@@151)) (= ($generated@@229 ($generated@@248 $generated@@742) ($generated@@248 $generated@@743)) ($generated@@248 ($generated@@229 $generated@@742 $generated@@743))))
 :pattern ( ($generated@@229 ($generated@@248 $generated@@742) ($generated@@248 $generated@@743)))
)))
(assert (forall (($generated@@744 T@U) ) (! (= ($generated@@288 ($generated@@248 $generated@@744)) ($generated@@248 ($generated@@288 $generated@@744)))
 :pattern ( ($generated@@288 ($generated@@248 $generated@@744)))
)))
(assert (forall (($generated@@745 T@U) ) (! (let (($generated@@746 ($generated@@283 (type $generated@@745))))
 (=> (and (= (type $generated@@745) ($generated@@282 $generated@@746)) (= ($generated@@281 $generated@@745) 0)) (= $generated@@745 ($generated@@280 $generated@@746))))
 :pattern ( ($generated@@281 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ($generated@@749 T@U) ) (! (let (($generated@@750 (type $generated@@748)))
 (=> (and (and (= (type $generated@@747) ($generated@@82 $generated@@750 $generated@@2)) (= (type $generated@@749) $generated@@2)) (<= 0 ($generated $generated@@749))) (= ($generated@@293 ($generated@@88 $generated@@747 $generated@@748 $generated@@749)) (+ (- ($generated@@293 $generated@@747) ($generated ($generated@@87 $generated@@747 $generated@@748))) ($generated $generated@@749)))))
 :pattern ( ($generated@@293 ($generated@@88 $generated@@747 $generated@@748 $generated@@749)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (= (type $generated@@751) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@752) $generated@@2)) ($generated@@80 $generated@@752 $generated@@46 $generated@@751))
 :pattern ( ($generated@@80 $generated@@752 $generated@@46 $generated@@751))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@754) $generated@@3)) ($generated@@80 $generated@@754 $generated@@47 $generated@@753))
 :pattern ( ($generated@@80 $generated@@754 $generated@@47 $generated@@753))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (= (type $generated@@755) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@756) $generated@@4)) ($generated@@80 $generated@@756 $generated@@44 $generated@@755))
 :pattern ( ($generated@@80 $generated@@756 $generated@@44 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@757) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@758) $generated@@558)) ($generated@@80 $generated@@758 $generated@@45 $generated@@757))
 :pattern ( ($generated@@80 $generated@@758 $generated@@45 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@759) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@760) $generated@@151)) ($generated@@80 $generated@@760 $generated@@48 $generated@@759))
 :pattern ( ($generated@@80 $generated@@760 $generated@@48 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (= (type $generated@@761) ($generated@@282 $generated@@151)) (= (type $generated@@762) $generated@@70)) (= ($generated@@138 $generated@@761 ($generated@@631 $generated@@762)) (forall (($generated@@763 Int) ) (!  (=> (and (<= 0 $generated@@763) (< $generated@@763 ($generated@@281 $generated@@761))) ($generated@@219 ($generated@@632 $generated@@761 $generated@@763) $generated@@762))
 :pattern ( ($generated@@632 $generated@@761 $generated@@763))
))))
 :pattern ( ($generated@@138 $generated@@761 ($generated@@631 $generated@@762)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 Int) ) (!  (=> (= (type $generated@@765) ($generated@@282 $generated@@151)) (=> (and (<= 0 $generated@@766) (< $generated@@766 ($generated@@281 $generated@@765))) (< ($generated@@670 ($generated@@474 $generated@@142 ($generated@@632 $generated@@765 $generated@@766))) ($generated@@764 $generated@@765))))
 :pattern ( ($generated@@670 ($generated@@474 $generated@@142 ($generated@@632 $generated@@765 $generated@@766))))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ) (!  (=> (and (and (and (= (type $generated@@767) ($generated@@301 $generated@@151 $generated@@151)) (= (type $generated@@768) $generated@@70)) (= (type $generated@@769) $generated@@70)) ($generated@@138 $generated@@767 ($generated@@510 $generated@@768 $generated@@769))) (and (and ($generated@@138 ($generated@@299 $generated@@767) ($generated@@238 $generated@@768)) ($generated@@138 ($generated@@429 $generated@@767) ($generated@@238 $generated@@769))) ($generated@@138 ($generated@@473 $generated@@767) ($generated@@238 ($generated@@141 $generated@@768 $generated@@769)))))
 :pattern ( ($generated@@138 $generated@@767 ($generated@@510 $generated@@768 $generated@@769)))
)))
(assert (forall (($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (and (= (type $generated@@770) ($generated@@319 $generated@@151 $generated@@151)) (= (type $generated@@771) $generated@@70)) (= (type $generated@@772) $generated@@70)) ($generated@@138 $generated@@770 ($generated@@518 $generated@@771 $generated@@772))) (and (and ($generated@@138 ($generated@@317 $generated@@770) ($generated@@243 $generated@@771)) ($generated@@138 ($generated@@440 $generated@@770) ($generated@@243 $generated@@772))) ($generated@@138 ($generated@@484 $generated@@770) ($generated@@243 ($generated@@141 $generated@@771 $generated@@772)))))
 :pattern ( ($generated@@138 $generated@@770 ($generated@@518 $generated@@771 $generated@@772)))
)))
(assert (forall (($generated@@773 T@U) ) (!  (=> (= (type $generated@@773) $generated@@2) ($generated@@138 $generated@@773 $generated@@46))
 :pattern ( ($generated@@138 $generated@@773 $generated@@46))
)))
(assert (forall (($generated@@774 T@U) ) (!  (=> (= (type $generated@@774) $generated@@3) ($generated@@138 $generated@@774 $generated@@47))
 :pattern ( ($generated@@138 $generated@@774 $generated@@47))
)))
(assert (forall (($generated@@775 T@U) ) (!  (=> (= (type $generated@@775) $generated@@4) ($generated@@138 $generated@@775 $generated@@44))
 :pattern ( ($generated@@138 $generated@@775 $generated@@44))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@558) ($generated@@138 $generated@@776 $generated@@45))
 :pattern ( ($generated@@138 $generated@@776 $generated@@45))
)))
(assert (forall (($generated@@777 T@U) ) (!  (=> (= (type $generated@@777) $generated@@151) ($generated@@138 $generated@@777 $generated@@48))
 :pattern ( ($generated@@138 $generated@@777 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@778 () T@U)
(declare-fun $generated@@779 () T@U)
(declare-fun $generated@@780 () T@U)
(declare-fun $generated@@781 () T@U)
(declare-fun $generated@@782 (T@U) Bool)
(declare-fun $generated@@783 () Int)
(assert  (and (and (and (= (type $generated@@778) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@779) $generated@@218)) (= (type $generated@@780) $generated@@218)) (= (type $generated@@781) ($generated@@163 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@784  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@785 Int) ) (!  (=> true (or true (= ($generated ($generated@@474 $generated@@2 ($generated@@356 $generated@@46 $generated@@46 $generated@@778 $generated@@779 ($generated@@288 ($generated@@8 $generated@@785))))) ($generated ($generated@@474 $generated@@2 ($generated@@356 $generated@@46 $generated@@46 $generated@@778 $generated@@780 ($generated@@288 ($generated@@474 $generated@@2 ($generated@@356 $generated@@46 $generated@@46 $generated@@778 $generated@@779 ($generated@@288 ($generated@@8 $generated@@785)))))))))))
 :pattern ( ($generated@@474 $generated@@2 ($generated@@356 $generated@@46 $generated@@46 $generated@@778 $generated@@779 ($generated@@288 ($generated@@8 $generated@@785)))))
)))))
(let (($generated@@786  (=> (and ($generated@@0 ($generated@@248 ($generated@@11 true))) (= (ControlFlow 0 5) 3)) $generated@@784)))
(let (($generated@@787  (=> (and (not ($generated@@0 ($generated@@248 ($generated@@11 true)))) (= (ControlFlow 0 4) 3)) $generated@@784)))
(let (($generated@@788  (and (=> (= (ControlFlow 0 6) 4) $generated@@787) (=> (= (ControlFlow 0 6) 5) $generated@@786))))
(let (($generated@@789 true))
(let (($generated@@790  (=> (= $generated@@781 ($generated@@162 $generated@@456 $generated@@778 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@788) (=> (= (ControlFlow 0 7) 1) $generated@@789)))))
(let (($generated@@791  (=> (and (and (and ($generated@@254 $generated@@778) ($generated@@782 $generated@@778)) (and ($generated@@138 $generated@@779 ($generated@@346 $generated@@46 $generated@@46)) ($generated@@80 $generated@@779 ($generated@@346 $generated@@46 $generated@@46) $generated@@778))) (and (and ($generated@@138 $generated@@780 ($generated@@346 $generated@@46 $generated@@46)) ($generated@@80 $generated@@780 ($generated@@346 $generated@@46 $generated@@46) $generated@@778)) (and (= 1 $generated@@783) (= (ControlFlow 0 8) 7)))) $generated@@790)))
$generated@@791))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@262 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@T) T@U)
(declare-fun $generated@@426 () T@T)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@469 (T@U Int) T@U)
(declare-fun $generated@@478 (T@U) Int)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@552 () Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Bool)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) $generated@@152)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@71)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@143) (= ($generated@@141 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@143) ($generated@@141 $generated@@258)) (exists (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (and (= (type $generated@@259) $generated@@152) (= (type $generated@@260) $generated@@152)) (= $generated@@258 ($generated@@224 $generated@@259 $generated@@260)))
 :no-pattern (type $generated@@259)
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
)))
 :pattern ( ($generated@@141 $generated@@258))
)))
(assert  (and (and (forall (($generated@@265 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@265)) 17)) (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
))) (forall (($generated@@267 T@T) ) (! (= (type ($generated@@261 $generated@@267)) ($generated@@263 $generated@@267))
 :pattern ( ($generated@@261 $generated@@267))
))))
(assert (forall (($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@268)) 0)
 :pattern ( ($generated@@261 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@152)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@77 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@79 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@82 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@79 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@84 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@79 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@84 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@84 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@79 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@82 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@79 $generated@@317 $generated@@2)) (= ($generated@@158 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@84 $generated@@316 $generated@@318))) (<= ($generated ($generated@@84 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@84 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@158 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@225 $generated@@322 $generated@@135)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@319 $generated@@80 $generated@@322) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@322 $generated@@135))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@152) ($generated@@225 $generated@@323 $generated@@221)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@323)) $generated@@323) ($generated@@139 ($generated@@319 $generated@@80 $generated@@323) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@323 $generated@@221))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@80) (= ($generated@@139 $generated@@324 $generated@@221)  (and ($generated@@139 $generated@@324 $generated@@135) (not (= $generated@@324 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@324 $generated@@221))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@79 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@79 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@348) $generated@@67)) (= ($generated@@139 $generated@@347 ($generated@@157 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@347 $generated@@349)))) ($generated@@225 $generated@@349 $generated@@348))
 :pattern ( ($generated@@84 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@139 $generated@@347 ($generated@@157 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@351) $generated@@67)) (= (type $generated@@352) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@350 ($generated@@234 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@152) ($generated@@0 ($generated@@84 $generated@@350 $generated@@353))) ($generated@@249 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@84 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@77 $generated@@350 ($generated@@234 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@355) $generated@@67)) (= (type $generated@@356) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@354 ($generated@@239 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@152) ($generated@@0 ($generated@@84 $generated@@354 $generated@@357))) ($generated@@249 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@84 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@77 $generated@@354 ($generated@@239 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@84 ($generated@@275 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@84 ($generated@@275 $generated@@359) $generated@@358)))
)))
(assert  (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@360 $generated@@362))
)) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@284 (type $generated@@363))))
(let (($generated@@365 ($generated@@283 (type $generated@@363))))
(= (type ($generated@@361 $generated@@363)) ($generated@@79 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@361 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@367) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@360 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@84 ($generated@@280 $generated@@366) ($generated@@150 ($generated@@319 $generated@@143 $generated@@367)))) (= ($generated@@84 ($generated@@361 $generated@@366) ($generated@@150 ($generated@@319 $generated@@143 $generated@@367))) ($generated@@151 ($generated@@319 $generated@@143 $generated@@367))))))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@302 (type $generated@@371))))
(let (($generated@@373 ($generated@@301 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@375) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@374) ($generated@@150 ($generated@@319 $generated@@143 $generated@@375)))) (= ($generated@@84 ($generated@@369 $generated@@374) ($generated@@150 ($generated@@319 $generated@@143 $generated@@375))) ($generated@@151 ($generated@@319 $generated@@143 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@283 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@282 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@84 ($generated@@329 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@84 ($generated@@280 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@84 ($generated@@361 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@376) $generated@@380))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@301 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@300 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@84 ($generated@@340 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@84 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@381) $generated@@385))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@84 ($generated@@340 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@67)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) $generated@@67)) (= (type $generated@@392) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@389) $generated@@393))) (and ($generated@@249 ($generated@@84 ($generated@@361 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@249 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@77 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@397) $generated@@401))) (and ($generated@@249 ($generated@@84 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@249 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@T) ) (! (= (type ($generated@@402 $generated@@403)) ($generated@@79 $generated@@403 $generated@@4))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@302 (type $generated@@404))))
(let (($generated@@406 ($generated@@301 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@300 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@299 $generated@@406 $generated@@405)) (= ($generated@@298 $generated@@404) ($generated@@402 $generated@@406))))))
 :pattern ( ($generated@@298 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@302 (type $generated@@407))))
(let (($generated@@409 ($generated@@301 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@300 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@299 $generated@@409 $generated@@408)) (= ($generated@@340 $generated@@407) ($generated@@402 $generated@@408))))))
 :pattern ( ($generated@@340 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@302 (type $generated@@410))))
(let (($generated@@412 ($generated@@301 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@300 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@299 $generated@@412 $generated@@411)) (= ($generated@@368 $generated@@410) ($generated@@402 $generated@@152))))))
 :pattern ( ($generated@@368 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@284 (type $generated@@413))))
(let (($generated@@415 ($generated@@283 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@282 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@281 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@152) (= (type $generated@@417) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@360 $generated@@413) ($generated@@269 ($generated@@224 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@360 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@302 (type $generated@@418))))
(let (($generated@@420 ($generated@@301 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@300 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@299 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@152) (= (type $generated@@422) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@418) ($generated@@269 ($generated@@224 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@368 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@152) ($generated@@225 $generated@@423 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@423)) $generated@@423) ($generated@@139 ($generated@@319 $generated@@2 $generated@@423) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@423 $generated@@46))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@225 $generated@@424 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@319 $generated@@3 $generated@@424) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@424 $generated@@47))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@225 $generated@@425 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@319 $generated@@4 $generated@@425) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@425 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@426) 20))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@225 $generated@@427 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@426 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@319 $generated@@426 $generated@@427) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@427 $generated@@45))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (= (type $generated@@429) $generated@@67) (= ($generated@@225 ($generated@@269 $generated@@428) $generated@@429) ($generated@@139 $generated@@428 $generated@@429)))
 :pattern ( ($generated@@225 ($generated@@269 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@82 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@79 $generated@@431 $generated@@2)) (<= 0 ($generated@@274 $generated@@430))))
 :pattern ( ($generated@@274 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@264 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@263 $generated@@433)) (<= 0 ($generated@@262 $generated@@432))))
 :pattern ( ($generated@@262 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@386 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@386 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@67) (= (type $generated@@441) $generated@@67)) (= ($generated@@438 ($generated@@386 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@386 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@75 ($generated@@386 $generated@@442 $generated@@443)) $generated@@58))
 :pattern ( ($generated@@386 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@452 $generated@@453)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@152) (= (type $generated@@455) $generated@@152)) (= ($generated@@255 ($generated@@224 $generated@@454 $generated@@455)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@142 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@142 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@460 ($generated@@142 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@142 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@152) (= (type $generated@@465) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@224 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@224 $generated@@466 $generated@@467))
)))
(assert  (and (forall (($generated@@470 T@U) ) (! (= (type ($generated@@468 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@470))
)) (forall (($generated@@471 T@U) ($generated@@472 Int) ) (! (let (($generated@@473 ($generated@@264 (type $generated@@471))))
(= (type ($generated@@469 $generated@@471 $generated@@472)) $generated@@473))
 :pattern ( ($generated@@469 $generated@@471 $generated@@472))
))))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@263 $generated@@152)) (= (type $generated@@475) $generated@@67)) (= (type $generated@@476) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@474 ($generated@@468 $generated@@475) $generated@@476) (forall (($generated@@477 Int) ) (!  (=> (and (<= 0 $generated@@477) (< $generated@@477 ($generated@@262 $generated@@474))) ($generated@@249 ($generated@@469 $generated@@474 $generated@@477) $generated@@475 $generated@@476))
 :pattern ( ($generated@@469 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@77 $generated@@474 ($generated@@468 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@478 ($generated@@78 $generated@@479)) $generated@@479)
 :pattern ( ($generated@@78 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@67) (= ($generated@@480 ($generated@@234 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@234 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@483)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@484 ($generated@@239 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@239 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@487)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@157 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@157 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@491)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@468 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@468 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@468 $generated@@495)) $generated@@57))
 :pattern ( ($generated@@468 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(= ($generated@@319 $generated@@497 ($generated@@269 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@269 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@67)) (= ($generated@@139 $generated@@498 ($generated@@386 $generated@@499 $generated@@500)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@498) $generated@@501))) (and ($generated@@225 ($generated@@84 ($generated@@361 $generated@@498) $generated@@501) $generated@@500) ($generated@@225 $generated@@501 $generated@@499)))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@498) $generated@@501))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@498) $generated@@501))
))))
 :pattern ( ($generated@@139 $generated@@498 ($generated@@386 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@503) $generated@@67)) (= (type $generated@@504) $generated@@67)) (= ($generated@@139 $generated@@502 ($generated@@394 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@502) $generated@@505))) (and ($generated@@225 ($generated@@84 ($generated@@369 $generated@@502) $generated@@505) $generated@@504) ($generated@@225 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@502) $generated@@505))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@139 $generated@@502 ($generated@@394 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@152) (= (type $generated@@509) $generated@@152)) (< ($generated@@506 $generated@@508) ($generated@@507 ($generated@@224 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@224 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@506 $generated@@511) ($generated@@507 ($generated@@224 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@224 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@225 $generated@@512 ($generated@@386 $generated@@513 $generated@@514))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@319 ($generated@@282 $generated@@152 $generated@@152) $generated@@512) ($generated@@386 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@225 $generated@@512 ($generated@@386 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) ($generated@@225 $generated@@515 ($generated@@394 $generated@@516 $generated@@517))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@152 $generated@@152) $generated@@515)) $generated@@515) ($generated@@139 ($generated@@319 ($generated@@300 $generated@@152 $generated@@152) $generated@@515) ($generated@@394 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@225 $generated@@515 ($generated@@394 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@152)) ($generated@@225 $generated@@520 ($generated@@142 $generated@@518 $generated@@519))) (and (= ($generated@@269 ($generated@@319 $generated@@143 $generated@@520)) $generated@@520) ($generated@@139 ($generated@@319 $generated@@143 $generated@@520) ($generated@@142 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@225 $generated@@520 ($generated@@142 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
 (not ($generated@@0 ($generated@@84 ($generated@@402 $generated@@522) $generated@@521))))
 :pattern ( (let (($generated@@522 (type $generated@@521)))
($generated@@84 ($generated@@402 $generated@@522) $generated@@521)))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@72)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@525 $generated@@526)) $generated@@62) (= ($generated@@523 ($generated@@142 $generated@@525 $generated@@526)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@143) (= ($generated@@506 ($generated@@269 $generated@@527)) ($generated@@507 $generated@@527)))
 :pattern ( ($generated@@506 ($generated@@269 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@152) ($generated@@225 $generated@@528 ($generated@@78 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@528)) $generated@@528) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@78 0)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@152) (= (type $generated@@530) $generated@@67)) ($generated@@225 $generated@@529 ($generated@@234 $generated@@530))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@529)) $generated@@529) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@529) ($generated@@234 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@529 ($generated@@234 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@225 $generated@@531 ($generated@@239 $generated@@532))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@239 $generated@@532))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@239 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@225 $generated@@533 ($generated@@157 $generated@@534))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@2) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@2) $generated@@533) ($generated@@157 $generated@@534))))
 :pattern ( ($generated@@225 $generated@@533 ($generated@@157 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@225 $generated@@535 ($generated@@468 $generated@@536))) (and (= ($generated@@269 ($generated@@319 ($generated@@263 $generated@@152) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@319 ($generated@@263 $generated@@152) $generated@@535) ($generated@@468 $generated@@536))))
 :pattern ( ($generated@@225 $generated@@535 ($generated@@468 $generated@@536)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@523 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@523 $generated@@221) $generated@@66))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@538) $generated@@67)) (= (type $generated@@539) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@537 ($generated@@157 $generated@@538) $generated@@539) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@537 $generated@@540)))) ($generated@@249 $generated@@540 $generated@@538 $generated@@539))
 :pattern ( ($generated@@84 $generated@@537 $generated@@540))
))))
 :pattern ( ($generated@@77 $generated@@537 ($generated@@157 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@143) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@543) (and ($generated@@141 $generated@@541) (exists (($generated@@544 T@U) ) (!  (and (= (type $generated@@544) $generated@@67) ($generated@@77 $generated@@541 ($generated@@142 $generated@@542 $generated@@544) $generated@@543))
 :pattern ( ($generated@@77 $generated@@541 ($generated@@142 $generated@@542 $generated@@544) $generated@@543))
))))) ($generated@@249 ($generated@@150 $generated@@541) $generated@@542 $generated@@543))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@541) $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@143) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@547) (and ($generated@@141 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@67) ($generated@@77 $generated@@545 ($generated@@142 $generated@@548 $generated@@546) $generated@@547))
 :pattern ( ($generated@@77 $generated@@545 ($generated@@142 $generated@@548 $generated@@546) $generated@@547))
))))) ($generated@@249 ($generated@@151 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@249 ($generated@@151 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@152) (= (type $generated@@550) $generated@@152)) (= ($generated@@224 ($generated@@244 $generated@@549) ($generated@@244 $generated@@550)) ($generated@@244 ($generated@@224 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@549) ($generated@@244 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= ($generated@@269 ($generated@@244 $generated@@551)) ($generated@@244 ($generated@@269 $generated@@551)))
 :pattern ( ($generated@@269 ($generated@@244 $generated@@551)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) $generated@@80)
 :pattern ( ($generated@@553 $generated@@555))
)))
(assert  (=> (<= 1 $generated@@552) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@80) (or ($generated@@554 $generated@@556) (and (not (= 1 $generated@@552)) ($generated@@139 $generated@@556 $generated@@221)))) ($generated@@139 ($generated@@553 $generated@@556) $generated@@221))
 :pattern ( ($generated@@553 $generated@@556))
))))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@264 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@263 $generated@@558)) (= ($generated@@262 $generated@@557) 0)) (= $generated@@557 ($generated@@261 $generated@@558))))
 :pattern ( ($generated@@262 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@79 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@274 ($generated@@85 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@274 $generated@@559) ($generated ($generated@@84 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@274 ($generated@@85 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@2)) ($generated@@77 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@3)) ($generated@@77 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@4)) ($generated@@77 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@426)) ($generated@@77 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@152)) ($generated@@77 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@263 $generated@@152)) (= (type $generated@@574) $generated@@67)) (= ($generated@@139 $generated@@573 ($generated@@468 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@262 $generated@@573))) ($generated@@225 ($generated@@469 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@469 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@139 $generated@@573 ($generated@@468 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@263 $generated@@152)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@262 $generated@@577))) (< ($generated@@507 ($generated@@319 $generated@@143 ($generated@@469 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@507 ($generated@@319 $generated@@143 ($generated@@469 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) $generated@@67)) ($generated@@139 $generated@@579 ($generated@@386 $generated@@580 $generated@@581))) (and (and ($generated@@139 ($generated@@280 $generated@@579) ($generated@@234 $generated@@580)) ($generated@@139 ($generated@@329 $generated@@579) ($generated@@234 $generated@@581))) ($generated@@139 ($generated@@360 $generated@@579) ($generated@@234 ($generated@@142 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@139 $generated@@579 ($generated@@386 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@67)) ($generated@@139 $generated@@582 ($generated@@394 $generated@@583 $generated@@584))) (and (and ($generated@@139 ($generated@@298 $generated@@582) ($generated@@239 $generated@@583)) ($generated@@139 ($generated@@340 $generated@@582) ($generated@@239 $generated@@584))) ($generated@@139 ($generated@@368 $generated@@582) ($generated@@239 ($generated@@142 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@139 $generated@@582 ($generated@@394 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@139 $generated@@585 $generated@@46))
 :pattern ( ($generated@@139 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@139 $generated@@586 $generated@@47))
 :pattern ( ($generated@@139 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@139 $generated@@587 $generated@@44))
 :pattern ( ($generated@@139 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@426) ($generated@@139 $generated@@588 $generated@@45))
 :pattern ( ($generated@@139 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@152) ($generated@@139 $generated@@589 $generated@@48))
 :pattern ( ($generated@@139 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@590) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@591) $generated@@80)) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@593) $generated@@80)) (= (type $generated@@594) ($generated@@167 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@596  (=> (and (forall (($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@80) ($generated@@139 $generated@@597 $generated@@221)) ($generated@@0 ($generated@@84 $generated@@590 ($generated@@269 $generated@@597)))) (not ($generated@@0 ($generated@@244 ($generated@@11 true))))) (and ($generated@@554 $generated@@597) (and ($generated@@554 $generated@@597) ($generated@@554 ($generated@@553 $generated@@597)))))
 :pattern ( ($generated@@553 ($generated@@553 $generated@@597)))
 :pattern ( ($generated@@553 $generated@@597))
 :pattern ( ($generated@@84 $generated@@590 ($generated@@269 $generated@@597)))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@80) (=> (and ($generated@@139 $generated@@598 $generated@@221) ($generated@@0 ($generated@@84 $generated@@590 ($generated@@269 $generated@@598)))) (or true (= ($generated@@553 $generated@@598) ($generated@@553 ($generated@@553 $generated@@598))))))
 :pattern ( ($generated@@553 ($generated@@553 $generated@@598)))
 :pattern ( ($generated@@553 $generated@@598))
 :pattern ( ($generated@@84 $generated@@590 ($generated@@269 $generated@@598)))
)))))
(let (($generated@@599  (=> (and ($generated@@0 ($generated@@244 ($generated@@11 true))) (= (ControlFlow 0 8) 2)) $generated@@596)))
(let (($generated@@600  (=> (not ($generated@@0 ($generated@@244 ($generated@@11 true)))) (=> (and ($generated@@77 $generated@@591 $generated@@221 $generated@@592) ($generated@@554 $generated@@591)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@77 $generated@@591 $generated@@221 $generated@@592)) (=> ($generated@@77 $generated@@591 $generated@@221 $generated@@592) (=> (and ($generated@@554 $generated@@591) (= $generated@@593 ($generated@@553 $generated@@591))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@77 ($generated@@553 $generated@@591) $generated@@221 $generated@@592)) (=> ($generated@@77 ($generated@@553 $generated@@591) $generated@@221 $generated@@592) (=> (and ($generated@@554 ($generated@@553 $generated@@591)) (= (ControlFlow 0 5) 2)) $generated@@596))))))))))
(let (($generated@@601  (=> ($generated@@0 ($generated@@84 $generated@@590 ($generated@@269 $generated@@591))) (and (=> (= (ControlFlow 0 9) 5) $generated@@600) (=> (= (ControlFlow 0 9) 8) $generated@@599)))))
(let (($generated@@602  (=> (and (not ($generated@@0 ($generated@@84 $generated@@590 ($generated@@269 $generated@@591)))) (= (ControlFlow 0 4) 2)) $generated@@596)))
(let (($generated@@603  (=> (and ($generated@@139 $generated@@591 $generated@@221) ($generated@@77 $generated@@591 $generated@@221 $generated@@592)) (and (=> (= (ControlFlow 0 10) 9) $generated@@601) (=> (= (ControlFlow 0 10) 4) $generated@@602)))))
(let (($generated@@604  (=> (and (not (and ($generated@@139 $generated@@591 $generated@@221) ($generated@@77 $generated@@591 $generated@@221 $generated@@592))) (= (ControlFlow 0 3) 2)) $generated@@596)))
(let (($generated@@605  (=> (= $generated@@594 ($generated@@166 $generated@@136 $generated@@592 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 10) $generated@@603) (=> (= (ControlFlow 0 11) 3) $generated@@604)))))
(let (($generated@@606  (=> (and ($generated@@248 $generated@@592) ($generated@@595 $generated@@592)) (=> (and (and ($generated@@139 $generated@@590 ($generated@@234 $generated@@221)) ($generated@@77 $generated@@590 ($generated@@234 $generated@@221) $generated@@592)) (and (= 2 $generated@@552) (= (ControlFlow 0 12) 11))) $generated@@605))))
$generated@@606))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
