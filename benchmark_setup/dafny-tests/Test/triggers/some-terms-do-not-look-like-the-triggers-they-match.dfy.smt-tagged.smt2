(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (Int) Int)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) Bool)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@T T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@471 (T@T) T@U)
(declare-fun $generated@@495 () T@T)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@538 (T@U Int) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@590 (T@U T@U) T@U)
(declare-fun $generated@@605 (T@T) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@668 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@133 $generated@@137 $generated@@138)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@137 $generated@@138))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@134)) (or ($generated@@135 $generated@@139 $generated@@140) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@140 $generated@@139)))) (= ($generated@@133 $generated@@139 $generated@@140) $generated@@140))
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@75 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@134)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@134)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@141 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@141 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@79 (type $generated@@220))))
(= (type ($generated@@219 $generated@@220 $generated@@221)) ($generated@@76 $generated@@222 $generated@@4)))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@79 (type $generated@@223))))
 (=> (and (= (type $generated@@223) ($generated@@76 $generated@@225 $generated@@4)) (= (type $generated@@224) ($generated@@76 $generated@@225 $generated@@4))) (= ($generated@@219 ($generated@@219 $generated@@223 $generated@@224) $generated@@224) ($generated@@219 $generated@@223 $generated@@224))))
 :pattern ( ($generated@@219 ($generated@@219 $generated@@223 $generated@@224) $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@79 (type $generated@@227))))
(= (type ($generated@@226 $generated@@227 $generated@@228)) ($generated@@76 $generated@@229 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@79 (type $generated@@230))))
 (=> (and (= (type $generated@@230) ($generated@@76 $generated@@232 $generated@@4)) (= (type $generated@@231) ($generated@@76 $generated@@232 $generated@@4))) (= ($generated@@226 ($generated@@226 $generated@@230 $generated@@231) $generated@@231) ($generated@@226 $generated@@230 $generated@@231))))
 :pattern ( ($generated@@226 ($generated@@226 $generated@@230 $generated@@231) $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235)) $generated@@145)
 :pattern ( ($generated@@233 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@64) (= (type $generated@@237) $generated@@64)) (= (type $generated@@238) $generated@@134)) (= (type $generated@@239) $generated@@134)) (= ($generated@@141 ($generated@@233 $generated@@238 $generated@@239) ($generated@@144 $generated@@236 $generated@@237))  (and ($generated@@136 $generated@@238 $generated@@236) ($generated@@136 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@141 ($generated@@233 $generated@@238 $generated@@239) ($generated@@144 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@245) $generated@@64) (= (type $generated@@246) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@247) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@248) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@249) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@240 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249))  (and ($generated@@136 $generated@@249 $generated@@245) (and ($generated@@0 ($generated@@81 $generated@@246 $generated@@249)) (or ($generated@@0 ($generated@@81 $generated@@247 $generated@@249)) ($generated@@0 ($generated@@81 $generated@@248 $generated@@249)))))))
 :pattern ( ($generated@@81 ($generated@@240 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@145) (= (type $generated@@251) $generated@@145)) (= ($generated@@151 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@151 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@141 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@134) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@136 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@141 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@260) $generated@@64)) (= ($generated@@141 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@134) ($generated@@0 ($generated@@81 $generated@@259 $generated@@261))) ($generated@@136 $generated@@261 $generated@@260))
 :pattern ( ($generated@@81 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@141 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@262 $generated@@263) $generated@@263)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(= (type ($generated@@264 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@264 $generated@@267) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@64) (= (type $generated@@271) $generated@@64)) (= (type $generated@@272) $generated@@134)) (= (type $generated@@273) $generated@@134)) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@268 $generated@@274)) (= ($generated@@74 ($generated@@233 $generated@@272 $generated@@273) ($generated@@144 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@74 ($generated@@233 $generated@@272 $generated@@273) ($generated@@144 $generated@@270 $generated@@271) $generated@@274))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@134)) (or ($generated@@135 $generated@@275 ($generated@@264 $generated@@276)) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@276 $generated@@275)))) (= ($generated@@133 $generated@@275 ($generated@@264 $generated@@276)) ($generated@@264 $generated@@276)))
 :weight 3
 :pattern ( ($generated@@133 $generated@@275 ($generated@@264 $generated@@276)))
))))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@68)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@145) (= ($generated@@143 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@145) ($generated@@143 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@134) (= (type $generated@@282) $generated@@134)) (= $generated@@280 ($generated@@233 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@134)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@64) (= (type $generated@@295) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@269 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@74 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@269 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@76 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@79 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@76 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@81 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@339))))
 (=> (and (= (type $generated@@339) ($generated@@76 $generated@@341 $generated@@4)) (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@4))) (= ($generated@@338 $generated@@339 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (= ($generated@@0 ($generated@@81 $generated@@339 $generated@@342)) ($generated@@0 ($generated@@81 $generated@@340 $generated@@342))))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@79 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@76 $generated@@344 $generated@@2)) (= ($generated@@159 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@81 $generated@@343 $generated@@345))) (<= ($generated ($generated@@81 $generated@@343 $generated@@345)) ($generated@@296 $generated@@343))))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@159 $generated@@343))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@64) (= (type $generated@@347) $generated@@134)) (or ($generated@@135 $generated@@346 $generated@@347) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@347 $generated@@346)))) ($generated@@136 ($generated@@133 $generated@@346 $generated@@347) $generated@@346))
 :pattern ( ($generated@@133 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@306 (type $generated@@348))))
(let (($generated@@350 ($generated@@305 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@304 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@303 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@302 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@306 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@76 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@306 (type $generated@@355))))
(let (($generated@@357 ($generated@@305 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@304 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@303 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@324 (type $generated@@359))))
(let (($generated@@361 ($generated@@323 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@322 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@321 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@320 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@324 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@324 (type $generated@@366))))
(let (($generated@@368 ($generated@@323 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@322 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@321 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@371) $generated@@64)) (= ($generated@@141 $generated@@370 ($generated@@158 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@370 $generated@@372)))) ($generated@@136 $generated@@372 $generated@@371))
 :pattern ( ($generated@@81 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@141 $generated@@370 ($generated@@158 $generated@@371)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@79 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375 $generated@@376)) ($generated@@76 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@79 (type $generated@@378))))
 (=> (and (and (= (type $generated@@378) ($generated@@76 $generated@@380 $generated@@4)) (= (type $generated@@379) ($generated@@76 $generated@@380 $generated@@4))) ($generated@@373 $generated@@378 $generated@@379)) (and (= ($generated@@374 ($generated@@219 $generated@@378 $generated@@379) $generated@@378) $generated@@379) (= ($generated@@374 ($generated@@219 $generated@@378 $generated@@379) $generated@@379) $generated@@378))))
 :pattern ( ($generated@@219 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
 (=> (and (= (type $generated@@381) ($generated@@76 $generated@@384 $generated@@4)) (= (type $generated@@382) ($generated@@76 $generated@@384 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@226 $generated@@381 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 $generated@@381 $generated@@383)) ($generated@@0 ($generated@@81 $generated@@382 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
 (=> (and (= (type $generated@@385) ($generated@@76 $generated@@388 $generated@@4)) (= (type $generated@@386) ($generated@@76 $generated@@388 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@385 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 $generated@@385 $generated@@387)) (not ($generated@@0 ($generated@@81 $generated@@386 $generated@@387)))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@389 ($generated@@252 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@134) ($generated@@0 ($generated@@81 $generated@@389 $generated@@392))) ($generated@@269 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@81 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@389 ($generated@@252 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@257 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@134) ($generated@@0 ($generated@@81 $generated@@393 $generated@@396))) ($generated@@269 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@81 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@257 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@81 ($generated@@297 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@81 ($generated@@297 $generated@@398) $generated@@397)))
)))
(assert  (and (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@399 $generated@@402)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@399 $generated@@402))
)) (forall (($generated@@403 T@T) ($generated@@404 T@U) ) (! (= (type ($generated@@400 $generated@@403 $generated@@404)) $generated@@403)
 :pattern ( ($generated@@400 $generated@@403 $generated@@404))
))) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@306 (type $generated@@405))))
(let (($generated@@407 ($generated@@305 (type $generated@@405))))
(= (type ($generated@@401 $generated@@405)) ($generated@@76 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@401 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@409) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@399 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@408) ($generated@@152 ($generated@@400 $generated@@145 $generated@@409)))) (= ($generated@@81 ($generated@@401 $generated@@408) ($generated@@152 ($generated@@400 $generated@@145 $generated@@409))) ($generated@@153 ($generated@@400 $generated@@145 $generated@@409))))))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@324 (type $generated@@413))))
(let (($generated@@415 ($generated@@323 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@76 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@322 $generated@@134 $generated@@134)) (= (type $generated@@417) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@416) ($generated@@152 ($generated@@400 $generated@@145 $generated@@417)))) (= ($generated@@81 ($generated@@411 $generated@@416) ($generated@@152 ($generated@@400 $generated@@145 $generated@@417))) ($generated@@153 ($generated@@400 $generated@@145 $generated@@417))))))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@305 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@304 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@81 ($generated@@401 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@323 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@322 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@81 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@423) $generated@@427))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@432) $generated@@64)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@431) $generated@@435))) (and ($generated@@269 ($generated@@81 ($generated@@401 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@269 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@431) $generated@@435))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@322 $generated@@134 $generated@@134)) (= (type $generated@@440) $generated@@64)) (= (type $generated@@441) $generated@@64)) (= (type $generated@@442) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@439) $generated@@443))) (and ($generated@@269 ($generated@@81 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@269 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@74 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@79 (type $generated@@444))))
 (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@446 $generated@@4)) (= (type $generated@@445) ($generated@@76 $generated@@446 $generated@@4))) ($generated@@338 $generated@@444 $generated@@445)) (= $generated@@444 $generated@@445)))
 :pattern ( ($generated@@338 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(= (type ($generated@@447 $generated@@448 $generated@@449)) ($generated@@76 $generated@@450 $generated@@4)))
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@452)))
 (=> (and (and (= (type $generated@@451) ($generated@@76 $generated@@454 $generated@@4)) (= (type $generated@@453) $generated@@454)) ($generated@@0 ($generated@@81 $generated@@451 $generated@@453))) ($generated@@0 ($generated@@81 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))))
 :pattern ( ($generated@@447 $generated@@451 $generated@@452) ($generated@@81 $generated@@451 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
 (=> (and (and (= (type $generated@@455) ($generated@@76 $generated@@458 $generated@@4)) (= (type $generated@@456) ($generated@@76 $generated@@458 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@455 $generated@@457))) ($generated@@0 ($generated@@81 ($generated@@219 $generated@@455 $generated@@456) $generated@@457))))
 :pattern ( ($generated@@219 $generated@@455 $generated@@456) ($generated@@81 $generated@@455 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
 (=> (and (and (= (type $generated@@459) ($generated@@76 $generated@@462 $generated@@4)) (= (type $generated@@460) ($generated@@76 $generated@@462 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@460 $generated@@461))) ($generated@@0 ($generated@@81 ($generated@@219 $generated@@459 $generated@@460) $generated@@461))))
 :pattern ( ($generated@@219 $generated@@459 $generated@@460) ($generated@@81 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@464)))
 (=> (and (= (type $generated@@463) ($generated@@76 $generated@@466 $generated@@4)) (= (type $generated@@465) $generated@@466)) (= ($generated@@0 ($generated@@81 ($generated@@447 $generated@@463 $generated@@464) $generated@@465))  (or (= $generated@@465 $generated@@464) ($generated@@0 ($generated@@81 $generated@@463 $generated@@465))))))
 :pattern ( ($generated@@81 ($generated@@447 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
 (=> (and (and (= (type $generated@@467) ($generated@@76 $generated@@470 $generated@@4)) (= (type $generated@@468) ($generated@@76 $generated@@470 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@468 $generated@@469))) (not ($generated@@0 ($generated@@81 ($generated@@374 $generated@@467 $generated@@468) $generated@@469)))))
 :pattern ( ($generated@@374 $generated@@467 $generated@@468) ($generated@@81 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@472 T@T) ) (! (= (type ($generated@@471 $generated@@472)) ($generated@@76 $generated@@472 $generated@@4))
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@324 (type $generated@@473))))
(let (($generated@@475 ($generated@@323 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@322 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@321 $generated@@475 $generated@@474)) (= ($generated@@320 $generated@@473) ($generated@@471 $generated@@475))))))
 :pattern ( ($generated@@320 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@324 (type $generated@@476))))
(let (($generated@@478 ($generated@@323 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@322 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@321 $generated@@478 $generated@@477)) (= ($generated@@363 $generated@@476) ($generated@@471 $generated@@477))))))
 :pattern ( ($generated@@363 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@324 (type $generated@@479))))
(let (($generated@@481 ($generated@@323 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@322 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@321 $generated@@481 $generated@@480)) (= ($generated@@410 $generated@@479) ($generated@@471 $generated@@134))))))
 :pattern ( ($generated@@410 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@306 (type $generated@@482))))
(let (($generated@@484 ($generated@@305 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@304 $generated@@484 $generated@@483)) (or (= $generated@@482 ($generated@@303 $generated@@484 $generated@@483)) (exists (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (and (and (= (type $generated@@485) $generated@@134) (= (type $generated@@486) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@399 $generated@@482) ($generated@@291 ($generated@@233 $generated@@485 $generated@@486)))))
 :no-pattern (type $generated@@485)
 :no-pattern (type $generated@@486)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
))))))
 :pattern ( ($generated@@399 $generated@@482))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@324 (type $generated@@487))))
(let (($generated@@489 ($generated@@323 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@322 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@321 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@134) (= (type $generated@@491) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@410 $generated@@487) ($generated@@291 ($generated@@233 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@410 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@134) ($generated@@136 $generated@@492 $generated@@46)) (and (= ($generated@@291 ($generated@@400 $generated@@2 $generated@@492)) $generated@@492) ($generated@@141 ($generated@@400 $generated@@2 $generated@@492) $generated@@46)))
 :pattern ( ($generated@@136 $generated@@492 $generated@@46))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@134) ($generated@@136 $generated@@493 $generated@@47)) (and (= ($generated@@291 ($generated@@400 $generated@@3 $generated@@493)) $generated@@493) ($generated@@141 ($generated@@400 $generated@@3 $generated@@493) $generated@@47)))
 :pattern ( ($generated@@136 $generated@@493 $generated@@47))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@134) ($generated@@136 $generated@@494 $generated@@44)) (and (= ($generated@@291 ($generated@@400 $generated@@4 $generated@@494)) $generated@@494) ($generated@@141 ($generated@@400 $generated@@4 $generated@@494) $generated@@44)))
 :pattern ( ($generated@@136 $generated@@494 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@495) 20))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@134) ($generated@@136 $generated@@496 $generated@@45)) (and (= ($generated@@291 ($generated@@400 $generated@@495 $generated@@496)) $generated@@496) ($generated@@141 ($generated@@400 $generated@@495 $generated@@496) $generated@@45)))
 :pattern ( ($generated@@136 $generated@@496 $generated@@45))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@136 ($generated@@291 $generated@@497) $generated@@498) ($generated@@141 $generated@@497 $generated@@498)))
 :pattern ( ($generated@@136 ($generated@@291 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@79 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@76 $generated@@500 $generated@@2)) (<= 0 ($generated@@296 $generated@@499))))
 :pattern ( ($generated@@296 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@286 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@285 $generated@@502)) (<= 0 ($generated@@284 $generated@@501))))
 :pattern ( ($generated@@284 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@503 ($generated@@428 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@428 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= ($generated@@507 ($generated@@428 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@428 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= ($generated@@72 ($generated@@428 $generated@@511 $generated@@512)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@436 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@436 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= ($generated@@517 ($generated@@436 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@436 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) $generated@@64)) (= ($generated@@72 ($generated@@436 $generated@@521 $generated@@522)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@134) (= (type $generated@@524) $generated@@134)) (= ($generated@@277 ($generated@@233 $generated@@523 $generated@@524)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= ($generated@@525 ($generated@@144 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@144 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@64)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= ($generated@@529 ($generated@@144 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@144 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@134) (= (type $generated@@534) $generated@@134)) (= ($generated@@152 ($generated@@233 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@233 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@134) (= (type $generated@@536) $generated@@134)) (= ($generated@@153 ($generated@@233 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@233 $generated@@535 $generated@@536))
)))
(assert  (and (forall (($generated@@539 T@U) ) (! (= (type ($generated@@537 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@537 $generated@@539))
)) (forall (($generated@@540 T@U) ($generated@@541 Int) ) (! (let (($generated@@542 ($generated@@286 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540 $generated@@541)) $generated@@542))
 :pattern ( ($generated@@538 $generated@@540 $generated@@541))
))))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@285 $generated@@134)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@537 $generated@@544) $generated@@545) (forall (($generated@@546 Int) ) (!  (=> (and (<= 0 $generated@@546) (< $generated@@546 ($generated@@284 $generated@@543))) ($generated@@269 ($generated@@538 $generated@@543 $generated@@546) $generated@@544 $generated@@545))
 :pattern ( ($generated@@538 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@537 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (=> (= (type $generated@@547) ($generated@@76 $generated@@549 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@447 $generated@@547 $generated@@548) $generated@@548))))
 :pattern ( ($generated@@447 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@551 Int) ) (! (= ($generated@@550 ($generated@@75 $generated@@551)) $generated@@551)
 :pattern ( ($generated@@75 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@252 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@252 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@72 ($generated@@252 $generated@@555)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@257 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@257 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@559)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@64) (= ($generated@@560 ($generated@@158 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@158 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@563)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@64)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@64) (= ($generated@@564 ($generated@@537 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@537 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@64) (= ($generated@@72 ($generated@@537 $generated@@567)) $generated@@57))
 :pattern ( ($generated@@537 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
(= ($generated@@400 $generated@@569 ($generated@@291 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@291 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) $generated@@64)) (= ($generated@@141 $generated@@570 ($generated@@428 $generated@@571 $generated@@572)) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@570) $generated@@573))) (and ($generated@@136 ($generated@@81 ($generated@@401 $generated@@570) $generated@@573) $generated@@572) ($generated@@136 $generated@@573 $generated@@571)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@570) $generated@@573))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@570) $generated@@573))
))))
 :pattern ( ($generated@@141 $generated@@570 ($generated@@428 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@322 $generated@@134 $generated@@134)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) $generated@@64)) (= ($generated@@141 $generated@@574 ($generated@@436 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@574) $generated@@577))) (and ($generated@@136 ($generated@@81 ($generated@@411 $generated@@574) $generated@@577) $generated@@576) ($generated@@136 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@574) $generated@@577))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@141 $generated@@574 ($generated@@436 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@134) (= (type $generated@@581) $generated@@134)) (< ($generated@@578 $generated@@580) ($generated@@579 ($generated@@233 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@233 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@134) (= (type $generated@@583) $generated@@134)) (< ($generated@@578 $generated@@583) ($generated@@579 ($generated@@233 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@233 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@79 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@76 $generated@@586 $generated@@4)) (= (type $generated@@585) ($generated@@76 $generated@@586 $generated@@4))) (= ($generated@@219 $generated@@584 ($generated@@219 $generated@@584 $generated@@585)) ($generated@@219 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@219 $generated@@584 ($generated@@219 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@79 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@76 $generated@@589 $generated@@4)) (= (type $generated@@588) ($generated@@76 $generated@@589 $generated@@4))) (= ($generated@@226 $generated@@587 ($generated@@226 $generated@@587 $generated@@588)) ($generated@@226 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@226 $generated@@587 ($generated@@226 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (! (= (type ($generated@@590 $generated@@591 $generated@@592)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@590 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@64) (= (type $generated@@594) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@595) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@590 $generated@@593 $generated@@594) $generated@@595))  (and ($generated@@136 $generated@@595 $generated@@593) ($generated@@0 ($generated@@81 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@81 ($generated@@590 $generated@@593 $generated@@594) $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@134) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) ($generated@@136 $generated@@596 ($generated@@428 $generated@@597 $generated@@598))) (and (= ($generated@@291 ($generated@@400 ($generated@@304 $generated@@134 $generated@@134) $generated@@596)) $generated@@596) ($generated@@141 ($generated@@400 ($generated@@304 $generated@@134 $generated@@134) $generated@@596) ($generated@@428 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@136 $generated@@596 ($generated@@428 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@134) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) $generated@@64)) ($generated@@136 $generated@@599 ($generated@@436 $generated@@600 $generated@@601))) (and (= ($generated@@291 ($generated@@400 ($generated@@322 $generated@@134 $generated@@134) $generated@@599)) $generated@@599) ($generated@@141 ($generated@@400 ($generated@@322 $generated@@134 $generated@@134) $generated@@599) ($generated@@436 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@136 $generated@@599 ($generated@@436 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@64) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@134)) ($generated@@136 $generated@@604 ($generated@@144 $generated@@602 $generated@@603))) (and (= ($generated@@291 ($generated@@400 $generated@@145 $generated@@604)) $generated@@604) ($generated@@141 ($generated@@400 $generated@@145 $generated@@604) ($generated@@144 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@136 $generated@@604 ($generated@@144 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@606 T@T) ) (! (= (type ($generated@@605 $generated@@606)) ($generated@@76 $generated@@606 $generated@@4))
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@81 ($generated@@605 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@81 ($generated@@605 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@471 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@471 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@69)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@64) (= (type $generated@@614) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@613 $generated@@614)) $generated@@62) (= ($generated@@611 ($generated@@144 $generated@@613 $generated@@614)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@145) (= ($generated@@578 ($generated@@291 $generated@@615)) ($generated@@579 $generated@@615)))
 :pattern ( ($generated@@578 ($generated@@291 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@134) ($generated@@136 $generated@@616 ($generated@@75 0))) (and (= ($generated@@291 ($generated@@400 $generated@@2 $generated@@616)) $generated@@616) ($generated@@141 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) $generated@@616) ($generated@@75 0))))
 :pattern ( ($generated@@136 $generated@@616 ($generated@@75 0)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@134) (= (type $generated@@618) $generated@@64)) ($generated@@136 $generated@@617 ($generated@@252 $generated@@618))) (and (= ($generated@@291 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) $generated@@617)) $generated@@617) ($generated@@141 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) $generated@@617) ($generated@@252 $generated@@618))))
 :pattern ( ($generated@@136 $generated@@617 ($generated@@252 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@134) (= (type $generated@@620) $generated@@64)) ($generated@@136 $generated@@619 ($generated@@257 $generated@@620))) (and (= ($generated@@291 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) $generated@@619)) $generated@@619) ($generated@@141 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) $generated@@619) ($generated@@257 $generated@@620))))
 :pattern ( ($generated@@136 $generated@@619 ($generated@@257 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@134) (= (type $generated@@622) $generated@@64)) ($generated@@136 $generated@@621 ($generated@@158 $generated@@622))) (and (= ($generated@@291 ($generated@@400 ($generated@@76 $generated@@134 $generated@@2) $generated@@621)) $generated@@621) ($generated@@141 ($generated@@400 ($generated@@76 $generated@@134 $generated@@2) $generated@@621) ($generated@@158 $generated@@622))))
 :pattern ( ($generated@@136 $generated@@621 ($generated@@158 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@134) (= (type $generated@@624) $generated@@64)) ($generated@@136 $generated@@623 ($generated@@537 $generated@@624))) (and (= ($generated@@291 ($generated@@400 ($generated@@285 $generated@@134) $generated@@623)) $generated@@623) ($generated@@141 ($generated@@400 ($generated@@285 $generated@@134) $generated@@623) ($generated@@537 $generated@@624))))
 :pattern ( ($generated@@136 $generated@@623 ($generated@@537 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@626) $generated@@64)) (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@625 ($generated@@158 $generated@@626) $generated@@627) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@625 $generated@@628)))) ($generated@@269 $generated@@628 $generated@@626 $generated@@627))
 :pattern ( ($generated@@81 $generated@@625 $generated@@628))
))))
 :pattern ( ($generated@@74 $generated@@625 ($generated@@158 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@79 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@76 $generated@@631 $generated@@4)) (= (type $generated@@630) ($generated@@76 $generated@@631 $generated@@4))) (= ($generated@@373 $generated@@629 $generated@@630) (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@631) (or (not ($generated@@0 ($generated@@81 $generated@@629 $generated@@632))) (not ($generated@@0 ($generated@@81 $generated@@630 $generated@@632)))))
 :pattern ( ($generated@@81 $generated@@629 $generated@@632))
 :pattern ( ($generated@@81 $generated@@630 $generated@@632))
)))))
 :pattern ( ($generated@@373 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@145) (= (type $generated@@634) $generated@@64)) (= (type $generated@@635) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@268 $generated@@635) (and ($generated@@143 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@64) ($generated@@74 $generated@@633 ($generated@@144 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@74 $generated@@633 ($generated@@144 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@269 ($generated@@152 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@269 ($generated@@152 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@145) (= (type $generated@@638) $generated@@64)) (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@268 $generated@@639) (and ($generated@@143 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@64) ($generated@@74 $generated@@637 ($generated@@144 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@74 $generated@@637 ($generated@@144 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@269 ($generated@@153 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@269 ($generated@@153 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@134) (= (type $generated@@642) $generated@@134)) (= ($generated@@233 ($generated@@264 $generated@@641) ($generated@@264 $generated@@642)) ($generated@@264 ($generated@@233 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@233 ($generated@@264 $generated@@641) ($generated@@264 $generated@@642)))
)))
(assert (forall (($generated@@643 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@262 $generated@@643))) ($generated@@264 ($generated@@291 ($generated@@8 $generated@@643))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@262 $generated@@643))))
)))
(assert (forall (($generated@@644 T@U) ) (! (= ($generated@@291 ($generated@@264 $generated@@644)) ($generated@@264 ($generated@@291 $generated@@644)))
 :pattern ( ($generated@@291 ($generated@@264 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 ($generated@@286 (type $generated@@645))))
 (=> (and (= (type $generated@@645) ($generated@@285 $generated@@646)) (= ($generated@@284 $generated@@645) 0)) (= $generated@@645 ($generated@@283 $generated@@646))))
 :pattern ( ($generated@@284 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 (type $generated@@648)))
 (=> (and (and (= (type $generated@@647) ($generated@@76 $generated@@650 $generated@@2)) (= (type $generated@@649) $generated@@2)) (<= 0 ($generated $generated@@649))) (= ($generated@@296 ($generated@@82 $generated@@647 $generated@@648 $generated@@649)) (+ (- ($generated@@296 $generated@@647) ($generated ($generated@@81 $generated@@647 $generated@@648))) ($generated $generated@@649)))))
 :pattern ( ($generated@@296 ($generated@@82 $generated@@647 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@653)))
 (=> (and (= (type $generated@@651) ($generated@@76 $generated@@654 $generated@@4)) (= (type $generated@@652) ($generated@@76 $generated@@654 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@219 $generated@@651 $generated@@652) $generated@@653))  (or ($generated@@0 ($generated@@81 $generated@@651 $generated@@653)) ($generated@@0 ($generated@@81 $generated@@652 $generated@@653))))))
 :pattern ( ($generated@@81 ($generated@@219 $generated@@651 $generated@@652) $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@656) $generated@@2)) ($generated@@74 $generated@@656 $generated@@46 $generated@@655))
 :pattern ( ($generated@@74 $generated@@656 $generated@@46 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@658) $generated@@3)) ($generated@@74 $generated@@658 $generated@@47 $generated@@657))
 :pattern ( ($generated@@74 $generated@@658 $generated@@47 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@660) $generated@@4)) ($generated@@74 $generated@@660 $generated@@44 $generated@@659))
 :pattern ( ($generated@@74 $generated@@660 $generated@@44 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@495)) ($generated@@74 $generated@@662 $generated@@45 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@45 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@134)) ($generated@@74 $generated@@664 $generated@@48 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@48 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@285 $generated@@134)) (= (type $generated@@666) $generated@@64)) (= ($generated@@141 $generated@@665 ($generated@@537 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@284 $generated@@665))) ($generated@@136 ($generated@@538 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@538 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@141 $generated@@665 ($generated@@537 $generated@@666)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 Int) ) (!  (=> (= (type $generated@@669) ($generated@@285 $generated@@134)) (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@284 $generated@@669))) (< ($generated@@579 ($generated@@400 $generated@@145 ($generated@@538 $generated@@669 $generated@@670))) ($generated@@668 $generated@@669))))
 :pattern ( ($generated@@579 ($generated@@400 $generated@@145 ($generated@@538 $generated@@669 $generated@@670))))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@672) $generated@@64)) (= (type $generated@@673) $generated@@64)) ($generated@@141 $generated@@671 ($generated@@428 $generated@@672 $generated@@673))) (and (and ($generated@@141 ($generated@@302 $generated@@671) ($generated@@252 $generated@@672)) ($generated@@141 ($generated@@352 $generated@@671) ($generated@@252 $generated@@673))) ($generated@@141 ($generated@@399 $generated@@671) ($generated@@252 ($generated@@144 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@141 $generated@@671 ($generated@@428 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@322 $generated@@134 $generated@@134)) (= (type $generated@@675) $generated@@64)) (= (type $generated@@676) $generated@@64)) ($generated@@141 $generated@@674 ($generated@@436 $generated@@675 $generated@@676))) (and (and ($generated@@141 ($generated@@320 $generated@@674) ($generated@@257 $generated@@675)) ($generated@@141 ($generated@@363 $generated@@674) ($generated@@257 $generated@@676))) ($generated@@141 ($generated@@410 $generated@@674) ($generated@@257 ($generated@@144 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@141 $generated@@674 ($generated@@436 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@2) ($generated@@141 $generated@@677 $generated@@46))
 :pattern ( ($generated@@141 $generated@@677 $generated@@46))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@3) ($generated@@141 $generated@@678 $generated@@47))
 :pattern ( ($generated@@141 $generated@@678 $generated@@47))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@4) ($generated@@141 $generated@@679 $generated@@44))
 :pattern ( ($generated@@141 $generated@@679 $generated@@44))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@495) ($generated@@141 $generated@@680 $generated@@45))
 :pattern ( ($generated@@141 $generated@@680 $generated@@45))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@134) ($generated@@141 $generated@@681 $generated@@48))
 :pattern ( ($generated@@141 $generated@@681 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Bool)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Bool)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Bool)
(declare-fun $generated@@694 () Bool)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Bool)
(declare-fun $generated@@702 () Bool)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () Bool)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () Bool)
(declare-fun $generated@@708 () Int)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () Bool)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () Bool)
(declare-fun $generated@@713 () Int)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () Bool)
(declare-fun $generated@@716 () Bool)
(declare-fun $generated@@717 () Int)
(declare-fun $generated@@718 () Int)
(declare-fun $generated@@719 () Bool)
(declare-fun $generated@@720 () Bool)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () Int)
(declare-fun $generated@@724 () Int)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () Int)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 (T@U) Bool)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@682) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@684) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@688) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@690) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@691) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@695) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@697) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@706) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@711) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@721) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@722) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@727) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@728) $generated@@77)) (= (type $generated@@730) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@731) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@732) ($generated@@76 $generated@@134 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 128) (let (($generated@@733 true))
(let (($generated@@734 true))
(let (($generated@@735 true))
(let (($generated@@736  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) ($generated@@133 ($generated@@252 $generated@@46) ($generated@@291 $generated@@682))) ($generated@@291 ($generated@@8 $generated@@683))))) (= (ControlFlow 0 21) 19)) $generated@@735)))
(let (($generated@@737  (=> (and ($generated@@0 ($generated@@81 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) ($generated@@133 ($generated@@252 $generated@@46) ($generated@@291 $generated@@682))) ($generated@@291 ($generated@@8 $generated@@683)))) (= (ControlFlow 0 20) 19)) $generated@@735)))
(let (($generated@@738  (=> (and ($generated@@74 $generated@@682 ($generated@@252 $generated@@46) $generated@@684) ($generated@@135 ($generated@@252 $generated@@46) ($generated@@291 $generated@@682))) (and (=> (= (ControlFlow 0 22) 20) $generated@@737) (=> (= (ControlFlow 0 22) 21) $generated@@736)))))
(let (($generated@@739 true))
(let (($generated@@740  (=> (= $generated@@685 (forall (($generated@@741 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@741)))) (< $generated@@741 200)))
 :pattern ( ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@741))))
))) (and (=> (= (ControlFlow 0 23) 22) $generated@@738) (=> (= (ControlFlow 0 23) 18) $generated@@739)))))
(let (($generated@@742  (=> (and (not ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@686))))) (= (ControlFlow 0 25) 23)) $generated@@740)))
(let (($generated@@743  (=> (and ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@686)))) (= (ControlFlow 0 24) 23)) $generated@@740)))
(let (($generated@@744  (and (=> (= (ControlFlow 0 26) 24) $generated@@743) (=> (= (ControlFlow 0 26) 25) $generated@@742))))
(let (($generated@@745 true))
(let (($generated@@746  (=> (and ($generated@@135 ($generated@@252 $generated@@46) ($generated@@291 ($generated@@590 $generated@@46 $generated@@682))) (= $generated@@687 (forall (($generated@@747 Int) )  (=> true (let (($generated@@748 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) ($generated@@133 ($generated@@252 $generated@@46) ($generated@@291 ($generated@@590 $generated@@46 $generated@@682))))))
 (=> ($generated@@0 ($generated@@81 $generated@@748 ($generated@@291 ($generated@@8 $generated@@747)))) (< $generated@@747 200))))))) (and (=> (= (ControlFlow 0 27) 26) $generated@@744) (=> (= (ControlFlow 0 27) 17) $generated@@745)))))
(let (($generated@@749  (=> (and (not ($generated@@0 ($generated@@81 $generated@@688 ($generated@@291 ($generated@@8 $generated@@689))))) (= (ControlFlow 0 29) 27)) $generated@@746)))
(let (($generated@@750  (=> (and ($generated@@0 ($generated@@81 $generated@@688 ($generated@@291 ($generated@@8 $generated@@689)))) (= (ControlFlow 0 28) 27)) $generated@@746)))
(let (($generated@@751  (=> (= $generated@@690 ($generated@@590 $generated@@46 $generated@@682)) (=> (and ($generated@@74 $generated@@690 ($generated@@252 $generated@@46) $generated@@684) ($generated@@135 ($generated@@252 $generated@@46) ($generated@@291 ($generated@@590 $generated@@46 $generated@@682)))) (=> (and (and (= $generated@@691 ($generated@@400 ($generated@@76 $generated@@134 $generated@@4) ($generated@@133 ($generated@@252 $generated@@46) ($generated@@291 ($generated@@590 $generated@@46 $generated@@682))))) ($generated@@135 ($generated@@252 $generated@@46) ($generated@@291 ($generated@@590 $generated@@46 $generated@@682)))) (and ($generated@@141 $generated@@691 ($generated@@252 $generated@@46)) (= $generated@@688 $generated@@691))) (and (=> (= (ControlFlow 0 30) 28) $generated@@750) (=> (= (ControlFlow 0 30) 29) $generated@@749)))))))
(let (($generated@@752  (=> (and (not ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@692))))) (= (ControlFlow 0 32) 30)) $generated@@751)))
(let (($generated@@753  (=> (and ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@692)))) (= (ControlFlow 0 31) 30)) $generated@@751)))
(let (($generated@@754  (and (=> (= (ControlFlow 0 33) 31) $generated@@753) (=> (= (ControlFlow 0 33) 32) $generated@@752))))
(let (($generated@@755 true))
(let (($generated@@756  (=> (and ($generated@@141 $generated@@688 ($generated@@252 $generated@@46)) ($generated@@74 $generated@@688 ($generated@@252 $generated@@46) $generated@@684)) (and (=> (= (ControlFlow 0 34) 33) $generated@@754) (=> (= (ControlFlow 0 34) 16) $generated@@755)))))
(let (($generated@@757 true))
(let (($generated@@758  (=> (= $generated@@693 (forall (($generated@@759 Int) )  (=> true (let (($generated@@760 ($generated@@590 $generated@@46 $generated@@682)))
 (=> ($generated@@0 ($generated@@81 $generated@@760 ($generated@@291 ($generated@@8 $generated@@759)))) (< $generated@@759 200)))))) (and (=> (= (ControlFlow 0 35) (- 0 36)) (= $generated@@694 $generated@@693)) (=> (= $generated@@694 $generated@@693) (and (=> (= (ControlFlow 0 35) 34) $generated@@756) (=> (= (ControlFlow 0 35) 15) $generated@@757)))))))
(let (($generated@@761  (=> (and (not ($generated@@0 ($generated@@81 $generated@@695 ($generated@@291 ($generated@@8 $generated@@696))))) (= (ControlFlow 0 38) 35)) $generated@@758)))
(let (($generated@@762  (=> (and ($generated@@0 ($generated@@81 $generated@@695 ($generated@@291 ($generated@@8 $generated@@696)))) (= (ControlFlow 0 37) 35)) $generated@@758)))
(let (($generated@@763  (=> (= $generated@@697 ($generated@@590 $generated@@46 $generated@@682)) (=> (and ($generated@@141 $generated@@697 ($generated@@252 $generated@@46)) (= $generated@@695 $generated@@697)) (and (=> (= (ControlFlow 0 39) 37) $generated@@762) (=> (= (ControlFlow 0 39) 38) $generated@@761))))))
(let (($generated@@764  (=> (and (not ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@698))))) (= (ControlFlow 0 41) 39)) $generated@@763)))
(let (($generated@@765  (=> (and ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@698)))) (= (ControlFlow 0 40) 39)) $generated@@763)))
(let (($generated@@766  (and (=> (= (ControlFlow 0 42) 40) $generated@@765) (=> (= (ControlFlow 0 42) 41) $generated@@764))))
(let (($generated@@767 true))
(let (($generated@@768  (=> (and ($generated@@141 $generated@@695 ($generated@@252 $generated@@46)) ($generated@@74 $generated@@695 ($generated@@252 $generated@@46) $generated@@684)) (and (=> (= (ControlFlow 0 43) 42) $generated@@766) (=> (= (ControlFlow 0 43) 14) $generated@@767)))))
(let (($generated@@769 true))
(let (($generated@@770  (=> (= $generated@@694 (forall (($generated@@771 Int) )  (=> true (=> ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@771)))) (< $generated@@771 200))))) (and (=> (= (ControlFlow 0 44) 43) $generated@@768) (=> (= (ControlFlow 0 44) 13) $generated@@769)))))
(let (($generated@@772  (=> (and (not ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@699))))) (= (ControlFlow 0 46) 44)) $generated@@770)))
(let (($generated@@773  (=> (and ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@699)))) (= (ControlFlow 0 45) 44)) $generated@@770)))
(let (($generated@@774  (=> (not ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@700))))) (and (=> (= (ControlFlow 0 48) 45) $generated@@773) (=> (= (ControlFlow 0 48) 46) $generated@@772)))))
(let (($generated@@775  (=> ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@700)))) (and (=> (= (ControlFlow 0 47) 45) $generated@@773) (=> (= (ControlFlow 0 47) 46) $generated@@772)))))
(let (($generated@@776  (and (=> (= (ControlFlow 0 49) 47) $generated@@775) (=> (= (ControlFlow 0 49) 48) $generated@@774))))
(let (($generated@@777 true))
(let (($generated@@778  (and (=> (= (ControlFlow 0 50) 49) $generated@@776) (=> (= (ControlFlow 0 50) 12) $generated@@777))))
(let (($generated@@779 true))
(let (($generated@@780  (and (=> (= (ControlFlow 0 51) 50) $generated@@778) (=> (= (ControlFlow 0 51) 11) $generated@@779))))
(let (($generated@@781  (=> (= $generated@@701 (forall (($generated@@782 Int) )  (=> (or (or (= $generated@@782 ($generated@@262 2)) (= $generated@@782 ($generated@@262 3))) (= $generated@@782 ($generated@@262 5))) (< $generated@@782 200)))) (and (=> (= (ControlFlow 0 64) (- 0 65)) (= $generated@@702 $generated@@701)) (=> (= $generated@@702 $generated@@701) (=> (= (ControlFlow 0 64) 51) $generated@@780))))))
(let (($generated@@783  (=> (and (not (or (or (= $generated@@703 ($generated@@262 2)) (= $generated@@703 ($generated@@262 3))) (= $generated@@703 ($generated@@262 5)))) (= (ControlFlow 0 67) 64)) $generated@@781)))
(let (($generated@@784  (=> (and (or (or (= $generated@@703 ($generated@@262 2)) (= $generated@@703 ($generated@@262 3))) (= $generated@@703 ($generated@@262 5))) (= (ControlFlow 0 66) 64)) $generated@@781)))
(let (($generated@@785  (and (=> (= (ControlFlow 0 68) 66) $generated@@784) (=> (= (ControlFlow 0 68) 67) $generated@@783))))
(let (($generated@@786  (=> (= $generated@@702 (forall (($generated@@787 Int) )  (=> (or (or (= $generated@@787 ($generated@@262 2)) (= $generated@@787 ($generated@@262 3))) (= $generated@@787 ($generated@@262 5))) (< $generated@@787 200)))) (and (=> (= (ControlFlow 0 69) 68) $generated@@785) (=> (= (ControlFlow 0 69) 63) $generated@@733)))))
(let (($generated@@788  (=> (and (not (or (or (= $generated@@704 ($generated@@262 2)) (= $generated@@704 ($generated@@262 3))) (= $generated@@704 ($generated@@262 5)))) (= (ControlFlow 0 71) 69)) $generated@@786)))
(let (($generated@@789  (=> (and (or (or (= $generated@@704 ($generated@@262 2)) (= $generated@@704 ($generated@@262 3))) (= $generated@@704 ($generated@@262 5))) (= (ControlFlow 0 70) 69)) $generated@@786)))
(let (($generated@@790  (and (=> (= (ControlFlow 0 72) 70) $generated@@789) (=> (= (ControlFlow 0 72) 71) $generated@@788))))
(let (($generated@@791  (and (=> (= (ControlFlow 0 73) 72) $generated@@790) (=> (= (ControlFlow 0 73) 62) $generated@@734))))
(let (($generated@@792  (=> (= $generated@@705 (forall (($generated@@793 Int) ) (!  (=> ($generated@@0 ($generated@@81 $generated@@706 ($generated@@291 ($generated@@8 $generated@@793)))) (< $generated@@793 200))
 :pattern ( ($generated@@81 $generated@@706 ($generated@@291 ($generated@@8 $generated@@793))))
))) (and (=> (= (ControlFlow 0 52) (- 0 53)) (= $generated@@707 $generated@@705)) (=> (= $generated@@707 $generated@@705) (=> (= (ControlFlow 0 52) 51) $generated@@780))))))
(let (($generated@@794  (=> (and (not ($generated@@0 ($generated@@81 $generated@@706 ($generated@@291 ($generated@@8 $generated@@708))))) (= (ControlFlow 0 55) 52)) $generated@@792)))
(let (($generated@@795  (=> (and ($generated@@0 ($generated@@81 $generated@@706 ($generated@@291 ($generated@@8 $generated@@708)))) (= (ControlFlow 0 54) 52)) $generated@@792)))
(let (($generated@@796  (and (=> (= (ControlFlow 0 56) 54) $generated@@795) (=> (= (ControlFlow 0 56) 55) $generated@@794))))
(let (($generated@@797 true))
(let (($generated@@798  (=> (= $generated@@707 (forall (($generated@@799 Int) ) (!  (=> ($generated@@0 ($generated@@81 $generated@@706 ($generated@@291 ($generated@@8 $generated@@799)))) (< $generated@@799 200))
 :pattern ( ($generated@@81 $generated@@706 ($generated@@291 ($generated@@8 $generated@@799))))
))) (and (=> (= (ControlFlow 0 57) 56) $generated@@796) (=> (= (ControlFlow 0 57) 10) $generated@@797)))))
(let (($generated@@800  (=> (and (not ($generated@@0 ($generated@@81 $generated@@706 ($generated@@291 ($generated@@8 $generated@@709))))) (= (ControlFlow 0 59) 57)) $generated@@798)))
(let (($generated@@801  (=> (and ($generated@@0 ($generated@@81 $generated@@706 ($generated@@291 ($generated@@8 $generated@@709)))) (= (ControlFlow 0 58) 57)) $generated@@798)))
(let (($generated@@802  (and (=> (= (ControlFlow 0 60) 58) $generated@@801) (=> (= (ControlFlow 0 60) 59) $generated@@800))))
(let (($generated@@803 true))
(let (($generated@@804  (=> (= $generated@@706 ($generated@@264 ($generated@@447 ($generated@@447 ($generated@@447 ($generated@@605 $generated@@134) ($generated@@291 ($generated@@8 ($generated@@262 2)))) ($generated@@291 ($generated@@8 ($generated@@262 3)))) ($generated@@291 ($generated@@8 ($generated@@262 5)))))) (and (=> (= (ControlFlow 0 61) 60) $generated@@802) (=> (= (ControlFlow 0 61) 9) $generated@@803)))))
(let (($generated@@805  (=> (= $generated@@710 (forall (($generated@@806 Int) ) (!  (=> (and (and ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@806)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@806))))) (not ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@806)))))) (< $generated@@806 200))
 :pattern ( ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@806))))
 :pattern ( ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@806))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@806))))
))) (and (=> (= (ControlFlow 0 74) (- 0 75)) (= $generated@@712 $generated@@710)) (=> (= $generated@@712 $generated@@710) (and (=> (= (ControlFlow 0 74) 73) $generated@@791) (=> (= (ControlFlow 0 74) 61) $generated@@804)))))))
(let (($generated@@807  (=> (and (not (and (and ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@713)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@713))))) (not ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@713))))))) (= (ControlFlow 0 77) 74)) $generated@@805)))
(let (($generated@@808  (=> (and (and (and ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@713)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@713))))) (not ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@713)))))) (= (ControlFlow 0 76) 74)) $generated@@805)))
(let (($generated@@809  (=> (not (and ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@713)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@713)))))) (and (=> (= (ControlFlow 0 79) 76) $generated@@808) (=> (= (ControlFlow 0 79) 77) $generated@@807)))))
(let (($generated@@810  (=> (and ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@713)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@713))))) (and (=> (= (ControlFlow 0 78) 76) $generated@@808) (=> (= (ControlFlow 0 78) 77) $generated@@807)))))
(let (($generated@@811  (=> (not ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@713))))) (and (=> (= (ControlFlow 0 81) 78) $generated@@810) (=> (= (ControlFlow 0 81) 79) $generated@@809)))))
(let (($generated@@812  (=> ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@713)))) (and (=> (= (ControlFlow 0 80) 78) $generated@@810) (=> (= (ControlFlow 0 80) 79) $generated@@809)))))
(let (($generated@@813  (and (=> (= (ControlFlow 0 82) 80) $generated@@812) (=> (= (ControlFlow 0 82) 81) $generated@@811))))
(let (($generated@@814 true))
(let (($generated@@815  (=> (= $generated@@712 (forall (($generated@@816 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@816)))) (< $generated@@816 200))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@816))))
))) (and (=> (= (ControlFlow 0 83) 82) $generated@@813) (=> (= (ControlFlow 0 83) 8) $generated@@814)))))
(let (($generated@@817  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@714))))) (= (ControlFlow 0 85) 83)) $generated@@815)))
(let (($generated@@818  (=> (and ($generated@@0 ($generated@@81 ($generated@@374 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@714)))) (= (ControlFlow 0 84) 83)) $generated@@815)))
(let (($generated@@819  (and (=> (= (ControlFlow 0 86) 84) $generated@@818) (=> (= (ControlFlow 0 86) 85) $generated@@817))))
(let (($generated@@820 true))
(let (($generated@@821  (=> (= $generated@@715 (forall (($generated@@822 Int) ) (!  (=> (and (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@822)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@822))))) ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@822))))) (< $generated@@822 200))
 :pattern ( ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@822))))
 :pattern ( ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@822))))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@822))))
))) (and (=> (= (ControlFlow 0 87) (- 0 88)) (= $generated@@716 $generated@@715)) (=> (= $generated@@716 $generated@@715) (and (=> (= (ControlFlow 0 87) 86) $generated@@819) (=> (= (ControlFlow 0 87) 7) $generated@@820)))))))
(let (($generated@@823  (=> (and (not (and (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@717)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@717))))) ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@717)))))) (= (ControlFlow 0 90) 87)) $generated@@821)))
(let (($generated@@824  (=> (and (and (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@717)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@717))))) ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@717))))) (= (ControlFlow 0 89) 87)) $generated@@821)))
(let (($generated@@825  (=> (not (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@717)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@717)))))) (and (=> (= (ControlFlow 0 92) 89) $generated@@824) (=> (= (ControlFlow 0 92) 90) $generated@@823)))))
(let (($generated@@826  (=> (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@717)))) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@717))))) (and (=> (= (ControlFlow 0 91) 89) $generated@@824) (=> (= (ControlFlow 0 91) 90) $generated@@823)))))
(let (($generated@@827  (=> (not ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@717))))) (and (=> (= (ControlFlow 0 94) 91) $generated@@826) (=> (= (ControlFlow 0 94) 92) $generated@@825)))))
(let (($generated@@828  (=> ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@717)))) (and (=> (= (ControlFlow 0 93) 91) $generated@@826) (=> (= (ControlFlow 0 93) 92) $generated@@825)))))
(let (($generated@@829  (and (=> (= (ControlFlow 0 95) 93) $generated@@828) (=> (= (ControlFlow 0 95) 94) $generated@@827))))
(let (($generated@@830 true))
(let (($generated@@831  (=> (= $generated@@716 (forall (($generated@@832 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@832)))) (< $generated@@832 200))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@832))))
))) (and (=> (= (ControlFlow 0 96) 95) $generated@@829) (=> (= (ControlFlow 0 96) 6) $generated@@830)))))
(let (($generated@@833  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@718))))) (= (ControlFlow 0 98) 96)) $generated@@831)))
(let (($generated@@834  (=> (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@718)))) (= (ControlFlow 0 97) 96)) $generated@@831)))
(let (($generated@@835  (and (=> (= (ControlFlow 0 99) 97) $generated@@834) (=> (= (ControlFlow 0 99) 98) $generated@@833))))
(let (($generated@@836 true))
(let (($generated@@837  (and (=> (= (ControlFlow 0 100) (- 0 102)) (= $generated@@719 $generated@@720)) (and (=> (= (ControlFlow 0 100) (- 0 101)) ($generated@@338 $generated@@721 $generated@@722)) (=> (and (= $generated@@719 $generated@@720) ($generated@@338 $generated@@721 $generated@@722)) (and (=> (= (ControlFlow 0 100) 99) $generated@@835) (=> (= (ControlFlow 0 100) 5) $generated@@836)))))))
(let (($generated@@838  (=> (and (= $generated@@719  (not $generated@@720)) (= (ControlFlow 0 104) 100)) $generated@@837)))
(let (($generated@@839  (=> (and (= $generated@@719 $generated@@720) (= (ControlFlow 0 103) 100)) $generated@@837)))
(let (($generated@@840  (=> (= $generated@@722 ($generated@@240 $generated@@46 ($generated@@219 $generated@@682 $generated@@711) $generated@@682 $generated@@711)) (and (=> (= (ControlFlow 0 105) 103) $generated@@839) (=> (= (ControlFlow 0 105) 104) $generated@@838)))))
(let (($generated@@841  (=> (and (not (and ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@723)))) (or ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@723)))) ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@723))))))) (= (ControlFlow 0 107) 105)) $generated@@840)))
(let (($generated@@842  (=> (and (and ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@723)))) (or ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@723)))) ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@723)))))) (= (ControlFlow 0 106) 105)) $generated@@840)))
(let (($generated@@843  (=> ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@723)))) (and (=> (= (ControlFlow 0 110) 106) $generated@@842) (=> (= (ControlFlow 0 110) 107) $generated@@841)))))
(let (($generated@@844  (=> (not ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@723))))) (and (=> (= (ControlFlow 0 109) 106) $generated@@842) (=> (= (ControlFlow 0 109) 107) $generated@@841)))))
(let (($generated@@845  (=> ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@723)))) (and (=> (= (ControlFlow 0 111) 109) $generated@@844) (=> (= (ControlFlow 0 111) 110) $generated@@843)))))
(let (($generated@@846  (=> (not ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@723))))) (and (=> (= (ControlFlow 0 108) 106) $generated@@842) (=> (= (ControlFlow 0 108) 107) $generated@@841)))))
(let (($generated@@847  (and (=> (= (ControlFlow 0 112) 111) $generated@@845) (=> (= (ControlFlow 0 112) 108) $generated@@846))))
(let (($generated@@848 true))
(let (($generated@@849  (=> (= $generated@@721 ($generated@@590 $generated@@46 ($generated@@219 $generated@@682 $generated@@711))) (and (=> (= (ControlFlow 0 113) 112) $generated@@847) (=> (= (ControlFlow 0 113) 4) $generated@@848)))))
(let (($generated@@850  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@724))))) (= (ControlFlow 0 115) 113)) $generated@@849)))
(let (($generated@@851  (=> (and ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@724)))) (= (ControlFlow 0 114) 113)) $generated@@849)))
(let (($generated@@852  (and (=> (= (ControlFlow 0 116) 114) $generated@@851) (=> (= (ControlFlow 0 116) 115) $generated@@850))))
(let (($generated@@853 true))
(let (($generated@@854  (=> (= $generated@@720 (forall (($generated@@855 Int) ) (!  (=> (or ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@855)))) ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@855))))) (< $generated@@855 200))
 :pattern ( ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@855))))
 :pattern ( ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@855))))
))) (and (=> (= (ControlFlow 0 117) 116) $generated@@852) (=> (= (ControlFlow 0 117) 3) $generated@@853)))))
(let (($generated@@856  (=> (and (not (or ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@725)))) ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@725)))))) (= (ControlFlow 0 119) 117)) $generated@@854)))
(let (($generated@@857  (=> (and (or ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@725)))) ($generated@@0 ($generated@@81 $generated@@711 ($generated@@291 ($generated@@8 $generated@@725))))) (= (ControlFlow 0 118) 117)) $generated@@854)))
(let (($generated@@858  (=> ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@725)))) (and (=> (= (ControlFlow 0 121) 118) $generated@@857) (=> (= (ControlFlow 0 121) 119) $generated@@856)))))
(let (($generated@@859  (=> (not ($generated@@0 ($generated@@81 $generated@@682 ($generated@@291 ($generated@@8 $generated@@725))))) (and (=> (= (ControlFlow 0 120) 118) $generated@@857) (=> (= (ControlFlow 0 120) 119) $generated@@856)))))
(let (($generated@@860  (and (=> (= (ControlFlow 0 122) 120) $generated@@859) (=> (= (ControlFlow 0 122) 121) $generated@@858))))
(let (($generated@@861 true))
(let (($generated@@862  (=> (= $generated@@719 (forall (($generated@@863 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@863)))) (< $generated@@863 200))
 :pattern ( ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@863))))
))) (and (=> (= (ControlFlow 0 123) 122) $generated@@860) (=> (= (ControlFlow 0 123) 2) $generated@@861)))))
(let (($generated@@864  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@726))))) (= (ControlFlow 0 125) 123)) $generated@@862)))
(let (($generated@@865  (=> (and ($generated@@0 ($generated@@81 ($generated@@219 $generated@@682 $generated@@711) ($generated@@291 ($generated@@8 $generated@@726)))) (= (ControlFlow 0 124) 123)) $generated@@862)))
(let (($generated@@866  (and (=> (= (ControlFlow 0 126) 124) $generated@@865) (=> (= (ControlFlow 0 126) 125) $generated@@864))))
(let (($generated@@867 true))
(let (($generated@@868  (=> (= $generated@@727 ($generated@@164 $generated@@728 $generated@@684 $generated@@60 false)) (and (=> (= (ControlFlow 0 127) 126) $generated@@866) (=> (= (ControlFlow 0 127) 1) $generated@@867)))))
(let (($generated@@869  (=> (and ($generated@@268 $generated@@684) ($generated@@729 $generated@@684)) (=> (and (and ($generated@@141 $generated@@682 ($generated@@252 $generated@@46)) ($generated@@74 $generated@@682 ($generated@@252 $generated@@46) $generated@@684)) (and ($generated@@141 $generated@@711 ($generated@@252 $generated@@46)) ($generated@@74 $generated@@711 ($generated@@252 $generated@@46) $generated@@684))) (=> (and (and (and (and ($generated@@141 $generated@@730 ($generated@@252 $generated@@46)) ($generated@@74 $generated@@730 ($generated@@252 $generated@@46) $generated@@684)) true) (and (and ($generated@@141 $generated@@731 ($generated@@252 $generated@@46)) ($generated@@74 $generated@@731 ($generated@@252 $generated@@46) $generated@@684)) true)) (and (and (and ($generated@@141 $generated@@732 ($generated@@252 $generated@@46)) ($generated@@74 $generated@@732 ($generated@@252 $generated@@46) $generated@@684)) true) (and (= 1 $generated@@132) (= (ControlFlow 0 128) 127)))) $generated@@868)))))
$generated@@869))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (Int Int) Int)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@T T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 (T@U Int) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@79 (type $generated@@136))))
(= (type ($generated@@133 $generated@@136 $generated@@137)) ($generated@@76 $generated@@138 $generated@@2)))
 :pattern ( ($generated@@133 $generated@@136 $generated@@137))
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@79 (type $generated@@139))))
(= (type ($generated@@134 $generated@@139 $generated@@140)) ($generated@@76 $generated@@141 $generated@@2)))
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@79 (type $generated@@142))))
(= (type ($generated@@135 $generated@@142 $generated@@143)) ($generated@@76 $generated@@144 $generated@@2)))
 :pattern ( ($generated@@135 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@79 (type $generated@@145))))
 (=> (and (= (type $generated@@145) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@146) ($generated@@76 $generated@@147 $generated@@2))) (and (= (+ (+ ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)) ($generated@@132 ($generated@@133 $generated@@146 $generated@@145))) (* 2 ($generated@@132 ($generated@@134 $generated@@145 $generated@@146)))) ($generated@@132 ($generated@@135 $generated@@145 $generated@@146))) (= ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)) (- ($generated@@132 $generated@@145) ($generated@@132 ($generated@@134 $generated@@145 $generated@@146)))))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert (forall (($generated@@151 Int) ($generated@@152 Int) ) (!  (or (= ($generated@@150 $generated@@151 $generated@@152) $generated@@151) (= ($generated@@150 $generated@@151 $generated@@152) $generated@@152))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert  (and (= ($generated@@1 $generated@@155) 14) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@64) (= (type $generated@@159) $generated@@64)) (= (type $generated@@160) $generated@@155)) ($generated@@148 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@148 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@64)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@64)) ($generated@@148 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@148 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@77 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@79 (type $generated@@230))))
 (=> (and (= (type $generated@@230) ($generated@@76 $generated@@232 $generated@@2)) (= (type $generated@@231) ($generated@@76 $generated@@232 $generated@@2))) (= ($generated@@134 ($generated@@134 $generated@@230 $generated@@231) $generated@@231) ($generated@@134 $generated@@230 $generated@@231))))
 :pattern ( ($generated@@134 ($generated@@134 $generated@@230 $generated@@231) $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@155)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@164)) (= (type $generated@@240) $generated@@164)) (= ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@154 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@154 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
 (=> (and (= (type $generated@@241) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@242) ($generated@@76 $generated@@244 $generated@@2))) (= ($generated ($generated@@81 ($generated@@135 $generated@@241 $generated@@242) $generated@@243)) (+ ($generated ($generated@@81 $generated@@241 $generated@@243)) ($generated ($generated@@81 $generated@@242 $generated@@243))))))
 :pattern ( ($generated@@81 ($generated@@135 $generated@@241 $generated@@242) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@155) (= (type $generated@@246) $generated@@155)) (= ($generated@@161 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@161 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@64)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@250) $generated@@64)) (= ($generated@@148 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@164) ($generated@@0 ($generated@@81 $generated@@249 $generated@@251))) ($generated@@234 $generated@@251 $generated@@250))
 :pattern ( ($generated@@81 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@148 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@148 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@164) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@234 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@148 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (!  (=> (<= 0 $generated@@258) (= ($generated@@257 $generated@@258) $generated@@258))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@164)) (= (type $generated@@270) $generated@@164)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@233 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@233 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@155) (= ($generated@@153 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
 (=> (and (= (type $generated@@275) ($generated@@76 $generated@@278 $generated@@2)) (= (type $generated@@276) ($generated@@76 $generated@@278 $generated@@2))) (= ($generated ($generated@@81 ($generated@@133 $generated@@275 $generated@@276) $generated@@277)) ($generated@@257 (- ($generated ($generated@@81 $generated@@275 $generated@@277)) ($generated ($generated@@81 $generated@@276 $generated@@277)))))))
 :pattern ( ($generated@@81 ($generated@@133 $generated@@275 $generated@@276) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@155) ($generated@@153 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@164) (= (type $generated@@281) $generated@@164)) (= $generated@@279 ($generated@@233 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@153 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 (type $generated@@292)))
(= (type ($generated@@290 $generated@@291 $generated@@292)) ($generated@@76 $generated@@293 $generated@@2)))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@296 $generated@@2)) (= ($generated@@132 ($generated@@290 $generated@@294 $generated@@295)) (+ ($generated@@132 $generated@@294) 1))))
 :pattern ( ($generated@@132 ($generated@@290 $generated@@294 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@164)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@64) (= (type $generated@@301) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@74 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@266 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@76 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@76 $generated@@305 $generated@@2)) (and (= (= ($generated@@132 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@132 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@81 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@132 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 (type $generated@@309)))
 (=> (and (and (= (type $generated@@307) ($generated@@76 $generated@@310 $generated@@2)) (= (type $generated@@308) ($generated@@76 $generated@@310 $generated@@2))) (<= ($generated ($generated@@81 $generated@@307 $generated@@309)) ($generated ($generated@@81 $generated@@308 $generated@@309)))) (= ($generated ($generated@@81 ($generated@@133 $generated@@307 $generated@@308) $generated@@309)) 0)))
 :pattern ( ($generated@@133 $generated@@307 $generated@@308) ($generated@@81 $generated@@308 $generated@@309) ($generated@@81 $generated@@307 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@81 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@81 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@79 (type $generated@@347))))
 (=> (and (= (type $generated@@347) ($generated@@76 $generated@@349 $generated@@2)) (= (type $generated@@348) ($generated@@76 $generated@@349 $generated@@2))) (= ($generated@@132 ($generated@@135 $generated@@347 $generated@@348)) (+ ($generated@@132 $generated@@347) ($generated@@132 $generated@@348)))))
 :pattern ( ($generated@@132 ($generated@@135 $generated@@347 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@76 $generated@@351 $generated@@2)) (= ($generated@@170 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@81 $generated@@350 $generated@@352))) (<= ($generated ($generated@@81 $generated@@350 $generated@@352)) ($generated@@132 $generated@@350))))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@170 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
 (=> (= (type $generated@@353) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated ($generated@@81 ($generated@@290 $generated@@353 $generated@@354) $generated@@354)) (+ ($generated ($generated@@81 $generated@@353 $generated@@354)) 1))))
 :pattern ( ($generated@@290 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@357)))
 (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@359 $generated@@2)) (= (type $generated@@358) $generated@@359)) (< 0 ($generated ($generated@@81 $generated@@356 $generated@@358)))) (< 0 ($generated ($generated@@81 ($generated@@290 $generated@@356 $generated@@357) $generated@@358)))))
 :pattern ( ($generated@@290 $generated@@356 $generated@@357) ($generated@@81 $generated@@356 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@315 (type $generated@@360))))
(let (($generated@@362 ($generated@@314 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@313 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@312 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@311 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@315 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@76 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@315 (type $generated@@367))))
(let (($generated@@369 ($generated@@314 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@313 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@312 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@333 (type $generated@@371))))
(let (($generated@@373 ($generated@@332 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@331 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@330 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@329 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@333 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@333 (type $generated@@378))))
(let (($generated@@380 ($generated@@332 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@331 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@330 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@383)))
 (=> (and (= (type $generated@@382) ($generated@@76 $generated@@385 $generated@@2)) (= (type $generated@@384) $generated@@385)) (= (< 0 ($generated ($generated@@81 ($generated@@290 $generated@@382 $generated@@383) $generated@@384)))  (or (= $generated@@384 $generated@@383) (< 0 ($generated ($generated@@81 $generated@@382 $generated@@384)))))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@387) $generated@@64)) (= ($generated@@148 $generated@@386 ($generated@@169 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@164) (< 0 ($generated ($generated@@81 $generated@@386 $generated@@388)))) ($generated@@234 $generated@@388 $generated@@387))
 :pattern ( ($generated@@81 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@148 $generated@@386 ($generated@@169 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@389 ($generated@@247 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@164) ($generated@@0 ($generated@@81 $generated@@389 $generated@@392))) ($generated@@266 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@81 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@389 ($generated@@247 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@252 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@164) ($generated@@0 ($generated@@81 $generated@@393 $generated@@396))) ($generated@@266 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@81 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@252 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@81 ($generated@@302 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@81 ($generated@@302 $generated@@398) $generated@@397)))
)))
(assert  (and (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@399 $generated@@402)) ($generated@@76 $generated@@164 $generated@@4))
 :pattern ( ($generated@@399 $generated@@402))
)) (forall (($generated@@403 T@T) ($generated@@404 T@U) ) (! (= (type ($generated@@400 $generated@@403 $generated@@404)) $generated@@403)
 :pattern ( ($generated@@400 $generated@@403 $generated@@404))
))) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@315 (type $generated@@405))))
(let (($generated@@407 ($generated@@314 (type $generated@@405))))
(= (type ($generated@@401 $generated@@405)) ($generated@@76 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@401 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@313 $generated@@164 $generated@@164)) (= (type $generated@@409) $generated@@164)) (= ($generated@@0 ($generated@@81 ($generated@@399 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@408) ($generated@@162 ($generated@@400 $generated@@155 $generated@@409)))) (= ($generated@@81 ($generated@@401 $generated@@408) ($generated@@162 ($generated@@400 $generated@@155 $generated@@409))) ($generated@@163 ($generated@@400 $generated@@155 $generated@@409))))))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@76 $generated@@164 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@333 (type $generated@@413))))
(let (($generated@@415 ($generated@@332 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@76 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@331 $generated@@164 $generated@@164)) (= (type $generated@@417) $generated@@164)) (= ($generated@@0 ($generated@@81 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@81 ($generated@@329 $generated@@416) ($generated@@162 ($generated@@400 $generated@@155 $generated@@417)))) (= ($generated@@81 ($generated@@411 $generated@@416) ($generated@@162 ($generated@@400 $generated@@155 $generated@@417))) ($generated@@163 ($generated@@400 $generated@@155 $generated@@417))))))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@314 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@313 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@81 ($generated@@401 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@332 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@331 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@81 ($generated@@329 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@81 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@423) $generated@@427))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@313 $generated@@164 $generated@@164)) (= (type $generated@@432) $generated@@64)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@431) $generated@@435))) (and ($generated@@266 ($generated@@81 ($generated@@401 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@266 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@431) $generated@@435))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@331 $generated@@164 $generated@@164)) (= (type $generated@@440) $generated@@64)) (= (type $generated@@441) $generated@@64)) (= (type $generated@@442) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@439) $generated@@443))) (and ($generated@@266 ($generated@@81 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@266 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@74 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@76 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@333 (type $generated@@446))))
(let (($generated@@448 ($generated@@332 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@331 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@330 $generated@@448 $generated@@447)) (= ($generated@@329 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@329 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@333 (type $generated@@449))))
(let (($generated@@451 ($generated@@332 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@331 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@330 $generated@@451 $generated@@450)) (= ($generated@@375 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@375 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@333 (type $generated@@452))))
(let (($generated@@454 ($generated@@332 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@331 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@330 $generated@@454 $generated@@453)) (= ($generated@@410 $generated@@452) ($generated@@444 $generated@@164))))))
 :pattern ( ($generated@@410 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@315 (type $generated@@455))))
(let (($generated@@457 ($generated@@314 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@313 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@312 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@164) (= (type $generated@@459) $generated@@164)) ($generated@@0 ($generated@@81 ($generated@@399 $generated@@455) ($generated@@297 ($generated@@233 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@399 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@333 (type $generated@@460))))
(let (($generated@@462 ($generated@@332 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@331 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@330 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@164) (= (type $generated@@464) $generated@@164)) ($generated@@0 ($generated@@81 ($generated@@410 $generated@@460) ($generated@@297 ($generated@@233 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@410 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@164) ($generated@@234 $generated@@465 $generated@@46)) (and (= ($generated@@297 ($generated@@400 $generated@@2 $generated@@465)) $generated@@465) ($generated@@148 ($generated@@400 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@164) ($generated@@234 $generated@@466 $generated@@47)) (and (= ($generated@@297 ($generated@@400 $generated@@3 $generated@@466)) $generated@@466) ($generated@@148 ($generated@@400 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@164) ($generated@@234 $generated@@467 $generated@@44)) (and (= ($generated@@297 ($generated@@400 $generated@@4 $generated@@467)) $generated@@467) ($generated@@148 ($generated@@400 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 20))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@164) ($generated@@234 $generated@@469 $generated@@45)) (and (= ($generated@@297 ($generated@@400 $generated@@468 $generated@@469)) $generated@@469) ($generated@@148 ($generated@@400 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@234 ($generated@@297 $generated@@470) $generated@@471) ($generated@@148 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@234 ($generated@@297 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@79 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@76 $generated@@473 $generated@@2)) (<= 0 ($generated@@132 $generated@@472))))
 :pattern ( ($generated@@132 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@285 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@284 $generated@@475)) (<= 0 ($generated@@283 $generated@@474))))
 :pattern ( ($generated@@283 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@478)))
 (=> (and (= (type $generated@@476) ($generated@@76 $generated@@479 $generated@@2)) (= (type $generated@@477) ($generated@@76 $generated@@479 $generated@@2))) (= ($generated ($generated@@81 ($generated@@134 $generated@@476 $generated@@477) $generated@@478)) ($generated@@150 ($generated ($generated@@81 $generated@@476 $generated@@478)) ($generated ($generated@@81 $generated@@477 $generated@@478))))))
 :pattern ( ($generated@@81 ($generated@@134 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@428 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@428 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@428 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@428 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@72 ($generated@@428 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@436 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@436 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@436 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@436 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@64) (= (type $generated@@499) $generated@@64)) (= ($generated@@72 ($generated@@436 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@164) (= (type $generated@@501) $generated@@164)) (= ($generated@@272 ($generated@@233 $generated@@500 $generated@@501)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= ($generated@@502 ($generated@@154 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@154 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= ($generated@@506 ($generated@@154 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@154 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@164) (= (type $generated@@511) $generated@@164)) (= ($generated@@162 ($generated@@233 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@233 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@164) (= (type $generated@@513) $generated@@164)) (= ($generated@@163 ($generated@@233 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@233 $generated@@512 $generated@@513))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@516))
)) (forall (($generated@@517 T@U) ($generated@@518 Int) ) (! (let (($generated@@519 ($generated@@285 (type $generated@@517))))
(= (type ($generated@@515 $generated@@517 $generated@@518)) $generated@@519))
 :pattern ( ($generated@@515 $generated@@517 $generated@@518))
))))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@284 $generated@@164)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@520 ($generated@@514 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@283 $generated@@520))) ($generated@@266 ($generated@@515 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@515 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@74 $generated@@520 ($generated@@514 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@75 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@75 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@526 ($generated@@247 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@247 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@72 ($generated@@247 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@64) (= ($generated@@530 ($generated@@252 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@252 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@72 ($generated@@252 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@64) (= ($generated@@534 ($generated@@169 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@169 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@72 ($generated@@169 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@64) (= ($generated@@538 ($generated@@514 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@514 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@72 ($generated@@514 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@514 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@400 $generated@@543 ($generated@@297 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@297 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@313 $generated@@164 $generated@@164)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) (= ($generated@@148 $generated@@544 ($generated@@428 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@544) $generated@@547))) (and ($generated@@234 ($generated@@81 ($generated@@401 $generated@@544) $generated@@547) $generated@@546) ($generated@@234 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@544) $generated@@547))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@148 $generated@@544 ($generated@@428 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@331 $generated@@164 $generated@@164)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) (= ($generated@@148 $generated@@548 ($generated@@436 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@548) $generated@@551))) (and ($generated@@234 ($generated@@81 ($generated@@411 $generated@@548) $generated@@551) $generated@@550) ($generated@@234 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@548) $generated@@551))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@148 $generated@@548 ($generated@@436 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@164) (= (type $generated@@555) $generated@@164)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@233 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@233 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@164) (= (type $generated@@557) $generated@@164)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@233 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@233 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@79 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@76 $generated@@560 $generated@@2)) (= (type $generated@@559) ($generated@@76 $generated@@560 $generated@@2))) (= ($generated@@134 $generated@@558 ($generated@@134 $generated@@558 $generated@@559)) ($generated@@134 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@134 $generated@@558 ($generated@@134 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@164) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@234 $generated@@561 ($generated@@428 $generated@@562 $generated@@563))) (and (= ($generated@@297 ($generated@@400 ($generated@@313 $generated@@164 $generated@@164) $generated@@561)) $generated@@561) ($generated@@148 ($generated@@400 ($generated@@313 $generated@@164 $generated@@164) $generated@@561) ($generated@@428 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@234 $generated@@561 ($generated@@428 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@164) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@234 $generated@@564 ($generated@@436 $generated@@565 $generated@@566))) (and (= ($generated@@297 ($generated@@400 ($generated@@331 $generated@@164 $generated@@164) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@400 ($generated@@331 $generated@@164 $generated@@164) $generated@@564) ($generated@@436 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@234 $generated@@564 ($generated@@436 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@64) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@164)) ($generated@@234 $generated@@569 ($generated@@154 $generated@@567 $generated@@568))) (and (= ($generated@@297 ($generated@@400 $generated@@155 $generated@@569)) $generated@@569) ($generated@@148 ($generated@@400 $generated@@155 $generated@@569) ($generated@@154 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@234 $generated@@569 ($generated@@154 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@81 ($generated@@444 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@81 ($generated@@444 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@69)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@64) (= (type $generated@@575) $generated@@64)) (and (= ($generated@@72 ($generated@@154 $generated@@574 $generated@@575)) $generated@@62) (= ($generated@@572 ($generated@@154 $generated@@574 $generated@@575)) $generated@@63)))
 :pattern ( ($generated@@154 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@155) (= ($generated@@552 ($generated@@297 $generated@@576)) ($generated@@553 $generated@@576)))
 :pattern ( ($generated@@552 ($generated@@297 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ($generated@@578 Int) ) (! (= (<= $generated@@577 $generated@@578) (= ($generated@@150 $generated@@577 $generated@@578) $generated@@577))
 :pattern ( ($generated@@150 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 Int) ($generated@@580 Int) ) (! (= (<= $generated@@580 $generated@@579) (= ($generated@@150 $generated@@579 $generated@@580) $generated@@580))
 :pattern ( ($generated@@150 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@164) ($generated@@234 $generated@@581 ($generated@@75 0))) (and (= ($generated@@297 ($generated@@400 $generated@@2 $generated@@581)) $generated@@581) ($generated@@148 ($generated@@400 ($generated@@76 $generated@@164 $generated@@4) $generated@@581) ($generated@@75 0))))
 :pattern ( ($generated@@234 $generated@@581 ($generated@@75 0)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@164) (= (type $generated@@583) $generated@@64)) ($generated@@234 $generated@@582 ($generated@@247 $generated@@583))) (and (= ($generated@@297 ($generated@@400 ($generated@@76 $generated@@164 $generated@@4) $generated@@582)) $generated@@582) ($generated@@148 ($generated@@400 ($generated@@76 $generated@@164 $generated@@4) $generated@@582) ($generated@@247 $generated@@583))))
 :pattern ( ($generated@@234 $generated@@582 ($generated@@247 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@164) (= (type $generated@@585) $generated@@64)) ($generated@@234 $generated@@584 ($generated@@252 $generated@@585))) (and (= ($generated@@297 ($generated@@400 ($generated@@76 $generated@@164 $generated@@4) $generated@@584)) $generated@@584) ($generated@@148 ($generated@@400 ($generated@@76 $generated@@164 $generated@@4) $generated@@584) ($generated@@252 $generated@@585))))
 :pattern ( ($generated@@234 $generated@@584 ($generated@@252 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@164) (= (type $generated@@587) $generated@@64)) ($generated@@234 $generated@@586 ($generated@@169 $generated@@587))) (and (= ($generated@@297 ($generated@@400 ($generated@@76 $generated@@164 $generated@@2) $generated@@586)) $generated@@586) ($generated@@148 ($generated@@400 ($generated@@76 $generated@@164 $generated@@2) $generated@@586) ($generated@@169 $generated@@587))))
 :pattern ( ($generated@@234 $generated@@586 ($generated@@169 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@164) (= (type $generated@@589) $generated@@64)) ($generated@@234 $generated@@588 ($generated@@514 $generated@@589))) (and (= ($generated@@297 ($generated@@400 ($generated@@284 $generated@@164) $generated@@588)) $generated@@588) ($generated@@148 ($generated@@400 ($generated@@284 $generated@@164) $generated@@588) ($generated@@514 $generated@@589))))
 :pattern ( ($generated@@234 $generated@@588 ($generated@@514 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@590 ($generated@@169 $generated@@591) $generated@@592) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@164) (< 0 ($generated ($generated@@81 $generated@@590 $generated@@593)))) ($generated@@266 $generated@@593 $generated@@591 $generated@@592))
 :pattern ( ($generated@@81 $generated@@590 $generated@@593))
))))
 :pattern ( ($generated@@74 $generated@@590 ($generated@@169 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@155) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@596) (and ($generated@@153 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@64) ($generated@@74 $generated@@594 ($generated@@154 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@74 $generated@@594 ($generated@@154 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@266 ($generated@@162 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@155) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@600) (and ($generated@@153 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@64) ($generated@@74 $generated@@598 ($generated@@154 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@74 $generated@@598 ($generated@@154 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@266 ($generated@@163 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@266 ($generated@@163 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@603)))
 (=> (and (and (= (type $generated@@602) ($generated@@76 $generated@@605 $generated@@2)) (= (type $generated@@604) $generated@@605)) (not (= $generated@@603 $generated@@604))) (= ($generated ($generated@@81 $generated@@602 $generated@@604)) ($generated ($generated@@81 ($generated@@290 $generated@@602 $generated@@603) $generated@@604)))))
 :pattern ( ($generated@@290 $generated@@602 $generated@@603) ($generated@@81 $generated@@602 $generated@@604))
)))
(assert (forall (($generated@@606 Int) ) (!  (=> (< $generated@@606 0) (= ($generated@@257 $generated@@606) 0))
 :pattern ( ($generated@@257 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@164) (= (type $generated@@608) $generated@@164)) (= ($generated@@233 ($generated@@261 $generated@@607) ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@233 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@233 ($generated@@261 $generated@@607) ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@259 $generated@@609))) ($generated@@261 ($generated@@297 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@259 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (! (= ($generated@@297 ($generated@@261 $generated@@610)) ($generated@@261 ($generated@@297 $generated@@610)))
 :pattern ( ($generated@@297 ($generated@@261 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@285 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@284 $generated@@612)) (= ($generated@@283 $generated@@611) 0)) (= $generated@@611 ($generated@@282 $generated@@612))))
 :pattern ( ($generated@@283 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@614)))
 (=> (and (and (= (type $generated@@613) ($generated@@76 $generated@@616 $generated@@2)) (= (type $generated@@615) $generated@@2)) (<= 0 ($generated $generated@@615))) (= ($generated@@132 ($generated@@82 $generated@@613 $generated@@614 $generated@@615)) (+ (- ($generated@@132 $generated@@613) ($generated ($generated@@81 $generated@@613 $generated@@614))) ($generated $generated@@615)))))
 :pattern ( ($generated@@132 ($generated@@82 $generated@@613 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@618) $generated@@2)) ($generated@@74 $generated@@618 $generated@@46 $generated@@617))
 :pattern ( ($generated@@74 $generated@@618 $generated@@46 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@3)) ($generated@@74 $generated@@620 $generated@@47 $generated@@619))
 :pattern ( ($generated@@74 $generated@@620 $generated@@47 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@622) $generated@@4)) ($generated@@74 $generated@@622 $generated@@44 $generated@@621))
 :pattern ( ($generated@@74 $generated@@622 $generated@@44 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@624) $generated@@468)) ($generated@@74 $generated@@624 $generated@@45 $generated@@623))
 :pattern ( ($generated@@74 $generated@@624 $generated@@45 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@626) $generated@@164)) ($generated@@74 $generated@@626 $generated@@48 $generated@@625))
 :pattern ( ($generated@@74 $generated@@626 $generated@@48 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@284 $generated@@164)) (= (type $generated@@628) $generated@@64)) (= ($generated@@148 $generated@@627 ($generated@@514 $generated@@628)) (forall (($generated@@629 Int) ) (!  (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@283 $generated@@627))) ($generated@@234 ($generated@@515 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@515 $generated@@627 $generated@@629))
))))
 :pattern ( ($generated@@148 $generated@@627 ($generated@@514 $generated@@628)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 Int) ) (!  (=> (= (type $generated@@631) ($generated@@284 $generated@@164)) (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@283 $generated@@631))) (< ($generated@@553 ($generated@@400 $generated@@155 ($generated@@515 $generated@@631 $generated@@632))) ($generated@@630 $generated@@631))))
 :pattern ( ($generated@@553 ($generated@@400 $generated@@155 ($generated@@515 $generated@@631 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@313 $generated@@164 $generated@@164)) (= (type $generated@@634) $generated@@64)) (= (type $generated@@635) $generated@@64)) ($generated@@148 $generated@@633 ($generated@@428 $generated@@634 $generated@@635))) (and (and ($generated@@148 ($generated@@311 $generated@@633) ($generated@@247 $generated@@634)) ($generated@@148 ($generated@@364 $generated@@633) ($generated@@247 $generated@@635))) ($generated@@148 ($generated@@399 $generated@@633) ($generated@@247 ($generated@@154 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@148 $generated@@633 ($generated@@428 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@331 $generated@@164 $generated@@164)) (= (type $generated@@637) $generated@@64)) (= (type $generated@@638) $generated@@64)) ($generated@@148 $generated@@636 ($generated@@436 $generated@@637 $generated@@638))) (and (and ($generated@@148 ($generated@@329 $generated@@636) ($generated@@252 $generated@@637)) ($generated@@148 ($generated@@375 $generated@@636) ($generated@@252 $generated@@638))) ($generated@@148 ($generated@@410 $generated@@636) ($generated@@252 ($generated@@154 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@148 $generated@@636 ($generated@@436 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@2) ($generated@@148 $generated@@639 $generated@@46))
 :pattern ( ($generated@@148 $generated@@639 $generated@@46))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@3) ($generated@@148 $generated@@640 $generated@@47))
 :pattern ( ($generated@@148 $generated@@640 $generated@@47))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@4) ($generated@@148 $generated@@641 $generated@@44))
 :pattern ( ($generated@@148 $generated@@641 $generated@@44))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@468) ($generated@@148 $generated@@642 $generated@@45))
 :pattern ( ($generated@@148 $generated@@642 $generated@@45))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@164) ($generated@@148 $generated@@643 $generated@@48))
 :pattern ( ($generated@@148 $generated@@643 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@644 () Bool)
(declare-fun $generated@@645 () Bool)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Bool)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Bool)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Bool)
(declare-fun $generated@@654 () Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Bool)
(declare-fun $generated@@661 () Bool)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Bool)
(declare-fun $generated@@666 () Bool)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 (T@U) Bool)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@655) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@656) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@649) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@670) ($generated@@176 $generated@@77 $generated@@4))) (= (type $generated@@671) $generated@@77)) (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@674) ($generated@@76 $generated@@164 $generated@@2))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 90) (let (($generated@@676  (=> (and (= $generated@@644 (forall (($generated@@677 Int) )  (=> (or (or (= $generated@@677 ($generated@@259 2)) (= $generated@@677 ($generated@@259 3))) (= $generated@@677 ($generated@@259 5))) (< $generated@@677 200)))) (= (ControlFlow 0 47) (- 0 46))) (= $generated@@645 $generated@@644))))
(let (($generated@@678  (=> (and (not (or (or (= $generated@@646 ($generated@@259 2)) (= $generated@@646 ($generated@@259 3))) (= $generated@@646 ($generated@@259 5)))) (= (ControlFlow 0 49) 47)) $generated@@676)))
(let (($generated@@679  (=> (and (or (or (= $generated@@646 ($generated@@259 2)) (= $generated@@646 ($generated@@259 3))) (= $generated@@646 ($generated@@259 5))) (= (ControlFlow 0 48) 47)) $generated@@676)))
(let (($generated@@680  (and (=> (= (ControlFlow 0 50) 48) $generated@@679) (=> (= (ControlFlow 0 50) 49) $generated@@678))))
(let (($generated@@681 true))
(let (($generated@@682  (=> (= $generated@@645 (forall (($generated@@683 Int) )  (=> (or (or (= $generated@@683 ($generated@@259 2)) (= $generated@@683 ($generated@@259 3))) (= $generated@@683 ($generated@@259 5))) (< $generated@@683 200)))) (and (=> (= (ControlFlow 0 51) 50) $generated@@680) (=> (= (ControlFlow 0 51) 45) $generated@@681)))))
(let (($generated@@684  (=> (and (not (or (or (= $generated@@647 ($generated@@259 2)) (= $generated@@647 ($generated@@259 3))) (= $generated@@647 ($generated@@259 5)))) (= (ControlFlow 0 53) 51)) $generated@@682)))
(let (($generated@@685  (=> (and (or (or (= $generated@@647 ($generated@@259 2)) (= $generated@@647 ($generated@@259 3))) (= $generated@@647 ($generated@@259 5))) (= (ControlFlow 0 52) 51)) $generated@@682)))
(let (($generated@@686  (and (=> (= (ControlFlow 0 54) 52) $generated@@685) (=> (= (ControlFlow 0 54) 53) $generated@@684))))
(let (($generated@@687 true))
(let (($generated@@688  (and (=> (= (ControlFlow 0 55) 54) $generated@@686) (=> (= (ControlFlow 0 55) 44) $generated@@687))))
(let (($generated@@689  (=> (and (= $generated@@648 (forall (($generated@@690 Int) ) (!  (=> (> ($generated ($generated@@81 $generated@@649 ($generated@@297 ($generated@@8 $generated@@690)))) 0) (< $generated@@690 200))
 :pattern ( ($generated@@81 $generated@@649 ($generated@@297 ($generated@@8 $generated@@690))))
))) (= (ControlFlow 0 35) (- 0 34))) (= $generated@@650 $generated@@648))))
(let (($generated@@691  (=> (and (>= 0 ($generated ($generated@@81 $generated@@649 ($generated@@297 ($generated@@8 $generated@@651))))) (= (ControlFlow 0 37) 35)) $generated@@689)))
(let (($generated@@692  (=> (and (> ($generated ($generated@@81 $generated@@649 ($generated@@297 ($generated@@8 $generated@@651)))) 0) (= (ControlFlow 0 36) 35)) $generated@@689)))
(let (($generated@@693  (and (=> (= (ControlFlow 0 38) 36) $generated@@692) (=> (= (ControlFlow 0 38) 37) $generated@@691))))
(let (($generated@@694 true))
(let (($generated@@695  (=> (= $generated@@650 (forall (($generated@@696 Int) ) (!  (=> (> ($generated ($generated@@81 $generated@@649 ($generated@@297 ($generated@@8 $generated@@696)))) 0) (< $generated@@696 200))
 :pattern ( ($generated@@81 $generated@@649 ($generated@@297 ($generated@@8 $generated@@696))))
))) (and (=> (= (ControlFlow 0 39) 38) $generated@@693) (=> (= (ControlFlow 0 39) 33) $generated@@694)))))
(let (($generated@@697  (=> (and (>= 0 ($generated ($generated@@81 $generated@@649 ($generated@@297 ($generated@@8 $generated@@652))))) (= (ControlFlow 0 41) 39)) $generated@@695)))
(let (($generated@@698  (=> (and (> ($generated ($generated@@81 $generated@@649 ($generated@@297 ($generated@@8 $generated@@652)))) 0) (= (ControlFlow 0 40) 39)) $generated@@695)))
(let (($generated@@699  (and (=> (= (ControlFlow 0 42) 40) $generated@@698) (=> (= (ControlFlow 0 42) 41) $generated@@697))))
(let (($generated@@700 true))
(let (($generated@@701  (=> (= $generated@@649 ($generated@@261 ($generated@@290 ($generated@@290 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 2)))) ($generated@@297 ($generated@@8 ($generated@@259 3)))) ($generated@@297 ($generated@@8 ($generated@@259 5)))))) (and (=> (= (ControlFlow 0 43) 42) $generated@@699) (=> (= (ControlFlow 0 43) 32) $generated@@700)))))
(let (($generated@@702  (=> (= $generated@@653 $generated@@654) (and (=> (= (ControlFlow 0 56) 55) $generated@@688) (=> (= (ControlFlow 0 56) 43) $generated@@701)))))
(let (($generated@@703  (and (=> (= (ControlFlow 0 27) (- 0 28)) (forall (($generated@@704 Int) ) (!  (=> true (= (> ($generated ($generated@@81 ($generated@@133 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@704)))) 0)  (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@704)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@704)))) ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@704))))))))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@704))))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@704))))
 :pattern ( ($generated@@81 ($generated@@133 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@704))))
))) (=> (forall (($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@2) true) (= (> ($generated ($generated@@81 ($generated@@133 $generated@@656 $generated@@655) ($generated@@297 $generated@@705))) 0)  (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 $generated@@705))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 $generated@@705))) ($generated ($generated@@81 $generated@@655 ($generated@@297 $generated@@705)))))))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 $generated@@705)))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 $generated@@705)))
 :pattern ( ($generated@@81 ($generated@@133 $generated@@656 $generated@@655) ($generated@@297 $generated@@705)))
)) (=> (= (ControlFlow 0 27) (- 0 26)) (= $generated@@653 $generated@@654))))))
(let (($generated@@706  (=> (and (>= 0 ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@657))))) (= (ControlFlow 0 30) 27)) $generated@@703)))
(let (($generated@@707  (=> (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@657)))) 0) (= (ControlFlow 0 29) 27)) $generated@@703)))
(let (($generated@@708  (and (=> (= (ControlFlow 0 31) 29) $generated@@707) (=> (= (ControlFlow 0 31) 30) $generated@@706))))
(let (($generated@@709 true))
(let (($generated@@710  (=> (= $generated@@654 (forall (($generated@@711 Int) ) (!  (=> (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@711)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@711)))) ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@711)))))) (< $generated@@711 200))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@711))))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@711))))
))) (and (and (=> (= (ControlFlow 0 57) 56) $generated@@702) (=> (= (ControlFlow 0 57) 31) $generated@@708)) (=> (= (ControlFlow 0 57) 25) $generated@@709)))))
(let (($generated@@712  (=> (and (not (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@658)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@658)))) ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@658))))))) (= (ControlFlow 0 59) 57)) $generated@@710)))
(let (($generated@@713  (=> (and (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@658)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@658)))) ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@658)))))) (= (ControlFlow 0 58) 57)) $generated@@710)))
(let (($generated@@714  (=> (>= 0 ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@658))))) (and (=> (= (ControlFlow 0 61) 58) $generated@@713) (=> (= (ControlFlow 0 61) 59) $generated@@712)))))
(let (($generated@@715  (=> (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@658)))) 0) (and (=> (= (ControlFlow 0 60) 58) $generated@@713) (=> (= (ControlFlow 0 60) 59) $generated@@712)))))
(let (($generated@@716  (and (=> (= (ControlFlow 0 62) 60) $generated@@715) (=> (= (ControlFlow 0 62) 61) $generated@@714))))
(let (($generated@@717 true))
(let (($generated@@718  (=> (= $generated@@653 (forall (($generated@@719 Int) ) (!  (=> (> ($generated ($generated@@81 ($generated@@133 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@719)))) 0) (< $generated@@719 200))
 :pattern ( ($generated@@81 ($generated@@133 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@719))))
))) (and (=> (= (ControlFlow 0 63) 62) $generated@@716) (=> (= (ControlFlow 0 63) 24) $generated@@717)))))
(let (($generated@@720  (=> (and (>= 0 ($generated ($generated@@81 ($generated@@133 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@659))))) (= (ControlFlow 0 65) 63)) $generated@@718)))
(let (($generated@@721  (=> (and (> ($generated ($generated@@81 ($generated@@133 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@659)))) 0) (= (ControlFlow 0 64) 63)) $generated@@718)))
(let (($generated@@722  (and (=> (= (ControlFlow 0 66) 64) $generated@@721) (=> (= (ControlFlow 0 66) 65) $generated@@720))))
(let (($generated@@723 true))
(let (($generated@@724  (=> (= $generated@@660 $generated@@661) (and (=> (= (ControlFlow 0 67) 66) $generated@@722) (=> (= (ControlFlow 0 67) 23) $generated@@723)))))
(let (($generated@@725  (and (=> (= (ControlFlow 0 14) (- 0 15)) (= $generated@@660 (forall (($generated@@726 Int) ) (!  (=> (and (and (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@726)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@726)))) 0)) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@726)))) 0)) (< $generated@@726 200))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@726))))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@726))))
 :pattern ( ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@726))))
)))) (=> (= $generated@@660 (forall (($generated@@727 Int) ) (!  (=> (and (and (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@727)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@727)))) 0)) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@727)))) 0)) (< $generated@@727 200))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@727))))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@727))))
 :pattern ( ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@727))))
))) (=> (= (ControlFlow 0 14) (- 0 13)) (= $generated@@660 $generated@@661))))))
(let (($generated@@728  (=> (and (not (and (and (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@662)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@662)))) 0)) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@662)))) 0))) (= (ControlFlow 0 17) 14)) $generated@@725)))
(let (($generated@@729  (=> (and (and (and (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@662)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@662)))) 0)) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@662)))) 0)) (= (ControlFlow 0 16) 14)) $generated@@725)))
(let (($generated@@730  (=> (not (and (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@662)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@662)))) 0))) (and (=> (= (ControlFlow 0 19) 16) $generated@@729) (=> (= (ControlFlow 0 19) 17) $generated@@728)))))
(let (($generated@@731  (=> (and (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@662)))) 0) (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@662)))) 0)) (and (=> (= (ControlFlow 0 18) 16) $generated@@729) (=> (= (ControlFlow 0 18) 17) $generated@@728)))))
(let (($generated@@732  (=> (>= 0 ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@662))))) (and (=> (= (ControlFlow 0 21) 18) $generated@@731) (=> (= (ControlFlow 0 21) 19) $generated@@730)))))
(let (($generated@@733  (=> (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@662)))) 0) (and (=> (= (ControlFlow 0 20) 18) $generated@@731) (=> (= (ControlFlow 0 20) 19) $generated@@730)))))
(let (($generated@@734  (and (=> (= (ControlFlow 0 22) 20) $generated@@733) (=> (= (ControlFlow 0 22) 21) $generated@@732))))
(let (($generated@@735 true))
(let (($generated@@736  (=> (= $generated@@661 (forall (($generated@@737 Int) ) (!  (=> (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@737)))) 0) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@737)))) 0)) (< $generated@@737 200))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@737))))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@737))))
))) (and (and (=> (= (ControlFlow 0 68) 67) $generated@@724) (=> (= (ControlFlow 0 68) 22) $generated@@734)) (=> (= (ControlFlow 0 68) 12) $generated@@735)))))
(let (($generated@@738  (=> (and (not (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@663)))) 0) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@663)))) 0))) (= (ControlFlow 0 70) 68)) $generated@@736)))
(let (($generated@@739  (=> (and (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@663)))) 0) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@663)))) 0)) (= (ControlFlow 0 69) 68)) $generated@@736)))
(let (($generated@@740  (=> (>= 0 ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@663))))) (and (=> (= (ControlFlow 0 72) 69) $generated@@739) (=> (= (ControlFlow 0 72) 70) $generated@@738)))))
(let (($generated@@741  (=> (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@663)))) 0) (and (=> (= (ControlFlow 0 71) 69) $generated@@739) (=> (= (ControlFlow 0 71) 70) $generated@@738)))))
(let (($generated@@742  (and (=> (= (ControlFlow 0 73) 71) $generated@@741) (=> (= (ControlFlow 0 73) 72) $generated@@740))))
(let (($generated@@743 true))
(let (($generated@@744  (=> (= $generated@@660 (forall (($generated@@745 Int) ) (!  (=> (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@745)))) 0) (< $generated@@745 200))
 :pattern ( ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@745))))
))) (and (=> (= (ControlFlow 0 74) 73) $generated@@742) (=> (= (ControlFlow 0 74) 11) $generated@@743)))))
(let (($generated@@746  (=> (and (>= 0 ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@664))))) (= (ControlFlow 0 76) 74)) $generated@@744)))
(let (($generated@@747  (=> (and (> ($generated ($generated@@81 ($generated@@134 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@664)))) 0) (= (ControlFlow 0 75) 74)) $generated@@744)))
(let (($generated@@748  (and (=> (= (ControlFlow 0 77) 75) $generated@@747) (=> (= (ControlFlow 0 77) 76) $generated@@746))))
(let (($generated@@749 true))
(let (($generated@@750  (=> (= $generated@@665 $generated@@666) (and (=> (= (ControlFlow 0 78) 77) $generated@@748) (=> (= (ControlFlow 0 78) 10) $generated@@749)))))
(let (($generated@@751  (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@752 Int) ) (!  (=> true (= (> ($generated ($generated@@81 ($generated@@135 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@752)))) 0)  (or (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@752)))) 0) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@752)))) 0))))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@752))))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@752))))
 :pattern ( ($generated@@81 ($generated@@135 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@752))))
))) (=> (forall (($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@753) $generated@@2) true) (= (> ($generated ($generated@@81 ($generated@@135 $generated@@656 $generated@@655) ($generated@@297 $generated@@753))) 0)  (or (> ($generated ($generated@@81 $generated@@656 ($generated@@297 $generated@@753))) 0) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 $generated@@753))) 0))))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 $generated@@753)))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 $generated@@753)))
 :pattern ( ($generated@@81 ($generated@@135 $generated@@656 $generated@@655) ($generated@@297 $generated@@753)))
)) (=> (= (ControlFlow 0 5) (- 0 4)) (= $generated@@665 $generated@@666))))))
(let (($generated@@754  (=> (and (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@667)))) 0) (= (ControlFlow 0 8) 5)) $generated@@751)))
(let (($generated@@755  (=> (and (>= 0 ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@667))))) (= (ControlFlow 0 7) 5)) $generated@@751)))
(let (($generated@@756  (and (=> (= (ControlFlow 0 9) 7) $generated@@755) (=> (= (ControlFlow 0 9) 8) $generated@@754))))
(let (($generated@@757 true))
(let (($generated@@758  (=> (= $generated@@666 (forall (($generated@@759 Int) ) (!  (=> (or (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@759)))) 0) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@759)))) 0)) (< $generated@@759 200))
 :pattern ( ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@759))))
 :pattern ( ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@759))))
))) (and (and (=> (= (ControlFlow 0 79) 78) $generated@@750) (=> (= (ControlFlow 0 79) 9) $generated@@756)) (=> (= (ControlFlow 0 79) 3) $generated@@757)))))
(let (($generated@@760  (=> (and (not (or (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@668)))) 0) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@668)))) 0))) (= (ControlFlow 0 81) 79)) $generated@@758)))
(let (($generated@@761  (=> (and (or (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@668)))) 0) (> ($generated ($generated@@81 $generated@@655 ($generated@@297 ($generated@@8 $generated@@668)))) 0)) (= (ControlFlow 0 80) 79)) $generated@@758)))
(let (($generated@@762  (=> (> ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@668)))) 0) (and (=> (= (ControlFlow 0 83) 80) $generated@@761) (=> (= (ControlFlow 0 83) 81) $generated@@760)))))
(let (($generated@@763  (=> (>= 0 ($generated ($generated@@81 $generated@@656 ($generated@@297 ($generated@@8 $generated@@668))))) (and (=> (= (ControlFlow 0 82) 80) $generated@@761) (=> (= (ControlFlow 0 82) 81) $generated@@760)))))
(let (($generated@@764  (and (=> (= (ControlFlow 0 84) 82) $generated@@763) (=> (= (ControlFlow 0 84) 83) $generated@@762))))
(let (($generated@@765 true))
(let (($generated@@766  (=> (= $generated@@665 (forall (($generated@@767 Int) ) (!  (=> (> ($generated ($generated@@81 ($generated@@135 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@767)))) 0) (< $generated@@767 200))
 :pattern ( ($generated@@81 ($generated@@135 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@767))))
))) (and (=> (= (ControlFlow 0 85) 84) $generated@@764) (=> (= (ControlFlow 0 85) 2) $generated@@765)))))
(let (($generated@@768  (=> (and (>= 0 ($generated ($generated@@81 ($generated@@135 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@669))))) (= (ControlFlow 0 87) 85)) $generated@@766)))
(let (($generated@@769  (=> (and (> ($generated ($generated@@81 ($generated@@135 $generated@@656 $generated@@655) ($generated@@297 ($generated@@8 $generated@@669)))) 0) (= (ControlFlow 0 86) 85)) $generated@@766)))
(let (($generated@@770  (and (=> (= (ControlFlow 0 88) 86) $generated@@769) (=> (= (ControlFlow 0 88) 87) $generated@@768))))
(let (($generated@@771 true))
(let (($generated@@772  (=> (= $generated@@670 ($generated@@175 $generated@@671 $generated@@672 $generated@@60 false)) (and (=> (= (ControlFlow 0 89) 88) $generated@@770) (=> (= (ControlFlow 0 89) 1) $generated@@771)))))
(let (($generated@@773  (=> (and ($generated@@265 $generated@@672) ($generated@@673 $generated@@672)) (=> (and (and ($generated@@148 $generated@@656 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@656 ($generated@@169 $generated@@46) $generated@@672)) (and ($generated@@148 $generated@@655 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@655 ($generated@@169 $generated@@46) $generated@@672))) (=> (and (and (and ($generated@@148 $generated@@674 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@674 ($generated@@169 $generated@@46) $generated@@672)) true) (and (= 0 $generated@@675) (= (ControlFlow 0 90) 89))) $generated@@772)))))
$generated@@773)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U T@U) T@U)
(declare-fun $generated@@334 (T@U Int) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@135 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325 $generated@@326)) ($generated@@134 $generated@@327)))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
 (=> (and (= (type $generated@@328) ($generated@@134 $generated@@330)) (= (type $generated@@329) ($generated@@134 $generated@@330))) (= ($generated@@272 ($generated@@324 $generated@@328 $generated@@329)) (+ ($generated@@272 $generated@@328) ($generated@@272 $generated@@329)))))
 :pattern ( ($generated@@272 ($generated@@324 $generated@@328 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@79 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@76 $generated@@332 $generated@@2)) (= ($generated@@168 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@81 $generated@@331 $generated@@333))) (<= ($generated ($generated@@81 $generated@@331 $generated@@333)) ($generated@@282 $generated@@331))))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@168 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 Int) ) (! (let (($generated@@337 ($generated@@135 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@337))
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 Int) ($generated@@340 T@U) ) (! (let (($generated@@341 (type $generated@@340)))
 (=> (= (type $generated@@338) ($generated@@134 $generated@@341)) (and (=> (= $generated@@339 ($generated@@272 $generated@@338)) (= ($generated@@334 ($generated@@133 $generated@@338 $generated@@340) $generated@@339) $generated@@340)) (=> (not (= $generated@@339 ($generated@@272 $generated@@338))) (= ($generated@@334 ($generated@@133 $generated@@338 $generated@@340) $generated@@339) ($generated@@334 $generated@@338 $generated@@339))))))
 :pattern ( ($generated@@334 ($generated@@133 $generated@@338 $generated@@340) $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@288 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@292 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@292 (type $generated@@349))))
(let (($generated@@351 ($generated@@291 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@290 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@289 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@306 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@310 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@310 (type $generated@@360))))
(let (($generated@@362 ($generated@@309 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@308 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@307 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@365) $generated@@64)) (= ($generated@@145 $generated@@364 ($generated@@167 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@364 $generated@@366)))) ($generated@@229 $generated@@366 $generated@@365))
 :pattern ( ($generated@@81 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@145 $generated@@364 ($generated@@167 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
 (=> (and (= (type $generated@@367) ($generated@@134 $generated@@370)) (= (type $generated@@368) ($generated@@134 $generated@@370))) (= ($generated@@132 ($generated@@324 $generated@@367 $generated@@368) $generated@@369)  (or ($generated@@132 $generated@@367 $generated@@369) ($generated@@132 $generated@@368 $generated@@369)))))
 :pattern ( ($generated@@132 ($generated@@324 $generated@@367 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
 (=> (= (type $generated@@371) ($generated@@134 $generated@@373)) (= ($generated@@132 $generated@@371 $generated@@372) (exists (($generated@@374 Int) ) (!  (and (and (<= 0 $generated@@374) (< $generated@@374 ($generated@@272 $generated@@371))) (= ($generated@@334 $generated@@371 $generated@@374) $generated@@372))
 :pattern ( ($generated@@334 $generated@@371 $generated@@374))
)))))
 :pattern ( ($generated@@132 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@238 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@158) ($generated@@0 ($generated@@81 $generated@@375 $generated@@378))) ($generated@@260 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@238 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@243 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@158) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@260 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@243 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@81 ($generated@@283 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@292 (type $generated@@391))))
(let (($generated@@393 ($generated@@291 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@76 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@395) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@394) ($generated@@156 ($generated@@386 $generated@@149 $generated@@395)))) (= ($generated@@81 ($generated@@387 $generated@@394) ($generated@@156 ($generated@@386 $generated@@149 $generated@@395))) ($generated@@157 ($generated@@386 $generated@@149 $generated@@395))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@310 (type $generated@@399))))
(let (($generated@@401 ($generated@@309 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@76 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@403) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@402) ($generated@@156 ($generated@@386 $generated@@149 $generated@@403)))) (= ($generated@@81 ($generated@@397 $generated@@402) ($generated@@156 ($generated@@386 $generated@@149 $generated@@403))) ($generated@@157 ($generated@@386 $generated@@149 $generated@@403))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@291 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@290 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@309 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@308 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@417) $generated@@421))) (and ($generated@@260 ($generated@@81 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@260 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@425) $generated@@429))) (and ($generated@@260 ($generated@@81 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@260 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@76 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@310 (type $generated@@432))))
(let (($generated@@434 ($generated@@309 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@308 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@307 $generated@@434 $generated@@433)) (= ($generated@@306 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@306 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (= ($generated@@357 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@357 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@310 (type $generated@@438))))
(let (($generated@@440 ($generated@@309 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@308 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@307 $generated@@440 $generated@@439)) (= ($generated@@396 $generated@@438) ($generated@@430 $generated@@158))))))
 :pattern ( ($generated@@396 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@292 (type $generated@@441))))
(let (($generated@@443 ($generated@@291 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@290 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@289 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@158) (= (type $generated@@445) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@441) ($generated@@277 ($generated@@228 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@385 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@310 (type $generated@@446))))
(let (($generated@@448 ($generated@@309 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@308 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@307 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@158) (= (type $generated@@450) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@446) ($generated@@277 ($generated@@228 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@396 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@229 $generated@@451 $generated@@46)) (and (= ($generated@@277 ($generated@@386 $generated@@2 $generated@@451)) $generated@@451) ($generated@@145 ($generated@@386 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@158) ($generated@@229 $generated@@452 $generated@@47)) (and (= ($generated@@277 ($generated@@386 $generated@@3 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@386 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@158) ($generated@@229 $generated@@453 $generated@@44)) (and (= ($generated@@277 ($generated@@386 $generated@@4 $generated@@453)) $generated@@453) ($generated@@145 ($generated@@386 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@158) ($generated@@229 $generated@@455 $generated@@45)) (and (= ($generated@@277 ($generated@@386 $generated@@454 $generated@@455)) $generated@@455) ($generated@@145 ($generated@@386 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@456) $generated@@457) ($generated@@145 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@2)) (<= 0 ($generated@@282 $generated@@458))))
 :pattern ( ($generated@@282 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@135 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@134 $generated@@461)) (<= 0 ($generated@@272 $generated@@460))))
 :pattern ( ($generated@@272 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@158) (= (type $generated@@483) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@148 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@148 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@148 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@148 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@158) (= (type $generated@@493) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@228 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@158) (= (type $generated@@495) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@228 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@134 $generated@@158)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@254 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@272 $generated@@496))) ($generated@@260 ($generated@@334 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@334 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@254 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@238 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@238 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@243 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@243 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@167 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@167 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@254 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@254 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@386 $generated@@519 ($generated@@277 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@277 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@145 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@520) $generated@@523))) (and ($generated@@229 ($generated@@81 ($generated@@387 $generated@@520) $generated@@523) $generated@@522) ($generated@@229 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@145 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@145 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@524) $generated@@527))) (and ($generated@@229 ($generated@@81 ($generated@@397 $generated@@524) $generated@@527) $generated@@526) ($generated@@229 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@145 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@158) (= (type $generated@@531) $generated@@158)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@158) (= (type $generated@@533) $generated@@158)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@228 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@228 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@158) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@229 $generated@@534 ($generated@@414 $generated@@535 $generated@@536))) (and (= ($generated@@277 ($generated@@386 ($generated@@290 $generated@@158 $generated@@158) $generated@@534)) $generated@@534) ($generated@@145 ($generated@@386 ($generated@@290 $generated@@158 $generated@@158) $generated@@534) ($generated@@414 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@534 ($generated@@414 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@158) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@229 $generated@@537 ($generated@@422 $generated@@538 $generated@@539))) (and (= ($generated@@277 ($generated@@386 ($generated@@308 $generated@@158 $generated@@158) $generated@@537)) $generated@@537) ($generated@@145 ($generated@@386 ($generated@@308 $generated@@158 $generated@@158) $generated@@537) ($generated@@422 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@422 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@158)) ($generated@@229 $generated@@542 ($generated@@148 $generated@@540 $generated@@541))) (and (= ($generated@@277 ($generated@@386 $generated@@149 $generated@@542)) $generated@@542) ($generated@@145 ($generated@@386 $generated@@149 $generated@@542) ($generated@@148 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@148 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@430 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@430 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@148 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@547 $generated@@548))
)))
(assert  (and (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@135 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551)) ($generated@@134 $generated@@552)))
 :pattern ( ($generated@@549 $generated@@551))
)) (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@135 (type $generated@@553))))
(= (type ($generated@@550 $generated@@553)) $generated@@554))
 :pattern ( ($generated@@550 $generated@@553))
))))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (=> (= (type $generated@@555) ($generated@@134 $generated@@557)) (and (= ($generated@@549 ($generated@@133 $generated@@555 $generated@@556)) $generated@@555) (= ($generated@@550 ($generated@@133 $generated@@555 $generated@@556)) $generated@@556))))
 :pattern ( ($generated@@133 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@149) (= ($generated@@528 ($generated@@277 $generated@@558)) ($generated@@529 $generated@@558)))
 :pattern ( ($generated@@528 ($generated@@277 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@158) ($generated@@229 $generated@@559 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@386 $generated@@2 $generated@@559)) $generated@@559) ($generated@@145 ($generated@@386 ($generated@@76 $generated@@158 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@158) (= (type $generated@@561) $generated@@64)) ($generated@@229 $generated@@560 ($generated@@238 $generated@@561))) (and (= ($generated@@277 ($generated@@386 ($generated@@76 $generated@@158 $generated@@4) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@386 ($generated@@76 $generated@@158 $generated@@4) $generated@@560) ($generated@@238 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@238 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@158) (= (type $generated@@563) $generated@@64)) ($generated@@229 $generated@@562 ($generated@@243 $generated@@563))) (and (= ($generated@@277 ($generated@@386 ($generated@@76 $generated@@158 $generated@@4) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@386 ($generated@@76 $generated@@158 $generated@@4) $generated@@562) ($generated@@243 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@562 ($generated@@243 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@158) (= (type $generated@@565) $generated@@64)) ($generated@@229 $generated@@564 ($generated@@167 $generated@@565))) (and (= ($generated@@277 ($generated@@386 ($generated@@76 $generated@@158 $generated@@2) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@386 ($generated@@76 $generated@@158 $generated@@2) $generated@@564) ($generated@@167 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@564 ($generated@@167 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@158) (= (type $generated@@567) $generated@@64)) ($generated@@229 $generated@@566 ($generated@@254 $generated@@567))) (and (= ($generated@@277 ($generated@@386 ($generated@@134 $generated@@158) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@386 ($generated@@134 $generated@@158) $generated@@566) ($generated@@254 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@566 ($generated@@254 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@568 ($generated@@167 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@568 $generated@@571)))) ($generated@@260 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@81 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@167 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@149) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@574) (and ($generated@@147 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@148 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@148 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@260 ($generated@@156 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@149) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@578) (and ($generated@@147 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@74 $generated@@576 ($generated@@148 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@74 $generated@@576 ($generated@@148 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@260 ($generated@@157 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 Int) ) (! (let (($generated@@583 ($generated@@135 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@134 $generated@@583)) (= (type $generated@@581) ($generated@@134 $generated@@583))) (and (=> (< $generated@@582 ($generated@@272 $generated@@580)) (= ($generated@@334 ($generated@@324 $generated@@580 $generated@@581) $generated@@582) ($generated@@334 $generated@@580 $generated@@582))) (=> (<= ($generated@@272 $generated@@580) $generated@@582) (= ($generated@@334 ($generated@@324 $generated@@580 $generated@@581) $generated@@582) ($generated@@334 $generated@@581 (- $generated@@582 ($generated@@272 $generated@@580))))))))
 :pattern ( ($generated@@334 ($generated@@324 $generated@@580 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@158) (= (type $generated@@585) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@584) ($generated@@250 $generated@@585)) ($generated@@250 ($generated@@228 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@584) ($generated@@250 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@586))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@587)) ($generated@@250 ($generated@@277 $generated@@587)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@135 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@134 $generated@@589)) (= ($generated@@272 $generated@@588) 0)) (= $generated@@588 ($generated@@163 $generated@@589))))
 :pattern ( ($generated@@272 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@76 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@282 ($generated@@82 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@282 $generated@@590) ($generated ($generated@@81 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@2)) ($generated@@74 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@3)) ($generated@@74 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@4)) ($generated@@74 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@454)) ($generated@@74 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@158)) ($generated@@74 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@134 $generated@@158)) (= (type $generated@@605) $generated@@64)) (= ($generated@@145 $generated@@604 ($generated@@254 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@272 $generated@@604))) ($generated@@229 ($generated@@334 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@334 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@145 $generated@@604 ($generated@@254 $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@272 $generated@@608))) (< ($generated@@529 ($generated@@386 $generated@@149 ($generated@@334 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@529 ($generated@@386 $generated@@149 ($generated@@334 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@611) $generated@@64)) (= (type $generated@@612) $generated@@64)) ($generated@@145 $generated@@610 ($generated@@414 $generated@@611 $generated@@612))) (and (and ($generated@@145 ($generated@@288 $generated@@610) ($generated@@238 $generated@@611)) ($generated@@145 ($generated@@346 $generated@@610) ($generated@@238 $generated@@612))) ($generated@@145 ($generated@@385 $generated@@610) ($generated@@238 ($generated@@148 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@145 $generated@@610 ($generated@@414 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@145 $generated@@613 ($generated@@422 $generated@@614 $generated@@615))) (and (and ($generated@@145 ($generated@@306 $generated@@613) ($generated@@243 $generated@@614)) ($generated@@145 ($generated@@357 $generated@@613) ($generated@@243 $generated@@615))) ($generated@@145 ($generated@@396 $generated@@613) ($generated@@243 ($generated@@148 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@145 $generated@@613 ($generated@@422 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@145 $generated@@616 $generated@@46))
 :pattern ( ($generated@@145 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@145 $generated@@617 $generated@@47))
 :pattern ( ($generated@@145 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@145 $generated@@618 $generated@@44))
 :pattern ( ($generated@@145 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@454) ($generated@@145 $generated@@619 $generated@@45))
 :pattern ( ($generated@@145 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@158) ($generated@@145 $generated@@620 $generated@@48))
 :pattern ( ($generated@@145 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Bool)
(declare-fun $generated@@625 () Bool)
(declare-fun $generated@@626 () Bool)
(declare-fun $generated@@627 () Bool)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(declare-fun $generated@@636 () Int)
(assert  (and (and (and (and (= (type $generated@@622) ($generated@@134 $generated@@158)) (= (type $generated@@621) ($generated@@134 $generated@@158))) (= (type $generated@@632) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@633) $generated@@77)) (= (type $generated@@634) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 44) (let (($generated@@637  (and (=> (= (ControlFlow 0 25) (- 0 26)) ($generated@@132 ($generated@@324 $generated@@621 $generated@@622) ($generated@@277 ($generated@@8 $generated@@623)))) (=> ($generated@@132 ($generated@@324 $generated@@621 $generated@@622) ($generated@@277 ($generated@@8 $generated@@623))) (=> (= (ControlFlow 0 25) (- 0 24)) (< $generated@@623 200))))))
(let (($generated@@638 true))
(let (($generated@@639  (=> (or ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@623))) ($generated@@132 $generated@@622 ($generated@@277 ($generated@@8 $generated@@623)))) (and (=> (= (ControlFlow 0 27) 23) $generated@@638) (=> (= (ControlFlow 0 27) 25) $generated@@637)))))
(let (($generated@@640  (=> (and ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@623))) (= (ControlFlow 0 29) 27)) $generated@@639)))
(let (($generated@@641  (=> (and (not ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@623)))) (= (ControlFlow 0 28) 27)) $generated@@639)))
(let (($generated@@642  (and (=> (= (ControlFlow 0 30) 28) $generated@@641) (=> (= (ControlFlow 0 30) 29) $generated@@640))))
(let (($generated@@643  (and (=> (= (ControlFlow 0 16) (- 0 17)) (=> $generated@@624 $generated@@625)) (=> (and (=> $generated@@624 $generated@@625) (= (ControlFlow 0 16) (- 0 15))) (= $generated@@625 $generated@@624)))))
(let (($generated@@644  (=> (and (not $generated@@624) (= (ControlFlow 0 19) 16)) $generated@@643)))
(let (($generated@@645  (=> (and $generated@@624 (= (ControlFlow 0 18) 16)) $generated@@643)))
(let (($generated@@646  (=> (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@2) (or ($generated@@132 $generated@@621 ($generated@@277 $generated@@647)) ($generated@@132 $generated@@622 ($generated@@277 $generated@@647)))) (< ($generated $generated@@647) 200))
 :pattern ( ($generated@@132 $generated@@622 ($generated@@277 $generated@@647)))
 :pattern ( ($generated@@132 $generated@@621 ($generated@@277 $generated@@647)))
)) (and (=> (= (ControlFlow 0 21) (- 0 22)) $generated@@624) (=> $generated@@624 (and (=> (= (ControlFlow 0 21) 18) $generated@@645) (=> (= (ControlFlow 0 21) 19) $generated@@644)))))))
(let (($generated@@648  (=> $generated@@625 (and (=> (= (ControlFlow 0 31) 30) $generated@@642) (=> (= (ControlFlow 0 31) 21) $generated@@646)))))
(let (($generated@@649  (=> (not $generated@@625) (and (=> (= (ControlFlow 0 20) 18) $generated@@645) (=> (= (ControlFlow 0 20) 19) $generated@@644)))))
(let (($generated@@650  (and (=> (= (ControlFlow 0 32) 31) $generated@@648) (=> (= (ControlFlow 0 32) 20) $generated@@649))))
(let (($generated@@651  (=> (and (= $generated@@626 (forall (($generated@@652 Int) ) (!  (=> ($generated@@132 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 $generated@@652))) (< $generated@@652 200))
 :pattern ( ($generated@@132 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 2))) ($generated@@277 ($generated@@8 3))) ($generated@@277 ($generated@@8 5))) ($generated@@277 ($generated@@8 $generated@@652))))
))) (= (ControlFlow 0 6) (- 0 5))) (= $generated@@627 $generated@@626))))
(let (($generated@@653  (=> (and (not ($generated@@132 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 $generated@@628)))) (= (ControlFlow 0 8) 6)) $generated@@651)))
(let (($generated@@654  (=> (and ($generated@@132 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 $generated@@628))) (= (ControlFlow 0 7) 6)) $generated@@651)))
(let (($generated@@655  (and (=> (= (ControlFlow 0 9) 7) $generated@@654) (=> (= (ControlFlow 0 9) 8) $generated@@653))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@627 (forall (($generated@@658 Int) ) (!  (=> ($generated@@132 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 $generated@@658))) (< $generated@@658 200))
 :pattern ( ($generated@@132 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 2))) ($generated@@277 ($generated@@8 3))) ($generated@@277 ($generated@@8 5))) ($generated@@277 ($generated@@8 $generated@@658))))
))) (and (=> (= (ControlFlow 0 10) 9) $generated@@655) (=> (= (ControlFlow 0 10) 4) $generated@@656)))))
(let (($generated@@659  (=> (and (not ($generated@@132 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 $generated@@629)))) (= (ControlFlow 0 12) 10)) $generated@@657)))
(let (($generated@@660  (=> (and ($generated@@132 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 $generated@@629))) (= (ControlFlow 0 11) 10)) $generated@@657)))
(let (($generated@@661  (and (=> (= (ControlFlow 0 13) 11) $generated@@660) (=> (= (ControlFlow 0 13) 12) $generated@@659))))
(let (($generated@@662 true))
(let (($generated@@663  (=> (= $generated@@625 $generated@@624) (and (=> (= (ControlFlow 0 14) 13) $generated@@661) (=> (= (ControlFlow 0 14) 3) $generated@@662)))))
(let (($generated@@664  (=> (= $generated@@624 (forall (($generated@@665 Int) ) (!  (=> (or ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@665))) ($generated@@132 $generated@@622 ($generated@@277 ($generated@@8 $generated@@665)))) (< $generated@@665 200))
 :pattern ( ($generated@@132 $generated@@622 ($generated@@277 ($generated@@8 $generated@@665))))
 :pattern ( ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@665))))
))) (and (=> (= (ControlFlow 0 33) 32) $generated@@650) (=> (= (ControlFlow 0 33) 14) $generated@@663)))))
(let (($generated@@666  (=> (and (not (or ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@630))) ($generated@@132 $generated@@622 ($generated@@277 ($generated@@8 $generated@@630))))) (= (ControlFlow 0 35) 33)) $generated@@664)))
(let (($generated@@667  (=> (and (or ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@630))) ($generated@@132 $generated@@622 ($generated@@277 ($generated@@8 $generated@@630)))) (= (ControlFlow 0 34) 33)) $generated@@664)))
(let (($generated@@668  (=> ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@630))) (and (=> (= (ControlFlow 0 37) 34) $generated@@667) (=> (= (ControlFlow 0 37) 35) $generated@@666)))))
(let (($generated@@669  (=> (not ($generated@@132 $generated@@621 ($generated@@277 ($generated@@8 $generated@@630)))) (and (=> (= (ControlFlow 0 36) 34) $generated@@667) (=> (= (ControlFlow 0 36) 35) $generated@@666)))))
(let (($generated@@670  (and (=> (= (ControlFlow 0 38) 36) $generated@@669) (=> (= (ControlFlow 0 38) 37) $generated@@668))))
(let (($generated@@671 true))
(let (($generated@@672  (=> (= $generated@@625 (forall (($generated@@673 Int) ) (!  (=> ($generated@@132 ($generated@@324 $generated@@621 $generated@@622) ($generated@@277 ($generated@@8 $generated@@673))) (< $generated@@673 200))
 :pattern ( ($generated@@132 ($generated@@324 $generated@@621 $generated@@622) ($generated@@277 ($generated@@8 $generated@@673))))
))) (and (=> (= (ControlFlow 0 39) 38) $generated@@670) (=> (= (ControlFlow 0 39) 2) $generated@@671)))))
(let (($generated@@674  (=> (and (not ($generated@@132 ($generated@@324 $generated@@621 $generated@@622) ($generated@@277 ($generated@@8 $generated@@631)))) (= (ControlFlow 0 41) 39)) $generated@@672)))
(let (($generated@@675  (=> (and ($generated@@132 ($generated@@324 $generated@@621 $generated@@622) ($generated@@277 ($generated@@8 $generated@@631))) (= (ControlFlow 0 40) 39)) $generated@@672)))
(let (($generated@@676  (and (=> (= (ControlFlow 0 42) 40) $generated@@675) (=> (= (ControlFlow 0 42) 41) $generated@@674))))
(let (($generated@@677 true))
(let (($generated@@678  (=> (= $generated@@632 ($generated@@173 $generated@@633 $generated@@634 $generated@@60 false)) (and (=> (= (ControlFlow 0 43) 42) $generated@@676) (=> (= (ControlFlow 0 43) 1) $generated@@677)))))
(let (($generated@@679  (=> (and (and (and ($generated@@259 $generated@@634) ($generated@@635 $generated@@634)) (and ($generated@@145 $generated@@621 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@621 ($generated@@254 $generated@@46) $generated@@634))) (and (and ($generated@@145 $generated@@622 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@622 ($generated@@254 $generated@@46) $generated@@634)) (and (= 0 $generated@@636) (= (ControlFlow 0 44) 43)))) $generated@@678)))
$generated@@679)))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T T@T) T@T)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@365 (T@U T@U) Bool)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@T T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@507 (T@U Int) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@563 (T@U T@U T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@651 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@133 $generated@@137 $generated@@138)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@137 $generated@@138))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@134)) (or ($generated@@135 $generated@@139 $generated@@140) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@140 $generated@@139)))) (= ($generated@@133 $generated@@139 $generated@@140) $generated@@140))
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@75 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@134)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@134)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@141 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@141 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@79 (type $generated@@220))))
(= (type ($generated@@219 $generated@@220 $generated@@221)) ($generated@@76 $generated@@222 $generated@@4)))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@79 (type $generated@@223))))
 (=> (and (= (type $generated@@223) ($generated@@76 $generated@@225 $generated@@4)) (= (type $generated@@224) ($generated@@76 $generated@@225 $generated@@4))) (= ($generated@@219 ($generated@@219 $generated@@223 $generated@@224) $generated@@224) ($generated@@219 $generated@@223 $generated@@224))))
 :pattern ( ($generated@@219 ($generated@@219 $generated@@223 $generated@@224) $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@226 $generated@@227 $generated@@228)) $generated@@145)
 :pattern ( ($generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@64) (= (type $generated@@230) $generated@@64)) (= (type $generated@@231) $generated@@134)) (= (type $generated@@232) $generated@@134)) (= ($generated@@141 ($generated@@226 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230))  (and ($generated@@136 $generated@@231 $generated@@229) ($generated@@136 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@226 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230)))
)))
(assert  (and (and (and (and (and (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (= ($generated@@1 ($generated@@236 $generated@@239 $generated@@240)) 17)) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@238 ($generated@@236 $generated@@241 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@236 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@235 ($generated@@236 $generated@@243 $generated@@244)) $generated@@244)
 :pattern ( ($generated@@236 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@235 (type $generated@@245))))
(let (($generated@@247 ($generated@@238 (type $generated@@245))))
(= (type ($generated@@233 $generated@@245)) ($generated@@76 $generated@@247 $generated@@246))))
 :pattern ( ($generated@@233 $generated@@245))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@235 (type $generated@@248))))
(let (($generated@@251 ($generated@@238 (type $generated@@248))))
(= (type ($generated@@234 $generated@@248 $generated@@249)) ($generated@@236 $generated@@251 $generated@@250))))
 :pattern ( ($generated@@234 $generated@@248 $generated@@249))
))) (forall (($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@238 (type $generated@@252))))
(= (type ($generated@@237 $generated@@252)) ($generated@@76 $generated@@253 $generated@@4)))
 :pattern ( ($generated@@237 $generated@@252))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@235 (type $generated@@254))))
(let (($generated@@258 (type $generated@@256)))
 (=> (and (and (= (type $generated@@254) ($generated@@236 $generated@@258 $generated@@257)) (= (type $generated@@255) ($generated@@76 $generated@@258 $generated@@4))) ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@234 $generated@@254 $generated@@255)) $generated@@256))) (= ($generated@@81 ($generated@@233 ($generated@@234 $generated@@254 $generated@@255)) $generated@@256) ($generated@@81 ($generated@@233 $generated@@254) $generated@@256)))))
 :pattern ( ($generated@@81 ($generated@@233 ($generated@@234 $generated@@254 $generated@@255)) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@145) (= (type $generated@@260) $generated@@145)) (= ($generated@@151 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@151 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@64)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@264) $generated@@64)) (= ($generated@@141 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@134) ($generated@@0 ($generated@@81 $generated@@263 $generated@@265))) ($generated@@136 $generated@@265 $generated@@264))
 :pattern ( ($generated@@81 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@141 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@141 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@134) ($generated@@0 ($generated@@81 $generated@@268 $generated@@270))) ($generated@@136 $generated@@270 $generated@@269))
 :pattern ( ($generated@@81 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@141 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@64)) (= (type $generated@@281) $generated@@134)) (= (type $generated@@282) $generated@@134)) (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@277 $generated@@283)) (= ($generated@@74 ($generated@@226 $generated@@281 $generated@@282) ($generated@@144 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@74 ($generated@@226 $generated@@281 $generated@@282) ($generated@@144 $generated@@279 $generated@@280) $generated@@283))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) $generated@@134)) (or ($generated@@135 $generated@@284 ($generated@@273 $generated@@285)) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@285 $generated@@284)))) (= ($generated@@133 $generated@@284 ($generated@@273 $generated@@285)) ($generated@@273 $generated@@285)))
 :weight 3
 :pattern ( ($generated@@133 $generated@@284 ($generated@@273 $generated@@285)))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@145) (= ($generated@@143 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@145) ($generated@@143 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@134) (= (type $generated@@291) $generated@@134)) (= $generated@@289 ($generated@@226 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@143 $generated@@289))
)))
(assert  (and (and (forall (($generated@@296 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@296)) 18)) (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
))) (forall (($generated@@298 T@T) ) (! (= (type ($generated@@292 $generated@@298)) ($generated@@294 $generated@@298))
 :pattern ( ($generated@@292 $generated@@298))
))))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@299)) 0)
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@134)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@278 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@74 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@278 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@76 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@81 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@311 $generated@@312 $generated@@313)) ($generated@@236 $generated@@312 $generated@@313))
 :pattern ( ($generated@@311 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@311 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@237 ($generated@@311 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2)) (= ($generated@@159 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@81 $generated@@335 $generated@@337))) (<= ($generated ($generated@@81 $generated@@335 $generated@@337)) ($generated@@305 $generated@@335))))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@159 $generated@@335))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@134)) (or ($generated@@135 $generated@@338 $generated@@339) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@339 $generated@@338)))) ($generated@@136 ($generated@@133 $generated@@338 $generated@@339) $generated@@338))
 :pattern ( ($generated@@133 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@235 (type $generated@@340))))
(let (($generated@@342 ($generated@@238 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@236 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@311 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@237 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@237 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@235 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@76 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@235 (type $generated@@347))))
(let (($generated@@349 ($generated@@238 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@236 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@311 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@321 (type $generated@@351))))
(let (($generated@@353 ($generated@@320 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@319 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@318 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@317 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@321 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@76 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@321 (type $generated@@358))))
(let (($generated@@360 ($generated@@320 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@319 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@318 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@363) $generated@@64)) (= ($generated@@141 $generated@@362 ($generated@@158 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@362 $generated@@364)))) ($generated@@136 $generated@@364 $generated@@363))
 :pattern ( ($generated@@81 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@141 $generated@@362 ($generated@@158 $generated@@363)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@79 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367 $generated@@368)) ($generated@@76 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@79 (type $generated@@370))))
 (=> (and (and (= (type $generated@@370) ($generated@@76 $generated@@372 $generated@@4)) (= (type $generated@@371) ($generated@@76 $generated@@372 $generated@@4))) ($generated@@365 $generated@@370 $generated@@371)) (and (= ($generated@@366 ($generated@@219 $generated@@370 $generated@@371) $generated@@370) $generated@@371) (= ($generated@@366 ($generated@@219 $generated@@370 $generated@@371) $generated@@371) $generated@@370))))
 :pattern ( ($generated@@219 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (and (= (type $generated@@373) ($generated@@76 $generated@@376 $generated@@4)) (= (type $generated@@374) ($generated@@76 $generated@@376 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@373 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 $generated@@373 $generated@@375)) (not ($generated@@0 ($generated@@81 $generated@@374 $generated@@375)))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@373 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@261 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@134) ($generated@@0 ($generated@@81 $generated@@377 $generated@@380))) ($generated@@278 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@81 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@261 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@266 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@134) ($generated@@0 ($generated@@81 $generated@@381 $generated@@384))) ($generated@@278 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@81 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@266 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@81 ($generated@@306 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@81 ($generated@@306 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@388 $generated@@390 $generated@@391))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@236 $generated@@134 $generated@@134)) (= (type $generated@@393) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@387 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@81 ($generated@@237 $generated@@392) ($generated@@152 ($generated@@388 $generated@@145 $generated@@393)))) (= ($generated@@81 ($generated@@233 $generated@@392) ($generated@@152 ($generated@@388 $generated@@145 $generated@@393))) ($generated@@153 ($generated@@388 $generated@@145 $generated@@393))))))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@321 (type $generated@@397))))
(let (($generated@@399 ($generated@@320 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@76 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@319 $generated@@134 $generated@@134)) (= (type $generated@@401) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@400) ($generated@@152 ($generated@@388 $generated@@145 $generated@@401)))) (= ($generated@@81 ($generated@@395 $generated@@400) ($generated@@152 ($generated@@388 $generated@@145 $generated@@401))) ($generated@@153 ($generated@@388 $generated@@145 $generated@@401))))))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@238 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@236 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@81 ($generated@@344 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@81 ($generated@@237 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@81 ($generated@@233 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@81 ($generated@@237 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@233 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@81 ($generated@@344 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@320 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@319 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@81 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@407) $generated@@411))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@64)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@236 $generated@@134 $generated@@134)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@237 $generated@@415) $generated@@419))) (and ($generated@@278 ($generated@@81 ($generated@@233 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@278 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@81 ($generated@@233 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@237 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@74 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@319 $generated@@134 $generated@@134)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) $generated@@64)) (= (type $generated@@426) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@423) $generated@@427))) (and ($generated@@278 ($generated@@81 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@278 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@74 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
 (=> (and (and (= (type $generated@@428) ($generated@@76 $generated@@431 $generated@@4)) (= (type $generated@@429) ($generated@@76 $generated@@431 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@428 $generated@@430))) ($generated@@0 ($generated@@81 ($generated@@219 $generated@@428 $generated@@429) $generated@@430))))
 :pattern ( ($generated@@219 $generated@@428 $generated@@429) ($generated@@81 $generated@@428 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
 (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@435 $generated@@4)) (= (type $generated@@433) ($generated@@76 $generated@@435 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@433 $generated@@434))) ($generated@@0 ($generated@@81 ($generated@@219 $generated@@432 $generated@@433) $generated@@434))))
 :pattern ( ($generated@@219 $generated@@432 $generated@@433) ($generated@@81 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
 (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@439 $generated@@4)) (= (type $generated@@437) ($generated@@76 $generated@@439 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@437 $generated@@438))) (not ($generated@@0 ($generated@@81 ($generated@@366 $generated@@436 $generated@@437) $generated@@438)))))
 :pattern ( ($generated@@366 $generated@@436 $generated@@437) ($generated@@81 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@76 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@321 (type $generated@@442))))
(let (($generated@@444 ($generated@@320 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@319 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@318 $generated@@444 $generated@@443)) (= ($generated@@317 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@317 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@321 (type $generated@@445))))
(let (($generated@@447 ($generated@@320 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@319 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@318 $generated@@447 $generated@@446)) (= ($generated@@355 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@355 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@321 (type $generated@@448))))
(let (($generated@@450 ($generated@@320 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@319 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@318 $generated@@450 $generated@@449)) (= ($generated@@394 $generated@@448) ($generated@@440 $generated@@134))))))
 :pattern ( ($generated@@394 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@235 (type $generated@@451))))
(let (($generated@@453 ($generated@@238 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@236 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@134) (= (type $generated@@455) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@387 $generated@@451) ($generated@@300 ($generated@@226 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@387 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@321 (type $generated@@456))))
(let (($generated@@458 ($generated@@320 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@319 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@318 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@134) (= (type $generated@@460) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@394 $generated@@456) ($generated@@300 ($generated@@226 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@394 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@134) ($generated@@136 $generated@@461 $generated@@46)) (and (= ($generated@@300 ($generated@@388 $generated@@2 $generated@@461)) $generated@@461) ($generated@@141 ($generated@@388 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@136 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@134) ($generated@@136 $generated@@462 $generated@@47)) (and (= ($generated@@300 ($generated@@388 $generated@@3 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@388 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@136 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@134) ($generated@@136 $generated@@463 $generated@@44)) (and (= ($generated@@300 ($generated@@388 $generated@@4 $generated@@463)) $generated@@463) ($generated@@141 ($generated@@388 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@136 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@134) ($generated@@136 $generated@@465 $generated@@45)) (and (= ($generated@@300 ($generated@@388 $generated@@464 $generated@@465)) $generated@@465) ($generated@@141 ($generated@@388 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@136 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@64) (= ($generated@@136 ($generated@@300 $generated@@466) $generated@@467) ($generated@@141 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@136 ($generated@@300 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@79 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@76 $generated@@469 $generated@@2)) (<= 0 ($generated@@305 $generated@@468))))
 :pattern ( ($generated@@305 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@295 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@294 $generated@@471)) (<= 0 ($generated@@293 $generated@@470))))
 :pattern ( ($generated@@293 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@412 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@412 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@412 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@412 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@412 $generated@@480 $generated@@481)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@420 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@420 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@420 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@420 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@72 ($generated@@420 $generated@@490 $generated@@491)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@134) (= (type $generated@@493) $generated@@134)) (= ($generated@@286 ($generated@@226 $generated@@492 $generated@@493)) $generated@@61))
 :pattern ( ($generated@@226 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@144 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@144 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@64) (= (type $generated@@501) $generated@@64)) (= ($generated@@498 ($generated@@144 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@144 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@134) (= (type $generated@@503) $generated@@134)) (= ($generated@@152 ($generated@@226 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@226 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@134) (= (type $generated@@505) $generated@@134)) (= ($generated@@153 ($generated@@226 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@226 $generated@@504 $generated@@505))
)))
(assert  (and (forall (($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@508))
)) (forall (($generated@@509 T@U) ($generated@@510 Int) ) (! (let (($generated@@511 ($generated@@295 (type $generated@@509))))
(= (type ($generated@@507 $generated@@509 $generated@@510)) $generated@@511))
 :pattern ( ($generated@@507 $generated@@509 $generated@@510))
))))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@294 $generated@@134)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@512 ($generated@@506 $generated@@513) $generated@@514) (forall (($generated@@515 Int) ) (!  (=> (and (<= 0 $generated@@515) (< $generated@@515 ($generated@@293 $generated@@512))) ($generated@@278 ($generated@@507 $generated@@512 $generated@@515) $generated@@513 $generated@@514))
 :pattern ( ($generated@@507 $generated@@512 $generated@@515))
))))
 :pattern ( ($generated@@74 $generated@@512 ($generated@@506 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@517 Int) ) (! (= ($generated@@516 ($generated@@75 $generated@@517)) $generated@@517)
 :pattern ( ($generated@@75 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@518 ($generated@@261 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@261 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@72 ($generated@@261 $generated@@521)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@522 ($generated@@266 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@266 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@72 ($generated@@266 $generated@@525)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@526 ($generated@@158 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@158 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@529)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@64) (= ($generated@@530 ($generated@@506 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@506 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@72 ($generated@@506 $generated@@533)) $generated@@57))
 :pattern ( ($generated@@506 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@388 $generated@@535 ($generated@@300 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@300 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@236 $generated@@134 $generated@@134)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) (= ($generated@@141 $generated@@536 ($generated@@412 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@237 $generated@@536) $generated@@539))) (and ($generated@@136 ($generated@@81 ($generated@@233 $generated@@536) $generated@@539) $generated@@538) ($generated@@136 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@81 ($generated@@233 $generated@@536) $generated@@539))
 :pattern ( ($generated@@81 ($generated@@237 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@141 $generated@@536 ($generated@@412 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@319 $generated@@134 $generated@@134)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@64)) (= ($generated@@141 $generated@@540 ($generated@@420 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@540) $generated@@543))) (and ($generated@@136 ($generated@@81 ($generated@@395 $generated@@540) $generated@@543) $generated@@542) ($generated@@136 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@540) $generated@@543))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@141 $generated@@540 ($generated@@420 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@235 (type $generated@@545))))
(let (($generated@@548 ($generated@@238 (type $generated@@545))))
(= (type ($generated@@544 $generated@@545 $generated@@546)) ($generated@@236 $generated@@548 $generated@@547))))
 :pattern ( ($generated@@544 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@235 (type $generated@@549))))
(let (($generated@@553 (type $generated@@551)))
 (=> (and (and (= (type $generated@@549) ($generated@@236 $generated@@553 $generated@@552)) (= (type $generated@@550) ($generated@@236 $generated@@553 $generated@@552))) ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@544 $generated@@549 $generated@@550)) $generated@@551))) (and (=> (not ($generated@@0 ($generated@@81 ($generated@@237 $generated@@550) $generated@@551))) (= ($generated@@81 ($generated@@233 ($generated@@544 $generated@@549 $generated@@550)) $generated@@551) ($generated@@81 ($generated@@233 $generated@@549) $generated@@551))) (=> ($generated@@0 ($generated@@81 ($generated@@237 $generated@@550) $generated@@551)) (= ($generated@@81 ($generated@@233 ($generated@@544 $generated@@549 $generated@@550)) $generated@@551) ($generated@@81 ($generated@@233 $generated@@550) $generated@@551)))))))
 :pattern ( ($generated@@81 ($generated@@233 ($generated@@544 $generated@@549 $generated@@550)) $generated@@551))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@134) (= (type $generated@@557) $generated@@134)) (< ($generated@@554 $generated@@556) ($generated@@555 ($generated@@226 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@226 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@134) (= (type $generated@@559) $generated@@134)) (< ($generated@@554 $generated@@559) ($generated@@555 ($generated@@226 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@226 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@79 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@76 $generated@@562 $generated@@4)) (= (type $generated@@561) ($generated@@76 $generated@@562 $generated@@4))) (= ($generated@@219 $generated@@560 ($generated@@219 $generated@@560 $generated@@561)) ($generated@@219 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@219 $generated@@560 ($generated@@219 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(let (($generated@@568 (type $generated@@565)))
(= (type ($generated@@563 $generated@@564 $generated@@565 $generated@@566)) ($generated@@236 $generated@@568 $generated@@567))))
 :pattern ( ($generated@@563 $generated@@564 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
(let (($generated@@574 (type $generated@@570)))
 (=> (and (= (type $generated@@569) ($generated@@236 $generated@@574 $generated@@573)) (= (type $generated@@571) $generated@@574)) (and (=> (= $generated@@571 $generated@@570) (and ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@563 $generated@@569 $generated@@570 $generated@@572)) $generated@@571)) (= ($generated@@81 ($generated@@233 ($generated@@563 $generated@@569 $generated@@570 $generated@@572)) $generated@@571) $generated@@572))) (=> (not (= $generated@@571 $generated@@570)) (and (= ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@563 $generated@@569 $generated@@570 $generated@@572)) $generated@@571)) ($generated@@0 ($generated@@81 ($generated@@237 $generated@@569) $generated@@571))) (= ($generated@@81 ($generated@@233 ($generated@@563 $generated@@569 $generated@@570 $generated@@572)) $generated@@571) ($generated@@81 ($generated@@233 $generated@@569) $generated@@571))))))))
 :pattern ( ($generated@@81 ($generated@@237 ($generated@@563 $generated@@569 $generated@@570 $generated@@572)) $generated@@571))
 :pattern ( ($generated@@81 ($generated@@233 ($generated@@563 $generated@@569 $generated@@570 $generated@@572)) $generated@@571))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@134) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@136 $generated@@575 ($generated@@412 $generated@@576 $generated@@577))) (and (= ($generated@@300 ($generated@@388 ($generated@@236 $generated@@134 $generated@@134) $generated@@575)) $generated@@575) ($generated@@141 ($generated@@388 ($generated@@236 $generated@@134 $generated@@134) $generated@@575) ($generated@@412 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@136 $generated@@575 ($generated@@412 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@134) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@64)) ($generated@@136 $generated@@578 ($generated@@420 $generated@@579 $generated@@580))) (and (= ($generated@@300 ($generated@@388 ($generated@@319 $generated@@134 $generated@@134) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@388 ($generated@@319 $generated@@134 $generated@@134) $generated@@578) ($generated@@420 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@136 $generated@@578 ($generated@@420 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@64) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@134)) ($generated@@136 $generated@@583 ($generated@@144 $generated@@581 $generated@@582))) (and (= ($generated@@300 ($generated@@388 $generated@@145 $generated@@583)) $generated@@583) ($generated@@141 ($generated@@388 $generated@@145 $generated@@583) ($generated@@144 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@136 $generated@@583 ($generated@@144 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (not ($generated@@0 ($generated@@81 ($generated@@440 $generated@@585) $generated@@584))))
 :pattern ( (let (($generated@@585 (type $generated@@584)))
($generated@@81 ($generated@@440 $generated@@585) $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@69)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@64) (= (type $generated@@589) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@588 $generated@@589)) $generated@@62) (= ($generated@@586 ($generated@@144 $generated@@588 $generated@@589)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@145) (= ($generated@@554 ($generated@@300 $generated@@590)) ($generated@@555 $generated@@590)))
 :pattern ( ($generated@@554 ($generated@@300 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@134) ($generated@@136 $generated@@591 ($generated@@75 0))) (and (= ($generated@@300 ($generated@@388 $generated@@2 $generated@@591)) $generated@@591) ($generated@@141 ($generated@@388 ($generated@@76 $generated@@134 $generated@@4) $generated@@591) ($generated@@75 0))))
 :pattern ( ($generated@@136 $generated@@591 ($generated@@75 0)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@134) (= (type $generated@@593) $generated@@64)) ($generated@@136 $generated@@592 ($generated@@261 $generated@@593))) (and (= ($generated@@300 ($generated@@388 ($generated@@76 $generated@@134 $generated@@4) $generated@@592)) $generated@@592) ($generated@@141 ($generated@@388 ($generated@@76 $generated@@134 $generated@@4) $generated@@592) ($generated@@261 $generated@@593))))
 :pattern ( ($generated@@136 $generated@@592 ($generated@@261 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@134) (= (type $generated@@595) $generated@@64)) ($generated@@136 $generated@@594 ($generated@@266 $generated@@595))) (and (= ($generated@@300 ($generated@@388 ($generated@@76 $generated@@134 $generated@@4) $generated@@594)) $generated@@594) ($generated@@141 ($generated@@388 ($generated@@76 $generated@@134 $generated@@4) $generated@@594) ($generated@@266 $generated@@595))))
 :pattern ( ($generated@@136 $generated@@594 ($generated@@266 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@134) (= (type $generated@@597) $generated@@64)) ($generated@@136 $generated@@596 ($generated@@158 $generated@@597))) (and (= ($generated@@300 ($generated@@388 ($generated@@76 $generated@@134 $generated@@2) $generated@@596)) $generated@@596) ($generated@@141 ($generated@@388 ($generated@@76 $generated@@134 $generated@@2) $generated@@596) ($generated@@158 $generated@@597))))
 :pattern ( ($generated@@136 $generated@@596 ($generated@@158 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@134) (= (type $generated@@599) $generated@@64)) ($generated@@136 $generated@@598 ($generated@@506 $generated@@599))) (and (= ($generated@@300 ($generated@@388 ($generated@@294 $generated@@134) $generated@@598)) $generated@@598) ($generated@@141 ($generated@@388 ($generated@@294 $generated@@134) $generated@@598) ($generated@@506 $generated@@599))))
 :pattern ( ($generated@@136 $generated@@598 ($generated@@506 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@235 (type $generated@@600))))
(let (($generated@@603 ($generated@@238 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@236 $generated@@603 $generated@@602)) (= (type $generated@@601) ($generated@@76 $generated@@603 $generated@@4))) (= ($generated@@237 ($generated@@234 $generated@@600 $generated@@601)) ($generated@@366 ($generated@@237 $generated@@600) $generated@@601)))))
 :pattern ( ($generated@@237 ($generated@@234 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@604 ($generated@@158 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@604 $generated@@607)))) ($generated@@278 $generated@@607 $generated@@605 $generated@@606))
 :pattern ( ($generated@@81 $generated@@604 $generated@@607))
))))
 :pattern ( ($generated@@74 $generated@@604 ($generated@@158 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@79 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@76 $generated@@610 $generated@@4)) (= (type $generated@@609) ($generated@@76 $generated@@610 $generated@@4))) (= ($generated@@365 $generated@@608 $generated@@609) (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@610) (or (not ($generated@@0 ($generated@@81 $generated@@608 $generated@@611))) (not ($generated@@0 ($generated@@81 $generated@@609 $generated@@611)))))
 :pattern ( ($generated@@81 $generated@@608 $generated@@611))
 :pattern ( ($generated@@81 $generated@@609 $generated@@611))
)))))
 :pattern ( ($generated@@365 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@145) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@277 $generated@@614) (and ($generated@@143 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@64) ($generated@@74 $generated@@612 ($generated@@144 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@74 $generated@@612 ($generated@@144 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@278 ($generated@@152 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@278 ($generated@@152 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@145) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@277 $generated@@618) (and ($generated@@143 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@64) ($generated@@74 $generated@@616 ($generated@@144 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@74 $generated@@616 ($generated@@144 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@278 ($generated@@153 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@278 ($generated@@153 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@134) (= (type $generated@@621) $generated@@134)) (= ($generated@@226 ($generated@@273 $generated@@620) ($generated@@273 $generated@@621)) ($generated@@273 ($generated@@226 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@226 ($generated@@273 $generated@@620) ($generated@@273 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@271 $generated@@622))) ($generated@@273 ($generated@@300 ($generated@@8 $generated@@622))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@271 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@300 ($generated@@273 $generated@@623)) ($generated@@273 ($generated@@300 $generated@@623)))
 :pattern ( ($generated@@300 ($generated@@273 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@235 (type $generated@@624))))
(let (($generated@@627 ($generated@@238 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@236 $generated@@627 $generated@@626)) (= (type $generated@@625) ($generated@@236 $generated@@627 $generated@@626))) (= ($generated@@237 ($generated@@544 $generated@@624 $generated@@625)) ($generated@@219 ($generated@@237 $generated@@624) ($generated@@237 $generated@@625))))))
 :pattern ( ($generated@@237 ($generated@@544 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@295 (type $generated@@628))))
 (=> (and (= (type $generated@@628) ($generated@@294 $generated@@629)) (= ($generated@@293 $generated@@628) 0)) (= $generated@@628 ($generated@@292 $generated@@629))))
 :pattern ( ($generated@@293 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@631)))
 (=> (and (and (= (type $generated@@630) ($generated@@76 $generated@@633 $generated@@2)) (= (type $generated@@632) $generated@@2)) (<= 0 ($generated $generated@@632))) (= ($generated@@305 ($generated@@82 $generated@@630 $generated@@631 $generated@@632)) (+ (- ($generated@@305 $generated@@630) ($generated ($generated@@81 $generated@@630 $generated@@631))) ($generated $generated@@632)))))
 :pattern ( ($generated@@305 ($generated@@82 $generated@@630 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@636)))
 (=> (and (= (type $generated@@634) ($generated@@76 $generated@@637 $generated@@4)) (= (type $generated@@635) ($generated@@76 $generated@@637 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@219 $generated@@634 $generated@@635) $generated@@636))  (or ($generated@@0 ($generated@@81 $generated@@634 $generated@@636)) ($generated@@0 ($generated@@81 $generated@@635 $generated@@636))))))
 :pattern ( ($generated@@81 ($generated@@219 $generated@@634 $generated@@635) $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@639) $generated@@2)) ($generated@@74 $generated@@639 $generated@@46 $generated@@638))
 :pattern ( ($generated@@74 $generated@@639 $generated@@46 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@641) $generated@@3)) ($generated@@74 $generated@@641 $generated@@47 $generated@@640))
 :pattern ( ($generated@@74 $generated@@641 $generated@@47 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@643) $generated@@4)) ($generated@@74 $generated@@643 $generated@@44 $generated@@642))
 :pattern ( ($generated@@74 $generated@@643 $generated@@44 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@645) $generated@@464)) ($generated@@74 $generated@@645 $generated@@45 $generated@@644))
 :pattern ( ($generated@@74 $generated@@645 $generated@@45 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@647) $generated@@134)) ($generated@@74 $generated@@647 $generated@@48 $generated@@646))
 :pattern ( ($generated@@74 $generated@@647 $generated@@48 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@294 $generated@@134)) (= (type $generated@@649) $generated@@64)) (= ($generated@@141 $generated@@648 ($generated@@506 $generated@@649)) (forall (($generated@@650 Int) ) (!  (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@293 $generated@@648))) ($generated@@136 ($generated@@507 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@507 $generated@@648 $generated@@650))
))))
 :pattern ( ($generated@@141 $generated@@648 ($generated@@506 $generated@@649)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 Int) ) (!  (=> (= (type $generated@@652) ($generated@@294 $generated@@134)) (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@293 $generated@@652))) (< ($generated@@555 ($generated@@388 $generated@@145 ($generated@@507 $generated@@652 $generated@@653))) ($generated@@651 $generated@@652))))
 :pattern ( ($generated@@555 ($generated@@388 $generated@@145 ($generated@@507 $generated@@652 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@236 $generated@@134 $generated@@134)) (= (type $generated@@655) $generated@@64)) (= (type $generated@@656) $generated@@64)) ($generated@@141 $generated@@654 ($generated@@412 $generated@@655 $generated@@656))) (and (and ($generated@@141 ($generated@@237 $generated@@654) ($generated@@261 $generated@@655)) ($generated@@141 ($generated@@344 $generated@@654) ($generated@@261 $generated@@656))) ($generated@@141 ($generated@@387 $generated@@654) ($generated@@261 ($generated@@144 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@141 $generated@@654 ($generated@@412 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@319 $generated@@134 $generated@@134)) (= (type $generated@@658) $generated@@64)) (= (type $generated@@659) $generated@@64)) ($generated@@141 $generated@@657 ($generated@@420 $generated@@658 $generated@@659))) (and (and ($generated@@141 ($generated@@317 $generated@@657) ($generated@@266 $generated@@658)) ($generated@@141 ($generated@@355 $generated@@657) ($generated@@266 $generated@@659))) ($generated@@141 ($generated@@394 $generated@@657) ($generated@@266 ($generated@@144 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@141 $generated@@657 ($generated@@420 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@2) ($generated@@141 $generated@@660 $generated@@46))
 :pattern ( ($generated@@141 $generated@@660 $generated@@46))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@3) ($generated@@141 $generated@@661 $generated@@47))
 :pattern ( ($generated@@141 $generated@@661 $generated@@47))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@4) ($generated@@141 $generated@@662 $generated@@44))
 :pattern ( ($generated@@141 $generated@@662 $generated@@44))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@464) ($generated@@141 $generated@@663 $generated@@45))
 :pattern ( ($generated@@141 $generated@@663 $generated@@45))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@134) ($generated@@141 $generated@@664 $generated@@48))
 :pattern ( ($generated@@141 $generated@@664 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Bool)
(declare-fun $generated@@669 () Bool)
(declare-fun $generated@@670 () Bool)
(declare-fun $generated@@671 () Bool)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Bool)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Bool)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@673) ($generated@@236 $generated@@134 $generated@@134)) (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@666) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@665) ($generated@@236 $generated@@134 $generated@@134))) (= (type $generated@@679) ($generated@@236 $generated@@134 $generated@@134))) (= (type $generated@@683) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@684) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 58) (let (($generated@@686  (and (=> (= (ControlFlow 0 28) (- 0 29)) ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@234 $generated@@665 $generated@@666)) ($generated@@300 ($generated@@8 $generated@@667))))) (=> ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@234 $generated@@665 $generated@@666)) ($generated@@300 ($generated@@8 $generated@@667)))) (=> (= (ControlFlow 0 28) (- 0 27)) (< $generated@@667 200))))))
(let (($generated@@687 true))
(let (($generated@@688  (=> (and ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@667)))) (not ($generated@@0 ($generated@@81 $generated@@666 ($generated@@300 ($generated@@8 $generated@@667)))))) (and (=> (= (ControlFlow 0 30) 26) $generated@@687) (=> (= (ControlFlow 0 30) 28) $generated@@686)))))
(let (($generated@@689  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@667))))) (= (ControlFlow 0 32) 30)) $generated@@688)))
(let (($generated@@690  (=> (and ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@667)))) (= (ControlFlow 0 31) 30)) $generated@@688)))
(let (($generated@@691  (and (=> (= (ControlFlow 0 33) 31) $generated@@690) (=> (= (ControlFlow 0 33) 32) $generated@@689))))
(let (($generated@@692  (and (=> (= (ControlFlow 0 19) (- 0 20)) (=> $generated@@668 $generated@@669)) (=> (and (=> $generated@@668 $generated@@669) (= (ControlFlow 0 19) (- 0 18))) (= $generated@@669 $generated@@668)))))
(let (($generated@@693  (=> (and (not $generated@@668) (= (ControlFlow 0 22) 19)) $generated@@692)))
(let (($generated@@694  (=> (and $generated@@668 (= (ControlFlow 0 21) 19)) $generated@@692)))
(let (($generated@@695  (=> (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@2) (=> (and ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 $generated@@696))) (not ($generated@@0 ($generated@@81 $generated@@666 ($generated@@300 $generated@@696))))) (< ($generated $generated@@696) 200)))
 :pattern ( ($generated@@81 $generated@@666 ($generated@@300 $generated@@696)))
 :pattern ( ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 $generated@@696)))
)) (and (=> (= (ControlFlow 0 24) (- 0 25)) $generated@@668) (=> $generated@@668 (and (=> (= (ControlFlow 0 24) 21) $generated@@694) (=> (= (ControlFlow 0 24) 22) $generated@@693)))))))
(let (($generated@@697  (=> $generated@@669 (and (=> (= (ControlFlow 0 34) 33) $generated@@691) (=> (= (ControlFlow 0 34) 24) $generated@@695)))))
(let (($generated@@698  (=> (not $generated@@669) (and (=> (= (ControlFlow 0 23) 21) $generated@@694) (=> (= (ControlFlow 0 23) 22) $generated@@693)))))
(let (($generated@@699  (and (=> (= (ControlFlow 0 35) 34) $generated@@697) (=> (= (ControlFlow 0 35) 23) $generated@@698))))
(let (($generated@@700  (=> (and ($generated@@135 ($generated@@412 $generated@@46 $generated@@46) ($generated@@300 ($generated@@273 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50))))))) (= $generated@@670 (forall (($generated@@701 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@388 ($generated@@236 $generated@@134 $generated@@134) ($generated@@133 ($generated@@412 $generated@@46 $generated@@46) ($generated@@300 ($generated@@273 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50))))))))) ($generated@@300 ($generated@@8 $generated@@701)))) (< $generated@@701 200))
 :pattern ( ($generated@@81 ($generated@@237 ($generated@@388 ($generated@@236 $generated@@134 $generated@@134) ($generated@@133 ($generated@@412 $generated@@46 $generated@@46) ($generated@@300 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 2)) ($generated@@300 ($generated@@8 20))) ($generated@@300 ($generated@@8 3)) ($generated@@300 ($generated@@8 30))) ($generated@@300 ($generated@@8 5)) ($generated@@300 ($generated@@8 50))))))) ($generated@@300 ($generated@@8 $generated@@701))))
)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (= $generated@@671 $generated@@670)) (=> (= $generated@@671 $generated@@670) (=> (= (ControlFlow 0 8) (- 0 7)) ($generated@@0 ($generated@@273 ($generated@@11 false)))))))))
(let (($generated@@702  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@388 ($generated@@236 $generated@@134 $generated@@134) ($generated@@133 ($generated@@412 $generated@@46 $generated@@46) ($generated@@300 ($generated@@273 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50))))))))) ($generated@@300 ($generated@@8 $generated@@672))))) (= (ControlFlow 0 11) 8)) $generated@@700)))
(let (($generated@@703  (=> (and ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@388 ($generated@@236 $generated@@134 $generated@@134) ($generated@@133 ($generated@@412 $generated@@46 $generated@@46) ($generated@@300 ($generated@@273 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50))))))))) ($generated@@300 ($generated@@8 $generated@@672)))) (= (ControlFlow 0 10) 8)) $generated@@700)))
(let (($generated@@704  (=> (= $generated@@673 ($generated@@273 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50)))))) (=> (and ($generated@@74 $generated@@673 ($generated@@412 $generated@@46 $generated@@46) $generated@@674) ($generated@@135 ($generated@@412 $generated@@46 $generated@@46) ($generated@@300 ($generated@@273 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50)))))))) (and (=> (= (ControlFlow 0 12) 10) $generated@@703) (=> (= (ControlFlow 0 12) 11) $generated@@702))))))
(let (($generated@@705 true))
(let (($generated@@706  (=> (= $generated@@671 (forall (($generated@@707 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50))))) ($generated@@300 ($generated@@8 $generated@@707)))) (< $generated@@707 200))
 :pattern ( ($generated@@81 ($generated@@237 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 2)) ($generated@@300 ($generated@@8 20))) ($generated@@300 ($generated@@8 3)) ($generated@@300 ($generated@@8 30))) ($generated@@300 ($generated@@8 5)) ($generated@@300 ($generated@@8 50)))) ($generated@@300 ($generated@@8 $generated@@707))))
))) (and (=> (= (ControlFlow 0 13) 12) $generated@@704) (=> (= (ControlFlow 0 13) 6) $generated@@705)))))
(let (($generated@@708  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50))))) ($generated@@300 ($generated@@8 $generated@@675))))) (= (ControlFlow 0 15) 13)) $generated@@706)))
(let (($generated@@709  (=> (and ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@563 ($generated@@563 ($generated@@563 ($generated@@311 $generated@@134 $generated@@134) ($generated@@300 ($generated@@8 ($generated@@271 2))) ($generated@@300 ($generated@@8 ($generated@@271 20)))) ($generated@@300 ($generated@@8 ($generated@@271 3))) ($generated@@300 ($generated@@8 ($generated@@271 30)))) ($generated@@300 ($generated@@8 ($generated@@271 5))) ($generated@@300 ($generated@@8 ($generated@@271 50))))) ($generated@@300 ($generated@@8 $generated@@675)))) (= (ControlFlow 0 14) 13)) $generated@@706)))
(let (($generated@@710  (and (=> (= (ControlFlow 0 16) 14) $generated@@709) (=> (= (ControlFlow 0 16) 15) $generated@@708))))
(let (($generated@@711 true))
(let (($generated@@712  (=> (= $generated@@669 $generated@@668) (and (=> (= (ControlFlow 0 17) 16) $generated@@710) (=> (= (ControlFlow 0 17) 5) $generated@@711)))))
(let (($generated@@713  (=> (= $generated@@668 (forall (($generated@@714 Int) ) (!  (=> (and ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@714)))) (not ($generated@@0 ($generated@@81 $generated@@666 ($generated@@300 ($generated@@8 $generated@@714)))))) (< $generated@@714 200))
 :pattern ( ($generated@@81 $generated@@666 ($generated@@300 ($generated@@8 $generated@@714))))
 :pattern ( ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@714))))
))) (and (=> (= (ControlFlow 0 36) 35) $generated@@699) (=> (= (ControlFlow 0 36) 17) $generated@@712)))))
(let (($generated@@715  (=> (and (not (and ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@676)))) (not ($generated@@0 ($generated@@81 $generated@@666 ($generated@@300 ($generated@@8 $generated@@676))))))) (= (ControlFlow 0 38) 36)) $generated@@713)))
(let (($generated@@716  (=> (and (and ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@676)))) (not ($generated@@0 ($generated@@81 $generated@@666 ($generated@@300 ($generated@@8 $generated@@676)))))) (= (ControlFlow 0 37) 36)) $generated@@713)))
(let (($generated@@717  (=> (not ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@676))))) (and (=> (= (ControlFlow 0 40) 37) $generated@@716) (=> (= (ControlFlow 0 40) 38) $generated@@715)))))
(let (($generated@@718  (=> ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@676)))) (and (=> (= (ControlFlow 0 39) 37) $generated@@716) (=> (= (ControlFlow 0 39) 38) $generated@@715)))))
(let (($generated@@719  (and (=> (= (ControlFlow 0 41) 39) $generated@@718) (=> (= (ControlFlow 0 41) 40) $generated@@717))))
(let (($generated@@720 true))
(let (($generated@@721  (=> (= $generated@@669 (forall (($generated@@722 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@234 $generated@@665 $generated@@666)) ($generated@@300 ($generated@@8 $generated@@722)))) (< $generated@@722 200))
 :pattern ( ($generated@@81 ($generated@@237 ($generated@@234 $generated@@665 $generated@@666)) ($generated@@300 ($generated@@8 $generated@@722))))
))) (and (=> (= (ControlFlow 0 42) 41) $generated@@719) (=> (= (ControlFlow 0 42) 4) $generated@@720)))))
(let (($generated@@723  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@234 $generated@@665 $generated@@666)) ($generated@@300 ($generated@@8 $generated@@677))))) (= (ControlFlow 0 44) 42)) $generated@@721)))
(let (($generated@@724  (=> (and ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@234 $generated@@665 $generated@@666)) ($generated@@300 ($generated@@8 $generated@@677)))) (= (ControlFlow 0 43) 42)) $generated@@721)))
(let (($generated@@725  (and (=> (= (ControlFlow 0 45) 43) $generated@@724) (=> (= (ControlFlow 0 45) 44) $generated@@723))))
(let (($generated@@726 true))
(let (($generated@@727  (=> (= $generated@@678 (forall (($generated@@728 Int) ) (!  (=> (or ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@728)))) ($generated@@0 ($generated@@81 ($generated@@237 $generated@@679) ($generated@@300 ($generated@@8 $generated@@728))))) (< $generated@@728 200))
 :pattern ( ($generated@@81 ($generated@@237 $generated@@679) ($generated@@300 ($generated@@8 $generated@@728))))
 :pattern ( ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@728))))
))) (and (=> (= (ControlFlow 0 46) (- 0 47)) (= $generated@@680 $generated@@678)) (=> (= $generated@@680 $generated@@678) (and (=> (= (ControlFlow 0 46) 45) $generated@@725) (=> (= (ControlFlow 0 46) 3) $generated@@726)))))))
(let (($generated@@729  (=> (and (not (or ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@681)))) ($generated@@0 ($generated@@81 ($generated@@237 $generated@@679) ($generated@@300 ($generated@@8 $generated@@681)))))) (= (ControlFlow 0 49) 46)) $generated@@727)))
(let (($generated@@730  (=> (and (or ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@681)))) ($generated@@0 ($generated@@81 ($generated@@237 $generated@@679) ($generated@@300 ($generated@@8 $generated@@681))))) (= (ControlFlow 0 48) 46)) $generated@@727)))
(let (($generated@@731  (=> ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@681)))) (and (=> (= (ControlFlow 0 51) 48) $generated@@730) (=> (= (ControlFlow 0 51) 49) $generated@@729)))))
(let (($generated@@732  (=> (not ($generated@@0 ($generated@@81 ($generated@@237 $generated@@665) ($generated@@300 ($generated@@8 $generated@@681))))) (and (=> (= (ControlFlow 0 50) 48) $generated@@730) (=> (= (ControlFlow 0 50) 49) $generated@@729)))))
(let (($generated@@733  (and (=> (= (ControlFlow 0 52) 50) $generated@@732) (=> (= (ControlFlow 0 52) 51) $generated@@731))))
(let (($generated@@734 true))
(let (($generated@@735  (=> (= $generated@@680 (forall (($generated@@736 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@544 $generated@@665 $generated@@679)) ($generated@@300 ($generated@@8 $generated@@736)))) (< $generated@@736 200))
 :pattern ( ($generated@@81 ($generated@@237 ($generated@@544 $generated@@665 $generated@@679)) ($generated@@300 ($generated@@8 $generated@@736))))
))) (and (=> (= (ControlFlow 0 53) 52) $generated@@733) (=> (= (ControlFlow 0 53) 2) $generated@@734)))))
(let (($generated@@737  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@544 $generated@@665 $generated@@679)) ($generated@@300 ($generated@@8 $generated@@682))))) (= (ControlFlow 0 55) 53)) $generated@@735)))
(let (($generated@@738  (=> (and ($generated@@0 ($generated@@81 ($generated@@237 ($generated@@544 $generated@@665 $generated@@679)) ($generated@@300 ($generated@@8 $generated@@682)))) (= (ControlFlow 0 54) 53)) $generated@@735)))
(let (($generated@@739  (and (=> (= (ControlFlow 0 56) 54) $generated@@738) (=> (= (ControlFlow 0 56) 55) $generated@@737))))
(let (($generated@@740 true))
(let (($generated@@741  (=> (= $generated@@683 ($generated@@164 $generated@@684 $generated@@674 $generated@@60 false)) (and (=> (= (ControlFlow 0 57) 56) $generated@@739) (=> (= (ControlFlow 0 57) 1) $generated@@740)))))
(let (($generated@@742  (=> (and ($generated@@277 $generated@@674) ($generated@@685 $generated@@674)) (=> (and (and (and ($generated@@141 $generated@@665 ($generated@@412 $generated@@46 $generated@@46)) ($generated@@74 $generated@@665 ($generated@@412 $generated@@46 $generated@@46) $generated@@674)) (and ($generated@@141 $generated@@679 ($generated@@412 $generated@@46 $generated@@46)) ($generated@@74 $generated@@679 ($generated@@412 $generated@@46 $generated@@46) $generated@@674))) (and (and ($generated@@141 $generated@@666 ($generated@@261 $generated@@46)) ($generated@@74 $generated@@666 ($generated@@261 $generated@@46) $generated@@674)) (and (= 1 $generated@@132) (= (ControlFlow 0 58) 57)))) $generated@@741))))
$generated@@742)))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@331 (T@U T@U) Bool)
(declare-fun $generated@@336 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U T@U) Bool)
(declare-fun $generated@@543 (T@U T@U Int) Bool)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@332))))
 (=> (and (= (type $generated@@332) ($generated@@76 $generated@@334 $generated@@2)) (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2))) (= ($generated@@331 $generated@@332 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (= ($generated ($generated@@81 $generated@@332 $generated@@335)) ($generated ($generated@@81 $generated@@333 $generated@@335))))
 :pattern ( ($generated@@81 $generated@@332 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@337))))
 (=> (and (= (type $generated@@337) ($generated@@76 $generated@@339 $generated@@2)) (= (type $generated@@338) ($generated@@76 $generated@@339 $generated@@2))) (= ($generated@@336 $generated@@337 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (<= ($generated ($generated@@81 $generated@@337 $generated@@340)) ($generated ($generated@@81 $generated@@338 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@342) $generated@@64)) (= (type $generated@@343) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@341 ($generated@@221 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) ($generated@@0 ($generated@@81 $generated@@341 $generated@@344))) ($generated@@236 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@81 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@74 $generated@@341 ($generated@@221 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@226 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@236 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@226 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@350) $generated@@349)) 0))
 :pattern ( (let (($generated@@350 (type $generated@@349)))
($generated@@81 ($generated@@262 $generated@@350) $generated@@349)))
)))
(assert  (and (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@351 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@351 $generated@@354))
)) (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@352 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@352 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@271 (type $generated@@357))))
(let (($generated@@359 ($generated@@270 (type $generated@@357))))
(= (type ($generated@@353 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@353 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) ($generated@@143 ($generated@@352 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@353 $generated@@360) ($generated@@143 ($generated@@352 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@352 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@360) $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@289 (type $generated@@365))))
(let (($generated@@367 ($generated@@288 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@368) ($generated@@143 ($generated@@352 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@363 $generated@@368) ($generated@@143 ($generated@@352 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@352 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(let (($generated@@373 ($generated@@270 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@269 $generated@@373 $generated@@372)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@370) $generated@@371)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@370) $generated@@374)) (= $generated@@371 ($generated@@81 ($generated@@353 $generated@@370) $generated@@374))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@370) $generated@@374))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@370) $generated@@374))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@288 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@287 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@81 ($generated@@363 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@383) $generated@@387))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@236 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))) (and ($generated@@236 ($generated@@81 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@236 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@79 (type $generated@@396))))
 (=> (and (and (= (type $generated@@396) ($generated@@76 $generated@@398 $generated@@2)) (= (type $generated@@397) ($generated@@76 $generated@@398 $generated@@2))) ($generated@@331 $generated@@396 $generated@@397)) (= $generated@@396 $generated@@397)))
 :pattern ( ($generated@@331 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@289 (type $generated@@401))))
(let (($generated@@403 ($generated@@288 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@287 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@286 $generated@@403 $generated@@402)) (= ($generated@@285 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@285 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@289 (type $generated@@404))))
(let (($generated@@406 ($generated@@288 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@287 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@286 $generated@@406 $generated@@405)) (= ($generated@@321 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@321 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@289 (type $generated@@407))))
(let (($generated@@409 ($generated@@288 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@287 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@286 $generated@@409 $generated@@408)) (= ($generated@@362 $generated@@407) ($generated@@399 $generated@@145))))))
 :pattern ( ($generated@@362 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@271 (type $generated@@410))))
(let (($generated@@412 ($generated@@270 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@269 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@268 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@145) (= (type $generated@@414) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@410) ($generated@@256 ($generated@@211 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@351 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@289 (type $generated@@415))))
(let (($generated@@417 ($generated@@288 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@287 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@286 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@415) ($generated@@256 ($generated@@211 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@212 $generated@@420 $generated@@46)) (and (= ($generated@@256 ($generated@@352 $generated@@2 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@352 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@47)) (and (= ($generated@@256 ($generated@@352 $generated@@3 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@352 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@212 $generated@@422 $generated@@44)) (and (= ($generated@@256 ($generated@@352 $generated@@4 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@352 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@212 $generated@@424 $generated@@45)) (and (= ($generated@@256 ($generated@@352 $generated@@423 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@352 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@425) $generated@@426) ($generated@@132 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@76 $generated@@428 $generated@@2)) (<= 0 ($generated@@261 $generated@@427))))
 :pattern ( ($generated@@261 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@251 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@250 $generated@@430)) (<= 0 ($generated@@249 $generated@@429))))
 :pattern ( ($generated@@249 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@380 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@380 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@380 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@380 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@380 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@388 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@388 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@388 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@388 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) (= (type $generated@@452) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@135 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@135 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@135 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@211 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@211 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@251 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@250 $generated@@145)) (= (type $generated@@472) $generated@@64)) (= (type $generated@@473) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@249 $generated@@471))) ($generated@@236 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@74 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@75 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@75 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@221 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@221 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@226 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@226 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@150 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@150 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@352 $generated@@494 ($generated@@256 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@256 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= ($generated@@132 $generated@@495 ($generated@@380 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@495) $generated@@498))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@495) $generated@@498) $generated@@497) ($generated@@212 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@495) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@132 $generated@@495 ($generated@@380 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@132 $generated@@499 ($generated@@388 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@499) $generated@@502))) (and ($generated@@212 ($generated@@81 ($generated@@363 $generated@@499) $generated@@502) $generated@@501) ($generated@@212 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@132 $generated@@499 ($generated@@388 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@145)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@211 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@211 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) (= (type $generated@@508) $generated@@145)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@211 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@211 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@380 $generated@@510 $generated@@511))) (and (= ($generated@@256 ($generated@@352 ($generated@@269 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@352 ($generated@@269 $generated@@145 $generated@@145) $generated@@509) ($generated@@380 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@380 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@512 ($generated@@388 $generated@@513 $generated@@514))) (and (= ($generated@@256 ($generated@@352 ($generated@@287 $generated@@145 $generated@@145) $generated@@512)) $generated@@512) ($generated@@132 ($generated@@352 ($generated@@287 $generated@@145 $generated@@145) $generated@@512) ($generated@@388 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@388 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@145)) ($generated@@212 $generated@@517 ($generated@@135 $generated@@515 $generated@@516))) (and (= ($generated@@256 ($generated@@352 $generated@@136 $generated@@517)) $generated@@517) ($generated@@132 ($generated@@352 $generated@@136 $generated@@517) ($generated@@135 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@135 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@81 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@81 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@135 $generated@@522 $generated@@523)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@136) (= ($generated@@503 ($generated@@256 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@256 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) ($generated@@212 $generated@@525 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@352 $generated@@2 $generated@@525)) $generated@@525) ($generated@@132 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@75 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@212 $generated@@526 ($generated@@221 $generated@@527))) (and (= ($generated@@256 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@221 $generated@@527))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@221 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@528 ($generated@@226 $generated@@529))) (and (= ($generated@@256 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@528) ($generated@@226 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@528 ($generated@@226 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@150 $generated@@531))) (and (= ($generated@@256 ($generated@@352 ($generated@@76 $generated@@145 $generated@@2) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@352 ($generated@@76 $generated@@145 $generated@@2) $generated@@530) ($generated@@150 $generated@@531))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@150 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@212 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@256 ($generated@@352 ($generated@@250 $generated@@145) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@352 ($generated@@250 $generated@@145) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@212 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@79 (type $generated@@535))))
 (=> (and (= (type $generated@@535) ($generated@@76 $generated@@537 $generated@@4)) (= (type $generated@@536) ($generated@@76 $generated@@537 $generated@@4))) (= ($generated@@534 $generated@@535 $generated@@536) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@537) ($generated@@0 ($generated@@81 $generated@@535 $generated@@538))) ($generated@@0 ($generated@@81 $generated@@536 $generated@@538)))
 :pattern ( ($generated@@81 $generated@@535 $generated@@538))
 :pattern ( ($generated@@81 $generated@@536 $generated@@538))
)))))
 :pattern ( ($generated@@534 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@539 ($generated@@150 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@539 $generated@@542)))) ($generated@@236 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@81 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@150 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 Int) ) (! (let (($generated@@547 ($generated@@251 (type $generated@@544))))
 (=> (and (= (type $generated@@544) ($generated@@250 $generated@@547)) (= (type $generated@@545) ($generated@@250 $generated@@547))) (= ($generated@@543 $generated@@544 $generated@@545 $generated@@546) (forall (($generated@@548 Int) ) (!  (=> (and (<= 0 $generated@@548) (< $generated@@548 $generated@@546)) (= ($generated@@466 $generated@@544 $generated@@548) ($generated@@466 $generated@@545 $generated@@548)))
 :pattern ( ($generated@@466 $generated@@544 $generated@@548))
 :pattern ( ($generated@@466 $generated@@545 $generated@@548))
)))))
 :pattern ( ($generated@@543 $generated@@544 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@136) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@551) (and ($generated@@134 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@135 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@135 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@236 ($generated@@143 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@136) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@555) (and ($generated@@134 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@64) ($generated@@74 $generated@@553 ($generated@@135 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@135 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@236 ($generated@@144 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) (= (type $generated@@558) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@557) ($generated@@231 $generated@@558)) ($generated@@231 ($generated@@211 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@557) ($generated@@231 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@559)) ($generated@@231 ($generated@@256 $generated@@559)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@251 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@250 $generated@@561)) (= ($generated@@249 $generated@@560) 0)) (= $generated@@560 ($generated@@248 $generated@@561))))
 :pattern ( ($generated@@249 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@261 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@261 $generated@@562) ($generated ($generated@@81 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@423)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@250 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@465 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@249 $generated@@576))) ($generated@@212 ($generated@@466 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@466 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@465 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@249 $generated@@580))) (< ($generated@@504 ($generated@@352 $generated@@136 ($generated@@466 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@504 ($generated@@352 $generated@@136 ($generated@@466 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@380 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@267 $generated@@582) ($generated@@221 $generated@@583)) ($generated@@132 ($generated@@310 $generated@@582) ($generated@@221 $generated@@584))) ($generated@@132 ($generated@@351 $generated@@582) ($generated@@221 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@380 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@388 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@285 $generated@@585) ($generated@@226 $generated@@586)) ($generated@@132 ($generated@@321 $generated@@585) ($generated@@226 $generated@@587))) ($generated@@132 ($generated@@362 $generated@@585) ($generated@@226 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@388 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@423) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Bool)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Bool)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () Bool)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Bool)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Bool)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Bool)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Bool)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () Bool)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(declare-fun $generated@@620 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@594) ($generated@@250 $generated@@145)) (= (type $generated@@595) ($generated@@250 $generated@@145))) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@598) ($generated@@250 $generated@@145))) (= (type $generated@@600) ($generated@@76 $generated@@145 $generated@@2))) (= (type $generated@@601) ($generated@@76 $generated@@145 $generated@@2))) (= (type $generated@@603) ($generated@@76 $generated@@145 $generated@@2))) (= (type $generated@@605) ($generated@@76 $generated@@145 $generated@@2))) (= (type $generated@@607) ($generated@@76 $generated@@145 $generated@@2))) (= (type $generated@@609) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@610) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@612) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@614) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@616) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@617) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@618) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@621  (=> (and (= $generated@@593 (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) ($generated@@250 $generated@@145)) (and ($generated@@132 $generated@@622 ($generated@@465 $generated@@46)) (and (<= ($generated@@249 $generated@@622) ($generated@@249 $generated@@594)) ($generated@@543 $generated@@622 $generated@@594 ($generated@@249 $generated@@622)))))
 :no-pattern (type $generated@@622)
 :no-pattern ($generated $generated@@622)
 :no-pattern ($generated@@0 $generated@@622)
))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@0 ($generated@@231 ($generated@@11 true))))))
(let (($generated@@623  (=> (and (not (and ($generated@@132 $generated@@595 ($generated@@465 $generated@@46)) ($generated@@74 $generated@@595 ($generated@@465 $generated@@46) $generated@@596))) (= (ControlFlow 0 4) 2)) $generated@@621)))
(let (($generated@@624  (=> (and (and ($generated@@132 $generated@@595 ($generated@@465 $generated@@46)) ($generated@@74 $generated@@595 ($generated@@465 $generated@@46) $generated@@596)) (= (ControlFlow 0 3) 2)) $generated@@621)))
(let (($generated@@625  (=> (= $generated@@597 (exists (($generated@@626 T@U) ) (!  (and (= (type $generated@@626) ($generated@@250 $generated@@145)) (and ($generated@@132 $generated@@626 ($generated@@465 $generated@@46)) (and (< ($generated@@249 $generated@@626) ($generated@@249 $generated@@594)) ($generated@@543 $generated@@626 $generated@@594 ($generated@@249 $generated@@626)))))
 :no-pattern (type $generated@@626)
 :no-pattern ($generated $generated@@626)
 :no-pattern ($generated@@0 $generated@@626)
))) (and (=> (= (ControlFlow 0 5) 3) $generated@@624) (=> (= (ControlFlow 0 5) 4) $generated@@623)))))
(let (($generated@@627  (=> (and (not (and ($generated@@132 $generated@@598 ($generated@@465 $generated@@46)) ($generated@@74 $generated@@598 ($generated@@465 $generated@@46) $generated@@596))) (= (ControlFlow 0 7) 5)) $generated@@625)))
(let (($generated@@628  (=> (and (and ($generated@@132 $generated@@598 ($generated@@465 $generated@@46)) ($generated@@74 $generated@@598 ($generated@@465 $generated@@46) $generated@@596)) (= (ControlFlow 0 6) 5)) $generated@@625)))
(let (($generated@@629  (=> (= $generated@@599 (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) ($generated@@76 $generated@@145 $generated@@2)) (and ($generated@@132 $generated@@630 ($generated@@150 $generated@@46)) (and ($generated@@336 $generated@@600 $generated@@630) (not ($generated@@331 $generated@@600 $generated@@630)))))
 :pattern ( ($generated@@336 $generated@@600 $generated@@630))
))) (and (=> (= (ControlFlow 0 8) 6) $generated@@628) (=> (= (ControlFlow 0 8) 7) $generated@@627)))))
(let (($generated@@631  (=> (and (not (and ($generated@@132 $generated@@601 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@601 ($generated@@150 $generated@@46) $generated@@596))) (= (ControlFlow 0 10) 8)) $generated@@629)))
(let (($generated@@632  (=> (and (and ($generated@@132 $generated@@601 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@601 ($generated@@150 $generated@@46) $generated@@596)) (= (ControlFlow 0 9) 8)) $generated@@629)))
(let (($generated@@633  (=> (= $generated@@602 (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) ($generated@@76 $generated@@145 $generated@@2)) (and ($generated@@132 $generated@@634 ($generated@@150 $generated@@46)) ($generated@@336 $generated@@600 $generated@@634)))
 :pattern ( ($generated@@336 $generated@@600 $generated@@634))
))) (and (=> (= (ControlFlow 0 11) 9) $generated@@632) (=> (= (ControlFlow 0 11) 10) $generated@@631)))))
(let (($generated@@635  (=> (and (not (and ($generated@@132 $generated@@603 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@603 ($generated@@150 $generated@@46) $generated@@596))) (= (ControlFlow 0 13) 11)) $generated@@633)))
(let (($generated@@636  (=> (and (and ($generated@@132 $generated@@603 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@603 ($generated@@150 $generated@@46) $generated@@596)) (= (ControlFlow 0 12) 11)) $generated@@633)))
(let (($generated@@637  (=> (= $generated@@604 (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) ($generated@@76 $generated@@145 $generated@@2)) (and ($generated@@132 $generated@@638 ($generated@@150 $generated@@46)) ($generated@@336 $generated@@638 $generated@@600)))
 :pattern ( ($generated@@336 $generated@@638 $generated@@600))
))) (and (=> (= (ControlFlow 0 14) 12) $generated@@636) (=> (= (ControlFlow 0 14) 13) $generated@@635)))))
(let (($generated@@639  (=> (and (not (and ($generated@@132 $generated@@605 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@605 ($generated@@150 $generated@@46) $generated@@596))) (= (ControlFlow 0 16) 14)) $generated@@637)))
(let (($generated@@640  (=> (and (and ($generated@@132 $generated@@605 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@605 ($generated@@150 $generated@@46) $generated@@596)) (= (ControlFlow 0 15) 14)) $generated@@637)))
(let (($generated@@641  (=> (= $generated@@606 (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) ($generated@@76 $generated@@145 $generated@@2)) (and ($generated@@132 $generated@@642 ($generated@@150 $generated@@46)) (and ($generated@@336 $generated@@642 $generated@@600) (not ($generated@@331 $generated@@642 $generated@@600)))))
 :pattern ( ($generated@@336 $generated@@642 $generated@@600))
))) (and (=> (= (ControlFlow 0 17) 15) $generated@@640) (=> (= (ControlFlow 0 17) 16) $generated@@639)))))
(let (($generated@@643  (=> (and (not (and ($generated@@132 $generated@@607 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@607 ($generated@@150 $generated@@46) $generated@@596))) (= (ControlFlow 0 19) 17)) $generated@@641)))
(let (($generated@@644  (=> (and (and ($generated@@132 $generated@@607 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@607 ($generated@@150 $generated@@46) $generated@@596)) (= (ControlFlow 0 18) 17)) $generated@@641)))
(let (($generated@@645  (=> (= $generated@@608 (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) ($generated@@76 $generated@@145 $generated@@4)) (and ($generated@@132 $generated@@646 ($generated@@221 $generated@@46)) (and ($generated@@534 $generated@@609 $generated@@646) (not ($generated@@534 $generated@@646 $generated@@609)))))
 :pattern ( ($generated@@534 $generated@@609 $generated@@646))
))) (and (=> (= (ControlFlow 0 20) 18) $generated@@644) (=> (= (ControlFlow 0 20) 19) $generated@@643)))))
(let (($generated@@647  (=> (and (not (and ($generated@@132 $generated@@610 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@610 ($generated@@221 $generated@@46) $generated@@596))) (= (ControlFlow 0 22) 20)) $generated@@645)))
(let (($generated@@648  (=> (and (and ($generated@@132 $generated@@610 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@610 ($generated@@221 $generated@@46) $generated@@596)) (= (ControlFlow 0 21) 20)) $generated@@645)))
(let (($generated@@649  (=> (= $generated@@611 (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) ($generated@@76 $generated@@145 $generated@@4)) (and ($generated@@132 $generated@@650 ($generated@@221 $generated@@46)) ($generated@@534 $generated@@609 $generated@@650)))
 :pattern ( ($generated@@534 $generated@@609 $generated@@650))
))) (and (=> (= (ControlFlow 0 23) 21) $generated@@648) (=> (= (ControlFlow 0 23) 22) $generated@@647)))))
(let (($generated@@651  (=> (and (not (and ($generated@@132 $generated@@612 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@612 ($generated@@221 $generated@@46) $generated@@596))) (= (ControlFlow 0 25) 23)) $generated@@649)))
(let (($generated@@652  (=> (and (and ($generated@@132 $generated@@612 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@612 ($generated@@221 $generated@@46) $generated@@596)) (= (ControlFlow 0 24) 23)) $generated@@649)))
(let (($generated@@653  (=> (= $generated@@613 (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) ($generated@@76 $generated@@145 $generated@@4)) (and ($generated@@132 $generated@@654 ($generated@@221 $generated@@46)) ($generated@@534 $generated@@654 $generated@@609)))
 :pattern ( ($generated@@534 $generated@@654 $generated@@609))
))) (and (=> (= (ControlFlow 0 26) 24) $generated@@652) (=> (= (ControlFlow 0 26) 25) $generated@@651)))))
(let (($generated@@655  (=> (and (not (and ($generated@@132 $generated@@614 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@614 ($generated@@221 $generated@@46) $generated@@596))) (= (ControlFlow 0 28) 26)) $generated@@653)))
(let (($generated@@656  (=> (and (and ($generated@@132 $generated@@614 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@614 ($generated@@221 $generated@@46) $generated@@596)) (= (ControlFlow 0 27) 26)) $generated@@653)))
(let (($generated@@657  (=> (= $generated@@615 (exists (($generated@@658 T@U) ) (!  (and (= (type $generated@@658) ($generated@@76 $generated@@145 $generated@@4)) (and ($generated@@132 $generated@@658 ($generated@@221 $generated@@46)) (and ($generated@@534 $generated@@658 $generated@@609) (not ($generated@@534 $generated@@609 $generated@@658)))))
 :pattern ( ($generated@@534 $generated@@658 $generated@@609))
))) (and (=> (= (ControlFlow 0 29) 27) $generated@@656) (=> (= (ControlFlow 0 29) 28) $generated@@655)))))
(let (($generated@@659  (=> (and (not (and ($generated@@132 $generated@@616 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@616 ($generated@@221 $generated@@46) $generated@@596))) (= (ControlFlow 0 31) 29)) $generated@@657)))
(let (($generated@@660  (=> (and (and ($generated@@132 $generated@@616 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@616 ($generated@@221 $generated@@46) $generated@@596)) (= (ControlFlow 0 30) 29)) $generated@@657)))
(let (($generated@@661  (=> (= $generated@@617 ($generated@@156 $generated@@618 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 32) 30) $generated@@660) (=> (= (ControlFlow 0 32) 31) $generated@@659)))))
(let (($generated@@662  (=> (and ($generated@@235 $generated@@596) ($generated@@619 $generated@@596)) (=> (and (and (and ($generated@@132 $generated@@609 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@609 ($generated@@221 $generated@@46) $generated@@596)) (and ($generated@@132 $generated@@600 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@600 ($generated@@150 $generated@@46) $generated@@596))) (and (and ($generated@@132 $generated@@594 ($generated@@465 $generated@@46)) ($generated@@74 $generated@@594 ($generated@@465 $generated@@46) $generated@@596)) (and (= 0 $generated@@620) (= (ControlFlow 0 33) 32)))) $generated@@661))))
$generated@@662)))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
