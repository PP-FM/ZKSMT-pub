(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 (Int) Bool)
(declare-fun $generated@@239 (Int) Bool)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@274 (T@T T@T) T@U)
(declare-fun $generated@@275 (T@T T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (Int Int) Bool)
(declare-fun $generated@@393 (Int Int) Bool)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (Int Int) Int)
(declare-fun $generated@@569 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert  (=> (<= 0 $generated@@237) (forall (($generated@@240 Int) ) (!  (=> (or ($generated@@239 $generated@@240) (not (= 0 $generated@@237))) true)
 :pattern ( ($generated@@238 $generated@@240))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@145)) (= (type $generated@@246) $generated@@145)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@211 $generated@@245 $generated@@246) ($generated@@135 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@245 $generated@@246) ($generated@@135 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@136) (= ($generated@@134 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@136) ($generated@@134 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@145) (= (type $generated@@253) $generated@@145)) (= $generated@@251 ($generated@@211 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@134 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@145)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@269 T@T) ) (! (= (type ($generated@@268 $generated@@269)) ($generated@@76 $generated@@269 $generated@@2))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@79 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@76 $generated@@271 $generated@@2)) (and (= (= ($generated@@267 $generated@@270) 0) (= $generated@@270 ($generated@@268 $generated@@271))) (=> (not (= ($generated@@267 $generated@@270) 0)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) (< 0 ($generated ($generated@@81 $generated@@270 $generated@@272))))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert  (and (and (and (and (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@278 $generated@@279)) 18)) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@280 $generated@@281)) $generated@@280)
 :pattern ( ($generated@@275 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@275 $generated@@282 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@275 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@276 (type $generated@@284))))
(= (type ($generated@@273 $generated@@284)) ($generated@@76 $generated@@285 $generated@@4)))
 :pattern ( ($generated@@273 $generated@@284))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= (type ($generated@@274 $generated@@286 $generated@@287)) ($generated@@275 $generated@@286 $generated@@287))
 :pattern ( ($generated@@274 $generated@@286 $generated@@287))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@T) ) (! (let (($generated@@290 (type $generated@@288)))
 (not ($generated@@0 ($generated@@81 ($generated@@273 ($generated@@274 $generated@@290 $generated@@289)) $generated@@288))))
 :pattern ( (let (($generated@@290 (type $generated@@288)))
($generated@@81 ($generated@@273 ($generated@@274 $generated@@290 $generated@@289)) $generated@@288)))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@79 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@76 $generated@@310 $generated@@2)) (= ($generated@@151 $generated@@309) (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@310) (and (<= 0 ($generated ($generated@@81 $generated@@309 $generated@@311))) (<= ($generated ($generated@@81 $generated@@309 $generated@@311)) ($generated@@267 $generated@@309))))
 :pattern ( ($generated@@81 $generated@@309 $generated@@311))
)))))
 :pattern ( ($generated@@151 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@277 (type $generated@@312))))
(let (($generated@@314 ($generated@@276 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@275 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@274 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@273 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@277 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@277 (type $generated@@319))))
(let (($generated@@321 ($generated@@276 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@275 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@274 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@295 (type $generated@@323))))
(let (($generated@@325 ($generated@@294 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@293 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@292 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@291 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@295 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@81 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@335) $generated@@64)) (= ($generated@@132 $generated@@334 ($generated@@150 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@334 $generated@@336)))) ($generated@@212 $generated@@336 $generated@@335))
 :pattern ( ($generated@@81 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@132 $generated@@334 ($generated@@150 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@221 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@242 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@221 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@342) $generated@@64)) (= (type $generated@@343) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@341 ($generated@@226 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) ($generated@@0 ($generated@@81 $generated@@341 $generated@@344))) ($generated@@242 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@81 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@74 $generated@@341 ($generated@@226 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@81 ($generated@@268 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@81 ($generated@@268 $generated@@346) $generated@@345)))
)))
(assert  (and (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@347 $generated@@350)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@347 $generated@@350))
)) (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@348 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@348 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@277 (type $generated@@353))))
(let (($generated@@355 ($generated@@276 (type $generated@@353))))
(= (type ($generated@@349 $generated@@353)) ($generated@@76 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@349 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@357) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@81 ($generated@@273 $generated@@356) ($generated@@143 ($generated@@348 $generated@@136 $generated@@357)))) (= ($generated@@81 ($generated@@349 $generated@@356) ($generated@@143 ($generated@@348 $generated@@136 $generated@@357))) ($generated@@144 ($generated@@348 $generated@@136 $generated@@357))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@356) $generated@@357))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@295 (type $generated@@361))))
(let (($generated@@363 ($generated@@294 (type $generated@@361))))
(= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@365) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@364) ($generated@@143 ($generated@@348 $generated@@136 $generated@@365)))) (= ($generated@@81 ($generated@@359 $generated@@364) ($generated@@143 ($generated@@348 $generated@@136 $generated@@365))) ($generated@@144 ($generated@@348 $generated@@136 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(let (($generated@@369 ($generated@@276 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@275 $generated@@369 $generated@@368)) (= ($generated@@0 ($generated@@81 ($generated@@316 $generated@@366) $generated@@367)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (and ($generated@@0 ($generated@@81 ($generated@@273 $generated@@366) $generated@@370)) (= $generated@@367 ($generated@@81 ($generated@@349 $generated@@366) $generated@@370))))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@366) $generated@@370))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@366) $generated@@370))
))))))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@294 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@293 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@81 ($generated@@327 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@81 ($generated@@359 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@371) $generated@@375))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@81 ($generated@@327 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@64)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@379) $generated@@383))) (and ($generated@@242 ($generated@@81 ($generated@@349 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@242 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@359 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert  (=> (<= 0 $generated@@237) (forall (($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (or ($generated@@393 $generated@@394 $generated@@395) (not (= 0 $generated@@237))) true)
 :pattern ( ($generated@@392 $generated@@394 $generated@@395))
))))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@295 (type $generated@@398))))
(let (($generated@@400 ($generated@@294 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@293 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@292 $generated@@400 $generated@@399)) (= ($generated@@291 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@291 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@295 (type $generated@@401))))
(let (($generated@@403 ($generated@@294 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@293 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@292 $generated@@403 $generated@@402)) (= ($generated@@327 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@327 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@295 (type $generated@@404))))
(let (($generated@@406 ($generated@@294 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@293 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@292 $generated@@406 $generated@@405)) (= ($generated@@358 $generated@@404) ($generated@@396 $generated@@145))))))
 :pattern ( ($generated@@358 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@277 (type $generated@@407))))
(let (($generated@@409 ($generated@@276 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@275 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@274 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@407) ($generated@@262 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@347 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@295 (type $generated@@412))))
(let (($generated@@414 ($generated@@294 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@293 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@292 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@145) (= (type $generated@@416) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@412) ($generated@@262 ($generated@@211 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@358 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@46)) (and (= ($generated@@262 ($generated@@348 $generated@@2 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@348 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@47)) (and (= ($generated@@262 ($generated@@348 $generated@@3 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@348 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@44)) (and (= ($generated@@262 ($generated@@348 $generated@@4 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@348 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 20))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@45)) (and (= ($generated@@262 ($generated@@348 $generated@@420 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@348 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@64) (= ($generated@@212 ($generated@@262 $generated@@422) $generated@@423) ($generated@@132 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@212 ($generated@@262 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@79 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@76 $generated@@425 $generated@@2)) (<= 0 ($generated@@267 $generated@@424))))
 :pattern ( ($generated@@267 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@257 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@256 $generated@@427)) (<= 0 ($generated@@255 $generated@@426))))
 :pattern ( ($generated@@255 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@376 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@376 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@376 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@376 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@376 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@376 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@384 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@384 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@384 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@384 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@384 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@248 ($generated@@211 $generated@@448 $generated@@449)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@135 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@257 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@256 $generated@@145)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@255 $generated@@468))) ($generated@@242 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@75 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@75 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@221 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@226 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@150 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@348 $generated@@491 ($generated@@262 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@262 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@132 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@492) $generated@@495))) (and ($generated@@212 ($generated@@81 ($generated@@349 $generated@@492) $generated@@495) $generated@@494) ($generated@@212 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@132 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@384 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@359 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@384 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@376 $generated@@507 $generated@@508))) (and (= ($generated@@262 ($generated@@348 ($generated@@275 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@348 ($generated@@275 $generated@@145 $generated@@145) $generated@@506) ($generated@@376 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@376 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@384 $generated@@510 $generated@@511))) (and (= ($generated@@262 ($generated@@348 ($generated@@293 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@348 ($generated@@293 $generated@@145 $generated@@145) $generated@@509) ($generated@@384 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@384 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@145)) ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513))) (and (= ($generated@@262 ($generated@@348 $generated@@136 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@348 $generated@@136 $generated@@514) ($generated@@135 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@396 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@396 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@135 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 Int) ($generated@@523 Int) ) (! (= ($generated@@521 $generated@@522 $generated@@523) (* $generated@@522 $generated@@523))
 :pattern ( ($generated@@521 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@136) (= ($generated@@500 ($generated@@262 $generated@@524)) ($generated@@501 $generated@@524)))
 :pattern ( ($generated@@500 ($generated@@262 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) ($generated@@212 $generated@@525 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@348 $generated@@2 $generated@@525)) $generated@@525) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@75 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@212 $generated@@526 ($generated@@221 $generated@@527))) (and (= ($generated@@262 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@221 $generated@@527))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@221 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@528 ($generated@@226 $generated@@529))) (and (= ($generated@@262 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@528) ($generated@@226 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@528 ($generated@@226 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@150 $generated@@531))) (and (= ($generated@@262 ($generated@@348 ($generated@@76 $generated@@145 $generated@@2) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@2) $generated@@530) ($generated@@150 $generated@@531))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@150 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@212 $generated@@532 ($generated@@462 $generated@@533))) (and (= ($generated@@262 ($generated@@348 ($generated@@256 $generated@@145) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@348 ($generated@@256 $generated@@145) $generated@@532) ($generated@@462 $generated@@533))))
 :pattern ( ($generated@@212 $generated@@532 ($generated@@462 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@534 ($generated@@150 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@534 $generated@@537)))) ($generated@@242 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@81 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@150 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@136) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@540) (and ($generated@@134 $generated@@538) (exists (($generated@@541 T@U) ) (!  (and (= (type $generated@@541) $generated@@64) ($generated@@74 $generated@@538 ($generated@@135 $generated@@539 $generated@@541) $generated@@540))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@135 $generated@@539 $generated@@541) $generated@@540))
))))) ($generated@@242 ($generated@@143 $generated@@538) $generated@@539 $generated@@540))
 :pattern ( ($generated@@242 ($generated@@143 $generated@@538) $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@136) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@135 $generated@@545 $generated@@543) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@135 $generated@@545 $generated@@543) $generated@@544))
))))) ($generated@@242 ($generated@@144 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@242 ($generated@@144 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@546) ($generated@@233 $generated@@547)) ($generated@@233 ($generated@@211 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@546) ($generated@@233 $generated@@547)))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@231 $generated@@548))) ($generated@@233 ($generated@@262 ($generated@@8 $generated@@548))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@231 $generated@@548))))
)))
(assert (forall (($generated@@549 T@U) ) (! (= ($generated@@262 ($generated@@233 $generated@@549)) ($generated@@233 ($generated@@262 $generated@@549)))
 :pattern ( ($generated@@262 ($generated@@233 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@257 (type $generated@@550))))
 (=> (and (= (type $generated@@550) ($generated@@256 $generated@@551)) (= ($generated@@255 $generated@@550) 0)) (= $generated@@550 ($generated@@254 $generated@@551))))
 :pattern ( ($generated@@255 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@553)))
 (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@555 $generated@@2)) (= (type $generated@@554) $generated@@2)) (<= 0 ($generated $generated@@554))) (= ($generated@@267 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)) (+ (- ($generated@@267 $generated@@552) ($generated ($generated@@81 $generated@@552 $generated@@553))) ($generated $generated@@554)))))
 :pattern ( ($generated@@267 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@2)) ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@3)) ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@4)) ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@420)) ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@145)) ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@256 $generated@@145)) (= (type $generated@@567) $generated@@64)) (= ($generated@@132 $generated@@566 ($generated@@462 $generated@@567)) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@255 $generated@@566))) ($generated@@212 ($generated@@463 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@463 $generated@@566 $generated@@568))
))))
 :pattern ( ($generated@@132 $generated@@566 ($generated@@462 $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 Int) ) (!  (=> (= (type $generated@@570) ($generated@@256 $generated@@145)) (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@255 $generated@@570))) (< ($generated@@501 ($generated@@348 $generated@@136 ($generated@@463 $generated@@570 $generated@@571))) ($generated@@569 $generated@@570))))
 :pattern ( ($generated@@501 ($generated@@348 $generated@@136 ($generated@@463 $generated@@570 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@376 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@273 $generated@@572) ($generated@@221 $generated@@573)) ($generated@@132 ($generated@@316 $generated@@572) ($generated@@221 $generated@@574))) ($generated@@132 ($generated@@347 $generated@@572) ($generated@@221 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@376 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@132 $generated@@575 ($generated@@384 $generated@@576 $generated@@577))) (and (and ($generated@@132 ($generated@@291 $generated@@575) ($generated@@226 $generated@@576)) ($generated@@132 ($generated@@327 $generated@@575) ($generated@@226 $generated@@577))) ($generated@@132 ($generated@@358 $generated@@575) ($generated@@226 ($generated@@135 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@384 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@2) ($generated@@132 $generated@@578 $generated@@46))
 :pattern ( ($generated@@132 $generated@@578 $generated@@46))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@3) ($generated@@132 $generated@@579 $generated@@47))
 :pattern ( ($generated@@132 $generated@@579 $generated@@47))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@4) ($generated@@132 $generated@@580 $generated@@44))
 :pattern ( ($generated@@132 $generated@@580 $generated@@44))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@420) ($generated@@132 $generated@@581 $generated@@45))
 :pattern ( ($generated@@132 $generated@@581 $generated@@45))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@145) ($generated@@132 $generated@@582 $generated@@48))
 :pattern ( ($generated@@132 $generated@@582 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@583 () Int)
(declare-fun $generated@@584 () Int)
(declare-fun $generated@@585 () Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () Int)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 (T@U) Bool)
(assert  (and (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 70) (let (($generated@@609  (=> (and (forall (($generated@@610 Int) ($generated@@611 Int) ) (!  (=> (= $generated@@611 (+ $generated@@610 1)) (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (and ($generated@@239 $generated@@610) (=> (not ($generated@@238 $generated@@610)) (let (($generated@@612 $generated@@611))
($generated@@239 $generated@@612))))))
 :pattern ( ($generated@@238 $generated@@611) ($generated@@238 $generated@@610))
)) (= (ControlFlow 0 12) (- 0 11))) (forall (($generated@@613 Int) ($generated@@614 Int) ) (!  (=> (= $generated@@614 (+ $generated@@613 1)) (or (or true ($generated@@238 $generated@@613)) (let (($generated@@615 $generated@@614))
($generated@@238 $generated@@615))))
 :pattern ( ($generated@@238 $generated@@614) ($generated@@238 $generated@@613))
)))))
(let (($generated@@616  (=> (and (or true ($generated@@238 $generated@@583)) (= (ControlFlow 0 14) 12)) $generated@@609)))
(let (($generated@@617  (=> (not (or true ($generated@@238 $generated@@583))) (=> (and (= $generated@@584 (+ $generated@@583 1)) ($generated@@132 ($generated@@8 $generated@@584) $generated@@46)) (=> (and (and (= $generated@@585 $generated@@584) ($generated@@74 ($generated@@8 $generated@@585) $generated@@46 $generated@@586)) (and ($generated@@239 $generated@@585) (= (ControlFlow 0 13) 12))) $generated@@609)))))
(let (($generated@@618  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 16) 13) $generated@@617) (=> (= (ControlFlow 0 16) 14) $generated@@616)))))
(let (($generated@@619  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (=> (and ($generated@@74 ($generated@@8 $generated@@583) $generated@@46 $generated@@586) ($generated@@239 $generated@@583)) (and (=> (= (ControlFlow 0 15) 13) $generated@@617) (=> (= (ControlFlow 0 15) 14) $generated@@616))))))
(let (($generated@@620  (and (=> (= (ControlFlow 0 17) 15) $generated@@619) (=> (= (ControlFlow 0 17) 16) $generated@@618))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (forall (($generated@@623 Int) ($generated@@624 Int) ) (!  (=> (= $generated@@624 (ite (> $generated@@587 1) $generated@@623 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1))) (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (and ($generated@@239 $generated@@623) (=> (not ($generated@@238 $generated@@623)) ($generated@@239 $generated@@624)))))
 :pattern ( ($generated@@238 $generated@@624) ($generated@@238 $generated@@623))
)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (forall (($generated@@625 Int) ($generated@@626 Int) ) (!  (=> (= $generated@@626 (ite (> $generated@@587 1) $generated@@625 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1))) (or (or true ($generated@@238 $generated@@625)) ($generated@@238 $generated@@626)))
 :pattern ( ($generated@@238 $generated@@626) ($generated@@238 $generated@@625))
))) (=> (forall (($generated@@627 Int) ($generated@@628 Int) ) (!  (=> (= $generated@@628 (ite (> $generated@@587 1) $generated@@627 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1))) (or (or true ($generated@@238 $generated@@627)) ($generated@@238 $generated@@628)))
 :pattern ( ($generated@@238 $generated@@628) ($generated@@238 $generated@@627))
)) (and (=> (= (ControlFlow 0 18) 17) $generated@@620) (=> (= (ControlFlow 0 18) 10) $generated@@621)))))))
(let (($generated@@629  (=> (and (and (= $generated@@588 (ite (> $generated@@587 1) $generated@@589 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1))) ($generated@@74 ($generated@@8 $generated@@588) $generated@@46 $generated@@586)) (and ($generated@@239 (ite (> $generated@@587 1) $generated@@589 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1))) (= (ControlFlow 0 21) 18))) $generated@@622)))
(let (($generated@@630  (=> (and (>= 1 $generated@@587) (= (ControlFlow 0 23) 21)) $generated@@629)))
(let (($generated@@631  (=> (and (> $generated@@587 1) (= (ControlFlow 0 22) 21)) $generated@@629)))
(let (($generated@@632  (=> (not (or true ($generated@@238 $generated@@589))) (and (=> (= (ControlFlow 0 24) 22) $generated@@631) (=> (= (ControlFlow 0 24) 23) $generated@@630)))))
(let (($generated@@633  (=> (and (or true ($generated@@238 $generated@@589)) (= (ControlFlow 0 20) 18)) $generated@@622)))
(let (($generated@@634  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 26) 24) $generated@@632) (=> (= (ControlFlow 0 26) 20) $generated@@633)))))
(let (($generated@@635  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (=> (and ($generated@@74 ($generated@@8 $generated@@589) $generated@@46 $generated@@586) ($generated@@239 $generated@@589)) (and (=> (= (ControlFlow 0 25) 24) $generated@@632) (=> (= (ControlFlow 0 25) 20) $generated@@633))))))
(let (($generated@@636  (and (=> (= (ControlFlow 0 27) 25) $generated@@635) (=> (= (ControlFlow 0 27) 26) $generated@@634))))
(let (($generated@@637 true))
(let (($generated@@638  (=> (forall (($generated@@639 Int) ) (!  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (and ($generated@@239 $generated@@639) (=> (not ($generated@@238 $generated@@639)) ($generated@@239 (ite (> $generated@@587 1) $generated@@587 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1))))))
 :pattern ( ($generated@@238 $generated@@639))
)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (forall (($generated@@640 Int) ) (!  (=> true (or (or true ($generated@@238 $generated@@640)) ($generated@@238 (ite (> $generated@@587 1) $generated@@587 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1)))))
 :pattern ( ($generated@@238 $generated@@640))
))) (=> (forall (($generated@@641 Int) ) (!  (=> true (or (or true ($generated@@238 $generated@@641)) ($generated@@238 (ite (> $generated@@587 1) $generated@@587 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1)))))
 :pattern ( ($generated@@238 $generated@@641))
)) (and (=> (= (ControlFlow 0 28) 27) $generated@@636) (=> (= (ControlFlow 0 28) 9) $generated@@637)))))))
(let (($generated@@642  (=> (and (and (= $generated@@590 (ite (> $generated@@587 1) $generated@@587 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1))) ($generated@@74 ($generated@@8 $generated@@590) $generated@@46 $generated@@586)) (and ($generated@@239 (ite (> $generated@@587 1) $generated@@587 (+ ($generated@@521 ($generated@@231 3) $generated@@587) 1))) (= (ControlFlow 0 31) 28))) $generated@@638)))
(let (($generated@@643  (=> (and (>= 1 $generated@@587) (= (ControlFlow 0 33) 31)) $generated@@642)))
(let (($generated@@644  (=> (and (> $generated@@587 1) (= (ControlFlow 0 32) 31)) $generated@@642)))
(let (($generated@@645  (=> (not (or true ($generated@@238 $generated@@591))) (and (=> (= (ControlFlow 0 34) 32) $generated@@644) (=> (= (ControlFlow 0 34) 33) $generated@@643)))))
(let (($generated@@646  (=> (and (or true ($generated@@238 $generated@@591)) (= (ControlFlow 0 30) 28)) $generated@@638)))
(let (($generated@@647  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 36) 34) $generated@@645) (=> (= (ControlFlow 0 36) 30) $generated@@646)))))
(let (($generated@@648  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (=> (and ($generated@@74 ($generated@@8 $generated@@591) $generated@@46 $generated@@586) ($generated@@239 $generated@@591)) (and (=> (= (ControlFlow 0 35) 34) $generated@@645) (=> (= (ControlFlow 0 35) 30) $generated@@646))))))
(let (($generated@@649  (and (=> (= (ControlFlow 0 37) 35) $generated@@648) (=> (= (ControlFlow 0 37) 36) $generated@@647))))
(let (($generated@@650 true))
(let (($generated@@651  (=> (forall (($generated@@652 Int) ) (!  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (and ($generated@@239 $generated@@652) (=> (not ($generated@@238 $generated@@652)) ($generated@@239 ($generated@@231 (+ 0 1))))))
 :pattern ( ($generated@@238 $generated@@652))
)) (and (=> (= (ControlFlow 0 38) (- 0 39)) (forall (($generated@@653 Int) ) (!  (=> true (or (or true ($generated@@238 $generated@@653)) ($generated@@238 ($generated@@231 (+ 0 1)))))
 :pattern ( ($generated@@238 $generated@@653))
))) (=> (forall (($generated@@654 Int) ) (!  (=> true (or (or true ($generated@@238 $generated@@654)) ($generated@@238 ($generated@@231 (+ 0 1)))))
 :pattern ( ($generated@@238 $generated@@654))
)) (and (=> (= (ControlFlow 0 38) 37) $generated@@649) (=> (= (ControlFlow 0 38) 8) $generated@@650)))))))
(let (($generated@@655  (=> (and (or true ($generated@@238 $generated@@592)) (= (ControlFlow 0 41) 38)) $generated@@651)))
(let (($generated@@656  (=> (not (or true ($generated@@238 $generated@@592))) (=> (and (and (= $generated@@593 ($generated@@231 (+ 0 1))) ($generated@@74 ($generated@@8 $generated@@593) $generated@@46 $generated@@586)) (and ($generated@@239 ($generated@@231 (+ 0 1))) (= (ControlFlow 0 40) 38))) $generated@@651))))
(let (($generated@@657  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 43) 40) $generated@@656) (=> (= (ControlFlow 0 43) 41) $generated@@655)))))
(let (($generated@@658  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (=> (and ($generated@@74 ($generated@@8 $generated@@592) $generated@@46 $generated@@586) ($generated@@239 $generated@@592)) (and (=> (= (ControlFlow 0 42) 40) $generated@@656) (=> (= (ControlFlow 0 42) 41) $generated@@655))))))
(let (($generated@@659  (and (=> (= (ControlFlow 0 44) 42) $generated@@658) (=> (= (ControlFlow 0 44) 43) $generated@@657))))
(let (($generated@@660 true))
(let (($generated@@661  (=> (forall (($generated@@662 Int) ) (!  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (and ($generated@@393 $generated@@662 ($generated@@231 1)) (=> (not ($generated@@392 $generated@@662 ($generated@@231 1))) ($generated@@393 $generated@@662 $generated@@587))))
 :pattern ( ($generated@@392 $generated@@662 $generated@@587))
 :pattern ( ($generated@@392 $generated@@662 1))
)) (and (=> (= (ControlFlow 0 45) (- 0 46)) (forall (($generated@@663 Int) ) (!  (=> true (or (or true ($generated@@392 $generated@@663 ($generated@@231 1))) ($generated@@392 $generated@@663 $generated@@587)))
 :pattern ( ($generated@@392 $generated@@663 $generated@@587))
 :pattern ( ($generated@@392 $generated@@663 1))
))) (=> (forall (($generated@@664 Int) ) (!  (=> true (or (or true ($generated@@392 $generated@@664 ($generated@@231 1))) ($generated@@392 $generated@@664 $generated@@587)))
 :pattern ( ($generated@@392 $generated@@664 $generated@@587))
 :pattern ( ($generated@@392 $generated@@664 1))
)) (and (=> (= (ControlFlow 0 45) 44) $generated@@659) (=> (= (ControlFlow 0 45) 7) $generated@@660)))))))
(let (($generated@@665  (=> (and (or true ($generated@@392 $generated@@594 ($generated@@231 1))) (= (ControlFlow 0 48) 45)) $generated@@661)))
(let (($generated@@666  (=> (not (or true ($generated@@392 $generated@@594 ($generated@@231 1)))) (=> (and (and ($generated@@74 ($generated@@8 $generated@@594) $generated@@46 $generated@@586) ($generated@@74 ($generated@@8 $generated@@587) $generated@@46 $generated@@586)) (and ($generated@@393 $generated@@594 $generated@@587) (= (ControlFlow 0 47) 45))) $generated@@661))))
(let (($generated@@667  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 50) 47) $generated@@666) (=> (= (ControlFlow 0 50) 48) $generated@@665)))))
(let (($generated@@668  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (=> (and (and ($generated@@74 ($generated@@8 $generated@@594) $generated@@46 $generated@@586) (= $generated@@595 ($generated@@231 1))) (and ($generated@@74 ($generated@@8 $generated@@595) $generated@@46 $generated@@586) ($generated@@393 $generated@@594 ($generated@@231 1)))) (and (=> (= (ControlFlow 0 49) 47) $generated@@666) (=> (= (ControlFlow 0 49) 48) $generated@@665))))))
(let (($generated@@669  (and (=> (= (ControlFlow 0 51) 49) $generated@@668) (=> (= (ControlFlow 0 51) 50) $generated@@667))))
(let (($generated@@670 true))
(let (($generated@@671  (=> (forall (($generated@@672 Int) ) (!  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (and ($generated@@239 $generated@@672) (=> (not ($generated@@238 $generated@@672)) ($generated@@239 $generated@@587))))
 :pattern ( ($generated@@238 $generated@@672))
)) (and (=> (= (ControlFlow 0 52) (- 0 53)) (forall (($generated@@673 Int) ) (!  (=> true (or (or true ($generated@@238 $generated@@673)) ($generated@@238 $generated@@587)))
 :pattern ( ($generated@@238 $generated@@673))
))) (=> (forall (($generated@@674 Int) ) (!  (=> true (or (or true ($generated@@238 $generated@@674)) ($generated@@238 $generated@@587)))
 :pattern ( ($generated@@238 $generated@@674))
)) (and (=> (= (ControlFlow 0 52) 51) $generated@@669) (=> (= (ControlFlow 0 52) 6) $generated@@670)))))))
(let (($generated@@675  (=> (and (or true ($generated@@238 $generated@@596)) (= (ControlFlow 0 55) 52)) $generated@@671)))
(let (($generated@@676  (=> (and (and (not (or true ($generated@@238 $generated@@596))) ($generated@@74 ($generated@@8 $generated@@587) $generated@@46 $generated@@586)) (and ($generated@@239 $generated@@587) (= (ControlFlow 0 54) 52))) $generated@@671)))
(let (($generated@@677  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 57) 54) $generated@@676) (=> (= (ControlFlow 0 57) 55) $generated@@675)))))
(let (($generated@@678  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (=> (and ($generated@@74 ($generated@@8 $generated@@596) $generated@@46 $generated@@586) ($generated@@239 $generated@@596)) (and (=> (= (ControlFlow 0 56) 54) $generated@@676) (=> (= (ControlFlow 0 56) 55) $generated@@675))))))
(let (($generated@@679  (and (=> (= (ControlFlow 0 58) 56) $generated@@678) (=> (= (ControlFlow 0 58) 57) $generated@@677))))
(let (($generated@@680 true))
(let (($generated@@681  (=> (forall (($generated@@682 Int) ) (!  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (and ($generated@@239 $generated@@682) (=> (not ($generated@@238 $generated@@682)) ($generated@@239 ($generated@@231 0)))))
 :pattern ( ($generated@@238 $generated@@682))
)) (and (=> (= (ControlFlow 0 59) (- 0 60)) (forall (($generated@@683 Int) ) (!  (=> true (or (or true ($generated@@238 $generated@@683)) ($generated@@238 ($generated@@231 0))))
 :pattern ( ($generated@@238 $generated@@683))
))) (=> (forall (($generated@@684 Int) ) (!  (=> true (or (or true ($generated@@238 $generated@@684)) ($generated@@238 ($generated@@231 0))))
 :pattern ( ($generated@@238 $generated@@684))
)) (and (=> (= (ControlFlow 0 59) 58) $generated@@679) (=> (= (ControlFlow 0 59) 5) $generated@@680)))))))
(let (($generated@@685  (=> (and (or true ($generated@@238 $generated@@597)) (= (ControlFlow 0 62) 59)) $generated@@681)))
(let (($generated@@686  (=> (not (or true ($generated@@238 $generated@@597))) (=> (and (and (= $generated@@598 ($generated@@231 0)) ($generated@@74 ($generated@@8 $generated@@598) $generated@@46 $generated@@586)) (and ($generated@@239 ($generated@@231 0)) (= (ControlFlow 0 61) 59))) $generated@@681))))
(let (($generated@@687  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 64) 61) $generated@@686) (=> (= (ControlFlow 0 64) 62) $generated@@685)))))
(let (($generated@@688  (=> (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (=> (and ($generated@@74 ($generated@@8 $generated@@597) $generated@@46 $generated@@586) ($generated@@239 $generated@@597)) (and (=> (= (ControlFlow 0 63) 61) $generated@@686) (=> (= (ControlFlow 0 63) 62) $generated@@685))))))
(let (($generated@@689  (and (=> (= (ControlFlow 0 65) 63) $generated@@688) (=> (= (ControlFlow 0 65) 64) $generated@@687))))
(let (($generated@@690 true))
(let (($generated@@691  (=> ($generated@@74 ($generated@@8 $generated@@599) $generated@@46 $generated@@586) (=> (and (and (and ($generated@@74 ($generated@@8 $generated@@600) $generated@@46 $generated@@586) ($generated@@393 $generated@@599 $generated@@600)) (and ($generated@@74 ($generated@@8 $generated@@599) $generated@@46 $generated@@586) (= $generated@@601 (+ $generated@@600 1)))) (and (and ($generated@@74 ($generated@@8 $generated@@601) $generated@@46 $generated@@586) ($generated@@393 $generated@@599 (+ $generated@@600 1))) (and (forall (($generated@@692 Int) ($generated@@693 Int) ($generated@@694 Int) ) (!  (=> (= $generated@@694 (+ $generated@@693 1)) (and ($generated@@393 $generated@@692 $generated@@693) ($generated@@393 $generated@@692 $generated@@694)))
 :pattern ( ($generated@@392 $generated@@692 $generated@@694) ($generated@@392 $generated@@692 $generated@@693))
)) (forall (($generated@@695 Int) ($generated@@696 Int) ($generated@@697 Int) ) (!  (=> (= $generated@@697 (+ $generated@@696 1)) (= ($generated@@392 $generated@@695 $generated@@696) ($generated@@392 $generated@@695 $generated@@697)))
 :pattern ( ($generated@@392 $generated@@695 $generated@@697) ($generated@@392 $generated@@695 $generated@@696))
))))) (and (=> (= (ControlFlow 0 66) 65) $generated@@689) (=> (= (ControlFlow 0 66) 4) $generated@@690))))))
(let (($generated@@698 true))
(let (($generated@@699  (=> (and (and (and ($generated@@74 ($generated@@8 $generated@@602) $generated@@46 $generated@@586) ($generated@@74 ($generated@@8 $generated@@603) $generated@@46 $generated@@586)) (and ($generated@@393 $generated@@602 $generated@@603) ($generated@@74 ($generated@@8 $generated@@603) $generated@@46 $generated@@586))) (and (and ($generated@@74 ($generated@@8 $generated@@602) $generated@@46 $generated@@586) ($generated@@393 $generated@@603 $generated@@602)) (and (forall (($generated@@700 Int) ($generated@@701 Int) ) (!  (and ($generated@@393 $generated@@700 $generated@@701) ($generated@@393 $generated@@701 $generated@@700))
 :pattern ( ($generated@@392 $generated@@701 $generated@@700))
 :pattern ( ($generated@@392 $generated@@700 $generated@@701))
)) (forall (($generated@@702 Int) ($generated@@703 Int) ) (!  (=> true (= ($generated@@392 $generated@@702 $generated@@703) ($generated@@392 $generated@@703 $generated@@702)))
 :pattern ( ($generated@@392 $generated@@703 $generated@@702))
 :pattern ( ($generated@@392 $generated@@702 $generated@@703))
))))) (and (=> (= (ControlFlow 0 67) 66) $generated@@691) (=> (= (ControlFlow 0 67) 3) $generated@@698)))))
(let (($generated@@704 true))
(let (($generated@@705  (=> (and (and (and ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@586) ($generated@@74 ($generated@@8 $generated@@605) $generated@@46 $generated@@586)) (and ($generated@@393 $generated@@604 $generated@@605) ($generated@@74 ($generated@@8 $generated@@605) $generated@@46 $generated@@586))) (and (and ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@586) ($generated@@393 $generated@@605 $generated@@604)) (and (forall (($generated@@706 Int) ($generated@@707 Int) ) (!  (and ($generated@@393 $generated@@706 $generated@@707) ($generated@@393 $generated@@707 $generated@@706))
 :pattern ( ($generated@@392 $generated@@707 $generated@@706))
 :pattern ( ($generated@@392 $generated@@706 $generated@@707))
)) (forall (($generated@@708 Int) ($generated@@709 Int) ) (!  (=> true (= ($generated@@392 $generated@@708 $generated@@709) ($generated@@392 $generated@@709 $generated@@708)))
 :pattern ( ($generated@@392 $generated@@709 $generated@@708))
 :pattern ( ($generated@@392 $generated@@708 $generated@@709))
))))) (and (=> (= (ControlFlow 0 68) 67) $generated@@699) (=> (= (ControlFlow 0 68) 2) $generated@@704)))))
(let (($generated@@710 true))
(let (($generated@@711  (=> (= $generated@@606 ($generated@@156 $generated@@607 $generated@@586 $generated@@60 false)) (and (=> (= (ControlFlow 0 69) 68) $generated@@705) (=> (= (ControlFlow 0 69) 1) $generated@@710)))))
(let (($generated@@712  (=> (and (and ($generated@@241 $generated@@586) ($generated@@608 $generated@@586)) (and (= 1 $generated@@237) (= (ControlFlow 0 70) 69))) $generated@@711)))
$generated@@712))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
