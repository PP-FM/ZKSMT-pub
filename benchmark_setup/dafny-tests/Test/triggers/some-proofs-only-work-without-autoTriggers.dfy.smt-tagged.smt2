(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U Int) T@U)
(declare-fun $generated@@247 (T@U Int) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@132 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@136)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@145)) (= (type $generated@@227) $generated@@145)) (= ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@136) (= (type $generated@@229) $generated@@136)) (= ($generated@@142 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@142 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@145) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (and (forall (($generated@@249 T@U) ($generated@@250 Int) ) (! (let (($generated@@251 ($generated@@153 (type $generated@@249))))
(= (type ($generated@@246 $generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@246 $generated@@249 $generated@@250))
)) (forall (($generated@@252 T@U) ($generated@@253 Int) ) (! (let (($generated@@254 ($generated@@153 (type $generated@@252))))
(= (type ($generated@@247 $generated@@252 $generated@@253)) ($generated@@152 $generated@@254)))
 :pattern ( ($generated@@247 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 Int) ($generated@@257 Int) ) (! (let (($generated@@258 ($generated@@153 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@152 $generated@@258)) (=> (and (and (<= 0 $generated@@257) (< $generated@@257 $generated@@256)) (< $generated@@257 ($generated@@248 $generated@@255))) (= ($generated@@246 ($generated@@247 $generated@@255 $generated@@256) $generated@@257) ($generated@@246 $generated@@255 $generated@@257)))))
 :weight 25
 :pattern ( ($generated@@246 ($generated@@247 $generated@@255 $generated@@256) $generated@@257))
 :pattern ( ($generated@@246 $generated@@255 $generated@@257) ($generated@@247 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@145)) (= (type $generated@@264) $generated@@145)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@220 $generated@@263 $generated@@264) ($generated@@135 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@263 $generated@@264) ($generated@@135 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@136) (= ($generated@@134 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 Int) ) (! (let (($generated@@272 ($generated@@153 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@152 $generated@@272)) (=> (and (<= 0 $generated@@271) (< $generated@@271 ($generated@@248 $generated@@270))) (< ($generated@@269 ($generated@@247 $generated@@270 $generated@@271)) ($generated@@269 $generated@@270)))))
 :pattern ( ($generated@@269 ($generated@@247 $generated@@270 $generated@@271)))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@136) ($generated@@134 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@145) (= (type $generated@@275) $generated@@145)) (= $generated@@273 ($generated@@220 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@134 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@248 ($generated@@151 $generated@@276)) 0)
 :pattern ( ($generated@@151 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@145)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@160 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@160 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@292 (type $generated@@327))))
(let (($generated@@329 ($generated@@291 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@290 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@289 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@288 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@292 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@292 (type $generated@@334))))
(let (($generated@@336 ($generated@@291 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@290 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@289 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@310 (type $generated@@338))))
(let (($generated@@340 ($generated@@309 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@308 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@307 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@306 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@310 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@310 (type $generated@@345))))
(let (($generated@@347 ($generated@@309 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@308 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@307 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@132 $generated@@349 ($generated@@159 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@221 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@132 $generated@@349 ($generated@@159 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 Int) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
 (=> (= (type $generated@@352) ($generated@@152 $generated@@355)) (= ($generated@@150 ($generated@@247 $generated@@352 $generated@@353) $generated@@354) (exists (($generated@@356 Int) ) (!  (and (and (and (<= 0 $generated@@356) (< $generated@@356 $generated@@353)) (< $generated@@356 ($generated@@248 $generated@@352))) (= ($generated@@246 $generated@@352 $generated@@356) $generated@@354))
 :pattern ( ($generated@@246 $generated@@352 $generated@@356))
)))))
 :pattern ( ($generated@@150 ($generated@@247 $generated@@352 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
 (=> (= (type $generated@@357) ($generated@@152 $generated@@359)) (= ($generated@@150 $generated@@357 $generated@@358) (exists (($generated@@360 Int) ) (!  (and (and (<= 0 $generated@@360) (< $generated@@360 ($generated@@248 $generated@@357))) (= ($generated@@246 $generated@@357 $generated@@360) $generated@@358))
 :pattern ( ($generated@@246 $generated@@357 $generated@@360))
)))))
 :pattern ( ($generated@@150 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@230 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@260 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@230 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@235 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@145) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@260 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@235 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@81 ($generated@@283 $generated@@370) $generated@@369)))
)))
(assert  (and (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@371 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@374))
)) (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@372 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@292 (type $generated@@377))))
(let (($generated@@379 ($generated@@291 (type $generated@@377))))
(= (type ($generated@@373 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@373 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@290 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@380) ($generated@@143 ($generated@@372 $generated@@136 $generated@@381)))) (= ($generated@@81 ($generated@@373 $generated@@380) ($generated@@143 ($generated@@372 $generated@@136 $generated@@381))) ($generated@@144 ($generated@@372 $generated@@136 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@310 (type $generated@@385))))
(let (($generated@@387 ($generated@@309 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@388) ($generated@@143 ($generated@@372 $generated@@136 $generated@@389)))) (= ($generated@@81 ($generated@@383 $generated@@388) ($generated@@143 ($generated@@372 $generated@@136 $generated@@389))) ($generated@@144 ($generated@@372 $generated@@136 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@291 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@290 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@309 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@308 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@290 $generated@@145 $generated@@145)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@403) $generated@@407))) (and ($generated@@260 ($generated@@81 ($generated@@373 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@260 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@411) $generated@@415))) (and ($generated@@260 ($generated@@81 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@260 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 Int) ) (! (let (($generated@@418 ($generated@@153 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@152 $generated@@418)) (=> (and (<= 0 $generated@@417) (<= $generated@@417 ($generated@@248 $generated@@416))) (= ($generated@@248 ($generated@@247 $generated@@416 $generated@@417)) $generated@@417))))
 :pattern ( ($generated@@248 ($generated@@247 $generated@@416 $generated@@417)))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@342 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@342 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@382 $generated@@427) ($generated@@419 $generated@@145))))))
 :pattern ( ($generated@@382 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@145) (= (type $generated@@434) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@430) ($generated@@277 ($generated@@220 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@371 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@435) ($generated@@277 ($generated@@220 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@221 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@372 $generated@@2 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@372 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@221 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@372 $generated@@3 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@372 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@221 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@372 $generated@@4 $generated@@442)) $generated@@442) ($generated@@132 ($generated@@372 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@145) ($generated@@221 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@372 $generated@@443 $generated@@444)) $generated@@444) ($generated@@132 ($generated@@372 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@221 ($generated@@277 $generated@@445) $generated@@446) ($generated@@132 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@221 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@153 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@152 $generated@@450)) (<= 0 ($generated@@248 $generated@@449))))
 :pattern ( ($generated@@248 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@400 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@400 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@400 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@408 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@408 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@408 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@266 ($generated@@220 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@135 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@135 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@143 ($generated@@220 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@220 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@144 ($generated@@220 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@220 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@152 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@485 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@248 $generated@@487))) ($generated@@260 ($generated@@246 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@246 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@485 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@230 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@230 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@235 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@235 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@159 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@159 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@485 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@485 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@485 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@372 $generated@@510 ($generated@@277 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@277 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@290 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@400 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@511) $generated@@514))) (and ($generated@@221 ($generated@@81 ($generated@@373 $generated@@511) $generated@@514) $generated@@513) ($generated@@221 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@400 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@408 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@515) $generated@@518))) (and ($generated@@221 ($generated@@81 ($generated@@383 $generated@@515) $generated@@518) $generated@@517) ($generated@@221 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@408 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@145)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@220 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@220 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@220 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@220 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@221 $generated@@525 ($generated@@400 $generated@@526 $generated@@527))) (and (= ($generated@@277 ($generated@@372 ($generated@@290 $generated@@145 $generated@@145) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@372 ($generated@@290 $generated@@145 $generated@@145) $generated@@525) ($generated@@400 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@525 ($generated@@400 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@221 $generated@@528 ($generated@@408 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@372 ($generated@@308 $generated@@145 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@372 ($generated@@308 $generated@@145 $generated@@145) $generated@@528) ($generated@@408 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@408 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@145)) ($generated@@221 $generated@@533 ($generated@@135 $generated@@531 $generated@@532))) (and (= ($generated@@277 ($generated@@372 $generated@@136 $generated@@533)) $generated@@533) ($generated@@132 ($generated@@372 $generated@@136 $generated@@533) ($generated@@135 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@221 $generated@@533 ($generated@@135 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@81 ($generated@@419 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@69)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@135 $generated@@538 $generated@@539)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@136) (= ($generated@@519 ($generated@@277 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@277 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) ($generated@@221 $generated@@541 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@372 $generated@@2 $generated@@541)) $generated@@541) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@541) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@75 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@221 $generated@@542 ($generated@@230 $generated@@543))) (and (= ($generated@@277 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@542) ($generated@@230 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@230 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@221 $generated@@544 ($generated@@235 $generated@@545))) (and (= ($generated@@277 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@544) ($generated@@235 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@544 ($generated@@235 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@221 $generated@@546 ($generated@@159 $generated@@547))) (and (= ($generated@@277 ($generated@@372 ($generated@@76 $generated@@145 $generated@@2) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@2) $generated@@546) ($generated@@159 $generated@@547))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@159 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@221 $generated@@548 ($generated@@485 $generated@@549))) (and (= ($generated@@277 ($generated@@372 ($generated@@152 $generated@@145) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@372 ($generated@@152 $generated@@145) $generated@@548) ($generated@@485 $generated@@549))))
 :pattern ( ($generated@@221 $generated@@548 ($generated@@485 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@550 ($generated@@159 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@550 $generated@@553)))) ($generated@@260 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@81 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@159 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@260 ($generated@@143 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@260 ($generated@@143 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@134 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@135 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@135 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@260 ($generated@@144 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@144 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@145)) (= ($generated@@220 ($generated@@242 $generated@@562) ($generated@@242 $generated@@563)) ($generated@@242 ($generated@@220 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@562) ($generated@@242 $generated@@563)))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@240 $generated@@564))) ($generated@@242 ($generated@@277 ($generated@@8 $generated@@564))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@240 $generated@@564))))
)))
(assert (forall (($generated@@565 T@U) ) (! (= ($generated@@277 ($generated@@242 $generated@@565)) ($generated@@242 ($generated@@277 $generated@@565)))
 :pattern ( ($generated@@277 ($generated@@242 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@153 (type $generated@@566))))
 (=> (and (= (type $generated@@566) ($generated@@152 $generated@@567)) (= ($generated@@248 $generated@@566) 0)) (= $generated@@566 ($generated@@151 $generated@@567))))
 :pattern ( ($generated@@248 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 Int) ) (! (let (($generated@@570 ($generated@@153 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@152 $generated@@570)) (= $generated@@569 0)) (= ($generated@@247 $generated@@568 $generated@@569) ($generated@@151 $generated@@570))))
 :pattern ( ($generated@@247 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@282 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@282 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@443)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@145)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@152 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= ($generated@@132 $generated@@585 ($generated@@485 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@248 $generated@@585))) ($generated@@221 ($generated@@246 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@246 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@485 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@248 $generated@@588))) (< ($generated@@520 ($generated@@372 $generated@@136 ($generated@@246 $generated@@588 $generated@@589))) ($generated@@269 $generated@@588))))
 :pattern ( ($generated@@520 ($generated@@372 $generated@@136 ($generated@@246 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@290 $generated@@145 $generated@@145)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@132 $generated@@590 ($generated@@400 $generated@@591 $generated@@592))) (and (and ($generated@@132 ($generated@@288 $generated@@590) ($generated@@230 $generated@@591)) ($generated@@132 ($generated@@331 $generated@@590) ($generated@@230 $generated@@592))) ($generated@@132 ($generated@@371 $generated@@590) ($generated@@230 ($generated@@135 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@132 $generated@@590 ($generated@@400 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@132 $generated@@593 ($generated@@408 $generated@@594 $generated@@595))) (and (and ($generated@@132 ($generated@@306 $generated@@593) ($generated@@235 $generated@@594)) ($generated@@132 ($generated@@342 $generated@@593) ($generated@@235 $generated@@595))) ($generated@@132 ($generated@@382 $generated@@593) ($generated@@235 ($generated@@135 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@132 $generated@@593 ($generated@@408 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@132 $generated@@596 $generated@@46))
 :pattern ( ($generated@@132 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@132 $generated@@597 $generated@@47))
 :pattern ( ($generated@@132 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@132 $generated@@598 $generated@@44))
 :pattern ( ($generated@@132 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@443) ($generated@@132 $generated@@599 $generated@@45))
 :pattern ( ($generated@@132 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@145) ($generated@@132 $generated@@600 $generated@@48))
 :pattern ( ($generated@@132 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (= (type $generated@@601) ($generated@@152 $generated@@145)) (= (type $generated@@608) ($generated@@166 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@77)) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@613  (=> (= (ControlFlow 0 30) (- 0 29)) (forall (($generated@@614 Int) ) (!  (=> ($generated@@150 ($generated@@247 $generated@@601 ($generated@@240 2)) ($generated@@277 ($generated@@8 $generated@@614))) (> $generated@@614 1))
 :pattern ( ($generated@@150 ($generated@@247 $generated@@601 2) ($generated@@277 ($generated@@8 $generated@@614))))
)))))
(let (($generated@@615  (=> (and (not ($generated@@150 ($generated@@247 $generated@@601 ($generated@@240 2)) ($generated@@277 ($generated@@8 $generated@@602)))) (= (ControlFlow 0 32) 30)) $generated@@613)))
(let (($generated@@616  (=> (and ($generated@@150 ($generated@@247 $generated@@601 ($generated@@240 2)) ($generated@@277 ($generated@@8 $generated@@602))) (= (ControlFlow 0 31) 30)) $generated@@613)))
(let (($generated@@617  (and (=> (= (ControlFlow 0 33) (- 0 34)) (and (<= 0 ($generated@@240 2)) (<= ($generated@@240 2) ($generated@@248 $generated@@601)))) (and (=> (= (ControlFlow 0 33) 31) $generated@@616) (=> (= (ControlFlow 0 33) 32) $generated@@615)))))
(let (($generated@@618 true))
(let (($generated@@619  (=> (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@2) ($generated@@150 ($generated@@247 $generated@@601 ($generated@@240 3)) ($generated@@277 $generated@@620))) (> ($generated $generated@@620) 1))
 :pattern ( ($generated@@150 ($generated@@247 $generated@@601 3) ($generated@@277 $generated@@620)))
)) (and (=> (= (ControlFlow 0 35) 33) $generated@@617) (=> (= (ControlFlow 0 35) 28) $generated@@618)))))
(let (($generated@@621  (=> (and (not ($generated@@150 ($generated@@247 $generated@@601 ($generated@@240 3)) ($generated@@277 ($generated@@8 $generated@@603)))) (= (ControlFlow 0 37) 35)) $generated@@619)))
(let (($generated@@622  (=> (and ($generated@@150 ($generated@@247 $generated@@601 ($generated@@240 3)) ($generated@@277 ($generated@@8 $generated@@603))) (= (ControlFlow 0 36) 35)) $generated@@619)))
(let (($generated@@623  (and (=> (= (ControlFlow 0 38) (- 0 39)) (and (<= 0 ($generated@@240 3)) (<= ($generated@@240 3) ($generated@@248 $generated@@601)))) (and (=> (= (ControlFlow 0 38) 36) $generated@@622) (=> (= (ControlFlow 0 38) 37) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (> ($generated@@248 $generated@@601) 3) (and (=> (= (ControlFlow 0 40) 38) $generated@@623) (=> (= (ControlFlow 0 40) 27) $generated@@624)))))
(let (($generated@@626  (=> (= (ControlFlow 0 16) (- 0 15)) (forall (($generated@@627 Int) ) (!  (=> (and (<= ($generated@@240 0) $generated@@627) (< $generated@@627 ($generated@@248 $generated@@601))) (> ($generated ($generated@@372 $generated@@2 ($generated@@246 $generated@@601 $generated@@627))) 0))
 :pattern ( ($generated@@372 $generated@@2 ($generated@@246 $generated@@601 $generated@@627)))
)))))
(let (($generated@@628  (=> (and (not (and (<= ($generated@@240 0) $generated@@604) (< $generated@@604 ($generated@@248 $generated@@601)))) (= (ControlFlow 0 19) 16)) $generated@@626)))
(let (($generated@@629  (=> (and (<= ($generated@@240 0) $generated@@604) (< $generated@@604 ($generated@@248 $generated@@601))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@248 $generated@@601)))) (=> (= (ControlFlow 0 17) 16) $generated@@626)))))
(let (($generated@@630  (=> (< $generated@@604 ($generated@@240 0)) (and (=> (= (ControlFlow 0 21) 17) $generated@@629) (=> (= (ControlFlow 0 21) 19) $generated@@628)))))
(let (($generated@@631  (=> (<= ($generated@@240 0) $generated@@604) (and (=> (= (ControlFlow 0 20) 17) $generated@@629) (=> (= (ControlFlow 0 20) 19) $generated@@628)))))
(let (($generated@@632  (and (=> (= (ControlFlow 0 22) 20) $generated@@631) (=> (= (ControlFlow 0 22) 21) $generated@@630))))
(let (($generated@@633 true))
(let (($generated@@634  (=> (forall (($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@2) true) ($generated@@150 $generated@@601 ($generated@@277 $generated@@635))) (> ($generated $generated@@635) 0))
 :pattern ( ($generated@@150 $generated@@601 ($generated@@277 $generated@@635)))
)) (and (=> (= (ControlFlow 0 23) 22) $generated@@632) (=> (= (ControlFlow 0 23) 14) $generated@@633)))))
(let (($generated@@636  (=> (and (not ($generated@@150 $generated@@601 ($generated@@277 ($generated@@8 $generated@@605)))) (= (ControlFlow 0 25) 23)) $generated@@634)))
(let (($generated@@637  (=> (and ($generated@@150 $generated@@601 ($generated@@277 ($generated@@8 $generated@@605))) (= (ControlFlow 0 24) 23)) $generated@@634)))
(let (($generated@@638  (and (=> (= (ControlFlow 0 26) 24) $generated@@637) (=> (= (ControlFlow 0 26) 25) $generated@@636))))
(let (($generated@@639  (=> (= (ControlFlow 0 5) (- 0 4)) (forall (($generated@@640 Int) ) (!  (=> true (=> ($generated@@150 ($generated@@247 $generated@@601 ($generated@@248 $generated@@601)) ($generated@@277 ($generated@@8 $generated@@640))) (> $generated@@640 0)))
 :pattern ( ($generated@@150 ($generated@@247 $generated@@601 ($generated@@248 $generated@@601)) ($generated@@277 ($generated@@8 $generated@@640))))
)))))
(let (($generated@@641  (=> (and (not ($generated@@150 ($generated@@247 $generated@@601 ($generated@@248 $generated@@601)) ($generated@@277 ($generated@@8 $generated@@606)))) (= (ControlFlow 0 7) 5)) $generated@@639)))
(let (($generated@@642  (=> (and ($generated@@150 ($generated@@247 $generated@@601 ($generated@@248 $generated@@601)) ($generated@@277 ($generated@@8 $generated@@606))) (= (ControlFlow 0 6) 5)) $generated@@639)))
(let (($generated@@643  (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 ($generated@@248 $generated@@601)) (<= ($generated@@248 $generated@@601) ($generated@@248 $generated@@601)))) (and (=> (= (ControlFlow 0 8) 6) $generated@@642) (=> (= (ControlFlow 0 8) 7) $generated@@641)))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (forall (($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@2) true) ($generated@@150 $generated@@601 ($generated@@277 $generated@@646))) (> ($generated $generated@@646) 0))
 :pattern ( ($generated@@150 $generated@@601 ($generated@@277 $generated@@646)))
)) (and (=> (= (ControlFlow 0 10) 8) $generated@@643) (=> (= (ControlFlow 0 10) 3) $generated@@644)))))
(let (($generated@@647  (=> (and (not ($generated@@150 $generated@@601 ($generated@@277 ($generated@@8 $generated@@607)))) (= (ControlFlow 0 12) 10)) $generated@@645)))
(let (($generated@@648  (=> (and ($generated@@150 $generated@@601 ($generated@@277 ($generated@@8 $generated@@607))) (= (ControlFlow 0 11) 10)) $generated@@645)))
(let (($generated@@649  (and (=> (= (ControlFlow 0 13) 11) $generated@@648) (=> (= (ControlFlow 0 13) 12) $generated@@647))))
(let (($generated@@650 true))
(let (($generated@@651 true))
(let (($generated@@652  (=> (= $generated@@608 ($generated@@165 $generated@@609 $generated@@610 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 41) 40) $generated@@625) (=> (= (ControlFlow 0 41) 26) $generated@@638)) (=> (= (ControlFlow 0 41) 1) $generated@@651)) (=> (= (ControlFlow 0 41) 13) $generated@@649)) (=> (= (ControlFlow 0 41) 2) $generated@@650)))))
(let (($generated@@653  (=> (and ($generated@@259 $generated@@610) ($generated@@611 $generated@@610)) (=> (and (and ($generated@@132 $generated@@601 ($generated@@485 $generated@@46)) ($generated@@74 $generated@@601 ($generated@@485 $generated@@46) $generated@@610)) (and (= 0 $generated@@612) (= (ControlFlow 0 42) 41))) $generated@@652))))
$generated@@653))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 30) (- 29))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 16) (- 15))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
