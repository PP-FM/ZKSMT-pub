(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (Bool Bool Bool) T@U)
(declare-fun $generated@@80 (Bool Bool Bool) Bool)
(declare-fun $generated@@81 (Bool Int) Bool)
(declare-fun $generated@@82 (Int) Int)
(declare-fun $generated@@83 (Bool Int) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (Int) T@U)
(declare-fun $generated@@114 (T@T T@T) T@T)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U) T@U)
(declare-fun $generated@@122 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Int)
(declare-fun $generated@@181 (T@U Int) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@185 (T@U) Int)
(declare-fun $generated@@186 (T@U) Int)
(declare-fun $generated@@187 (T@T T@U) T@U)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U) T@U)
(declare-fun $generated@@209 (T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@T T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@277 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@302 (T@U T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (Int) T@U)
(declare-fun $generated@@306 () T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@334 (T@U) Bool)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@349 (T@U T@U) Bool)
(declare-fun $generated@@370 (T@U) Int)
(declare-fun $generated@@371 (T@T) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@T) T@U)
(declare-fun $generated@@378 (T@T T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@380 (T@T) T@T)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@T) T@U)
(declare-fun $generated@@396 (T@T T@T) T@T)
(declare-fun $generated@@397 (T@T) T@T)
(declare-fun $generated@@398 (T@T) T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@499 (T@U T@U) T@U)
(declare-fun $generated@@515 (T@T) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@616 (T@U) Int)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@639 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@91) 11) (forall (($generated@@92 Bool) ($generated@@93 Bool) ($generated@@94 Bool) ) (! (= (type ($generated@@79 $generated@@92 $generated@@93 $generated@@94)) $generated@@91)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 Bool) ($generated@@96 Int) ) (! (= (type ($generated@@83 $generated@@95 $generated@@96)) $generated@@91)
 :pattern ( ($generated@@83 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ) (! (= (type ($generated@@88 $generated@@97)) $generated@@91)
 :pattern ( ($generated@@88 $generated@@97))
))) (forall (($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(= (type ($generated@@89 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@89 $generated@@98))
))) (forall (($generated@@100 Int) ) (! (= (type ($generated@@90 $generated@@100)) $generated@@91)
 :pattern ( ($generated@@90 $generated@@100))
))))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@101 Bool) ($generated@@102 Bool) ($generated@@103 Bool) ) (!  (=> (or ($generated@@80 $generated@@101 $generated@@102 $generated@@103) (not (= 3 $generated@@78))) (and (and ($generated@@81 $generated@@101 ($generated@@82 88)) (let (($generated@@104 ($generated@@83 $generated@@101 ($generated@@82 88))))
 (and (and ($generated@@84 $generated@@104) (=> ($generated@@85 $generated@@104) ($generated@@86 $generated@@104))) (=> (not ($generated@@85 $generated@@104)) (and ($generated@@87 $generated@@104) (and ($generated@@81 $generated@@102 ($generated@@82 42)) (let (($generated@@105 ($generated@@83 $generated@@102 ($generated@@82 42))))
 (and (and ($generated@@84 $generated@@105) (=> ($generated@@85 $generated@@105) ($generated@@86 $generated@@105))) (=> (not ($generated@@85 $generated@@105)) (and ($generated@@87 $generated@@105) (and ($generated@@81 $generated@@103 ($generated@@82 33)) (let (($generated@@106 ($generated@@83 $generated@@103 ($generated@@82 33))))
 (and (and ($generated@@84 $generated@@106) (=> ($generated@@85 $generated@@106) ($generated@@86 $generated@@106))) (=> (not ($generated@@85 $generated@@106)) ($generated@@87 $generated@@106))))))))))))))) (= ($generated@@79 $generated@@101 $generated@@102 $generated@@103) (let (($generated@@107 ($generated@@83 $generated@@101 ($generated@@82 88))))
(ite ($generated@@85 $generated@@107) ($generated@@88 $generated@@107) (let (($generated@@108 ($generated@@83 $generated@@102 ($generated@@82 42))))
(ite ($generated@@85 $generated@@108) ($generated@@88 $generated@@108) (let (($generated@@109 ($generated@@83 $generated@@103 ($generated@@82 33))))
(ite ($generated@@85 $generated@@109) ($generated@@88 $generated@@109) ($generated@@89 ($generated@@90 ($generated@@82 100))))))))))))
 :pattern ( ($generated@@79 $generated@@101 $generated@@102 $generated@@103))
))))
(assert (forall (($generated@@111 T@U) ) (! (= (type ($generated@@110 $generated@@111)) $generated@@71)
 :pattern ( ($generated@@110 $generated@@111))
)))
(assert (= ($generated@@110 $generated@@44) $generated@@49))
(assert (= ($generated@@110 $generated@@45) $generated@@50))
(assert (= ($generated@@110 $generated@@46) $generated@@51))
(assert (= ($generated@@110 $generated@@47) $generated@@52))
(assert (= ($generated@@110 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@1 ($generated@@114 $generated@@123 $generated@@124)) 12)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@117 ($generated@@114 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@114 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@118 ($generated@@114 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@114 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@118 (type $generated@@129))))
(= (type ($generated@@119 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@119 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@133)))
(= (type ($generated@@120 $generated@@132 $generated@@133 $generated@@134)) ($generated@@114 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@120 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@118 (type $generated@@137))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@119 ($generated@@120 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@119 ($generated@@120 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@119 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@119 ($generated@@120 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@119 $generated@@146 $generated@@148)))
 :weight 0
)))) (= ($generated@@1 $generated@@115) 13)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@73 (type $generated@@150))))
(= (type ($generated@@121 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@121 $generated@@149 $generated@@150))
))) (= ($generated@@1 $generated@@116) 14)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@122 $generated@@152 $generated@@153 $generated@@154)) $generated@@116)
 :pattern ( ($generated@@122 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@73 (type $generated@@156))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@121 ($generated@@122 $generated@@155 $generated@@156 $generated@@157) $generated@@156) $generated@@157)))
 :weight 0
))) (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@121 ($generated@@122 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@121 $generated@@160 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or true (= ($generated@@121 ($generated@@122 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@121 $generated@@164 $generated@@166)))
 :weight 0
)))) (forall (($generated@@167 Int) ) (! (= (type ($generated@@113 $generated@@167)) $generated@@70)
 :pattern ( ($generated@@113 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@2) (= (type $generated@@169) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@112 $generated@@168 ($generated@@113 0) $generated@@169))
 :pattern ( ($generated@@112 $generated@@168 ($generated@@113 0) $generated@@169))
)))
(assert (= (type $generated@@170) $generated@@70))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@2) (= (type $generated@@172) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@112 $generated@@171 $generated@@170 $generated@@172))
 :pattern ( ($generated@@112 $generated@@171 $generated@@170 $generated@@172))
)))
(assert (= (type $generated@@174) $generated@@70))
(assert  (=> true (forall (($generated@@175 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@91) (or ($generated@@86 $generated@@175) (and ($generated@@173 $generated@@175 $generated@@174) ($generated@@85 $generated@@175)))) ($generated@@173 ($generated@@88 $generated@@175) $generated@@174))
 :pattern ( ($generated@@88 $generated@@175))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@91) (= (type $generated@@180) $generated@@91)) (and ($generated@@177 $generated@@179) ($generated@@177 $generated@@180))) (= ($generated@@176 $generated@@179 $generated@@180) (= ($generated@@178 $generated@@179) ($generated@@178 $generated@@180))))
 :pattern ( ($generated@@176 $generated@@179 $generated@@180) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@176 $generated@@179 $generated@@180) ($generated@@177 $generated@@180))
)))
(assert  (and (and (and (and (and (forall (($generated@@189 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@189)) 15)) (forall (($generated@@190 T@T) ) (! (= ($generated@@188 ($generated@@183 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@183 $generated@@190))
))) (= ($generated@@1 $generated@@184) 16)) (forall (($generated@@191 T@U) ($generated@@192 Int) ) (! (let (($generated@@193 ($generated@@188 (type $generated@@191))))
(= (type ($generated@@181 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@181 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@182 $generated@@194)) $generated@@91)
 :pattern ( ($generated@@182 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@U) ) (! (= (type ($generated@@187 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@187 $generated@@195 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (= (type $generated@@197) ($generated@@183 $generated@@184)) (=> (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@185 $generated@@197))) (< ($generated@@186 ($generated@@187 $generated@@91 ($generated@@181 $generated@@197 $generated@@198))) ($generated@@186 ($generated@@182 $generated@@197)))))
 :pattern ( ($generated@@181 $generated@@197 $generated@@198) ($generated@@182 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (!  (=> (= (type $generated@@199) $generated@@2) ($generated@@173 $generated@@199 ($generated@@113 0)))
 :pattern ( ($generated@@173 $generated@@199 ($generated@@113 0)))
)))
(assert  (=> true (forall (($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@91) (or ($generated@@87 ($generated@@89 $generated@@201)) (and ($generated@@173 $generated@@201 $generated@@174) (not ($generated@@0 ($generated@@89 ($generated@@11 ($generated@@85 ($generated@@89 $generated@@201))))))))) (= ($generated@@200 ($generated@@89 $generated@@201)) ($generated@@82 ($generated@@178 ($generated@@89 $generated@@201)))))
 :weight 3
 :pattern ( ($generated@@200 ($generated@@89 $generated@@201)))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@203 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (and (= (type $generated@@206) $generated@@70) (= (type $generated@@207) $generated@@70)) (= (type $generated@@208) $generated@@91)) ($generated@@173 $generated@@208 ($generated@@203 $generated@@206 $generated@@207))) ($generated@@202 $generated@@208))
 :pattern ( ($generated@@202 $generated@@208) ($generated@@173 $generated@@208 ($generated@@203 $generated@@206 $generated@@207)))
)))
(assert  (and (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@184)
 :pattern ( ($generated@@210 $generated@@212))
)) (forall (($generated@@213 T@U) ) (! (= (type ($generated@@211 $generated@@213)) $generated@@184)
 :pattern ( ($generated@@211 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (= (type $generated@@214) $generated@@91) (= (type $generated@@215) $generated@@91)) true) (= ($generated@@209 $generated@@214 $generated@@215)  (and (= ($generated@@210 $generated@@214) ($generated@@210 $generated@@215)) (= ($generated@@211 $generated@@214) ($generated@@211 $generated@@215)))))
 :pattern ( ($generated@@209 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ) (! (= (type ($generated@@216 $generated@@218)) $generated@@70)
 :pattern ( ($generated@@216 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (= (type $generated@@219) ($generated@@114 $generated@@184 $generated@@2)) (= (type $generated@@220) $generated@@70)) ($generated@@173 $generated@@219 ($generated@@216 $generated@@220))) ($generated@@217 $generated@@219))
 :pattern ( ($generated@@173 $generated@@219 ($generated@@216 $generated@@220)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@227 $generated@@228)) 17)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@223 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@225 ($generated@@223 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@223 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@221 $generated@@233 $generated@@234 $generated@@235)) $generated@@236))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234 $generated@@235))
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(let (($generated@@242 (type $generated@@238)))
(= (type ($generated@@226 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@223 $generated@@242 $generated@@241))))
 :pattern ( ($generated@@226 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@225 (type $generated@@243))))
 (=> (= (type $generated@@246) $generated@@247) (= ($generated@@221 ($generated@@226 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@244 $generated@@245) $generated@@246)))
 :weight 0
))) (and (and (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or (= $generated@@250 $generated@@252) (= ($generated@@221 ($generated@@226 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@221 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (or (= $generated@@257 $generated@@259) (= ($generated@@221 ($generated@@226 $generated@@255 $generated@@256 $generated@@257 $generated@@254) $generated@@258 $generated@@259) ($generated@@221 $generated@@255 $generated@@258 $generated@@259)))
 :weight 0
))) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (or true (= ($generated@@221 ($generated@@226 $generated@@261 $generated@@262 $generated@@263 $generated@@260) $generated@@264 $generated@@265) ($generated@@221 $generated@@261 $generated@@264 $generated@@265)))
 :weight 0
)))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ) (! (= (type ($generated@@222 $generated@@266 $generated@@267 $generated@@268 $generated@@269)) ($generated@@223 $generated@@115 $generated@@4))
 :pattern ( ($generated@@222 $generated@@266 $generated@@267 $generated@@268 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 Bool) ($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@73 (type $generated@@275))))
 (=> (and (and (and (and (= (type $generated@@270) $generated@@115) (= (type $generated@@271) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@272) ($generated@@72 $generated@@4))) (= (type $generated@@274) $generated@@115)) (= (type $generated@@275) ($generated@@72 $generated@@276))) (= ($generated@@0 ($generated@@221 ($generated@@222 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))  (=> (and (not (= $generated@@274 $generated@@270)) ($generated@@0 ($generated@@121 ($generated@@119 $generated@@271 $generated@@274) $generated@@272))) $generated@@273))))
 :pattern ( ($generated@@221 ($generated@@222 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Bool) ) (! (= (type ($generated@@277 $generated@@278 $generated@@279 $generated@@280 $generated@@281)) ($generated@@223 $generated@@115 $generated@@4))
 :pattern ( ($generated@@277 $generated@@278 $generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 Bool) ($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@73 (type $generated@@287))))
 (=> (and (and (and (and (= (type $generated@@282) $generated@@115) (= (type $generated@@283) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@284) ($generated@@72 $generated@@4))) (= (type $generated@@286) $generated@@115)) (= (type $generated@@287) ($generated@@72 $generated@@288))) (= ($generated@@0 ($generated@@221 ($generated@@277 $generated@@282 $generated@@283 $generated@@284 $generated@@285) $generated@@286 $generated@@287))  (=> (and (not (= $generated@@286 $generated@@282)) ($generated@@0 ($generated@@121 ($generated@@119 $generated@@283 $generated@@286) $generated@@284))) $generated@@285))))
 :pattern ( ($generated@@221 ($generated@@277 $generated@@282 $generated@@283 $generated@@284 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@291 $generated@@292)) $generated@@91)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) $generated@@70)) (= (type $generated@@295) $generated@@184)) (= (type $generated@@296) $generated@@184)) (= ($generated@@173 ($generated@@289 $generated@@295 $generated@@296) ($generated@@203 $generated@@293 $generated@@294))  (and ($generated@@290 $generated@@295 $generated@@293) ($generated@@290 $generated@@296 $generated@@294))))
 :pattern ( ($generated@@173 ($generated@@289 $generated@@295 $generated@@296) ($generated@@203 $generated@@293 $generated@@294)))
)))
(assert  (=> true (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@91) (or ($generated@@84 $generated@@297) ($generated@@173 $generated@@297 $generated@@174))) true)
 :pattern ( ($generated@@85 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@91) (= (type $generated@@299) $generated@@91)) (= ($generated@@209 $generated@@298 $generated@@299) (= $generated@@298 $generated@@299)))
 :pattern ( ($generated@@209 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@91) (= (type $generated@@301) $generated@@91)) (= ($generated@@176 $generated@@300 $generated@@301) (= $generated@@300 $generated@@301)))
 :pattern ( ($generated@@176 $generated@@300 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 (type $generated@@308)))
(= (type ($generated@@302 $generated@@307 $generated@@308)) ($generated@@183 $generated@@309)))
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
)) (forall (($generated@@310 T@T) ) (! (= (type ($generated@@303 $generated@@310)) ($generated@@183 $generated@@310))
 :pattern ( ($generated@@303 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (= (type ($generated@@304 $generated@@311)) $generated@@184)
 :pattern ( ($generated@@304 $generated@@311))
))) (= ($generated@@1 $generated@@306) 18)) (forall (($generated@@312 Int) ) (! (= (type ($generated@@305 $generated@@312)) $generated@@306)
 :pattern ( ($generated@@305 $generated@@312))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@313 T@U) ($generated@@314 Int) ) (!  (=> (and (= (type $generated@@313) $generated@@4) (or ($generated@@81 ($generated@@0 ($generated@@89 $generated@@313)) ($generated@@82 $generated@@314)) (and (not (= 2 $generated@@78)) (<= ($generated@@82 0) $generated@@314)))) (= ($generated@@83 ($generated@@0 ($generated@@89 $generated@@313)) ($generated@@82 $generated@@314)) (ite ($generated@@0 $generated@@313) ($generated@@90 ($generated@@82 $generated@@314)) ($generated@@182 ($generated@@89 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@303 $generated@@184) ($generated@@304 ($generated@@305 98))) ($generated@@304 ($generated@@305 97))) ($generated@@304 ($generated@@305 100))) ($generated@@304 ($generated@@305 32))) ($generated@@304 ($generated@@305 108))) ($generated@@304 ($generated@@305 117))) ($generated@@304 ($generated@@305 99))) ($generated@@304 ($generated@@305 107))))))))
 :weight 3
 :pattern ( ($generated@@83 ($generated@@0 ($generated@@89 $generated@@313)) ($generated@@82 $generated@@314)))
))))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@70)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@114 $generated@@184 $generated@@4)) (= (type $generated@@318) $generated@@70)) (= ($generated@@173 $generated@@317 ($generated@@315 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@184) ($generated@@0 ($generated@@119 $generated@@317 $generated@@319))) ($generated@@290 $generated@@319 $generated@@318))
 :pattern ( ($generated@@119 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@173 $generated@@317 ($generated@@315 $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@70)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@114 $generated@@184 $generated@@4)) (= (type $generated@@323) $generated@@70)) (= ($generated@@173 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@184) ($generated@@0 ($generated@@119 $generated@@322 $generated@@324))) ($generated@@290 $generated@@324 $generated@@323))
 :pattern ( ($generated@@119 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@173 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@325 Int) ) (! (= ($generated@@82 $generated@@325) $generated@@325)
 :pattern ( ($generated@@82 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (! (= ($generated@@89 $generated@@326) $generated@@326)
 :pattern ( ($generated@@89 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@70)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (and (= (type $generated@@329) ($generated@@183 $generated@@184)) (= (type $generated@@330) $generated@@184)) (= (type $generated@@331) $generated@@70)) (and ($generated@@173 $generated@@329 ($generated@@327 $generated@@331)) ($generated@@290 $generated@@330 $generated@@331))) ($generated@@173 ($generated@@302 $generated@@329 $generated@@330) ($generated@@327 $generated@@331)))
 :pattern ( ($generated@@173 ($generated@@302 $generated@@329 $generated@@330) ($generated@@327 $generated@@331)))
)))
(assert (forall (($generated@@333 Int) ) (!  (=> (and (<= 0 $generated@@333) (< $generated@@333 65536)) (= ($generated@@332 ($generated@@305 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@305 $generated@@333))
)))
(assert  (=> true (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@91) (or ($generated@@84 ($generated@@89 $generated@@335)) ($generated@@173 $generated@@335 $generated@@174))) (= ($generated@@85 ($generated@@89 $generated@@335)) ($generated@@0 ($generated@@89 ($generated@@11 ($generated@@334 ($generated@@89 $generated@@335)))))))
 :weight 3
 :pattern ( ($generated@@85 ($generated@@89 $generated@@335)))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@70) (= (type $generated@@339) $generated@@70)) (= (type $generated@@340) $generated@@184)) (= (type $generated@@341) $generated@@184)) (= (type $generated@@342) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@336 $generated@@342)) (= ($generated@@112 ($generated@@289 $generated@@340 $generated@@341) ($generated@@203 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@112 ($generated@@289 $generated@@340 $generated@@341) ($generated@@203 $generated@@338 $generated@@339) $generated@@342))
)))
(assert  (=> true (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@91) (or ($generated@@86 ($generated@@89 $generated@@343)) (and ($generated@@173 $generated@@343 $generated@@174) ($generated@@0 ($generated@@89 ($generated@@11 ($generated@@85 ($generated@@89 $generated@@343)))))))) (= ($generated@@88 ($generated@@89 $generated@@343)) ($generated@@89 $generated@@343)))
 :weight 3
 :pattern ( ($generated@@88 ($generated@@89 $generated@@343)))
))))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@74)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@91) (= ($generated@@202 $generated@@346) (= ($generated@@344 $generated@@346) $generated@@62)))
 :pattern ( ($generated@@202 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@91) (= ($generated@@177 $generated@@347) (= ($generated@@344 $generated@@347) $generated@@65)))
 :pattern ( ($generated@@177 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@91) (= ($generated@@334 $generated@@348) (= ($generated@@344 $generated@@348) $generated@@66)))
 :pattern ( ($generated@@334 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@188 (type $generated@@350))))
 (=> (and (= (type $generated@@350) ($generated@@183 $generated@@352)) (= (type $generated@@351) ($generated@@183 $generated@@352))) (= ($generated@@349 $generated@@350 $generated@@351)  (and (= ($generated@@185 $generated@@350) ($generated@@185 $generated@@351)) (forall (($generated@@353 Int) ) (!  (=> (and (<= 0 $generated@@353) (< $generated@@353 ($generated@@185 $generated@@350))) (= ($generated@@181 $generated@@350 $generated@@353) ($generated@@181 $generated@@351 $generated@@353)))
 :pattern ( ($generated@@181 $generated@@350 $generated@@353))
 :pattern ( ($generated@@181 $generated@@351 $generated@@353))
))))))
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@91) ($generated@@202 $generated@@354)) (exists (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (and (and (= (type $generated@@355) $generated@@184) (= (type $generated@@356) $generated@@184)) (= $generated@@354 ($generated@@289 $generated@@355 $generated@@356)))
 :no-pattern (type $generated@@355)
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
)))
 :pattern ( ($generated@@202 $generated@@354))
)))
(assert (forall (($generated@@357 T@T) ) (! (= ($generated@@185 ($generated@@303 $generated@@357)) 0)
 :pattern ( ($generated@@303 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@91) ($generated@@177 $generated@@358)) (exists (($generated@@359 Int) ) (= $generated@@358 ($generated@@90 $generated@@359))))
 :pattern ( ($generated@@177 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@91) ($generated@@334 $generated@@360)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) ($generated@@183 $generated@@184)) (= $generated@@360 ($generated@@182 $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
)))
 :pattern ( ($generated@@334 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@2) (= ($generated@@173 $generated@@362 $generated@@170) (<= ($generated@@82 0) ($generated $generated@@362))))
 :pattern ( ($generated@@173 $generated@@362 $generated@@170))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (=> (= (type $generated@@363) ($generated@@183 $generated@@365)) (= ($generated@@185 ($generated@@302 $generated@@363 $generated@@364)) (+ 1 ($generated@@185 $generated@@363)))))
 :pattern ( ($generated@@302 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@306) (and (and (= ($generated@@305 ($generated@@332 $generated@@366)) $generated@@366) (<= 0 ($generated@@332 $generated@@366))) (< ($generated@@332 $generated@@366) 65536)))
 :pattern ( ($generated@@332 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@70) (= (type $generated@@369) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@337 ($generated@@304 $generated@@367) $generated@@368 $generated@@369) ($generated@@112 $generated@@367 $generated@@368 $generated@@369)))
 :pattern ( ($generated@@337 ($generated@@304 $generated@@367) $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@372 T@T) ) (! (= (type ($generated@@371 $generated@@372)) ($generated@@114 $generated@@372 $generated@@2))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@117 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@114 $generated@@374 $generated@@2)) (and (= (= ($generated@@370 $generated@@373) 0) (= $generated@@373 ($generated@@371 $generated@@374))) (=> (not (= ($generated@@370 $generated@@373) 0)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (< 0 ($generated ($generated@@119 $generated@@373 $generated@@375))))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert  (and (and (and (and (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (= ($generated@@1 ($generated@@378 $generated@@381 $generated@@382)) 19)) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= ($generated@@379 ($generated@@378 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@378 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= ($generated@@380 ($generated@@378 $generated@@385 $generated@@386)) $generated@@386)
 :pattern ( ($generated@@378 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@379 (type $generated@@387))))
(= (type ($generated@@376 $generated@@387)) ($generated@@114 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@387))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= (type ($generated@@377 $generated@@389 $generated@@390)) ($generated@@378 $generated@@389 $generated@@390))
 :pattern ( ($generated@@377 $generated@@389 $generated@@390))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@T) ) (! (let (($generated@@393 (type $generated@@391)))
 (not ($generated@@0 ($generated@@119 ($generated@@376 ($generated@@377 $generated@@393 $generated@@392)) $generated@@391))))
 :pattern ( (let (($generated@@393 (type $generated@@391)))
($generated@@119 ($generated@@376 ($generated@@377 $generated@@393 $generated@@392)) $generated@@391)))
)))
(assert  (and (and (and (and (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (= ($generated@@1 ($generated@@396 $generated@@399 $generated@@400)) 20)) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@397 ($generated@@396 $generated@@401 $generated@@402)) $generated@@401)
 :pattern ( ($generated@@396 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= ($generated@@398 ($generated@@396 $generated@@403 $generated@@404)) $generated@@404)
 :pattern ( ($generated@@396 $generated@@403 $generated@@404))
))) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@397 (type $generated@@405))))
(= (type ($generated@@394 $generated@@405)) ($generated@@114 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@405))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= (type ($generated@@395 $generated@@407 $generated@@408)) ($generated@@396 $generated@@407 $generated@@408))
 :pattern ( ($generated@@395 $generated@@407 $generated@@408))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@T) ) (! (let (($generated@@411 (type $generated@@409)))
 (not ($generated@@0 ($generated@@119 ($generated@@394 ($generated@@395 $generated@@411 $generated@@410)) $generated@@409))))
 :pattern ( (let (($generated@@411 (type $generated@@409)))
($generated@@119 ($generated@@394 ($generated@@395 $generated@@411 $generated@@410)) $generated@@409)))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@117 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@114 $generated@@413 $generated@@2)) (= ($generated@@217 $generated@@412) (forall (($generated@@414 T@U) ) (!  (=> (= (type $generated@@414) $generated@@413) (and (<= 0 ($generated ($generated@@119 $generated@@412 $generated@@414))) (<= ($generated ($generated@@119 $generated@@412 $generated@@414)) ($generated@@370 $generated@@412))))
 :pattern ( ($generated@@119 $generated@@412 $generated@@414))
)))))
 :pattern ( ($generated@@217 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@184) ($generated@@290 $generated@@415 $generated@@170)) (and (= ($generated@@304 ($generated@@187 $generated@@2 $generated@@415)) $generated@@415) ($generated@@173 ($generated@@187 $generated@@2 $generated@@415) $generated@@170)))
 :pattern ( ($generated@@290 $generated@@415 $generated@@170))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@184) ($generated@@290 $generated@@416 $generated@@174)) (and (= ($generated@@304 ($generated@@187 $generated@@91 $generated@@416)) $generated@@416) ($generated@@173 ($generated@@187 $generated@@91 $generated@@416) $generated@@174)))
 :pattern ( ($generated@@290 $generated@@416 $generated@@174))
)))
(assert (forall (($generated@@417 Int) ) (! (= ($generated@@173 ($generated@@90 $generated@@417) $generated@@174) ($generated@@173 ($generated@@8 $generated@@417) $generated@@170))
 :pattern ( ($generated@@173 ($generated@@90 $generated@@417) $generated@@174))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 Int) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
 (=> (= (type $generated@@418) ($generated@@183 $generated@@421)) (and (=> (= $generated@@419 ($generated@@185 $generated@@418)) (= ($generated@@181 ($generated@@302 $generated@@418 $generated@@420) $generated@@419) $generated@@420)) (=> (not (= $generated@@419 ($generated@@185 $generated@@418))) (= ($generated@@181 ($generated@@302 $generated@@418 $generated@@420) $generated@@419) ($generated@@181 $generated@@418 $generated@@419))))))
 :pattern ( ($generated@@181 ($generated@@302 $generated@@418 $generated@@420) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@183 $generated@@184))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@424) $generated@@91) (= (type $generated@@425) $generated@@91)) (and ($generated@@334 $generated@@424) ($generated@@334 $generated@@425))) (= ($generated@@176 $generated@@424 $generated@@425) ($generated@@349 ($generated@@422 $generated@@424) ($generated@@422 $generated@@425))))
 :pattern ( ($generated@@176 $generated@@424 $generated@@425) ($generated@@334 $generated@@424))
 :pattern ( ($generated@@176 $generated@@424 $generated@@425) ($generated@@334 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@380 (type $generated@@426))))
(let (($generated@@428 ($generated@@379 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@378 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@377 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) ($generated@@0 ($generated@@119 ($generated@@376 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@380 (type $generated@@431))))
(= (type ($generated@@430 $generated@@431)) ($generated@@114 $generated@@432 $generated@@4)))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@380 (type $generated@@433))))
(let (($generated@@435 ($generated@@379 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@378 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@377 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@434) ($generated@@0 ($generated@@119 ($generated@@430 $generated@@433) $generated@@436)))
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@430 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@398 (type $generated@@437))))
(let (($generated@@439 ($generated@@397 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@396 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@395 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) ($generated@@0 ($generated@@119 ($generated@@394 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@394 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@398 (type $generated@@442))))
(= (type ($generated@@441 $generated@@442)) ($generated@@114 $generated@@443 $generated@@4)))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@398 (type $generated@@444))))
(let (($generated@@446 ($generated@@397 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@396 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@395 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@445) ($generated@@0 ($generated@@119 ($generated@@441 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@441 $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@114 $generated@@184 $generated@@2)) (= (type $generated@@449) $generated@@70)) (= ($generated@@173 $generated@@448 ($generated@@216 $generated@@449)) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@184) (< 0 ($generated ($generated@@119 $generated@@448 $generated@@450)))) ($generated@@290 $generated@@450 $generated@@449))
 :pattern ( ($generated@@119 $generated@@448 $generated@@450))
))))
 :pattern ( ($generated@@173 $generated@@448 ($generated@@216 $generated@@449)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@451 Bool) ($generated@@452 Int) ) (!  (=> (or ($generated@@81 $generated@@451 $generated@@452) (and (not (= 2 $generated@@78)) (<= ($generated@@82 0) $generated@@452))) (= ($generated@@83 $generated@@451 $generated@@452) (ite $generated@@451 ($generated@@90 $generated@@452) ($generated@@182 ($generated@@89 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@302 ($generated@@303 $generated@@184) ($generated@@304 ($generated@@305 98))) ($generated@@304 ($generated@@305 97))) ($generated@@304 ($generated@@305 100))) ($generated@@304 ($generated@@305 32))) ($generated@@304 ($generated@@305 108))) ($generated@@304 ($generated@@305 117))) ($generated@@304 ($generated@@305 99))) ($generated@@304 ($generated@@305 107))))))))
 :pattern ( ($generated@@83 $generated@@451 $generated@@452))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@114 $generated@@184 $generated@@4)) (= (type $generated@@454) $generated@@70)) (= (type $generated@@455) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@453 ($generated@@315 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@184) ($generated@@0 ($generated@@119 $generated@@453 $generated@@456))) ($generated@@337 $generated@@456 $generated@@454 $generated@@455))
 :pattern ( ($generated@@119 $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@112 $generated@@453 ($generated@@315 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@114 $generated@@184 $generated@@4)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@457 ($generated@@320 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@184) ($generated@@0 ($generated@@119 $generated@@457 $generated@@460))) ($generated@@337 $generated@@460 $generated@@458 $generated@@459))
 :pattern ( ($generated@@119 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@112 $generated@@457 ($generated@@320 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(= ($generated ($generated@@119 ($generated@@371 $generated@@462) $generated@@461)) 0))
 :pattern ( (let (($generated@@462 (type $generated@@461)))
($generated@@119 ($generated@@371 $generated@@462) $generated@@461)))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) ($generated@@114 $generated@@184 $generated@@4))
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@380 (type $generated@@466))))
(let (($generated@@468 ($generated@@379 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466)) ($generated@@114 $generated@@468 $generated@@467))))
 :pattern ( ($generated@@464 $generated@@466))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) ($generated@@378 $generated@@184 $generated@@184)) (= (type $generated@@470) $generated@@184)) (= ($generated@@0 ($generated@@119 ($generated@@463 $generated@@469) $generated@@470))  (and ($generated@@0 ($generated@@119 ($generated@@376 $generated@@469) ($generated@@210 ($generated@@187 $generated@@91 $generated@@470)))) (= ($generated@@119 ($generated@@464 $generated@@469) ($generated@@210 ($generated@@187 $generated@@91 $generated@@470))) ($generated@@211 ($generated@@187 $generated@@91 $generated@@470))))))
 :pattern ( ($generated@@119 ($generated@@463 $generated@@469) $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) ($generated@@114 $generated@@184 $generated@@4))
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@398 (type $generated@@474))))
(let (($generated@@476 ($generated@@397 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474)) ($generated@@114 $generated@@476 $generated@@475))))
 :pattern ( ($generated@@472 $generated@@474))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) ($generated@@396 $generated@@184 $generated@@184)) (= (type $generated@@478) $generated@@184)) (= ($generated@@0 ($generated@@119 ($generated@@471 $generated@@477) $generated@@478))  (and ($generated@@0 ($generated@@119 ($generated@@394 $generated@@477) ($generated@@210 ($generated@@187 $generated@@91 $generated@@478)))) (= ($generated@@119 ($generated@@472 $generated@@477) ($generated@@210 ($generated@@187 $generated@@91 $generated@@478))) ($generated@@211 ($generated@@187 $generated@@91 $generated@@478))))))
 :pattern ( ($generated@@119 ($generated@@471 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(let (($generated@@482 ($generated@@379 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@378 $generated@@482 $generated@@481)) (= ($generated@@0 ($generated@@119 ($generated@@430 $generated@@479) $generated@@480)) (exists (($generated@@483 T@U) ) (!  (and (= (type $generated@@483) $generated@@482) (and ($generated@@0 ($generated@@119 ($generated@@376 $generated@@479) $generated@@483)) (= $generated@@480 ($generated@@119 ($generated@@464 $generated@@479) $generated@@483))))
 :pattern ( ($generated@@119 ($generated@@376 $generated@@479) $generated@@483))
 :pattern ( ($generated@@119 ($generated@@464 $generated@@479) $generated@@483))
))))))
 :pattern ( ($generated@@119 ($generated@@430 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(let (($generated@@487 ($generated@@397 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@396 $generated@@487 $generated@@486)) (= ($generated@@0 ($generated@@119 ($generated@@441 $generated@@484) $generated@@485)) (exists (($generated@@488 T@U) ) (!  (and (= (type $generated@@488) $generated@@487) (and ($generated@@0 ($generated@@119 ($generated@@394 $generated@@484) $generated@@488)) (= $generated@@485 ($generated@@119 ($generated@@472 $generated@@484) $generated@@488))))
 :pattern ( ($generated@@119 ($generated@@394 $generated@@484) $generated@@488))
 :pattern ( ($generated@@119 ($generated@@472 $generated@@484) $generated@@488))
))))))
 :pattern ( ($generated@@119 ($generated@@441 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@183 $generated@@184)) (= (type $generated@@490) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@336 $generated@@490)) (= ($generated@@112 ($generated@@182 $generated@@489) $generated@@174 $generated@@490) ($generated@@112 $generated@@489 ($generated@@327 $generated@@45) $generated@@490)))
 :pattern ( ($generated@@112 ($generated@@182 $generated@@489) $generated@@174 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@378 $generated@@184 $generated@@184)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@184) ($generated@@0 ($generated@@119 ($generated@@376 $generated@@494) $generated@@498))) (and ($generated@@337 ($generated@@119 ($generated@@464 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@337 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@119 ($generated@@464 $generated@@494) $generated@@498))
 :pattern ( ($generated@@119 ($generated@@376 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@112 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) ($generated@@396 $generated@@184 $generated@@184)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@502 ($generated@@499 $generated@@503 $generated@@504) $generated@@505) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@184) ($generated@@0 ($generated@@119 ($generated@@394 $generated@@502) $generated@@506))) (and ($generated@@337 ($generated@@119 ($generated@@472 $generated@@502) $generated@@506) $generated@@504 $generated@@505) ($generated@@337 $generated@@506 $generated@@503 $generated@@505)))
 :pattern ( ($generated@@119 ($generated@@472 $generated@@502) $generated@@506))
 :pattern ( ($generated@@119 ($generated@@394 $generated@@502) $generated@@506))
))))
 :pattern ( ($generated@@112 $generated@@502 ($generated@@499 $generated@@503 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@188 (type $generated@@507))))
 (=> (and (and (= (type $generated@@507) ($generated@@183 $generated@@509)) (= (type $generated@@508) ($generated@@183 $generated@@509))) ($generated@@349 $generated@@507 $generated@@508)) (= $generated@@507 $generated@@508)))
 :pattern ( ($generated@@349 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 Int) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) ($generated@@114 $generated@@115 $generated@@116)) ($generated@@336 $generated@@511)) (= ($generated@@112 ($generated@@90 $generated@@510) $generated@@174 $generated@@511) ($generated@@112 ($generated@@8 $generated@@510) $generated@@170 $generated@@511)))
 :pattern ( ($generated@@112 ($generated@@90 $generated@@510) $generated@@174 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@91) ($generated@@173 $generated@@512 $generated@@174)) (or ($generated@@177 $generated@@512) ($generated@@334 $generated@@512)))
 :pattern ( ($generated@@334 $generated@@512) ($generated@@173 $generated@@512 $generated@@174))
 :pattern ( ($generated@@177 $generated@@512) ($generated@@173 $generated@@512 $generated@@174))
)))
(assert  (=> true (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@91) (or ($generated@@87 $generated@@513) (and ($generated@@173 $generated@@513 $generated@@174) (not ($generated@@85 $generated@@513))))) (= ($generated@@200 $generated@@513) ($generated@@178 $generated@@513)))
 :pattern ( ($generated@@200 $generated@@513))
))))
(assert  (=> true (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@91) (or ($generated@@87 $generated@@514) (and ($generated@@173 $generated@@514 $generated@@174) (not ($generated@@85 $generated@@514))))) (<= ($generated@@82 0) ($generated@@200 $generated@@514)))
 :pattern ( ($generated@@200 $generated@@514))
))))
(assert (forall (($generated@@516 T@T) ) (! (= (type ($generated@@515 $generated@@516)) ($generated@@114 $generated@@516 $generated@@4))
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@398 (type $generated@@517))))
(let (($generated@@519 ($generated@@397 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@396 $generated@@519 $generated@@518)) (= (= $generated@@517 ($generated@@395 $generated@@519 $generated@@518)) (= ($generated@@394 $generated@@517) ($generated@@515 $generated@@519))))))
 :pattern ( ($generated@@394 $generated@@517))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@398 (type $generated@@520))))
(let (($generated@@522 ($generated@@397 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@396 $generated@@522 $generated@@521)) (= (= $generated@@520 ($generated@@395 $generated@@522 $generated@@521)) (= ($generated@@441 $generated@@520) ($generated@@515 $generated@@521))))))
 :pattern ( ($generated@@441 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@398 (type $generated@@523))))
(let (($generated@@525 ($generated@@397 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@396 $generated@@525 $generated@@524)) (= (= $generated@@523 ($generated@@395 $generated@@525 $generated@@524)) (= ($generated@@471 $generated@@523) ($generated@@515 $generated@@184))))))
 :pattern ( ($generated@@471 $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@380 (type $generated@@526))))
(let (($generated@@528 ($generated@@379 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@378 $generated@@528 $generated@@527)) (or (= $generated@@526 ($generated@@377 $generated@@528 $generated@@527)) (exists (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (and (and (= (type $generated@@529) $generated@@184) (= (type $generated@@530) $generated@@184)) ($generated@@0 ($generated@@119 ($generated@@463 $generated@@526) ($generated@@304 ($generated@@289 $generated@@529 $generated@@530)))))
 :no-pattern (type $generated@@529)
 :no-pattern (type $generated@@530)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
 :no-pattern ($generated $generated@@530)
 :no-pattern ($generated@@0 $generated@@530)
))))))
 :pattern ( ($generated@@463 $generated@@526))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@398 (type $generated@@531))))
(let (($generated@@533 ($generated@@397 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@396 $generated@@533 $generated@@532)) (or (= $generated@@531 ($generated@@395 $generated@@533 $generated@@532)) (exists (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (and (and (= (type $generated@@534) $generated@@184) (= (type $generated@@535) $generated@@184)) ($generated@@0 ($generated@@119 ($generated@@471 $generated@@531) ($generated@@304 ($generated@@289 $generated@@534 $generated@@535)))))
 :no-pattern (type $generated@@534)
 :no-pattern (type $generated@@535)
 :no-pattern ($generated $generated@@534)
 :no-pattern ($generated@@0 $generated@@534)
 :no-pattern ($generated $generated@@535)
 :no-pattern ($generated@@0 $generated@@535)
))))))
 :pattern ( ($generated@@471 $generated@@531))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@184) ($generated@@290 $generated@@536 $generated@@46)) (and (= ($generated@@304 ($generated@@187 $generated@@2 $generated@@536)) $generated@@536) ($generated@@173 ($generated@@187 $generated@@2 $generated@@536) $generated@@46)))
 :pattern ( ($generated@@290 $generated@@536 $generated@@46))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@184) ($generated@@290 $generated@@537 $generated@@47)) (and (= ($generated@@304 ($generated@@187 $generated@@3 $generated@@537)) $generated@@537) ($generated@@173 ($generated@@187 $generated@@3 $generated@@537) $generated@@47)))
 :pattern ( ($generated@@290 $generated@@537 $generated@@47))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@184) ($generated@@290 $generated@@538 $generated@@44)) (and (= ($generated@@304 ($generated@@187 $generated@@4 $generated@@538)) $generated@@538) ($generated@@173 ($generated@@187 $generated@@4 $generated@@538) $generated@@44)))
 :pattern ( ($generated@@290 $generated@@538 $generated@@44))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@184) ($generated@@290 $generated@@539 $generated@@45)) (and (= ($generated@@304 ($generated@@187 $generated@@306 $generated@@539)) $generated@@539) ($generated@@173 ($generated@@187 $generated@@306 $generated@@539) $generated@@45)))
 :pattern ( ($generated@@290 $generated@@539 $generated@@45))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@290 ($generated@@304 $generated@@540) $generated@@541) ($generated@@173 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@290 ($generated@@304 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@117 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@114 $generated@@543 $generated@@2)) (<= 0 ($generated@@370 $generated@@542))))
 :pattern ( ($generated@@370 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@188 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@183 $generated@@545)) (<= 0 ($generated@@185 $generated@@544))))
 :pattern ( ($generated@@185 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@70)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (= ($generated@@546 ($generated@@491 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@491 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@70)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@70) (= (type $generated@@553) $generated@@70)) (= ($generated@@550 ($generated@@491 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (= ($generated@@110 ($generated@@491 $generated@@554 $generated@@555)) $generated@@58))
 :pattern ( ($generated@@491 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@70)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (= ($generated@@556 ($generated@@499 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@499 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (= ($generated@@560 ($generated@@499 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@499 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@70) (= (type $generated@@565) $generated@@70)) (= ($generated@@110 ($generated@@499 $generated@@564 $generated@@565)) $generated@@59))
 :pattern ( ($generated@@499 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@184) (= (type $generated@@567) $generated@@184)) (= ($generated@@344 ($generated@@289 $generated@@566 $generated@@567)) $generated@@62))
 :pattern ( ($generated@@289 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@70)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@70) (= (type $generated@@571) $generated@@70)) (= ($generated@@568 ($generated@@203 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@203 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@70)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (= ($generated@@572 ($generated@@203 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@203 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@184) (= (type $generated@@577) $generated@@184)) (= ($generated@@210 ($generated@@289 $generated@@576 $generated@@577)) $generated@@576))
 :pattern ( ($generated@@289 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@184) (= (type $generated@@579) $generated@@184)) (= ($generated@@211 ($generated@@289 $generated@@578 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@289 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@183 $generated@@184)) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@580 ($generated@@327 $generated@@581) $generated@@582) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@185 $generated@@580))) ($generated@@337 ($generated@@181 $generated@@580 $generated@@583) $generated@@581 $generated@@582))
 :pattern ( ($generated@@181 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@112 $generated@@580 ($generated@@327 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@584 ($generated@@113 $generated@@585)) $generated@@585)
 :pattern ( ($generated@@113 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@70)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@70) (= ($generated@@586 ($generated@@315 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@315 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@70) (= ($generated@@110 ($generated@@315 $generated@@589)) $generated@@54))
 :pattern ( ($generated@@315 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@70)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@70) (= ($generated@@590 ($generated@@320 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@320 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@70) (= ($generated@@110 ($generated@@320 $generated@@593)) $generated@@55))
 :pattern ( ($generated@@320 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@70)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@70) (= ($generated@@594 ($generated@@216 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@216 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@70) (= ($generated@@110 ($generated@@216 $generated@@597)) $generated@@56))
 :pattern ( ($generated@@216 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@70)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@70) (= ($generated@@598 ($generated@@327 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@327 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@70) (= ($generated@@110 ($generated@@327 $generated@@601)) $generated@@57))
 :pattern ( ($generated@@327 $generated@@601))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@344 ($generated@@90 $generated@@602)) $generated@@65)
 :pattern ( ($generated@@90 $generated@@602))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@178 ($generated@@90 $generated@@603)) $generated@@603)
 :pattern ( ($generated@@90 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) ($generated@@183 $generated@@184)) (= ($generated@@344 ($generated@@182 $generated@@604)) $generated@@66))
 :pattern ( ($generated@@182 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) ($generated@@183 $generated@@184)) (= ($generated@@422 ($generated@@182 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@182 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
(= ($generated@@187 $generated@@607 ($generated@@304 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@304 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@378 $generated@@184 $generated@@184)) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) $generated@@70)) (= ($generated@@173 $generated@@608 ($generated@@491 $generated@@609 $generated@@610)) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@184) ($generated@@0 ($generated@@119 ($generated@@376 $generated@@608) $generated@@611))) (and ($generated@@290 ($generated@@119 ($generated@@464 $generated@@608) $generated@@611) $generated@@610) ($generated@@290 $generated@@611 $generated@@609)))
 :pattern ( ($generated@@119 ($generated@@464 $generated@@608) $generated@@611))
 :pattern ( ($generated@@119 ($generated@@376 $generated@@608) $generated@@611))
))))
 :pattern ( ($generated@@173 $generated@@608 ($generated@@491 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@396 $generated@@184 $generated@@184)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) (= ($generated@@173 $generated@@612 ($generated@@499 $generated@@613 $generated@@614)) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@184) ($generated@@0 ($generated@@119 ($generated@@394 $generated@@612) $generated@@615))) (and ($generated@@290 ($generated@@119 ($generated@@472 $generated@@612) $generated@@615) $generated@@614) ($generated@@290 $generated@@615 $generated@@613)))
 :pattern ( ($generated@@119 ($generated@@472 $generated@@612) $generated@@615))
 :pattern ( ($generated@@119 ($generated@@394 $generated@@612) $generated@@615))
))))
 :pattern ( ($generated@@173 $generated@@612 ($generated@@499 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@184) (= (type $generated@@618) $generated@@184)) (< ($generated@@616 $generated@@617) ($generated@@186 ($generated@@289 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@289 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@184) (= (type $generated@@620) $generated@@184)) (< ($generated@@616 $generated@@620) ($generated@@186 ($generated@@289 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@289 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@184) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@290 $generated@@621 ($generated@@491 $generated@@622 $generated@@623))) (and (= ($generated@@304 ($generated@@187 ($generated@@378 $generated@@184 $generated@@184) $generated@@621)) $generated@@621) ($generated@@173 ($generated@@187 ($generated@@378 $generated@@184 $generated@@184) $generated@@621) ($generated@@491 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@290 $generated@@621 ($generated@@491 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@184) (= (type $generated@@625) $generated@@70)) (= (type $generated@@626) $generated@@70)) ($generated@@290 $generated@@624 ($generated@@499 $generated@@625 $generated@@626))) (and (= ($generated@@304 ($generated@@187 ($generated@@396 $generated@@184 $generated@@184) $generated@@624)) $generated@@624) ($generated@@173 ($generated@@187 ($generated@@396 $generated@@184 $generated@@184) $generated@@624) ($generated@@499 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@290 $generated@@624 ($generated@@499 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@70) (= (type $generated@@628) $generated@@70)) (= (type $generated@@629) $generated@@184)) ($generated@@290 $generated@@629 ($generated@@203 $generated@@627 $generated@@628))) (and (= ($generated@@304 ($generated@@187 $generated@@91 $generated@@629)) $generated@@629) ($generated@@173 ($generated@@187 $generated@@91 $generated@@629) ($generated@@203 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@290 $generated@@629 ($generated@@203 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) ($generated@@183 $generated@@184)) (< ($generated@@630 $generated@@631) ($generated@@186 ($generated@@182 $generated@@631))))
 :pattern ( ($generated@@182 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@632)))
 (not ($generated@@0 ($generated@@119 ($generated@@515 $generated@@633) $generated@@632))))
 :pattern ( (let (($generated@@633 (type $generated@@632)))
($generated@@119 ($generated@@515 $generated@@633) $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@75)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@70) (= (type $generated@@637) $generated@@70)) (and (= ($generated@@110 ($generated@@203 $generated@@636 $generated@@637)) $generated@@63) (= ($generated@@634 ($generated@@203 $generated@@636 $generated@@637)) $generated@@68)))
 :pattern ( ($generated@@203 $generated@@636 $generated@@637))
)))
(assert  (and (forall (($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@188 (type $generated@@640))))
(= (type ($generated@@638 $generated@@640)) ($generated@@183 $generated@@641)))
 :pattern ( ($generated@@638 $generated@@640))
)) (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@188 (type $generated@@642))))
(= (type ($generated@@639 $generated@@642)) $generated@@643))
 :pattern ( ($generated@@639 $generated@@642))
))))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
 (=> (= (type $generated@@644) ($generated@@183 $generated@@646)) (and (= ($generated@@638 ($generated@@302 $generated@@644 $generated@@645)) $generated@@644) (= ($generated@@639 ($generated@@302 $generated@@644 $generated@@645)) $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644 $generated@@645))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@647 Bool) ($generated@@648 Int) ) (!  (=> (or ($generated@@81 $generated@@647 $generated@@648) (and (not (= 2 $generated@@78)) (<= ($generated@@82 0) $generated@@648))) ($generated@@173 ($generated@@83 $generated@@647 $generated@@648) $generated@@174))
 :pattern ( ($generated@@83 $generated@@647 $generated@@648))
))))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@649 Bool) ($generated@@650 Bool) ($generated@@651 Bool) ) (!  (=> (or ($generated@@80 $generated@@649 $generated@@650 $generated@@651) (not (= 3 $generated@@78))) ($generated@@173 ($generated@@79 $generated@@649 $generated@@650 $generated@@651) $generated@@174))
 :pattern ( ($generated@@79 $generated@@649 $generated@@650 $generated@@651))
))))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@91) (= ($generated@@616 ($generated@@304 $generated@@652)) ($generated@@186 $generated@@652)))
 :pattern ( ($generated@@616 ($generated@@304 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@184) ($generated@@290 $generated@@653 ($generated@@113 0))) (and (= ($generated@@304 ($generated@@187 $generated@@2 $generated@@653)) $generated@@653) ($generated@@173 ($generated@@187 ($generated@@114 $generated@@184 $generated@@4) $generated@@653) ($generated@@113 0))))
 :pattern ( ($generated@@290 $generated@@653 ($generated@@113 0)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@184) (= (type $generated@@655) $generated@@70)) ($generated@@290 $generated@@654 ($generated@@315 $generated@@655))) (and (= ($generated@@304 ($generated@@187 ($generated@@114 $generated@@184 $generated@@4) $generated@@654)) $generated@@654) ($generated@@173 ($generated@@187 ($generated@@114 $generated@@184 $generated@@4) $generated@@654) ($generated@@315 $generated@@655))))
 :pattern ( ($generated@@290 $generated@@654 ($generated@@315 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@184) (= (type $generated@@657) $generated@@70)) ($generated@@290 $generated@@656 ($generated@@320 $generated@@657))) (and (= ($generated@@304 ($generated@@187 ($generated@@114 $generated@@184 $generated@@4) $generated@@656)) $generated@@656) ($generated@@173 ($generated@@187 ($generated@@114 $generated@@184 $generated@@4) $generated@@656) ($generated@@320 $generated@@657))))
 :pattern ( ($generated@@290 $generated@@656 ($generated@@320 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@184) (= (type $generated@@659) $generated@@70)) ($generated@@290 $generated@@658 ($generated@@216 $generated@@659))) (and (= ($generated@@304 ($generated@@187 ($generated@@114 $generated@@184 $generated@@2) $generated@@658)) $generated@@658) ($generated@@173 ($generated@@187 ($generated@@114 $generated@@184 $generated@@2) $generated@@658) ($generated@@216 $generated@@659))))
 :pattern ( ($generated@@290 $generated@@658 ($generated@@216 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@184) (= (type $generated@@661) $generated@@70)) ($generated@@290 $generated@@660 ($generated@@327 $generated@@661))) (and (= ($generated@@304 ($generated@@187 ($generated@@183 $generated@@184) $generated@@660)) $generated@@660) ($generated@@173 ($generated@@187 ($generated@@183 $generated@@184) $generated@@660) ($generated@@327 $generated@@661))))
 :pattern ( ($generated@@290 $generated@@660 ($generated@@327 $generated@@661)))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@4) (= (type $generated@@663) $generated@@4)) (= (type $generated@@664) $generated@@4)) (or ($generated@@80 ($generated@@0 ($generated@@89 $generated@@662)) ($generated@@0 ($generated@@89 $generated@@663)) ($generated@@0 ($generated@@89 $generated@@664))) (not (= 3 $generated@@78)))) (and (and ($generated@@81 ($generated@@0 ($generated@@89 $generated@@662)) ($generated@@82 88)) (let (($generated@@665 ($generated@@89 ($generated@@83 ($generated@@0 ($generated@@89 $generated@@662)) ($generated@@82 88)))))
 (and (and ($generated@@84 $generated@@665) (=> ($generated@@85 $generated@@665) ($generated@@86 $generated@@665))) (=> (not ($generated@@85 $generated@@665)) (and ($generated@@87 $generated@@665) (and ($generated@@81 ($generated@@0 ($generated@@89 $generated@@663)) ($generated@@82 42)) (let (($generated@@666 ($generated@@89 ($generated@@83 ($generated@@0 ($generated@@89 $generated@@663)) ($generated@@82 42)))))
 (and (and ($generated@@84 $generated@@666) (=> ($generated@@85 $generated@@666) ($generated@@86 $generated@@666))) (=> (not ($generated@@85 $generated@@666)) (and ($generated@@87 $generated@@666) (and ($generated@@81 ($generated@@0 ($generated@@89 $generated@@664)) ($generated@@82 33)) (let (($generated@@667 ($generated@@89 ($generated@@83 ($generated@@0 ($generated@@89 $generated@@664)) ($generated@@82 33)))))
 (and (and ($generated@@84 $generated@@667) (=> ($generated@@85 $generated@@667) ($generated@@86 $generated@@667))) (=> (not ($generated@@85 $generated@@667)) ($generated@@87 $generated@@667))))))))))))))) (= ($generated@@79 ($generated@@0 ($generated@@89 $generated@@662)) ($generated@@0 ($generated@@89 $generated@@663)) ($generated@@0 ($generated@@89 $generated@@664))) (let (($generated@@668 ($generated@@89 ($generated@@83 ($generated@@0 ($generated@@89 $generated@@662)) ($generated@@82 88)))))
(ite ($generated@@85 $generated@@668) ($generated@@88 $generated@@668) (let (($generated@@669 ($generated@@89 ($generated@@83 ($generated@@0 ($generated@@89 $generated@@663)) ($generated@@82 42)))))
(ite ($generated@@85 $generated@@669) ($generated@@88 $generated@@669) (let (($generated@@670 ($generated@@89 ($generated@@83 ($generated@@0 ($generated@@89 $generated@@664)) ($generated@@82 33)))))
(ite ($generated@@85 $generated@@670) ($generated@@88 $generated@@670) ($generated@@89 ($generated@@90 ($generated@@82 100))))))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@0 ($generated@@89 $generated@@662)) ($generated@@0 ($generated@@89 $generated@@663)) ($generated@@0 ($generated@@89 $generated@@664))))
))))
(assert (= ($generated@@110 $generated@@170) $generated@@61))
(assert (= ($generated@@634 $generated@@170) $generated@@67))
(assert (= ($generated@@110 $generated@@174) $generated@@64))
(assert (= ($generated@@634 $generated@@174) $generated@@69))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (= (type $generated@@671) ($generated@@114 $generated@@184 $generated@@2)) (= (type $generated@@672) $generated@@70)) (= (type $generated@@673) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@671 ($generated@@216 $generated@@672) $generated@@673) (forall (($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@184) (< 0 ($generated ($generated@@119 $generated@@671 $generated@@674)))) ($generated@@337 $generated@@674 $generated@@672 $generated@@673))
 :pattern ( ($generated@@119 $generated@@671 $generated@@674))
))))
 :pattern ( ($generated@@112 $generated@@671 ($generated@@216 $generated@@672) $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) ($generated@@183 $generated@@184)) (= ($generated@@173 ($generated@@182 $generated@@675) $generated@@174) ($generated@@173 $generated@@675 ($generated@@327 $generated@@45))))
 :pattern ( ($generated@@173 ($generated@@182 $generated@@675) $generated@@174))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@676) $generated@@91) (= (type $generated@@677) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@336 $generated@@677) (and ($generated@@334 $generated@@676) ($generated@@112 $generated@@676 $generated@@174 $generated@@677)))) ($generated@@112 ($generated@@422 $generated@@676) ($generated@@327 $generated@@45) $generated@@677))
 :pattern ( ($generated@@112 ($generated@@422 $generated@@676) ($generated@@327 $generated@@45) $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) $generated@@91) (= (type $generated@@679) $generated@@70)) (= (type $generated@@680) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@336 $generated@@680) (and ($generated@@202 $generated@@678) (exists (($generated@@681 T@U) ) (!  (and (= (type $generated@@681) $generated@@70) ($generated@@112 $generated@@678 ($generated@@203 $generated@@679 $generated@@681) $generated@@680))
 :pattern ( ($generated@@112 $generated@@678 ($generated@@203 $generated@@679 $generated@@681) $generated@@680))
))))) ($generated@@337 ($generated@@210 $generated@@678) $generated@@679 $generated@@680))
 :pattern ( ($generated@@337 ($generated@@210 $generated@@678) $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) $generated@@91) (= (type $generated@@683) $generated@@70)) (= (type $generated@@684) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@336 $generated@@684) (and ($generated@@202 $generated@@682) (exists (($generated@@685 T@U) ) (!  (and (= (type $generated@@685) $generated@@70) ($generated@@112 $generated@@682 ($generated@@203 $generated@@685 $generated@@683) $generated@@684))
 :pattern ( ($generated@@112 $generated@@682 ($generated@@203 $generated@@685 $generated@@683) $generated@@684))
))))) ($generated@@337 ($generated@@211 $generated@@682) $generated@@683 $generated@@684))
 :pattern ( ($generated@@337 ($generated@@211 $generated@@682) $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@686) $generated@@91) (= (type $generated@@687) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@336 $generated@@687) (and ($generated@@177 $generated@@686) ($generated@@112 $generated@@686 $generated@@174 $generated@@687)))) ($generated@@112 ($generated@@8 ($generated@@178 $generated@@686)) $generated@@170 $generated@@687))
 :pattern ( ($generated@@112 ($generated@@8 ($generated@@178 $generated@@686)) $generated@@170 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@184) (= (type $generated@@689) $generated@@184)) (= ($generated@@289 ($generated@@89 $generated@@688) ($generated@@89 $generated@@689)) ($generated@@89 ($generated@@289 $generated@@688 $generated@@689))))
 :pattern ( ($generated@@289 ($generated@@89 $generated@@688) ($generated@@89 $generated@@689)))
)))
(assert (forall (($generated@@690 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@82 $generated@@690))) ($generated@@89 ($generated@@304 ($generated@@8 $generated@@690))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@82 $generated@@690))))
)))
(assert (forall (($generated@@691 Int) ) (! (= ($generated@@90 ($generated@@82 $generated@@691)) ($generated@@89 ($generated@@90 $generated@@691)))
 :pattern ( ($generated@@90 ($generated@@82 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) ($generated@@183 $generated@@184)) (= ($generated@@182 ($generated@@89 $generated@@692)) ($generated@@89 ($generated@@182 $generated@@692))))
 :pattern ( ($generated@@182 ($generated@@89 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (! (= ($generated@@304 ($generated@@89 $generated@@693)) ($generated@@89 ($generated@@304 $generated@@693)))
 :pattern ( ($generated@@304 ($generated@@89 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (! (let (($generated@@695 ($generated@@188 (type $generated@@694))))
 (=> (and (= (type $generated@@694) ($generated@@183 $generated@@695)) (= ($generated@@185 $generated@@694) 0)) (= $generated@@694 ($generated@@303 $generated@@695))))
 :pattern ( ($generated@@185 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (! (let (($generated@@699 (type $generated@@697)))
 (=> (and (and (= (type $generated@@696) ($generated@@114 $generated@@699 $generated@@2)) (= (type $generated@@698) $generated@@2)) (<= 0 ($generated $generated@@698))) (= ($generated@@370 ($generated@@120 $generated@@696 $generated@@697 $generated@@698)) (+ (- ($generated@@370 $generated@@696) ($generated ($generated@@119 $generated@@696 $generated@@697))) ($generated $generated@@698)))))
 :pattern ( ($generated@@370 ($generated@@120 $generated@@696 $generated@@697 $generated@@698)))
)))
(assert  (=> true (forall (($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@91) (or ($generated@@84 $generated@@700) ($generated@@173 $generated@@700 $generated@@174))) (= ($generated@@85 $generated@@700) ($generated@@334 $generated@@700)))
 :pattern ( ($generated@@85 $generated@@700))
))))
(assert  (=> true (forall (($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@91) (or ($generated@@86 $generated@@701) (and ($generated@@173 $generated@@701 $generated@@174) ($generated@@85 $generated@@701)))) (= ($generated@@88 $generated@@701) $generated@@701))
 :pattern ( ($generated@@88 $generated@@701))
))))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@703) $generated@@2)) ($generated@@112 $generated@@703 $generated@@46 $generated@@702))
 :pattern ( ($generated@@112 $generated@@703 $generated@@46 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@705) $generated@@3)) ($generated@@112 $generated@@705 $generated@@47 $generated@@704))
 :pattern ( ($generated@@112 $generated@@705 $generated@@47 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@707) $generated@@4)) ($generated@@112 $generated@@707 $generated@@44 $generated@@706))
 :pattern ( ($generated@@112 $generated@@707 $generated@@44 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@709) $generated@@306)) ($generated@@112 $generated@@709 $generated@@45 $generated@@708))
 :pattern ( ($generated@@112 $generated@@709 $generated@@45 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@711) $generated@@184)) ($generated@@112 $generated@@711 $generated@@48 $generated@@710))
 :pattern ( ($generated@@112 $generated@@711 $generated@@48 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) ($generated@@183 $generated@@184)) (= (type $generated@@713) $generated@@70)) (= ($generated@@173 $generated@@712 ($generated@@327 $generated@@713)) (forall (($generated@@714 Int) ) (!  (=> (and (<= 0 $generated@@714) (< $generated@@714 ($generated@@185 $generated@@712))) ($generated@@290 ($generated@@181 $generated@@712 $generated@@714) $generated@@713))
 :pattern ( ($generated@@181 $generated@@712 $generated@@714))
))))
 :pattern ( ($generated@@173 $generated@@712 ($generated@@327 $generated@@713)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 Int) ) (!  (=> (= (type $generated@@715) ($generated@@183 $generated@@184)) (=> (and (<= 0 $generated@@716) (< $generated@@716 ($generated@@185 $generated@@715))) (< ($generated@@186 ($generated@@187 $generated@@91 ($generated@@181 $generated@@715 $generated@@716))) ($generated@@630 $generated@@715))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@91 ($generated@@181 $generated@@715 $generated@@716))))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (= (type $generated@@717) ($generated@@378 $generated@@184 $generated@@184)) (= (type $generated@@718) $generated@@70)) (= (type $generated@@719) $generated@@70)) ($generated@@173 $generated@@717 ($generated@@491 $generated@@718 $generated@@719))) (and (and ($generated@@173 ($generated@@376 $generated@@717) ($generated@@315 $generated@@718)) ($generated@@173 ($generated@@430 $generated@@717) ($generated@@315 $generated@@719))) ($generated@@173 ($generated@@463 $generated@@717) ($generated@@315 ($generated@@203 $generated@@718 $generated@@719)))))
 :pattern ( ($generated@@173 $generated@@717 ($generated@@491 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) ($generated@@396 $generated@@184 $generated@@184)) (= (type $generated@@721) $generated@@70)) (= (type $generated@@722) $generated@@70)) ($generated@@173 $generated@@720 ($generated@@499 $generated@@721 $generated@@722))) (and (and ($generated@@173 ($generated@@394 $generated@@720) ($generated@@320 $generated@@721)) ($generated@@173 ($generated@@441 $generated@@720) ($generated@@320 $generated@@722))) ($generated@@173 ($generated@@471 $generated@@720) ($generated@@320 ($generated@@203 $generated@@721 $generated@@722)))))
 :pattern ( ($generated@@173 $generated@@720 ($generated@@499 $generated@@721 $generated@@722)))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@2) ($generated@@173 $generated@@723 $generated@@46))
 :pattern ( ($generated@@173 $generated@@723 $generated@@46))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@3) ($generated@@173 $generated@@724 $generated@@47))
 :pattern ( ($generated@@173 $generated@@724 $generated@@47))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@4) ($generated@@173 $generated@@725 $generated@@44))
 :pattern ( ($generated@@173 $generated@@725 $generated@@44))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@306) ($generated@@173 $generated@@726 $generated@@45))
 :pattern ( ($generated@@173 $generated@@726 $generated@@45))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@184) ($generated@@173 $generated@@727 $generated@@48))
 :pattern ( ($generated@@173 $generated@@727 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () Int)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () Int)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 () Int)
(declare-fun $generated@@735 () Bool)
(declare-fun $generated@@736 () Int)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () Int)
(declare-fun $generated@@740 () Int)
(declare-fun $generated@@741 () Bool)
(declare-fun $generated@@742 () Int)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () Bool)
(declare-fun $generated@@747 () Int)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@738) $generated@@91) (= (type $generated@@730) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@732) $generated@@91)) (= (type $generated@@728) $generated@@91)) (= (type $generated@@737) $generated@@91)) (= (type $generated@@743) $generated@@91)) (= (type $generated@@744) ($generated@@223 $generated@@115 $generated@@4))) (= (type $generated@@745) $generated@@115)) (= (type $generated@@748) $generated@@91)) (= (type $generated@@749) ($generated@@223 $generated@@115 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@751  (=> (not ($generated@@85 $generated@@728)) (=> (and (<= ($generated@@82 0) $generated@@729) ($generated@@112 $generated@@728 $generated@@174 $generated@@730)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not ($generated@@85 $generated@@728))) (=> (not ($generated@@85 $generated@@728)) (=> (and ($generated@@87 $generated@@728) (= $generated@@731 ($generated@@200 $generated@@728))) (=> (and (and ($generated@@87 $generated@@728) ($generated@@173 ($generated@@8 $generated@@731) $generated@@170)) (and (= $generated@@729 $generated@@731) (= (ControlFlow 0 9) (- 0 8)))) ($generated@@173 ($generated@@8 ($generated@@82 100)) $generated@@170)))))))))
(let (($generated@@752  (=> ($generated@@85 $generated@@728) (=> (and (and ($generated@@112 $generated@@728 $generated@@174 $generated@@730) (= (ControlFlow 0 7) (- 0 6))) ($generated@@84 $generated@@728)) (or ($generated@@85 $generated@@728) ($generated@@334 $generated@@728))))))
(let (($generated@@753  (=> (not ($generated@@85 $generated@@732)) (=> (and (<= ($generated@@82 0) $generated@@733) ($generated@@112 $generated@@732 $generated@@174 $generated@@730)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (not ($generated@@85 $generated@@732))) (=> (and (not ($generated@@85 $generated@@732)) ($generated@@87 $generated@@732)) (=> (and (and (and (= $generated@@734 ($generated@@200 $generated@@732)) ($generated@@87 $generated@@732)) (and ($generated@@173 ($generated@@8 $generated@@734) $generated@@170) (= $generated@@733 $generated@@734))) (and (and ($generated@@173 $generated@@728 $generated@@174) ($generated@@112 $generated@@728 $generated@@174 $generated@@730)) ($generated@@112 ($generated@@11 $generated@@735) $generated@@44 $generated@@730))) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@173 ($generated@@8 ($generated@@82 33)) $generated@@170)) (=> ($generated@@173 ($generated@@8 ($generated@@82 33)) $generated@@170) (=> (= $generated@@736 ($generated@@82 33)) (=> (and (and (and ($generated@@112 ($generated@@8 $generated@@736) $generated@@170 $generated@@730) ($generated@@81 $generated@@735 ($generated@@82 33))) (and (= $generated@@737 ($generated@@83 $generated@@735 ($generated@@82 33))) ($generated@@81 $generated@@735 ($generated@@82 33)))) (and (and ($generated@@173 $generated@@737 $generated@@174) (= $generated@@728 $generated@@737)) (and ($generated@@112 $generated@@728 $generated@@174 $generated@@730) ($generated@@84 $generated@@728)))) (and (=> (= (ControlFlow 0 11) 7) $generated@@752) (=> (= (ControlFlow 0 11) 9) $generated@@751)))))))))))))
(let (($generated@@754  (=> ($generated@@85 $generated@@732) (=> (and (and ($generated@@112 $generated@@732 $generated@@174 $generated@@730) (= (ControlFlow 0 5) (- 0 4))) ($generated@@84 $generated@@732)) (or ($generated@@85 $generated@@732) ($generated@@334 $generated@@732))))))
(let (($generated@@755  (=> (not ($generated@@85 $generated@@738)) (=> (and (<= ($generated@@82 0) $generated@@739) ($generated@@112 $generated@@738 $generated@@174 $generated@@730)) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not ($generated@@85 $generated@@738))) (=> (and (not ($generated@@85 $generated@@738)) ($generated@@87 $generated@@738)) (=> (and (and (and (= $generated@@740 ($generated@@200 $generated@@738)) ($generated@@87 $generated@@738)) (and ($generated@@173 ($generated@@8 $generated@@740) $generated@@170) (= $generated@@739 $generated@@740))) (and (and ($generated@@173 $generated@@732 $generated@@174) ($generated@@112 $generated@@732 $generated@@174 $generated@@730)) ($generated@@112 ($generated@@11 $generated@@741) $generated@@44 $generated@@730))) (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@173 ($generated@@8 ($generated@@82 42)) $generated@@170)) (=> ($generated@@173 ($generated@@8 ($generated@@82 42)) $generated@@170) (=> (= $generated@@742 ($generated@@82 42)) (=> (and (and (and ($generated@@112 ($generated@@8 $generated@@742) $generated@@170 $generated@@730) ($generated@@81 $generated@@741 ($generated@@82 42))) (and (= $generated@@743 ($generated@@83 $generated@@741 ($generated@@82 42))) ($generated@@81 $generated@@741 ($generated@@82 42)))) (and (and ($generated@@173 $generated@@743 $generated@@174) (= $generated@@732 $generated@@743)) (and ($generated@@112 $generated@@732 $generated@@174 $generated@@730) ($generated@@84 $generated@@732)))) (and (=> (= (ControlFlow 0 14) 5) $generated@@754) (=> (= (ControlFlow 0 14) 11) $generated@@753)))))))))))))
(let (($generated@@756  (=> ($generated@@85 $generated@@738) (=> (and (and ($generated@@112 $generated@@738 $generated@@174 $generated@@730) (= (ControlFlow 0 3) (- 0 2))) ($generated@@84 $generated@@738)) (or ($generated@@85 $generated@@738) ($generated@@334 $generated@@738))))))
(let (($generated@@757  (=> (= $generated@@744 ($generated@@277 $generated@@745 $generated@@730 $generated@@60 false)) (=> (and (and ($generated@@173 $generated@@738 $generated@@174) ($generated@@112 $generated@@738 $generated@@174 $generated@@730)) ($generated@@112 ($generated@@11 $generated@@746) $generated@@44 $generated@@730)) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@173 ($generated@@8 ($generated@@82 88)) $generated@@170)) (=> ($generated@@173 ($generated@@8 ($generated@@82 88)) $generated@@170) (=> (= $generated@@747 ($generated@@82 88)) (=> (and (and (and ($generated@@112 ($generated@@8 $generated@@747) $generated@@170 $generated@@730) ($generated@@81 $generated@@746 ($generated@@82 88))) (and (= $generated@@748 ($generated@@83 $generated@@746 ($generated@@82 88))) ($generated@@81 $generated@@746 ($generated@@82 88)))) (and (and ($generated@@173 $generated@@748 $generated@@174) (= $generated@@738 $generated@@748)) (and ($generated@@112 $generated@@738 $generated@@174 $generated@@730) ($generated@@84 $generated@@738)))) (and (=> (= (ControlFlow 0 17) 3) $generated@@756) (=> (= (ControlFlow 0 17) 14) $generated@@755))))))))))
(let (($generated@@758 true))
(let (($generated@@759  (=> (= $generated@@749 ($generated@@222 $generated@@745 $generated@@730 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 1) $generated@@758) (=> (= (ControlFlow 0 19) 17) $generated@@757)))))
(let (($generated@@760  (=> (and (and ($generated@@336 $generated@@730) ($generated@@750 $generated@@730)) (and (= 3 $generated@@78) (= (ControlFlow 0 20) 19))) $generated@@759)))
$generated@@760)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@144 (T@U Int) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@150 (T@T T@U) T@U)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (Bool) T@U)
(declare-fun $generated@@179 (Bool) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (Int) T@U)
(declare-fun $generated@@271 () T@T)
(declare-fun $generated@@281 (Bool Bool Bool) T@U)
(declare-fun $generated@@282 (Bool Bool Bool) Bool)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@296 (T@U) Bool)
(declare-fun $generated@@301 (T@U T@U) Bool)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@320 (T@U) Bool)
(declare-fun $generated@@323 (T@U) Int)
(declare-fun $generated@@325 (T@U) Bool)
(declare-fun $generated@@328 (T@U T@U T@U) Bool)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@366 (T@U) Int)
(declare-fun $generated@@367 (T@T) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@T) T@U)
(declare-fun $generated@@374 (T@T T@T) T@T)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@T T@T) T@U)
(declare-fun $generated@@392 (T@T T@T) T@T)
(declare-fun $generated@@393 (T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@503 (T@T) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(declare-fun $generated@@616 (T@U) Int)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@136 $generated@@142)) $generated@@137)
 :pattern ( ($generated@@136 $generated@@142))
))) (= (type $generated@@140) $generated@@68)))
(assert  (=> true (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@137) (or ($generated@@138 $generated@@143) (and ($generated@@139 $generated@@143 $generated@@140) ($generated@@141 $generated@@143)))) ($generated@@139 ($generated@@136 $generated@@143) $generated@@140))
 :pattern ( ($generated@@136 $generated@@143))
))))
(assert  (and (and (and (and (and (forall (($generated@@152 T@T) ) (= ($generated@@1 ($generated@@146 $generated@@152)) 15)) (forall (($generated@@153 T@T) ) (! (= ($generated@@151 ($generated@@146 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@146 $generated@@153))
))) (= ($generated@@1 $generated@@147) 16)) (forall (($generated@@154 T@U) ($generated@@155 Int) ) (! (let (($generated@@156 ($generated@@151 (type $generated@@154))))
(= (type ($generated@@144 $generated@@154 $generated@@155)) $generated@@156))
 :pattern ( ($generated@@144 $generated@@154 $generated@@155))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@145 $generated@@157)) $generated@@137)
 :pattern ( ($generated@@145 $generated@@157))
))) (forall (($generated@@158 T@T) ($generated@@159 T@U) ) (! (= (type ($generated@@150 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@150 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 Int) ) (!  (=> (= (type $generated@@160) ($generated@@146 $generated@@147)) (=> (and (<= 0 $generated@@161) (< $generated@@161 ($generated@@148 $generated@@160))) (< ($generated@@149 ($generated@@150 $generated@@137 ($generated@@144 $generated@@160 $generated@@161))) ($generated@@149 ($generated@@145 $generated@@160)))))
 :pattern ( ($generated@@144 $generated@@160 $generated@@161) ($generated@@145 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@139 $generated@@162 ($generated@@79 0)))
 :pattern ( ($generated@@139 $generated@@162 ($generated@@79 0)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@165 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@68) (= (type $generated@@168) $generated@@68)) (= (type $generated@@169) $generated@@137)) ($generated@@139 $generated@@169 ($generated@@164 $generated@@167 $generated@@168))) ($generated@@163 $generated@@169))
 :pattern ( ($generated@@163 $generated@@169) ($generated@@139 $generated@@169 ($generated@@164 $generated@@167 $generated@@168)))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@147)
 :pattern ( ($generated@@171 $generated@@173))
)) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@147)
 :pattern ( ($generated@@172 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@137) (= (type $generated@@176) $generated@@137)) true) (= ($generated@@170 $generated@@175 $generated@@176)  (and (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)) (= ($generated@@172 $generated@@175) ($generated@@172 $generated@@176)))))
 :pattern ( ($generated@@170 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@180 Bool) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@137)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert  (=> (<= 2 $generated@@177) (forall (($generated@@181 Bool) ) (!  (=> (or ($generated@@179 $generated@@181) (not (= 2 $generated@@177))) ($generated@@139 ($generated@@178 $generated@@181) $generated@@140))
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@182 $generated@@184))
)) (= (type $generated@@183) $generated@@137)))
(assert (= ($generated@@182 $generated@@183) $generated@@64))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@68)
 :pattern ( ($generated@@185 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@189) $generated@@68)) ($generated@@139 $generated@@188 ($generated@@185 $generated@@189))) ($generated@@186 $generated@@188))
 :pattern ( ($generated@@139 $generated@@188 ($generated@@185 $generated@@189)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 17)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@81 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@71 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@81) (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@241) ($generated@@70 $generated@@4))) (= (type $generated@@243) $generated@@81)) (= (type $generated@@244) ($generated@@70 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ) (! (= (type ($generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250)) ($generated@@192 $generated@@81 $generated@@4))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@71 (type $generated@@256))))
 (=> (and (and (and (and (= (type $generated@@251) $generated@@81) (= (type $generated@@252) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@253) ($generated@@70 $generated@@4))) (= (type $generated@@255) $generated@@81)) (= (type $generated@@256) ($generated@@70 $generated@@257))) (= ($generated@@0 ($generated@@190 ($generated@@246 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (not (= $generated@@255 $generated@@251)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@252 $generated@@255) $generated@@253))) $generated@@254))))
 :pattern ( ($generated@@190 ($generated@@246 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@137)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@68) (= (type $generated@@263) $generated@@68)) (= (type $generated@@264) $generated@@147)) (= (type $generated@@265) $generated@@147)) (= ($generated@@139 ($generated@@258 $generated@@264 $generated@@265) ($generated@@164 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@139 ($generated@@258 $generated@@264 $generated@@265) ($generated@@164 $generated@@262 $generated@@263)))
)))
(assert  (and (and (and (and (and (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@266 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@266 $generated@@272))
)) (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@267 $generated@@274 $generated@@275)) ($generated@@146 $generated@@276)))
 :pattern ( ($generated@@267 $generated@@274 $generated@@275))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@268 $generated@@277)) ($generated@@146 $generated@@277))
 :pattern ( ($generated@@268 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (= (type ($generated@@269 $generated@@278)) $generated@@147)
 :pattern ( ($generated@@269 $generated@@278))
))) (= ($generated@@1 $generated@@271) 18)) (forall (($generated@@279 Int) ) (! (= (type ($generated@@270 $generated@@279)) $generated@@271)
 :pattern ( ($generated@@270 $generated@@279))
))))
(assert  (=> (<= 2 $generated@@177) (forall (($generated@@280 Bool) ) (!  (=> (or ($generated@@179 $generated@@280) (not (= 2 $generated@@177))) (= ($generated@@178 $generated@@280) (ite $generated@@280 $generated@@183 ($generated@@145 ($generated@@266 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@268 $generated@@147) ($generated@@269 ($generated@@270 118))) ($generated@@269 ($generated@@270 111))) ($generated@@269 ($generated@@270 105))) ($generated@@269 ($generated@@270 100))) ($generated@@269 ($generated@@270 32))) ($generated@@269 ($generated@@270 98))) ($generated@@269 ($generated@@270 97))) ($generated@@269 ($generated@@270 100))) ($generated@@269 ($generated@@270 32))) ($generated@@269 ($generated@@270 108))) ($generated@@269 ($generated@@270 117))) ($generated@@269 ($generated@@270 99))) ($generated@@269 ($generated@@270 107))))))))
 :pattern ( ($generated@@178 $generated@@280))
))))
(assert ($generated@@139 $generated@@183 $generated@@140))
(assert (forall (($generated@@284 Bool) ($generated@@285 Bool) ($generated@@286 Bool) ) (! (= (type ($generated@@281 $generated@@284 $generated@@285 $generated@@286)) $generated@@137)
 :pattern ( ($generated@@281 $generated@@284 $generated@@285 $generated@@286))
)))
(assert  (=> (<= 3 $generated@@177) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (= (type $generated@@287) $generated@@4) (= (type $generated@@288) $generated@@4)) (= (type $generated@@289) $generated@@4)) (or ($generated@@282 ($generated@@0 ($generated@@266 $generated@@287)) ($generated@@0 ($generated@@266 $generated@@288)) ($generated@@0 ($generated@@266 $generated@@289))) (not (= 3 $generated@@177)))) (and (and ($generated@@179 ($generated@@0 ($generated@@266 $generated@@287))) (let (($generated@@290 ($generated@@266 ($generated@@178 ($generated@@0 ($generated@@266 $generated@@287))))))
 (and (and ($generated@@283 $generated@@290) (=> ($generated@@141 $generated@@290) ($generated@@138 $generated@@290))) (=> (not ($generated@@141 $generated@@290)) (and ($generated@@179 ($generated@@0 ($generated@@266 $generated@@288))) (let (($generated@@291 ($generated@@266 ($generated@@178 ($generated@@0 ($generated@@266 $generated@@288))))))
 (and (and ($generated@@283 $generated@@291) (=> ($generated@@141 $generated@@291) ($generated@@138 $generated@@291))) (=> (not ($generated@@141 $generated@@291)) (and ($generated@@179 ($generated@@0 ($generated@@266 $generated@@289))) (let (($generated@@292 ($generated@@266 ($generated@@178 ($generated@@0 ($generated@@266 $generated@@289))))))
 (and ($generated@@283 $generated@@292) (=> ($generated@@141 $generated@@292) ($generated@@138 $generated@@292))))))))))))) (= ($generated@@281 ($generated@@0 ($generated@@266 $generated@@287)) ($generated@@0 ($generated@@266 $generated@@288)) ($generated@@0 ($generated@@266 $generated@@289))) (let (($generated@@293 ($generated@@266 ($generated@@178 ($generated@@0 ($generated@@266 $generated@@287))))))
(ite ($generated@@141 $generated@@293) ($generated@@136 $generated@@293) (let (($generated@@294 ($generated@@266 ($generated@@178 ($generated@@0 ($generated@@266 $generated@@288))))))
(ite ($generated@@141 $generated@@294) ($generated@@136 $generated@@294) (let (($generated@@295 ($generated@@266 ($generated@@178 ($generated@@0 ($generated@@266 $generated@@289))))))
(ite ($generated@@141 $generated@@295) ($generated@@136 $generated@@295) $generated@@183)))))))))
 :weight 3
 :pattern ( ($generated@@281 ($generated@@0 ($generated@@266 $generated@@287)) ($generated@@0 ($generated@@266 $generated@@288)) ($generated@@0 ($generated@@266 $generated@@289))))
))))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@296 $generated@@297)) ($generated@@78 $generated@@183 $generated@@140 $generated@@297))
 :pattern ( ($generated@@78 $generated@@183 $generated@@140 $generated@@297))
)))
(assert  (=> true (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@137) (or ($generated@@283 $generated@@298) ($generated@@139 $generated@@298 $generated@@140))) true)
 :pattern ( ($generated@@141 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@137) (= (type $generated@@300) $generated@@137)) (= ($generated@@170 $generated@@299 $generated@@300) (= $generated@@299 $generated@@300)))
 :pattern ( ($generated@@170 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@137) (= (type $generated@@303) $generated@@137)) (= ($generated@@301 $generated@@302 $generated@@303) (= $generated@@302 $generated@@303)))
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@68)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@307) $generated@@68)) (= ($generated@@139 $generated@@306 ($generated@@304 $generated@@307)) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@147) ($generated@@0 ($generated@@85 $generated@@306 $generated@@308))) ($generated@@259 $generated@@308 $generated@@307))
 :pattern ( ($generated@@85 $generated@@306 $generated@@308))
))))
 :pattern ( ($generated@@139 $generated@@306 ($generated@@304 $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@68)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@312) $generated@@68)) (= ($generated@@139 $generated@@311 ($generated@@309 $generated@@312)) (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@147) ($generated@@0 ($generated@@85 $generated@@311 $generated@@313))) ($generated@@259 $generated@@313 $generated@@312))
 :pattern ( ($generated@@85 $generated@@311 $generated@@313))
))))
 :pattern ( ($generated@@139 $generated@@311 ($generated@@309 $generated@@312)))
)))
(assert (forall (($generated@@314 T@U) ) (! (= ($generated@@266 $generated@@314) $generated@@314)
 :pattern ( ($generated@@266 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@68)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (= (type $generated@@317) ($generated@@146 $generated@@147)) (= (type $generated@@318) $generated@@147)) (= (type $generated@@319) $generated@@68)) (and ($generated@@139 $generated@@317 ($generated@@315 $generated@@319)) ($generated@@259 $generated@@318 $generated@@319))) ($generated@@139 ($generated@@267 $generated@@317 $generated@@318) ($generated@@315 $generated@@319)))
 :pattern ( ($generated@@139 ($generated@@267 $generated@@317 $generated@@318) ($generated@@315 $generated@@319)))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@321) $generated@@137) (= (type $generated@@322) $generated@@137)) (and ($generated@@320 $generated@@321) ($generated@@320 $generated@@322))) (= ($generated@@301 $generated@@321 $generated@@322) true))
 :pattern ( ($generated@@301 $generated@@321 $generated@@322) ($generated@@320 $generated@@321))
 :pattern ( ($generated@@301 $generated@@321 $generated@@322) ($generated@@320 $generated@@322))
)))
(assert (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 65536)) (= ($generated@@323 ($generated@@270 $generated@@324)) $generated@@324))
 :pattern ( ($generated@@270 $generated@@324))
)))
(assert  (=> true (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@137) (or ($generated@@283 ($generated@@266 $generated@@326)) ($generated@@139 $generated@@326 $generated@@140))) (= ($generated@@141 ($generated@@266 $generated@@326)) ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@325 ($generated@@266 $generated@@326)))))))
 :weight 3
 :pattern ( ($generated@@141 ($generated@@266 $generated@@326)))
))))
(assert  (=> (<= 2 $generated@@177) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@4) (or ($generated@@179 ($generated@@0 ($generated@@266 $generated@@327))) (not (= 2 $generated@@177)))) (= ($generated@@178 ($generated@@0 ($generated@@266 $generated@@327))) (ite ($generated@@0 $generated@@327) $generated@@183 ($generated@@145 ($generated@@266 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@267 ($generated@@268 $generated@@147) ($generated@@269 ($generated@@270 118))) ($generated@@269 ($generated@@270 111))) ($generated@@269 ($generated@@270 105))) ($generated@@269 ($generated@@270 100))) ($generated@@269 ($generated@@270 32))) ($generated@@269 ($generated@@270 98))) ($generated@@269 ($generated@@270 97))) ($generated@@269 ($generated@@270 100))) ($generated@@269 ($generated@@270 32))) ($generated@@269 ($generated@@270 108))) ($generated@@269 ($generated@@270 117))) ($generated@@269 ($generated@@270 99))) ($generated@@269 ($generated@@270 107))))))))
 :weight 3
 :pattern ( ($generated@@178 ($generated@@0 ($generated@@266 $generated@@327))))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@329) $generated@@68) (= (type $generated@@330) $generated@@68)) (= (type $generated@@331) $generated@@147)) (= (type $generated@@332) $generated@@147)) (= (type $generated@@333) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@296 $generated@@333)) (= ($generated@@78 ($generated@@258 $generated@@331 $generated@@332) ($generated@@164 $generated@@329 $generated@@330) $generated@@333)  (and ($generated@@328 $generated@@331 $generated@@329 $generated@@333) ($generated@@328 $generated@@332 $generated@@330 $generated@@333))))
 :pattern ( ($generated@@78 ($generated@@258 $generated@@331 $generated@@332) ($generated@@164 $generated@@329 $generated@@330) $generated@@333))
)))
(assert  (=> true (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@137) (or ($generated@@138 ($generated@@266 $generated@@334)) (and ($generated@@139 $generated@@334 $generated@@140) ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@141 ($generated@@266 $generated@@334)))))))) (= ($generated@@136 ($generated@@266 $generated@@334)) ($generated@@266 $generated@@334)))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@266 $generated@@334)))
))))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@137) (= ($generated@@163 $generated@@335) (= ($generated@@182 $generated@@335) $generated@@61)))
 :pattern ( ($generated@@163 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@137) (= ($generated@@320 $generated@@336) (= ($generated@@182 $generated@@336) $generated@@64)))
 :pattern ( ($generated@@320 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@137) (= ($generated@@325 $generated@@337) (= ($generated@@182 $generated@@337) $generated@@65)))
 :pattern ( ($generated@@325 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@151 (type $generated@@339))))
 (=> (and (= (type $generated@@339) ($generated@@146 $generated@@341)) (= (type $generated@@340) ($generated@@146 $generated@@341))) (= ($generated@@338 $generated@@339 $generated@@340)  (and (= ($generated@@148 $generated@@339) ($generated@@148 $generated@@340)) (forall (($generated@@342 Int) ) (!  (=> (and (<= 0 $generated@@342) (< $generated@@342 ($generated@@148 $generated@@339))) (= ($generated@@144 $generated@@339 $generated@@342) ($generated@@144 $generated@@340 $generated@@342)))
 :pattern ( ($generated@@144 $generated@@339 $generated@@342))
 :pattern ( ($generated@@144 $generated@@340 $generated@@342))
))))))
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@137) ($generated@@163 $generated@@343)) (exists (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (and (and (= (type $generated@@344) $generated@@147) (= (type $generated@@345) $generated@@147)) (= $generated@@343 ($generated@@258 $generated@@344 $generated@@345)))
 :no-pattern (type $generated@@344)
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
)))
 :pattern ( ($generated@@163 $generated@@343))
)))
(assert (forall (($generated@@346 T@T) ) (! (= ($generated@@148 ($generated@@268 $generated@@346)) 0)
 :pattern ( ($generated@@268 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@137) ($generated@@320 $generated@@347)) (= $generated@@347 $generated@@183))
 :pattern ( ($generated@@320 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@137) ($generated@@325 $generated@@348)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) ($generated@@146 $generated@@147)) (= $generated@@348 ($generated@@145 $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
)))
 :pattern ( ($generated@@325 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
 (=> (= (type $generated@@350) ($generated@@146 $generated@@352)) (= ($generated@@148 ($generated@@267 $generated@@350 $generated@@351)) (+ 1 ($generated@@148 $generated@@350)))))
 :pattern ( ($generated@@267 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@271) (and (and (= ($generated@@270 ($generated@@323 $generated@@353)) $generated@@353) (<= 0 ($generated@@323 $generated@@353))) (< ($generated@@323 $generated@@353) 65536)))
 :pattern ( ($generated@@323 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@68) (= (type $generated@@356) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@328 ($generated@@269 $generated@@354) $generated@@355 $generated@@356) ($generated@@78 $generated@@354 $generated@@355 $generated@@356)))
 :pattern ( ($generated@@328 ($generated@@269 $generated@@354) $generated@@355 $generated@@356))
)))
(assert  (=> (<= 3 $generated@@177) (forall (($generated@@357 Bool) ($generated@@358 Bool) ($generated@@359 Bool) ) (!  (=> (or ($generated@@282 $generated@@357 $generated@@358 $generated@@359) (not (= 3 $generated@@177))) (and (and ($generated@@179 $generated@@357) (let (($generated@@360 ($generated@@178 $generated@@357)))
 (and (and ($generated@@283 $generated@@360) (=> ($generated@@141 $generated@@360) ($generated@@138 $generated@@360))) (=> (not ($generated@@141 $generated@@360)) (and ($generated@@179 $generated@@358) (let (($generated@@361 ($generated@@178 $generated@@358)))
 (and (and ($generated@@283 $generated@@361) (=> ($generated@@141 $generated@@361) ($generated@@138 $generated@@361))) (=> (not ($generated@@141 $generated@@361)) (and ($generated@@179 $generated@@359) (let (($generated@@362 ($generated@@178 $generated@@359)))
 (and ($generated@@283 $generated@@362) (=> ($generated@@141 $generated@@362) ($generated@@138 $generated@@362))))))))))))) (= ($generated@@281 $generated@@357 $generated@@358 $generated@@359) (let (($generated@@363 ($generated@@178 $generated@@357)))
(ite ($generated@@141 $generated@@363) ($generated@@136 $generated@@363) (let (($generated@@364 ($generated@@178 $generated@@358)))
(ite ($generated@@141 $generated@@364) ($generated@@136 $generated@@364) (let (($generated@@365 ($generated@@178 $generated@@359)))
(ite ($generated@@141 $generated@@365) ($generated@@136 $generated@@365) $generated@@183)))))))))
 :pattern ( ($generated@@281 $generated@@357 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@368 T@T) ) (! (= (type ($generated@@367 $generated@@368)) ($generated@@80 $generated@@368 $generated@@2))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@83 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@80 $generated@@370 $generated@@2)) (and (= (= ($generated@@366 $generated@@369) 0) (= $generated@@369 ($generated@@367 $generated@@370))) (=> (not (= ($generated@@366 $generated@@369) 0)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (< 0 ($generated ($generated@@85 $generated@@369 $generated@@371))))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert  (and (and (and (and (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (= ($generated@@1 ($generated@@374 $generated@@377 $generated@@378)) 19)) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@375 ($generated@@374 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@374 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= ($generated@@376 ($generated@@374 $generated@@381 $generated@@382)) $generated@@382)
 :pattern ( ($generated@@374 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@375 (type $generated@@383))))
(= (type ($generated@@372 $generated@@383)) ($generated@@80 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@383))
))) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= (type ($generated@@373 $generated@@385 $generated@@386)) ($generated@@374 $generated@@385 $generated@@386))
 :pattern ( ($generated@@373 $generated@@385 $generated@@386))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@T) ) (! (let (($generated@@389 (type $generated@@387)))
 (not ($generated@@0 ($generated@@85 ($generated@@372 ($generated@@373 $generated@@389 $generated@@388)) $generated@@387))))
 :pattern ( (let (($generated@@389 (type $generated@@387)))
($generated@@85 ($generated@@372 ($generated@@373 $generated@@389 $generated@@388)) $generated@@387)))
)))
(assert  (and (and (and (and (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (= ($generated@@1 ($generated@@392 $generated@@395 $generated@@396)) 20)) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= ($generated@@393 ($generated@@392 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@392 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@394 ($generated@@392 $generated@@399 $generated@@400)) $generated@@400)
 :pattern ( ($generated@@392 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@393 (type $generated@@401))))
(= (type ($generated@@390 $generated@@401)) ($generated@@80 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@401))
))) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= (type ($generated@@391 $generated@@403 $generated@@404)) ($generated@@392 $generated@@403 $generated@@404))
 :pattern ( ($generated@@391 $generated@@403 $generated@@404))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@T) ) (! (let (($generated@@407 (type $generated@@405)))
 (not ($generated@@0 ($generated@@85 ($generated@@390 ($generated@@391 $generated@@407 $generated@@406)) $generated@@405))))
 :pattern ( (let (($generated@@407 (type $generated@@405)))
($generated@@85 ($generated@@390 ($generated@@391 $generated@@407 $generated@@406)) $generated@@405)))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@83 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@80 $generated@@409 $generated@@2)) (= ($generated@@186 $generated@@408) (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@409) (and (<= 0 ($generated ($generated@@85 $generated@@408 $generated@@410))) (<= ($generated ($generated@@85 $generated@@408 $generated@@410)) ($generated@@366 $generated@@408))))
 :pattern ( ($generated@@85 $generated@@408 $generated@@410))
)))))
 :pattern ( ($generated@@186 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@147) ($generated@@259 $generated@@411 $generated@@140)) (and (= ($generated@@269 ($generated@@150 $generated@@137 $generated@@411)) $generated@@411) ($generated@@139 ($generated@@150 $generated@@137 $generated@@411) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@411 $generated@@140))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 Int) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
 (=> (= (type $generated@@412) ($generated@@146 $generated@@415)) (and (=> (= $generated@@413 ($generated@@148 $generated@@412)) (= ($generated@@144 ($generated@@267 $generated@@412 $generated@@414) $generated@@413) $generated@@414)) (=> (not (= $generated@@413 ($generated@@148 $generated@@412))) (= ($generated@@144 ($generated@@267 $generated@@412 $generated@@414) $generated@@413) ($generated@@144 $generated@@412 $generated@@413))))))
 :pattern ( ($generated@@144 ($generated@@267 $generated@@412 $generated@@414) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@146 $generated@@147))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@418) $generated@@137) (= (type $generated@@419) $generated@@137)) (and ($generated@@325 $generated@@418) ($generated@@325 $generated@@419))) (= ($generated@@301 $generated@@418 $generated@@419) ($generated@@338 ($generated@@416 $generated@@418) ($generated@@416 $generated@@419))))
 :pattern ( ($generated@@301 $generated@@418 $generated@@419) ($generated@@325 $generated@@418))
 :pattern ( ($generated@@301 $generated@@418 $generated@@419) ($generated@@325 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@376 (type $generated@@420))))
(let (($generated@@422 ($generated@@375 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@374 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@373 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) ($generated@@0 ($generated@@85 ($generated@@372 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@372 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@376 (type $generated@@425))))
(= (type ($generated@@424 $generated@@425)) ($generated@@80 $generated@@426 $generated@@4)))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@376 (type $generated@@427))))
(let (($generated@@429 ($generated@@375 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@374 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@373 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@428) ($generated@@0 ($generated@@85 ($generated@@424 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@424 $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@394 (type $generated@@431))))
(let (($generated@@433 ($generated@@393 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@392 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@391 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) ($generated@@0 ($generated@@85 ($generated@@390 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@390 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@394 (type $generated@@436))))
(= (type ($generated@@435 $generated@@436)) ($generated@@80 $generated@@437 $generated@@4)))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@394 (type $generated@@438))))
(let (($generated@@440 ($generated@@393 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@392 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@391 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@439) ($generated@@0 ($generated@@85 ($generated@@435 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@435 $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@443) $generated@@68)) (= ($generated@@139 $generated@@442 ($generated@@185 $generated@@443)) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@147) (< 0 ($generated ($generated@@85 $generated@@442 $generated@@444)))) ($generated@@259 $generated@@444 $generated@@443))
 :pattern ( ($generated@@85 $generated@@442 $generated@@444))
))))
 :pattern ( ($generated@@139 $generated@@442 ($generated@@185 $generated@@443)))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@445) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@445 ($generated@@304 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@147) ($generated@@0 ($generated@@85 $generated@@445 $generated@@448))) ($generated@@328 $generated@@448 $generated@@446 $generated@@447))
 :pattern ( ($generated@@85 $generated@@445 $generated@@448))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@304 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@449 ($generated@@309 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@147) ($generated@@0 ($generated@@85 $generated@@449 $generated@@452))) ($generated@@328 $generated@@452 $generated@@450 $generated@@451))
 :pattern ( ($generated@@85 $generated@@449 $generated@@452))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@309 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(= ($generated ($generated@@85 ($generated@@367 $generated@@454) $generated@@453)) 0))
 :pattern ( (let (($generated@@454 (type $generated@@453)))
($generated@@85 ($generated@@367 $generated@@454) $generated@@453)))
)))
(assert  (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@457)) ($generated@@80 $generated@@147 $generated@@4))
 :pattern ( ($generated@@455 $generated@@457))
)) (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@376 (type $generated@@458))))
(let (($generated@@460 ($generated@@375 (type $generated@@458))))
(= (type ($generated@@456 $generated@@458)) ($generated@@80 $generated@@460 $generated@@459))))
 :pattern ( ($generated@@456 $generated@@458))
))))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) ($generated@@374 $generated@@147 $generated@@147)) (= (type $generated@@462) $generated@@147)) (= ($generated@@0 ($generated@@85 ($generated@@455 $generated@@461) $generated@@462))  (and ($generated@@0 ($generated@@85 ($generated@@372 $generated@@461) ($generated@@171 ($generated@@150 $generated@@137 $generated@@462)))) (= ($generated@@85 ($generated@@456 $generated@@461) ($generated@@171 ($generated@@150 $generated@@137 $generated@@462))) ($generated@@172 ($generated@@150 $generated@@137 $generated@@462))))))
 :pattern ( ($generated@@85 ($generated@@455 $generated@@461) $generated@@462))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) ($generated@@80 $generated@@147 $generated@@4))
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@394 (type $generated@@466))))
(let (($generated@@468 ($generated@@393 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466)) ($generated@@80 $generated@@468 $generated@@467))))
 :pattern ( ($generated@@464 $generated@@466))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) ($generated@@392 $generated@@147 $generated@@147)) (= (type $generated@@470) $generated@@147)) (= ($generated@@0 ($generated@@85 ($generated@@463 $generated@@469) $generated@@470))  (and ($generated@@0 ($generated@@85 ($generated@@390 $generated@@469) ($generated@@171 ($generated@@150 $generated@@137 $generated@@470)))) (= ($generated@@85 ($generated@@464 $generated@@469) ($generated@@171 ($generated@@150 $generated@@137 $generated@@470))) ($generated@@172 ($generated@@150 $generated@@137 $generated@@470))))))
 :pattern ( ($generated@@85 ($generated@@463 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (let (($generated@@473 (type $generated@@472)))
(let (($generated@@474 ($generated@@375 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@374 $generated@@474 $generated@@473)) (= ($generated@@0 ($generated@@85 ($generated@@424 $generated@@471) $generated@@472)) (exists (($generated@@475 T@U) ) (!  (and (= (type $generated@@475) $generated@@474) (and ($generated@@0 ($generated@@85 ($generated@@372 $generated@@471) $generated@@475)) (= $generated@@472 ($generated@@85 ($generated@@456 $generated@@471) $generated@@475))))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@471) $generated@@475))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@471) $generated@@475))
))))))
 :pattern ( ($generated@@85 ($generated@@424 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@477)))
(let (($generated@@479 ($generated@@393 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@392 $generated@@479 $generated@@478)) (= ($generated@@0 ($generated@@85 ($generated@@435 $generated@@476) $generated@@477)) (exists (($generated@@480 T@U) ) (!  (and (= (type $generated@@480) $generated@@479) (and ($generated@@0 ($generated@@85 ($generated@@390 $generated@@476) $generated@@480)) (= $generated@@477 ($generated@@85 ($generated@@464 $generated@@476) $generated@@480))))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@476) $generated@@480))
 :pattern ( ($generated@@85 ($generated@@464 $generated@@476) $generated@@480))
))))))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@146 $generated@@147)) (= (type $generated@@482) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@296 $generated@@482)) (= ($generated@@78 ($generated@@145 $generated@@481) $generated@@140 $generated@@482) ($generated@@78 $generated@@481 ($generated@@315 $generated@@45) $generated@@482)))
 :pattern ( ($generated@@78 ($generated@@145 $generated@@481) $generated@@140 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@374 $generated@@147 $generated@@147)) (= (type $generated@@487) $generated@@68)) (= (type $generated@@488) $generated@@68)) (= (type $generated@@489) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@372 $generated@@486) $generated@@490))) (and ($generated@@328 ($generated@@85 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@328 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@78 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@392 $generated@@147 $generated@@147)) (= (type $generated@@495) $generated@@68)) (= (type $generated@@496) $generated@@68)) (= (type $generated@@497) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@390 $generated@@494) $generated@@498))) (and ($generated@@328 ($generated@@85 ($generated@@464 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@328 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@85 ($generated@@464 $generated@@494) $generated@@498))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@78 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@151 (type $generated@@499))))
 (=> (and (and (= (type $generated@@499) ($generated@@146 $generated@@501)) (= (type $generated@@500) ($generated@@146 $generated@@501))) ($generated@@338 $generated@@499 $generated@@500)) (= $generated@@499 $generated@@500)))
 :pattern ( ($generated@@338 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@137) ($generated@@139 $generated@@502 $generated@@140)) (or ($generated@@320 $generated@@502) ($generated@@325 $generated@@502)))
 :pattern ( ($generated@@325 $generated@@502) ($generated@@139 $generated@@502 $generated@@140))
 :pattern ( ($generated@@320 $generated@@502) ($generated@@139 $generated@@502 $generated@@140))
)))
(assert (forall (($generated@@504 T@T) ) (! (= (type ($generated@@503 $generated@@504)) ($generated@@80 $generated@@504 $generated@@4))
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@394 (type $generated@@505))))
(let (($generated@@507 ($generated@@393 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@392 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@391 $generated@@507 $generated@@506)) (= ($generated@@390 $generated@@505) ($generated@@503 $generated@@507))))))
 :pattern ( ($generated@@390 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@394 (type $generated@@508))))
(let (($generated@@510 ($generated@@393 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@392 $generated@@510 $generated@@509)) (= (= $generated@@508 ($generated@@391 $generated@@510 $generated@@509)) (= ($generated@@435 $generated@@508) ($generated@@503 $generated@@509))))))
 :pattern ( ($generated@@435 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@394 (type $generated@@511))))
(let (($generated@@513 ($generated@@393 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@392 $generated@@513 $generated@@512)) (= (= $generated@@511 ($generated@@391 $generated@@513 $generated@@512)) (= ($generated@@463 $generated@@511) ($generated@@503 $generated@@147))))))
 :pattern ( ($generated@@463 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@376 (type $generated@@514))))
(let (($generated@@516 ($generated@@375 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@374 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@373 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@147) (= (type $generated@@518) $generated@@147)) ($generated@@0 ($generated@@85 ($generated@@455 $generated@@514) ($generated@@269 ($generated@@258 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@455 $generated@@514))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@394 (type $generated@@519))))
(let (($generated@@521 ($generated@@393 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@392 $generated@@521 $generated@@520)) (or (= $generated@@519 ($generated@@391 $generated@@521 $generated@@520)) (exists (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (and (and (= (type $generated@@522) $generated@@147) (= (type $generated@@523) $generated@@147)) ($generated@@0 ($generated@@85 ($generated@@463 $generated@@519) ($generated@@269 ($generated@@258 $generated@@522 $generated@@523)))))
 :no-pattern (type $generated@@522)
 :no-pattern (type $generated@@523)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
))))))
 :pattern ( ($generated@@463 $generated@@519))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@147) ($generated@@259 $generated@@524 $generated@@46)) (and (= ($generated@@269 ($generated@@150 $generated@@2 $generated@@524)) $generated@@524) ($generated@@139 ($generated@@150 $generated@@2 $generated@@524) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@524 $generated@@46))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@147) ($generated@@259 $generated@@525 $generated@@47)) (and (= ($generated@@269 ($generated@@150 $generated@@3 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@150 $generated@@3 $generated@@525) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@525 $generated@@47))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@147) ($generated@@259 $generated@@526 $generated@@44)) (and (= ($generated@@269 ($generated@@150 $generated@@4 $generated@@526)) $generated@@526) ($generated@@139 ($generated@@150 $generated@@4 $generated@@526) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@526 $generated@@44))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@147) ($generated@@259 $generated@@527 $generated@@45)) (and (= ($generated@@269 ($generated@@150 $generated@@271 $generated@@527)) $generated@@527) ($generated@@139 ($generated@@150 $generated@@271 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@259 ($generated@@269 $generated@@528) $generated@@529) ($generated@@139 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@259 ($generated@@269 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@83 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@80 $generated@@531 $generated@@2)) (<= 0 ($generated@@366 $generated@@530))))
 :pattern ( ($generated@@366 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@151 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@146 $generated@@533)) (<= 0 ($generated@@148 $generated@@532))))
 :pattern ( ($generated@@148 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@68) (= (type $generated@@543) $generated@@68)) (= ($generated@@76 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@68) (= (type $generated@@553) $generated@@68)) (= ($generated@@76 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@147) (= (type $generated@@555) $generated@@147)) (= ($generated@@182 ($generated@@258 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@68) (= (type $generated@@559) $generated@@68)) (= ($generated@@556 ($generated@@164 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@164 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@68) (= (type $generated@@563) $generated@@68)) (= ($generated@@560 ($generated@@164 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@164 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@147) (= (type $generated@@565) $generated@@147)) (= ($generated@@171 ($generated@@258 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@258 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@147) (= (type $generated@@567) $generated@@147)) (= ($generated@@172 ($generated@@258 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@258 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@146 $generated@@147)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@568 ($generated@@315 $generated@@569) $generated@@570) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@148 $generated@@568))) ($generated@@328 ($generated@@144 $generated@@568 $generated@@571) $generated@@569 $generated@@570))
 :pattern ( ($generated@@144 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@78 $generated@@568 ($generated@@315 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@572 ($generated@@79 $generated@@573)) $generated@@573)
 :pattern ( ($generated@@79 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@304 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@304 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@304 $generated@@577)) $generated@@54))
 :pattern ( ($generated@@304 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@309 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@309 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@76 ($generated@@309 $generated@@581)) $generated@@55))
 :pattern ( ($generated@@309 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@582 ($generated@@185 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@185 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@76 ($generated@@185 $generated@@585)) $generated@@56))
 :pattern ( ($generated@@185 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@68)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@68) (= ($generated@@586 ($generated@@315 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@315 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@68) (= ($generated@@76 ($generated@@315 $generated@@589)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) ($generated@@146 $generated@@147)) (= ($generated@@182 ($generated@@145 $generated@@590)) $generated@@65))
 :pattern ( ($generated@@145 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) ($generated@@146 $generated@@147)) (= ($generated@@416 ($generated@@145 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@145 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@592)))
(= ($generated@@150 $generated@@593 ($generated@@269 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@269 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@374 $generated@@147 $generated@@147)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) $generated@@68)) (= ($generated@@139 $generated@@594 ($generated@@483 $generated@@595 $generated@@596)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@372 $generated@@594) $generated@@597))) (and ($generated@@259 ($generated@@85 ($generated@@456 $generated@@594) $generated@@597) $generated@@596) ($generated@@259 $generated@@597 $generated@@595)))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@594) $generated@@597))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@594) $generated@@597))
))))
 :pattern ( ($generated@@139 $generated@@594 ($generated@@483 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@392 $generated@@147 $generated@@147)) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) (= ($generated@@139 $generated@@598 ($generated@@491 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@390 $generated@@598) $generated@@601))) (and ($generated@@259 ($generated@@85 ($generated@@464 $generated@@598) $generated@@601) $generated@@600) ($generated@@259 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@85 ($generated@@464 $generated@@598) $generated@@601))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@139 $generated@@598 ($generated@@491 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@147) (= (type $generated@@604) $generated@@147)) (< ($generated@@602 $generated@@603) ($generated@@149 ($generated@@258 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@258 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@147) (= (type $generated@@606) $generated@@147)) (< ($generated@@602 $generated@@606) ($generated@@149 ($generated@@258 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@258 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@147) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@68)) ($generated@@259 $generated@@607 ($generated@@483 $generated@@608 $generated@@609))) (and (= ($generated@@269 ($generated@@150 ($generated@@374 $generated@@147 $generated@@147) $generated@@607)) $generated@@607) ($generated@@139 ($generated@@150 ($generated@@374 $generated@@147 $generated@@147) $generated@@607) ($generated@@483 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@259 $generated@@607 ($generated@@483 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@147) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) $generated@@68)) ($generated@@259 $generated@@610 ($generated@@491 $generated@@611 $generated@@612))) (and (= ($generated@@269 ($generated@@150 ($generated@@392 $generated@@147 $generated@@147) $generated@@610)) $generated@@610) ($generated@@139 ($generated@@150 ($generated@@392 $generated@@147 $generated@@147) $generated@@610) ($generated@@491 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@259 $generated@@610 ($generated@@491 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@68)) (= (type $generated@@615) $generated@@147)) ($generated@@259 $generated@@615 ($generated@@164 $generated@@613 $generated@@614))) (and (= ($generated@@269 ($generated@@150 $generated@@137 $generated@@615)) $generated@@615) ($generated@@139 ($generated@@150 $generated@@137 $generated@@615) ($generated@@164 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@259 $generated@@615 ($generated@@164 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) ($generated@@146 $generated@@147)) (< ($generated@@616 $generated@@617) ($generated@@149 ($generated@@145 $generated@@617))))
 :pattern ( ($generated@@145 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@618)))
 (not ($generated@@0 ($generated@@85 ($generated@@503 $generated@@619) $generated@@618))))
 :pattern ( (let (($generated@@619 (type $generated@@618)))
($generated@@85 ($generated@@503 $generated@@619) $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@73)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@68) (= (type $generated@@623) $generated@@68)) (and (= ($generated@@76 ($generated@@164 $generated@@622 $generated@@623)) $generated@@62) (= ($generated@@620 ($generated@@164 $generated@@622 $generated@@623)) $generated@@66)))
 :pattern ( ($generated@@164 $generated@@622 $generated@@623))
)))
(assert  (and (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@151 (type $generated@@626))))
(= (type ($generated@@624 $generated@@626)) ($generated@@146 $generated@@627)))
 :pattern ( ($generated@@624 $generated@@626))
)) (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@151 (type $generated@@628))))
(= (type ($generated@@625 $generated@@628)) $generated@@629))
 :pattern ( ($generated@@625 $generated@@628))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@631)))
 (=> (= (type $generated@@630) ($generated@@146 $generated@@632)) (and (= ($generated@@624 ($generated@@267 $generated@@630 $generated@@631)) $generated@@630) (= ($generated@@625 ($generated@@267 $generated@@630 $generated@@631)) $generated@@631))))
 :pattern ( ($generated@@267 $generated@@630 $generated@@631))
)))
(assert  (=> (<= 3 $generated@@177) (forall (($generated@@633 Bool) ($generated@@634 Bool) ($generated@@635 Bool) ) (!  (=> (or ($generated@@282 $generated@@633 $generated@@634 $generated@@635) (not (= 3 $generated@@177))) ($generated@@139 ($generated@@281 $generated@@633 $generated@@634 $generated@@635) $generated@@140))
 :pattern ( ($generated@@281 $generated@@633 $generated@@634 $generated@@635))
))))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@137) (= ($generated@@602 ($generated@@269 $generated@@636)) ($generated@@149 $generated@@636)))
 :pattern ( ($generated@@602 ($generated@@269 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@147) ($generated@@259 $generated@@637 ($generated@@79 0))) (and (= ($generated@@269 ($generated@@150 $generated@@2 $generated@@637)) $generated@@637) ($generated@@139 ($generated@@150 ($generated@@80 $generated@@147 $generated@@4) $generated@@637) ($generated@@79 0))))
 :pattern ( ($generated@@259 $generated@@637 ($generated@@79 0)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@147) (= (type $generated@@639) $generated@@68)) ($generated@@259 $generated@@638 ($generated@@304 $generated@@639))) (and (= ($generated@@269 ($generated@@150 ($generated@@80 $generated@@147 $generated@@4) $generated@@638)) $generated@@638) ($generated@@139 ($generated@@150 ($generated@@80 $generated@@147 $generated@@4) $generated@@638) ($generated@@304 $generated@@639))))
 :pattern ( ($generated@@259 $generated@@638 ($generated@@304 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@147) (= (type $generated@@641) $generated@@68)) ($generated@@259 $generated@@640 ($generated@@309 $generated@@641))) (and (= ($generated@@269 ($generated@@150 ($generated@@80 $generated@@147 $generated@@4) $generated@@640)) $generated@@640) ($generated@@139 ($generated@@150 ($generated@@80 $generated@@147 $generated@@4) $generated@@640) ($generated@@309 $generated@@641))))
 :pattern ( ($generated@@259 $generated@@640 ($generated@@309 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) $generated@@147) (= (type $generated@@643) $generated@@68)) ($generated@@259 $generated@@642 ($generated@@185 $generated@@643))) (and (= ($generated@@269 ($generated@@150 ($generated@@80 $generated@@147 $generated@@2) $generated@@642)) $generated@@642) ($generated@@139 ($generated@@150 ($generated@@80 $generated@@147 $generated@@2) $generated@@642) ($generated@@185 $generated@@643))))
 :pattern ( ($generated@@259 $generated@@642 ($generated@@185 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@147) (= (type $generated@@645) $generated@@68)) ($generated@@259 $generated@@644 ($generated@@315 $generated@@645))) (and (= ($generated@@269 ($generated@@150 ($generated@@146 $generated@@147) $generated@@644)) $generated@@644) ($generated@@139 ($generated@@150 ($generated@@146 $generated@@147) $generated@@644) ($generated@@315 $generated@@645))))
 :pattern ( ($generated@@259 $generated@@644 ($generated@@315 $generated@@645)))
)))
(assert (= ($generated@@76 $generated@@140) $generated@@63))
(assert (= ($generated@@620 $generated@@140) $generated@@67))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@646 ($generated@@185 $generated@@647) $generated@@648) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@147) (< 0 ($generated ($generated@@85 $generated@@646 $generated@@649)))) ($generated@@328 $generated@@649 $generated@@647 $generated@@648))
 :pattern ( ($generated@@85 $generated@@646 $generated@@649))
))))
 :pattern ( ($generated@@78 $generated@@646 ($generated@@185 $generated@@647) $generated@@648))
)))
(assert (= $generated@@183 ($generated@@266 $generated@@183)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) ($generated@@146 $generated@@147)) (= ($generated@@139 ($generated@@145 $generated@@650) $generated@@140) ($generated@@139 $generated@@650 ($generated@@315 $generated@@45))))
 :pattern ( ($generated@@139 ($generated@@145 $generated@@650) $generated@@140))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@137) (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@296 $generated@@652) (and ($generated@@325 $generated@@651) ($generated@@78 $generated@@651 $generated@@140 $generated@@652)))) ($generated@@78 ($generated@@416 $generated@@651) ($generated@@315 $generated@@45) $generated@@652))
 :pattern ( ($generated@@78 ($generated@@416 $generated@@651) ($generated@@315 $generated@@45) $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@137) (= (type $generated@@654) $generated@@68)) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@296 $generated@@655) (and ($generated@@163 $generated@@653) (exists (($generated@@656 T@U) ) (!  (and (= (type $generated@@656) $generated@@68) ($generated@@78 $generated@@653 ($generated@@164 $generated@@654 $generated@@656) $generated@@655))
 :pattern ( ($generated@@78 $generated@@653 ($generated@@164 $generated@@654 $generated@@656) $generated@@655))
))))) ($generated@@328 ($generated@@171 $generated@@653) $generated@@654 $generated@@655))
 :pattern ( ($generated@@328 ($generated@@171 $generated@@653) $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) $generated@@137) (= (type $generated@@658) $generated@@68)) (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@296 $generated@@659) (and ($generated@@163 $generated@@657) (exists (($generated@@660 T@U) ) (!  (and (= (type $generated@@660) $generated@@68) ($generated@@78 $generated@@657 ($generated@@164 $generated@@660 $generated@@658) $generated@@659))
 :pattern ( ($generated@@78 $generated@@657 ($generated@@164 $generated@@660 $generated@@658) $generated@@659))
))))) ($generated@@328 ($generated@@172 $generated@@657) $generated@@658 $generated@@659))
 :pattern ( ($generated@@328 ($generated@@172 $generated@@657) $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@147) (= (type $generated@@662) $generated@@147)) (= ($generated@@258 ($generated@@266 $generated@@661) ($generated@@266 $generated@@662)) ($generated@@266 ($generated@@258 $generated@@661 $generated@@662))))
 :pattern ( ($generated@@258 ($generated@@266 $generated@@661) ($generated@@266 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) ($generated@@146 $generated@@147)) (= ($generated@@145 ($generated@@266 $generated@@663)) ($generated@@266 ($generated@@145 $generated@@663))))
 :pattern ( ($generated@@145 ($generated@@266 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (= ($generated@@269 ($generated@@266 $generated@@664)) ($generated@@266 ($generated@@269 $generated@@664)))
 :pattern ( ($generated@@269 ($generated@@266 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@151 (type $generated@@665))))
 (=> (and (= (type $generated@@665) ($generated@@146 $generated@@666)) (= ($generated@@148 $generated@@665) 0)) (= $generated@@665 ($generated@@268 $generated@@666))))
 :pattern ( ($generated@@148 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (! (let (($generated@@670 (type $generated@@668)))
 (=> (and (and (= (type $generated@@667) ($generated@@80 $generated@@670 $generated@@2)) (= (type $generated@@669) $generated@@2)) (<= 0 ($generated $generated@@669))) (= ($generated@@366 ($generated@@86 $generated@@667 $generated@@668 $generated@@669)) (+ (- ($generated@@366 $generated@@667) ($generated ($generated@@85 $generated@@667 $generated@@668))) ($generated $generated@@669)))))
 :pattern ( ($generated@@366 ($generated@@86 $generated@@667 $generated@@668 $generated@@669)))
)))
(assert  (=> true (forall (($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@137) (or ($generated@@283 $generated@@671) ($generated@@139 $generated@@671 $generated@@140))) (= ($generated@@141 $generated@@671) ($generated@@325 $generated@@671)))
 :pattern ( ($generated@@141 $generated@@671))
))))
(assert  (=> true (forall (($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@137) (or ($generated@@138 $generated@@672) (and ($generated@@139 $generated@@672 $generated@@140) ($generated@@141 $generated@@672)))) (= ($generated@@136 $generated@@672) $generated@@672))
 :pattern ( ($generated@@136 $generated@@672))
))))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@674) $generated@@2)) ($generated@@78 $generated@@674 $generated@@46 $generated@@673))
 :pattern ( ($generated@@78 $generated@@674 $generated@@46 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@676) $generated@@3)) ($generated@@78 $generated@@676 $generated@@47 $generated@@675))
 :pattern ( ($generated@@78 $generated@@676 $generated@@47 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@678) $generated@@4)) ($generated@@78 $generated@@678 $generated@@44 $generated@@677))
 :pattern ( ($generated@@78 $generated@@678 $generated@@44 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@680) $generated@@271)) ($generated@@78 $generated@@680 $generated@@45 $generated@@679))
 :pattern ( ($generated@@78 $generated@@680 $generated@@45 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@682) $generated@@147)) ($generated@@78 $generated@@682 $generated@@48 $generated@@681))
 :pattern ( ($generated@@78 $generated@@682 $generated@@48 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@146 $generated@@147)) (= (type $generated@@684) $generated@@68)) (= ($generated@@139 $generated@@683 ($generated@@315 $generated@@684)) (forall (($generated@@685 Int) ) (!  (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@148 $generated@@683))) ($generated@@259 ($generated@@144 $generated@@683 $generated@@685) $generated@@684))
 :pattern ( ($generated@@144 $generated@@683 $generated@@685))
))))
 :pattern ( ($generated@@139 $generated@@683 ($generated@@315 $generated@@684)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 Int) ) (!  (=> (= (type $generated@@686) ($generated@@146 $generated@@147)) (=> (and (<= 0 $generated@@687) (< $generated@@687 ($generated@@148 $generated@@686))) (< ($generated@@149 ($generated@@150 $generated@@137 ($generated@@144 $generated@@686 $generated@@687))) ($generated@@616 $generated@@686))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@137 ($generated@@144 $generated@@686 $generated@@687))))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (and (= (type $generated@@688) ($generated@@374 $generated@@147 $generated@@147)) (= (type $generated@@689) $generated@@68)) (= (type $generated@@690) $generated@@68)) ($generated@@139 $generated@@688 ($generated@@483 $generated@@689 $generated@@690))) (and (and ($generated@@139 ($generated@@372 $generated@@688) ($generated@@304 $generated@@689)) ($generated@@139 ($generated@@424 $generated@@688) ($generated@@304 $generated@@690))) ($generated@@139 ($generated@@455 $generated@@688) ($generated@@304 ($generated@@164 $generated@@689 $generated@@690)))))
 :pattern ( ($generated@@139 $generated@@688 ($generated@@483 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@691) ($generated@@392 $generated@@147 $generated@@147)) (= (type $generated@@692) $generated@@68)) (= (type $generated@@693) $generated@@68)) ($generated@@139 $generated@@691 ($generated@@491 $generated@@692 $generated@@693))) (and (and ($generated@@139 ($generated@@390 $generated@@691) ($generated@@309 $generated@@692)) ($generated@@139 ($generated@@435 $generated@@691) ($generated@@309 $generated@@693))) ($generated@@139 ($generated@@463 $generated@@691) ($generated@@309 ($generated@@164 $generated@@692 $generated@@693)))))
 :pattern ( ($generated@@139 $generated@@691 ($generated@@491 $generated@@692 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@2) ($generated@@139 $generated@@694 $generated@@46))
 :pattern ( ($generated@@139 $generated@@694 $generated@@46))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@3) ($generated@@139 $generated@@695 $generated@@47))
 :pattern ( ($generated@@139 $generated@@695 $generated@@47))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@4) ($generated@@139 $generated@@696 $generated@@44))
 :pattern ( ($generated@@139 $generated@@696 $generated@@44))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@271) ($generated@@139 $generated@@697 $generated@@45))
 :pattern ( ($generated@@139 $generated@@697 $generated@@45))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@147) ($generated@@139 $generated@@698 $generated@@48))
 :pattern ( ($generated@@139 $generated@@698 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () Bool)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Bool)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () Bool)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@704) $generated@@137) (= (type $generated@@700) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@701) $generated@@137)) (= (type $generated@@699) $generated@@137)) (= (type $generated@@703) $generated@@137)) (= (type $generated@@706) $generated@@137)) (= (type $generated@@707) ($generated@@192 $generated@@81 $generated@@4))) (= (type $generated@@708) $generated@@81)) (= (type $generated@@710) $generated@@137)) (= (type $generated@@711) ($generated@@192 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@713 true))
(let (($generated@@714  (=> ($generated@@141 $generated@@699) (=> (and (and ($generated@@78 $generated@@699 $generated@@140 $generated@@700) (= (ControlFlow 0 7) (- 0 6))) ($generated@@283 $generated@@699)) (or ($generated@@141 $generated@@699) ($generated@@325 $generated@@699))))))
(let (($generated@@715  (=> (not ($generated@@141 $generated@@701)) (=> (and ($generated@@139 $generated@@699 $generated@@140) ($generated@@78 $generated@@699 $generated@@140 $generated@@700)) (=> (and (and (and ($generated@@78 ($generated@@11 $generated@@702) $generated@@44 $generated@@700) ($generated@@179 $generated@@702)) (and (= $generated@@703 ($generated@@178 $generated@@702)) ($generated@@179 $generated@@702))) (and (and ($generated@@139 $generated@@703 $generated@@140) (= $generated@@699 $generated@@703)) (and ($generated@@78 $generated@@699 $generated@@140 $generated@@700) ($generated@@283 $generated@@699)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@714) (=> (= (ControlFlow 0 9) 8) $generated@@713)))))))
(let (($generated@@716  (=> ($generated@@141 $generated@@701) (=> (and (and ($generated@@78 $generated@@701 $generated@@140 $generated@@700) (= (ControlFlow 0 5) (- 0 4))) ($generated@@283 $generated@@701)) (or ($generated@@141 $generated@@701) ($generated@@325 $generated@@701))))))
(let (($generated@@717  (=> (not ($generated@@141 $generated@@704)) (=> (and ($generated@@139 $generated@@701 $generated@@140) ($generated@@78 $generated@@701 $generated@@140 $generated@@700)) (=> (and (and (and ($generated@@78 ($generated@@11 $generated@@705) $generated@@44 $generated@@700) ($generated@@179 $generated@@705)) (and (= $generated@@706 ($generated@@178 $generated@@705)) ($generated@@179 $generated@@705))) (and (and ($generated@@139 $generated@@706 $generated@@140) (= $generated@@701 $generated@@706)) (and ($generated@@78 $generated@@701 $generated@@140 $generated@@700) ($generated@@283 $generated@@701)))) (and (=> (= (ControlFlow 0 10) 5) $generated@@716) (=> (= (ControlFlow 0 10) 9) $generated@@715)))))))
(let (($generated@@718  (=> ($generated@@141 $generated@@704) (=> (and (and ($generated@@78 $generated@@704 $generated@@140 $generated@@700) (= (ControlFlow 0 3) (- 0 2))) ($generated@@283 $generated@@704)) (or ($generated@@141 $generated@@704) ($generated@@325 $generated@@704))))))
(let (($generated@@719  (=> (= $generated@@707 ($generated@@246 $generated@@708 $generated@@700 $generated@@60 false)) (=> (and ($generated@@139 $generated@@704 $generated@@140) ($generated@@78 $generated@@704 $generated@@140 $generated@@700)) (=> (and (and (and ($generated@@78 ($generated@@11 $generated@@709) $generated@@44 $generated@@700) ($generated@@179 $generated@@709)) (and (= $generated@@710 ($generated@@178 $generated@@709)) ($generated@@179 $generated@@709))) (and (and ($generated@@139 $generated@@710 $generated@@140) (= $generated@@704 $generated@@710)) (and ($generated@@78 $generated@@704 $generated@@140 $generated@@700) ($generated@@283 $generated@@704)))) (and (=> (= (ControlFlow 0 11) 3) $generated@@718) (=> (= (ControlFlow 0 11) 10) $generated@@717)))))))
(let (($generated@@720 true))
(let (($generated@@721  (=> (= $generated@@711 ($generated@@191 $generated@@708 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@720) (=> (= (ControlFlow 0 12) 11) $generated@@719)))))
(let (($generated@@722  (=> (and (and ($generated@@296 $generated@@700) ($generated@@712 $generated@@700)) (and (= 3 $generated@@177) (= (ControlFlow 0 13) 12))) $generated@@721)))
$generated@@722)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 () Int)
(declare-fun $generated@@83 (Bool Bool Bool) T@U)
(declare-fun $generated@@84 (Bool Bool Bool) Bool)
(declare-fun $generated@@85 (Bool Int) Bool)
(declare-fun $generated@@86 (Int) Int)
(declare-fun $generated@@87 (Bool Int) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (Int) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) Bool)
(declare-fun $generated@@117 (Int) T@U)
(declare-fun $generated@@118 (T@T T@T) T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@T) T@T)
(declare-fun $generated@@123 (T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U) T@U)
(declare-fun $generated@@126 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 (T@U) Int)
(declare-fun $generated@@195 (T@U Int) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@199 (T@U) Int)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T T@U) T@U)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@218 (T@U) Int)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (Bool) T@U)
(declare-fun $generated@@235 (Bool) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@248 (T@T T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@302 (T@U T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (Int) T@U)
(declare-fun $generated@@314 () T@T)
(declare-fun $generated@@322 (Bool Bool Bool) T@U)
(declare-fun $generated@@323 (Bool Bool Bool) Bool)
(declare-fun $generated@@324 (T@U) Bool)
(declare-fun $generated@@337 (T@U) Bool)
(declare-fun $generated@@345 (T@U T@U) Bool)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@367 (T@U) Bool)
(declare-fun $generated@@370 (T@U) Int)
(declare-fun $generated@@372 (T@U) Bool)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@377 (T@U T@U T@U) Bool)
(declare-fun $generated@@390 (T@U T@U) Bool)
(declare-fun $generated@@431 (T@U) Int)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@T T@T) T@U)
(declare-fun $generated@@439 (T@T T@T) T@T)
(declare-fun $generated@@440 (T@T) T@T)
(declare-fun $generated@@441 (T@T) T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@T T@T) T@U)
(declare-fun $generated@@457 (T@T T@T) T@T)
(declare-fun $generated@@458 (T@T) T@T)
(declare-fun $generated@@459 (T@T) T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@559 (T@U T@U) T@U)
(declare-fun $generated@@567 (T@U T@U) T@U)
(declare-fun $generated@@575 (Int Int) Int)
(declare-fun $generated@@590 (T@T) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@659 (T@U) Int)
(declare-fun $generated@@661 (T@U) T@U)
(declare-fun $generated@@665 (T@U) T@U)
(declare-fun $generated@@669 (T@U) T@U)
(declare-fun $generated@@673 (T@U) T@U)
(declare-fun $generated@@693 (T@U) Int)
(declare-fun $generated@@707 (T@U) Int)
(declare-fun $generated@@712 (Int Int) Int)
(declare-fun $generated@@715 (T@U) T@U)
(declare-fun $generated@@719 (T@U) T@U)
(declare-fun $generated@@720 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@76 $generated@@81))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@62) $generated@@78)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@75)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@78)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@78)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@79)) (= (type $generated@@72) $generated@@79)) (= (type $generated@@73) $generated@@79)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@95) 11) (forall (($generated@@96 Bool) ($generated@@97 Bool) ($generated@@98 Bool) ) (! (= (type ($generated@@83 $generated@@96 $generated@@97 $generated@@98)) $generated@@95)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@99 Bool) ($generated@@100 Int) ) (! (= (type ($generated@@87 $generated@@99 $generated@@100)) $generated@@95)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ) (! (= (type ($generated@@92 $generated@@101)) $generated@@95)
 :pattern ( ($generated@@92 $generated@@101))
))) (forall (($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(= (type ($generated@@93 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@93 $generated@@102))
))) (forall (($generated@@104 Int) ) (! (= (type ($generated@@94 $generated@@104)) $generated@@95)
 :pattern ( ($generated@@94 $generated@@104))
))))
(assert  (=> (<= 3 $generated@@82) (forall (($generated@@105 Bool) ($generated@@106 Bool) ($generated@@107 Bool) ) (!  (=> (or ($generated@@84 $generated@@105 $generated@@106 $generated@@107) (not (= 3 $generated@@82))) (and (and ($generated@@85 $generated@@105 ($generated@@86 88)) (let (($generated@@108 ($generated@@87 $generated@@105 ($generated@@86 88))))
 (and (and ($generated@@88 $generated@@108) (=> ($generated@@89 $generated@@108) ($generated@@90 $generated@@108))) (=> (not ($generated@@89 $generated@@108)) (and ($generated@@91 $generated@@108) (and ($generated@@85 $generated@@106 ($generated@@86 42)) (let (($generated@@109 ($generated@@87 $generated@@106 ($generated@@86 42))))
 (and (and ($generated@@88 $generated@@109) (=> ($generated@@89 $generated@@109) ($generated@@90 $generated@@109))) (=> (not ($generated@@89 $generated@@109)) (and ($generated@@91 $generated@@109) (and ($generated@@85 $generated@@107 ($generated@@86 33)) (let (($generated@@110 ($generated@@87 $generated@@107 ($generated@@86 33))))
 (and (and ($generated@@88 $generated@@110) (=> ($generated@@89 $generated@@110) ($generated@@90 $generated@@110))) (=> (not ($generated@@89 $generated@@110)) ($generated@@91 $generated@@110))))))))))))))) (= ($generated@@83 $generated@@105 $generated@@106 $generated@@107) (let (($generated@@111 ($generated@@87 $generated@@105 ($generated@@86 88))))
(ite ($generated@@89 $generated@@111) ($generated@@92 $generated@@111) (let (($generated@@112 ($generated@@87 $generated@@106 ($generated@@86 42))))
(ite ($generated@@89 $generated@@112) ($generated@@92 $generated@@112) (let (($generated@@113 ($generated@@87 $generated@@107 ($generated@@86 33))))
(ite ($generated@@89 $generated@@113) ($generated@@92 $generated@@113) ($generated@@93 ($generated@@94 ($generated@@86 100))))))))))))
 :pattern ( ($generated@@83 $generated@@105 $generated@@106 $generated@@107))
))))
(assert (forall (($generated@@115 T@U) ) (! (= (type ($generated@@114 $generated@@115)) $generated@@75)
 :pattern ( ($generated@@114 $generated@@115))
)))
(assert (= ($generated@@114 $generated@@44) $generated@@49))
(assert (= ($generated@@114 $generated@@45) $generated@@50))
(assert (= ($generated@@114 $generated@@46) $generated@@51))
(assert (= ($generated@@114 $generated@@47) $generated@@52))
(assert (= ($generated@@114 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (= ($generated@@1 ($generated@@118 $generated@@127 $generated@@128)) 12)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@121 ($generated@@118 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@118 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@122 ($generated@@118 $generated@@131 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@118 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@122 (type $generated@@133))))
(= (type ($generated@@123 $generated@@133 $generated@@134)) $generated@@135))
 :pattern ( ($generated@@123 $generated@@133 $generated@@134))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 (type $generated@@138)))
(let (($generated@@140 (type $generated@@137)))
(= (type ($generated@@124 $generated@@136 $generated@@137 $generated@@138)) ($generated@@118 $generated@@140 $generated@@139))))
 :pattern ( ($generated@@124 $generated@@136 $generated@@137 $generated@@138))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@122 (type $generated@@141))))
 (=> (= (type $generated@@143) $generated@@144) (= ($generated@@123 ($generated@@124 $generated@@141 $generated@@142 $generated@@143) $generated@@142) $generated@@143)))
 :weight 0
))) (and (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@147 $generated@@148) (= ($generated@@123 ($generated@@124 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@123 $generated@@146 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or true (= ($generated@@123 ($generated@@124 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@123 $generated@@150 $generated@@152)))
 :weight 0
)))) (= ($generated@@1 $generated@@119) 13)) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (let (($generated@@155 ($generated@@77 (type $generated@@154))))
(= (type ($generated@@125 $generated@@153 $generated@@154)) $generated@@155))
 :pattern ( ($generated@@125 $generated@@153 $generated@@154))
))) (= ($generated@@1 $generated@@120) 14)) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@126 $generated@@156 $generated@@157 $generated@@158)) $generated@@120)
 :pattern ( ($generated@@126 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@77 (type $generated@@160))))
 (=> (= (type $generated@@161) $generated@@162) (= ($generated@@125 ($generated@@126 $generated@@159 $generated@@160 $generated@@161) $generated@@160) $generated@@161)))
 :weight 0
))) (and (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@165 $generated@@166) (= ($generated@@125 ($generated@@126 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@125 $generated@@164 $generated@@166)))
 :weight 0
)) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or true (= ($generated@@125 ($generated@@126 $generated@@168 $generated@@169 $generated@@167) $generated@@170) ($generated@@125 $generated@@168 $generated@@170)))
 :weight 0
)))) (forall (($generated@@171 Int) ) (! (= (type ($generated@@117 $generated@@171)) $generated@@74)
 :pattern ( ($generated@@117 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@2) (= (type $generated@@173) ($generated@@118 $generated@@119 $generated@@120))) ($generated@@116 $generated@@172 ($generated@@117 0) $generated@@173))
 :pattern ( ($generated@@116 $generated@@172 ($generated@@117 0) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@176) ($generated@@118 $generated@@119 $generated@@120))) ($generated@@174 $generated@@175 $generated@@176)) (forall (($generated@@177 T@U) ) (!  (=> (and (= (type $generated@@177) $generated@@119) ($generated@@0 ($generated@@125 ($generated@@123 $generated@@175 $generated@@177) $generated@@60))) ($generated@@0 ($generated@@125 ($generated@@123 $generated@@176 $generated@@177) $generated@@60)))
 :pattern ( ($generated@@125 ($generated@@123 $generated@@176 $generated@@177) $generated@@60))
)))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (= (type $generated@@178) $generated@@74))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@2) (= (type $generated@@180) ($generated@@118 $generated@@119 $generated@@120))) ($generated@@116 $generated@@179 $generated@@178 $generated@@180))
 :pattern ( ($generated@@116 $generated@@179 $generated@@178 $generated@@180))
)))
(assert (= (type $generated@@182) $generated@@74))
(assert  (=> true (forall (($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@95) (or ($generated@@90 $generated@@183) (and ($generated@@181 $generated@@183 $generated@@182) ($generated@@89 $generated@@183)))) ($generated@@181 ($generated@@92 $generated@@183) $generated@@182))
 :pattern ( ($generated@@92 $generated@@183))
))))
(assert  (and (forall (($generated@@188 T@U) ) (! (= (type ($generated@@184 $generated@@188)) $generated@@95)
 :pattern ( ($generated@@184 $generated@@188))
)) (= (type $generated@@186) $generated@@74)))
(assert  (=> true (forall (($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@95) (or ($generated@@185 $generated@@189) (and ($generated@@181 $generated@@189 $generated@@186) ($generated@@187 $generated@@189)))) ($generated@@181 ($generated@@184 $generated@@189) $generated@@186))
 :pattern ( ($generated@@184 $generated@@189))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) $generated@@95) (= (type $generated@@194) $generated@@95)) (and ($generated@@191 $generated@@193) ($generated@@191 $generated@@194))) (= ($generated@@190 $generated@@193 $generated@@194) (= ($generated@@192 $generated@@193) ($generated@@192 $generated@@194))))
 :pattern ( ($generated@@190 $generated@@193 $generated@@194) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@190 $generated@@193 $generated@@194) ($generated@@191 $generated@@194))
)))
(assert  (and (and (and (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@203)) 15)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@197 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@197 $generated@@204))
))) (= ($generated@@1 $generated@@198) 16)) (forall (($generated@@205 T@U) ($generated@@206 Int) ) (! (let (($generated@@207 ($generated@@202 (type $generated@@205))))
(= (type ($generated@@195 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@195 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ) (! (= (type ($generated@@196 $generated@@208)) $generated@@95)
 :pattern ( ($generated@@196 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@U) ) (! (= (type ($generated@@201 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@201 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 Int) ) (!  (=> (= (type $generated@@211) ($generated@@197 $generated@@198)) (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@199 $generated@@211))) (< ($generated@@200 ($generated@@201 $generated@@95 ($generated@@195 $generated@@211 $generated@@212))) ($generated@@200 ($generated@@196 $generated@@211)))))
 :pattern ( ($generated@@195 $generated@@211 $generated@@212) ($generated@@196 $generated@@211))
)))
(assert (forall (($generated@@214 T@U) ) (! (= (type ($generated@@213 $generated@@214)) $generated@@95)
 :pattern ( ($generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 Int) ) (!  (=> (= (type $generated@@215) ($generated@@197 $generated@@198)) (=> (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@199 $generated@@215))) (< ($generated@@200 ($generated@@201 $generated@@95 ($generated@@195 $generated@@215 $generated@@216))) ($generated@@200 ($generated@@213 $generated@@215)))))
 :pattern ( ($generated@@195 $generated@@215 $generated@@216) ($generated@@213 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@2) ($generated@@181 $generated@@217 ($generated@@117 0)))
 :pattern ( ($generated@@181 $generated@@217 ($generated@@117 0)))
)))
(assert  (=> true (forall (($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@95) (or ($generated@@91 ($generated@@93 $generated@@219)) (and ($generated@@181 $generated@@219 $generated@@182) (not ($generated@@0 ($generated@@93 ($generated@@11 ($generated@@89 ($generated@@93 $generated@@219))))))))) (= ($generated@@218 ($generated@@93 $generated@@219)) ($generated@@86 ($generated@@192 ($generated@@93 $generated@@219)))))
 :weight 3
 :pattern ( ($generated@@218 ($generated@@93 $generated@@219)))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223)) $generated@@74)
 :pattern ( ($generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@74) (= (type $generated@@225) $generated@@74)) (= (type $generated@@226) $generated@@95)) ($generated@@181 $generated@@226 ($generated@@221 $generated@@224 $generated@@225))) ($generated@@220 $generated@@226))
 :pattern ( ($generated@@220 $generated@@226) ($generated@@181 $generated@@226 ($generated@@221 $generated@@224 $generated@@225)))
)))
(assert  (and (forall (($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@230)) $generated@@198)
 :pattern ( ($generated@@228 $generated@@230))
)) (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@198)
 :pattern ( ($generated@@229 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (= (type $generated@@232) $generated@@95) (= (type $generated@@233) $generated@@95)) true) (= ($generated@@227 $generated@@232 $generated@@233)  (and (= ($generated@@228 $generated@@232) ($generated@@228 $generated@@233)) (= ($generated@@229 $generated@@232) ($generated@@229 $generated@@233)))))
 :pattern ( ($generated@@227 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@236 Bool) ) (! (= (type ($generated@@234 $generated@@236)) $generated@@95)
 :pattern ( ($generated@@234 $generated@@236))
)))
(assert  (=> (<= 2 $generated@@82) (forall (($generated@@237 Bool) ) (!  (=> (or ($generated@@235 $generated@@237) (not (= 2 $generated@@82))) ($generated@@181 ($generated@@234 $generated@@237) $generated@@186))
 :pattern ( ($generated@@234 $generated@@237))
))))
(assert  (and (forall (($generated@@240 T@U) ) (! (= (type ($generated@@238 $generated@@240)) $generated@@78)
 :pattern ( ($generated@@238 $generated@@240))
)) (= (type $generated@@239) $generated@@95)))
(assert (= ($generated@@238 $generated@@239) $generated@@68))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@241 $generated@@243)) $generated@@74)
 :pattern ( ($generated@@241 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (= (type $generated@@244) ($generated@@118 $generated@@198 $generated@@2)) (= (type $generated@@245) $generated@@74)) ($generated@@181 $generated@@244 ($generated@@241 $generated@@245))) ($generated@@242 $generated@@244))
 :pattern ( ($generated@@181 $generated@@244 ($generated@@241 $generated@@245)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@248 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@248 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@250 ($generated@@248 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@248 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@246 $generated@@258 $generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@246 $generated@@258 $generated@@259 $generated@@260))
))) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(let (($generated@@267 (type $generated@@263)))
(= (type ($generated@@251 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@248 $generated@@267 $generated@@266))))
 :pattern ( ($generated@@251 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
))) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@250 (type $generated@@268))))
 (=> (= (type $generated@@271) $generated@@272) (= ($generated@@246 ($generated@@251 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@269 $generated@@270) $generated@@271)))
 :weight 0
))) (and (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (or (= $generated@@275 $generated@@277) (= ($generated@@246 ($generated@@251 $generated@@274 $generated@@275 $generated@@276 $generated@@273) $generated@@277 $generated@@278) ($generated@@246 $generated@@274 $generated@@277 $generated@@278)))
 :weight 0
)) (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (or (= $generated@@282 $generated@@284) (= ($generated@@246 ($generated@@251 $generated@@280 $generated@@281 $generated@@282 $generated@@279) $generated@@283 $generated@@284) ($generated@@246 $generated@@280 $generated@@283 $generated@@284)))
 :weight 0
))) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or true (= ($generated@@246 ($generated@@251 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@246 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)))) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 Bool) ) (! (= (type ($generated@@247 $generated@@291 $generated@@292 $generated@@293 $generated@@294)) ($generated@@248 $generated@@119 $generated@@4))
 :pattern ( ($generated@@247 $generated@@291 $generated@@292 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 Bool) ($generated@@299 T@U) ($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@77 (type $generated@@300))))
 (=> (and (and (and (and (= (type $generated@@295) $generated@@119) (= (type $generated@@296) ($generated@@118 $generated@@119 $generated@@120))) (= (type $generated@@297) ($generated@@76 $generated@@4))) (= (type $generated@@299) $generated@@119)) (= (type $generated@@300) ($generated@@76 $generated@@301))) (= ($generated@@0 ($generated@@246 ($generated@@247 $generated@@295 $generated@@296 $generated@@297 $generated@@298) $generated@@299 $generated@@300))  (=> (and (not (= $generated@@299 $generated@@295)) ($generated@@0 ($generated@@125 ($generated@@123 $generated@@296 $generated@@299) $generated@@297))) $generated@@298))))
 :pattern ( ($generated@@246 ($generated@@247 $generated@@295 $generated@@296 $generated@@297 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (= (type ($generated@@302 $generated@@304 $generated@@305)) $generated@@95)
 :pattern ( ($generated@@302 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (= (type $generated@@306) $generated@@74) (= (type $generated@@307) $generated@@74)) (= (type $generated@@308) $generated@@198)) (= (type $generated@@309) $generated@@198)) (= ($generated@@181 ($generated@@302 $generated@@308 $generated@@309) ($generated@@221 $generated@@306 $generated@@307))  (and ($generated@@303 $generated@@308 $generated@@306) ($generated@@303 $generated@@309 $generated@@307))))
 :pattern ( ($generated@@181 ($generated@@302 $generated@@308 $generated@@309) ($generated@@221 $generated@@306 $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (! (let (($generated@@317 (type $generated@@316)))
(= (type ($generated@@310 $generated@@315 $generated@@316)) ($generated@@197 $generated@@317)))
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
)) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@311 $generated@@318)) ($generated@@197 $generated@@318))
 :pattern ( ($generated@@311 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (= (type ($generated@@312 $generated@@319)) $generated@@198)
 :pattern ( ($generated@@312 $generated@@319))
))) (= ($generated@@1 $generated@@314) 18)) (forall (($generated@@320 Int) ) (! (= (type ($generated@@313 $generated@@320)) $generated@@314)
 :pattern ( ($generated@@313 $generated@@320))
))))
(assert  (=> (<= 2 $generated@@82) (forall (($generated@@321 Bool) ) (!  (=> (or ($generated@@235 $generated@@321) (not (= 2 $generated@@82))) (= ($generated@@234 $generated@@321) (ite $generated@@321 $generated@@239 ($generated@@213 ($generated@@93 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@311 $generated@@198) ($generated@@312 ($generated@@313 118))) ($generated@@312 ($generated@@313 111))) ($generated@@312 ($generated@@313 105))) ($generated@@312 ($generated@@313 100))) ($generated@@312 ($generated@@313 32))) ($generated@@312 ($generated@@313 98))) ($generated@@312 ($generated@@313 97))) ($generated@@312 ($generated@@313 100))) ($generated@@312 ($generated@@313 32))) ($generated@@312 ($generated@@313 108))) ($generated@@312 ($generated@@313 117))) ($generated@@312 ($generated@@313 99))) ($generated@@312 ($generated@@313 107))))))))
 :pattern ( ($generated@@234 $generated@@321))
))))
(assert ($generated@@181 $generated@@239 $generated@@186))
(assert (forall (($generated@@325 Bool) ($generated@@326 Bool) ($generated@@327 Bool) ) (! (= (type ($generated@@322 $generated@@325 $generated@@326 $generated@@327)) $generated@@95)
 :pattern ( ($generated@@322 $generated@@325 $generated@@326 $generated@@327))
)))
(assert  (=> (<= 3 $generated@@82) (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (= (type $generated@@328) $generated@@4) (= (type $generated@@329) $generated@@4)) (= (type $generated@@330) $generated@@4)) (or ($generated@@323 ($generated@@0 ($generated@@93 $generated@@328)) ($generated@@0 ($generated@@93 $generated@@329)) ($generated@@0 ($generated@@93 $generated@@330))) (not (= 3 $generated@@82)))) (and (and ($generated@@235 ($generated@@0 ($generated@@93 $generated@@328))) (let (($generated@@331 ($generated@@93 ($generated@@234 ($generated@@0 ($generated@@93 $generated@@328))))))
 (and (and ($generated@@324 $generated@@331) (=> ($generated@@187 $generated@@331) ($generated@@185 $generated@@331))) (=> (not ($generated@@187 $generated@@331)) (and ($generated@@235 ($generated@@0 ($generated@@93 $generated@@329))) (let (($generated@@332 ($generated@@93 ($generated@@234 ($generated@@0 ($generated@@93 $generated@@329))))))
 (and (and ($generated@@324 $generated@@332) (=> ($generated@@187 $generated@@332) ($generated@@185 $generated@@332))) (=> (not ($generated@@187 $generated@@332)) (and ($generated@@235 ($generated@@0 ($generated@@93 $generated@@330))) (let (($generated@@333 ($generated@@93 ($generated@@234 ($generated@@0 ($generated@@93 $generated@@330))))))
 (and ($generated@@324 $generated@@333) (=> ($generated@@187 $generated@@333) ($generated@@185 $generated@@333))))))))))))) (= ($generated@@322 ($generated@@0 ($generated@@93 $generated@@328)) ($generated@@0 ($generated@@93 $generated@@329)) ($generated@@0 ($generated@@93 $generated@@330))) (let (($generated@@334 ($generated@@93 ($generated@@234 ($generated@@0 ($generated@@93 $generated@@328))))))
(ite ($generated@@187 $generated@@334) ($generated@@184 $generated@@334) (let (($generated@@335 ($generated@@93 ($generated@@234 ($generated@@0 ($generated@@93 $generated@@329))))))
(ite ($generated@@187 $generated@@335) ($generated@@184 $generated@@335) (let (($generated@@336 ($generated@@93 ($generated@@234 ($generated@@0 ($generated@@93 $generated@@330))))))
(ite ($generated@@187 $generated@@336) ($generated@@184 $generated@@336) $generated@@239)))))))))
 :weight 3
 :pattern ( ($generated@@322 ($generated@@0 ($generated@@93 $generated@@328)) ($generated@@0 ($generated@@93 $generated@@329)) ($generated@@0 ($generated@@93 $generated@@330))))
))))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@118 $generated@@119 $generated@@120)) ($generated@@337 $generated@@338)) ($generated@@116 $generated@@239 $generated@@186 $generated@@338))
 :pattern ( ($generated@@116 $generated@@239 $generated@@186 $generated@@338))
)))
(assert  (=> true (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@95) (or ($generated@@88 $generated@@339) ($generated@@181 $generated@@339 $generated@@182))) true)
 :pattern ( ($generated@@89 $generated@@339))
))))
(assert  (=> true (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@95) (or ($generated@@324 $generated@@340) ($generated@@181 $generated@@340 $generated@@186))) true)
 :pattern ( ($generated@@187 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@95) (= (type $generated@@342) $generated@@95)) (= ($generated@@227 $generated@@341 $generated@@342) (= $generated@@341 $generated@@342)))
 :pattern ( ($generated@@227 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@95) (= (type $generated@@344) $generated@@95)) (= ($generated@@190 $generated@@343 $generated@@344) (= $generated@@343 $generated@@344)))
 :pattern ( ($generated@@190 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@95) (= (type $generated@@347) $generated@@95)) (= ($generated@@345 $generated@@346 $generated@@347) (= $generated@@346 $generated@@347)))
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert  (=> (<= 2 $generated@@82) (forall (($generated@@348 T@U) ($generated@@349 Int) ) (!  (=> (and (= (type $generated@@348) $generated@@4) (or ($generated@@85 ($generated@@0 ($generated@@93 $generated@@348)) ($generated@@86 $generated@@349)) (and (not (= 2 $generated@@82)) (<= ($generated@@86 0) $generated@@349)))) (= ($generated@@87 ($generated@@0 ($generated@@93 $generated@@348)) ($generated@@86 $generated@@349)) (ite ($generated@@0 $generated@@348) ($generated@@94 ($generated@@86 $generated@@349)) ($generated@@196 ($generated@@93 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@311 $generated@@198) ($generated@@312 ($generated@@313 98))) ($generated@@312 ($generated@@313 97))) ($generated@@312 ($generated@@313 100))) ($generated@@312 ($generated@@313 32))) ($generated@@312 ($generated@@313 108))) ($generated@@312 ($generated@@313 117))) ($generated@@312 ($generated@@313 99))) ($generated@@312 ($generated@@313 107))))))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@0 ($generated@@93 $generated@@348)) ($generated@@86 $generated@@349)))
))))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@74)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@118 $generated@@198 $generated@@4)) (= (type $generated@@353) $generated@@74)) (= ($generated@@181 $generated@@352 ($generated@@350 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@198) ($generated@@0 ($generated@@123 $generated@@352 $generated@@354))) ($generated@@303 $generated@@354 $generated@@353))
 :pattern ( ($generated@@123 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@181 $generated@@352 ($generated@@350 $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@74)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@118 $generated@@198 $generated@@4)) (= (type $generated@@358) $generated@@74)) (= ($generated@@181 $generated@@357 ($generated@@355 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@198) ($generated@@0 ($generated@@123 $generated@@357 $generated@@359))) ($generated@@303 $generated@@359 $generated@@358))
 :pattern ( ($generated@@123 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@181 $generated@@357 ($generated@@355 $generated@@358)))
)))
(assert (forall (($generated@@360 Int) ) (! (= ($generated@@86 $generated@@360) $generated@@360)
 :pattern ( ($generated@@86 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (= ($generated@@93 $generated@@361) $generated@@361)
 :pattern ( ($generated@@93 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@74)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (and (= (type $generated@@364) ($generated@@197 $generated@@198)) (= (type $generated@@365) $generated@@198)) (= (type $generated@@366) $generated@@74)) (and ($generated@@181 $generated@@364 ($generated@@362 $generated@@366)) ($generated@@303 $generated@@365 $generated@@366))) ($generated@@181 ($generated@@310 $generated@@364 $generated@@365) ($generated@@362 $generated@@366)))
 :pattern ( ($generated@@181 ($generated@@310 $generated@@364 $generated@@365) ($generated@@362 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@368) $generated@@95) (= (type $generated@@369) $generated@@95)) (and ($generated@@367 $generated@@368) ($generated@@367 $generated@@369))) (= ($generated@@345 $generated@@368 $generated@@369) true))
 :pattern ( ($generated@@345 $generated@@368 $generated@@369) ($generated@@367 $generated@@368))
 :pattern ( ($generated@@345 $generated@@368 $generated@@369) ($generated@@367 $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (!  (=> (and (<= 0 $generated@@371) (< $generated@@371 65536)) (= ($generated@@370 ($generated@@313 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@313 $generated@@371))
)))
(assert  (=> true (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@95) (or ($generated@@88 ($generated@@93 $generated@@373)) ($generated@@181 $generated@@373 $generated@@182))) (= ($generated@@89 ($generated@@93 $generated@@373)) ($generated@@0 ($generated@@93 ($generated@@11 ($generated@@372 ($generated@@93 $generated@@373)))))))
 :weight 3
 :pattern ( ($generated@@89 ($generated@@93 $generated@@373)))
))))
(assert  (=> true (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@95) (or ($generated@@324 ($generated@@93 $generated@@375)) ($generated@@181 $generated@@375 $generated@@186))) (= ($generated@@187 ($generated@@93 $generated@@375)) ($generated@@0 ($generated@@93 ($generated@@11 ($generated@@374 ($generated@@93 $generated@@375)))))))
 :weight 3
 :pattern ( ($generated@@187 ($generated@@93 $generated@@375)))
))))
(assert  (=> (<= 2 $generated@@82) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@4) (or ($generated@@235 ($generated@@0 ($generated@@93 $generated@@376))) (not (= 2 $generated@@82)))) (= ($generated@@234 ($generated@@0 ($generated@@93 $generated@@376))) (ite ($generated@@0 $generated@@376) $generated@@239 ($generated@@213 ($generated@@93 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@311 $generated@@198) ($generated@@312 ($generated@@313 118))) ($generated@@312 ($generated@@313 111))) ($generated@@312 ($generated@@313 105))) ($generated@@312 ($generated@@313 100))) ($generated@@312 ($generated@@313 32))) ($generated@@312 ($generated@@313 98))) ($generated@@312 ($generated@@313 97))) ($generated@@312 ($generated@@313 100))) ($generated@@312 ($generated@@313 32))) ($generated@@312 ($generated@@313 108))) ($generated@@312 ($generated@@313 117))) ($generated@@312 ($generated@@313 99))) ($generated@@312 ($generated@@313 107))))))))
 :weight 3
 :pattern ( ($generated@@234 ($generated@@0 ($generated@@93 $generated@@376))))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@378) $generated@@74) (= (type $generated@@379) $generated@@74)) (= (type $generated@@380) $generated@@198)) (= (type $generated@@381) $generated@@198)) (= (type $generated@@382) ($generated@@118 $generated@@119 $generated@@120))) ($generated@@337 $generated@@382)) (= ($generated@@116 ($generated@@302 $generated@@380 $generated@@381) ($generated@@221 $generated@@378 $generated@@379) $generated@@382)  (and ($generated@@377 $generated@@380 $generated@@378 $generated@@382) ($generated@@377 $generated@@381 $generated@@379 $generated@@382))))
 :pattern ( ($generated@@116 ($generated@@302 $generated@@380 $generated@@381) ($generated@@221 $generated@@378 $generated@@379) $generated@@382))
)))
(assert  (=> true (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@95) (or ($generated@@90 ($generated@@93 $generated@@383)) (and ($generated@@181 $generated@@383 $generated@@182) ($generated@@0 ($generated@@93 ($generated@@11 ($generated@@89 ($generated@@93 $generated@@383)))))))) (= ($generated@@92 ($generated@@93 $generated@@383)) ($generated@@93 $generated@@383)))
 :weight 3
 :pattern ( ($generated@@92 ($generated@@93 $generated@@383)))
))))
(assert  (=> true (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@95) (or ($generated@@185 ($generated@@93 $generated@@384)) (and ($generated@@181 $generated@@384 $generated@@186) ($generated@@0 ($generated@@93 ($generated@@11 ($generated@@187 ($generated@@93 $generated@@384)))))))) (= ($generated@@184 ($generated@@93 $generated@@384)) ($generated@@93 $generated@@384)))
 :weight 3
 :pattern ( ($generated@@184 ($generated@@93 $generated@@384)))
))))
(assert (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@95) (= ($generated@@220 $generated@@385) (= ($generated@@238 $generated@@385) $generated@@62)))
 :pattern ( ($generated@@220 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@95) (= ($generated@@191 $generated@@386) (= ($generated@@238 $generated@@386) $generated@@66)))
 :pattern ( ($generated@@191 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@95) (= ($generated@@372 $generated@@387) (= ($generated@@238 $generated@@387) $generated@@67)))
 :pattern ( ($generated@@372 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@95) (= ($generated@@367 $generated@@388) (= ($generated@@238 $generated@@388) $generated@@68)))
 :pattern ( ($generated@@367 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@95) (= ($generated@@374 $generated@@389) (= ($generated@@238 $generated@@389) $generated@@69)))
 :pattern ( ($generated@@374 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@202 (type $generated@@391))))
 (=> (and (= (type $generated@@391) ($generated@@197 $generated@@393)) (= (type $generated@@392) ($generated@@197 $generated@@393))) (= ($generated@@390 $generated@@391 $generated@@392)  (and (= ($generated@@199 $generated@@391) ($generated@@199 $generated@@392)) (forall (($generated@@394 Int) ) (!  (=> (and (<= 0 $generated@@394) (< $generated@@394 ($generated@@199 $generated@@391))) (= ($generated@@195 $generated@@391 $generated@@394) ($generated@@195 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@195 $generated@@391 $generated@@394))
 :pattern ( ($generated@@195 $generated@@392 $generated@@394))
))))))
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@95) ($generated@@220 $generated@@395)) (exists (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (and (and (= (type $generated@@396) $generated@@198) (= (type $generated@@397) $generated@@198)) (= $generated@@395 ($generated@@302 $generated@@396 $generated@@397)))
 :no-pattern (type $generated@@396)
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
)))
 :pattern ( ($generated@@220 $generated@@395))
)))
(assert (forall (($generated@@398 T@T) ) (! (= ($generated@@199 ($generated@@311 $generated@@398)) 0)
 :pattern ( ($generated@@311 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@95) ($generated@@367 $generated@@399)) (= $generated@@399 $generated@@239))
 :pattern ( ($generated@@367 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@95) ($generated@@191 $generated@@400)) (exists (($generated@@401 Int) ) (= $generated@@400 ($generated@@94 $generated@@401))))
 :pattern ( ($generated@@191 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@95) ($generated@@372 $generated@@402)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) ($generated@@197 $generated@@198)) (= $generated@@402 ($generated@@196 $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
 :pattern ( ($generated@@372 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@95) ($generated@@374 $generated@@404)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) ($generated@@197 $generated@@198)) (= $generated@@404 ($generated@@213 $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
)))
 :pattern ( ($generated@@374 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@2) (= ($generated@@181 $generated@@406 $generated@@178) (<= ($generated@@86 0) ($generated $generated@@406))))
 :pattern ( ($generated@@181 $generated@@406 $generated@@178))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
 (=> (= (type $generated@@407) ($generated@@197 $generated@@409)) (= ($generated@@199 ($generated@@310 $generated@@407 $generated@@408)) (+ 1 ($generated@@199 $generated@@407)))))
 :pattern ( ($generated@@310 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@314) (and (and (= ($generated@@313 ($generated@@370 $generated@@410)) $generated@@410) (<= 0 ($generated@@370 $generated@@410))) (< ($generated@@370 $generated@@410) 65536)))
 :pattern ( ($generated@@370 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@74) (= (type $generated@@413) ($generated@@118 $generated@@119 $generated@@120))) (= ($generated@@377 ($generated@@312 $generated@@411) $generated@@412 $generated@@413) ($generated@@116 $generated@@411 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@377 ($generated@@312 $generated@@411) $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@414) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@415) ($generated@@118 $generated@@119 $generated@@120))) (= (type $generated@@416) $generated@@198)) (= (type $generated@@417) $generated@@74)) ($generated@@174 $generated@@414 $generated@@415)) ($generated@@377 $generated@@416 $generated@@417 $generated@@414)) ($generated@@377 $generated@@416 $generated@@417 $generated@@415))
 :pattern ( ($generated@@174 $generated@@414 $generated@@415) ($generated@@377 $generated@@416 $generated@@417 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@418) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@419) ($generated@@118 $generated@@119 $generated@@120))) (= (type $generated@@421) $generated@@74)) ($generated@@174 $generated@@418 $generated@@419)) ($generated@@116 $generated@@420 $generated@@421 $generated@@418)) ($generated@@116 $generated@@420 $generated@@421 $generated@@419))
 :pattern ( ($generated@@174 $generated@@418 $generated@@419) ($generated@@116 $generated@@420 $generated@@421 $generated@@418))
)))
(assert  (=> (<= 3 $generated@@82) (forall (($generated@@422 Bool) ($generated@@423 Bool) ($generated@@424 Bool) ) (!  (=> (or ($generated@@323 $generated@@422 $generated@@423 $generated@@424) (not (= 3 $generated@@82))) (and (and ($generated@@235 $generated@@422) (let (($generated@@425 ($generated@@234 $generated@@422)))
 (and (and ($generated@@324 $generated@@425) (=> ($generated@@187 $generated@@425) ($generated@@185 $generated@@425))) (=> (not ($generated@@187 $generated@@425)) (and ($generated@@235 $generated@@423) (let (($generated@@426 ($generated@@234 $generated@@423)))
 (and (and ($generated@@324 $generated@@426) (=> ($generated@@187 $generated@@426) ($generated@@185 $generated@@426))) (=> (not ($generated@@187 $generated@@426)) (and ($generated@@235 $generated@@424) (let (($generated@@427 ($generated@@234 $generated@@424)))
 (and ($generated@@324 $generated@@427) (=> ($generated@@187 $generated@@427) ($generated@@185 $generated@@427))))))))))))) (= ($generated@@322 $generated@@422 $generated@@423 $generated@@424) (let (($generated@@428 ($generated@@234 $generated@@422)))
(ite ($generated@@187 $generated@@428) ($generated@@184 $generated@@428) (let (($generated@@429 ($generated@@234 $generated@@423)))
(ite ($generated@@187 $generated@@429) ($generated@@184 $generated@@429) (let (($generated@@430 ($generated@@234 $generated@@424)))
(ite ($generated@@187 $generated@@430) ($generated@@184 $generated@@430) $generated@@239)))))))))
 :pattern ( ($generated@@322 $generated@@422 $generated@@423 $generated@@424))
))))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@118 $generated@@433 $generated@@2))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@121 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@118 $generated@@435 $generated@@2)) (and (= (= ($generated@@431 $generated@@434) 0) (= $generated@@434 ($generated@@432 $generated@@435))) (=> (not (= ($generated@@431 $generated@@434) 0)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (< 0 ($generated ($generated@@123 $generated@@434 $generated@@436))))
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert  (and (and (and (and (forall (($generated@@442 T@T) ($generated@@443 T@T) ) (= ($generated@@1 ($generated@@439 $generated@@442 $generated@@443)) 19)) (forall (($generated@@444 T@T) ($generated@@445 T@T) ) (! (= ($generated@@440 ($generated@@439 $generated@@444 $generated@@445)) $generated@@444)
 :pattern ( ($generated@@439 $generated@@444 $generated@@445))
))) (forall (($generated@@446 T@T) ($generated@@447 T@T) ) (! (= ($generated@@441 ($generated@@439 $generated@@446 $generated@@447)) $generated@@447)
 :pattern ( ($generated@@439 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@440 (type $generated@@448))))
(= (type ($generated@@437 $generated@@448)) ($generated@@118 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@437 $generated@@448))
))) (forall (($generated@@450 T@T) ($generated@@451 T@T) ) (! (= (type ($generated@@438 $generated@@450 $generated@@451)) ($generated@@439 $generated@@450 $generated@@451))
 :pattern ( ($generated@@438 $generated@@450 $generated@@451))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@T) ) (! (let (($generated@@454 (type $generated@@452)))
 (not ($generated@@0 ($generated@@123 ($generated@@437 ($generated@@438 $generated@@454 $generated@@453)) $generated@@452))))
 :pattern ( (let (($generated@@454 (type $generated@@452)))
($generated@@123 ($generated@@437 ($generated@@438 $generated@@454 $generated@@453)) $generated@@452)))
)))
(assert  (and (and (and (and (forall (($generated@@460 T@T) ($generated@@461 T@T) ) (= ($generated@@1 ($generated@@457 $generated@@460 $generated@@461)) 20)) (forall (($generated@@462 T@T) ($generated@@463 T@T) ) (! (= ($generated@@458 ($generated@@457 $generated@@462 $generated@@463)) $generated@@462)
 :pattern ( ($generated@@457 $generated@@462 $generated@@463))
))) (forall (($generated@@464 T@T) ($generated@@465 T@T) ) (! (= ($generated@@459 ($generated@@457 $generated@@464 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@457 $generated@@464 $generated@@465))
))) (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@458 (type $generated@@466))))
(= (type ($generated@@455 $generated@@466)) ($generated@@118 $generated@@467 $generated@@4)))
 :pattern ( ($generated@@455 $generated@@466))
))) (forall (($generated@@468 T@T) ($generated@@469 T@T) ) (! (= (type ($generated@@456 $generated@@468 $generated@@469)) ($generated@@457 $generated@@468 $generated@@469))
 :pattern ( ($generated@@456 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@T) ) (! (let (($generated@@472 (type $generated@@470)))
 (not ($generated@@0 ($generated@@123 ($generated@@455 ($generated@@456 $generated@@472 $generated@@471)) $generated@@470))))
 :pattern ( (let (($generated@@472 (type $generated@@470)))
($generated@@123 ($generated@@455 ($generated@@456 $generated@@472 $generated@@471)) $generated@@470)))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@121 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@118 $generated@@474 $generated@@2)) (= ($generated@@242 $generated@@473) (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@474) (and (<= 0 ($generated ($generated@@123 $generated@@473 $generated@@475))) (<= ($generated ($generated@@123 $generated@@473 $generated@@475)) ($generated@@431 $generated@@473))))
 :pattern ( ($generated@@123 $generated@@473 $generated@@475))
)))))
 :pattern ( ($generated@@242 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@198) ($generated@@303 $generated@@476 $generated@@178)) (and (= ($generated@@312 ($generated@@201 $generated@@2 $generated@@476)) $generated@@476) ($generated@@181 ($generated@@201 $generated@@2 $generated@@476) $generated@@178)))
 :pattern ( ($generated@@303 $generated@@476 $generated@@178))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@198) ($generated@@303 $generated@@477 $generated@@182)) (and (= ($generated@@312 ($generated@@201 $generated@@95 $generated@@477)) $generated@@477) ($generated@@181 ($generated@@201 $generated@@95 $generated@@477) $generated@@182)))
 :pattern ( ($generated@@303 $generated@@477 $generated@@182))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@198) ($generated@@303 $generated@@478 $generated@@186)) (and (= ($generated@@312 ($generated@@201 $generated@@95 $generated@@478)) $generated@@478) ($generated@@181 ($generated@@201 $generated@@95 $generated@@478) $generated@@186)))
 :pattern ( ($generated@@303 $generated@@478 $generated@@186))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@181 ($generated@@94 $generated@@479) $generated@@182) ($generated@@181 ($generated@@8 $generated@@479) $generated@@178))
 :pattern ( ($generated@@181 ($generated@@94 $generated@@479) $generated@@182))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
 (=> (= (type $generated@@480) ($generated@@197 $generated@@483)) (and (=> (= $generated@@481 ($generated@@199 $generated@@480)) (= ($generated@@195 ($generated@@310 $generated@@480 $generated@@482) $generated@@481) $generated@@482)) (=> (not (= $generated@@481 ($generated@@199 $generated@@480))) (= ($generated@@195 ($generated@@310 $generated@@480 $generated@@482) $generated@@481) ($generated@@195 $generated@@480 $generated@@481))))))
 :pattern ( ($generated@@195 ($generated@@310 $generated@@480 $generated@@482) $generated@@481))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) ($generated@@197 $generated@@198))
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@486) $generated@@95) (= (type $generated@@487) $generated@@95)) (and ($generated@@372 $generated@@486) ($generated@@372 $generated@@487))) (= ($generated@@190 $generated@@486 $generated@@487) ($generated@@390 ($generated@@484 $generated@@486) ($generated@@484 $generated@@487))))
 :pattern ( ($generated@@190 $generated@@486 $generated@@487) ($generated@@372 $generated@@486))
 :pattern ( ($generated@@190 $generated@@486 $generated@@487) ($generated@@372 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) ($generated@@197 $generated@@198))
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@490) $generated@@95) (= (type $generated@@491) $generated@@95)) (and ($generated@@374 $generated@@490) ($generated@@374 $generated@@491))) (= ($generated@@345 $generated@@490 $generated@@491) ($generated@@390 ($generated@@488 $generated@@490) ($generated@@488 $generated@@491))))
 :pattern ( ($generated@@345 $generated@@490 $generated@@491) ($generated@@374 $generated@@490))
 :pattern ( ($generated@@345 $generated@@490 $generated@@491) ($generated@@374 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@441 (type $generated@@492))))
(let (($generated@@494 ($generated@@440 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@439 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@438 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ) (!  (and (= (type $generated@@495) $generated@@494) ($generated@@0 ($generated@@123 ($generated@@437 $generated@@492) $generated@@495)))
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@437 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@441 (type $generated@@497))))
(= (type ($generated@@496 $generated@@497)) ($generated@@118 $generated@@498 $generated@@4)))
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@441 (type $generated@@499))))
(let (($generated@@501 ($generated@@440 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@439 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@438 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ) (!  (and (= (type $generated@@502) $generated@@500) ($generated@@0 ($generated@@123 ($generated@@496 $generated@@499) $generated@@502)))
 :no-pattern (type $generated@@502)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
))))))
 :pattern ( ($generated@@496 $generated@@499))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@459 (type $generated@@503))))
(let (($generated@@505 ($generated@@458 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@457 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@456 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ) (!  (and (= (type $generated@@506) $generated@@505) ($generated@@0 ($generated@@123 ($generated@@455 $generated@@503) $generated@@506)))
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@455 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@459 (type $generated@@508))))
(= (type ($generated@@507 $generated@@508)) ($generated@@118 $generated@@509 $generated@@4)))
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@459 (type $generated@@510))))
(let (($generated@@512 ($generated@@458 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@457 $generated@@512 $generated@@511)) (or (= $generated@@510 ($generated@@456 $generated@@512 $generated@@511)) (exists (($generated@@513 T@U) ) (!  (and (= (type $generated@@513) $generated@@511) ($generated@@0 ($generated@@123 ($generated@@507 $generated@@510) $generated@@513)))
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@507 $generated@@510))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) ($generated@@118 $generated@@198 $generated@@2)) (= (type $generated@@515) $generated@@74)) (= ($generated@@181 $generated@@514 ($generated@@241 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@198) (< 0 ($generated ($generated@@123 $generated@@514 $generated@@516)))) ($generated@@303 $generated@@516 $generated@@515))
 :pattern ( ($generated@@123 $generated@@514 $generated@@516))
))))
 :pattern ( ($generated@@181 $generated@@514 ($generated@@241 $generated@@515)))
)))
(assert  (=> (<= 2 $generated@@82) (forall (($generated@@517 Bool) ($generated@@518 Int) ) (!  (=> (or ($generated@@85 $generated@@517 $generated@@518) (and (not (= 2 $generated@@82)) (<= ($generated@@86 0) $generated@@518))) (= ($generated@@87 $generated@@517 $generated@@518) (ite $generated@@517 ($generated@@94 $generated@@518) ($generated@@196 ($generated@@93 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@310 ($generated@@311 $generated@@198) ($generated@@312 ($generated@@313 98))) ($generated@@312 ($generated@@313 97))) ($generated@@312 ($generated@@313 100))) ($generated@@312 ($generated@@313 32))) ($generated@@312 ($generated@@313 108))) ($generated@@312 ($generated@@313 117))) ($generated@@312 ($generated@@313 99))) ($generated@@312 ($generated@@313 107))))))))
 :pattern ( ($generated@@87 $generated@@517 $generated@@518))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@118 $generated@@198 $generated@@4)) (= (type $generated@@520) $generated@@74)) (= (type $generated@@521) ($generated@@118 $generated@@119 $generated@@120))) (= ($generated@@116 $generated@@519 ($generated@@350 $generated@@520) $generated@@521) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@198) ($generated@@0 ($generated@@123 $generated@@519 $generated@@522))) ($generated@@377 $generated@@522 $generated@@520 $generated@@521))
 :pattern ( ($generated@@123 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@116 $generated@@519 ($generated@@350 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@118 $generated@@198 $generated@@4)) (= (type $generated@@524) $generated@@74)) (= (type $generated@@525) ($generated@@118 $generated@@119 $generated@@120))) (= ($generated@@116 $generated@@523 ($generated@@355 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@198) ($generated@@0 ($generated@@123 $generated@@523 $generated@@526))) ($generated@@377 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@123 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@116 $generated@@523 ($generated@@355 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated ($generated@@123 ($generated@@432 $generated@@528) $generated@@527)) 0))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@123 ($generated@@432 $generated@@528) $generated@@527)))
)))
(assert  (and (forall (($generated@@531 T@U) ) (! (= (type ($generated@@529 $generated@@531)) ($generated@@118 $generated@@198 $generated@@4))
 :pattern ( ($generated@@529 $generated@@531))
)) (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@441 (type $generated@@532))))
(let (($generated@@534 ($generated@@440 (type $generated@@532))))
(= (type ($generated@@530 $generated@@532)) ($generated@@118 $generated@@534 $generated@@533))))
 :pattern ( ($generated@@530 $generated@@532))
))))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) ($generated@@439 $generated@@198 $generated@@198)) (= (type $generated@@536) $generated@@198)) (= ($generated@@0 ($generated@@123 ($generated@@529 $generated@@535) $generated@@536))  (and ($generated@@0 ($generated@@123 ($generated@@437 $generated@@535) ($generated@@228 ($generated@@201 $generated@@95 $generated@@536)))) (= ($generated@@123 ($generated@@530 $generated@@535) ($generated@@228 ($generated@@201 $generated@@95 $generated@@536))) ($generated@@229 ($generated@@201 $generated@@95 $generated@@536))))))
 :pattern ( ($generated@@123 ($generated@@529 $generated@@535) $generated@@536))
)))
(assert  (and (forall (($generated@@539 T@U) ) (! (= (type ($generated@@537 $generated@@539)) ($generated@@118 $generated@@198 $generated@@4))
 :pattern ( ($generated@@537 $generated@@539))
)) (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@459 (type $generated@@540))))
(let (($generated@@542 ($generated@@458 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@118 $generated@@542 $generated@@541))))
 :pattern ( ($generated@@538 $generated@@540))
))))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) ($generated@@457 $generated@@198 $generated@@198)) (= (type $generated@@544) $generated@@198)) (= ($generated@@0 ($generated@@123 ($generated@@537 $generated@@543) $generated@@544))  (and ($generated@@0 ($generated@@123 ($generated@@455 $generated@@543) ($generated@@228 ($generated@@201 $generated@@95 $generated@@544)))) (= ($generated@@123 ($generated@@538 $generated@@543) ($generated@@228 ($generated@@201 $generated@@95 $generated@@544))) ($generated@@229 ($generated@@201 $generated@@95 $generated@@544))))))
 :pattern ( ($generated@@123 ($generated@@537 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(let (($generated@@548 ($generated@@440 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@439 $generated@@548 $generated@@547)) (= ($generated@@0 ($generated@@123 ($generated@@496 $generated@@545) $generated@@546)) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@548) (and ($generated@@0 ($generated@@123 ($generated@@437 $generated@@545) $generated@@549)) (= $generated@@546 ($generated@@123 ($generated@@530 $generated@@545) $generated@@549))))
 :pattern ( ($generated@@123 ($generated@@437 $generated@@545) $generated@@549))
 :pattern ( ($generated@@123 ($generated@@530 $generated@@545) $generated@@549))
))))))
 :pattern ( ($generated@@123 ($generated@@496 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(let (($generated@@553 ($generated@@458 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@457 $generated@@553 $generated@@552)) (= ($generated@@0 ($generated@@123 ($generated@@507 $generated@@550) $generated@@551)) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@553) (and ($generated@@0 ($generated@@123 ($generated@@455 $generated@@550) $generated@@554)) (= $generated@@551 ($generated@@123 ($generated@@538 $generated@@550) $generated@@554))))
 :pattern ( ($generated@@123 ($generated@@455 $generated@@550) $generated@@554))
 :pattern ( ($generated@@123 ($generated@@538 $generated@@550) $generated@@554))
))))))
 :pattern ( ($generated@@123 ($generated@@507 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@197 $generated@@198)) (= (type $generated@@556) ($generated@@118 $generated@@119 $generated@@120))) ($generated@@337 $generated@@556)) (= ($generated@@116 ($generated@@196 $generated@@555) $generated@@182 $generated@@556) ($generated@@116 $generated@@555 ($generated@@362 $generated@@45) $generated@@556)))
 :pattern ( ($generated@@116 ($generated@@196 $generated@@555) $generated@@182 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@197 $generated@@198)) (= (type $generated@@558) ($generated@@118 $generated@@119 $generated@@120))) ($generated@@337 $generated@@558)) (= ($generated@@116 ($generated@@213 $generated@@557) $generated@@186 $generated@@558) ($generated@@116 $generated@@557 ($generated@@362 $generated@@45) $generated@@558)))
 :pattern ( ($generated@@116 ($generated@@213 $generated@@557) $generated@@186 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@560 $generated@@561)) $generated@@74)
 :pattern ( ($generated@@559 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) ($generated@@439 $generated@@198 $generated@@198)) (= (type $generated@@563) $generated@@74)) (= (type $generated@@564) $generated@@74)) (= (type $generated@@565) ($generated@@118 $generated@@119 $generated@@120))) (= ($generated@@116 $generated@@562 ($generated@@559 $generated@@563 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@198) ($generated@@0 ($generated@@123 ($generated@@437 $generated@@562) $generated@@566))) (and ($generated@@377 ($generated@@123 ($generated@@530 $generated@@562) $generated@@566) $generated@@564 $generated@@565) ($generated@@377 $generated@@566 $generated@@563 $generated@@565)))
 :pattern ( ($generated@@123 ($generated@@530 $generated@@562) $generated@@566))
 :pattern ( ($generated@@123 ($generated@@437 $generated@@562) $generated@@566))
))))
 :pattern ( ($generated@@116 $generated@@562 ($generated@@559 $generated@@563 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (! (= (type ($generated@@567 $generated@@568 $generated@@569)) $generated@@74)
 :pattern ( ($generated@@567 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) ($generated@@457 $generated@@198 $generated@@198)) (= (type $generated@@571) $generated@@74)) (= (type $generated@@572) $generated@@74)) (= (type $generated@@573) ($generated@@118 $generated@@119 $generated@@120))) (= ($generated@@116 $generated@@570 ($generated@@567 $generated@@571 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@198) ($generated@@0 ($generated@@123 ($generated@@455 $generated@@570) $generated@@574))) (and ($generated@@377 ($generated@@123 ($generated@@538 $generated@@570) $generated@@574) $generated@@572 $generated@@573) ($generated@@377 $generated@@574 $generated@@571 $generated@@573)))
 :pattern ( ($generated@@123 ($generated@@538 $generated@@570) $generated@@574))
 :pattern ( ($generated@@123 ($generated@@455 $generated@@570) $generated@@574))
))))
 :pattern ( ($generated@@116 $generated@@570 ($generated@@567 $generated@@571 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@576 Int) ($generated@@577 Int) ) (! (= ($generated@@575 $generated@@576 $generated@@577) (div $generated@@576 $generated@@577))
 :pattern ( ($generated@@575 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@202 (type $generated@@578))))
 (=> (and (and (= (type $generated@@578) ($generated@@197 $generated@@580)) (= (type $generated@@579) ($generated@@197 $generated@@580))) ($generated@@390 $generated@@578 $generated@@579)) (= $generated@@578 $generated@@579)))
 :pattern ( ($generated@@390 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 Int) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@118 $generated@@119 $generated@@120)) ($generated@@337 $generated@@582)) (= ($generated@@116 ($generated@@94 $generated@@581) $generated@@182 $generated@@582) ($generated@@116 ($generated@@8 $generated@@581) $generated@@178 $generated@@582)))
 :pattern ( ($generated@@116 ($generated@@94 $generated@@581) $generated@@182 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@95) ($generated@@181 $generated@@583 $generated@@182)) (or ($generated@@191 $generated@@583) ($generated@@372 $generated@@583)))
 :pattern ( ($generated@@372 $generated@@583) ($generated@@181 $generated@@583 $generated@@182))
 :pattern ( ($generated@@191 $generated@@583) ($generated@@181 $generated@@583 $generated@@182))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@95) ($generated@@181 $generated@@584 $generated@@186)) (or ($generated@@367 $generated@@584) ($generated@@374 $generated@@584)))
 :pattern ( ($generated@@374 $generated@@584) ($generated@@181 $generated@@584 $generated@@186))
 :pattern ( ($generated@@367 $generated@@584) ($generated@@181 $generated@@584 $generated@@186))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@585) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@586) ($generated@@118 $generated@@119 $generated@@120))) (= (type $generated@@587) ($generated@@118 $generated@@119 $generated@@120))) (not (= $generated@@585 $generated@@587))) (and ($generated@@174 $generated@@585 $generated@@586) ($generated@@174 $generated@@586 $generated@@587))) ($generated@@174 $generated@@585 $generated@@587))
 :pattern ( ($generated@@174 $generated@@585 $generated@@586) ($generated@@174 $generated@@586 $generated@@587))
)))
(assert  (=> true (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@95) (or ($generated@@91 $generated@@588) (and ($generated@@181 $generated@@588 $generated@@182) (not ($generated@@89 $generated@@588))))) (= ($generated@@218 $generated@@588) ($generated@@192 $generated@@588)))
 :pattern ( ($generated@@218 $generated@@588))
))))
(assert  (=> true (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@95) (or ($generated@@91 $generated@@589) (and ($generated@@181 $generated@@589 $generated@@182) (not ($generated@@89 $generated@@589))))) (<= ($generated@@86 0) ($generated@@218 $generated@@589)))
 :pattern ( ($generated@@218 $generated@@589))
))))
(assert (forall (($generated@@591 T@T) ) (! (= (type ($generated@@590 $generated@@591)) ($generated@@118 $generated@@591 $generated@@4))
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@459 (type $generated@@592))))
(let (($generated@@594 ($generated@@458 (type $generated@@592))))
 (=> (= (type $generated@@592) ($generated@@457 $generated@@594 $generated@@593)) (= (= $generated@@592 ($generated@@456 $generated@@594 $generated@@593)) (= ($generated@@455 $generated@@592) ($generated@@590 $generated@@594))))))
 :pattern ( ($generated@@455 $generated@@592))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@459 (type $generated@@595))))
(let (($generated@@597 ($generated@@458 (type $generated@@595))))
 (=> (= (type $generated@@595) ($generated@@457 $generated@@597 $generated@@596)) (= (= $generated@@595 ($generated@@456 $generated@@597 $generated@@596)) (= ($generated@@507 $generated@@595) ($generated@@590 $generated@@596))))))
 :pattern ( ($generated@@507 $generated@@595))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@459 (type $generated@@598))))
(let (($generated@@600 ($generated@@458 (type $generated@@598))))
 (=> (= (type $generated@@598) ($generated@@457 $generated@@600 $generated@@599)) (= (= $generated@@598 ($generated@@456 $generated@@600 $generated@@599)) (= ($generated@@537 $generated@@598) ($generated@@590 $generated@@198))))))
 :pattern ( ($generated@@537 $generated@@598))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@441 (type $generated@@601))))
(let (($generated@@603 ($generated@@440 (type $generated@@601))))
 (=> (= (type $generated@@601) ($generated@@439 $generated@@603 $generated@@602)) (or (= $generated@@601 ($generated@@438 $generated@@603 $generated@@602)) (exists (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (and (and (= (type $generated@@604) $generated@@198) (= (type $generated@@605) $generated@@198)) ($generated@@0 ($generated@@123 ($generated@@529 $generated@@601) ($generated@@312 ($generated@@302 $generated@@604 $generated@@605)))))
 :no-pattern (type $generated@@604)
 :no-pattern (type $generated@@605)
 :no-pattern ($generated $generated@@604)
 :no-pattern ($generated@@0 $generated@@604)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
))))))
 :pattern ( ($generated@@529 $generated@@601))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@459 (type $generated@@606))))
(let (($generated@@608 ($generated@@458 (type $generated@@606))))
 (=> (= (type $generated@@606) ($generated@@457 $generated@@608 $generated@@607)) (or (= $generated@@606 ($generated@@456 $generated@@608 $generated@@607)) (exists (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (and (and (= (type $generated@@609) $generated@@198) (= (type $generated@@610) $generated@@198)) ($generated@@0 ($generated@@123 ($generated@@537 $generated@@606) ($generated@@312 ($generated@@302 $generated@@609 $generated@@610)))))
 :no-pattern (type $generated@@609)
 :no-pattern (type $generated@@610)
 :no-pattern ($generated $generated@@609)
 :no-pattern ($generated@@0 $generated@@609)
 :no-pattern ($generated $generated@@610)
 :no-pattern ($generated@@0 $generated@@610)
))))))
 :pattern ( ($generated@@537 $generated@@606))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@198) ($generated@@303 $generated@@611 $generated@@46)) (and (= ($generated@@312 ($generated@@201 $generated@@2 $generated@@611)) $generated@@611) ($generated@@181 ($generated@@201 $generated@@2 $generated@@611) $generated@@46)))
 :pattern ( ($generated@@303 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@198) ($generated@@303 $generated@@612 $generated@@47)) (and (= ($generated@@312 ($generated@@201 $generated@@3 $generated@@612)) $generated@@612) ($generated@@181 ($generated@@201 $generated@@3 $generated@@612) $generated@@47)))
 :pattern ( ($generated@@303 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@198) ($generated@@303 $generated@@613 $generated@@44)) (and (= ($generated@@312 ($generated@@201 $generated@@4 $generated@@613)) $generated@@613) ($generated@@181 ($generated@@201 $generated@@4 $generated@@613) $generated@@44)))
 :pattern ( ($generated@@303 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@198) ($generated@@303 $generated@@614 $generated@@45)) (and (= ($generated@@312 ($generated@@201 $generated@@314 $generated@@614)) $generated@@614) ($generated@@181 ($generated@@201 $generated@@314 $generated@@614) $generated@@45)))
 :pattern ( ($generated@@303 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@74) (= ($generated@@303 ($generated@@312 $generated@@615) $generated@@616) ($generated@@181 $generated@@615 $generated@@616)))
 :pattern ( ($generated@@303 ($generated@@312 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@121 (type $generated@@617))))
 (=> (= (type $generated@@617) ($generated@@118 $generated@@618 $generated@@2)) (<= 0 ($generated@@431 $generated@@617))))
 :pattern ( ($generated@@431 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@202 (type $generated@@619))))
 (=> (= (type $generated@@619) ($generated@@197 $generated@@620)) (<= 0 ($generated@@199 $generated@@619))))
 :pattern ( ($generated@@199 $generated@@619))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@74)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@74) (= (type $generated@@624) $generated@@74)) (= ($generated@@621 ($generated@@559 $generated@@623 $generated@@624)) $generated@@623))
 :pattern ( ($generated@@559 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ) (! (= (type ($generated@@625 $generated@@626)) $generated@@74)
 :pattern ( ($generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@74) (= (type $generated@@628) $generated@@74)) (= ($generated@@625 ($generated@@559 $generated@@627 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@559 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@74) (= (type $generated@@630) $generated@@74)) (= ($generated@@114 ($generated@@559 $generated@@629 $generated@@630)) $generated@@58))
 :pattern ( ($generated@@559 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@74)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@74) (= (type $generated@@634) $generated@@74)) (= ($generated@@631 ($generated@@567 $generated@@633 $generated@@634)) $generated@@633))
 :pattern ( ($generated@@567 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@74)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@74) (= (type $generated@@638) $generated@@74)) (= ($generated@@635 ($generated@@567 $generated@@637 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@567 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@74) (= (type $generated@@640) $generated@@74)) (= ($generated@@114 ($generated@@567 $generated@@639 $generated@@640)) $generated@@59))
 :pattern ( ($generated@@567 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@198) (= (type $generated@@642) $generated@@198)) (= ($generated@@238 ($generated@@302 $generated@@641 $generated@@642)) $generated@@62))
 :pattern ( ($generated@@302 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@74)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@74) (= (type $generated@@646) $generated@@74)) (= ($generated@@643 ($generated@@221 $generated@@645 $generated@@646)) $generated@@645))
 :pattern ( ($generated@@221 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@74)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@74) (= (type $generated@@650) $generated@@74)) (= ($generated@@647 ($generated@@221 $generated@@649 $generated@@650)) $generated@@650))
 :pattern ( ($generated@@221 $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@198) (= (type $generated@@652) $generated@@198)) (= ($generated@@228 ($generated@@302 $generated@@651 $generated@@652)) $generated@@651))
 :pattern ( ($generated@@302 $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@198) (= (type $generated@@654) $generated@@198)) (= ($generated@@229 ($generated@@302 $generated@@653 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@302 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@655) ($generated@@197 $generated@@198)) (= (type $generated@@656) $generated@@74)) (= (type $generated@@657) ($generated@@118 $generated@@119 $generated@@120))) (= ($generated@@116 $generated@@655 ($generated@@362 $generated@@656) $generated@@657) (forall (($generated@@658 Int) ) (!  (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@199 $generated@@655))) ($generated@@377 ($generated@@195 $generated@@655 $generated@@658) $generated@@656 $generated@@657))
 :pattern ( ($generated@@195 $generated@@655 $generated@@658))
))))
 :pattern ( ($generated@@116 $generated@@655 ($generated@@362 $generated@@656) $generated@@657))
)))
(assert (forall (($generated@@660 Int) ) (! (= ($generated@@659 ($generated@@117 $generated@@660)) $generated@@660)
 :pattern ( ($generated@@117 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ) (! (= (type ($generated@@661 $generated@@662)) $generated@@74)
 :pattern ( ($generated@@661 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@74) (= ($generated@@661 ($generated@@350 $generated@@663)) $generated@@663))
 :pattern ( ($generated@@350 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@74) (= ($generated@@114 ($generated@@350 $generated@@664)) $generated@@54))
 :pattern ( ($generated@@350 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ) (! (= (type ($generated@@665 $generated@@666)) $generated@@74)
 :pattern ( ($generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@74) (= ($generated@@665 ($generated@@355 $generated@@667)) $generated@@667))
 :pattern ( ($generated@@355 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@74) (= ($generated@@114 ($generated@@355 $generated@@668)) $generated@@55))
 :pattern ( ($generated@@355 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ) (! (= (type ($generated@@669 $generated@@670)) $generated@@74)
 :pattern ( ($generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@74) (= ($generated@@669 ($generated@@241 $generated@@671)) $generated@@671))
 :pattern ( ($generated@@241 $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@74) (= ($generated@@114 ($generated@@241 $generated@@672)) $generated@@56))
 :pattern ( ($generated@@241 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ) (! (= (type ($generated@@673 $generated@@674)) $generated@@74)
 :pattern ( ($generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@74) (= ($generated@@673 ($generated@@362 $generated@@675)) $generated@@675))
 :pattern ( ($generated@@362 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@74) (= ($generated@@114 ($generated@@362 $generated@@676)) $generated@@57))
 :pattern ( ($generated@@362 $generated@@676))
)))
(assert (forall (($generated@@677 Int) ) (! (= ($generated@@238 ($generated@@94 $generated@@677)) $generated@@66)
 :pattern ( ($generated@@94 $generated@@677))
)))
(assert (forall (($generated@@678 Int) ) (! (= ($generated@@192 ($generated@@94 $generated@@678)) $generated@@678)
 :pattern ( ($generated@@94 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) ($generated@@197 $generated@@198)) (= ($generated@@238 ($generated@@196 $generated@@679)) $generated@@67))
 :pattern ( ($generated@@196 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) ($generated@@197 $generated@@198)) (= ($generated@@484 ($generated@@196 $generated@@680)) $generated@@680))
 :pattern ( ($generated@@196 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) ($generated@@197 $generated@@198)) (= ($generated@@238 ($generated@@213 $generated@@681)) $generated@@69))
 :pattern ( ($generated@@213 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) ($generated@@197 $generated@@198)) (= ($generated@@488 ($generated@@213 $generated@@682)) $generated@@682))
 :pattern ( ($generated@@213 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ) (! (let (($generated@@684 (type $generated@@683)))
(= ($generated@@201 $generated@@684 ($generated@@312 $generated@@683)) $generated@@683))
 :pattern ( ($generated@@312 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@685) ($generated@@439 $generated@@198 $generated@@198)) (= (type $generated@@686) $generated@@74)) (= (type $generated@@687) $generated@@74)) (= ($generated@@181 $generated@@685 ($generated@@559 $generated@@686 $generated@@687)) (forall (($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@198) ($generated@@0 ($generated@@123 ($generated@@437 $generated@@685) $generated@@688))) (and ($generated@@303 ($generated@@123 ($generated@@530 $generated@@685) $generated@@688) $generated@@687) ($generated@@303 $generated@@688 $generated@@686)))
 :pattern ( ($generated@@123 ($generated@@530 $generated@@685) $generated@@688))
 :pattern ( ($generated@@123 ($generated@@437 $generated@@685) $generated@@688))
))))
 :pattern ( ($generated@@181 $generated@@685 ($generated@@559 $generated@@686 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (= (type $generated@@689) ($generated@@457 $generated@@198 $generated@@198)) (= (type $generated@@690) $generated@@74)) (= (type $generated@@691) $generated@@74)) (= ($generated@@181 $generated@@689 ($generated@@567 $generated@@690 $generated@@691)) (forall (($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@692) $generated@@198) ($generated@@0 ($generated@@123 ($generated@@455 $generated@@689) $generated@@692))) (and ($generated@@303 ($generated@@123 ($generated@@538 $generated@@689) $generated@@692) $generated@@691) ($generated@@303 $generated@@692 $generated@@690)))
 :pattern ( ($generated@@123 ($generated@@538 $generated@@689) $generated@@692))
 :pattern ( ($generated@@123 ($generated@@455 $generated@@689) $generated@@692))
))))
 :pattern ( ($generated@@181 $generated@@689 ($generated@@567 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) $generated@@198) (= (type $generated@@695) $generated@@198)) (< ($generated@@693 $generated@@694) ($generated@@200 ($generated@@302 $generated@@694 $generated@@695))))
 :pattern ( ($generated@@302 $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@198) (= (type $generated@@697) $generated@@198)) (< ($generated@@693 $generated@@697) ($generated@@200 ($generated@@302 $generated@@696 $generated@@697))))
 :pattern ( ($generated@@302 $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) $generated@@198) (= (type $generated@@699) $generated@@74)) (= (type $generated@@700) $generated@@74)) ($generated@@303 $generated@@698 ($generated@@559 $generated@@699 $generated@@700))) (and (= ($generated@@312 ($generated@@201 ($generated@@439 $generated@@198 $generated@@198) $generated@@698)) $generated@@698) ($generated@@181 ($generated@@201 ($generated@@439 $generated@@198 $generated@@198) $generated@@698) ($generated@@559 $generated@@699 $generated@@700))))
 :pattern ( ($generated@@303 $generated@@698 ($generated@@559 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@198) (= (type $generated@@702) $generated@@74)) (= (type $generated@@703) $generated@@74)) ($generated@@303 $generated@@701 ($generated@@567 $generated@@702 $generated@@703))) (and (= ($generated@@312 ($generated@@201 ($generated@@457 $generated@@198 $generated@@198) $generated@@701)) $generated@@701) ($generated@@181 ($generated@@201 ($generated@@457 $generated@@198 $generated@@198) $generated@@701) ($generated@@567 $generated@@702 $generated@@703))))
 :pattern ( ($generated@@303 $generated@@701 ($generated@@567 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) $generated@@74) (= (type $generated@@705) $generated@@74)) (= (type $generated@@706) $generated@@198)) ($generated@@303 $generated@@706 ($generated@@221 $generated@@704 $generated@@705))) (and (= ($generated@@312 ($generated@@201 $generated@@95 $generated@@706)) $generated@@706) ($generated@@181 ($generated@@201 $generated@@95 $generated@@706) ($generated@@221 $generated@@704 $generated@@705))))
 :pattern ( ($generated@@303 $generated@@706 ($generated@@221 $generated@@704 $generated@@705)))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) ($generated@@197 $generated@@198)) (< ($generated@@707 $generated@@708) ($generated@@200 ($generated@@196 $generated@@708))))
 :pattern ( ($generated@@196 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) ($generated@@197 $generated@@198)) (< ($generated@@707 $generated@@709) ($generated@@200 ($generated@@213 $generated@@709))))
 :pattern ( ($generated@@213 $generated@@709))
)))
(assert (forall (($generated@@710 T@U) ) (! (let (($generated@@711 (type $generated@@710)))
 (not ($generated@@0 ($generated@@123 ($generated@@590 $generated@@711) $generated@@710))))
 :pattern ( (let (($generated@@711 (type $generated@@710)))
($generated@@123 ($generated@@590 $generated@@711) $generated@@710)))
)))
(assert (forall (($generated@@713 Int) ($generated@@714 Int) ) (! (= ($generated@@712 $generated@@713 $generated@@714) (mod $generated@@713 $generated@@714))
 :pattern ( ($generated@@712 $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@716 T@U) ) (! (= (type ($generated@@715 $generated@@716)) $generated@@79)
 :pattern ( ($generated@@715 $generated@@716))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@74) (= (type $generated@@718) $generated@@74)) (and (= ($generated@@114 ($generated@@221 $generated@@717 $generated@@718)) $generated@@63) (= ($generated@@715 ($generated@@221 $generated@@717 $generated@@718)) $generated@@71)))
 :pattern ( ($generated@@221 $generated@@717 $generated@@718))
)))
(assert  (and (forall (($generated@@721 T@U) ) (! (let (($generated@@722 ($generated@@202 (type $generated@@721))))
(= (type ($generated@@719 $generated@@721)) ($generated@@197 $generated@@722)))
 :pattern ( ($generated@@719 $generated@@721))
)) (forall (($generated@@723 T@U) ) (! (let (($generated@@724 ($generated@@202 (type $generated@@723))))
(= (type ($generated@@720 $generated@@723)) $generated@@724))
 :pattern ( ($generated@@720 $generated@@723))
))))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (! (let (($generated@@727 (type $generated@@726)))
 (=> (= (type $generated@@725) ($generated@@197 $generated@@727)) (and (= ($generated@@719 ($generated@@310 $generated@@725 $generated@@726)) $generated@@725) (= ($generated@@720 ($generated@@310 $generated@@725 $generated@@726)) $generated@@726))))
 :pattern ( ($generated@@310 $generated@@725 $generated@@726))
)))
(assert  (=> (<= 2 $generated@@82) (forall (($generated@@728 Bool) ($generated@@729 Int) ) (!  (=> (or ($generated@@85 $generated@@728 $generated@@729) (and (not (= 2 $generated@@82)) (<= ($generated@@86 0) $generated@@729))) ($generated@@181 ($generated@@87 $generated@@728 $generated@@729) $generated@@182))
 :pattern ( ($generated@@87 $generated@@728 $generated@@729))
))))
(assert  (=> (<= 3 $generated@@82) (forall (($generated@@730 Bool) ($generated@@731 Bool) ($generated@@732 Bool) ) (!  (=> (or ($generated@@84 $generated@@730 $generated@@731 $generated@@732) (not (= 3 $generated@@82))) ($generated@@181 ($generated@@83 $generated@@730 $generated@@731 $generated@@732) $generated@@182))
 :pattern ( ($generated@@83 $generated@@730 $generated@@731 $generated@@732))
))))
(assert  (=> (<= 3 $generated@@82) (forall (($generated@@733 Bool) ($generated@@734 Bool) ($generated@@735 Bool) ) (!  (=> (or ($generated@@323 $generated@@733 $generated@@734 $generated@@735) (not (= 3 $generated@@82))) ($generated@@181 ($generated@@322 $generated@@733 $generated@@734 $generated@@735) $generated@@186))
 :pattern ( ($generated@@322 $generated@@733 $generated@@734 $generated@@735))
))))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@95) (= ($generated@@693 ($generated@@312 $generated@@736)) ($generated@@200 $generated@@736)))
 :pattern ( ($generated@@693 ($generated@@312 $generated@@736)))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@737) $generated@@198) ($generated@@303 $generated@@737 ($generated@@117 0))) (and (= ($generated@@312 ($generated@@201 $generated@@2 $generated@@737)) $generated@@737) ($generated@@181 ($generated@@201 ($generated@@118 $generated@@198 $generated@@4) $generated@@737) ($generated@@117 0))))
 :pattern ( ($generated@@303 $generated@@737 ($generated@@117 0)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (= (type $generated@@738) $generated@@198) (= (type $generated@@739) $generated@@74)) ($generated@@303 $generated@@738 ($generated@@350 $generated@@739))) (and (= ($generated@@312 ($generated@@201 ($generated@@118 $generated@@198 $generated@@4) $generated@@738)) $generated@@738) ($generated@@181 ($generated@@201 ($generated@@118 $generated@@198 $generated@@4) $generated@@738) ($generated@@350 $generated@@739))))
 :pattern ( ($generated@@303 $generated@@738 ($generated@@350 $generated@@739)))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (= (type $generated@@740) $generated@@198) (= (type $generated@@741) $generated@@74)) ($generated@@303 $generated@@740 ($generated@@355 $generated@@741))) (and (= ($generated@@312 ($generated@@201 ($generated@@118 $generated@@198 $generated@@4) $generated@@740)) $generated@@740) ($generated@@181 ($generated@@201 ($generated@@118 $generated@@198 $generated@@4) $generated@@740) ($generated@@355 $generated@@741))))
 :pattern ( ($generated@@303 $generated@@740 ($generated@@355 $generated@@741)))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (= (type $generated@@742) $generated@@198) (= (type $generated@@743) $generated@@74)) ($generated@@303 $generated@@742 ($generated@@241 $generated@@743))) (and (= ($generated@@312 ($generated@@201 ($generated@@118 $generated@@198 $generated@@2) $generated@@742)) $generated@@742) ($generated@@181 ($generated@@201 ($generated@@118 $generated@@198 $generated@@2) $generated@@742) ($generated@@241 $generated@@743))))
 :pattern ( ($generated@@303 $generated@@742 ($generated@@241 $generated@@743)))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (= (type $generated@@744) $generated@@198) (= (type $generated@@745) $generated@@74)) ($generated@@303 $generated@@744 ($generated@@362 $generated@@745))) (and (= ($generated@@312 ($generated@@201 ($generated@@197 $generated@@198) $generated@@744)) $generated@@744) ($generated@@181 ($generated@@201 ($generated@@197 $generated@@198) $generated@@744) ($generated@@362 $generated@@745))))
 :pattern ( ($generated@@303 $generated@@744 ($generated@@362 $generated@@745)))
)))
(assert  (=> (<= 3 $generated@@82) (forall (($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (and (= (type $generated@@746) $generated@@4) (= (type $generated@@747) $generated@@4)) (= (type $generated@@748) $generated@@4)) (or ($generated@@84 ($generated@@0 ($generated@@93 $generated@@746)) ($generated@@0 ($generated@@93 $generated@@747)) ($generated@@0 ($generated@@93 $generated@@748))) (not (= 3 $generated@@82)))) (and (and ($generated@@85 ($generated@@0 ($generated@@93 $generated@@746)) ($generated@@86 88)) (let (($generated@@749 ($generated@@93 ($generated@@87 ($generated@@0 ($generated@@93 $generated@@746)) ($generated@@86 88)))))
 (and (and ($generated@@88 $generated@@749) (=> ($generated@@89 $generated@@749) ($generated@@90 $generated@@749))) (=> (not ($generated@@89 $generated@@749)) (and ($generated@@91 $generated@@749) (and ($generated@@85 ($generated@@0 ($generated@@93 $generated@@747)) ($generated@@86 42)) (let (($generated@@750 ($generated@@93 ($generated@@87 ($generated@@0 ($generated@@93 $generated@@747)) ($generated@@86 42)))))
 (and (and ($generated@@88 $generated@@750) (=> ($generated@@89 $generated@@750) ($generated@@90 $generated@@750))) (=> (not ($generated@@89 $generated@@750)) (and ($generated@@91 $generated@@750) (and ($generated@@85 ($generated@@0 ($generated@@93 $generated@@748)) ($generated@@86 33)) (let (($generated@@751 ($generated@@93 ($generated@@87 ($generated@@0 ($generated@@93 $generated@@748)) ($generated@@86 33)))))
 (and (and ($generated@@88 $generated@@751) (=> ($generated@@89 $generated@@751) ($generated@@90 $generated@@751))) (=> (not ($generated@@89 $generated@@751)) ($generated@@91 $generated@@751))))))))))))))) (= ($generated@@83 ($generated@@0 ($generated@@93 $generated@@746)) ($generated@@0 ($generated@@93 $generated@@747)) ($generated@@0 ($generated@@93 $generated@@748))) (let (($generated@@752 ($generated@@93 ($generated@@87 ($generated@@0 ($generated@@93 $generated@@746)) ($generated@@86 88)))))
(ite ($generated@@89 $generated@@752) ($generated@@92 $generated@@752) (let (($generated@@753 ($generated@@93 ($generated@@87 ($generated@@0 ($generated@@93 $generated@@747)) ($generated@@86 42)))))
(ite ($generated@@89 $generated@@753) ($generated@@92 $generated@@753) (let (($generated@@754 ($generated@@93 ($generated@@87 ($generated@@0 ($generated@@93 $generated@@748)) ($generated@@86 33)))))
(ite ($generated@@89 $generated@@754) ($generated@@92 $generated@@754) ($generated@@93 ($generated@@94 ($generated@@86 100))))))))))))
 :weight 3
 :pattern ( ($generated@@83 ($generated@@0 ($generated@@93 $generated@@746)) ($generated@@0 ($generated@@93 $generated@@747)) ($generated@@0 ($generated@@93 $generated@@748))))
))))
(assert (= ($generated@@114 $generated@@178) $generated@@61))
(assert (= ($generated@@715 $generated@@178) $generated@@70))
(assert (= ($generated@@114 $generated@@182) $generated@@64))
(assert (= ($generated@@715 $generated@@182) $generated@@72))
(assert (= ($generated@@114 $generated@@186) $generated@@65))
(assert (= ($generated@@715 $generated@@186) $generated@@73))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (and (= (type $generated@@755) ($generated@@118 $generated@@198 $generated@@2)) (= (type $generated@@756) $generated@@74)) (= (type $generated@@757) ($generated@@118 $generated@@119 $generated@@120))) (= ($generated@@116 $generated@@755 ($generated@@241 $generated@@756) $generated@@757) (forall (($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@758) $generated@@198) (< 0 ($generated ($generated@@123 $generated@@755 $generated@@758)))) ($generated@@377 $generated@@758 $generated@@756 $generated@@757))
 :pattern ( ($generated@@123 $generated@@755 $generated@@758))
))))
 :pattern ( ($generated@@116 $generated@@755 ($generated@@241 $generated@@756) $generated@@757))
)))
(assert (= $generated@@239 ($generated@@93 $generated@@239)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) ($generated@@197 $generated@@198)) (= ($generated@@181 ($generated@@196 $generated@@759) $generated@@182) ($generated@@181 $generated@@759 ($generated@@362 $generated@@45))))
 :pattern ( ($generated@@181 ($generated@@196 $generated@@759) $generated@@182))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) ($generated@@197 $generated@@198)) (= ($generated@@181 ($generated@@213 $generated@@760) $generated@@186) ($generated@@181 $generated@@760 ($generated@@362 $generated@@45))))
 :pattern ( ($generated@@181 ($generated@@213 $generated@@760) $generated@@186))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@761) $generated@@95) (= (type $generated@@762) ($generated@@118 $generated@@119 $generated@@120))) (and ($generated@@337 $generated@@762) (and ($generated@@372 $generated@@761) ($generated@@116 $generated@@761 $generated@@182 $generated@@762)))) ($generated@@116 ($generated@@484 $generated@@761) ($generated@@362 $generated@@45) $generated@@762))
 :pattern ( ($generated@@116 ($generated@@484 $generated@@761) ($generated@@362 $generated@@45) $generated@@762))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (and (= (type $generated@@763) $generated@@95) (= (type $generated@@764) ($generated@@118 $generated@@119 $generated@@120))) (and ($generated@@337 $generated@@764) (and ($generated@@374 $generated@@763) ($generated@@116 $generated@@763 $generated@@186 $generated@@764)))) ($generated@@116 ($generated@@488 $generated@@763) ($generated@@362 $generated@@45) $generated@@764))
 :pattern ( ($generated@@116 ($generated@@488 $generated@@763) ($generated@@362 $generated@@45) $generated@@764))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ) (!  (=> (and (and (and (= (type $generated@@765) $generated@@95) (= (type $generated@@766) $generated@@74)) (= (type $generated@@767) ($generated@@118 $generated@@119 $generated@@120))) (and ($generated@@337 $generated@@767) (and ($generated@@220 $generated@@765) (exists (($generated@@768 T@U) ) (!  (and (= (type $generated@@768) $generated@@74) ($generated@@116 $generated@@765 ($generated@@221 $generated@@766 $generated@@768) $generated@@767))
 :pattern ( ($generated@@116 $generated@@765 ($generated@@221 $generated@@766 $generated@@768) $generated@@767))
))))) ($generated@@377 ($generated@@228 $generated@@765) $generated@@766 $generated@@767))
 :pattern ( ($generated@@377 ($generated@@228 $generated@@765) $generated@@766 $generated@@767))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (and (and (= (type $generated@@769) $generated@@95) (= (type $generated@@770) $generated@@74)) (= (type $generated@@771) ($generated@@118 $generated@@119 $generated@@120))) (and ($generated@@337 $generated@@771) (and ($generated@@220 $generated@@769) (exists (($generated@@772 T@U) ) (!  (and (= (type $generated@@772) $generated@@74) ($generated@@116 $generated@@769 ($generated@@221 $generated@@772 $generated@@770) $generated@@771))
 :pattern ( ($generated@@116 $generated@@769 ($generated@@221 $generated@@772 $generated@@770) $generated@@771))
))))) ($generated@@377 ($generated@@229 $generated@@769) $generated@@770 $generated@@771))
 :pattern ( ($generated@@377 ($generated@@229 $generated@@769) $generated@@770 $generated@@771))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (= (type $generated@@773) $generated@@95) (= (type $generated@@774) ($generated@@118 $generated@@119 $generated@@120))) (and ($generated@@337 $generated@@774) (and ($generated@@191 $generated@@773) ($generated@@116 $generated@@773 $generated@@182 $generated@@774)))) ($generated@@116 ($generated@@8 ($generated@@192 $generated@@773)) $generated@@178 $generated@@774))
 :pattern ( ($generated@@116 ($generated@@8 ($generated@@192 $generated@@773)) $generated@@178 $generated@@774))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (= (type $generated@@775) $generated@@198) (= (type $generated@@776) $generated@@198)) (= ($generated@@302 ($generated@@93 $generated@@775) ($generated@@93 $generated@@776)) ($generated@@93 ($generated@@302 $generated@@775 $generated@@776))))
 :pattern ( ($generated@@302 ($generated@@93 $generated@@775) ($generated@@93 $generated@@776)))
)))
(assert (forall (($generated@@777 Int) ) (! (= ($generated@@312 ($generated@@8 ($generated@@86 $generated@@777))) ($generated@@93 ($generated@@312 ($generated@@8 $generated@@777))))
 :pattern ( ($generated@@312 ($generated@@8 ($generated@@86 $generated@@777))))
)))
(assert (forall (($generated@@778 Int) ) (! (= ($generated@@94 ($generated@@86 $generated@@778)) ($generated@@93 ($generated@@94 $generated@@778)))
 :pattern ( ($generated@@94 ($generated@@86 $generated@@778)))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) ($generated@@197 $generated@@198)) (= ($generated@@196 ($generated@@93 $generated@@779)) ($generated@@93 ($generated@@196 $generated@@779))))
 :pattern ( ($generated@@196 ($generated@@93 $generated@@779)))
)))
(assert (forall (($generated@@780 T@U) ) (!  (=> (= (type $generated@@780) ($generated@@197 $generated@@198)) (= ($generated@@213 ($generated@@93 $generated@@780)) ($generated@@93 ($generated@@213 $generated@@780))))
 :pattern ( ($generated@@213 ($generated@@93 $generated@@780)))
)))
(assert (forall (($generated@@781 T@U) ) (! (= ($generated@@312 ($generated@@93 $generated@@781)) ($generated@@93 ($generated@@312 $generated@@781)))
 :pattern ( ($generated@@312 ($generated@@93 $generated@@781)))
)))
(assert (forall (($generated@@782 T@U) ) (! (let (($generated@@783 ($generated@@202 (type $generated@@782))))
 (=> (and (= (type $generated@@782) ($generated@@197 $generated@@783)) (= ($generated@@199 $generated@@782) 0)) (= $generated@@782 ($generated@@311 $generated@@783))))
 :pattern ( ($generated@@199 $generated@@782))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ($generated@@786 T@U) ) (! (let (($generated@@787 (type $generated@@785)))
 (=> (and (and (= (type $generated@@784) ($generated@@118 $generated@@787 $generated@@2)) (= (type $generated@@786) $generated@@2)) (<= 0 ($generated $generated@@786))) (= ($generated@@431 ($generated@@124 $generated@@784 $generated@@785 $generated@@786)) (+ (- ($generated@@431 $generated@@784) ($generated ($generated@@123 $generated@@784 $generated@@785))) ($generated $generated@@786)))))
 :pattern ( ($generated@@431 ($generated@@124 $generated@@784 $generated@@785 $generated@@786)))
)))
(assert  (=> true (forall (($generated@@788 T@U) ) (!  (=> (and (= (type $generated@@788) $generated@@95) (or ($generated@@88 $generated@@788) ($generated@@181 $generated@@788 $generated@@182))) (= ($generated@@89 $generated@@788) ($generated@@372 $generated@@788)))
 :pattern ( ($generated@@89 $generated@@788))
))))
(assert  (=> true (forall (($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@789) $generated@@95) (or ($generated@@324 $generated@@789) ($generated@@181 $generated@@789 $generated@@186))) (= ($generated@@187 $generated@@789) ($generated@@374 $generated@@789)))
 :pattern ( ($generated@@187 $generated@@789))
))))
(assert  (=> true (forall (($generated@@790 T@U) ) (!  (=> (and (= (type $generated@@790) $generated@@95) (or ($generated@@90 $generated@@790) (and ($generated@@181 $generated@@790 $generated@@182) ($generated@@89 $generated@@790)))) (= ($generated@@92 $generated@@790) $generated@@790))
 :pattern ( ($generated@@92 $generated@@790))
))))
(assert  (=> true (forall (($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@791) $generated@@95) (or ($generated@@185 $generated@@791) (and ($generated@@181 $generated@@791 $generated@@186) ($generated@@187 $generated@@791)))) (= ($generated@@184 $generated@@791) $generated@@791))
 :pattern ( ($generated@@184 $generated@@791))
))))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@792) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@793) $generated@@2)) ($generated@@116 $generated@@793 $generated@@46 $generated@@792))
 :pattern ( ($generated@@116 $generated@@793 $generated@@46 $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (= (type $generated@@794) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@795) $generated@@3)) ($generated@@116 $generated@@795 $generated@@47 $generated@@794))
 :pattern ( ($generated@@116 $generated@@795 $generated@@47 $generated@@794))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (= (type $generated@@796) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@797) $generated@@4)) ($generated@@116 $generated@@797 $generated@@44 $generated@@796))
 :pattern ( ($generated@@116 $generated@@797 $generated@@44 $generated@@796))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ) (!  (=> (and (= (type $generated@@798) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@799) $generated@@314)) ($generated@@116 $generated@@799 $generated@@45 $generated@@798))
 :pattern ( ($generated@@116 $generated@@799 $generated@@45 $generated@@798))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 T@U) ) (!  (=> (and (= (type $generated@@800) ($generated@@118 $generated@@119 $generated@@120)) (= (type $generated@@801) $generated@@198)) ($generated@@116 $generated@@801 $generated@@48 $generated@@800))
 :pattern ( ($generated@@116 $generated@@801 $generated@@48 $generated@@800))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ) (!  (=> (and (= (type $generated@@802) ($generated@@197 $generated@@198)) (= (type $generated@@803) $generated@@74)) (= ($generated@@181 $generated@@802 ($generated@@362 $generated@@803)) (forall (($generated@@804 Int) ) (!  (=> (and (<= 0 $generated@@804) (< $generated@@804 ($generated@@199 $generated@@802))) ($generated@@303 ($generated@@195 $generated@@802 $generated@@804) $generated@@803))
 :pattern ( ($generated@@195 $generated@@802 $generated@@804))
))))
 :pattern ( ($generated@@181 $generated@@802 ($generated@@362 $generated@@803)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 Int) ) (!  (=> (= (type $generated@@805) ($generated@@197 $generated@@198)) (=> (and (<= 0 $generated@@806) (< $generated@@806 ($generated@@199 $generated@@805))) (< ($generated@@200 ($generated@@201 $generated@@95 ($generated@@195 $generated@@805 $generated@@806))) ($generated@@707 $generated@@805))))
 :pattern ( ($generated@@200 ($generated@@201 $generated@@95 ($generated@@195 $generated@@805 $generated@@806))))
)))
(assert (forall (($generated@@807 T@U) ($generated@@808 T@U) ($generated@@809 T@U) ) (!  (=> (and (and (and (= (type $generated@@807) ($generated@@439 $generated@@198 $generated@@198)) (= (type $generated@@808) $generated@@74)) (= (type $generated@@809) $generated@@74)) ($generated@@181 $generated@@807 ($generated@@559 $generated@@808 $generated@@809))) (and (and ($generated@@181 ($generated@@437 $generated@@807) ($generated@@350 $generated@@808)) ($generated@@181 ($generated@@496 $generated@@807) ($generated@@350 $generated@@809))) ($generated@@181 ($generated@@529 $generated@@807) ($generated@@350 ($generated@@221 $generated@@808 $generated@@809)))))
 :pattern ( ($generated@@181 $generated@@807 ($generated@@559 $generated@@808 $generated@@809)))
)))
(assert (forall (($generated@@810 T@U) ($generated@@811 T@U) ($generated@@812 T@U) ) (!  (=> (and (and (and (= (type $generated@@810) ($generated@@457 $generated@@198 $generated@@198)) (= (type $generated@@811) $generated@@74)) (= (type $generated@@812) $generated@@74)) ($generated@@181 $generated@@810 ($generated@@567 $generated@@811 $generated@@812))) (and (and ($generated@@181 ($generated@@455 $generated@@810) ($generated@@355 $generated@@811)) ($generated@@181 ($generated@@507 $generated@@810) ($generated@@355 $generated@@812))) ($generated@@181 ($generated@@537 $generated@@810) ($generated@@355 ($generated@@221 $generated@@811 $generated@@812)))))
 :pattern ( ($generated@@181 $generated@@810 ($generated@@567 $generated@@811 $generated@@812)))
)))
(assert (forall (($generated@@813 T@U) ) (!  (=> (= (type $generated@@813) $generated@@2) ($generated@@181 $generated@@813 $generated@@46))
 :pattern ( ($generated@@181 $generated@@813 $generated@@46))
)))
(assert (forall (($generated@@814 T@U) ) (!  (=> (= (type $generated@@814) $generated@@3) ($generated@@181 $generated@@814 $generated@@47))
 :pattern ( ($generated@@181 $generated@@814 $generated@@47))
)))
(assert (forall (($generated@@815 T@U) ) (!  (=> (= (type $generated@@815) $generated@@4) ($generated@@181 $generated@@815 $generated@@44))
 :pattern ( ($generated@@181 $generated@@815 $generated@@44))
)))
(assert (forall (($generated@@816 T@U) ) (!  (=> (= (type $generated@@816) $generated@@314) ($generated@@181 $generated@@816 $generated@@45))
 :pattern ( ($generated@@181 $generated@@816 $generated@@45))
)))
(assert (forall (($generated@@817 T@U) ) (!  (=> (= (type $generated@@817) $generated@@198) ($generated@@181 $generated@@817 $generated@@48))
 :pattern ( ($generated@@181 $generated@@817 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@818 () Int)
(declare-fun $generated@@819 () Int)
(declare-fun $generated@@820 () Int)
(declare-fun $generated@@821 () T@U)
(declare-fun $generated@@822 () Bool)
(declare-fun $generated@@823 () T@U)
(declare-fun $generated@@824 () Bool)
(declare-fun $generated@@825 () Bool)
(declare-fun $generated@@826 () T@U)
(declare-fun $generated@@827 () Bool)
(declare-fun $generated@@828 () T@U)
(declare-fun $generated@@829 () T@U)
(declare-fun $generated@@830 () Int)
(declare-fun $generated@@831 () T@U)
(declare-fun $generated@@832 () T@U)
(declare-fun $generated@@833 () Int)
(declare-fun $generated@@834 (T@U) Bool)
(declare-fun $generated@@835 () Int)
(declare-fun $generated@@836 () T@U)
(declare-fun $generated@@837 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@821) $generated@@95) (= (type $generated@@823) ($generated@@118 $generated@@119 $generated@@120))) (= (type $generated@@826) $generated@@95)) (= (type $generated@@828) $generated@@95)) (= (type $generated@@829) $generated@@95)) (= (type $generated@@831) $generated@@119)) (= (type $generated@@832) ($generated@@248 $generated@@119 $generated@@4))) (= (type $generated@@836) $generated@@95)) (= (type $generated@@837) $generated@@95)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@838  (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@181 ($generated@@8 (+ $generated@@818 1)) $generated@@178)) (=> ($generated@@181 ($generated@@8 (+ $generated@@818 1)) $generated@@178) (=> (= $generated@@819 (+ $generated@@818 1)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@820) (= (- 8 $generated@@819) $generated@@820))) (=> (or (<= 0 $generated@@820) (= (- 8 $generated@@819) $generated@@820)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- 8 $generated@@819) $generated@@820)))))))))
(let (($generated@@839  (=> (and (not ($generated@@187 $generated@@821)) (= (ControlFlow 0 9) 5)) $generated@@838)))
(let (($generated@@840  (=> (and ($generated@@187 $generated@@821) (= (ControlFlow 0 8) 5)) $generated@@838)))
(let (($generated@@841  (=> ($generated@@116 ($generated@@11 $generated@@822) $generated@@44 $generated@@823) (=> (and (and (and ($generated@@116 ($generated@@11 $generated@@824) $generated@@44 $generated@@823) ($generated@@116 ($generated@@11 $generated@@825) $generated@@44 $generated@@823)) (and ($generated@@323 $generated@@822 $generated@@824 $generated@@825) ($generated@@323 $generated@@822 $generated@@824 $generated@@825))) (and (and (= $generated@@821 ($generated@@322 $generated@@822 $generated@@824 $generated@@825)) ($generated@@116 $generated@@821 $generated@@186 $generated@@823)) (and ($generated@@324 $generated@@821) ($generated@@324 $generated@@821)))) (and (=> (= (ControlFlow 0 10) 8) $generated@@840) (=> (= (ControlFlow 0 10) 9) $generated@@839))))))
(let (($generated@@842  (=> (and (not ($generated@@89 $generated@@826)) ($generated@@116 $generated@@826 $generated@@182 $generated@@823)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (not ($generated@@89 $generated@@826))) (=> ($generated@@91 $generated@@826) (=> (and ($generated@@91 $generated@@826) (= (ControlFlow 0 12) 10)) $generated@@841))))))
(let (($generated@@843  (=> (and ($generated@@89 $generated@@826) (= (ControlFlow 0 11) 10)) $generated@@841)))
(let (($generated@@844  (=> (and (< $generated@@818 8) (= $generated@@820 (- 8 $generated@@818))) (and (=> (= (ControlFlow 0 14) (- 0 19)) (not (= ($generated@@86 4) 0))) (=> (not (= ($generated@@86 4) 0)) (and (=> (= (ControlFlow 0 14) (- 0 18)) (not (= ($generated@@86 2) 0))) (=> (not (= ($generated@@86 2) 0)) (=> (= $generated@@822 (= ($generated@@712 ($generated@@575 $generated@@818 ($generated@@86 4)) ($generated@@86 2)) ($generated@@86 0))) (and (=> (= (ControlFlow 0 14) (- 0 17)) (not (= ($generated@@86 2) 0))) (=> (not (= ($generated@@86 2) 0)) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not (= ($generated@@86 2) 0))) (=> (not (= ($generated@@86 2) 0)) (=> (= $generated@@824 (= ($generated@@712 ($generated@@575 $generated@@818 ($generated@@86 2)) ($generated@@86 2)) ($generated@@86 0))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (not (= ($generated@@86 2) 0))) (=> (not (= ($generated@@86 2) 0)) (=> (and (= $generated@@825 (= ($generated@@712 $generated@@818 ($generated@@86 2)) ($generated@@86 0))) ($generated@@116 ($generated@@11 $generated@@822) $generated@@44 $generated@@823)) (=> (and (and (and ($generated@@116 ($generated@@11 $generated@@824) $generated@@44 $generated@@823) ($generated@@116 ($generated@@11 $generated@@825) $generated@@44 $generated@@823)) (and ($generated@@84 $generated@@822 $generated@@824 $generated@@825) ($generated@@84 $generated@@822 $generated@@824 $generated@@825))) (and (and (= $generated@@826 ($generated@@83 $generated@@822 $generated@@824 $generated@@825)) ($generated@@116 $generated@@826 $generated@@182 $generated@@823)) (and ($generated@@88 $generated@@826) ($generated@@88 $generated@@826)))) (and (=> (= (ControlFlow 0 14) 11) $generated@@843) (=> (= (ControlFlow 0 14) 12) $generated@@842)))))))))))))))))))
(let (($generated@@845 true))
(let (($generated@@846  (=> $generated@@827 (and (=> (= (ControlFlow 0 20) 3) $generated@@845) (=> (= (ControlFlow 0 20) 14) $generated@@844)))))
(let (($generated@@847 true))
(let (($generated@@848  (and (=> (= (ControlFlow 0 21) 2) $generated@@847) (=> (= (ControlFlow 0 21) 20) $generated@@846))))
(let (($generated@@849 true))
(let (($generated@@850  (=> (<= ($generated@@86 0) $generated@@818) (=> (and (and ($generated@@181 $generated@@828 $generated@@186) ($generated@@116 $generated@@828 $generated@@186 $generated@@823)) (and ($generated@@181 $generated@@829 $generated@@182) ($generated@@116 $generated@@829 $generated@@182 $generated@@823))) (=> (and (and (and (and (not false) (and (<= 0 $generated@@818) (< $generated@@818 9))) (= $generated@@830 8)) (forall (($generated@@851 T@U) ) (!  (=> (= (type $generated@@851) $generated@@119) (=> (and (not (= $generated@@851 $generated@@831)) ($generated@@0 ($generated@@125 ($generated@@123 $generated@@823 $generated@@851) $generated@@60))) (= ($generated@@123 $generated@@823 $generated@@851) ($generated@@123 $generated@@823 $generated@@851))))
 :pattern ( ($generated@@123 $generated@@823 $generated@@851))
))) (and (and ($generated@@174 $generated@@823 $generated@@823) (forall (($generated@@852 T@U) ($generated@@853 T@U) ) (! (let (($generated@@854 ($generated@@77 (type $generated@@853))))
 (=> (and (and (= (type $generated@@852) $generated@@119) (= (type $generated@@853) ($generated@@76 $generated@@854))) (and (not (= $generated@@852 $generated@@831)) ($generated@@0 ($generated@@125 ($generated@@123 $generated@@823 $generated@@852) $generated@@60)))) (or (= ($generated@@125 ($generated@@123 $generated@@823 $generated@@852) $generated@@853) ($generated@@125 ($generated@@123 $generated@@823 $generated@@852) $generated@@853)) ($generated@@0 ($generated@@246 $generated@@832 $generated@@852 $generated@@853)))))
 :pattern ( ($generated@@125 ($generated@@123 $generated@@823 $generated@@852) $generated@@853))
))) (and (<= (- 8 $generated@@818) $generated@@830) (=> (= (- 8 $generated@@818) $generated@@830) true)))) (and (=> (= (ControlFlow 0 22) 1) $generated@@849) (=> (= (ControlFlow 0 22) 21) $generated@@848)))))))
(let (($generated@@855  (=> (= $generated@@832 ($generated@@247 $generated@@831 $generated@@823 $generated@@60 false)) (and (=> (= (ControlFlow 0 23) (- 0 24)) ($generated@@181 ($generated@@8 ($generated@@86 0)) $generated@@178)) (=> ($generated@@181 ($generated@@8 ($generated@@86 0)) $generated@@178) (=> (= $generated@@833 ($generated@@86 0)) (=> (and (= $generated@@830 (- 8 $generated@@833)) (= (ControlFlow 0 23) 22)) $generated@@850)))))))
(let (($generated@@856  (=> (and (and (and (and ($generated@@337 $generated@@823) ($generated@@834 $generated@@823)) (and (<= ($generated@@86 0) $generated@@835) true)) (and (and ($generated@@181 $generated@@836 $generated@@182) ($generated@@116 $generated@@836 $generated@@182 $generated@@823)) true)) (and (and (and ($generated@@181 $generated@@837 $generated@@186) ($generated@@116 $generated@@837 $generated@@186 $generated@@823)) true) (and (= 4 $generated@@82) (= (ControlFlow 0 25) 23)))) $generated@@855)))
$generated@@856))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@154 (T@U Int) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@160 (T@T T@U) T@U)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@173 (T@U) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (Int) Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 (Bool Int T@U T@U) T@U)
(declare-fun $generated@@182 (Bool Int T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Bool)
(declare-fun $generated@@306 (T@U) Bool)
(declare-fun $generated@@307 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (T@U T@U) Bool)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@330 (Int) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@342 (T@U) Int)
(declare-fun $generated@@343 (T@T) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@T) T@U)
(declare-fun $generated@@368 (T@T T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@T) T@U)
(declare-fun $generated@@507 () T@T)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@627 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert  (and (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@141 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@141 $generated@@147))
))) (= (type $generated@@145) $generated@@70)))
(assert  (=> true (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@142) (or ($generated@@143 $generated@@148) (and ($generated@@144 $generated@@148 $generated@@145) ($generated@@146 $generated@@148)))) ($generated@@144 ($generated@@141 $generated@@148) $generated@@145))
 :pattern ( ($generated@@141 $generated@@148))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@142) (= (type $generated@@153) $generated@@142)) (and ($generated@@150 $generated@@152) ($generated@@150 $generated@@153))) (= ($generated@@149 $generated@@152 $generated@@153) (= ($generated@@151 $generated@@152) ($generated@@151 $generated@@153))))
 :pattern ( ($generated@@149 $generated@@152 $generated@@153) ($generated@@150 $generated@@152))
 :pattern ( ($generated@@149 $generated@@152 $generated@@153) ($generated@@150 $generated@@153))
)))
(assert  (and (and (and (and (and (forall (($generated@@162 T@T) ) (= ($generated@@1 ($generated@@156 $generated@@162)) 15)) (forall (($generated@@163 T@T) ) (! (= ($generated@@161 ($generated@@156 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@156 $generated@@163))
))) (= ($generated@@1 $generated@@157) 16)) (forall (($generated@@164 T@U) ($generated@@165 Int) ) (! (let (($generated@@166 ($generated@@161 (type $generated@@164))))
(= (type ($generated@@154 $generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@154 $generated@@164 $generated@@165))
))) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@155 $generated@@167)) $generated@@142)
 :pattern ( ($generated@@155 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@U) ) (! (= (type ($generated@@160 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ) (!  (=> (= (type $generated@@170) ($generated@@156 $generated@@157)) (=> (and (<= 0 $generated@@171) (< $generated@@171 ($generated@@158 $generated@@170))) (< ($generated@@159 ($generated@@160 $generated@@142 ($generated@@154 $generated@@170 $generated@@171))) ($generated@@159 ($generated@@155 $generated@@170)))))
 :pattern ( ($generated@@154 $generated@@170 $generated@@171) ($generated@@155 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@2) ($generated@@144 $generated@@172 ($generated@@81 0)))
 :pattern ( ($generated@@144 $generated@@172 ($generated@@81 0)))
)))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= (type ($generated@@174 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@174 $generated@@177))
)))
(assert  (=> true (forall (($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@142) (or ($generated@@175 ($generated@@174 $generated@@179)) (and ($generated@@144 $generated@@179 $generated@@145) (not ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@146 ($generated@@174 $generated@@179))))))))) (= ($generated@@173 ($generated@@174 $generated@@179)) ($generated@@176 ($generated@@151 ($generated@@174 $generated@@179)))))
 :weight 3
 :pattern ( ($generated@@173 ($generated@@174 $generated@@179)))
))))
(assert (forall (($generated@@183 Bool) ($generated@@184 Int) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) $generated@@142)
 :pattern ( ($generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
)))
(assert  (=> (<= 3 $generated@@180) (forall (($generated@@187 Bool) ($generated@@188 Int) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@142) (= (type $generated@@190) $generated@@142)) (or ($generated@@182 $generated@@187 $generated@@188 $generated@@189 $generated@@190) (and (not (= 3 $generated@@180)) (and (and (<= ($generated@@176 0) $generated@@188) ($generated@@144 $generated@@189 $generated@@145)) ($generated@@144 $generated@@190 $generated@@145))))) ($generated@@144 ($generated@@181 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@145))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194)) $generated@@70)
 :pattern ( ($generated@@192 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (and (= (type $generated@@195) $generated@@70) (= (type $generated@@196) $generated@@70)) (= (type $generated@@197) $generated@@142)) ($generated@@144 $generated@@197 ($generated@@192 $generated@@195 $generated@@196))) ($generated@@191 $generated@@197))
 :pattern ( ($generated@@191 $generated@@197) ($generated@@144 $generated@@197 ($generated@@192 $generated@@195 $generated@@196)))
)))
(assert  (and (forall (($generated@@201 T@U) ) (! (= (type ($generated@@199 $generated@@201)) $generated@@157)
 :pattern ( ($generated@@199 $generated@@201))
)) (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@157)
 :pattern ( ($generated@@200 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) $generated@@142) (= (type $generated@@204) $generated@@142)) true) (= ($generated@@198 $generated@@203 $generated@@204)  (and (= ($generated@@199 $generated@@203) ($generated@@199 $generated@@204)) (= ($generated@@200 $generated@@203) ($generated@@200 $generated@@204)))))
 :pattern ( ($generated@@198 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@70)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@209) $generated@@70)) ($generated@@144 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@144 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@216 $generated@@217)) 17)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@210 $generated@@222 $generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(let (($generated@@231 (type $generated@@227)))
(= (type ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@212 $generated@@231 $generated@@230))))
 :pattern ( ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@214 (type $generated@@232))))
 (=> (= (type $generated@@235) $generated@@236) (= ($generated@@210 ($generated@@215 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@233 $generated@@234) $generated@@235)))
 :weight 0
))) (and (and (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@210 ($generated@@215 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@210 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@210 ($generated@@215 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@210 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or true (= ($generated@@210 ($generated@@215 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@210 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@212 $generated@@83 $generated@@4))
 :pattern ( ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@73 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@83) (= (type $generated@@260) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@261) ($generated@@72 $generated@@4))) (= (type $generated@@263) $generated@@83)) (= (type $generated@@264) ($generated@@72 $generated@@265))) (= ($generated@@0 ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@212 $generated@@83 $generated@@4))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@73 (type $generated@@276))))
 (=> (and (and (and (and (= (type $generated@@271) $generated@@83) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@273) ($generated@@72 $generated@@4))) (= (type $generated@@275) $generated@@83)) (= (type $generated@@276) ($generated@@72 $generated@@277))) (= ($generated@@0 ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))  (=> (and (not (= $generated@@275 $generated@@271)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@272 $generated@@275) $generated@@273))) $generated@@274))))
 :pattern ( ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@280 $generated@@281)) $generated@@142)
 :pattern ( ($generated@@278 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@282) $generated@@70) (= (type $generated@@283) $generated@@70)) (= (type $generated@@284) $generated@@157)) (= (type $generated@@285) $generated@@157)) (= ($generated@@144 ($generated@@278 $generated@@284 $generated@@285) ($generated@@192 $generated@@282 $generated@@283))  (and ($generated@@279 $generated@@284 $generated@@282) ($generated@@279 $generated@@285 $generated@@283))))
 :pattern ( ($generated@@144 ($generated@@278 $generated@@284 $generated@@285) ($generated@@192 $generated@@282 $generated@@283)))
)))
(assert  (=> true (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@142) (or ($generated@@286 $generated@@287) ($generated@@144 $generated@@287 $generated@@145))) true)
 :pattern ( ($generated@@146 $generated@@287))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@142) (= (type $generated@@289) $generated@@142)) (= ($generated@@198 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@198 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@142) (= (type $generated@@291) $generated@@142)) (= ($generated@@149 $generated@@290 $generated@@291) (= $generated@@290 $generated@@291)))
 :pattern ( ($generated@@149 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@70)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@295) $generated@@70)) (= ($generated@@144 $generated@@294 ($generated@@292 $generated@@295)) (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@157) ($generated@@0 ($generated@@87 $generated@@294 $generated@@296))) ($generated@@279 $generated@@296 $generated@@295))
 :pattern ( ($generated@@87 $generated@@294 $generated@@296))
))))
 :pattern ( ($generated@@144 $generated@@294 ($generated@@292 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@300) $generated@@70)) (= ($generated@@144 $generated@@299 ($generated@@297 $generated@@300)) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@157) ($generated@@0 ($generated@@87 $generated@@299 $generated@@301))) ($generated@@279 $generated@@301 $generated@@300))
 :pattern ( ($generated@@87 $generated@@299 $generated@@301))
))))
 :pattern ( ($generated@@144 $generated@@299 ($generated@@297 $generated@@300)))
)))
(assert (forall (($generated@@302 Int) ) (! (= ($generated@@176 $generated@@302) $generated@@302)
 :pattern ( ($generated@@176 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (= ($generated@@174 $generated@@303) $generated@@303)
 :pattern ( ($generated@@174 $generated@@303))
)))
(assert  (=> true (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@142) (or ($generated@@286 ($generated@@174 $generated@@305)) ($generated@@144 $generated@@305 $generated@@145))) (= ($generated@@146 ($generated@@174 $generated@@305)) ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@304 ($generated@@174 $generated@@305)))))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@174 $generated@@305)))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) $generated@@70) (= (type $generated@@309) $generated@@70)) (= (type $generated@@310) $generated@@157)) (= (type $generated@@311) $generated@@157)) (= (type $generated@@312) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@306 $generated@@312)) (= ($generated@@80 ($generated@@278 $generated@@310 $generated@@311) ($generated@@192 $generated@@308 $generated@@309) $generated@@312)  (and ($generated@@307 $generated@@310 $generated@@308 $generated@@312) ($generated@@307 $generated@@311 $generated@@309 $generated@@312))))
 :pattern ( ($generated@@80 ($generated@@278 $generated@@310 $generated@@311) ($generated@@192 $generated@@308 $generated@@309) $generated@@312))
)))
(assert  (=> true (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@142) (or ($generated@@143 ($generated@@174 $generated@@313)) (and ($generated@@144 $generated@@313 $generated@@145) ($generated@@0 ($generated@@174 ($generated@@11 ($generated@@146 ($generated@@174 $generated@@313)))))))) (= ($generated@@141 ($generated@@174 $generated@@313)) ($generated@@174 $generated@@313)))
 :weight 3
 :pattern ( ($generated@@141 ($generated@@174 $generated@@313)))
))))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@74)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@142) (= ($generated@@191 $generated@@316) (= ($generated@@314 $generated@@316) $generated@@62)))
 :pattern ( ($generated@@191 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@142) (= ($generated@@150 $generated@@317) (= ($generated@@314 $generated@@317) $generated@@65)))
 :pattern ( ($generated@@150 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@142) (= ($generated@@304 $generated@@318) (= ($generated@@314 $generated@@318) $generated@@66)))
 :pattern ( ($generated@@304 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@161 (type $generated@@320))))
 (=> (and (= (type $generated@@320) ($generated@@156 $generated@@322)) (= (type $generated@@321) ($generated@@156 $generated@@322))) (= ($generated@@319 $generated@@320 $generated@@321)  (and (= ($generated@@158 $generated@@320) ($generated@@158 $generated@@321)) (forall (($generated@@323 Int) ) (!  (=> (and (<= 0 $generated@@323) (< $generated@@323 ($generated@@158 $generated@@320))) (= ($generated@@154 $generated@@320 $generated@@323) ($generated@@154 $generated@@321 $generated@@323)))
 :pattern ( ($generated@@154 $generated@@320 $generated@@323))
 :pattern ( ($generated@@154 $generated@@321 $generated@@323))
))))))
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@142) ($generated@@191 $generated@@324)) (exists (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (and (and (= (type $generated@@325) $generated@@157) (= (type $generated@@326) $generated@@157)) (= $generated@@324 ($generated@@278 $generated@@325 $generated@@326)))
 :no-pattern (type $generated@@325)
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
)))
 :pattern ( ($generated@@191 $generated@@324))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@156 $generated@@328))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@T) ) (! (= ($generated@@158 ($generated@@327 $generated@@329)) 0)
 :pattern ( ($generated@@327 $generated@@329))
)))
(assert (forall (($generated@@331 Int) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@142)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@142) ($generated@@150 $generated@@332)) (exists (($generated@@333 Int) ) (= $generated@@332 ($generated@@330 $generated@@333))))
 :pattern ( ($generated@@150 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@142) ($generated@@304 $generated@@334)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) ($generated@@156 $generated@@157)) (= $generated@@334 ($generated@@155 $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
)))
 :pattern ( ($generated@@304 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@2) (= ($generated@@144 $generated@@336 $generated@@138) (<= ($generated@@176 0) ($generated $generated@@336))))
 :pattern ( ($generated@@144 $generated@@336 $generated@@138))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@157)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@70) (= (type $generated@@341) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@307 ($generated@@337 $generated@@339) $generated@@340 $generated@@341) ($generated@@80 $generated@@339 $generated@@340 $generated@@341)))
 :pattern ( ($generated@@307 ($generated@@337 $generated@@339) $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@344 T@T) ) (! (= (type ($generated@@343 $generated@@344)) ($generated@@82 $generated@@344 $generated@@2))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@85 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@82 $generated@@346 $generated@@2)) (and (= (= ($generated@@342 $generated@@345) 0) (= $generated@@345 ($generated@@343 $generated@@346))) (=> (not (= ($generated@@342 $generated@@345) 0)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) (< 0 ($generated ($generated@@87 $generated@@345 $generated@@347))))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 18)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@87 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@87 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert  (and (and (and (and (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (= ($generated@@1 ($generated@@368 $generated@@371 $generated@@372)) 19)) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@369 ($generated@@368 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@368 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@370 ($generated@@368 $generated@@375 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@368 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@369 (type $generated@@377))))
(= (type ($generated@@366 $generated@@377)) ($generated@@82 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@377))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= (type ($generated@@367 $generated@@379 $generated@@380)) ($generated@@368 $generated@@379 $generated@@380))
 :pattern ( ($generated@@367 $generated@@379 $generated@@380))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@T) ) (! (let (($generated@@383 (type $generated@@381)))
 (not ($generated@@0 ($generated@@87 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381))))
 :pattern ( (let (($generated@@383 (type $generated@@381)))
($generated@@87 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381)))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@85 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@82 $generated@@385 $generated@@2)) (= ($generated@@206 $generated@@384) (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@385) (and (<= 0 ($generated ($generated@@87 $generated@@384 $generated@@386))) (<= ($generated ($generated@@87 $generated@@384 $generated@@386)) ($generated@@342 $generated@@384))))
 :pattern ( ($generated@@87 $generated@@384 $generated@@386))
)))))
 :pattern ( ($generated@@206 $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@157) ($generated@@279 $generated@@387 $generated@@138)) (and (= ($generated@@337 ($generated@@160 $generated@@2 $generated@@387)) $generated@@387) ($generated@@144 ($generated@@160 $generated@@2 $generated@@387) $generated@@138)))
 :pattern ( ($generated@@279 $generated@@387 $generated@@138))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@157) ($generated@@279 $generated@@388 $generated@@145)) (and (= ($generated@@337 ($generated@@160 $generated@@142 $generated@@388)) $generated@@388) ($generated@@144 ($generated@@160 $generated@@142 $generated@@388) $generated@@145)))
 :pattern ( ($generated@@279 $generated@@388 $generated@@145))
)))
(assert (forall (($generated@@389 Int) ) (! (= ($generated@@144 ($generated@@330 $generated@@389) $generated@@145) ($generated@@144 ($generated@@8 $generated@@389) $generated@@138))
 :pattern ( ($generated@@144 ($generated@@330 $generated@@389) $generated@@145))
)))
(assert (forall (($generated@@391 T@U) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@156 $generated@@157))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@392) $generated@@142) (= (type $generated@@393) $generated@@142)) (and ($generated@@304 $generated@@392) ($generated@@304 $generated@@393))) (= ($generated@@149 $generated@@392 $generated@@393) ($generated@@319 ($generated@@390 $generated@@392) ($generated@@390 $generated@@393))))
 :pattern ( ($generated@@149 $generated@@392 $generated@@393) ($generated@@304 $generated@@392))
 :pattern ( ($generated@@149 $generated@@392 $generated@@393) ($generated@@304 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@352 (type $generated@@394))))
(let (($generated@@396 ($generated@@351 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@350 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@349 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@348 $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@352 (type $generated@@399))))
(= (type ($generated@@398 $generated@@399)) ($generated@@82 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@352 (type $generated@@401))))
(let (($generated@@403 ($generated@@351 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@350 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@349 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@402) ($generated@@0 ($generated@@87 ($generated@@398 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@398 $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@370 (type $generated@@405))))
(let (($generated@@407 ($generated@@369 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@368 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@367 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@366 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@370 (type $generated@@410))))
(= (type ($generated@@409 $generated@@410)) ($generated@@82 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@370 (type $generated@@412))))
(let (($generated@@414 ($generated@@369 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@368 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@367 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@413) ($generated@@0 ($generated@@87 ($generated@@409 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@409 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@417) $generated@@70)) (= ($generated@@144 $generated@@416 ($generated@@205 $generated@@417)) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@157) (< 0 ($generated ($generated@@87 $generated@@416 $generated@@418)))) ($generated@@279 $generated@@418 $generated@@417))
 :pattern ( ($generated@@87 $generated@@416 $generated@@418))
))))
 :pattern ( ($generated@@144 $generated@@416 ($generated@@205 $generated@@417)))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (= (type $generated@@419) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@419 ($generated@@292 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@157) ($generated@@0 ($generated@@87 $generated@@419 $generated@@422))) ($generated@@307 $generated@@422 $generated@@420 $generated@@421))
 :pattern ( ($generated@@87 $generated@@419 $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@419 ($generated@@292 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@297 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@157) ($generated@@0 ($generated@@87 $generated@@423 $generated@@426))) ($generated@@307 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@87 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@297 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(= ($generated ($generated@@87 ($generated@@343 $generated@@428) $generated@@427)) 0))
 :pattern ( (let (($generated@@428 (type $generated@@427)))
($generated@@87 ($generated@@343 $generated@@428) $generated@@427)))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@352 (type $generated@@432))))
(let (($generated@@434 ($generated@@351 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@82 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@350 $generated@@157 $generated@@157)) (= (type $generated@@436) $generated@@157)) (= ($generated@@0 ($generated@@87 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@87 ($generated@@348 $generated@@435) ($generated@@199 ($generated@@160 $generated@@142 $generated@@436)))) (= ($generated@@87 ($generated@@430 $generated@@435) ($generated@@199 ($generated@@160 $generated@@142 $generated@@436))) ($generated@@200 ($generated@@160 $generated@@142 $generated@@436))))))
 :pattern ( ($generated@@87 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@370 (type $generated@@440))))
(let (($generated@@442 ($generated@@369 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@82 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@368 $generated@@157 $generated@@157)) (= (type $generated@@444) $generated@@157)) (= ($generated@@0 ($generated@@87 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@87 ($generated@@366 $generated@@443) ($generated@@199 ($generated@@160 $generated@@142 $generated@@444)))) (= ($generated@@87 ($generated@@438 $generated@@443) ($generated@@199 ($generated@@160 $generated@@142 $generated@@444))) ($generated@@200 ($generated@@160 $generated@@142 $generated@@444))))))
 :pattern ( ($generated@@87 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@351 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@350 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@87 ($generated@@398 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@87 ($generated@@348 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@87 ($generated@@430 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@445) $generated@@449))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@369 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@368 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@87 ($generated@@409 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@87 ($generated@@366 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@87 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@450) $generated@@454))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@87 ($generated@@409 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@156 $generated@@157)) (= (type $generated@@458) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@306 $generated@@458)) (= ($generated@@80 ($generated@@155 $generated@@457) $generated@@145 $generated@@458) ($generated@@80 $generated@@457 ($generated@@455 $generated@@45) $generated@@458)))
 :pattern ( ($generated@@80 ($generated@@155 $generated@@457) $generated@@145 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@350 $generated@@157 $generated@@157)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) $generated@@70)) (= (type $generated@@465) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@157) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@462) $generated@@466))) (and ($generated@@307 ($generated@@87 ($generated@@430 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@307 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@462) $generated@@466))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@80 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@368 $generated@@157 $generated@@157)) (= (type $generated@@471) $generated@@70)) (= (type $generated@@472) $generated@@70)) (= (type $generated@@473) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@470) $generated@@474))) (and ($generated@@307 ($generated@@87 ($generated@@438 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@307 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@470) $generated@@474))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@80 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@161 (type $generated@@475))))
 (=> (and (and (= (type $generated@@475) ($generated@@156 $generated@@477)) (= (type $generated@@476) ($generated@@156 $generated@@477))) ($generated@@319 $generated@@475 $generated@@476)) (= $generated@@475 $generated@@476)))
 :pattern ( ($generated@@319 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 Int) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@306 $generated@@479)) (= ($generated@@80 ($generated@@330 $generated@@478) $generated@@145 $generated@@479) ($generated@@80 ($generated@@8 $generated@@478) $generated@@138 $generated@@479)))
 :pattern ( ($generated@@80 ($generated@@330 $generated@@478) $generated@@145 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@142) ($generated@@144 $generated@@480 $generated@@145)) (or ($generated@@150 $generated@@480) ($generated@@304 $generated@@480)))
 :pattern ( ($generated@@304 $generated@@480) ($generated@@144 $generated@@480 $generated@@145))
 :pattern ( ($generated@@150 $generated@@480) ($generated@@144 $generated@@480 $generated@@145))
)))
(assert  (=> true (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@142) (or ($generated@@175 $generated@@481) (and ($generated@@144 $generated@@481 $generated@@145) (not ($generated@@146 $generated@@481))))) (= ($generated@@173 $generated@@481) ($generated@@151 $generated@@481)))
 :pattern ( ($generated@@173 $generated@@481))
))))
(assert  (=> true (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@142) (or ($generated@@175 $generated@@482) (and ($generated@@144 $generated@@482 $generated@@145) (not ($generated@@146 $generated@@482))))) (<= ($generated@@176 0) ($generated@@173 $generated@@482)))
 :pattern ( ($generated@@173 $generated@@482))
))))
(assert (forall (($generated@@484 T@T) ) (! (= (type ($generated@@483 $generated@@484)) ($generated@@82 $generated@@484 $generated@@4))
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@370 (type $generated@@485))))
(let (($generated@@487 ($generated@@369 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@368 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@367 $generated@@487 $generated@@486)) (= ($generated@@366 $generated@@485) ($generated@@483 $generated@@487))))))
 :pattern ( ($generated@@366 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@370 (type $generated@@488))))
(let (($generated@@490 ($generated@@369 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@368 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@367 $generated@@490 $generated@@489)) (= ($generated@@409 $generated@@488) ($generated@@483 $generated@@489))))))
 :pattern ( ($generated@@409 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@370 (type $generated@@491))))
(let (($generated@@493 ($generated@@369 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@368 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@367 $generated@@493 $generated@@492)) (= ($generated@@437 $generated@@491) ($generated@@483 $generated@@157))))))
 :pattern ( ($generated@@437 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@352 (type $generated@@494))))
(let (($generated@@496 ($generated@@351 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@350 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@349 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@157) (= (type $generated@@498) $generated@@157)) ($generated@@0 ($generated@@87 ($generated@@429 $generated@@494) ($generated@@337 ($generated@@278 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@429 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@370 (type $generated@@499))))
(let (($generated@@501 ($generated@@369 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@368 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@367 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@157) (= (type $generated@@503) $generated@@157)) ($generated@@0 ($generated@@87 ($generated@@437 $generated@@499) ($generated@@337 ($generated@@278 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@437 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@157) ($generated@@279 $generated@@504 $generated@@46)) (and (= ($generated@@337 ($generated@@160 $generated@@2 $generated@@504)) $generated@@504) ($generated@@144 ($generated@@160 $generated@@2 $generated@@504) $generated@@46)))
 :pattern ( ($generated@@279 $generated@@504 $generated@@46))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@157) ($generated@@279 $generated@@505 $generated@@47)) (and (= ($generated@@337 ($generated@@160 $generated@@3 $generated@@505)) $generated@@505) ($generated@@144 ($generated@@160 $generated@@3 $generated@@505) $generated@@47)))
 :pattern ( ($generated@@279 $generated@@505 $generated@@47))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@157) ($generated@@279 $generated@@506 $generated@@44)) (and (= ($generated@@337 ($generated@@160 $generated@@4 $generated@@506)) $generated@@506) ($generated@@144 ($generated@@160 $generated@@4 $generated@@506) $generated@@44)))
 :pattern ( ($generated@@279 $generated@@506 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@507) 20))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@157) ($generated@@279 $generated@@508 $generated@@45)) (and (= ($generated@@337 ($generated@@160 $generated@@507 $generated@@508)) $generated@@508) ($generated@@144 ($generated@@160 $generated@@507 $generated@@508) $generated@@45)))
 :pattern ( ($generated@@279 $generated@@508 $generated@@45))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@279 ($generated@@337 $generated@@509) $generated@@510) ($generated@@144 $generated@@509 $generated@@510)))
 :pattern ( ($generated@@279 ($generated@@337 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@85 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@82 $generated@@512 $generated@@2)) (<= 0 ($generated@@342 $generated@@511))))
 :pattern ( ($generated@@342 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@161 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@156 $generated@@514)) (<= 0 ($generated@@158 $generated@@513))))
 :pattern ( ($generated@@158 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@515 ($generated@@459 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@459 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@70) (= (type $generated@@522) $generated@@70)) (= ($generated@@519 ($generated@@459 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@459 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@70) (= (type $generated@@524) $generated@@70)) (= ($generated@@78 ($generated@@459 $generated@@523 $generated@@524)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@525 ($generated@@467 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@70) (= (type $generated@@532) $generated@@70)) (= ($generated@@529 ($generated@@467 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@467 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@70) (= (type $generated@@534) $generated@@70)) (= ($generated@@78 ($generated@@467 $generated@@533 $generated@@534)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@157) (= (type $generated@@536) $generated@@157)) (= ($generated@@314 ($generated@@278 $generated@@535 $generated@@536)) $generated@@62))
 :pattern ( ($generated@@278 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@70) (= (type $generated@@540) $generated@@70)) (= ($generated@@537 ($generated@@192 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@192 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@70)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@70) (= (type $generated@@544) $generated@@70)) (= ($generated@@541 ($generated@@192 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@192 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) (= (type $generated@@546) $generated@@157)) (= ($generated@@199 ($generated@@278 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@278 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@157) (= (type $generated@@548) $generated@@157)) (= ($generated@@200 ($generated@@278 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@278 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@156 $generated@@157)) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@549 ($generated@@455 $generated@@550) $generated@@551) (forall (($generated@@552 Int) ) (!  (=> (and (<= 0 $generated@@552) (< $generated@@552 ($generated@@158 $generated@@549))) ($generated@@307 ($generated@@154 $generated@@549 $generated@@552) $generated@@550 $generated@@551))
 :pattern ( ($generated@@154 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@80 $generated@@549 ($generated@@455 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@553 ($generated@@81 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@81 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@70)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@70) (= ($generated@@555 ($generated@@292 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@292 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@70) (= ($generated@@78 ($generated@@292 $generated@@558)) $generated@@54))
 :pattern ( ($generated@@292 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@70)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@70) (= ($generated@@559 ($generated@@297 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@297 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@78 ($generated@@297 $generated@@562)) $generated@@55))
 :pattern ( ($generated@@297 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@70)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@70) (= ($generated@@563 ($generated@@205 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@205 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@78 ($generated@@205 $generated@@566)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@70)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@70) (= ($generated@@567 ($generated@@455 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@455 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@70) (= ($generated@@78 ($generated@@455 $generated@@570)) $generated@@57))
 :pattern ( ($generated@@455 $generated@@570))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@314 ($generated@@330 $generated@@571)) $generated@@65)
 :pattern ( ($generated@@330 $generated@@571))
)))
(assert (forall (($generated@@572 Int) ) (! (= ($generated@@151 ($generated@@330 $generated@@572)) $generated@@572)
 :pattern ( ($generated@@330 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) ($generated@@156 $generated@@157)) (= ($generated@@314 ($generated@@155 $generated@@573)) $generated@@66))
 :pattern ( ($generated@@155 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) ($generated@@156 $generated@@157)) (= ($generated@@390 ($generated@@155 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@155 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@160 $generated@@576 ($generated@@337 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@337 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@350 $generated@@157 $generated@@157)) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) $generated@@70)) (= ($generated@@144 $generated@@577 ($generated@@459 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@157) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@577) $generated@@580))) (and ($generated@@279 ($generated@@87 ($generated@@430 $generated@@577) $generated@@580) $generated@@579) ($generated@@279 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@577) $generated@@580))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@144 $generated@@577 ($generated@@459 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@368 $generated@@157 $generated@@157)) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) $generated@@70)) (= ($generated@@144 $generated@@581 ($generated@@467 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@157) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@581) $generated@@584))) (and ($generated@@279 ($generated@@87 ($generated@@438 $generated@@581) $generated@@584) $generated@@583) ($generated@@279 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@581) $generated@@584))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@144 $generated@@581 ($generated@@467 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@157) (= (type $generated@@587) $generated@@157)) (< ($generated@@585 $generated@@586) ($generated@@159 ($generated@@278 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@278 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@157) (= (type $generated@@589) $generated@@157)) (< ($generated@@585 $generated@@589) ($generated@@159 ($generated@@278 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@278 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@157) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) $generated@@70)) ($generated@@279 $generated@@590 ($generated@@459 $generated@@591 $generated@@592))) (and (= ($generated@@337 ($generated@@160 ($generated@@350 $generated@@157 $generated@@157) $generated@@590)) $generated@@590) ($generated@@144 ($generated@@160 ($generated@@350 $generated@@157 $generated@@157) $generated@@590) ($generated@@459 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@279 $generated@@590 ($generated@@459 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@157) (= (type $generated@@594) $generated@@70)) (= (type $generated@@595) $generated@@70)) ($generated@@279 $generated@@593 ($generated@@467 $generated@@594 $generated@@595))) (and (= ($generated@@337 ($generated@@160 ($generated@@368 $generated@@157 $generated@@157) $generated@@593)) $generated@@593) ($generated@@144 ($generated@@160 ($generated@@368 $generated@@157 $generated@@157) $generated@@593) ($generated@@467 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@279 $generated@@593 ($generated@@467 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@70) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) $generated@@157)) ($generated@@279 $generated@@598 ($generated@@192 $generated@@596 $generated@@597))) (and (= ($generated@@337 ($generated@@160 $generated@@142 $generated@@598)) $generated@@598) ($generated@@144 ($generated@@160 $generated@@142 $generated@@598) ($generated@@192 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@279 $generated@@598 ($generated@@192 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) ($generated@@156 $generated@@157)) (< ($generated@@599 $generated@@600) ($generated@@159 ($generated@@155 $generated@@600))))
 :pattern ( ($generated@@155 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@601)))
 (not ($generated@@0 ($generated@@87 ($generated@@483 $generated@@602) $generated@@601))))
 :pattern ( (let (($generated@@602 (type $generated@@601)))
($generated@@87 ($generated@@483 $generated@@602) $generated@@601)))
)))
(assert  (=> (<= 3 $generated@@180) (forall (($generated@@603 Bool) ($generated@@604 Int) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@142) (= (type $generated@@606) $generated@@142)) (or ($generated@@182 $generated@@603 $generated@@604 $generated@@605 $generated@@606) (and (not (= 3 $generated@@180)) (and (and (<= ($generated@@176 0) $generated@@604) ($generated@@144 $generated@@605 $generated@@145)) ($generated@@144 $generated@@606 $generated@@145))))) (and (let (($generated@@607 (let (($generated@@608 (ite $generated@@603 $generated@@605 $generated@@606)))
$generated@@608)))
 (and (and ($generated@@286 $generated@@607) (=> ($generated@@146 $generated@@607) ($generated@@143 $generated@@607))) (=> (not ($generated@@146 $generated@@607)) (and ($generated@@175 $generated@@607) (let (($generated@@609 (let (($generated@@610 (ite $generated@@603 $generated@@605 $generated@@606)))
$generated@@610)))
 (and (and ($generated@@286 $generated@@609) (=> ($generated@@146 $generated@@609) ($generated@@143 $generated@@609))) (=> (not ($generated@@146 $generated@@609)) ($generated@@175 $generated@@609)))))))) (= ($generated@@181 $generated@@603 $generated@@604 $generated@@605 $generated@@606) (let (($generated@@611 (let (($generated@@612 (ite $generated@@603 $generated@@605 $generated@@606)))
$generated@@612)))
(ite ($generated@@146 $generated@@611) ($generated@@141 $generated@@611) (let (($generated@@613 (let (($generated@@614 (ite $generated@@603 $generated@@605 $generated@@606)))
$generated@@614)))
(ite ($generated@@146 $generated@@613) ($generated@@141 $generated@@613) $generated@@606)))))))
 :pattern ( ($generated@@181 $generated@@603 $generated@@604 $generated@@605 $generated@@606))
))))
(assert  (=> (<= 3 $generated@@180) (forall (($generated@@615 T@U) ($generated@@616 Int) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@4) (= (type $generated@@617) $generated@@142)) (= (type $generated@@618) $generated@@142)) (or ($generated@@182 ($generated@@0 ($generated@@174 $generated@@615)) ($generated@@176 $generated@@616) ($generated@@174 $generated@@617) ($generated@@174 $generated@@618)) (and (not (= 3 $generated@@180)) (and (and (<= ($generated@@176 0) $generated@@616) ($generated@@144 $generated@@617 $generated@@145)) ($generated@@144 $generated@@618 $generated@@145))))) (and (let (($generated@@619 (let (($generated@@620 (ite ($generated@@0 $generated@@615) $generated@@617 $generated@@618)))
$generated@@620)))
 (and (and ($generated@@286 $generated@@619) (=> ($generated@@146 $generated@@619) ($generated@@143 $generated@@619))) (=> (not ($generated@@146 $generated@@619)) (and ($generated@@175 $generated@@619) (let (($generated@@621 (let (($generated@@622 (ite ($generated@@0 $generated@@615) $generated@@617 $generated@@618)))
$generated@@622)))
 (and (and ($generated@@286 $generated@@621) (=> ($generated@@146 $generated@@621) ($generated@@143 $generated@@621))) (=> (not ($generated@@146 $generated@@621)) ($generated@@175 $generated@@621)))))))) (= ($generated@@181 ($generated@@0 ($generated@@174 $generated@@615)) ($generated@@176 $generated@@616) ($generated@@174 $generated@@617) ($generated@@174 $generated@@618)) (let (($generated@@623 (let (($generated@@624 (ite ($generated@@0 $generated@@615) $generated@@617 $generated@@618)))
$generated@@624)))
(ite ($generated@@146 $generated@@623) ($generated@@141 $generated@@623) (let (($generated@@625 (let (($generated@@626 (ite ($generated@@0 $generated@@615) $generated@@617 $generated@@618)))
$generated@@626)))
(ite ($generated@@146 $generated@@625) ($generated@@141 $generated@@625) ($generated@@174 $generated@@618))))))))
 :weight 3
 :pattern ( ($generated@@181 ($generated@@0 ($generated@@174 $generated@@615)) ($generated@@176 $generated@@616) ($generated@@174 $generated@@617) ($generated@@174 $generated@@618)))
))))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@75)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@70) (= (type $generated@@630) $generated@@70)) (and (= ($generated@@78 ($generated@@192 $generated@@629 $generated@@630)) $generated@@63) (= ($generated@@627 ($generated@@192 $generated@@629 $generated@@630)) $generated@@68)))
 :pattern ( ($generated@@192 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@142) (= ($generated@@585 ($generated@@337 $generated@@631)) ($generated@@159 $generated@@631)))
 :pattern ( ($generated@@585 ($generated@@337 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@157) ($generated@@279 $generated@@632 ($generated@@81 0))) (and (= ($generated@@337 ($generated@@160 $generated@@2 $generated@@632)) $generated@@632) ($generated@@144 ($generated@@160 ($generated@@82 $generated@@157 $generated@@4) $generated@@632) ($generated@@81 0))))
 :pattern ( ($generated@@279 $generated@@632 ($generated@@81 0)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@157) (= (type $generated@@634) $generated@@70)) ($generated@@279 $generated@@633 ($generated@@292 $generated@@634))) (and (= ($generated@@337 ($generated@@160 ($generated@@82 $generated@@157 $generated@@4) $generated@@633)) $generated@@633) ($generated@@144 ($generated@@160 ($generated@@82 $generated@@157 $generated@@4) $generated@@633) ($generated@@292 $generated@@634))))
 :pattern ( ($generated@@279 $generated@@633 ($generated@@292 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@157) (= (type $generated@@636) $generated@@70)) ($generated@@279 $generated@@635 ($generated@@297 $generated@@636))) (and (= ($generated@@337 ($generated@@160 ($generated@@82 $generated@@157 $generated@@4) $generated@@635)) $generated@@635) ($generated@@144 ($generated@@160 ($generated@@82 $generated@@157 $generated@@4) $generated@@635) ($generated@@297 $generated@@636))))
 :pattern ( ($generated@@279 $generated@@635 ($generated@@297 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@157) (= (type $generated@@638) $generated@@70)) ($generated@@279 $generated@@637 ($generated@@205 $generated@@638))) (and (= ($generated@@337 ($generated@@160 ($generated@@82 $generated@@157 $generated@@2) $generated@@637)) $generated@@637) ($generated@@144 ($generated@@160 ($generated@@82 $generated@@157 $generated@@2) $generated@@637) ($generated@@205 $generated@@638))))
 :pattern ( ($generated@@279 $generated@@637 ($generated@@205 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@157) (= (type $generated@@640) $generated@@70)) ($generated@@279 $generated@@639 ($generated@@455 $generated@@640))) (and (= ($generated@@337 ($generated@@160 ($generated@@156 $generated@@157) $generated@@639)) $generated@@639) ($generated@@144 ($generated@@160 ($generated@@156 $generated@@157) $generated@@639) ($generated@@455 $generated@@640))))
 :pattern ( ($generated@@279 $generated@@639 ($generated@@455 $generated@@640)))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@627 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@145) $generated@@64))
(assert (= ($generated@@627 $generated@@145) $generated@@69))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@641 ($generated@@205 $generated@@642) $generated@@643) (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@157) (< 0 ($generated ($generated@@87 $generated@@641 $generated@@644)))) ($generated@@307 $generated@@644 $generated@@642 $generated@@643))
 :pattern ( ($generated@@87 $generated@@641 $generated@@644))
))))
 :pattern ( ($generated@@80 $generated@@641 ($generated@@205 $generated@@642) $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) ($generated@@156 $generated@@157)) (= ($generated@@144 ($generated@@155 $generated@@645) $generated@@145) ($generated@@144 $generated@@645 ($generated@@455 $generated@@45))))
 :pattern ( ($generated@@144 ($generated@@155 $generated@@645) $generated@@145))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@142) (= (type $generated@@647) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@306 $generated@@647) (and ($generated@@304 $generated@@646) ($generated@@80 $generated@@646 $generated@@145 $generated@@647)))) ($generated@@80 ($generated@@390 $generated@@646) ($generated@@455 $generated@@45) $generated@@647))
 :pattern ( ($generated@@80 ($generated@@390 $generated@@646) ($generated@@455 $generated@@45) $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@142) (= (type $generated@@649) $generated@@70)) (= (type $generated@@650) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@306 $generated@@650) (and ($generated@@191 $generated@@648) (exists (($generated@@651 T@U) ) (!  (and (= (type $generated@@651) $generated@@70) ($generated@@80 $generated@@648 ($generated@@192 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@80 $generated@@648 ($generated@@192 $generated@@649 $generated@@651) $generated@@650))
))))) ($generated@@307 ($generated@@199 $generated@@648) $generated@@649 $generated@@650))
 :pattern ( ($generated@@307 ($generated@@199 $generated@@648) $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@142) (= (type $generated@@653) $generated@@70)) (= (type $generated@@654) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@306 $generated@@654) (and ($generated@@191 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@70) ($generated@@80 $generated@@652 ($generated@@192 $generated@@655 $generated@@653) $generated@@654))
 :pattern ( ($generated@@80 $generated@@652 ($generated@@192 $generated@@655 $generated@@653) $generated@@654))
))))) ($generated@@307 ($generated@@200 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@307 ($generated@@200 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@142) (= (type $generated@@657) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@306 $generated@@657) (and ($generated@@150 $generated@@656) ($generated@@80 $generated@@656 $generated@@145 $generated@@657)))) ($generated@@80 ($generated@@8 ($generated@@151 $generated@@656)) $generated@@138 $generated@@657))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@151 $generated@@656)) $generated@@138 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@157) (= (type $generated@@659) $generated@@157)) (= ($generated@@278 ($generated@@174 $generated@@658) ($generated@@174 $generated@@659)) ($generated@@174 ($generated@@278 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@278 ($generated@@174 $generated@@658) ($generated@@174 $generated@@659)))
)))
(assert (forall (($generated@@660 Int) ) (! (= ($generated@@337 ($generated@@8 ($generated@@176 $generated@@660))) ($generated@@174 ($generated@@337 ($generated@@8 $generated@@660))))
 :pattern ( ($generated@@337 ($generated@@8 ($generated@@176 $generated@@660))))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@330 ($generated@@176 $generated@@661)) ($generated@@174 ($generated@@330 $generated@@661)))
 :pattern ( ($generated@@330 ($generated@@176 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) ($generated@@156 $generated@@157)) (= ($generated@@155 ($generated@@174 $generated@@662)) ($generated@@174 ($generated@@155 $generated@@662))))
 :pattern ( ($generated@@155 ($generated@@174 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@337 ($generated@@174 $generated@@663)) ($generated@@174 ($generated@@337 $generated@@663)))
 :pattern ( ($generated@@337 ($generated@@174 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@161 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@156 $generated@@665)) (= ($generated@@158 $generated@@664) 0)) (= $generated@@664 ($generated@@327 $generated@@665))))
 :pattern ( ($generated@@158 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@82 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@342 ($generated@@88 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@342 $generated@@666) ($generated ($generated@@87 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@342 ($generated@@88 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert  (=> true (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@142) (or ($generated@@286 $generated@@670) ($generated@@144 $generated@@670 $generated@@145))) (= ($generated@@146 $generated@@670) ($generated@@304 $generated@@670)))
 :pattern ( ($generated@@146 $generated@@670))
))))
(assert  (=> true (forall (($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@142) (or ($generated@@143 $generated@@671) (and ($generated@@144 $generated@@671 $generated@@145) ($generated@@146 $generated@@671)))) (= ($generated@@141 $generated@@671) $generated@@671))
 :pattern ( ($generated@@141 $generated@@671))
))))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@673) $generated@@2)) ($generated@@80 $generated@@673 $generated@@46 $generated@@672))
 :pattern ( ($generated@@80 $generated@@673 $generated@@46 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@675) $generated@@3)) ($generated@@80 $generated@@675 $generated@@47 $generated@@674))
 :pattern ( ($generated@@80 $generated@@675 $generated@@47 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@677) $generated@@4)) ($generated@@80 $generated@@677 $generated@@44 $generated@@676))
 :pattern ( ($generated@@80 $generated@@677 $generated@@44 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@679) $generated@@507)) ($generated@@80 $generated@@679 $generated@@45 $generated@@678))
 :pattern ( ($generated@@80 $generated@@679 $generated@@45 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@681) $generated@@157)) ($generated@@80 $generated@@681 $generated@@48 $generated@@680))
 :pattern ( ($generated@@80 $generated@@681 $generated@@48 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@156 $generated@@157)) (= (type $generated@@683) $generated@@70)) (= ($generated@@144 $generated@@682 ($generated@@455 $generated@@683)) (forall (($generated@@684 Int) ) (!  (=> (and (<= 0 $generated@@684) (< $generated@@684 ($generated@@158 $generated@@682))) ($generated@@279 ($generated@@154 $generated@@682 $generated@@684) $generated@@683))
 :pattern ( ($generated@@154 $generated@@682 $generated@@684))
))))
 :pattern ( ($generated@@144 $generated@@682 ($generated@@455 $generated@@683)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (!  (=> (= (type $generated@@685) ($generated@@156 $generated@@157)) (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@158 $generated@@685))) (< ($generated@@159 ($generated@@160 $generated@@142 ($generated@@154 $generated@@685 $generated@@686))) ($generated@@599 $generated@@685))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@142 ($generated@@154 $generated@@685 $generated@@686))))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) ($generated@@350 $generated@@157 $generated@@157)) (= (type $generated@@688) $generated@@70)) (= (type $generated@@689) $generated@@70)) ($generated@@144 $generated@@687 ($generated@@459 $generated@@688 $generated@@689))) (and (and ($generated@@144 ($generated@@348 $generated@@687) ($generated@@292 $generated@@688)) ($generated@@144 ($generated@@398 $generated@@687) ($generated@@292 $generated@@689))) ($generated@@144 ($generated@@429 $generated@@687) ($generated@@292 ($generated@@192 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@144 $generated@@687 ($generated@@459 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@368 $generated@@157 $generated@@157)) (= (type $generated@@691) $generated@@70)) (= (type $generated@@692) $generated@@70)) ($generated@@144 $generated@@690 ($generated@@467 $generated@@691 $generated@@692))) (and (and ($generated@@144 ($generated@@366 $generated@@690) ($generated@@297 $generated@@691)) ($generated@@144 ($generated@@409 $generated@@690) ($generated@@297 $generated@@692))) ($generated@@144 ($generated@@437 $generated@@690) ($generated@@297 ($generated@@192 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@144 $generated@@690 ($generated@@467 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@2) ($generated@@144 $generated@@693 $generated@@46))
 :pattern ( ($generated@@144 $generated@@693 $generated@@46))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@3) ($generated@@144 $generated@@694 $generated@@47))
 :pattern ( ($generated@@144 $generated@@694 $generated@@47))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@4) ($generated@@144 $generated@@695 $generated@@44))
 :pattern ( ($generated@@144 $generated@@695 $generated@@44))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@507) ($generated@@144 $generated@@696 $generated@@45))
 :pattern ( ($generated@@144 $generated@@696 $generated@@45))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@157) ($generated@@144 $generated@@697 $generated@@48))
 :pattern ( ($generated@@144 $generated@@697 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () Bool)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () Int)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () Int)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 (T@U) Bool)
(declare-fun $generated@@719 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@707) $generated@@142) (= (type $generated@@700) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@698) $generated@@142)) (= (type $generated@@701) $generated@@142)) (= (type $generated@@702) $generated@@142)) (= (type $generated@@703) $generated@@142)) (= (type $generated@@706) $generated@@142)) (= (type $generated@@705) $generated@@142)) (= (type $generated@@712) $generated@@142)) (= (type $generated@@713) $generated@@142)) (= (type $generated@@714) $generated@@142)) (= (type $generated@@715) ($generated@@212 $generated@@83 $generated@@4))) (= (type $generated@@716) $generated@@83)) (= (type $generated@@717) ($generated@@212 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@720  (=> (and (and (not ($generated@@146 $generated@@698)) (<= ($generated@@176 0) $generated@@699)) (and ($generated@@80 $generated@@698 $generated@@145 $generated@@700) (= (ControlFlow 0 7) (- 0 6)))) (not ($generated@@146 $generated@@698)))))
(let (($generated@@721  (=> ($generated@@146 $generated@@698) (=> (and (and ($generated@@80 $generated@@698 $generated@@145 $generated@@700) (= (ControlFlow 0 5) (- 0 4))) ($generated@@286 $generated@@698)) (or ($generated@@146 $generated@@698) ($generated@@304 $generated@@698))))))
(let (($generated@@722  (=> (and (= $generated@@701 $generated@@702) (= $generated@@703 $generated@@701)) (=> (and (and ($generated@@144 $generated@@703 $generated@@145) (= $generated@@698 $generated@@703)) (and ($generated@@80 $generated@@698 $generated@@145 $generated@@700) ($generated@@286 $generated@@698))) (and (=> (= (ControlFlow 0 8) 5) $generated@@721) (=> (= (ControlFlow 0 8) 7) $generated@@720))))))
(let (($generated@@723  (=> (and (and (not $generated@@704) (= $generated@@702 $generated@@705)) (and ($generated@@144 $generated@@702 $generated@@145) (= (ControlFlow 0 10) 8))) $generated@@722)))
(let (($generated@@724  (=> (and (and $generated@@704 (= $generated@@702 $generated@@706)) (and ($generated@@144 $generated@@702 $generated@@145) (= (ControlFlow 0 9) 8))) $generated@@722)))
(let (($generated@@725  (=> (not ($generated@@146 $generated@@707)) (=> (and (<= ($generated@@176 0) $generated@@708) ($generated@@80 $generated@@707 $generated@@145 $generated@@700)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not ($generated@@146 $generated@@707))) (=> (and (not ($generated@@146 $generated@@707)) ($generated@@175 $generated@@707)) (=> (and (and (= $generated@@709 ($generated@@173 $generated@@707)) ($generated@@175 $generated@@707)) (and ($generated@@144 ($generated@@8 $generated@@709) $generated@@138) (= $generated@@708 $generated@@709))) (=> (and (and (and (<= ($generated@@176 0) $generated@@710) (= $generated@@711 $generated@@708)) (and ($generated@@144 ($generated@@8 $generated@@711) $generated@@138) (= $generated@@710 $generated@@711))) (and (and ($generated@@144 $generated@@698 $generated@@145) ($generated@@80 $generated@@698 $generated@@145 $generated@@700)) (and ($generated@@144 $generated@@701 $generated@@145) ($generated@@80 $generated@@701 $generated@@145 $generated@@700)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@724) (=> (= (ControlFlow 0 11) 10) $generated@@723))))))))))
(let (($generated@@726  (=> ($generated@@146 $generated@@707) (=> (and (and ($generated@@80 $generated@@707 $generated@@145 $generated@@700) (= (ControlFlow 0 3) (- 0 2))) ($generated@@286 $generated@@707)) (or ($generated@@146 $generated@@707) ($generated@@304 $generated@@707))))))
(let (($generated@@727  (=> (and (= $generated@@712 $generated@@713) (= $generated@@714 $generated@@712)) (=> (and (and ($generated@@144 $generated@@714 $generated@@145) (= $generated@@707 $generated@@714)) (and ($generated@@80 $generated@@707 $generated@@145 $generated@@700) ($generated@@286 $generated@@707))) (and (=> (= (ControlFlow 0 13) 3) $generated@@726) (=> (= (ControlFlow 0 13) 11) $generated@@725))))))
(let (($generated@@728  (=> (and (and (not $generated@@704) (= $generated@@713 $generated@@705)) (and ($generated@@144 $generated@@713 $generated@@145) (= (ControlFlow 0 15) 13))) $generated@@727)))
(let (($generated@@729  (=> (and (and $generated@@704 (= $generated@@713 $generated@@706)) (and ($generated@@144 $generated@@713 $generated@@145) (= (ControlFlow 0 14) 13))) $generated@@727)))
(let (($generated@@730  (=> (= $generated@@715 ($generated@@266 $generated@@716 $generated@@700 $generated@@60 false)) (=> (and (and ($generated@@144 $generated@@707 $generated@@145) ($generated@@80 $generated@@707 $generated@@145 $generated@@700)) (and ($generated@@144 $generated@@712 $generated@@145) ($generated@@80 $generated@@712 $generated@@145 $generated@@700))) (and (=> (= (ControlFlow 0 16) 14) $generated@@729) (=> (= (ControlFlow 0 16) 15) $generated@@728))))))
(let (($generated@@731 true))
(let (($generated@@732  (=> (= $generated@@717 ($generated@@211 $generated@@716 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 1) $generated@@731) (=> (= (ControlFlow 0 17) 16) $generated@@730)))))
(let (($generated@@733  (=> (and (and (and ($generated@@306 $generated@@700) ($generated@@718 $generated@@700)) (<= ($generated@@176 0) $generated@@719)) (and (and ($generated@@144 $generated@@706 $generated@@145) ($generated@@144 $generated@@705 $generated@@145)) (and (= 3 $generated@@180) (= (ControlFlow 0 18) 17)))) $generated@@732)))
$generated@@733)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
