(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@147 (T@U Int) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@T T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (Int) Int)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@290 (T@U T@U T@U) Bool)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U) Bool)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@312 (Int) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@401 (T@U) Int)
(declare-fun $generated@@402 (T@U) Bool)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (= ($generated@@1 $generated@@143) 14))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@143)) (and ($generated@@142 $generated@@145) ($generated@@142 $generated@@146))) (= ($generated@@141 $generated@@145 $generated@@146) (= ($generated@@144 $generated@@145) ($generated@@144 $generated@@146))))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@145))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@146))
)))
(assert  (and (and (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@149 $generated@@155)) 15)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@149 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@149 $generated@@156))
))) (= ($generated@@1 $generated@@150) 16)) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@147 $generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@147 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@148 $generated@@160)) $generated@@143)
 :pattern ( ($generated@@148 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@U) ) (! (= (type ($generated@@153 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@153 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (= (type $generated@@163) ($generated@@149 $generated@@150)) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@151 $generated@@163))) (< ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@163 $generated@@164))) ($generated@@152 ($generated@@148 $generated@@163)))))
 :pattern ( ($generated@@147 $generated@@163 $generated@@164) ($generated@@148 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@81 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@81 0)))
)))
(assert (= (type $generated@@170) $generated@@70))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@143) (or ($generated@@169 $generated@@171) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@171 $generated@@170)))) true)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@70) (= (type $generated@@177) $generated@@70)) (= (type $generated@@178) $generated@@143)) ($generated@@165 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@165 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@150)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@150)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@143) (= (type $generated@@185) $generated@@143)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@70)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@190) $generated@@70)) ($generated@@165 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@165 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@83 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@73 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@242) ($generated@@72 $generated@@4))) (= (type $generated@@244) $generated@@83)) (= (type $generated@@245) ($generated@@72 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@193 $generated@@83 $generated@@4))
 :pattern ( ($generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@73 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@83) (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@254) ($generated@@72 $generated@@4))) (= (type $generated@@256) $generated@@83)) (= (type $generated@@257) ($generated@@72 $generated@@258))) (= ($generated@@0 ($generated@@191 ($generated@@247 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@191 ($generated@@247 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@259 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@259 $generated@@261))
)))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@143) (or ($generated@@169 ($generated@@259 $generated@@263)) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@263 $generated@@170)))) (= ($generated@@168 ($generated@@259 $generated@@263)) ($generated@@0 ($generated@@259 ($generated@@11 ($generated@@260 ($generated@@259 $generated@@263)))))))
 :weight 3
 :pattern ( ($generated@@168 ($generated@@259 $generated@@263)))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@143)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@150)) (= (type $generated@@271) $generated@@150)) (= ($generated@@165 ($generated@@264 $generated@@270 $generated@@271) ($generated@@173 $generated@@268 $generated@@269))  (and ($generated@@265 $generated@@270 $generated@@268) ($generated@@265 $generated@@271 $generated@@269))))
 :pattern ( ($generated@@165 ($generated@@264 $generated@@270 $generated@@271) ($generated@@173 $generated@@268 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@143) (= (type $generated@@273) $generated@@143)) (= ($generated@@179 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@179 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@143) (= (type $generated@@275) $generated@@143)) (= ($generated@@141 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@141 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@70)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@279) $generated@@70)) (= ($generated@@165 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@150) ($generated@@0 ($generated@@87 $generated@@278 $generated@@280))) ($generated@@265 $generated@@280 $generated@@279))
 :pattern ( ($generated@@87 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@165 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@70)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@284) $generated@@70)) (= ($generated@@165 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@150) ($generated@@0 ($generated@@87 $generated@@283 $generated@@285))) ($generated@@265 $generated@@285 $generated@@284))
 :pattern ( ($generated@@87 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@165 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 Int) ) (! (= ($generated@@286 $generated@@287) $generated@@287)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@259 $generated@@288) $generated@@288)
 :pattern ( ($generated@@259 $generated@@288))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) $generated@@70) (= (type $generated@@292) $generated@@70)) (= (type $generated@@293) $generated@@150)) (= (type $generated@@294) $generated@@150)) (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@289 $generated@@295)) (= ($generated@@80 ($generated@@264 $generated@@293 $generated@@294) ($generated@@173 $generated@@291 $generated@@292) $generated@@295)  (and ($generated@@290 $generated@@293 $generated@@291 $generated@@295) ($generated@@290 $generated@@294 $generated@@292 $generated@@295))))
 :pattern ( ($generated@@80 ($generated@@264 $generated@@293 $generated@@294) ($generated@@173 $generated@@291 $generated@@292) $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@74)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@143) (= ($generated@@172 $generated@@298) (= ($generated@@296 $generated@@298) $generated@@62)))
 :pattern ( ($generated@@172 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@143) (= ($generated@@142 $generated@@299) (= ($generated@@296 $generated@@299) $generated@@64)))
 :pattern ( ($generated@@142 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@143) (= ($generated@@260 $generated@@300) (= ($generated@@296 $generated@@300) $generated@@66)))
 :pattern ( ($generated@@260 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@154 (type $generated@@302))))
 (=> (and (= (type $generated@@302) ($generated@@149 $generated@@304)) (= (type $generated@@303) ($generated@@149 $generated@@304))) (= ($generated@@301 $generated@@302 $generated@@303)  (and (= ($generated@@151 $generated@@302) ($generated@@151 $generated@@303)) (forall (($generated@@305 Int) ) (!  (=> (and (<= 0 $generated@@305) (< $generated@@305 ($generated@@151 $generated@@302))) (= ($generated@@147 $generated@@302 $generated@@305) ($generated@@147 $generated@@303 $generated@@305)))
 :pattern ( ($generated@@147 $generated@@302 $generated@@305))
 :pattern ( ($generated@@147 $generated@@303 $generated@@305))
))))))
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@143) ($generated@@172 $generated@@306)) (exists (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (and (and (= (type $generated@@307) $generated@@150) (= (type $generated@@308) $generated@@150)) (= $generated@@306 ($generated@@264 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@307)
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@172 $generated@@306))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@149 $generated@@310))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@151 ($generated@@309 $generated@@311)) 0)
 :pattern ( ($generated@@309 $generated@@311))
)))
(assert (forall (($generated@@313 Int) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@143)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@143) ($generated@@142 $generated@@314)) (exists (($generated@@315 Int) ) (= $generated@@314 ($generated@@312 $generated@@315))))
 :pattern ( ($generated@@142 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@143) ($generated@@260 $generated@@316)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) ($generated@@149 $generated@@150)) (= $generated@@316 ($generated@@148 $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@260 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@2) (= ($generated@@165 $generated@@318 $generated@@138) (<= ($generated@@286 0) ($generated $generated@@318))))
 :pattern ( ($generated@@165 $generated@@318 $generated@@138))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@150)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@70) (= (type $generated@@323) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@290 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@80 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@290 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@82 $generated@@326 $generated@@2))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@85 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@82 $generated@@328 $generated@@2)) (and (= (= ($generated@@324 $generated@@327) 0) (= $generated@@327 ($generated@@325 $generated@@328))) (=> (not (= ($generated@@324 $generated@@327) 0)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (< 0 ($generated ($generated@@87 $generated@@327 $generated@@329))))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 18)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@82 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 19)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@87 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@87 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@85 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@82 $generated@@367 $generated@@2)) (= ($generated@@187 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@87 $generated@@366 $generated@@368))) (<= ($generated ($generated@@87 $generated@@366 $generated@@368)) ($generated@@324 $generated@@366))))
 :pattern ( ($generated@@87 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@187 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@265 $generated@@369 $generated@@138)) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@369)) $generated@@369) ($generated@@165 ($generated@@153 $generated@@2 $generated@@369) $generated@@138)))
 :pattern ( ($generated@@265 $generated@@369 $generated@@138))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@150) ($generated@@265 $generated@@370 $generated@@170)) (and (= ($generated@@319 ($generated@@153 $generated@@143 $generated@@370)) $generated@@370) ($generated@@165 ($generated@@153 $generated@@143 $generated@@370) $generated@@170)))
 :pattern ( ($generated@@265 $generated@@370 $generated@@170))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@165 ($generated@@312 $generated@@371) $generated@@170) ($generated@@165 ($generated@@8 $generated@@371) $generated@@138))
 :pattern ( ($generated@@165 ($generated@@312 $generated@@371) $generated@@170))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) ($generated@@149 $generated@@150))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@374) $generated@@143) (= (type $generated@@375) $generated@@143)) (and ($generated@@260 $generated@@374) ($generated@@260 $generated@@375))) (= ($generated@@141 $generated@@374 $generated@@375) ($generated@@301 ($generated@@372 $generated@@374) ($generated@@372 $generated@@375))))
 :pattern ( ($generated@@141 $generated@@374 $generated@@375) ($generated@@260 $generated@@374))
 :pattern ( ($generated@@141 $generated@@374 $generated@@375) ($generated@@260 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@334 (type $generated@@376))))
(let (($generated@@378 ($generated@@333 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@332 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@331 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@330 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@334 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@82 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@334 (type $generated@@383))))
(let (($generated@@385 ($generated@@333 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@332 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@331 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@352 (type $generated@@387))))
(let (($generated@@389 ($generated@@351 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@350 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@349 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@348 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@352 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@82 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@352 (type $generated@@394))))
(let (($generated@@396 ($generated@@351 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@350 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@349 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@399) $generated@@70)) (= ($generated@@165 $generated@@398 ($generated@@186 $generated@@399)) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@398 $generated@@400)))) ($generated@@265 $generated@@400 $generated@@399))
 :pattern ( ($generated@@87 $generated@@398 $generated@@400))
))))
 :pattern ( ($generated@@165 $generated@@398 ($generated@@186 $generated@@399)))
)))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@143) (or ($generated@@402 $generated@@403) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@403 $generated@@170) (not ($generated@@168 $generated@@403)))))) (= ($generated@@401 $generated@@403) ($generated@@144 $generated@@403)))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@143) (or ($generated@@402 $generated@@404) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@404 $generated@@170) (not ($generated@@168 $generated@@404)))))) (<= ($generated@@286 0) ($generated@@401 $generated@@404)))
 :pattern ( ($generated@@401 $generated@@404))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@406) $generated@@70)) (= (type $generated@@407) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@405 ($generated@@276 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@87 $generated@@405 $generated@@408))) ($generated@@290 $generated@@408 $generated@@406 $generated@@407))
 :pattern ( ($generated@@87 $generated@@405 $generated@@408))
))))
 :pattern ( ($generated@@80 $generated@@405 ($generated@@276 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@409) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@410) $generated@@70)) (= (type $generated@@411) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@409 ($generated@@281 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@87 $generated@@409 $generated@@412))) ($generated@@290 $generated@@412 $generated@@410 $generated@@411))
 :pattern ( ($generated@@87 $generated@@409 $generated@@412))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@281 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated ($generated@@87 ($generated@@325 $generated@@414) $generated@@413)) 0))
 :pattern ( (let (($generated@@414 (type $generated@@413)))
($generated@@87 ($generated@@325 $generated@@414) $generated@@413)))
)))
(assert  (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@417)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@415 $generated@@417))
)) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@334 (type $generated@@418))))
(let (($generated@@420 ($generated@@333 (type $generated@@418))))
(= (type ($generated@@416 $generated@@418)) ($generated@@82 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@422) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@415 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@421) ($generated@@180 ($generated@@153 $generated@@143 $generated@@422)))) (= ($generated@@87 ($generated@@416 $generated@@421) ($generated@@180 ($generated@@153 $generated@@143 $generated@@422))) ($generated@@181 ($generated@@153 $generated@@143 $generated@@422))))))
 :pattern ( ($generated@@87 ($generated@@415 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@352 (type $generated@@426))))
(let (($generated@@428 ($generated@@351 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@82 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@430) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@87 ($generated@@348 $generated@@429) ($generated@@180 ($generated@@153 $generated@@143 $generated@@430)))) (= ($generated@@87 ($generated@@424 $generated@@429) ($generated@@180 ($generated@@153 $generated@@143 $generated@@430))) ($generated@@181 ($generated@@153 $generated@@143 $generated@@430))))))
 :pattern ( ($generated@@87 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@333 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@332 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@87 ($generated@@416 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@431) $generated@@435))
 :pattern ( ($generated@@87 ($generated@@416 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@351 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@350 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@87 ($generated@@348 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@87 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@436) $generated@@440))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@443) ($generated@@149 $generated@@150)) (= (type $generated@@444) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@289 $generated@@444)) (= ($generated@@80 ($generated@@148 $generated@@443) $generated@@170 $generated@@444) ($generated@@80 $generated@@443 ($generated@@441 $generated@@45) $generated@@444)))
 :pattern ( ($generated@@80 ($generated@@148 $generated@@443) $generated@@170 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@449) $generated@@70)) (= (type $generated@@450) $generated@@70)) (= (type $generated@@451) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@448) $generated@@452))) (and ($generated@@290 ($generated@@87 ($generated@@416 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@290 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@87 ($generated@@416 $generated@@448) $generated@@452))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@80 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@457) $generated@@70)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@456) $generated@@460))) (and ($generated@@290 ($generated@@87 ($generated@@424 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@290 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@456) $generated@@460))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@80 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@154 (type $generated@@461))))
 (=> (and (and (= (type $generated@@461) ($generated@@149 $generated@@463)) (= (type $generated@@462) ($generated@@149 $generated@@463))) ($generated@@301 $generated@@461 $generated@@462)) (= $generated@@461 $generated@@462)))
 :pattern ( ($generated@@301 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 Int) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@289 $generated@@465)) (= ($generated@@80 ($generated@@312 $generated@@464) $generated@@170 $generated@@465) ($generated@@80 ($generated@@8 $generated@@464) $generated@@138 $generated@@465)))
 :pattern ( ($generated@@80 ($generated@@312 $generated@@464) $generated@@170 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@143) ($generated@@165 $generated@@466 $generated@@170)) (or ($generated@@142 $generated@@466) ($generated@@260 $generated@@466)))
 :pattern ( ($generated@@260 $generated@@466) ($generated@@165 $generated@@466 $generated@@170))
 :pattern ( ($generated@@142 $generated@@466) ($generated@@165 $generated@@466 $generated@@170))
)))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@82 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@352 (type $generated@@469))))
(let (($generated@@471 ($generated@@351 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@350 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@349 $generated@@471 $generated@@470)) (= ($generated@@348 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@348 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@352 (type $generated@@472))))
(let (($generated@@474 ($generated@@351 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@350 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@349 $generated@@474 $generated@@473)) (= ($generated@@391 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@391 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@352 (type $generated@@475))))
(let (($generated@@477 ($generated@@351 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@350 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@349 $generated@@477 $generated@@476)) (= ($generated@@423 $generated@@475) ($generated@@467 $generated@@150))))))
 :pattern ( ($generated@@423 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@334 (type $generated@@478))))
(let (($generated@@480 ($generated@@333 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@332 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@331 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@150) (= (type $generated@@482) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@415 $generated@@478) ($generated@@319 ($generated@@264 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@415 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@352 (type $generated@@483))))
(let (($generated@@485 ($generated@@351 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@350 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@349 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@150) (= (type $generated@@487) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@423 $generated@@483) ($generated@@319 ($generated@@264 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@423 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@150) ($generated@@265 $generated@@488 $generated@@46)) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@488)) $generated@@488) ($generated@@165 ($generated@@153 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@265 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@150) ($generated@@265 $generated@@489 $generated@@47)) (and (= ($generated@@319 ($generated@@153 $generated@@3 $generated@@489)) $generated@@489) ($generated@@165 ($generated@@153 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@265 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@150) ($generated@@265 $generated@@490 $generated@@44)) (and (= ($generated@@319 ($generated@@153 $generated@@4 $generated@@490)) $generated@@490) ($generated@@165 ($generated@@153 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@265 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 20))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@150) ($generated@@265 $generated@@492 $generated@@45)) (and (= ($generated@@319 ($generated@@153 $generated@@491 $generated@@492)) $generated@@492) ($generated@@165 ($generated@@153 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@265 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@70) (= ($generated@@265 ($generated@@319 $generated@@493) $generated@@494) ($generated@@165 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@265 ($generated@@319 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@85 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@82 $generated@@496 $generated@@2)) (<= 0 ($generated@@324 $generated@@495))))
 :pattern ( ($generated@@324 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@154 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@149 $generated@@498)) (<= 0 ($generated@@151 $generated@@497))))
 :pattern ( ($generated@@151 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@445 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@445 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@445 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@445 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@78 ($generated@@445 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@445 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@453 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@453 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@78 ($generated@@453 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@453 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@150)) (= ($generated@@296 ($generated@@264 $generated@@519 $generated@@520)) $generated@@62))
 :pattern ( ($generated@@264 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@70) (= (type $generated@@524) $generated@@70)) (= ($generated@@521 ($generated@@173 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@173 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@525 ($generated@@173 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@173 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (= ($generated@@180 ($generated@@264 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@264 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@150)) (= ($generated@@181 ($generated@@264 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@264 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@149 $generated@@150)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@533 ($generated@@441 $generated@@534) $generated@@535) (forall (($generated@@536 Int) ) (!  (=> (and (<= 0 $generated@@536) (< $generated@@536 ($generated@@151 $generated@@533))) ($generated@@290 ($generated@@147 $generated@@533 $generated@@536) $generated@@534 $generated@@535))
 :pattern ( ($generated@@147 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@80 $generated@@533 ($generated@@441 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@537 ($generated@@81 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@81 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@276 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@276 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@78 ($generated@@276 $generated@@542)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@543 ($generated@@281 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@281 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@78 ($generated@@281 $generated@@546)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@547 ($generated@@186 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@186 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@78 ($generated@@186 $generated@@550)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@70)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@70) (= ($generated@@551 ($generated@@441 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@441 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@70) (= ($generated@@78 ($generated@@441 $generated@@554)) $generated@@57))
 :pattern ( ($generated@@441 $generated@@554))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@296 ($generated@@312 $generated@@555)) $generated@@64)
 :pattern ( ($generated@@312 $generated@@555))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@144 ($generated@@312 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@312 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) ($generated@@149 $generated@@150)) (= ($generated@@296 ($generated@@148 $generated@@557)) $generated@@66))
 :pattern ( ($generated@@148 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) ($generated@@149 $generated@@150)) (= ($generated@@372 ($generated@@148 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@148 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(= ($generated@@153 $generated@@560 ($generated@@319 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@319 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@70)) (= ($generated@@165 $generated@@561 ($generated@@445 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@561) $generated@@564))) (and ($generated@@265 ($generated@@87 ($generated@@416 $generated@@561) $generated@@564) $generated@@563) ($generated@@265 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@87 ($generated@@416 $generated@@561) $generated@@564))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@165 $generated@@561 ($generated@@445 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) $generated@@70)) (= ($generated@@165 $generated@@565 ($generated@@453 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@565) $generated@@568))) (and ($generated@@265 ($generated@@87 ($generated@@424 $generated@@565) $generated@@568) $generated@@567) ($generated@@265 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@565) $generated@@568))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@165 $generated@@565 ($generated@@453 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@150) (= (type $generated@@571) $generated@@150)) (< ($generated@@569 $generated@@570) ($generated@@152 ($generated@@264 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@264 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@150) (= (type $generated@@573) $generated@@150)) (< ($generated@@569 $generated@@573) ($generated@@152 ($generated@@264 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@264 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@150) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) $generated@@70)) ($generated@@265 $generated@@574 ($generated@@445 $generated@@575 $generated@@576))) (and (= ($generated@@319 ($generated@@153 ($generated@@332 $generated@@150 $generated@@150) $generated@@574)) $generated@@574) ($generated@@165 ($generated@@153 ($generated@@332 $generated@@150 $generated@@150) $generated@@574) ($generated@@445 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@265 $generated@@574 ($generated@@445 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) $generated@@70)) ($generated@@265 $generated@@577 ($generated@@453 $generated@@578 $generated@@579))) (and (= ($generated@@319 ($generated@@153 ($generated@@350 $generated@@150 $generated@@150) $generated@@577)) $generated@@577) ($generated@@165 ($generated@@153 ($generated@@350 $generated@@150 $generated@@150) $generated@@577) ($generated@@453 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@265 $generated@@577 ($generated@@453 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@70) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@150)) ($generated@@265 $generated@@582 ($generated@@173 $generated@@580 $generated@@581))) (and (= ($generated@@319 ($generated@@153 $generated@@143 $generated@@582)) $generated@@582) ($generated@@165 ($generated@@153 $generated@@143 $generated@@582) ($generated@@173 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@265 $generated@@582 ($generated@@173 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) ($generated@@149 $generated@@150)) (< ($generated@@583 $generated@@584) ($generated@@152 ($generated@@148 $generated@@584))))
 :pattern ( ($generated@@148 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@87 ($generated@@467 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@87 ($generated@@467 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@75)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@70)) (and (= ($generated@@78 ($generated@@173 $generated@@589 $generated@@590)) $generated@@63) (= ($generated@@587 ($generated@@173 $generated@@589 $generated@@590)) $generated@@68)))
 :pattern ( ($generated@@173 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@143) (= ($generated@@569 ($generated@@319 $generated@@591)) ($generated@@152 $generated@@591)))
 :pattern ( ($generated@@569 ($generated@@319 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@150) ($generated@@265 $generated@@592 ($generated@@81 0))) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@592)) $generated@@592) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@592) ($generated@@81 0))))
 :pattern ( ($generated@@265 $generated@@592 ($generated@@81 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@70)) ($generated@@265 $generated@@593 ($generated@@276 $generated@@594))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@593)) $generated@@593) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@593) ($generated@@276 $generated@@594))))
 :pattern ( ($generated@@265 $generated@@593 ($generated@@276 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@70)) ($generated@@265 $generated@@595 ($generated@@281 $generated@@596))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@595)) $generated@@595) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@595) ($generated@@281 $generated@@596))))
 :pattern ( ($generated@@265 $generated@@595 ($generated@@281 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@70)) ($generated@@265 $generated@@597 ($generated@@186 $generated@@598))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@2) $generated@@597)) $generated@@597) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@2) $generated@@597) ($generated@@186 $generated@@598))))
 :pattern ( ($generated@@265 $generated@@597 ($generated@@186 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@150) (= (type $generated@@600) $generated@@70)) ($generated@@265 $generated@@599 ($generated@@441 $generated@@600))) (and (= ($generated@@319 ($generated@@153 ($generated@@149 $generated@@150) $generated@@599)) $generated@@599) ($generated@@165 ($generated@@153 ($generated@@149 $generated@@150) $generated@@599) ($generated@@441 $generated@@600))))
 :pattern ( ($generated@@265 $generated@@599 ($generated@@441 $generated@@600)))
)))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@143) (or ($generated@@169 $generated@@601) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@601 $generated@@170)))) (= ($generated@@168 $generated@@601) ($generated@@260 $generated@@601)))
 :pattern ( ($generated@@168 $generated@@601))
))))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@587 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@170) $generated@@65))
(assert (= ($generated@@587 $generated@@170) $generated@@69))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@603) $generated@@70)) (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@602 ($generated@@186 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@602 $generated@@605)))) ($generated@@290 $generated@@605 $generated@@603 $generated@@604))
 :pattern ( ($generated@@87 $generated@@602 $generated@@605))
))))
 :pattern ( ($generated@@80 $generated@@602 ($generated@@186 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) ($generated@@149 $generated@@150)) (= ($generated@@165 ($generated@@148 $generated@@606) $generated@@170) ($generated@@165 $generated@@606 ($generated@@441 $generated@@45))))
 :pattern ( ($generated@@165 ($generated@@148 $generated@@606) $generated@@170))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@143) (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@289 $generated@@608) (and ($generated@@260 $generated@@607) ($generated@@80 $generated@@607 $generated@@170 $generated@@608)))) ($generated@@80 ($generated@@372 $generated@@607) ($generated@@441 $generated@@45) $generated@@608))
 :pattern ( ($generated@@80 ($generated@@372 $generated@@607) ($generated@@441 $generated@@45) $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@143) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@289 $generated@@611) (and ($generated@@172 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@70) ($generated@@80 $generated@@609 ($generated@@173 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@80 $generated@@609 ($generated@@173 $generated@@610 $generated@@612) $generated@@611))
))))) ($generated@@290 ($generated@@180 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@290 ($generated@@180 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@143) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@289 $generated@@615) (and ($generated@@172 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@70) ($generated@@80 $generated@@613 ($generated@@173 $generated@@616 $generated@@614) $generated@@615))
 :pattern ( ($generated@@80 $generated@@613 ($generated@@173 $generated@@616 $generated@@614) $generated@@615))
))))) ($generated@@290 ($generated@@181 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@290 ($generated@@181 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@143) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@289 $generated@@618) (and ($generated@@142 $generated@@617) ($generated@@80 $generated@@617 $generated@@170 $generated@@618)))) ($generated@@80 ($generated@@8 ($generated@@144 $generated@@617)) $generated@@138 $generated@@618))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@144 $generated@@617)) $generated@@138 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@150) (= (type $generated@@620) $generated@@150)) (= ($generated@@264 ($generated@@259 $generated@@619) ($generated@@259 $generated@@620)) ($generated@@259 ($generated@@264 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@264 ($generated@@259 $generated@@619) ($generated@@259 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ) (! (= ($generated@@319 ($generated@@8 ($generated@@286 $generated@@621))) ($generated@@259 ($generated@@319 ($generated@@8 $generated@@621))))
 :pattern ( ($generated@@319 ($generated@@8 ($generated@@286 $generated@@621))))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@312 ($generated@@286 $generated@@622)) ($generated@@259 ($generated@@312 $generated@@622)))
 :pattern ( ($generated@@312 ($generated@@286 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) ($generated@@149 $generated@@150)) (= ($generated@@148 ($generated@@259 $generated@@623)) ($generated@@259 ($generated@@148 $generated@@623))))
 :pattern ( ($generated@@148 ($generated@@259 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@319 ($generated@@259 $generated@@624)) ($generated@@259 ($generated@@319 $generated@@624)))
 :pattern ( ($generated@@319 ($generated@@259 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@154 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@149 $generated@@626)) (= ($generated@@151 $generated@@625) 0)) (= $generated@@625 ($generated@@309 $generated@@626))))
 :pattern ( ($generated@@151 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@628)))
 (=> (and (and (= (type $generated@@627) ($generated@@82 $generated@@630 $generated@@2)) (= (type $generated@@629) $generated@@2)) (<= 0 ($generated $generated@@629))) (= ($generated@@324 ($generated@@88 $generated@@627 $generated@@628 $generated@@629)) (+ (- ($generated@@324 $generated@@627) ($generated ($generated@@87 $generated@@627 $generated@@628))) ($generated $generated@@629)))))
 :pattern ( ($generated@@324 ($generated@@88 $generated@@627 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@2)) ($generated@@80 $generated@@632 $generated@@46 $generated@@631))
 :pattern ( ($generated@@80 $generated@@632 $generated@@46 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@3)) ($generated@@80 $generated@@634 $generated@@47 $generated@@633))
 :pattern ( ($generated@@80 $generated@@634 $generated@@47 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@4)) ($generated@@80 $generated@@636 $generated@@44 $generated@@635))
 :pattern ( ($generated@@80 $generated@@636 $generated@@44 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@638) $generated@@491)) ($generated@@80 $generated@@638 $generated@@45 $generated@@637))
 :pattern ( ($generated@@80 $generated@@638 $generated@@45 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@640) $generated@@150)) ($generated@@80 $generated@@640 $generated@@48 $generated@@639))
 :pattern ( ($generated@@80 $generated@@640 $generated@@48 $generated@@639))
)))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@143) (or ($generated@@402 ($generated@@259 $generated@@641)) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@641 $generated@@170) (not ($generated@@0 ($generated@@259 ($generated@@11 ($generated@@168 ($generated@@259 $generated@@641)))))))))) (= ($generated@@401 ($generated@@259 $generated@@641)) ($generated@@286 ($generated@@144 ($generated@@259 $generated@@641)))))
 :weight 3
 :pattern ( ($generated@@401 ($generated@@259 $generated@@641)))
))))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@149 $generated@@150)) (= (type $generated@@643) $generated@@70)) (= ($generated@@165 $generated@@642 ($generated@@441 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@151 $generated@@642))) ($generated@@265 ($generated@@147 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@147 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@165 $generated@@642 ($generated@@441 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@149 $generated@@150)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@151 $generated@@645))) (< ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@645 $generated@@646))) ($generated@@583 $generated@@645))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@70)) ($generated@@165 $generated@@647 ($generated@@445 $generated@@648 $generated@@649))) (and (and ($generated@@165 ($generated@@330 $generated@@647) ($generated@@276 $generated@@648)) ($generated@@165 ($generated@@380 $generated@@647) ($generated@@276 $generated@@649))) ($generated@@165 ($generated@@415 $generated@@647) ($generated@@276 ($generated@@173 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@165 $generated@@647 ($generated@@445 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@651) $generated@@70)) (= (type $generated@@652) $generated@@70)) ($generated@@165 $generated@@650 ($generated@@453 $generated@@651 $generated@@652))) (and (and ($generated@@165 ($generated@@348 $generated@@650) ($generated@@281 $generated@@651)) ($generated@@165 ($generated@@391 $generated@@650) ($generated@@281 $generated@@652))) ($generated@@165 ($generated@@423 $generated@@650) ($generated@@281 ($generated@@173 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@165 $generated@@650 ($generated@@453 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@165 $generated@@653 $generated@@46))
 :pattern ( ($generated@@165 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@165 $generated@@654 $generated@@47))
 :pattern ( ($generated@@165 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@165 $generated@@655 $generated@@44))
 :pattern ( ($generated@@165 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@491) ($generated@@165 $generated@@656 $generated@@45))
 :pattern ( ($generated@@165 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@150) ($generated@@165 $generated@@657 $generated@@48))
 :pattern ( ($generated@@165 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@658) ($generated@@193 $generated@@83 $generated@@4)) (= (type $generated@@659) $generated@@83)) (= (type $generated@@660) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@661) $generated@@143)) (= (type $generated@@662) ($generated@@193 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@664  (=> (and (= $generated@@658 ($generated@@247 $generated@@659 $generated@@660 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@142 $generated@@661))))
(let (($generated@@665 true))
(let (($generated@@666  (=> (and (and (= $generated@@662 ($generated@@192 $generated@@659 $generated@@660 $generated@@60 false)) ($generated@@80 $generated@@661 $generated@@170 $generated@@660)) (and ($generated@@169 $generated@@661) (not ($generated@@168 $generated@@661)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@665) (=> (= (ControlFlow 0 4) 3) $generated@@664)))))
(let (($generated@@667  (=> (and ($generated@@289 $generated@@660) ($generated@@663 $generated@@660)) (=> (and (and ($generated@@165 $generated@@661 $generated@@170) ($generated@@80 $generated@@661 $generated@@170 $generated@@660)) (and (= 1 $generated@@167) (= (ControlFlow 0 5) 4))) $generated@@666))))
$generated@@667)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
