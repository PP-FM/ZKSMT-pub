(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (Int) Int)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) Bool)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Bool)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Bool)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (= (type $generated@@141) $generated@@69))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@79 $generated@@142 $generated@@141 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@82)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@82) (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@80 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 14) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@69)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@69)) ($generated@@148 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@148 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@82 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@72 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@82) (= (type $generated@@221) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@222) ($generated@@71 $generated@@4))) (= (type $generated@@224) $generated@@82)) (= (type $generated@@225) ($generated@@71 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (= (type $generated@@227) $generated@@69))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@82) (= (type $generated@@229) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@228 $generated@@227 $generated@@229) ($generated@@79 $generated@@228 $generated@@144 $generated@@229)))
 :pattern ( ($generated@@79 $generated@@228 $generated@@227 $generated@@229))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@152)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@69) (= (type $generated@@235) $generated@@69)) (= (type $generated@@236) $generated@@161)) (= (type $generated@@237) $generated@@161)) (= ($generated@@148 ($generated@@230 $generated@@236 $generated@@237) ($generated@@151 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@148 ($generated@@230 $generated@@236 $generated@@237) ($generated@@151 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) (= (type $generated@@239) $generated@@152)) (= ($generated@@158 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@158 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@69)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@243) $generated@@69)) (= ($generated@@148 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@161) ($generated@@0 ($generated@@86 $generated@@242 $generated@@244))) ($generated@@231 $generated@@244 $generated@@243))
 :pattern ( ($generated@@86 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@148 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@69)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@248) $generated@@69)) (= ($generated@@148 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@161) ($generated@@0 ($generated@@86 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@86 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@148 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 Int) ) (! (= ($generated@@250 $generated@@251) $generated@@251)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@69) (= (type $generated@@259) $generated@@69)) (= (type $generated@@260) $generated@@161)) (= (type $generated@@261) $generated@@161)) (= (type $generated@@262) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@256 $generated@@262)) (= ($generated@@79 ($generated@@230 $generated@@260 $generated@@261) ($generated@@151 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@79 ($generated@@230 $generated@@260 $generated@@261) ($generated@@151 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@73)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@152) (= ($generated@@150 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@62)))
 :pattern ( ($generated@@150 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@152) ($generated@@150 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@161) (= (type $generated@@268) $generated@@161)) (= $generated@@266 ($generated@@230 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@150 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert  (=> true (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@82) (or ($generated@@278 $generated@@280) (and (and (not (= $generated@@280 $generated@@145)) ($generated@@148 $generated@@280 $generated@@227)) (not ($generated@@279 $generated@@280))))) (<= ($generated@@250 0) ($generated@@277 $generated@@280)))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@2) (= ($generated@@148 $generated@@281 $generated@@141) (<= ($generated@@250 0) ($generated $generated@@281))))
 :pattern ( ($generated@@148 $generated@@281 $generated@@141))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@161)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@69) (= (type $generated@@286) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@257 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@79 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@257 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@288) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@289) $generated@@161)) (= (type $generated@@290) $generated@@69)) ($generated@@137 $generated@@287 $generated@@288)) ($generated@@257 $generated@@289 $generated@@290 $generated@@287)) ($generated@@257 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@137 $generated@@287 $generated@@288) ($generated@@257 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@292) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@294) $generated@@69)) ($generated@@137 $generated@@291 $generated@@292)) ($generated@@79 $generated@@293 $generated@@294 $generated@@291)) ($generated@@79 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@137 $generated@@291 $generated@@292) ($generated@@79 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@81 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@84 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@81 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@86 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@81 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@86 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@86 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@81 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@86 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@86 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@84 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@81 $generated@@338 $generated@@2)) (= ($generated@@167 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@86 $generated@@337 $generated@@339))) (<= ($generated ($generated@@86 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@86 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@167 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@161) ($generated@@231 $generated@@343 $generated@@141)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@340 $generated@@2 $generated@@343) $generated@@141)))
 :pattern ( ($generated@@231 $generated@@343 $generated@@141))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@161) ($generated@@231 $generated@@344 $generated@@227)) (and (= ($generated@@282 ($generated@@340 $generated@@82 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@340 $generated@@82 $generated@@344) $generated@@227)))
 :pattern ( ($generated@@231 $generated@@344 $generated@@227))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@161) ($generated@@231 $generated@@345 $generated@@144)) (and (= ($generated@@282 ($generated@@340 $generated@@82 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@340 $generated@@82 $generated@@345) $generated@@144)))
 :pattern ( ($generated@@231 $generated@@345 $generated@@144))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@82) (= ($generated@@148 $generated@@346 $generated@@227)  (and ($generated@@148 $generated@@346 $generated@@144) (not (= $generated@@346 $generated@@145)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@227))
)))
(assert  (=> true (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@82) (or ($generated@@347 $generated@@348) (and (not (= $generated@@348 $generated@@145)) ($generated@@148 $generated@@348 $generated@@227)))) true)
 :pattern ( ($generated@@279 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(let (($generated@@351 ($generated@@304 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@303 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@302 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@86 ($generated@@301 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@301 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@305 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@81 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@305 (type $generated@@356))))
(let (($generated@@358 ($generated@@304 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@303 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@302 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@86 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(let (($generated@@362 ($generated@@322 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@321 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@320 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@319 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@319 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@323 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@81 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@323 (type $generated@@367))))
(let (($generated@@369 ($generated@@322 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@321 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@320 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@86 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@372) $generated@@69)) (= ($generated@@148 $generated@@371 ($generated@@166 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@371 $generated@@373)))) ($generated@@231 $generated@@373 $generated@@372))
 :pattern ( ($generated@@86 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@148 $generated@@371 ($generated@@166 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@375) $generated@@69)) (= (type $generated@@376) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@374 ($generated@@240 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@161) ($generated@@0 ($generated@@86 $generated@@374 $generated@@377))) ($generated@@257 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@86 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@79 $generated@@374 ($generated@@240 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@379) $generated@@69)) (= (type $generated@@380) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@378 ($generated@@245 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@161) ($generated@@0 ($generated@@86 $generated@@378 $generated@@381))) ($generated@@257 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@86 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@79 $generated@@378 ($generated@@245 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@86 ($generated@@296 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@86 ($generated@@296 $generated@@383) $generated@@382)))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@305 (type $generated@@387))))
(let (($generated@@389 ($generated@@304 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@81 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@303 $generated@@161 $generated@@161)) (= (type $generated@@391) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@86 ($generated@@301 $generated@@390) ($generated@@159 ($generated@@340 $generated@@152 $generated@@391)))) (= ($generated@@86 ($generated@@385 $generated@@390) ($generated@@159 ($generated@@340 $generated@@152 $generated@@391))) ($generated@@160 ($generated@@340 $generated@@152 $generated@@391))))))
 :pattern ( ($generated@@86 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@323 (type $generated@@395))))
(let (($generated@@397 ($generated@@322 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@81 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@321 $generated@@161 $generated@@161)) (= (type $generated@@399) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@86 ($generated@@319 $generated@@398) ($generated@@159 ($generated@@340 $generated@@152 $generated@@399)))) (= ($generated@@86 ($generated@@393 $generated@@398) ($generated@@159 ($generated@@340 $generated@@152 $generated@@399))) ($generated@@160 ($generated@@340 $generated@@152 $generated@@399))))))
 :pattern ( ($generated@@86 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@304 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@303 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@86 ($generated@@353 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@86 ($generated@@301 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@86 ($generated@@385 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@86 ($generated@@301 $generated@@400) $generated@@404))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@86 ($generated@@353 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@322 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@321 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@364 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@319 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@319 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@364 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@69)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@303 $generated@@161 $generated@@161)) (= (type $generated@@414) $generated@@69)) (= (type $generated@@415) $generated@@69)) (= (type $generated@@416) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@301 $generated@@413) $generated@@417))) (and ($generated@@257 ($generated@@86 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@257 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@86 ($generated@@301 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@79 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@69)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@321 $generated@@161 $generated@@161)) (= (type $generated@@422) $generated@@69)) (= (type $generated@@423) $generated@@69)) (= (type $generated@@424) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@319 $generated@@421) $generated@@425))) (and ($generated@@257 ($generated@@86 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@257 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@86 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@86 ($generated@@319 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@79 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@426) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@427) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@428) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@426 $generated@@428))) (and ($generated@@137 $generated@@426 $generated@@427) ($generated@@137 $generated@@427 $generated@@428))) ($generated@@137 $generated@@426 $generated@@428))
 :pattern ( ($generated@@137 $generated@@426 $generated@@427) ($generated@@137 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@81 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@323 (type $generated@@431))))
(let (($generated@@433 ($generated@@322 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@321 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@320 $generated@@433 $generated@@432)) (= ($generated@@319 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@319 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@323 (type $generated@@434))))
(let (($generated@@436 ($generated@@322 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@321 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@320 $generated@@436 $generated@@435)) (= ($generated@@364 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@364 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@323 (type $generated@@437))))
(let (($generated@@439 ($generated@@322 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@321 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@320 $generated@@439 $generated@@438)) (= ($generated@@392 $generated@@437) ($generated@@429 $generated@@161))))))
 :pattern ( ($generated@@392 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@305 (type $generated@@440))))
(let (($generated@@442 ($generated@@304 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@303 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@302 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@161) (= (type $generated@@444) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@384 $generated@@440) ($generated@@282 ($generated@@230 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@384 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@323 (type $generated@@445))))
(let (($generated@@447 ($generated@@322 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@321 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@320 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@161) (= (type $generated@@449) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@392 $generated@@445) ($generated@@282 ($generated@@230 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@161) ($generated@@231 $generated@@450 $generated@@46)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@450)) $generated@@450) ($generated@@148 ($generated@@340 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@161) ($generated@@231 $generated@@451 $generated@@47)) (and (= ($generated@@282 ($generated@@340 $generated@@3 $generated@@451)) $generated@@451) ($generated@@148 ($generated@@340 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@161) ($generated@@231 $generated@@452 $generated@@44)) (and (= ($generated@@282 ($generated@@340 $generated@@4 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@340 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 20))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@161) ($generated@@231 $generated@@454 $generated@@45)) (and (= ($generated@@282 ($generated@@340 $generated@@453 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@340 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@69) (= ($generated@@231 ($generated@@282 $generated@@455) $generated@@456) ($generated@@148 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@231 ($generated@@282 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@84 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@81 $generated@@458 $generated@@2)) (<= 0 ($generated@@295 $generated@@457))))
 :pattern ( ($generated@@295 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@272 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@271 $generated@@460)) (<= 0 ($generated@@270 $generated@@459))))
 :pattern ( ($generated@@270 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@461 ($generated@@410 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@410 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@410 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@410 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@77 ($generated@@410 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@418 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@77 ($generated@@418 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@161) (= (type $generated@@482) $generated@@161)) (= ($generated@@263 ($generated@@230 $generated@@481 $generated@@482)) $generated@@62))
 :pattern ( ($generated@@230 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@151 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@151 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@151 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@151 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@161) (= (type $generated@@492) $generated@@161)) (= ($generated@@159 ($generated@@230 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@230 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@161) (= (type $generated@@494) $generated@@161)) (= ($generated@@160 ($generated@@230 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@230 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@272 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498 $generated@@499)) $generated@@500))
 :pattern ( ($generated@@496 $generated@@498 $generated@@499))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@271 $generated@@161)) (= (type $generated@@502) $generated@@69)) (= (type $generated@@503) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@501 ($generated@@495 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@270 $generated@@501))) ($generated@@257 ($generated@@496 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@496 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@79 $generated@@501 ($generated@@495 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@80 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@80 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@507 ($generated@@240 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@240 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@77 ($generated@@240 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@245 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@245 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@245 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@166 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@166 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@166 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@495 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@495 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@495 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@495 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@340 $generated@@524 ($generated@@282 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@282 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@303 $generated@@161 $generated@@161)) (= (type $generated@@526) $generated@@69)) (= (type $generated@@527) $generated@@69)) (= ($generated@@148 $generated@@525 ($generated@@410 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@301 $generated@@525) $generated@@528))) (and ($generated@@231 ($generated@@86 ($generated@@385 $generated@@525) $generated@@528) $generated@@527) ($generated@@231 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@525) $generated@@528))
 :pattern ( ($generated@@86 ($generated@@301 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@148 $generated@@525 ($generated@@410 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@321 $generated@@161 $generated@@161)) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@69)) (= ($generated@@148 $generated@@529 ($generated@@418 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@319 $generated@@529) $generated@@532))) (and ($generated@@231 ($generated@@86 ($generated@@393 $generated@@529) $generated@@532) $generated@@531) ($generated@@231 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@86 ($generated@@393 $generated@@529) $generated@@532))
 :pattern ( ($generated@@86 ($generated@@319 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@418 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@161) (= (type $generated@@536) $generated@@161)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@230 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@230 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@161) (= (type $generated@@538) $generated@@161)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@230 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@230 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@231 $generated@@539 ($generated@@410 $generated@@540 $generated@@541))) (and (= ($generated@@282 ($generated@@340 ($generated@@303 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@148 ($generated@@340 ($generated@@303 $generated@@161 $generated@@161) $generated@@539) ($generated@@410 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@231 $generated@@539 ($generated@@410 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@161) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) ($generated@@231 $generated@@542 ($generated@@418 $generated@@543 $generated@@544))) (and (= ($generated@@282 ($generated@@340 ($generated@@321 $generated@@161 $generated@@161) $generated@@542)) $generated@@542) ($generated@@148 ($generated@@340 ($generated@@321 $generated@@161 $generated@@161) $generated@@542) ($generated@@418 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@231 $generated@@542 ($generated@@418 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@69) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@161)) ($generated@@231 $generated@@547 ($generated@@151 $generated@@545 $generated@@546))) (and (= ($generated@@282 ($generated@@340 $generated@@152 $generated@@547)) $generated@@547) ($generated@@148 ($generated@@340 $generated@@152 $generated@@547) ($generated@@151 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@231 $generated@@547 ($generated@@151 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@548 $generated@@550)) $generated@@82)
 :pattern ( ($generated@@548 $generated@@550))
)))
(assert  (=> true (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@82) (or ($generated@@549 $generated@@551) (and (and (not (= $generated@@551 $generated@@145)) ($generated@@148 $generated@@551 $generated@@227)) ($generated@@279 $generated@@551)))) ($generated@@148 ($generated@@548 $generated@@551) $generated@@227))
 :pattern ( ($generated@@548 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@86 ($generated@@429 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@86 ($generated@@429 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@74)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@69) (= (type $generated@@557) $generated@@69)) (and (= ($generated@@77 ($generated@@151 $generated@@556 $generated@@557)) $generated@@63) (= ($generated@@554 ($generated@@151 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@151 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@152) (= ($generated@@533 ($generated@@282 $generated@@558)) ($generated@@534 $generated@@558)))
 :pattern ( ($generated@@533 ($generated@@282 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@161) ($generated@@231 $generated@@559 ($generated@@80 0))) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@559)) $generated@@559) ($generated@@148 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@559) ($generated@@80 0))))
 :pattern ( ($generated@@231 $generated@@559 ($generated@@80 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@69)) ($generated@@231 $generated@@560 ($generated@@240 $generated@@561))) (and (= ($generated@@282 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@560)) $generated@@560) ($generated@@148 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@560) ($generated@@240 $generated@@561))))
 :pattern ( ($generated@@231 $generated@@560 ($generated@@240 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@161) (= (type $generated@@563) $generated@@69)) ($generated@@231 $generated@@562 ($generated@@245 $generated@@563))) (and (= ($generated@@282 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@562) ($generated@@245 $generated@@563))))
 :pattern ( ($generated@@231 $generated@@562 ($generated@@245 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@161) (= (type $generated@@565) $generated@@69)) ($generated@@231 $generated@@564 ($generated@@166 $generated@@565))) (and (= ($generated@@282 ($generated@@340 ($generated@@81 $generated@@161 $generated@@2) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@340 ($generated@@81 $generated@@161 $generated@@2) $generated@@564) ($generated@@166 $generated@@565))))
 :pattern ( ($generated@@231 $generated@@564 ($generated@@166 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@161) (= (type $generated@@567) $generated@@69)) ($generated@@231 $generated@@566 ($generated@@495 $generated@@567))) (and (= ($generated@@282 ($generated@@340 ($generated@@271 $generated@@161) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@340 ($generated@@271 $generated@@161) $generated@@566) ($generated@@495 $generated@@567))))
 :pattern ( ($generated@@231 $generated@@566 ($generated@@495 $generated@@567)))
)))
(assert (= ($generated@@77 $generated@@141) $generated@@61))
(assert (= ($generated@@554 $generated@@141) $generated@@66))
(assert (= ($generated@@77 $generated@@227) $generated@@64))
(assert (= ($generated@@554 $generated@@227) $generated@@68))
(assert (= ($generated@@77 $generated@@144) $generated@@65))
(assert (= ($generated@@554 $generated@@144) $generated@@68))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@569) $generated@@69)) (= (type $generated@@570) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@568 ($generated@@166 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@568 $generated@@571)))) ($generated@@257 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@86 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@79 $generated@@568 ($generated@@166 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@69)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@82) (= ($generated@@148 $generated@@575 $generated@@144)  (or (= $generated@@575 $generated@@145) ($generated@@572 ($generated@@573 $generated@@575)))))
 :pattern ( ($generated@@148 $generated@@575 $generated@@144))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@152) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@256 $generated@@578) (and ($generated@@150 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@69) ($generated@@79 $generated@@576 ($generated@@151 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@151 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@257 ($generated@@159 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@257 ($generated@@159 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@152) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@256 $generated@@582) (and ($generated@@150 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@69) ($generated@@79 $generated@@580 ($generated@@151 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@79 $generated@@580 ($generated@@151 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@257 ($generated@@160 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@257 ($generated@@160 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@161) (= (type $generated@@585) $generated@@161)) (= ($generated@@230 ($generated@@252 $generated@@584) ($generated@@252 $generated@@585)) ($generated@@252 ($generated@@230 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@230 ($generated@@252 $generated@@584) ($generated@@252 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@250 $generated@@586))) ($generated@@252 ($generated@@282 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@250 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@282 ($generated@@252 $generated@@587)) ($generated@@252 ($generated@@282 $generated@@587)))
 :pattern ( ($generated@@282 ($generated@@252 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@272 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@271 $generated@@589)) (= ($generated@@270 $generated@@588) 0)) (= $generated@@588 ($generated@@269 $generated@@589))))
 :pattern ( ($generated@@270 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@81 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@295 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@295 $generated@@590) ($generated ($generated@@86 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@295 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@595) $generated@@2)) ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@597) $generated@@3)) ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@4)) ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@453)) ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@161)) ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@271 $generated@@161)) (= (type $generated@@605) $generated@@69)) (= ($generated@@148 $generated@@604 ($generated@@495 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@270 $generated@@604))) ($generated@@231 ($generated@@496 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@496 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@148 $generated@@604 ($generated@@495 $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@271 $generated@@161)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@270 $generated@@608))) (< ($generated@@534 ($generated@@340 $generated@@152 ($generated@@496 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@534 ($generated@@340 $generated@@152 ($generated@@496 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@303 $generated@@161 $generated@@161)) (= (type $generated@@611) $generated@@69)) (= (type $generated@@612) $generated@@69)) ($generated@@148 $generated@@610 ($generated@@410 $generated@@611 $generated@@612))) (and (and ($generated@@148 ($generated@@301 $generated@@610) ($generated@@240 $generated@@611)) ($generated@@148 ($generated@@353 $generated@@610) ($generated@@240 $generated@@612))) ($generated@@148 ($generated@@384 $generated@@610) ($generated@@240 ($generated@@151 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@148 $generated@@610 ($generated@@410 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@321 $generated@@161 $generated@@161)) (= (type $generated@@614) $generated@@69)) (= (type $generated@@615) $generated@@69)) ($generated@@148 $generated@@613 ($generated@@418 $generated@@614 $generated@@615))) (and (and ($generated@@148 ($generated@@319 $generated@@613) ($generated@@245 $generated@@614)) ($generated@@148 ($generated@@364 $generated@@613) ($generated@@245 $generated@@615))) ($generated@@148 ($generated@@392 $generated@@613) ($generated@@245 ($generated@@151 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@148 $generated@@613 ($generated@@418 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@148 $generated@@616 $generated@@46))
 :pattern ( ($generated@@148 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@148 $generated@@617 $generated@@47))
 :pattern ( ($generated@@148 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@148 $generated@@618 $generated@@44))
 :pattern ( ($generated@@148 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@453) ($generated@@148 $generated@@619 $generated@@45))
 :pattern ( ($generated@@148 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@161) ($generated@@148 $generated@@620 $generated@@48))
 :pattern ( ($generated@@148 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@621) $generated@@82) (= (type $generated@@622) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@629) $generated@@82)) (= (type $generated@@624) $generated@@82)) (= (type $generated@@625) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@626) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@628) $generated@@82)) (= (type $generated@@630) ($generated@@173 $generated@@82 $generated@@4))) (= (type $generated@@632) $generated@@82)) (= (type $generated@@633) $generated@@82)) (= (type $generated@@634) $generated@@82)) (= (type $generated@@636) $generated@@82)) (= (type $generated@@638) $generated@@82)) (= (type $generated@@640) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@642  (=> (not ($generated@@279 $generated@@621)) (and (=> (= (ControlFlow 0 7) (- 0 10)) true) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= $generated@@621 $generated@@145))) (=> (not (= $generated@@621 $generated@@145)) (=> ($generated@@79 $generated@@621 $generated@@144 $generated@@622) (and (=> (= (ControlFlow 0 7) (- 0 8)) (not ($generated@@279 $generated@@621))) (=> (and (and (and (and (not ($generated@@279 $generated@@621)) ($generated@@278 $generated@@621)) (and ($generated@@278 $generated@@621) (= $generated@@623 ($generated@@277 $generated@@621)))) (and (and ($generated@@148 $generated@@624 $generated@@227) ($generated@@79 $generated@@624 $generated@@227 $generated@@625)) (and ($generated@@256 $generated@@626) ($generated@@627 $generated@@626)))) (and (and (and ($generated@@148 $generated@@628 $generated@@227) ($generated@@79 $generated@@628 $generated@@227 $generated@@626)) (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@82) (=> (and (not (= $generated@@643 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@622 $generated@@643) $generated@@60))) (= ($generated@@86 $generated@@626 $generated@@643) ($generated@@86 $generated@@622 $generated@@643))))
 :pattern ( ($generated@@86 $generated@@626 $generated@@643))
))) (and ($generated@@137 $generated@@622 $generated@@626) (= (ControlFlow 0 7) (- 0 6))))) true)))))))))
(let (($generated@@644  (=> ($generated@@279 $generated@@621) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@621 $generated@@145))) (=> (not (= $generated@@621 $generated@@145)) (=> ($generated@@79 $generated@@621 $generated@@144 $generated@@622) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@279 $generated@@621)) (=> ($generated@@279 $generated@@621) (=> (and (and ($generated@@549 $generated@@621) ($generated@@549 $generated@@621)) (and (= $generated@@629 ($generated@@548 $generated@@621)) (= (ControlFlow 0 2) (- 0 1)))) true))))))))))
(let (($generated@@645  (=> (and (= $generated@@630 ($generated@@172 $generated@@145 $generated@@625 $generated@@60 false)) (=> $generated@@631 (and ($generated@@148 $generated@@632 $generated@@227) ($generated@@79 $generated@@632 $generated@@227 $generated@@625)))) (and (=> (= (ControlFlow 0 11) (- 0 15)) (= $generated@@633 $generated@@634)) (=> (= $generated@@633 $generated@@634) (and (=> (= (ControlFlow 0 11) (- 0 14)) ($generated@@148 ($generated@@8 ($generated@@250 12)) $generated@@141)) (=> ($generated@@148 ($generated@@8 ($generated@@250 12)) $generated@@141) (=> (= $generated@@635 ($generated@@250 12)) (=> (and (and (and ($generated@@148 $generated@@636 $generated@@227) ($generated@@79 $generated@@636 $generated@@227 $generated@@625)) (and ($generated@@256 $generated@@622) ($generated@@627 $generated@@622))) (and (and ($generated@@148 $generated@@621 $generated@@227) ($generated@@79 $generated@@621 $generated@@227 $generated@@622)) (and (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@82) (=> (and (not (= $generated@@646 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@625 $generated@@646) $generated@@60))) (= ($generated@@86 $generated@@622 $generated@@646) ($generated@@86 $generated@@625 $generated@@646))))
 :pattern ( ($generated@@86 $generated@@622 $generated@@646))
)) ($generated@@137 $generated@@625 $generated@@622)))) (and (=> (= (ControlFlow 0 11) (- 0 13)) true) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not (= $generated@@621 $generated@@145))) (=> (not (= $generated@@621 $generated@@145)) (=> ($generated@@79 $generated@@621 $generated@@144 $generated@@622) (=> (and ($generated@@347 $generated@@621) ($generated@@347 $generated@@621)) (and (=> (= (ControlFlow 0 11) 2) $generated@@644) (=> (= (ControlFlow 0 11) 7) $generated@@642))))))))))))))))
(let (($generated@@647  (=> (and (and ($generated@@256 $generated@@625) ($generated@@627 $generated@@625)) (and ($generated@@148 $generated@@633 $generated@@227) ($generated@@79 $generated@@633 $generated@@227 $generated@@625))) (=> (and (and (and (and ($generated@@148 $generated@@634 $generated@@227) ($generated@@79 $generated@@634 $generated@@227 $generated@@625)) (=> $generated@@637 (and ($generated@@148 $generated@@638 $generated@@227) ($generated@@79 $generated@@638 $generated@@227 $generated@@625)))) (and (<= ($generated@@250 0) $generated@@639) true)) (and (and (=> $generated@@631 (and ($generated@@148 $generated@@640 $generated@@227) ($generated@@79 $generated@@640 $generated@@227 $generated@@625))) true) (and (= 4 $generated@@641) (= (ControlFlow 0 16) 11)))) $generated@@645))))
$generated@@647)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 11) (- 15))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@318 (T@T T@U) T@U)
(declare-fun $generated@@324 (T@U) Bool)
(declare-fun $generated@@325 (T@U) Bool)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Bool)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Bool)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@152)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@247 $generated@@253)) (= ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@71)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@143) (= ($generated@@141 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@143) ($generated@@141 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@152) (= (type $generated@@259) $generated@@152)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@152)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@77 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@79 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@82 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@79 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@84 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@79 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (= ($generated@@158 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@84 $generated@@315 $generated@@317))) (<= ($generated ($generated@@84 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@158 $generated@@315))
)))
(assert (forall (($generated@@319 T@T) ($generated@@320 T@U) ) (! (= (type ($generated@@318 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@152) ($generated@@222 $generated@@321 $generated@@218)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@321)) $generated@@321) ($generated@@139 ($generated@@318 $generated@@80 $generated@@321) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@321 $generated@@218))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@222 $generated@@322 $generated@@135)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@318 $generated@@80 $generated@@322) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@135))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@80) (= ($generated@@139 $generated@@323 $generated@@218)  (and ($generated@@139 $generated@@323 $generated@@135) (not (= $generated@@323 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@323 $generated@@218))
)))
(assert  (=> true (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@80) (or ($generated@@325 $generated@@326) (and (not (= $generated@@326 $generated@@136)) ($generated@@139 $generated@@326 $generated@@218)))) true)
 :pattern ( ($generated@@324 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@283 (type $generated@@327))))
(let (($generated@@329 ($generated@@282 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@281 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@280 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@279 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@283 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@283 (type $generated@@334))))
(let (($generated@@336 ($generated@@282 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@281 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@280 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@301 (type $generated@@338))))
(let (($generated@@340 ($generated@@300 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@299 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@298 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@297 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(let (($generated@@347 ($generated@@300 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@299 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@298 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@248 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@248 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@274 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@274 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@283 (type $generated@@365))))
(let (($generated@@367 ($generated@@282 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@368) ($generated@@150 ($generated@@318 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@318 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@301 (type $generated@@373))))
(let (($generated@@375 ($generated@@300 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@376) ($generated@@150 ($generated@@318 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@318 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@282 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@281 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@300 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@299 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@391) $generated@@395))) (and ($generated@@248 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@248 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@399) $generated@@403))) (and ($generated@@248 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@248 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@301 (type $generated@@406))))
(let (($generated@@408 ($generated@@300 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@299 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@298 $generated@@408 $generated@@407)) (= ($generated@@297 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@297 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@301 (type $generated@@409))))
(let (($generated@@411 ($generated@@300 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@299 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@298 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@301 (type $generated@@412))))
(let (($generated@@414 ($generated@@300 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@299 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@298 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@283 (type $generated@@415))))
(let (($generated@@417 ($generated@@282 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@281 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@280 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@268 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@301 (type $generated@@420))))
(let (($generated@@422 ($generated@@300 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@299 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@298 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@268 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@318 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@268 ($generated@@318 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@318 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@268 ($generated@@318 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@318 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@268 ($generated@@318 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@318 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@222 ($generated@@268 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@268 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@273 $generated@@432))))
 :pattern ( ($generated@@273 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@318 $generated@@499 ($generated@@268 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@268 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@268 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@268 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@268 ($generated@@318 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@318 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@80)
 :pattern ( ($generated@@523 $generated@@525))
)))
(assert  (=> true (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@80) (or ($generated@@524 $generated@@526) (and (and (not (= $generated@@526 $generated@@136)) ($generated@@139 $generated@@526 $generated@@218)) ($generated@@324 $generated@@526)))) ($generated@@139 ($generated@@523 $generated@@526) $generated@@218))
 :pattern ( ($generated@@523 $generated@@526))
))))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@84 ($generated@@404 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@72)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@67) (= (type $generated@@532) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@142 $generated@@531 $generated@@532)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@143) (= ($generated@@508 ($generated@@268 $generated@@533)) ($generated@@509 $generated@@533)))
 :pattern ( ($generated@@508 ($generated@@268 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@152) ($generated@@222 $generated@@534 ($generated@@78 0))) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@534)) $generated@@534) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@534) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@534 ($generated@@78 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@231 $generated@@536))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@535) ($generated@@231 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@231 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@236 $generated@@538))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@537) ($generated@@236 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@236 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@152) (= (type $generated@@540) $generated@@67)) ($generated@@222 $generated@@539 ($generated@@157 $generated@@540))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@539)) $generated@@539) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@539) ($generated@@157 $generated@@540))))
 :pattern ( ($generated@@222 $generated@@539 ($generated@@157 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@152) (= (type $generated@@542) $generated@@67)) ($generated@@222 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@268 ($generated@@318 ($generated@@262 $generated@@152) $generated@@541)) $generated@@541) ($generated@@139 ($generated@@318 ($generated@@262 $generated@@152) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@222 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (= ($generated@@75 $generated@@218) $generated@@63))
(assert (= ($generated@@529 $generated@@218) $generated@@66))
(assert (= ($generated@@75 $generated@@135) $generated@@64))
(assert (= ($generated@@529 $generated@@135) $generated@@66))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@543 ($generated@@157 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@543 $generated@@546)))) ($generated@@248 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@84 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@77 $generated@@543 ($generated@@157 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@80) (= ($generated@@139 $generated@@550 $generated@@135)  (or (= $generated@@550 $generated@@136) ($generated@@547 ($generated@@548 $generated@@550)))))
 :pattern ( ($generated@@139 $generated@@550 $generated@@135))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@553) (and ($generated@@141 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@67) ($generated@@77 $generated@@551 ($generated@@142 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@142 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@248 ($generated@@150 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@248 ($generated@@150 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@67)) (= (type $generated@@557) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@557) (and ($generated@@141 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@67) ($generated@@77 $generated@@555 ($generated@@142 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@77 $generated@@555 ($generated@@142 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@248 ($generated@@151 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@248 ($generated@@151 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@152) (= (type $generated@@560) $generated@@152)) (= ($generated@@221 ($generated@@243 $generated@@559) ($generated@@243 $generated@@560)) ($generated@@243 ($generated@@221 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@559) ($generated@@243 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@561))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@562)) ($generated@@243 ($generated@@268 $generated@@562)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@263 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@262 $generated@@564)) (= ($generated@@261 $generated@@563) 0)) (= $generated@@563 ($generated@@260 $generated@@564))))
 :pattern ( ($generated@@261 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@79 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@273 ($generated@@85 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@273 $generated@@565) ($generated ($generated@@84 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@273 ($generated@@85 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@2)) ($generated@@77 $generated@@570 $generated@@46 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@3)) ($generated@@77 $generated@@572 $generated@@47 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@47 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@4)) ($generated@@77 $generated@@574 $generated@@44 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@428)) ($generated@@77 $generated@@576 $generated@@45 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@45 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@152)) ($generated@@77 $generated@@578 $generated@@48 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@48 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@262 $generated@@152)) (= (type $generated@@580) $generated@@67)) (= ($generated@@139 $generated@@579 ($generated@@470 $generated@@580)) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@261 $generated@@579))) ($generated@@222 ($generated@@471 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@471 $generated@@579 $generated@@581))
))))
 :pattern ( ($generated@@139 $generated@@579 ($generated@@470 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@262 $generated@@152)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@261 $generated@@583))) (< ($generated@@509 ($generated@@318 $generated@@143 ($generated@@471 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@509 ($generated@@318 $generated@@143 ($generated@@471 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) $generated@@67)) ($generated@@139 $generated@@585 ($generated@@388 $generated@@586 $generated@@587))) (and (and ($generated@@139 ($generated@@279 $generated@@585) ($generated@@231 $generated@@586)) ($generated@@139 ($generated@@331 $generated@@585) ($generated@@231 $generated@@587))) ($generated@@139 ($generated@@362 $generated@@585) ($generated@@231 ($generated@@142 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@139 $generated@@585 ($generated@@388 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@67)) ($generated@@139 $generated@@588 ($generated@@396 $generated@@589 $generated@@590))) (and (and ($generated@@139 ($generated@@297 $generated@@588) ($generated@@236 $generated@@589)) ($generated@@139 ($generated@@342 $generated@@588) ($generated@@236 $generated@@590))) ($generated@@139 ($generated@@370 $generated@@588) ($generated@@236 ($generated@@142 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@139 $generated@@588 ($generated@@396 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@139 $generated@@591 $generated@@46))
 :pattern ( ($generated@@139 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@139 $generated@@592 $generated@@47))
 :pattern ( ($generated@@139 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@139 $generated@@593 $generated@@44))
 :pattern ( ($generated@@139 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@428) ($generated@@139 $generated@@594 $generated@@45))
 :pattern ( ($generated@@139 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@152) ($generated@@139 $generated@@595 $generated@@48))
 :pattern ( ($generated@@139 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Bool)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () Bool)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@596) $generated@@80) (= (type $generated@@597) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@598) $generated@@80)) (= (type $generated@@599) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@602) $generated@@80)) (= (type $generated@@603) $generated@@80)) (= (type $generated@@606) $generated@@80)) (= (type $generated@@607) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@609  (=> (and (not ($generated@@324 $generated@@596)) (= (ControlFlow 0 7) (- 0 6))) true)))
(let (($generated@@610  (=> ($generated@@324 $generated@@596) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@596 $generated@@136))) (=> (not (= $generated@@596 $generated@@136)) (=> ($generated@@77 $generated@@596 $generated@@135 $generated@@597) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@324 $generated@@596)) (=> ($generated@@324 $generated@@596) (=> (and (and ($generated@@524 $generated@@596) ($generated@@524 $generated@@596)) (and (= $generated@@598 ($generated@@523 $generated@@596)) (= (ControlFlow 0 2) (- 0 1)))) true))))))))))
(let (($generated@@611  (=> (= $generated@@599 ($generated@@163 $generated@@136 $generated@@597 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) (- 0 13)) (= ($generated@@241 (+ 2 2)) ($generated@@241 4))) (=> (= ($generated@@241 (+ 2 2)) ($generated@@241 4)) (=> (= $generated@@600 ($generated@@241 8)) (and (=> (= (ControlFlow 0 8) (- 0 12)) (= $generated@@600 ($generated@@241 8))) (=> (= $generated@@600 ($generated@@241 8)) (=> (=> $generated@@601 (and ($generated@@139 $generated@@602 $generated@@218) ($generated@@77 $generated@@602 $generated@@218 $generated@@597))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (= $generated@@596 $generated@@603)) (=> (= $generated@@596 $generated@@603) (and (=> (= (ControlFlow 0 8) (- 0 10)) true) (and (=> (= (ControlFlow 0 8) (- 0 9)) (not (= $generated@@596 $generated@@136))) (=> (not (= $generated@@596 $generated@@136)) (=> ($generated@@77 $generated@@596 $generated@@135 $generated@@597) (=> (and ($generated@@325 $generated@@596) ($generated@@325 $generated@@596)) (and (=> (= (ControlFlow 0 8) 2) $generated@@610) (=> (= (ControlFlow 0 8) 7) $generated@@609))))))))))))))))))
(let (($generated@@612  (=> (and (and ($generated@@247 $generated@@597) ($generated@@604 $generated@@597)) (and ($generated@@139 $generated@@596 $generated@@218) ($generated@@77 $generated@@596 $generated@@218 $generated@@597))) (=> (and (and (and ($generated@@139 $generated@@603 $generated@@218) ($generated@@77 $generated@@603 $generated@@218 $generated@@597)) (=> $generated@@605 (and ($generated@@139 $generated@@606 $generated@@218) ($generated@@77 $generated@@606 $generated@@218 $generated@@597)))) (and (and (=> $generated@@601 (and ($generated@@139 $generated@@607 $generated@@218) ($generated@@77 $generated@@607 $generated@@218 $generated@@597))) true) (and (= 3 $generated@@608) (= (ControlFlow 0 14) 8)))) $generated@@611))))
$generated@@612)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 11))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
