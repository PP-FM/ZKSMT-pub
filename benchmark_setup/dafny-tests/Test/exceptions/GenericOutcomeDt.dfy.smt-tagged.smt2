(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@157 (T@U Int) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@298 (T@U T@U T@U) Bool)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U T@U) Bool)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@T) T@U)
(declare-fun $generated@@502 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@87 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@78) (= (type $generated@@156) $generated@@78)) (and ($generated@@151 $generated@@155) ($generated@@151 $generated@@156))) (= ($generated@@150 $generated@@155 $generated@@156) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@155))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@156))
)))
(assert  (and (and (and (and (forall (($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@164)) 16)) (forall (($generated@@165 T@T) ) (! (= ($generated@@163 ($generated@@159 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165))
))) (forall (($generated@@166 T@U) ($generated@@167 Int) ) (! (let (($generated@@168 ($generated@@163 (type $generated@@166))))
(= (type ($generated@@157 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@157 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@158 $generated@@169)) $generated@@78)
 :pattern ( ($generated@@158 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@162 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (= (type $generated@@172) ($generated@@159 $generated@@153)) (=> (and (<= 0 $generated@@173) (< $generated@@173 ($generated@@160 $generated@@172))) (< ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@172 $generated@@173))) ($generated@@161 ($generated@@158 $generated@@172)))))
 :pattern ( ($generated@@157 $generated@@172 $generated@@173) ($generated@@158 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@80 $generated@@174 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@174 ($generated@@93 0)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@177 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@68) (= (type $generated@@180) $generated@@68)) (= (type $generated@@181) $generated@@78)) ($generated@@80 $generated@@181 ($generated@@176 $generated@@179 $generated@@180))) ($generated@@175 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181) ($generated@@80 $generated@@181 ($generated@@176 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@153)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@153)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@78) (= (type $generated@@188) $generated@@78)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@193) $generated@@68)) ($generated@@80 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@80 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 17)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@95 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@71 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@95) (= (type $generated@@244) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@245) ($generated@@70 $generated@@4))) (= (type $generated@@247) $generated@@95)) (= (type $generated@@248) ($generated@@70 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@196 $generated@@95 $generated@@4))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@95) (= (type $generated@@256) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@95)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@194 ($generated@@250 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@194 ($generated@@250 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@78)
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@153)) (= (type $generated@@269) $generated@@153)) (= ($generated@@80 ($generated@@262 $generated@@268 $generated@@269) ($generated@@176 $generated@@266 $generated@@267))  (and ($generated@@263 $generated@@268 $generated@@266) ($generated@@263 $generated@@269 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@262 $generated@@268 $generated@@269) ($generated@@176 $generated@@266 $generated@@267)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) $generated@@78)) (or ($generated@@270 $generated@@272 $generated@@273) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@273 ($generated@@81 $generated@@272))))) (= ($generated@@82 $generated@@272 $generated@@273) ($generated@@271 $generated@@273)))
 :pattern ( ($generated@@82 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@78) (= (type $generated@@275) $generated@@78)) (= ($generated@@182 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@182 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@78) (= (type $generated@@277) $generated@@78)) (= ($generated@@150 $generated@@276 $generated@@277) (= $generated@@276 $generated@@277)))
 :pattern ( ($generated@@150 $generated@@276 $generated@@277))
)))
(assert  (and (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@278 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@278 $generated@@280))
)) (forall (($generated@@282 T@U) ) (! (= (type ($generated@@279 $generated@@282)) ($generated@@159 $generated@@153))
 :pattern ( ($generated@@279 $generated@@282))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) $generated@@68) (= (type $generated@@284) $generated@@68)) (= (type $generated@@285) $generated@@78)) (or ($generated@@79 $generated@@283 $generated@@284 ($generated@@278 $generated@@285)) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@285 ($generated@@81 $generated@@283)) ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@82 $generated@@283 ($generated@@278 $generated@@285))))))))) (= ($generated@@77 $generated@@283 $generated@@284 ($generated@@278 $generated@@285)) ($generated@@278 ($generated@@158 ($generated@@278 ($generated@@279 ($generated@@278 $generated@@285)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@283 $generated@@284 ($generated@@278 $generated@@285)))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@289) $generated@@68)) (= ($generated@@80 $generated@@288 ($generated@@286 $generated@@289)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@153) ($generated@@0 ($generated@@99 $generated@@288 $generated@@290))) ($generated@@263 $generated@@290 $generated@@289))
 :pattern ( ($generated@@99 $generated@@288 $generated@@290))
))))
 :pattern ( ($generated@@80 $generated@@288 ($generated@@286 $generated@@289)))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@68)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@294) $generated@@68)) (= ($generated@@80 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@153) ($generated@@0 ($generated@@99 $generated@@293 $generated@@295))) ($generated@@263 $generated@@295 $generated@@294))
 :pattern ( ($generated@@99 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@80 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@296 T@U) ) (! (= ($generated@@278 $generated@@296) $generated@@296)
 :pattern ( ($generated@@278 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) $generated@@68)) (= (type $generated@@301) $generated@@153)) (= (type $generated@@302) $generated@@153)) (= (type $generated@@303) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@297 $generated@@303)) (= ($generated@@92 ($generated@@262 $generated@@301 $generated@@302) ($generated@@176 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@298 $generated@@301 $generated@@299 $generated@@303) ($generated@@298 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@92 ($generated@@262 $generated@@301 $generated@@302) ($generated@@176 $generated@@299 $generated@@300) $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@72)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@78) (= ($generated@@175 $generated@@306) (= ($generated@@304 $generated@@306) $generated@@61)))
 :pattern ( ($generated@@175 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@78) (= ($generated@@151 $generated@@307) (= ($generated@@304 $generated@@307) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@78) (= ($generated@@271 $generated@@308) (= ($generated@@304 $generated@@308) $generated@@65)))
 :pattern ( ($generated@@271 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@163 (type $generated@@310))))
 (=> (and (= (type $generated@@310) ($generated@@159 $generated@@312)) (= (type $generated@@311) ($generated@@159 $generated@@312))) (= ($generated@@309 $generated@@310 $generated@@311)  (and (= ($generated@@160 $generated@@310) ($generated@@160 $generated@@311)) (forall (($generated@@313 Int) ) (!  (=> (and (<= 0 $generated@@313) (< $generated@@313 ($generated@@160 $generated@@310))) (= ($generated@@157 $generated@@310 $generated@@313) ($generated@@157 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@157 $generated@@310 $generated@@313))
 :pattern ( ($generated@@157 $generated@@311 $generated@@313))
))))))
 :pattern ( ($generated@@309 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@78) ($generated@@175 $generated@@314)) (exists (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (and (and (= (type $generated@@315) $generated@@153) (= (type $generated@@316) $generated@@153)) (= $generated@@314 ($generated@@262 $generated@@315 $generated@@316)))
 :no-pattern (type $generated@@315)
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@175 $generated@@314))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@159 $generated@@318))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@160 ($generated@@317 $generated@@319)) 0)
 :pattern ( ($generated@@317 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@78)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@78) ($generated@@151 $generated@@322)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@153) (= $generated@@322 ($generated@@320 $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@78) ($generated@@271 $generated@@324)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) ($generated@@159 $generated@@153)) (= $generated@@324 ($generated@@158 $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
)))
 :pattern ( ($generated@@271 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@153)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@68) (= (type $generated@@330) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@298 ($generated@@326 $generated@@328) $generated@@329 $generated@@330) ($generated@@92 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@298 ($generated@@326 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@333 T@T) ) (! (= (type ($generated@@332 $generated@@333)) ($generated@@94 $generated@@333 $generated@@2))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@97 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@94 $generated@@335 $generated@@2)) (and (= (= ($generated@@331 $generated@@334) 0) (= $generated@@334 ($generated@@332 $generated@@335))) (=> (not (= ($generated@@331 $generated@@334) 0)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) (< 0 ($generated ($generated@@99 $generated@@334 $generated@@336))))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@73)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@339)) $generated@@64) (= ($generated@@337 ($generated@@81 $generated@@339)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 18)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@94 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@99 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@99 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 19)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@94 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@99 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@99 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@376) $generated@@68) (= (type $generated@@377) $generated@@78)) (or ($generated@@270 $generated@@376 $generated@@377) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@377 ($generated@@81 $generated@@376))))) true)
 :pattern ( ($generated@@82 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@97 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@94 $generated@@379 $generated@@2)) (= ($generated@@190 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@99 $generated@@378 $generated@@380))) (<= ($generated ($generated@@99 $generated@@378 $generated@@380)) ($generated@@331 $generated@@378))))
 :pattern ( ($generated@@99 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@190 $generated@@378))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@381) $generated@@68) (= (type $generated@@382) $generated@@78)) (or ($generated@@270 $generated@@381 ($generated@@278 $generated@@382)) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@382 ($generated@@81 $generated@@381))))) (= ($generated@@82 $generated@@381 ($generated@@278 $generated@@382)) ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@271 ($generated@@278 $generated@@382)))))))
 :weight 3
 :pattern ( ($generated@@82 $generated@@381 ($generated@@278 $generated@@382)))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@383) $generated@@78) (= (type $generated@@384) $generated@@78)) (and ($generated@@271 $generated@@383) ($generated@@271 $generated@@384))) (= ($generated@@150 $generated@@383 $generated@@384) ($generated@@309 ($generated@@279 $generated@@383) ($generated@@279 $generated@@384))))
 :pattern ( ($generated@@150 $generated@@383 $generated@@384) ($generated@@271 $generated@@383))
 :pattern ( ($generated@@150 $generated@@383 $generated@@384) ($generated@@271 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@344 (type $generated@@385))))
(let (($generated@@387 ($generated@@343 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@342 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@341 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@99 ($generated@@340 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@340 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@344 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@94 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(let (($generated@@394 ($generated@@343 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@342 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@341 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@99 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@362 (type $generated@@396))))
(let (($generated@@398 ($generated@@361 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@360 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@359 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) ($generated@@0 ($generated@@99 ($generated@@358 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@358 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@362 (type $generated@@401))))
(= (type ($generated@@400 $generated@@401)) ($generated@@94 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(let (($generated@@405 ($generated@@361 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@360 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@359 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@404) ($generated@@0 ($generated@@99 ($generated@@400 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@400 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@408) $generated@@68)) (= ($generated@@80 $generated@@407 ($generated@@189 $generated@@408)) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@407 $generated@@409)))) ($generated@@263 $generated@@409 $generated@@408))
 :pattern ( ($generated@@99 $generated@@407 $generated@@409))
))))
 :pattern ( ($generated@@80 $generated@@407 ($generated@@189 $generated@@408)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) $generated@@68) (= (type $generated@@411) $generated@@153)) (= (type $generated@@412) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@297 $generated@@412)) (= ($generated@@92 ($generated@@320 $generated@@411) ($generated@@81 $generated@@410) $generated@@412) ($generated@@298 $generated@@411 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@92 ($generated@@320 $generated@@411) ($generated@@81 $generated@@410) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (= (type ($generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@415) $generated@@78) (= (type $generated@@416) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@297 $generated@@416) (and ($generated@@271 $generated@@415) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@68) ($generated@@92 $generated@@415 ($generated@@81 $generated@@417) $generated@@416))
 :pattern ( ($generated@@92 $generated@@415 ($generated@@81 $generated@@417) $generated@@416))
))))) ($generated@@92 ($generated@@279 $generated@@415) ($generated@@413 $generated@@45) $generated@@416))
 :pattern ( ($generated@@92 ($generated@@279 $generated@@415) ($generated@@413 $generated@@45) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) $generated@@68) (= (type $generated@@419) ($generated@@159 $generated@@153))) (= (type $generated@@420) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@297 $generated@@420)) (= ($generated@@92 ($generated@@158 $generated@@419) ($generated@@81 $generated@@418) $generated@@420) ($generated@@92 $generated@@419 ($generated@@413 $generated@@45) $generated@@420)))
 :pattern ( ($generated@@92 ($generated@@158 $generated@@419) ($generated@@81 $generated@@418) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@422) $generated@@68)) (= (type $generated@@423) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@421 ($generated@@286 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@153) ($generated@@0 ($generated@@99 $generated@@421 $generated@@424))) ($generated@@298 $generated@@424 $generated@@422 $generated@@423))
 :pattern ( ($generated@@99 $generated@@421 $generated@@424))
))))
 :pattern ( ($generated@@92 $generated@@421 ($generated@@286 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (= (type $generated@@425) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@425 ($generated@@291 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@153) ($generated@@0 ($generated@@99 $generated@@425 $generated@@428))) ($generated@@298 $generated@@428 $generated@@426 $generated@@427))
 :pattern ( ($generated@@99 $generated@@425 $generated@@428))
))))
 :pattern ( ($generated@@92 $generated@@425 ($generated@@291 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(= ($generated ($generated@@99 ($generated@@332 $generated@@430) $generated@@429)) 0))
 :pattern ( (let (($generated@@430 (type $generated@@429)))
($generated@@99 ($generated@@332 $generated@@430) $generated@@429)))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@431 $generated@@433))
)) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@344 (type $generated@@434))))
(let (($generated@@436 ($generated@@343 (type $generated@@434))))
(= (type ($generated@@432 $generated@@434)) ($generated@@94 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@432 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@342 $generated@@153 $generated@@153)) (= (type $generated@@438) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@431 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@99 ($generated@@340 $generated@@437) ($generated@@183 ($generated@@162 $generated@@78 $generated@@438)))) (= ($generated@@99 ($generated@@432 $generated@@437) ($generated@@183 ($generated@@162 $generated@@78 $generated@@438))) ($generated@@184 ($generated@@162 $generated@@78 $generated@@438))))))
 :pattern ( ($generated@@99 ($generated@@431 $generated@@437) $generated@@438))
)))
(assert  (and (forall (($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@441)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@439 $generated@@441))
)) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@362 (type $generated@@442))))
(let (($generated@@444 ($generated@@361 (type $generated@@442))))
(= (type ($generated@@440 $generated@@442)) ($generated@@94 $generated@@444 $generated@@443))))
 :pattern ( ($generated@@440 $generated@@442))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@360 $generated@@153 $generated@@153)) (= (type $generated@@446) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@439 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@99 ($generated@@358 $generated@@445) ($generated@@183 ($generated@@162 $generated@@78 $generated@@446)))) (= ($generated@@99 ($generated@@440 $generated@@445) ($generated@@183 ($generated@@162 $generated@@78 $generated@@446))) ($generated@@184 ($generated@@162 $generated@@78 $generated@@446))))))
 :pattern ( ($generated@@99 ($generated@@439 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@343 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@342 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@99 ($generated@@389 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@99 ($generated@@340 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@99 ($generated@@432 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@99 ($generated@@340 $generated@@447) $generated@@451))
 :pattern ( ($generated@@99 ($generated@@432 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@99 ($generated@@389 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@361 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@360 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@99 ($generated@@400 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@99 ($generated@@358 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@99 ($generated@@440 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@99 ($generated@@358 $generated@@452) $generated@@456))
 :pattern ( ($generated@@99 ($generated@@440 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@99 ($generated@@400 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@342 $generated@@153 $generated@@153)) (= (type $generated@@461) $generated@@68)) (= (type $generated@@462) $generated@@68)) (= (type $generated@@463) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@340 $generated@@460) $generated@@464))) (and ($generated@@298 ($generated@@99 ($generated@@432 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@298 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@99 ($generated@@432 $generated@@460) $generated@@464))
 :pattern ( ($generated@@99 ($generated@@340 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@92 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@360 $generated@@153 $generated@@153)) (= (type $generated@@469) $generated@@68)) (= (type $generated@@470) $generated@@68)) (= (type $generated@@471) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@358 $generated@@468) $generated@@472))) (and ($generated@@298 ($generated@@99 ($generated@@440 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@298 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@99 ($generated@@440 $generated@@468) $generated@@472))
 :pattern ( ($generated@@99 ($generated@@358 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@92 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@78)) ($generated@@80 $generated@@474 ($generated@@81 $generated@@473))) (or ($generated@@151 $generated@@474) ($generated@@271 $generated@@474)))
 :pattern ( ($generated@@271 $generated@@474) ($generated@@80 $generated@@474 ($generated@@81 $generated@@473)))
 :pattern ( ($generated@@151 $generated@@474) ($generated@@80 $generated@@474 ($generated@@81 $generated@@473)))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@163 (type $generated@@475))))
 (=> (and (and (= (type $generated@@475) ($generated@@159 $generated@@477)) (= (type $generated@@476) ($generated@@159 $generated@@477))) ($generated@@309 $generated@@475 $generated@@476)) (= $generated@@475 $generated@@476)))
 :pattern ( ($generated@@309 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@479 T@T) ) (! (= (type ($generated@@478 $generated@@479)) ($generated@@94 $generated@@479 $generated@@4))
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@362 (type $generated@@480))))
(let (($generated@@482 ($generated@@361 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@360 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@359 $generated@@482 $generated@@481)) (= ($generated@@358 $generated@@480) ($generated@@478 $generated@@482))))))
 :pattern ( ($generated@@358 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@362 (type $generated@@483))))
(let (($generated@@485 ($generated@@361 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@360 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@359 $generated@@485 $generated@@484)) (= ($generated@@400 $generated@@483) ($generated@@478 $generated@@484))))))
 :pattern ( ($generated@@400 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (= ($generated@@439 $generated@@486) ($generated@@478 $generated@@153))))))
 :pattern ( ($generated@@439 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@344 (type $generated@@489))))
(let (($generated@@491 ($generated@@343 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@342 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@341 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@153) (= (type $generated@@493) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@431 $generated@@489) ($generated@@326 ($generated@@262 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@431 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@362 (type $generated@@494))))
(let (($generated@@496 ($generated@@361 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@360 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@359 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@153) (= (type $generated@@498) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@439 $generated@@494) ($generated@@326 ($generated@@262 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@439 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@153) ($generated@@263 $generated@@499 $generated@@46)) (and (= ($generated@@326 ($generated@@162 $generated@@2 $generated@@499)) $generated@@499) ($generated@@80 ($generated@@162 $generated@@2 $generated@@499) $generated@@46)))
 :pattern ( ($generated@@263 $generated@@499 $generated@@46))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@153) ($generated@@263 $generated@@500 $generated@@47)) (and (= ($generated@@326 ($generated@@162 $generated@@3 $generated@@500)) $generated@@500) ($generated@@80 ($generated@@162 $generated@@3 $generated@@500) $generated@@47)))
 :pattern ( ($generated@@263 $generated@@500 $generated@@47))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@153) ($generated@@263 $generated@@501 $generated@@44)) (and (= ($generated@@326 ($generated@@162 $generated@@4 $generated@@501)) $generated@@501) ($generated@@80 ($generated@@162 $generated@@4 $generated@@501) $generated@@44)))
 :pattern ( ($generated@@263 $generated@@501 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@502) 20))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@153) ($generated@@263 $generated@@503 $generated@@45)) (and (= ($generated@@326 ($generated@@162 $generated@@502 $generated@@503)) $generated@@503) ($generated@@80 ($generated@@162 $generated@@502 $generated@@503) $generated@@45)))
 :pattern ( ($generated@@263 $generated@@503 $generated@@45))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@263 ($generated@@326 $generated@@504) $generated@@505) ($generated@@80 $generated@@504 $generated@@505)))
 :pattern ( ($generated@@263 ($generated@@326 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@97 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@94 $generated@@507 $generated@@2)) (<= 0 ($generated@@331 $generated@@506))))
 :pattern ( ($generated@@331 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@163 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@159 $generated@@509)) (<= 0 ($generated@@160 $generated@@508))))
 :pattern ( ($generated@@160 $generated@@508))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= (type $generated@@512) $generated@@78)) (or ($generated@@79 $generated@@510 $generated@@511 $generated@@512) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@512 ($generated@@81 $generated@@510)) ($generated@@82 $generated@@510 $generated@@512))))) (= ($generated@@77 $generated@@510 $generated@@511 $generated@@512) ($generated@@158 ($generated@@279 $generated@@512))))
 :pattern ( ($generated@@77 $generated@@510 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@457 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@457 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@457 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@457 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@90 ($generated@@457 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@457 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@523 ($generated@@465 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@465 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@465 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@465 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@90 ($generated@@465 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@465 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@153) (= (type $generated@@534) $generated@@153)) (= ($generated@@304 ($generated@@262 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@262 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@176 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@176 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@68)) (= ($generated@@539 ($generated@@176 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@176 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@153) (= (type $generated@@544) $generated@@153)) (= ($generated@@183 ($generated@@262 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@262 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@153) (= (type $generated@@546) $generated@@153)) (= ($generated@@184 ($generated@@262 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@262 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@159 $generated@@153)) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@547 ($generated@@413 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@160 $generated@@547))) ($generated@@298 ($generated@@157 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@157 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@92 $generated@@547 ($generated@@413 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@93 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@93 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@553 ($generated@@286 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@286 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@90 ($generated@@286 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@286 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@557 ($generated@@291 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@291 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@90 ($generated@@291 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@291 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@68)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@90 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@68)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@565 ($generated@@413 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@413 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@90 ($generated@@413 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@413 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@153) (= ($generated@@304 ($generated@@320 $generated@@569)) $generated@@63))
 :pattern ( ($generated@@320 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@81 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@81 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@153) (= ($generated@@152 ($generated@@320 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@320 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) ($generated@@159 $generated@@153)) (= ($generated@@304 ($generated@@158 $generated@@574)) $generated@@65))
 :pattern ( ($generated@@158 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) ($generated@@159 $generated@@153)) (= ($generated@@279 ($generated@@158 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@158 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
(= ($generated@@162 $generated@@577 ($generated@@326 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@326 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@342 $generated@@153 $generated@@153)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) (= ($generated@@80 $generated@@578 ($generated@@457 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@340 $generated@@578) $generated@@581))) (and ($generated@@263 ($generated@@99 ($generated@@432 $generated@@578) $generated@@581) $generated@@580) ($generated@@263 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@99 ($generated@@432 $generated@@578) $generated@@581))
 :pattern ( ($generated@@99 ($generated@@340 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@80 $generated@@578 ($generated@@457 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@360 $generated@@153 $generated@@153)) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) (= ($generated@@80 $generated@@582 ($generated@@465 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@358 $generated@@582) $generated@@585))) (and ($generated@@263 ($generated@@99 ($generated@@440 $generated@@582) $generated@@585) $generated@@584) ($generated@@263 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@99 ($generated@@440 $generated@@582) $generated@@585))
 :pattern ( ($generated@@99 ($generated@@358 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@80 $generated@@582 ($generated@@465 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@68) (= (type $generated@@587) $generated@@153)) (= ($generated@@80 ($generated@@320 $generated@@587) ($generated@@81 $generated@@586)) ($generated@@263 $generated@@587 $generated@@586)))
 :pattern ( ($generated@@80 ($generated@@320 $generated@@587) ($generated@@81 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@153) (= (type $generated@@590) $generated@@153)) (< ($generated@@588 $generated@@589) ($generated@@161 ($generated@@262 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@262 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@153) (= (type $generated@@592) $generated@@153)) (< ($generated@@588 $generated@@592) ($generated@@161 ($generated@@262 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@262 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@153) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@263 $generated@@593 ($generated@@457 $generated@@594 $generated@@595))) (and (= ($generated@@326 ($generated@@162 ($generated@@342 $generated@@153 $generated@@153) $generated@@593)) $generated@@593) ($generated@@80 ($generated@@162 ($generated@@342 $generated@@153 $generated@@153) $generated@@593) ($generated@@457 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@263 $generated@@593 ($generated@@457 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@153) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) ($generated@@263 $generated@@596 ($generated@@465 $generated@@597 $generated@@598))) (and (= ($generated@@326 ($generated@@162 ($generated@@360 $generated@@153 $generated@@153) $generated@@596)) $generated@@596) ($generated@@80 ($generated@@162 ($generated@@360 $generated@@153 $generated@@153) $generated@@596) ($generated@@465 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@263 $generated@@596 ($generated@@465 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@68) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@153)) ($generated@@263 $generated@@601 ($generated@@176 $generated@@599 $generated@@600))) (and (= ($generated@@326 ($generated@@162 $generated@@78 $generated@@601)) $generated@@601) ($generated@@80 ($generated@@162 $generated@@78 $generated@@601) ($generated@@176 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@263 $generated@@601 ($generated@@176 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@153) (< ($generated@@588 $generated@@602) ($generated@@161 ($generated@@320 $generated@@602))))
 :pattern ( ($generated@@320 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) ($generated@@159 $generated@@153)) (< ($generated@@603 $generated@@604) ($generated@@161 ($generated@@158 $generated@@604))))
 :pattern ( ($generated@@158 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@78) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@297 $generated@@607) (and ($generated@@151 $generated@@605) ($generated@@92 $generated@@605 ($generated@@81 $generated@@606) $generated@@607)))) ($generated@@298 ($generated@@152 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@298 ($generated@@152 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@99 ($generated@@478 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@99 ($generated@@478 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@68) (= (type $generated@@611) $generated@@68)) (and (= ($generated@@90 ($generated@@176 $generated@@610 $generated@@611)) $generated@@62) (= ($generated@@337 ($generated@@176 $generated@@610 $generated@@611)) $generated@@66)))
 :pattern ( ($generated@@176 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@78) (= ($generated@@588 ($generated@@326 $generated@@612)) ($generated@@161 $generated@@612)))
 :pattern ( ($generated@@588 ($generated@@326 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@153) ($generated@@263 $generated@@613 ($generated@@93 0))) (and (= ($generated@@326 ($generated@@162 $generated@@2 $generated@@613)) $generated@@613) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@613) ($generated@@93 0))))
 :pattern ( ($generated@@263 $generated@@613 ($generated@@93 0)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@153) (= (type $generated@@615) $generated@@68)) ($generated@@263 $generated@@614 ($generated@@286 $generated@@615))) (and (= ($generated@@326 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@614)) $generated@@614) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@614) ($generated@@286 $generated@@615))))
 :pattern ( ($generated@@263 $generated@@614 ($generated@@286 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@153) (= (type $generated@@617) $generated@@68)) ($generated@@263 $generated@@616 ($generated@@291 $generated@@617))) (and (= ($generated@@326 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@616)) $generated@@616) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@616) ($generated@@291 $generated@@617))))
 :pattern ( ($generated@@263 $generated@@616 ($generated@@291 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@153) (= (type $generated@@619) $generated@@68)) ($generated@@263 $generated@@618 ($generated@@189 $generated@@619))) (and (= ($generated@@326 ($generated@@162 ($generated@@94 $generated@@153 $generated@@2) $generated@@618)) $generated@@618) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@2) $generated@@618) ($generated@@189 $generated@@619))))
 :pattern ( ($generated@@263 $generated@@618 ($generated@@189 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@153) (= (type $generated@@621) $generated@@68)) ($generated@@263 $generated@@620 ($generated@@413 $generated@@621))) (and (= ($generated@@326 ($generated@@162 ($generated@@159 $generated@@153) $generated@@620)) $generated@@620) ($generated@@80 ($generated@@162 ($generated@@159 $generated@@153) $generated@@620) ($generated@@413 $generated@@621))))
 :pattern ( ($generated@@263 $generated@@620 ($generated@@413 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@68) (= (type $generated@@623) $generated@@153)) ($generated@@263 $generated@@623 ($generated@@81 $generated@@622))) (and (= ($generated@@326 ($generated@@162 $generated@@78 $generated@@623)) $generated@@623) ($generated@@80 ($generated@@162 $generated@@78 $generated@@623) ($generated@@81 $generated@@622))))
 :pattern ( ($generated@@263 $generated@@623 ($generated@@81 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@68) (= (type $generated@@625) ($generated@@159 $generated@@153))) (= ($generated@@80 ($generated@@158 $generated@@625) ($generated@@81 $generated@@624)) ($generated@@80 $generated@@625 ($generated@@413 $generated@@45))))
 :pattern ( ($generated@@80 ($generated@@158 $generated@@625) ($generated@@81 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@626 ($generated@@189 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@626 $generated@@629)))) ($generated@@298 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@99 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@92 $generated@@626 ($generated@@189 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@78) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@297 $generated@@632) (and ($generated@@175 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@92 $generated@@630 ($generated@@176 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@92 $generated@@630 ($generated@@176 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@298 ($generated@@183 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@298 ($generated@@183 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@78) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@297 $generated@@636) (and ($generated@@175 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@68) ($generated@@92 $generated@@634 ($generated@@176 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@92 $generated@@634 ($generated@@176 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@298 ($generated@@184 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@298 ($generated@@184 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@153) (= (type $generated@@639) $generated@@153)) (= ($generated@@262 ($generated@@278 $generated@@638) ($generated@@278 $generated@@639)) ($generated@@278 ($generated@@262 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@262 ($generated@@278 $generated@@638) ($generated@@278 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@153) (= ($generated@@320 ($generated@@278 $generated@@640)) ($generated@@278 ($generated@@320 $generated@@640))))
 :pattern ( ($generated@@320 ($generated@@278 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) ($generated@@159 $generated@@153)) (= ($generated@@158 ($generated@@278 $generated@@641)) ($generated@@278 ($generated@@158 $generated@@641))))
 :pattern ( ($generated@@158 ($generated@@278 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (= ($generated@@326 ($generated@@278 $generated@@642)) ($generated@@278 ($generated@@326 $generated@@642)))
 :pattern ( ($generated@@326 ($generated@@278 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@163 (type $generated@@643))))
 (=> (and (= (type $generated@@643) ($generated@@159 $generated@@644)) (= ($generated@@160 $generated@@643) 0)) (= $generated@@643 ($generated@@317 $generated@@644))))
 :pattern ( ($generated@@160 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@646)))
 (=> (and (and (= (type $generated@@645) ($generated@@94 $generated@@648 $generated@@2)) (= (type $generated@@647) $generated@@2)) (<= 0 ($generated $generated@@647))) (= ($generated@@331 ($generated@@100 $generated@@645 $generated@@646 $generated@@647)) (+ (- ($generated@@331 $generated@@645) ($generated ($generated@@99 $generated@@645 $generated@@646))) ($generated $generated@@647)))))
 :pattern ( ($generated@@331 ($generated@@100 $generated@@645 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@650) $generated@@2)) ($generated@@92 $generated@@650 $generated@@46 $generated@@649))
 :pattern ( ($generated@@92 $generated@@650 $generated@@46 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@652) $generated@@3)) ($generated@@92 $generated@@652 $generated@@47 $generated@@651))
 :pattern ( ($generated@@92 $generated@@652 $generated@@47 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@654) $generated@@4)) ($generated@@92 $generated@@654 $generated@@44 $generated@@653))
 :pattern ( ($generated@@92 $generated@@654 $generated@@44 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@656) $generated@@502)) ($generated@@92 $generated@@656 $generated@@45 $generated@@655))
 :pattern ( ($generated@@92 $generated@@656 $generated@@45 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@658) $generated@@153)) ($generated@@92 $generated@@658 $generated@@48 $generated@@657))
 :pattern ( ($generated@@92 $generated@@658 $generated@@48 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@159 $generated@@153)) (= (type $generated@@660) $generated@@68)) (= ($generated@@80 $generated@@659 ($generated@@413 $generated@@660)) (forall (($generated@@661 Int) ) (!  (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@160 $generated@@659))) ($generated@@263 ($generated@@157 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@157 $generated@@659 $generated@@661))
))))
 :pattern ( ($generated@@80 $generated@@659 ($generated@@413 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@159 $generated@@153)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@160 $generated@@662))) (< ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@662 $generated@@663))) ($generated@@603 $generated@@662))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@342 $generated@@153 $generated@@153)) (= (type $generated@@665) $generated@@68)) (= (type $generated@@666) $generated@@68)) ($generated@@80 $generated@@664 ($generated@@457 $generated@@665 $generated@@666))) (and (and ($generated@@80 ($generated@@340 $generated@@664) ($generated@@286 $generated@@665)) ($generated@@80 ($generated@@389 $generated@@664) ($generated@@286 $generated@@666))) ($generated@@80 ($generated@@431 $generated@@664) ($generated@@286 ($generated@@176 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@80 $generated@@664 ($generated@@457 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@360 $generated@@153 $generated@@153)) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) $generated@@68)) ($generated@@80 $generated@@667 ($generated@@465 $generated@@668 $generated@@669))) (and (and ($generated@@80 ($generated@@358 $generated@@667) ($generated@@291 $generated@@668)) ($generated@@80 ($generated@@400 $generated@@667) ($generated@@291 $generated@@669))) ($generated@@80 ($generated@@439 $generated@@667) ($generated@@291 ($generated@@176 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@80 $generated@@667 ($generated@@465 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@80 $generated@@670 $generated@@46))
 :pattern ( ($generated@@80 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@80 $generated@@671 $generated@@47))
 :pattern ( ($generated@@80 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@80 $generated@@672 $generated@@44))
 :pattern ( ($generated@@80 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@502) ($generated@@80 $generated@@673 $generated@@45))
 :pattern ( ($generated@@80 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@153) ($generated@@80 $generated@@674 $generated@@48))
 :pattern ( ($generated@@80 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@675) ($generated@@196 $generated@@95 $generated@@4)) (= (type $generated@@676) $generated@@95)) (= (type $generated@@677) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@678) $generated@@78)) (= (type $generated@@679) ($generated@@196 $generated@@95 $generated@@4))) (= (type $generated@@680) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@682  (=> (and (= $generated@@675 ($generated@@250 $generated@@676 $generated@@677 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@271 $generated@@678))))
(let (($generated@@683 true))
(let (($generated@@684  (=> (and (and (= $generated@@679 ($generated@@195 $generated@@676 $generated@@677 $generated@@60 false)) ($generated@@92 $generated@@678 ($generated@@81 $generated@@680) $generated@@677)) (and ($generated@@270 $generated@@680 $generated@@678) ($generated@@82 $generated@@680 $generated@@678))) (and (=> (= (ControlFlow 0 4) 1) $generated@@683) (=> (= (ControlFlow 0 4) 3) $generated@@682)))))
(let (($generated@@685  (=> (and ($generated@@297 $generated@@677) ($generated@@681 $generated@@677)) (=> (and (and ($generated@@80 $generated@@678 ($generated@@81 $generated@@680)) ($generated@@92 $generated@@678 ($generated@@81 $generated@@680) $generated@@677)) (and (= 2 $generated@@76) (= (ControlFlow 0 5) 4))) $generated@@684))))
$generated@@685)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@144 (T@U Int) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@149 (T@T T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) Bool)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@T) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@138) (= (type $generated@@143) $generated@@138)) (and ($generated@@137 $generated@@142) ($generated@@137 $generated@@143))) (= ($generated@@136 $generated@@142 $generated@@143) (= ($generated@@139 $generated@@142) ($generated@@139 $generated@@143))))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@142))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@143))
)))
(assert  (and (and (and (and (forall (($generated@@151 T@T) ) (= ($generated@@1 ($generated@@146 $generated@@151)) 16)) (forall (($generated@@152 T@T) ) (! (= ($generated@@150 ($generated@@146 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@146 $generated@@152))
))) (forall (($generated@@153 T@U) ($generated@@154 Int) ) (! (let (($generated@@155 ($generated@@150 (type $generated@@153))))
(= (type ($generated@@144 $generated@@153 $generated@@154)) $generated@@155))
 :pattern ( ($generated@@144 $generated@@153 $generated@@154))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@145 $generated@@156)) $generated@@138)
 :pattern ( ($generated@@145 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@U) ) (! (= (type ($generated@@149 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@149 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 Int) ) (!  (=> (= (type $generated@@159) ($generated@@146 $generated@@140)) (=> (and (<= 0 $generated@@160) (< $generated@@160 ($generated@@147 $generated@@159))) (< ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@159 $generated@@160))) ($generated@@148 ($generated@@145 $generated@@159)))))
 :pattern ( ($generated@@144 $generated@@159 $generated@@160) ($generated@@145 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@161 $generated@@162 ($generated@@79 0)))
 :pattern ( ($generated@@161 $generated@@162 ($generated@@79 0)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@165 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@68) (= (type $generated@@168) $generated@@68)) (= (type $generated@@169) $generated@@138)) ($generated@@161 $generated@@169 ($generated@@164 $generated@@167 $generated@@168))) ($generated@@163 $generated@@169))
 :pattern ( ($generated@@163 $generated@@169) ($generated@@161 $generated@@169 ($generated@@164 $generated@@167 $generated@@168)))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@140)
 :pattern ( ($generated@@171 $generated@@173))
)) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@140)
 :pattern ( ($generated@@172 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@138) (= (type $generated@@176) $generated@@138)) true) (= ($generated@@170 $generated@@175 $generated@@176)  (and (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)) (= ($generated@@172 $generated@@175) ($generated@@172 $generated@@176)))))
 :pattern ( ($generated@@170 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@68)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@181) $generated@@68)) ($generated@@161 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@161 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 17)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@81 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@81) (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@81)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@184 $generated@@81 $generated@@4))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@71 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@81) (= (type $generated@@244) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@245) ($generated@@70 $generated@@4))) (= (type $generated@@247) $generated@@81)) (= (type $generated@@248) ($generated@@70 $generated@@249))) (= ($generated@@0 ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert  (and (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@251 $generated@@256 $generated@@257)) $generated@@140)
 :pattern ( ($generated@@251 $generated@@256 $generated@@257))
)) (forall (($generated@@258 T@U) ) (! (= (type ($generated@@253 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@258))
))))
(assert  (=> (<= 1 $generated@@250) (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@138)) (or ($generated@@252 $generated@@259 $generated@@260) (and (not (= 1 $generated@@250)) (and ($generated@@161 $generated@@260 ($generated@@253 $generated@@259)) (not ($generated@@254 $generated@@259 $generated@@260)))))) ($generated@@255 ($generated@@251 $generated@@259 $generated@@260) $generated@@259))
 :pattern ( ($generated@@251 $generated@@259 $generated@@260))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263)) $generated@@138)
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@68) (= (type $generated@@265) $generated@@68)) (= (type $generated@@266) $generated@@140)) (= (type $generated@@267) $generated@@140)) (= ($generated@@161 ($generated@@261 $generated@@266 $generated@@267) ($generated@@164 $generated@@264 $generated@@265))  (and ($generated@@255 $generated@@266 $generated@@264) ($generated@@255 $generated@@267 $generated@@265))))
 :pattern ( ($generated@@161 ($generated@@261 $generated@@266 $generated@@267) ($generated@@164 $generated@@264 $generated@@265)))
)))
(assert  (=> (<= 0 $generated@@250) (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@138)) (or ($generated@@268 $generated@@270 $generated@@271) (and (not (= 0 $generated@@250)) ($generated@@161 $generated@@271 ($generated@@253 $generated@@270))))) (= ($generated@@254 $generated@@270 $generated@@271) ($generated@@269 $generated@@271)))
 :pattern ( ($generated@@254 $generated@@270 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@138) (= (type $generated@@273) $generated@@138)) (= ($generated@@170 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@170 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@138) (= (type $generated@@275) $generated@@138)) (= ($generated@@136 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@136 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@279) $generated@@68)) (= ($generated@@161 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@140) ($generated@@0 ($generated@@85 $generated@@278 $generated@@280))) ($generated@@255 $generated@@280 $generated@@279))
 :pattern ( ($generated@@85 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@161 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@68)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@284) $generated@@68)) (= ($generated@@161 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@140) ($generated@@0 ($generated@@85 $generated@@283 $generated@@285))) ($generated@@255 $generated@@285 $generated@@284))
 :pattern ( ($generated@@85 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@161 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@286 $generated@@289) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@68) (= (type $generated@@293) $generated@@68)) (= (type $generated@@294) $generated@@140)) (= (type $generated@@295) $generated@@140)) (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@290 $generated@@296)) (= ($generated@@78 ($generated@@261 $generated@@294 $generated@@295) ($generated@@164 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@78 ($generated@@261 $generated@@294 $generated@@295) ($generated@@164 $generated@@292 $generated@@293) $generated@@296))
)))
(assert  (=> (<= 1 $generated@@250) (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@297) $generated@@68) (= (type $generated@@298) $generated@@138)) (or ($generated@@252 $generated@@297 ($generated@@286 $generated@@298)) (and (not (= 1 $generated@@250)) (and ($generated@@161 $generated@@298 ($generated@@253 $generated@@297)) (not ($generated@@0 ($generated@@286 ($generated@@11 ($generated@@254 $generated@@297 ($generated@@286 $generated@@298)))))))))) (= ($generated@@251 $generated@@297 ($generated@@286 $generated@@298)) ($generated@@286 ($generated@@139 ($generated@@286 $generated@@298)))))
 :weight 3
 :pattern ( ($generated@@251 $generated@@297 ($generated@@286 $generated@@298)))
))))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@72)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@138) (= ($generated@@163 $generated@@301) (= ($generated@@299 $generated@@301) $generated@@61)))
 :pattern ( ($generated@@163 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@138) (= ($generated@@137 $generated@@302) (= ($generated@@299 $generated@@302) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@138) (= ($generated@@269 $generated@@303) (= ($generated@@299 $generated@@303) $generated@@65)))
 :pattern ( ($generated@@269 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@150 (type $generated@@305))))
 (=> (and (= (type $generated@@305) ($generated@@146 $generated@@307)) (= (type $generated@@306) ($generated@@146 $generated@@307))) (= ($generated@@304 $generated@@305 $generated@@306)  (and (= ($generated@@147 $generated@@305) ($generated@@147 $generated@@306)) (forall (($generated@@308 Int) ) (!  (=> (and (<= 0 $generated@@308) (< $generated@@308 ($generated@@147 $generated@@305))) (= ($generated@@144 $generated@@305 $generated@@308) ($generated@@144 $generated@@306 $generated@@308)))
 :pattern ( ($generated@@144 $generated@@305 $generated@@308))
 :pattern ( ($generated@@144 $generated@@306 $generated@@308))
))))))
 :pattern ( ($generated@@304 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@138) ($generated@@163 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@140) (= (type $generated@@311) $generated@@140)) (= $generated@@309 ($generated@@261 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@163 $generated@@309))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@146 $generated@@313))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@T) ) (! (= ($generated@@147 ($generated@@312 $generated@@314)) 0)
 :pattern ( ($generated@@312 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@138)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@138) ($generated@@137 $generated@@317)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@140) (= $generated@@317 ($generated@@315 $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
)))
 :pattern ( ($generated@@137 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@138) ($generated@@269 $generated@@319)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) ($generated@@146 $generated@@140)) (= $generated@@319 ($generated@@145 $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@269 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@140)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@68) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@291 ($generated@@321 $generated@@323) $generated@@324 $generated@@325) ($generated@@78 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@291 ($generated@@321 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@80 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@83 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@80 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@85 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@73)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@68) (and (= ($generated@@76 ($generated@@253 $generated@@334)) $generated@@64) (= ($generated@@332 ($generated@@253 $generated@@334)) $generated@@67)))
 :pattern ( ($generated@@253 $generated@@334))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 18)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@80 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 19)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@85 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@85 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert  (=> (<= 0 $generated@@250) (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@371) $generated@@68) (= (type $generated@@372) $generated@@138)) (or ($generated@@268 $generated@@371 $generated@@372) (and (not (= 0 $generated@@250)) ($generated@@161 $generated@@372 ($generated@@253 $generated@@371))))) true)
 :pattern ( ($generated@@254 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@83 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@80 $generated@@374 $generated@@2)) (= ($generated@@178 $generated@@373) (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@374) (and (<= 0 ($generated ($generated@@85 $generated@@373 $generated@@375))) (<= ($generated ($generated@@85 $generated@@373 $generated@@375)) ($generated@@326 $generated@@373))))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
)))))
 :pattern ( ($generated@@178 $generated@@373))
)))
(assert  (=> (<= 0 $generated@@250) (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@376) $generated@@68) (= (type $generated@@377) $generated@@138)) (or ($generated@@268 $generated@@376 ($generated@@286 $generated@@377)) (and (not (= 0 $generated@@250)) ($generated@@161 $generated@@377 ($generated@@253 $generated@@376))))) (= ($generated@@254 $generated@@376 ($generated@@286 $generated@@377)) ($generated@@0 ($generated@@286 ($generated@@11 ($generated@@269 ($generated@@286 $generated@@377)))))))
 :weight 3
 :pattern ( ($generated@@254 $generated@@376 ($generated@@286 $generated@@377)))
))))
(assert (forall (($generated@@379 T@U) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@146 $generated@@140))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@380) $generated@@138) (= (type $generated@@381) $generated@@138)) (and ($generated@@269 $generated@@380) ($generated@@269 $generated@@381))) (= ($generated@@136 $generated@@380 $generated@@381) ($generated@@304 ($generated@@378 $generated@@380) ($generated@@378 $generated@@381))))
 :pattern ( ($generated@@136 $generated@@380 $generated@@381) ($generated@@269 $generated@@380))
 :pattern ( ($generated@@136 $generated@@380 $generated@@381) ($generated@@269 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@335 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@339 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@339 (type $generated@@389))))
(let (($generated@@391 ($generated@@338 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@337 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@336 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@357 (type $generated@@393))))
(let (($generated@@395 ($generated@@356 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@355 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@354 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@353 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@357 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@80 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@357 (type $generated@@400))))
(let (($generated@@402 ($generated@@356 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@355 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@354 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@405) $generated@@68)) (= ($generated@@161 $generated@@404 ($generated@@177 $generated@@405)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@404 $generated@@406)))) ($generated@@255 $generated@@406 $generated@@405))
 :pattern ( ($generated@@85 $generated@@404 $generated@@406))
))))
 :pattern ( ($generated@@161 $generated@@404 ($generated@@177 $generated@@405)))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) $generated@@68) (= (type $generated@@408) $generated@@140)) (= (type $generated@@409) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@290 $generated@@409)) (= ($generated@@78 ($generated@@315 $generated@@408) ($generated@@253 $generated@@407) $generated@@409) ($generated@@291 $generated@@408 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@78 ($generated@@315 $generated@@408) ($generated@@253 $generated@@407) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (= (type ($generated@@410 $generated@@411)) $generated@@68)
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@412) $generated@@138) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@290 $generated@@413) (and ($generated@@269 $generated@@412) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@68) ($generated@@78 $generated@@412 ($generated@@253 $generated@@414) $generated@@413))
 :pattern ( ($generated@@78 $generated@@412 ($generated@@253 $generated@@414) $generated@@413))
))))) ($generated@@78 ($generated@@378 $generated@@412) ($generated@@410 $generated@@45) $generated@@413))
 :pattern ( ($generated@@78 ($generated@@378 $generated@@412) ($generated@@410 $generated@@45) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) $generated@@68) (= (type $generated@@416) ($generated@@146 $generated@@140))) (= (type $generated@@417) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@290 $generated@@417)) (= ($generated@@78 ($generated@@145 $generated@@416) ($generated@@253 $generated@@415) $generated@@417) ($generated@@78 $generated@@416 ($generated@@410 $generated@@45) $generated@@417)))
 :pattern ( ($generated@@78 ($generated@@145 $generated@@416) ($generated@@253 $generated@@415) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@276 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@140) ($generated@@0 ($generated@@85 $generated@@418 $generated@@421))) ($generated@@291 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@85 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@276 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@281 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@140) ($generated@@0 ($generated@@85 $generated@@422 $generated@@425))) ($generated@@291 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@85 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@281 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@85 ($generated@@327 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@85 ($generated@@327 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@339 (type $generated@@431))))
(let (($generated@@433 ($generated@@338 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@337 $generated@@140 $generated@@140)) (= (type $generated@@435) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@434) ($generated@@171 ($generated@@149 $generated@@138 $generated@@435)))) (= ($generated@@85 ($generated@@429 $generated@@434) ($generated@@171 ($generated@@149 $generated@@138 $generated@@435))) ($generated@@172 ($generated@@149 $generated@@138 $generated@@435))))))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@357 (type $generated@@439))))
(let (($generated@@441 ($generated@@356 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@80 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@355 $generated@@140 $generated@@140)) (= (type $generated@@443) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@85 ($generated@@353 $generated@@442) ($generated@@171 ($generated@@149 $generated@@138 $generated@@443)))) (= ($generated@@85 ($generated@@437 $generated@@442) ($generated@@171 ($generated@@149 $generated@@138 $generated@@443))) ($generated@@172 ($generated@@149 $generated@@138 $generated@@443))))))
 :pattern ( ($generated@@85 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@338 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@337 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@85 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@444) $generated@@448))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@356 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@355 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@85 ($generated@@353 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@85 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@337 $generated@@140 $generated@@140)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@457) $generated@@461))) (and ($generated@@291 ($generated@@85 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@291 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@355 $generated@@140 $generated@@140)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@465) $generated@@469))) (and ($generated@@291 ($generated@@85 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@291 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@78 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@138)) ($generated@@161 $generated@@471 ($generated@@253 $generated@@470))) (or ($generated@@137 $generated@@471) ($generated@@269 $generated@@471)))
 :pattern ( ($generated@@269 $generated@@471) ($generated@@161 $generated@@471 ($generated@@253 $generated@@470)))
 :pattern ( ($generated@@137 $generated@@471) ($generated@@161 $generated@@471 ($generated@@253 $generated@@470)))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@150 (type $generated@@472))))
 (=> (and (and (= (type $generated@@472) ($generated@@146 $generated@@474)) (= (type $generated@@473) ($generated@@146 $generated@@474))) ($generated@@304 $generated@@472 $generated@@473)) (= $generated@@472 $generated@@473)))
 :pattern ( ($generated@@304 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@476 T@T) ) (! (= (type ($generated@@475 $generated@@476)) ($generated@@80 $generated@@476 $generated@@4))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@357 (type $generated@@477))))
(let (($generated@@479 ($generated@@356 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@355 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@354 $generated@@479 $generated@@478)) (= ($generated@@353 $generated@@477) ($generated@@475 $generated@@479))))))
 :pattern ( ($generated@@353 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@357 (type $generated@@480))))
(let (($generated@@482 ($generated@@356 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@355 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@354 $generated@@482 $generated@@481)) (= ($generated@@397 $generated@@480) ($generated@@475 $generated@@481))))))
 :pattern ( ($generated@@397 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@357 (type $generated@@483))))
(let (($generated@@485 ($generated@@356 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@355 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@354 $generated@@485 $generated@@484)) (= ($generated@@436 $generated@@483) ($generated@@475 $generated@@140))))))
 :pattern ( ($generated@@436 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@339 (type $generated@@486))))
(let (($generated@@488 ($generated@@338 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@337 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@336 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@140) (= (type $generated@@490) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@428 $generated@@486) ($generated@@321 ($generated@@261 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@428 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@357 (type $generated@@491))))
(let (($generated@@493 ($generated@@356 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@355 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@354 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@140) (= (type $generated@@495) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@436 $generated@@491) ($generated@@321 ($generated@@261 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@436 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@140) ($generated@@255 $generated@@496 $generated@@46)) (and (= ($generated@@321 ($generated@@149 $generated@@2 $generated@@496)) $generated@@496) ($generated@@161 ($generated@@149 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@255 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@140) ($generated@@255 $generated@@497 $generated@@47)) (and (= ($generated@@321 ($generated@@149 $generated@@3 $generated@@497)) $generated@@497) ($generated@@161 ($generated@@149 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@255 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@140) ($generated@@255 $generated@@498 $generated@@44)) (and (= ($generated@@321 ($generated@@149 $generated@@4 $generated@@498)) $generated@@498) ($generated@@161 ($generated@@149 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@255 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 20))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@140) ($generated@@255 $generated@@500 $generated@@45)) (and (= ($generated@@321 ($generated@@149 $generated@@499 $generated@@500)) $generated@@500) ($generated@@161 ($generated@@149 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@255 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@255 ($generated@@321 $generated@@501) $generated@@502) ($generated@@161 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@255 ($generated@@321 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@83 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@80 $generated@@504 $generated@@2)) (<= 0 ($generated@@326 $generated@@503))))
 :pattern ( ($generated@@326 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@150 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@146 $generated@@506)) (<= 0 ($generated@@147 $generated@@505))))
 :pattern ( ($generated@@147 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@454 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@454 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@454 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@454 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@462 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@462 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@462 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@462 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@140) (= (type $generated@@528) $generated@@140)) (= ($generated@@299 ($generated@@261 $generated@@527 $generated@@528)) $generated@@61))
 :pattern ( ($generated@@261 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@164 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@164 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@533 ($generated@@164 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@164 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@140) (= (type $generated@@538) $generated@@140)) (= ($generated@@171 ($generated@@261 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@261 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@140) (= (type $generated@@540) $generated@@140)) (= ($generated@@172 ($generated@@261 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@261 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@146 $generated@@140)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@541 ($generated@@410 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@147 $generated@@541))) ($generated@@291 ($generated@@144 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@144 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@78 $generated@@541 ($generated@@410 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@79 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@79 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@276 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@276 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@276 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@281 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@281 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@281 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@177 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@177 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@177 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@410 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@410 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@410 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@410 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@140) (= ($generated@@299 ($generated@@315 $generated@@563)) $generated@@63))
 :pattern ( ($generated@@315 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@253 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@253 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@140) (= ($generated@@139 ($generated@@315 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@315 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) ($generated@@146 $generated@@140)) (= ($generated@@299 ($generated@@145 $generated@@568)) $generated@@65))
 :pattern ( ($generated@@145 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) ($generated@@146 $generated@@140)) (= ($generated@@378 ($generated@@145 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@145 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
(= ($generated@@149 $generated@@571 ($generated@@321 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@321 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@337 $generated@@140 $generated@@140)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) (= ($generated@@161 $generated@@572 ($generated@@454 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@572) $generated@@575))) (and ($generated@@255 ($generated@@85 ($generated@@429 $generated@@572) $generated@@575) $generated@@574) ($generated@@255 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@572) $generated@@575))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@161 $generated@@572 ($generated@@454 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@355 $generated@@140 $generated@@140)) (= (type $generated@@577) $generated@@68)) (= (type $generated@@578) $generated@@68)) (= ($generated@@161 $generated@@576 ($generated@@462 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@576) $generated@@579))) (and ($generated@@255 ($generated@@85 ($generated@@437 $generated@@576) $generated@@579) $generated@@578) ($generated@@255 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@576) $generated@@579))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@161 $generated@@576 ($generated@@462 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@140)) (= ($generated@@161 ($generated@@315 $generated@@581) ($generated@@253 $generated@@580)) ($generated@@255 $generated@@581 $generated@@580)))
 :pattern ( ($generated@@161 ($generated@@315 $generated@@581) ($generated@@253 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@140) (= (type $generated@@584) $generated@@140)) (< ($generated@@582 $generated@@583) ($generated@@148 ($generated@@261 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@261 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@140) (= (type $generated@@586) $generated@@140)) (< ($generated@@582 $generated@@586) ($generated@@148 ($generated@@261 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@261 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@140) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) ($generated@@255 $generated@@587 ($generated@@454 $generated@@588 $generated@@589))) (and (= ($generated@@321 ($generated@@149 ($generated@@337 $generated@@140 $generated@@140) $generated@@587)) $generated@@587) ($generated@@161 ($generated@@149 ($generated@@337 $generated@@140 $generated@@140) $generated@@587) ($generated@@454 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@255 $generated@@587 ($generated@@454 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@140) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) ($generated@@255 $generated@@590 ($generated@@462 $generated@@591 $generated@@592))) (and (= ($generated@@321 ($generated@@149 ($generated@@355 $generated@@140 $generated@@140) $generated@@590)) $generated@@590) ($generated@@161 ($generated@@149 ($generated@@355 $generated@@140 $generated@@140) $generated@@590) ($generated@@462 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@255 $generated@@590 ($generated@@462 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@140)) ($generated@@255 $generated@@595 ($generated@@164 $generated@@593 $generated@@594))) (and (= ($generated@@321 ($generated@@149 $generated@@138 $generated@@595)) $generated@@595) ($generated@@161 ($generated@@149 $generated@@138 $generated@@595) ($generated@@164 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@595 ($generated@@164 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@140) (< ($generated@@582 $generated@@596) ($generated@@148 ($generated@@315 $generated@@596))))
 :pattern ( ($generated@@315 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) ($generated@@146 $generated@@140)) (< ($generated@@597 $generated@@598) ($generated@@148 ($generated@@145 $generated@@598))))
 :pattern ( ($generated@@145 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@138) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@290 $generated@@601) (and ($generated@@137 $generated@@599) ($generated@@78 $generated@@599 ($generated@@253 $generated@@600) $generated@@601)))) ($generated@@291 ($generated@@139 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@291 ($generated@@139 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (not ($generated@@0 ($generated@@85 ($generated@@475 $generated@@603) $generated@@602))))
 :pattern ( (let (($generated@@603 (type $generated@@602)))
($generated@@85 ($generated@@475 $generated@@603) $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (and (= ($generated@@76 ($generated@@164 $generated@@604 $generated@@605)) $generated@@62) (= ($generated@@332 ($generated@@164 $generated@@604 $generated@@605)) $generated@@66)))
 :pattern ( ($generated@@164 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@138) (= ($generated@@582 ($generated@@321 $generated@@606)) ($generated@@148 $generated@@606)))
 :pattern ( ($generated@@582 ($generated@@321 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@140) ($generated@@255 $generated@@607 ($generated@@79 0))) (and (= ($generated@@321 ($generated@@149 $generated@@2 $generated@@607)) $generated@@607) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@607) ($generated@@79 0))))
 :pattern ( ($generated@@255 $generated@@607 ($generated@@79 0)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@140) (= (type $generated@@609) $generated@@68)) ($generated@@255 $generated@@608 ($generated@@276 $generated@@609))) (and (= ($generated@@321 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@608)) $generated@@608) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@608) ($generated@@276 $generated@@609))))
 :pattern ( ($generated@@255 $generated@@608 ($generated@@276 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@140) (= (type $generated@@611) $generated@@68)) ($generated@@255 $generated@@610 ($generated@@281 $generated@@611))) (and (= ($generated@@321 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@610)) $generated@@610) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@610) ($generated@@281 $generated@@611))))
 :pattern ( ($generated@@255 $generated@@610 ($generated@@281 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@140) (= (type $generated@@613) $generated@@68)) ($generated@@255 $generated@@612 ($generated@@177 $generated@@613))) (and (= ($generated@@321 ($generated@@149 ($generated@@80 $generated@@140 $generated@@2) $generated@@612)) $generated@@612) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@2) $generated@@612) ($generated@@177 $generated@@613))))
 :pattern ( ($generated@@255 $generated@@612 ($generated@@177 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@140) (= (type $generated@@615) $generated@@68)) ($generated@@255 $generated@@614 ($generated@@410 $generated@@615))) (and (= ($generated@@321 ($generated@@149 ($generated@@146 $generated@@140) $generated@@614)) $generated@@614) ($generated@@161 ($generated@@149 ($generated@@146 $generated@@140) $generated@@614) ($generated@@410 $generated@@615))))
 :pattern ( ($generated@@255 $generated@@614 ($generated@@410 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@140)) ($generated@@255 $generated@@617 ($generated@@253 $generated@@616))) (and (= ($generated@@321 ($generated@@149 $generated@@138 $generated@@617)) $generated@@617) ($generated@@161 ($generated@@149 $generated@@138 $generated@@617) ($generated@@253 $generated@@616))))
 :pattern ( ($generated@@255 $generated@@617 ($generated@@253 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@68) (= (type $generated@@619) ($generated@@146 $generated@@140))) (= ($generated@@161 ($generated@@145 $generated@@619) ($generated@@253 $generated@@618)) ($generated@@161 $generated@@619 ($generated@@410 $generated@@45))))
 :pattern ( ($generated@@161 ($generated@@145 $generated@@619) ($generated@@253 $generated@@618)))
)))
(assert  (=> (<= 1 $generated@@250) (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@68) (= (type $generated@@621) $generated@@138)) (or ($generated@@252 $generated@@620 $generated@@621) (and (not (= 1 $generated@@250)) (and ($generated@@161 $generated@@621 ($generated@@253 $generated@@620)) (not ($generated@@254 $generated@@620 $generated@@621)))))) (= ($generated@@251 $generated@@620 $generated@@621) ($generated@@139 $generated@@621)))
 :pattern ( ($generated@@251 $generated@@620 $generated@@621))
))))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@622 ($generated@@177 $generated@@623) $generated@@624) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@622 $generated@@625)))) ($generated@@291 $generated@@625 $generated@@623 $generated@@624))
 :pattern ( ($generated@@85 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@177 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@138) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@290 $generated@@628) (and ($generated@@163 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@68) ($generated@@78 $generated@@626 ($generated@@164 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@164 $generated@@627 $generated@@629) $generated@@628))
))))) ($generated@@291 ($generated@@171 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@291 ($generated@@171 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@138) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@290 $generated@@632) (and ($generated@@163 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@78 $generated@@630 ($generated@@164 $generated@@633 $generated@@631) $generated@@632))
 :pattern ( ($generated@@78 $generated@@630 ($generated@@164 $generated@@633 $generated@@631) $generated@@632))
))))) ($generated@@291 ($generated@@172 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@291 ($generated@@172 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@140) (= (type $generated@@635) $generated@@140)) (= ($generated@@261 ($generated@@286 $generated@@634) ($generated@@286 $generated@@635)) ($generated@@286 ($generated@@261 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@261 ($generated@@286 $generated@@634) ($generated@@286 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@140) (= ($generated@@315 ($generated@@286 $generated@@636)) ($generated@@286 ($generated@@315 $generated@@636))))
 :pattern ( ($generated@@315 ($generated@@286 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) ($generated@@146 $generated@@140)) (= ($generated@@145 ($generated@@286 $generated@@637)) ($generated@@286 ($generated@@145 $generated@@637))))
 :pattern ( ($generated@@145 ($generated@@286 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (= ($generated@@321 ($generated@@286 $generated@@638)) ($generated@@286 ($generated@@321 $generated@@638)))
 :pattern ( ($generated@@321 ($generated@@286 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@150 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@146 $generated@@640)) (= ($generated@@147 $generated@@639) 0)) (= $generated@@639 ($generated@@312 $generated@@640))))
 :pattern ( ($generated@@147 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@80 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@326 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@326 $generated@@641) ($generated ($generated@@85 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@326 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@2)) ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@3)) ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@4)) ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@652) $generated@@499)) ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
 :pattern ( ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@654) $generated@@140)) ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
 :pattern ( ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@146 $generated@@140)) (= (type $generated@@656) $generated@@68)) (= ($generated@@161 $generated@@655 ($generated@@410 $generated@@656)) (forall (($generated@@657 Int) ) (!  (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@147 $generated@@655))) ($generated@@255 ($generated@@144 $generated@@655 $generated@@657) $generated@@656))
 :pattern ( ($generated@@144 $generated@@655 $generated@@657))
))))
 :pattern ( ($generated@@161 $generated@@655 ($generated@@410 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ) (!  (=> (= (type $generated@@658) ($generated@@146 $generated@@140)) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@147 $generated@@658))) (< ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@658 $generated@@659))) ($generated@@597 $generated@@658))))
 :pattern ( ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@658 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@337 $generated@@140 $generated@@140)) (= (type $generated@@661) $generated@@68)) (= (type $generated@@662) $generated@@68)) ($generated@@161 $generated@@660 ($generated@@454 $generated@@661 $generated@@662))) (and (and ($generated@@161 ($generated@@335 $generated@@660) ($generated@@276 $generated@@661)) ($generated@@161 ($generated@@386 $generated@@660) ($generated@@276 $generated@@662))) ($generated@@161 ($generated@@428 $generated@@660) ($generated@@276 ($generated@@164 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@161 $generated@@660 ($generated@@454 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@355 $generated@@140 $generated@@140)) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) $generated@@68)) ($generated@@161 $generated@@663 ($generated@@462 $generated@@664 $generated@@665))) (and (and ($generated@@161 ($generated@@353 $generated@@663) ($generated@@281 $generated@@664)) ($generated@@161 ($generated@@397 $generated@@663) ($generated@@281 $generated@@665))) ($generated@@161 ($generated@@436 $generated@@663) ($generated@@281 ($generated@@164 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@161 $generated@@663 ($generated@@462 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@2) ($generated@@161 $generated@@666 $generated@@46))
 :pattern ( ($generated@@161 $generated@@666 $generated@@46))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@3) ($generated@@161 $generated@@667 $generated@@47))
 :pattern ( ($generated@@161 $generated@@667 $generated@@47))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@4) ($generated@@161 $generated@@668 $generated@@44))
 :pattern ( ($generated@@161 $generated@@668 $generated@@44))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@499) ($generated@@161 $generated@@669 $generated@@45))
 :pattern ( ($generated@@161 $generated@@669 $generated@@45))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@140) ($generated@@161 $generated@@670 $generated@@48))
 :pattern ( ($generated@@161 $generated@@670 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@671) ($generated@@184 $generated@@81 $generated@@4)) (= (type $generated@@672) $generated@@81)) (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@674) $generated@@138)) (= (type $generated@@675) ($generated@@184 $generated@@81 $generated@@4))) (= (type $generated@@676) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@678  (=> (and (= $generated@@671 ($generated@@238 $generated@@672 $generated@@673 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@137 $generated@@674))))
(let (($generated@@679 true))
(let (($generated@@680  (=> (and (and (= $generated@@675 ($generated@@183 $generated@@672 $generated@@673 $generated@@60 false)) ($generated@@78 $generated@@674 ($generated@@253 $generated@@676) $generated@@673)) (and ($generated@@268 $generated@@676 $generated@@674) (not ($generated@@254 $generated@@676 $generated@@674)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@679) (=> (= (ControlFlow 0 4) 3) $generated@@678)))))
(let (($generated@@681  (=> (and ($generated@@290 $generated@@673) ($generated@@677 $generated@@673)) (=> (and (and ($generated@@161 $generated@@674 ($generated@@253 $generated@@676)) ($generated@@78 $generated@@674 ($generated@@253 $generated@@676) $generated@@673)) (and (= 1 $generated@@250) (= (ControlFlow 0 5) 4))) $generated@@680))))
$generated@@681)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
