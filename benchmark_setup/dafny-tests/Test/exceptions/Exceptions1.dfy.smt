(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@264 (Int) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 () T@T)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U Int) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Bool)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@80 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@70 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@80) (= (type $generated@@216) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@217) ($generated@@69 $generated@@4))) (= (type $generated@@219) $generated@@80)) (= (type $generated@@220) ($generated@@69 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (= (type $generated@@222) $generated@@67))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@80) (= (type $generated@@224) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@223 $generated@@222 $generated@@224) ($generated@@77 $generated@@223 $generated@@139 $generated@@224)))
 :pattern ( ($generated@@77 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@147)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@156)) (= (type $generated@@232) $generated@@156)) (= ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@147) (= (type $generated@@234) $generated@@147)) (= ($generated@@153 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@153 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@156) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@156) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@245 $generated@@246) $generated@@246)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert  (and (and (and (forall (($generated@@255 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@255)) 17)) (forall (($generated@@256 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@256)) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@251 $generated@@257 $generated@@258)) ($generated@@253 $generated@@259)))
 :pattern ( ($generated@@251 $generated@@257 $generated@@258))
))) (forall (($generated@@260 T@U) ) (! (= (type ($generated@@252 $generated@@260)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@260))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) ($generated@@253 $generated@@156)) (= (type $generated@@262) $generated@@156)) (= (type $generated@@263) $generated@@67)) (and ($generated@@143 $generated@@261 ($generated@@252 $generated@@263)) ($generated@@226 $generated@@262 $generated@@263))) ($generated@@143 ($generated@@251 $generated@@261 $generated@@262) ($generated@@252 $generated@@263)))
 :pattern ( ($generated@@143 ($generated@@251 $generated@@261 $generated@@262) ($generated@@252 $generated@@263)))
)))
(assert  (and (= ($generated@@1 $generated@@266) 18) (forall (($generated@@267 Int) ) (! (= (type ($generated@@264 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@264 $generated@@267))
))))
(assert (forall (($generated@@268 Int) ) (!  (=> (and (<= 0 $generated@@268) (< $generated@@268 65536)) (= ($generated@@265 ($generated@@264 $generated@@268)) $generated@@268))
 :pattern ( ($generated@@264 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) $generated@@67)) (= (type $generated@@273) $generated@@156)) (= (type $generated@@274) $generated@@156)) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@269 $generated@@275)) (= ($generated@@77 ($generated@@225 $generated@@273 $generated@@274) ($generated@@146 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@273 $generated@@274) ($generated@@146 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@71)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@147) (= ($generated@@145 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@147) ($generated@@145 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@156) (= (type $generated@@281) $generated@@156)) (= $generated@@279 ($generated@@225 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@145 $generated@@279))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@282 $generated@@284)) ($generated@@253 $generated@@284))
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) 0)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
 (=> (= (type $generated@@286) ($generated@@253 $generated@@288)) (= ($generated@@283 ($generated@@251 $generated@@286 $generated@@287)) (+ 1 ($generated@@283 $generated@@286)))))
 :pattern ( ($generated@@251 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@266) (and (and (= ($generated@@264 ($generated@@265 $generated@@289)) $generated@@289) (<= 0 ($generated@@265 $generated@@289))) (< ($generated@@265 $generated@@289) 65536)))
 :pattern ( ($generated@@265 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@156)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@270 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@77 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@270 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@297) $generated@@156)) (= (type $generated@@298) $generated@@67)) ($generated@@135 $generated@@295 $generated@@296)) ($generated@@270 $generated@@297 $generated@@298 $generated@@295)) ($generated@@270 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@135 $generated@@295 $generated@@296) ($generated@@270 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@302) $generated@@67)) ($generated@@135 $generated@@299 $generated@@300)) ($generated@@77 $generated@@301 $generated@@302 $generated@@299)) ($generated@@77 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@135 $generated@@299 $generated@@300) ($generated@@77 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@79 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@82 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@79 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@84 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 20)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@162 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@303 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@162 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@156) ($generated@@226 $generated@@351 $generated@@222)) (and (= ($generated@@290 ($generated@@348 $generated@@80 $generated@@351)) $generated@@351) ($generated@@143 ($generated@@348 $generated@@80 $generated@@351) $generated@@222)))
 :pattern ( ($generated@@226 $generated@@351 $generated@@222))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@156) ($generated@@226 $generated@@352 $generated@@139)) (and (= ($generated@@290 ($generated@@348 $generated@@80 $generated@@352)) $generated@@352) ($generated@@143 ($generated@@348 $generated@@80 $generated@@352) $generated@@139)))
 :pattern ( ($generated@@226 $generated@@352 $generated@@139))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@80) (= ($generated@@143 $generated@@353 $generated@@222)  (and ($generated@@143 $generated@@353 $generated@@139) (not (= $generated@@353 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@353 $generated@@222))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 Int) ) (! (let (($generated@@357 ($generated@@254 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@357))
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 Int) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (= (type $generated@@358) ($generated@@253 $generated@@361)) (and (=> (= $generated@@359 ($generated@@283 $generated@@358)) (= ($generated@@354 ($generated@@251 $generated@@358 $generated@@360) $generated@@359) $generated@@360)) (=> (not (= $generated@@359 ($generated@@283 $generated@@358))) (= ($generated@@354 ($generated@@251 $generated@@358 $generated@@360) $generated@@359) ($generated@@354 $generated@@358 $generated@@359))))))
 :pattern ( ($generated@@354 ($generated@@251 $generated@@358 $generated@@360) $generated@@359))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@313 (type $generated@@362))))
(let (($generated@@364 ($generated@@312 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@311 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@310 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@309 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@313 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@79 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@313 (type $generated@@369))))
(let (($generated@@371 ($generated@@312 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@311 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@310 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@327 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@331 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@79 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@331 (type $generated@@380))))
(let (($generated@@382 ($generated@@330 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@329 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@328 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@84 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@385) $generated@@67)) (= ($generated@@143 $generated@@384 ($generated@@161 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@384 $generated@@386)))) ($generated@@226 $generated@@386 $generated@@385))
 :pattern ( ($generated@@84 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@143 $generated@@384 ($generated@@161 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@387 ($generated@@235 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@156) ($generated@@0 ($generated@@84 $generated@@387 $generated@@390))) ($generated@@270 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@84 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@387 ($generated@@235 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@240 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@156) ($generated@@0 ($generated@@84 $generated@@391 $generated@@394))) ($generated@@270 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@84 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@240 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@84 ($generated@@304 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@84 ($generated@@304 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@313 (type $generated@@400))))
(let (($generated@@402 ($generated@@312 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@79 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@311 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@403) ($generated@@154 ($generated@@348 $generated@@147 $generated@@404)))) (= ($generated@@84 ($generated@@398 $generated@@403) ($generated@@154 ($generated@@348 $generated@@147 $generated@@404))) ($generated@@155 ($generated@@348 $generated@@147 $generated@@404))))))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@331 (type $generated@@408))))
(let (($generated@@410 ($generated@@330 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@79 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@329 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@411) ($generated@@154 ($generated@@348 $generated@@147 $generated@@412)))) (= ($generated@@84 ($generated@@406 $generated@@411) ($generated@@154 ($generated@@348 $generated@@147 $generated@@412))) ($generated@@155 ($generated@@348 $generated@@147 $generated@@412))))))
 :pattern ( ($generated@@84 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@312 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@311 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@84 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@413) $generated@@417))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@330 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@329 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@84 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@84 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@311 $generated@@156 $generated@@156)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@426) $generated@@430))) (and ($generated@@270 ($generated@@84 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@270 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@77 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@329 $generated@@156 $generated@@156)) (= (type $generated@@435) $generated@@67)) (= (type $generated@@436) $generated@@67)) (= (type $generated@@437) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@434) $generated@@438))) (and ($generated@@270 ($generated@@84 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@270 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@84 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@77 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@440) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@441) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@439 $generated@@441))) (and ($generated@@135 $generated@@439 $generated@@440) ($generated@@135 $generated@@440 $generated@@441))) ($generated@@135 $generated@@439 $generated@@441))
 :pattern ( ($generated@@135 $generated@@439 $generated@@440) ($generated@@135 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@79 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@331 (type $generated@@444))))
(let (($generated@@446 ($generated@@330 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@329 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@328 $generated@@446 $generated@@445)) (= ($generated@@327 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@327 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@331 (type $generated@@447))))
(let (($generated@@449 ($generated@@330 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@329 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@328 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@331 (type $generated@@450))))
(let (($generated@@452 ($generated@@330 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@329 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@328 $generated@@452 $generated@@451)) (= ($generated@@405 $generated@@450) ($generated@@442 $generated@@156))))))
 :pattern ( ($generated@@405 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@313 (type $generated@@453))))
(let (($generated@@455 ($generated@@312 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@311 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@310 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@156) (= (type $generated@@457) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@397 $generated@@453) ($generated@@290 ($generated@@225 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@331 (type $generated@@458))))
(let (($generated@@460 ($generated@@330 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@329 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@328 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@156) (= (type $generated@@462) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@405 $generated@@458) ($generated@@290 ($generated@@225 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@156) ($generated@@226 $generated@@463 $generated@@46)) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@463)) $generated@@463) ($generated@@143 ($generated@@348 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@156) ($generated@@226 $generated@@464 $generated@@47)) (and (= ($generated@@290 ($generated@@348 $generated@@3 $generated@@464)) $generated@@464) ($generated@@143 ($generated@@348 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@156) ($generated@@226 $generated@@465 $generated@@44)) (and (= ($generated@@290 ($generated@@348 $generated@@4 $generated@@465)) $generated@@465) ($generated@@143 ($generated@@348 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@465 $generated@@44))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@156) ($generated@@226 $generated@@466 $generated@@45)) (and (= ($generated@@290 ($generated@@348 $generated@@266 $generated@@466)) $generated@@466) ($generated@@143 ($generated@@348 $generated@@266 $generated@@466) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@466 $generated@@45))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@226 ($generated@@290 $generated@@467) $generated@@468) ($generated@@143 $generated@@467 $generated@@468)))
 :pattern ( ($generated@@226 ($generated@@290 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@82 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@79 $generated@@470 $generated@@2)) (<= 0 ($generated@@303 $generated@@469))))
 :pattern ( ($generated@@303 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@254 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@253 $generated@@472)) (<= 0 ($generated@@283 $generated@@471))))
 :pattern ( ($generated@@283 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@423 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@423 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@423 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@423 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@75 ($generated@@423 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@431 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@431 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@431 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@431 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@75 ($generated@@431 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@156) (= (type $generated@@494) $generated@@156)) (= ($generated@@276 ($generated@@225 $generated@@493 $generated@@494)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@146 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@146 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@146 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@146 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@156) (= (type $generated@@504) $generated@@156)) (= ($generated@@154 ($generated@@225 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@225 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@156) (= (type $generated@@506) $generated@@156)) (= ($generated@@155 ($generated@@225 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@225 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@253 $generated@@156)) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@507 ($generated@@252 $generated@@508) $generated@@509) (forall (($generated@@510 Int) ) (!  (=> (and (<= 0 $generated@@510) (< $generated@@510 ($generated@@283 $generated@@507))) ($generated@@270 ($generated@@354 $generated@@507 $generated@@510) $generated@@508 $generated@@509))
 :pattern ( ($generated@@354 $generated@@507 $generated@@510))
))))
 :pattern ( ($generated@@77 $generated@@507 ($generated@@252 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@512 Int) ) (! (= ($generated@@511 ($generated@@78 $generated@@512)) $generated@@512)
 :pattern ( ($generated@@78 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@513 ($generated@@235 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@235 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@516)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@517 ($generated@@240 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@240 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@520)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@161 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@161 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@524)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@525 ($generated@@252 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@252 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@75 ($generated@@252 $generated@@528)) $generated@@57))
 :pattern ( ($generated@@252 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@348 $generated@@530 ($generated@@290 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@290 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@311 $generated@@156 $generated@@156)) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@67)) (= ($generated@@143 $generated@@531 ($generated@@423 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@531) $generated@@534))) (and ($generated@@226 ($generated@@84 ($generated@@398 $generated@@531) $generated@@534) $generated@@533) ($generated@@226 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@531) $generated@@534))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@143 $generated@@531 ($generated@@423 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@329 $generated@@156 $generated@@156)) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) (= ($generated@@143 $generated@@535 ($generated@@431 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@535) $generated@@538))) (and ($generated@@226 ($generated@@84 ($generated@@406 $generated@@535) $generated@@538) $generated@@537) ($generated@@226 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@84 ($generated@@406 $generated@@535) $generated@@538))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@143 $generated@@535 ($generated@@431 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@156) (= (type $generated@@542) $generated@@156)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@225 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@225 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@156) (= (type $generated@@544) $generated@@156)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@225 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@225 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@156) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) $generated@@67)) ($generated@@226 $generated@@545 ($generated@@423 $generated@@546 $generated@@547))) (and (= ($generated@@290 ($generated@@348 ($generated@@311 $generated@@156 $generated@@156) $generated@@545)) $generated@@545) ($generated@@143 ($generated@@348 ($generated@@311 $generated@@156 $generated@@156) $generated@@545) ($generated@@423 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) ($generated@@226 $generated@@548 ($generated@@431 $generated@@549 $generated@@550))) (and (= ($generated@@290 ($generated@@348 ($generated@@329 $generated@@156 $generated@@156) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@348 ($generated@@329 $generated@@156 $generated@@156) $generated@@548) ($generated@@431 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@226 $generated@@548 ($generated@@431 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) $generated@@156)) ($generated@@226 $generated@@553 ($generated@@146 $generated@@551 $generated@@552))) (and (= ($generated@@290 ($generated@@348 $generated@@147 $generated@@553)) $generated@@553) ($generated@@143 ($generated@@348 $generated@@147 $generated@@553) ($generated@@146 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@226 $generated@@553 ($generated@@146 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@84 ($generated@@442 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@84 ($generated@@442 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@72)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@67) (= (type $generated@@559) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@146 $generated@@558 $generated@@559)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@558 $generated@@559))
)))
(assert  (and (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@254 (type $generated@@562))))
(= (type ($generated@@560 $generated@@562)) ($generated@@253 $generated@@563)))
 :pattern ( ($generated@@560 $generated@@562))
)) (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@254 (type $generated@@564))))
(= (type ($generated@@561 $generated@@564)) $generated@@565))
 :pattern ( ($generated@@561 $generated@@564))
))))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (=> (= (type $generated@@566) ($generated@@253 $generated@@568)) (and (= ($generated@@560 ($generated@@251 $generated@@566 $generated@@567)) $generated@@566) (= ($generated@@561 ($generated@@251 $generated@@566 $generated@@567)) $generated@@567))))
 :pattern ( ($generated@@251 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@147) (= ($generated@@539 ($generated@@290 $generated@@569)) ($generated@@540 $generated@@569)))
 :pattern ( ($generated@@539 ($generated@@290 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@156) ($generated@@226 $generated@@570 ($generated@@78 0))) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@570)) $generated@@570) ($generated@@143 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@570) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@78 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@156) (= (type $generated@@572) $generated@@67)) ($generated@@226 $generated@@571 ($generated@@235 $generated@@572))) (and (= ($generated@@290 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@571)) $generated@@571) ($generated@@143 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@571) ($generated@@235 $generated@@572))))
 :pattern ( ($generated@@226 $generated@@571 ($generated@@235 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@156) (= (type $generated@@574) $generated@@67)) ($generated@@226 $generated@@573 ($generated@@240 $generated@@574))) (and (= ($generated@@290 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@573)) $generated@@573) ($generated@@143 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@573) ($generated@@240 $generated@@574))))
 :pattern ( ($generated@@226 $generated@@573 ($generated@@240 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@156) (= (type $generated@@576) $generated@@67)) ($generated@@226 $generated@@575 ($generated@@161 $generated@@576))) (and (= ($generated@@290 ($generated@@348 ($generated@@79 $generated@@156 $generated@@2) $generated@@575)) $generated@@575) ($generated@@143 ($generated@@348 ($generated@@79 $generated@@156 $generated@@2) $generated@@575) ($generated@@161 $generated@@576))))
 :pattern ( ($generated@@226 $generated@@575 ($generated@@161 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@156) (= (type $generated@@578) $generated@@67)) ($generated@@226 $generated@@577 ($generated@@252 $generated@@578))) (and (= ($generated@@290 ($generated@@348 ($generated@@253 $generated@@156) $generated@@577)) $generated@@577) ($generated@@143 ($generated@@348 ($generated@@253 $generated@@156) $generated@@577) ($generated@@252 $generated@@578))))
 :pattern ( ($generated@@226 $generated@@577 ($generated@@252 $generated@@578)))
)))
(assert (= ($generated@@75 $generated@@222) $generated@@63))
(assert (= ($generated@@556 $generated@@222) $generated@@66))
(assert (= ($generated@@75 $generated@@139) $generated@@64))
(assert (= ($generated@@556 $generated@@139) $generated@@66))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@579 ($generated@@161 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@579 $generated@@582)))) ($generated@@270 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@84 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@161 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@80) (= ($generated@@143 $generated@@586 $generated@@139)  (or (= $generated@@586 $generated@@140) ($generated@@583 ($generated@@584 $generated@@586)))))
 :pattern ( ($generated@@143 $generated@@586 $generated@@139))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@147) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@269 $generated@@589) (and ($generated@@145 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@67) ($generated@@77 $generated@@587 ($generated@@146 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@77 $generated@@587 ($generated@@146 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@270 ($generated@@154 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@270 ($generated@@154 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@147) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@269 $generated@@593) (and ($generated@@145 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@67) ($generated@@77 $generated@@591 ($generated@@146 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@77 $generated@@591 ($generated@@146 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@270 ($generated@@155 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@270 ($generated@@155 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@156) (= (type $generated@@596) $generated@@156)) (= ($generated@@225 ($generated@@247 $generated@@595) ($generated@@247 $generated@@596)) ($generated@@247 ($generated@@225 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@225 ($generated@@247 $generated@@595) ($generated@@247 $generated@@596)))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@245 $generated@@597))) ($generated@@247 ($generated@@290 ($generated@@8 $generated@@597))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@245 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@290 ($generated@@247 $generated@@598)) ($generated@@247 ($generated@@290 $generated@@598)))
 :pattern ( ($generated@@290 ($generated@@247 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@254 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@253 $generated@@600)) (= ($generated@@283 $generated@@599) 0)) (= $generated@@599 ($generated@@282 $generated@@600))))
 :pattern ( ($generated@@283 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@79 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@303 ($generated@@85 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@303 $generated@@601) ($generated ($generated@@84 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@303 ($generated@@85 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@2)) ($generated@@77 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@3)) ($generated@@77 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@4)) ($generated@@77 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@612) $generated@@266)) ($generated@@77 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@77 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@614) $generated@@156)) ($generated@@77 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@77 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@253 $generated@@156)) (= (type $generated@@616) $generated@@67)) (= ($generated@@143 $generated@@615 ($generated@@252 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@283 $generated@@615))) ($generated@@226 ($generated@@354 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@354 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@143 $generated@@615 ($generated@@252 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@253 $generated@@156)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@283 $generated@@619))) (< ($generated@@540 ($generated@@348 $generated@@147 ($generated@@354 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@540 ($generated@@348 $generated@@147 ($generated@@354 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@311 $generated@@156 $generated@@156)) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) $generated@@67)) ($generated@@143 $generated@@621 ($generated@@423 $generated@@622 $generated@@623))) (and (and ($generated@@143 ($generated@@309 $generated@@621) ($generated@@235 $generated@@622)) ($generated@@143 ($generated@@366 $generated@@621) ($generated@@235 $generated@@623))) ($generated@@143 ($generated@@397 $generated@@621) ($generated@@235 ($generated@@146 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@143 $generated@@621 ($generated@@423 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@329 $generated@@156 $generated@@156)) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) $generated@@67)) ($generated@@143 $generated@@624 ($generated@@431 $generated@@625 $generated@@626))) (and (and ($generated@@143 ($generated@@327 $generated@@624) ($generated@@240 $generated@@625)) ($generated@@143 ($generated@@377 $generated@@624) ($generated@@240 $generated@@626))) ($generated@@143 ($generated@@405 $generated@@624) ($generated@@240 ($generated@@146 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@143 $generated@@624 ($generated@@431 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@143 $generated@@627 $generated@@46))
 :pattern ( ($generated@@143 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@143 $generated@@628 $generated@@47))
 :pattern ( ($generated@@143 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@143 $generated@@629 $generated@@44))
 :pattern ( ($generated@@143 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@266) ($generated@@143 $generated@@630 $generated@@45))
 :pattern ( ($generated@@143 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@156) ($generated@@143 $generated@@631 $generated@@48))
 :pattern ( ($generated@@143 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () Bool)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () Bool)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@639) $generated@@80) (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@640) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@641) $generated@@80)) (= (type $generated@@633) ($generated@@253 $generated@@156))) (= (type $generated@@634) $generated@@80)) (= (type $generated@@636) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@638) $generated@@80)) (= (type $generated@@642) ($generated@@168 $generated@@80 $generated@@4))) (= (type $generated@@645) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@647  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@648  (=> (and (not $generated@@632) (= $generated@@633 ($generated@@247 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@282 $generated@@156) ($generated@@290 ($generated@@264 98))) ($generated@@290 ($generated@@264 97))) ($generated@@290 ($generated@@264 100))) ($generated@@290 ($generated@@264 32))) ($generated@@290 ($generated@@264 108))) ($generated@@290 ($generated@@264 117))) ($generated@@290 ($generated@@264 99))) ($generated@@290 ($generated@@264 107)))))) (=> (and (and ($generated@@143 $generated@@634 $generated@@222) ($generated@@77 $generated@@634 $generated@@222 $generated@@635)) (and ($generated@@269 $generated@@636) ($generated@@637 $generated@@636))) (=> (and (and (and ($generated@@143 $generated@@638 $generated@@222) ($generated@@77 $generated@@638 $generated@@222 $generated@@636)) (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@80) (=> (and (not (= $generated@@649 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@635 $generated@@649) $generated@@60))) (= ($generated@@84 $generated@@636 $generated@@649) ($generated@@84 $generated@@635 $generated@@649))))
 :pattern ( ($generated@@84 $generated@@636 $generated@@649))
))) (and ($generated@@135 $generated@@635 $generated@@636) (= (ControlFlow 0 4) 2))) $generated@@647)))))
(let (($generated@@650  (=> $generated@@632 (=> (and (and ($generated@@143 $generated@@639 $generated@@222) ($generated@@77 $generated@@639 $generated@@222 $generated@@635)) (and ($generated@@269 $generated@@640) ($generated@@637 $generated@@640))) (=> (and (and (and ($generated@@143 $generated@@641 $generated@@222) ($generated@@77 $generated@@641 $generated@@222 $generated@@640)) (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@80) (=> (and (not (= $generated@@651 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@635 $generated@@651) $generated@@60))) (= ($generated@@84 $generated@@640 $generated@@651) ($generated@@84 $generated@@635 $generated@@651))))
 :pattern ( ($generated@@84 $generated@@640 $generated@@651))
))) (and ($generated@@135 $generated@@635 $generated@@640) (= (ControlFlow 0 3) 2))) $generated@@647)))))
(let (($generated@@652  (=> (= $generated@@642 ($generated@@167 $generated@@140 $generated@@635 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@650) (=> (= (ControlFlow 0 5) 4) $generated@@648)))))
(let (($generated@@653  (=> (and ($generated@@269 $generated@@635) ($generated@@637 $generated@@635)) (=> (and (and (<= ($generated@@245 0) $generated@@643) (=> $generated@@644 (and ($generated@@143 $generated@@645 $generated@@222) ($generated@@77 $generated@@645 $generated@@222 $generated@@635)))) (and (= 4 $generated@@646) (= (ControlFlow 0 6) 5))) $generated@@652))))
$generated@@653))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (Int) Int)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) Bool)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Bool)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Bool)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (= (type $generated@@141) $generated@@69))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@79 $generated@@142 $generated@@141 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@82)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@82) (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@80 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 14) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@69)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@69)) ($generated@@148 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@148 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@82 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@72 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@82) (= (type $generated@@221) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@222) ($generated@@71 $generated@@4))) (= (type $generated@@224) $generated@@82)) (= (type $generated@@225) ($generated@@71 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (= (type $generated@@227) $generated@@69))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@82) (= (type $generated@@229) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@228 $generated@@227 $generated@@229) ($generated@@79 $generated@@228 $generated@@144 $generated@@229)))
 :pattern ( ($generated@@79 $generated@@228 $generated@@227 $generated@@229))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@152)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@69) (= (type $generated@@235) $generated@@69)) (= (type $generated@@236) $generated@@161)) (= (type $generated@@237) $generated@@161)) (= ($generated@@148 ($generated@@230 $generated@@236 $generated@@237) ($generated@@151 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@148 ($generated@@230 $generated@@236 $generated@@237) ($generated@@151 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) (= (type $generated@@239) $generated@@152)) (= ($generated@@158 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@158 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@69)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@243) $generated@@69)) (= ($generated@@148 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@161) ($generated@@0 ($generated@@86 $generated@@242 $generated@@244))) ($generated@@231 $generated@@244 $generated@@243))
 :pattern ( ($generated@@86 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@148 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@69)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@248) $generated@@69)) (= ($generated@@148 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@161) ($generated@@0 ($generated@@86 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@86 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@148 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 Int) ) (! (= ($generated@@250 $generated@@251) $generated@@251)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@69) (= (type $generated@@259) $generated@@69)) (= (type $generated@@260) $generated@@161)) (= (type $generated@@261) $generated@@161)) (= (type $generated@@262) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@256 $generated@@262)) (= ($generated@@79 ($generated@@230 $generated@@260 $generated@@261) ($generated@@151 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@79 ($generated@@230 $generated@@260 $generated@@261) ($generated@@151 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@73)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@152) (= ($generated@@150 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@62)))
 :pattern ( ($generated@@150 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@152) ($generated@@150 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@161) (= (type $generated@@268) $generated@@161)) (= $generated@@266 ($generated@@230 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@150 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert  (=> true (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@82) (or ($generated@@278 $generated@@280) (and (and (not (= $generated@@280 $generated@@145)) ($generated@@148 $generated@@280 $generated@@227)) (not ($generated@@279 $generated@@280))))) (<= ($generated@@250 0) ($generated@@277 $generated@@280)))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@2) (= ($generated@@148 $generated@@281 $generated@@141) (<= ($generated@@250 0) ($generated $generated@@281))))
 :pattern ( ($generated@@148 $generated@@281 $generated@@141))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@161)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@69) (= (type $generated@@286) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@257 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@79 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@257 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@288) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@289) $generated@@161)) (= (type $generated@@290) $generated@@69)) ($generated@@137 $generated@@287 $generated@@288)) ($generated@@257 $generated@@289 $generated@@290 $generated@@287)) ($generated@@257 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@137 $generated@@287 $generated@@288) ($generated@@257 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@292) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@294) $generated@@69)) ($generated@@137 $generated@@291 $generated@@292)) ($generated@@79 $generated@@293 $generated@@294 $generated@@291)) ($generated@@79 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@137 $generated@@291 $generated@@292) ($generated@@79 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@81 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@84 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@81 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@86 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@81 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@86 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@86 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@81 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@86 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@86 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@84 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@81 $generated@@338 $generated@@2)) (= ($generated@@167 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@86 $generated@@337 $generated@@339))) (<= ($generated ($generated@@86 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@86 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@167 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@161) ($generated@@231 $generated@@343 $generated@@141)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@340 $generated@@2 $generated@@343) $generated@@141)))
 :pattern ( ($generated@@231 $generated@@343 $generated@@141))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@161) ($generated@@231 $generated@@344 $generated@@227)) (and (= ($generated@@282 ($generated@@340 $generated@@82 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@340 $generated@@82 $generated@@344) $generated@@227)))
 :pattern ( ($generated@@231 $generated@@344 $generated@@227))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@161) ($generated@@231 $generated@@345 $generated@@144)) (and (= ($generated@@282 ($generated@@340 $generated@@82 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@340 $generated@@82 $generated@@345) $generated@@144)))
 :pattern ( ($generated@@231 $generated@@345 $generated@@144))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@82) (= ($generated@@148 $generated@@346 $generated@@227)  (and ($generated@@148 $generated@@346 $generated@@144) (not (= $generated@@346 $generated@@145)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@227))
)))
(assert  (=> true (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@82) (or ($generated@@347 $generated@@348) (and (not (= $generated@@348 $generated@@145)) ($generated@@148 $generated@@348 $generated@@227)))) true)
 :pattern ( ($generated@@279 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(let (($generated@@351 ($generated@@304 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@303 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@302 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@86 ($generated@@301 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@301 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@305 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@81 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@305 (type $generated@@356))))
(let (($generated@@358 ($generated@@304 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@303 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@302 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@86 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(let (($generated@@362 ($generated@@322 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@321 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@320 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@319 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@319 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@323 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@81 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@323 (type $generated@@367))))
(let (($generated@@369 ($generated@@322 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@321 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@320 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@86 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@372) $generated@@69)) (= ($generated@@148 $generated@@371 ($generated@@166 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@371 $generated@@373)))) ($generated@@231 $generated@@373 $generated@@372))
 :pattern ( ($generated@@86 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@148 $generated@@371 ($generated@@166 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@375) $generated@@69)) (= (type $generated@@376) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@374 ($generated@@240 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@161) ($generated@@0 ($generated@@86 $generated@@374 $generated@@377))) ($generated@@257 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@86 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@79 $generated@@374 ($generated@@240 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@379) $generated@@69)) (= (type $generated@@380) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@378 ($generated@@245 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@161) ($generated@@0 ($generated@@86 $generated@@378 $generated@@381))) ($generated@@257 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@86 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@79 $generated@@378 ($generated@@245 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@86 ($generated@@296 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@86 ($generated@@296 $generated@@383) $generated@@382)))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@305 (type $generated@@387))))
(let (($generated@@389 ($generated@@304 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@81 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@303 $generated@@161 $generated@@161)) (= (type $generated@@391) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@86 ($generated@@301 $generated@@390) ($generated@@159 ($generated@@340 $generated@@152 $generated@@391)))) (= ($generated@@86 ($generated@@385 $generated@@390) ($generated@@159 ($generated@@340 $generated@@152 $generated@@391))) ($generated@@160 ($generated@@340 $generated@@152 $generated@@391))))))
 :pattern ( ($generated@@86 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@323 (type $generated@@395))))
(let (($generated@@397 ($generated@@322 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@81 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@321 $generated@@161 $generated@@161)) (= (type $generated@@399) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@86 ($generated@@319 $generated@@398) ($generated@@159 ($generated@@340 $generated@@152 $generated@@399)))) (= ($generated@@86 ($generated@@393 $generated@@398) ($generated@@159 ($generated@@340 $generated@@152 $generated@@399))) ($generated@@160 ($generated@@340 $generated@@152 $generated@@399))))))
 :pattern ( ($generated@@86 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@304 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@303 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@86 ($generated@@353 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@86 ($generated@@301 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@86 ($generated@@385 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@86 ($generated@@301 $generated@@400) $generated@@404))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@86 ($generated@@353 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@322 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@321 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@364 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@319 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@319 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@364 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@69)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@303 $generated@@161 $generated@@161)) (= (type $generated@@414) $generated@@69)) (= (type $generated@@415) $generated@@69)) (= (type $generated@@416) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@301 $generated@@413) $generated@@417))) (and ($generated@@257 ($generated@@86 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@257 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@86 ($generated@@301 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@79 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@69)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@321 $generated@@161 $generated@@161)) (= (type $generated@@422) $generated@@69)) (= (type $generated@@423) $generated@@69)) (= (type $generated@@424) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@319 $generated@@421) $generated@@425))) (and ($generated@@257 ($generated@@86 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@257 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@86 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@86 ($generated@@319 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@79 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@426) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@427) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@428) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@426 $generated@@428))) (and ($generated@@137 $generated@@426 $generated@@427) ($generated@@137 $generated@@427 $generated@@428))) ($generated@@137 $generated@@426 $generated@@428))
 :pattern ( ($generated@@137 $generated@@426 $generated@@427) ($generated@@137 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@81 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@323 (type $generated@@431))))
(let (($generated@@433 ($generated@@322 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@321 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@320 $generated@@433 $generated@@432)) (= ($generated@@319 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@319 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@323 (type $generated@@434))))
(let (($generated@@436 ($generated@@322 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@321 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@320 $generated@@436 $generated@@435)) (= ($generated@@364 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@364 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@323 (type $generated@@437))))
(let (($generated@@439 ($generated@@322 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@321 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@320 $generated@@439 $generated@@438)) (= ($generated@@392 $generated@@437) ($generated@@429 $generated@@161))))))
 :pattern ( ($generated@@392 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@305 (type $generated@@440))))
(let (($generated@@442 ($generated@@304 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@303 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@302 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@161) (= (type $generated@@444) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@384 $generated@@440) ($generated@@282 ($generated@@230 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@384 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@323 (type $generated@@445))))
(let (($generated@@447 ($generated@@322 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@321 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@320 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@161) (= (type $generated@@449) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@392 $generated@@445) ($generated@@282 ($generated@@230 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@161) ($generated@@231 $generated@@450 $generated@@46)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@450)) $generated@@450) ($generated@@148 ($generated@@340 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@161) ($generated@@231 $generated@@451 $generated@@47)) (and (= ($generated@@282 ($generated@@340 $generated@@3 $generated@@451)) $generated@@451) ($generated@@148 ($generated@@340 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@161) ($generated@@231 $generated@@452 $generated@@44)) (and (= ($generated@@282 ($generated@@340 $generated@@4 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@340 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 20))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@161) ($generated@@231 $generated@@454 $generated@@45)) (and (= ($generated@@282 ($generated@@340 $generated@@453 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@340 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@69) (= ($generated@@231 ($generated@@282 $generated@@455) $generated@@456) ($generated@@148 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@231 ($generated@@282 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@84 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@81 $generated@@458 $generated@@2)) (<= 0 ($generated@@295 $generated@@457))))
 :pattern ( ($generated@@295 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@272 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@271 $generated@@460)) (<= 0 ($generated@@270 $generated@@459))))
 :pattern ( ($generated@@270 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@461 ($generated@@410 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@410 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@410 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@410 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@77 ($generated@@410 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@418 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@77 ($generated@@418 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@161) (= (type $generated@@482) $generated@@161)) (= ($generated@@263 ($generated@@230 $generated@@481 $generated@@482)) $generated@@62))
 :pattern ( ($generated@@230 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@151 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@151 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@151 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@151 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@161) (= (type $generated@@492) $generated@@161)) (= ($generated@@159 ($generated@@230 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@230 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@161) (= (type $generated@@494) $generated@@161)) (= ($generated@@160 ($generated@@230 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@230 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@272 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498 $generated@@499)) $generated@@500))
 :pattern ( ($generated@@496 $generated@@498 $generated@@499))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@271 $generated@@161)) (= (type $generated@@502) $generated@@69)) (= (type $generated@@503) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@501 ($generated@@495 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@270 $generated@@501))) ($generated@@257 ($generated@@496 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@496 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@79 $generated@@501 ($generated@@495 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@80 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@80 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@507 ($generated@@240 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@240 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@77 ($generated@@240 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@245 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@245 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@245 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@166 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@166 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@166 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@495 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@495 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@495 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@495 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@340 $generated@@524 ($generated@@282 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@282 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@303 $generated@@161 $generated@@161)) (= (type $generated@@526) $generated@@69)) (= (type $generated@@527) $generated@@69)) (= ($generated@@148 $generated@@525 ($generated@@410 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@301 $generated@@525) $generated@@528))) (and ($generated@@231 ($generated@@86 ($generated@@385 $generated@@525) $generated@@528) $generated@@527) ($generated@@231 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@525) $generated@@528))
 :pattern ( ($generated@@86 ($generated@@301 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@148 $generated@@525 ($generated@@410 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@321 $generated@@161 $generated@@161)) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@69)) (= ($generated@@148 $generated@@529 ($generated@@418 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@319 $generated@@529) $generated@@532))) (and ($generated@@231 ($generated@@86 ($generated@@393 $generated@@529) $generated@@532) $generated@@531) ($generated@@231 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@86 ($generated@@393 $generated@@529) $generated@@532))
 :pattern ( ($generated@@86 ($generated@@319 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@418 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@161) (= (type $generated@@536) $generated@@161)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@230 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@230 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@161) (= (type $generated@@538) $generated@@161)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@230 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@230 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@231 $generated@@539 ($generated@@410 $generated@@540 $generated@@541))) (and (= ($generated@@282 ($generated@@340 ($generated@@303 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@148 ($generated@@340 ($generated@@303 $generated@@161 $generated@@161) $generated@@539) ($generated@@410 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@231 $generated@@539 ($generated@@410 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@161) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) ($generated@@231 $generated@@542 ($generated@@418 $generated@@543 $generated@@544))) (and (= ($generated@@282 ($generated@@340 ($generated@@321 $generated@@161 $generated@@161) $generated@@542)) $generated@@542) ($generated@@148 ($generated@@340 ($generated@@321 $generated@@161 $generated@@161) $generated@@542) ($generated@@418 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@231 $generated@@542 ($generated@@418 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@69) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@161)) ($generated@@231 $generated@@547 ($generated@@151 $generated@@545 $generated@@546))) (and (= ($generated@@282 ($generated@@340 $generated@@152 $generated@@547)) $generated@@547) ($generated@@148 ($generated@@340 $generated@@152 $generated@@547) ($generated@@151 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@231 $generated@@547 ($generated@@151 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@548 $generated@@550)) $generated@@82)
 :pattern ( ($generated@@548 $generated@@550))
)))
(assert  (=> true (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@82) (or ($generated@@549 $generated@@551) (and (and (not (= $generated@@551 $generated@@145)) ($generated@@148 $generated@@551 $generated@@227)) ($generated@@279 $generated@@551)))) ($generated@@148 ($generated@@548 $generated@@551) $generated@@227))
 :pattern ( ($generated@@548 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@86 ($generated@@429 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@86 ($generated@@429 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@74)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@69) (= (type $generated@@557) $generated@@69)) (and (= ($generated@@77 ($generated@@151 $generated@@556 $generated@@557)) $generated@@63) (= ($generated@@554 ($generated@@151 $generated@@556 $generated@@557)) $generated@@67)))
 :pattern ( ($generated@@151 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@152) (= ($generated@@533 ($generated@@282 $generated@@558)) ($generated@@534 $generated@@558)))
 :pattern ( ($generated@@533 ($generated@@282 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@161) ($generated@@231 $generated@@559 ($generated@@80 0))) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@559)) $generated@@559) ($generated@@148 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@559) ($generated@@80 0))))
 :pattern ( ($generated@@231 $generated@@559 ($generated@@80 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@69)) ($generated@@231 $generated@@560 ($generated@@240 $generated@@561))) (and (= ($generated@@282 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@560)) $generated@@560) ($generated@@148 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@560) ($generated@@240 $generated@@561))))
 :pattern ( ($generated@@231 $generated@@560 ($generated@@240 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@161) (= (type $generated@@563) $generated@@69)) ($generated@@231 $generated@@562 ($generated@@245 $generated@@563))) (and (= ($generated@@282 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@340 ($generated@@81 $generated@@161 $generated@@4) $generated@@562) ($generated@@245 $generated@@563))))
 :pattern ( ($generated@@231 $generated@@562 ($generated@@245 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@161) (= (type $generated@@565) $generated@@69)) ($generated@@231 $generated@@564 ($generated@@166 $generated@@565))) (and (= ($generated@@282 ($generated@@340 ($generated@@81 $generated@@161 $generated@@2) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@340 ($generated@@81 $generated@@161 $generated@@2) $generated@@564) ($generated@@166 $generated@@565))))
 :pattern ( ($generated@@231 $generated@@564 ($generated@@166 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@161) (= (type $generated@@567) $generated@@69)) ($generated@@231 $generated@@566 ($generated@@495 $generated@@567))) (and (= ($generated@@282 ($generated@@340 ($generated@@271 $generated@@161) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@340 ($generated@@271 $generated@@161) $generated@@566) ($generated@@495 $generated@@567))))
 :pattern ( ($generated@@231 $generated@@566 ($generated@@495 $generated@@567)))
)))
(assert (= ($generated@@77 $generated@@141) $generated@@61))
(assert (= ($generated@@554 $generated@@141) $generated@@66))
(assert (= ($generated@@77 $generated@@227) $generated@@64))
(assert (= ($generated@@554 $generated@@227) $generated@@68))
(assert (= ($generated@@77 $generated@@144) $generated@@65))
(assert (= ($generated@@554 $generated@@144) $generated@@68))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@569) $generated@@69)) (= (type $generated@@570) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@568 ($generated@@166 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@568 $generated@@571)))) ($generated@@257 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@86 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@79 $generated@@568 ($generated@@166 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@69)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@82) (= ($generated@@148 $generated@@575 $generated@@144)  (or (= $generated@@575 $generated@@145) ($generated@@572 ($generated@@573 $generated@@575)))))
 :pattern ( ($generated@@148 $generated@@575 $generated@@144))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@152) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@256 $generated@@578) (and ($generated@@150 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@69) ($generated@@79 $generated@@576 ($generated@@151 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@151 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@257 ($generated@@159 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@257 ($generated@@159 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@152) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@256 $generated@@582) (and ($generated@@150 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@69) ($generated@@79 $generated@@580 ($generated@@151 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@79 $generated@@580 ($generated@@151 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@257 ($generated@@160 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@257 ($generated@@160 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@161) (= (type $generated@@585) $generated@@161)) (= ($generated@@230 ($generated@@252 $generated@@584) ($generated@@252 $generated@@585)) ($generated@@252 ($generated@@230 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@230 ($generated@@252 $generated@@584) ($generated@@252 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@250 $generated@@586))) ($generated@@252 ($generated@@282 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@250 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@282 ($generated@@252 $generated@@587)) ($generated@@252 ($generated@@282 $generated@@587)))
 :pattern ( ($generated@@282 ($generated@@252 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@272 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@271 $generated@@589)) (= ($generated@@270 $generated@@588) 0)) (= $generated@@588 ($generated@@269 $generated@@589))))
 :pattern ( ($generated@@270 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@81 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@295 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@295 $generated@@590) ($generated ($generated@@86 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@295 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@595) $generated@@2)) ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@597) $generated@@3)) ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@4)) ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@453)) ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@161)) ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@271 $generated@@161)) (= (type $generated@@605) $generated@@69)) (= ($generated@@148 $generated@@604 ($generated@@495 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@270 $generated@@604))) ($generated@@231 ($generated@@496 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@496 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@148 $generated@@604 ($generated@@495 $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@271 $generated@@161)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@270 $generated@@608))) (< ($generated@@534 ($generated@@340 $generated@@152 ($generated@@496 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@534 ($generated@@340 $generated@@152 ($generated@@496 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@303 $generated@@161 $generated@@161)) (= (type $generated@@611) $generated@@69)) (= (type $generated@@612) $generated@@69)) ($generated@@148 $generated@@610 ($generated@@410 $generated@@611 $generated@@612))) (and (and ($generated@@148 ($generated@@301 $generated@@610) ($generated@@240 $generated@@611)) ($generated@@148 ($generated@@353 $generated@@610) ($generated@@240 $generated@@612))) ($generated@@148 ($generated@@384 $generated@@610) ($generated@@240 ($generated@@151 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@148 $generated@@610 ($generated@@410 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@321 $generated@@161 $generated@@161)) (= (type $generated@@614) $generated@@69)) (= (type $generated@@615) $generated@@69)) ($generated@@148 $generated@@613 ($generated@@418 $generated@@614 $generated@@615))) (and (and ($generated@@148 ($generated@@319 $generated@@613) ($generated@@245 $generated@@614)) ($generated@@148 ($generated@@364 $generated@@613) ($generated@@245 $generated@@615))) ($generated@@148 ($generated@@392 $generated@@613) ($generated@@245 ($generated@@151 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@148 $generated@@613 ($generated@@418 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@148 $generated@@616 $generated@@46))
 :pattern ( ($generated@@148 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@148 $generated@@617 $generated@@47))
 :pattern ( ($generated@@148 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@148 $generated@@618 $generated@@44))
 :pattern ( ($generated@@148 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@453) ($generated@@148 $generated@@619 $generated@@45))
 :pattern ( ($generated@@148 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@161) ($generated@@148 $generated@@620 $generated@@48))
 :pattern ( ($generated@@148 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Bool)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Bool)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Bool)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Bool)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@639) $generated@@82) (= (type $generated@@640) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@646) $generated@@82)) (= (type $generated@@631) $generated@@82)) (= (type $generated@@632) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@638) $generated@@82)) (= (type $generated@@621) $generated@@82)) (= (type $generated@@622) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@630) $generated@@82)) (= (type $generated@@625) $generated@@82)) (= (type $generated@@626) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@627) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@629) $generated@@82)) (= (type $generated@@635) $generated@@82)) (= (type $generated@@637) $generated@@82)) (= (type $generated@@643) $generated@@82)) (= (type $generated@@645) $generated@@82)) (= (type $generated@@647) ($generated@@173 $generated@@82 $generated@@4))) (= (type $generated@@649) $generated@@82)) (= (type $generated@@651) $generated@@82)) (= (type $generated@@653) $generated@@82)) (= (type $generated@@655) $generated@@82)) (= (type $generated@@657) $generated@@82)) (= (type $generated@@658) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 40) (let (($generated@@660  (=> (not ($generated@@279 $generated@@621)) (and (=> (= (ControlFlow 0 17) (- 0 21)) true) (and (=> (= (ControlFlow 0 17) (- 0 20)) (not (= $generated@@621 $generated@@145))) (=> (not (= $generated@@621 $generated@@145)) (=> ($generated@@79 $generated@@621 $generated@@144 $generated@@622) (and (=> (= (ControlFlow 0 17) (- 0 19)) (not ($generated@@279 $generated@@621))) (=> (and (and (not ($generated@@279 $generated@@621)) ($generated@@278 $generated@@621)) (and ($generated@@278 $generated@@621) (= $generated@@623 ($generated@@277 $generated@@621)))) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@148 ($generated@@8 ($generated@@250 100)) $generated@@141)) (=> ($generated@@148 ($generated@@8 ($generated@@250 100)) $generated@@141) (=> (= $generated@@624 ($generated@@250 100)) (=> (and (and ($generated@@148 $generated@@625 $generated@@227) ($generated@@79 $generated@@625 $generated@@227 $generated@@626)) (and ($generated@@256 $generated@@627) ($generated@@628 $generated@@627))) (=> (and (and (and ($generated@@148 $generated@@629 $generated@@227) ($generated@@79 $generated@@629 $generated@@227 $generated@@627)) (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@82) (=> (and (not (= $generated@@661 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@622 $generated@@661) $generated@@60))) (= ($generated@@86 $generated@@627 $generated@@661) ($generated@@86 $generated@@622 $generated@@661))))
 :pattern ( ($generated@@86 $generated@@627 $generated@@661))
))) (and ($generated@@137 $generated@@622 $generated@@627) (= (ControlFlow 0 17) (- 0 16)))) true))))))))))))))
(let (($generated@@662  (=> ($generated@@279 $generated@@621) (and (=> (= (ControlFlow 0 12) (- 0 15)) true) (and (=> (= (ControlFlow 0 12) (- 0 14)) (not (= $generated@@621 $generated@@145))) (=> (not (= $generated@@621 $generated@@145)) (=> ($generated@@79 $generated@@621 $generated@@144 $generated@@622) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@279 $generated@@621)) (=> ($generated@@279 $generated@@621) (=> (and (and ($generated@@549 $generated@@621) ($generated@@549 $generated@@621)) (and (= $generated@@630 ($generated@@548 $generated@@621)) (= (ControlFlow 0 12) (- 0 11)))) true))))))))))
(let (($generated@@663  (=> (not ($generated@@279 $generated@@631)) (and (=> (= (ControlFlow 0 22) (- 0 28)) true) (and (=> (= (ControlFlow 0 22) (- 0 27)) (not (= $generated@@631 $generated@@145))) (=> (not (= $generated@@631 $generated@@145)) (=> ($generated@@79 $generated@@631 $generated@@144 $generated@@632) (and (=> (= (ControlFlow 0 22) (- 0 26)) (not ($generated@@279 $generated@@631))) (=> (not ($generated@@279 $generated@@631)) (=> (and (and ($generated@@278 $generated@@631) ($generated@@278 $generated@@631)) (and (= $generated@@633 ($generated@@277 $generated@@631)) (=> $generated@@634 (and ($generated@@148 $generated@@635 $generated@@227) ($generated@@79 $generated@@635 $generated@@227 $generated@@632))))) (and (=> (= (ControlFlow 0 22) (- 0 25)) ($generated@@148 ($generated@@8 ($generated@@250 33)) $generated@@141)) (=> ($generated@@148 ($generated@@8 ($generated@@250 33)) $generated@@141) (=> (= $generated@@636 ($generated@@250 33)) (=> (and (and (and ($generated@@148 $generated@@637 $generated@@227) ($generated@@79 $generated@@637 $generated@@227 $generated@@626)) (and ($generated@@256 $generated@@622) ($generated@@628 $generated@@622))) (and (and ($generated@@148 $generated@@621 $generated@@227) ($generated@@79 $generated@@621 $generated@@227 $generated@@622)) (and (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@82) (=> (and (not (= $generated@@664 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@632 $generated@@664) $generated@@60))) (= ($generated@@86 $generated@@622 $generated@@664) ($generated@@86 $generated@@632 $generated@@664))))
 :pattern ( ($generated@@86 $generated@@622 $generated@@664))
)) ($generated@@137 $generated@@632 $generated@@622)))) (and (=> (= (ControlFlow 0 22) (- 0 24)) true) (and (=> (= (ControlFlow 0 22) (- 0 23)) (not (= $generated@@621 $generated@@145))) (=> (not (= $generated@@621 $generated@@145)) (=> ($generated@@79 $generated@@621 $generated@@144 $generated@@622) (=> (and ($generated@@347 $generated@@621) ($generated@@347 $generated@@621)) (and (=> (= (ControlFlow 0 22) 12) $generated@@662) (=> (= (ControlFlow 0 22) 17) $generated@@660)))))))))))))))))))))
(let (($generated@@665  (=> ($generated@@279 $generated@@631) (and (=> (= (ControlFlow 0 7) (- 0 10)) true) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= $generated@@631 $generated@@145))) (=> (not (= $generated@@631 $generated@@145)) (=> ($generated@@79 $generated@@631 $generated@@144 $generated@@632) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@279 $generated@@631)) (=> ($generated@@279 $generated@@631) (=> (and (and ($generated@@549 $generated@@631) ($generated@@549 $generated@@631)) (and (= $generated@@638 ($generated@@548 $generated@@631)) (= (ControlFlow 0 7) (- 0 6)))) true))))))))))
(let (($generated@@666  (=> (not ($generated@@279 $generated@@639)) (and (=> (= (ControlFlow 0 29) (- 0 35)) true) (and (=> (= (ControlFlow 0 29) (- 0 34)) (not (= $generated@@639 $generated@@145))) (=> (not (= $generated@@639 $generated@@145)) (=> ($generated@@79 $generated@@639 $generated@@144 $generated@@640) (and (=> (= (ControlFlow 0 29) (- 0 33)) (not ($generated@@279 $generated@@639))) (=> (not ($generated@@279 $generated@@639)) (=> (and (and ($generated@@278 $generated@@639) ($generated@@278 $generated@@639)) (and (= $generated@@641 ($generated@@277 $generated@@639)) (=> $generated@@642 (and ($generated@@148 $generated@@643 $generated@@227) ($generated@@79 $generated@@643 $generated@@227 $generated@@640))))) (and (=> (= (ControlFlow 0 29) (- 0 32)) ($generated@@148 ($generated@@8 ($generated@@250 42)) $generated@@141)) (=> ($generated@@148 ($generated@@8 ($generated@@250 42)) $generated@@141) (=> (= $generated@@644 ($generated@@250 42)) (=> (and (and (and ($generated@@148 $generated@@645 $generated@@227) ($generated@@79 $generated@@645 $generated@@227 $generated@@626)) (and ($generated@@256 $generated@@632) ($generated@@628 $generated@@632))) (and (and ($generated@@148 $generated@@631 $generated@@227) ($generated@@79 $generated@@631 $generated@@227 $generated@@632)) (and (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@82) (=> (and (not (= $generated@@667 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@640 $generated@@667) $generated@@60))) (= ($generated@@86 $generated@@632 $generated@@667) ($generated@@86 $generated@@640 $generated@@667))))
 :pattern ( ($generated@@86 $generated@@632 $generated@@667))
)) ($generated@@137 $generated@@640 $generated@@632)))) (and (=> (= (ControlFlow 0 29) (- 0 31)) true) (and (=> (= (ControlFlow 0 29) (- 0 30)) (not (= $generated@@631 $generated@@145))) (=> (not (= $generated@@631 $generated@@145)) (=> ($generated@@79 $generated@@631 $generated@@144 $generated@@632) (=> (and ($generated@@347 $generated@@631) ($generated@@347 $generated@@631)) (and (=> (= (ControlFlow 0 29) 7) $generated@@665) (=> (= (ControlFlow 0 29) 22) $generated@@663)))))))))))))))))))))
(let (($generated@@668  (=> ($generated@@279 $generated@@639) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@639 $generated@@145))) (=> (not (= $generated@@639 $generated@@145)) (=> ($generated@@79 $generated@@639 $generated@@144 $generated@@640) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@279 $generated@@639)) (=> ($generated@@279 $generated@@639) (=> (and (and ($generated@@549 $generated@@639) ($generated@@549 $generated@@639)) (and (= $generated@@646 ($generated@@548 $generated@@639)) (= (ControlFlow 0 2) (- 0 1)))) true))))))))))
(let (($generated@@669  (=> (and (= $generated@@647 ($generated@@172 $generated@@145 $generated@@626 $generated@@60 false)) (=> $generated@@648 (and ($generated@@148 $generated@@649 $generated@@227) ($generated@@79 $generated@@649 $generated@@227 $generated@@626)))) (and (=> (= (ControlFlow 0 36) (- 0 39)) ($generated@@148 ($generated@@8 ($generated@@250 88)) $generated@@141)) (=> ($generated@@148 ($generated@@8 ($generated@@250 88)) $generated@@141) (=> (= $generated@@650 ($generated@@250 88)) (=> (and (and (and ($generated@@148 $generated@@651 $generated@@227) ($generated@@79 $generated@@651 $generated@@227 $generated@@626)) (and ($generated@@256 $generated@@640) ($generated@@628 $generated@@640))) (and (and ($generated@@148 $generated@@639 $generated@@227) ($generated@@79 $generated@@639 $generated@@227 $generated@@640)) (and (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@82) (=> (and (not (= $generated@@670 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@626 $generated@@670) $generated@@60))) (= ($generated@@86 $generated@@640 $generated@@670) ($generated@@86 $generated@@626 $generated@@670))))
 :pattern ( ($generated@@86 $generated@@640 $generated@@670))
)) ($generated@@137 $generated@@626 $generated@@640)))) (and (=> (= (ControlFlow 0 36) (- 0 38)) true) (and (=> (= (ControlFlow 0 36) (- 0 37)) (not (= $generated@@639 $generated@@145))) (=> (not (= $generated@@639 $generated@@145)) (=> ($generated@@79 $generated@@639 $generated@@144 $generated@@640) (=> (and ($generated@@347 $generated@@639) ($generated@@347 $generated@@639)) (and (=> (= (ControlFlow 0 36) 2) $generated@@668) (=> (= (ControlFlow 0 36) 29) $generated@@666))))))))))))))
(let (($generated@@671  (=> (and (and (and (and ($generated@@256 $generated@@626) ($generated@@628 $generated@@626)) (=> $generated@@652 (and ($generated@@148 $generated@@653 $generated@@227) ($generated@@79 $generated@@653 $generated@@227 $generated@@626)))) (and (and (<= ($generated@@250 0) $generated@@654) true) (and (=> $generated@@648 (and ($generated@@148 $generated@@655 $generated@@227) ($generated@@79 $generated@@655 $generated@@227 $generated@@626))) true))) (and (and (and (<= ($generated@@250 0) $generated@@656) true) (and (=> $generated@@642 (and ($generated@@148 $generated@@657 $generated@@227) ($generated@@79 $generated@@657 $generated@@227 $generated@@626))) true)) (and (and (=> $generated@@634 (and ($generated@@148 $generated@@658 $generated@@227) ($generated@@79 $generated@@658 $generated@@227 $generated@@626))) true) (and (= 5 $generated@@659) (= (ControlFlow 0 40) 36))))) $generated@@669)))
$generated@@671)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@262 (Int) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 () T@T)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U Int) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Bool)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@80 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@70 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@80) (= (type $generated@@216) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@217) ($generated@@69 $generated@@4))) (= (type $generated@@219) $generated@@80)) (= (type $generated@@220) ($generated@@69 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (= (type $generated@@222) $generated@@67))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@80) (= (type $generated@@224) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@223 $generated@@222 $generated@@224) ($generated@@77 $generated@@223 $generated@@139 $generated@@224)))
 :pattern ( ($generated@@77 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@147)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@156)) (= (type $generated@@232) $generated@@156)) (= ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@147) (= (type $generated@@234) $generated@@147)) (= ($generated@@153 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@153 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@156) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@156) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (and (and (and (forall (($generated@@253 T@T) ) (= ($generated@@1 ($generated@@251 $generated@@253)) 17)) (forall (($generated@@254 T@T) ) (! (= ($generated@@252 ($generated@@251 $generated@@254)) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@249 $generated@@255 $generated@@256)) ($generated@@251 $generated@@257)))
 :pattern ( ($generated@@249 $generated@@255 $generated@@256))
))) (forall (($generated@@258 T@U) ) (! (= (type ($generated@@250 $generated@@258)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) ($generated@@251 $generated@@156)) (= (type $generated@@260) $generated@@156)) (= (type $generated@@261) $generated@@67)) (and ($generated@@143 $generated@@259 ($generated@@250 $generated@@261)) ($generated@@226 $generated@@260 $generated@@261))) ($generated@@143 ($generated@@249 $generated@@259 $generated@@260) ($generated@@250 $generated@@261)))
 :pattern ( ($generated@@143 ($generated@@249 $generated@@259 $generated@@260) ($generated@@250 $generated@@261)))
)))
(assert  (and (= ($generated@@1 $generated@@264) 18) (forall (($generated@@265 Int) ) (! (= (type ($generated@@262 $generated@@265)) $generated@@264)
 :pattern ( ($generated@@262 $generated@@265))
))))
(assert (forall (($generated@@266 Int) ) (!  (=> (and (<= 0 $generated@@266) (< $generated@@266 65536)) (= ($generated@@263 ($generated@@262 $generated@@266)) $generated@@266))
 :pattern ( ($generated@@262 $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) $generated@@67)) (= (type $generated@@271) $generated@@156)) (= (type $generated@@272) $generated@@156)) (= (type $generated@@273) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@267 $generated@@273)) (= ($generated@@77 ($generated@@225 $generated@@271 $generated@@272) ($generated@@146 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@271 $generated@@272) ($generated@@146 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@71)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@147) (= ($generated@@145 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@147) ($generated@@145 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@156) (= (type $generated@@279) $generated@@156)) (= $generated@@277 ($generated@@225 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@145 $generated@@277))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@280 $generated@@282)) ($generated@@251 $generated@@282))
 :pattern ( ($generated@@280 $generated@@282))
)))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) 0)
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
 (=> (= (type $generated@@284) ($generated@@251 $generated@@286)) (= ($generated@@281 ($generated@@249 $generated@@284 $generated@@285)) (+ 1 ($generated@@281 $generated@@284)))))
 :pattern ( ($generated@@249 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@264) (and (and (= ($generated@@262 ($generated@@263 $generated@@287)) $generated@@287) (<= 0 ($generated@@263 $generated@@287))) (< ($generated@@263 $generated@@287) 65536)))
 :pattern ( ($generated@@263 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@156)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@67) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@268 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@77 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@268 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@295) $generated@@156)) (= (type $generated@@296) $generated@@67)) ($generated@@135 $generated@@293 $generated@@294)) ($generated@@268 $generated@@295 $generated@@296 $generated@@293)) ($generated@@268 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@135 $generated@@293 $generated@@294) ($generated@@268 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@298) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@300) $generated@@67)) ($generated@@135 $generated@@297 $generated@@298)) ($generated@@77 $generated@@299 $generated@@300 $generated@@297)) ($generated@@77 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@135 $generated@@297 $generated@@298) ($generated@@77 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@79 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@82 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@79 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@84 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 20)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@82 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@79 $generated@@344 $generated@@2)) (= ($generated@@162 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@84 $generated@@343 $generated@@345))) (<= ($generated ($generated@@84 $generated@@343 $generated@@345)) ($generated@@301 $generated@@343))))
 :pattern ( ($generated@@84 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@162 $generated@@343))
)))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@156) ($generated@@226 $generated@@349 $generated@@222)) (and (= ($generated@@288 ($generated@@346 $generated@@80 $generated@@349)) $generated@@349) ($generated@@143 ($generated@@346 $generated@@80 $generated@@349) $generated@@222)))
 :pattern ( ($generated@@226 $generated@@349 $generated@@222))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@156) ($generated@@226 $generated@@350 $generated@@139)) (and (= ($generated@@288 ($generated@@346 $generated@@80 $generated@@350)) $generated@@350) ($generated@@143 ($generated@@346 $generated@@80 $generated@@350) $generated@@139)))
 :pattern ( ($generated@@226 $generated@@350 $generated@@139))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@80) (= ($generated@@143 $generated@@351 $generated@@222)  (and ($generated@@143 $generated@@351 $generated@@139) (not (= $generated@@351 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@351 $generated@@222))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 Int) ) (! (let (($generated@@355 ($generated@@252 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@355))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 Int) ($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
 (=> (= (type $generated@@356) ($generated@@251 $generated@@359)) (and (=> (= $generated@@357 ($generated@@281 $generated@@356)) (= ($generated@@352 ($generated@@249 $generated@@356 $generated@@358) $generated@@357) $generated@@358)) (=> (not (= $generated@@357 ($generated@@281 $generated@@356))) (= ($generated@@352 ($generated@@249 $generated@@356 $generated@@358) $generated@@357) ($generated@@352 $generated@@356 $generated@@357))))))
 :pattern ( ($generated@@352 ($generated@@249 $generated@@356 $generated@@358) $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@311 (type $generated@@360))))
(let (($generated@@362 ($generated@@310 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@309 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@308 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@307 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@311 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@79 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@311 (type $generated@@367))))
(let (($generated@@369 ($generated@@310 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@309 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@308 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@84 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@329 (type $generated@@371))))
(let (($generated@@373 ($generated@@328 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@327 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@326 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@325 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@329 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@329 (type $generated@@378))))
(let (($generated@@380 ($generated@@328 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@327 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@326 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@84 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@383) $generated@@67)) (= ($generated@@143 $generated@@382 ($generated@@161 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@382 $generated@@384)))) ($generated@@226 $generated@@384 $generated@@383))
 :pattern ( ($generated@@84 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@143 $generated@@382 ($generated@@161 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@386) $generated@@67)) (= (type $generated@@387) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@385 ($generated@@235 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@156) ($generated@@0 ($generated@@84 $generated@@385 $generated@@388))) ($generated@@268 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@84 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@77 $generated@@385 ($generated@@235 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@389 ($generated@@240 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@156) ($generated@@0 ($generated@@84 $generated@@389 $generated@@392))) ($generated@@268 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@84 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@77 $generated@@389 ($generated@@240 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@84 ($generated@@302 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@84 ($generated@@302 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@311 (type $generated@@398))))
(let (($generated@@400 ($generated@@310 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@401) ($generated@@154 ($generated@@346 $generated@@147 $generated@@402)))) (= ($generated@@84 ($generated@@396 $generated@@401) ($generated@@154 ($generated@@346 $generated@@147 $generated@@402))) ($generated@@155 ($generated@@346 $generated@@147 $generated@@402))))))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@329 (type $generated@@406))))
(let (($generated@@408 ($generated@@328 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@79 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@327 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@409) ($generated@@154 ($generated@@346 $generated@@147 $generated@@410)))) (= ($generated@@84 ($generated@@404 $generated@@409) ($generated@@154 ($generated@@346 $generated@@147 $generated@@410))) ($generated@@155 ($generated@@346 $generated@@147 $generated@@410))))))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@310 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@309 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@84 ($generated@@364 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@84 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@328 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@327 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@84 ($generated@@375 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@84 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@416) $generated@@420))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@424) $generated@@428))) (and ($generated@@268 ($generated@@84 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@268 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@327 $generated@@156 $generated@@156)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) $generated@@67)) (= (type $generated@@435) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@432) $generated@@436))) (and ($generated@@268 ($generated@@84 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@268 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@437) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@438) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@439) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@437 $generated@@439))) (and ($generated@@135 $generated@@437 $generated@@438) ($generated@@135 $generated@@438 $generated@@439))) ($generated@@135 $generated@@437 $generated@@439))
 :pattern ( ($generated@@135 $generated@@437 $generated@@438) ($generated@@135 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@79 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@329 (type $generated@@442))))
(let (($generated@@444 ($generated@@328 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@327 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@326 $generated@@444 $generated@@443)) (= ($generated@@325 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@325 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@329 (type $generated@@445))))
(let (($generated@@447 ($generated@@328 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@327 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@326 $generated@@447 $generated@@446)) (= ($generated@@375 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@375 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@329 (type $generated@@448))))
(let (($generated@@450 ($generated@@328 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@327 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@326 $generated@@450 $generated@@449)) (= ($generated@@403 $generated@@448) ($generated@@440 $generated@@156))))))
 :pattern ( ($generated@@403 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@311 (type $generated@@451))))
(let (($generated@@453 ($generated@@310 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@309 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@308 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@156) (= (type $generated@@455) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@395 $generated@@451) ($generated@@288 ($generated@@225 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@395 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@329 (type $generated@@456))))
(let (($generated@@458 ($generated@@328 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@327 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@326 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@156) (= (type $generated@@460) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@403 $generated@@456) ($generated@@288 ($generated@@225 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@403 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@156) ($generated@@226 $generated@@461 $generated@@46)) (and (= ($generated@@288 ($generated@@346 $generated@@2 $generated@@461)) $generated@@461) ($generated@@143 ($generated@@346 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@156) ($generated@@226 $generated@@462 $generated@@47)) (and (= ($generated@@288 ($generated@@346 $generated@@3 $generated@@462)) $generated@@462) ($generated@@143 ($generated@@346 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@156) ($generated@@226 $generated@@463 $generated@@44)) (and (= ($generated@@288 ($generated@@346 $generated@@4 $generated@@463)) $generated@@463) ($generated@@143 ($generated@@346 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@463 $generated@@44))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@156) ($generated@@226 $generated@@464 $generated@@45)) (and (= ($generated@@288 ($generated@@346 $generated@@264 $generated@@464)) $generated@@464) ($generated@@143 ($generated@@346 $generated@@264 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@226 ($generated@@288 $generated@@465) $generated@@466) ($generated@@143 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@226 ($generated@@288 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@82 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@79 $generated@@468 $generated@@2)) (<= 0 ($generated@@301 $generated@@467))))
 :pattern ( ($generated@@301 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@252 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@251 $generated@@470)) (<= 0 ($generated@@281 $generated@@469))))
 :pattern ( ($generated@@281 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@421 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@421 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@421 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@75 ($generated@@421 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@481 ($generated@@429 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@429 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@429 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@75 ($generated@@429 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@156) (= (type $generated@@492) $generated@@156)) (= ($generated@@274 ($generated@@225 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@67) (= (type $generated@@496) $generated@@67)) (= ($generated@@493 ($generated@@146 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@146 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@146 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@146 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@156) (= (type $generated@@502) $generated@@156)) (= ($generated@@154 ($generated@@225 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@225 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@156) (= (type $generated@@504) $generated@@156)) (= ($generated@@155 ($generated@@225 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@225 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@251 $generated@@156)) (= (type $generated@@506) $generated@@67)) (= (type $generated@@507) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@505 ($generated@@250 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@281 $generated@@505))) ($generated@@268 ($generated@@352 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@352 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@77 $generated@@505 ($generated@@250 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@78 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@78 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@67)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@511 ($generated@@235 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@235 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@515 ($generated@@240 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@240 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@161 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@161 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@250 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@250 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@75 ($generated@@250 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@250 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@346 $generated@@528 ($generated@@288 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@288 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) (= ($generated@@143 $generated@@529 ($generated@@421 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@529) $generated@@532))) (and ($generated@@226 ($generated@@84 ($generated@@396 $generated@@529) $generated@@532) $generated@@531) ($generated@@226 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@529) $generated@@532))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@143 $generated@@529 ($generated@@421 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@327 $generated@@156 $generated@@156)) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@67)) (= ($generated@@143 $generated@@533 ($generated@@429 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@533) $generated@@536))) (and ($generated@@226 ($generated@@84 ($generated@@404 $generated@@533) $generated@@536) $generated@@535) ($generated@@226 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@533) $generated@@536))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@143 $generated@@533 ($generated@@429 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@156) (= (type $generated@@540) $generated@@156)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@225 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@225 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@156) (= (type $generated@@542) $generated@@156)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@225 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@225 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@156) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) $generated@@67)) ($generated@@226 $generated@@543 ($generated@@421 $generated@@544 $generated@@545))) (and (= ($generated@@288 ($generated@@346 ($generated@@309 $generated@@156 $generated@@156) $generated@@543)) $generated@@543) ($generated@@143 ($generated@@346 ($generated@@309 $generated@@156 $generated@@156) $generated@@543) ($generated@@421 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@226 $generated@@543 ($generated@@421 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) ($generated@@226 $generated@@546 ($generated@@429 $generated@@547 $generated@@548))) (and (= ($generated@@288 ($generated@@346 ($generated@@327 $generated@@156 $generated@@156) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@346 ($generated@@327 $generated@@156 $generated@@156) $generated@@546) ($generated@@429 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@429 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) $generated@@156)) ($generated@@226 $generated@@551 ($generated@@146 $generated@@549 $generated@@550))) (and (= ($generated@@288 ($generated@@346 $generated@@147 $generated@@551)) $generated@@551) ($generated@@143 ($generated@@346 $generated@@147 $generated@@551) ($generated@@146 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@226 $generated@@551 ($generated@@146 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@84 ($generated@@440 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@84 ($generated@@440 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@72)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@146 $generated@@556 $generated@@557)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@556 $generated@@557))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@252 (type $generated@@560))))
(= (type ($generated@@558 $generated@@560)) ($generated@@251 $generated@@561)))
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@252 (type $generated@@562))))
(= (type ($generated@@559 $generated@@562)) $generated@@563))
 :pattern ( ($generated@@559 $generated@@562))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (=> (= (type $generated@@564) ($generated@@251 $generated@@566)) (and (= ($generated@@558 ($generated@@249 $generated@@564 $generated@@565)) $generated@@564) (= ($generated@@559 ($generated@@249 $generated@@564 $generated@@565)) $generated@@565))))
 :pattern ( ($generated@@249 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@147) (= ($generated@@537 ($generated@@288 $generated@@567)) ($generated@@538 $generated@@567)))
 :pattern ( ($generated@@537 ($generated@@288 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@156) ($generated@@226 $generated@@568 ($generated@@78 0))) (and (= ($generated@@288 ($generated@@346 $generated@@2 $generated@@568)) $generated@@568) ($generated@@143 ($generated@@346 ($generated@@79 $generated@@156 $generated@@4) $generated@@568) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@78 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@156) (= (type $generated@@570) $generated@@67)) ($generated@@226 $generated@@569 ($generated@@235 $generated@@570))) (and (= ($generated@@288 ($generated@@346 ($generated@@79 $generated@@156 $generated@@4) $generated@@569)) $generated@@569) ($generated@@143 ($generated@@346 ($generated@@79 $generated@@156 $generated@@4) $generated@@569) ($generated@@235 $generated@@570))))
 :pattern ( ($generated@@226 $generated@@569 ($generated@@235 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@156) (= (type $generated@@572) $generated@@67)) ($generated@@226 $generated@@571 ($generated@@240 $generated@@572))) (and (= ($generated@@288 ($generated@@346 ($generated@@79 $generated@@156 $generated@@4) $generated@@571)) $generated@@571) ($generated@@143 ($generated@@346 ($generated@@79 $generated@@156 $generated@@4) $generated@@571) ($generated@@240 $generated@@572))))
 :pattern ( ($generated@@226 $generated@@571 ($generated@@240 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@156) (= (type $generated@@574) $generated@@67)) ($generated@@226 $generated@@573 ($generated@@161 $generated@@574))) (and (= ($generated@@288 ($generated@@346 ($generated@@79 $generated@@156 $generated@@2) $generated@@573)) $generated@@573) ($generated@@143 ($generated@@346 ($generated@@79 $generated@@156 $generated@@2) $generated@@573) ($generated@@161 $generated@@574))))
 :pattern ( ($generated@@226 $generated@@573 ($generated@@161 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@156) (= (type $generated@@576) $generated@@67)) ($generated@@226 $generated@@575 ($generated@@250 $generated@@576))) (and (= ($generated@@288 ($generated@@346 ($generated@@251 $generated@@156) $generated@@575)) $generated@@575) ($generated@@143 ($generated@@346 ($generated@@251 $generated@@156) $generated@@575) ($generated@@250 $generated@@576))))
 :pattern ( ($generated@@226 $generated@@575 ($generated@@250 $generated@@576)))
)))
(assert (= ($generated@@75 $generated@@222) $generated@@63))
(assert (= ($generated@@554 $generated@@222) $generated@@66))
(assert (= ($generated@@75 $generated@@139) $generated@@64))
(assert (= ($generated@@554 $generated@@139) $generated@@66))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@161 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@268 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@161 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@67)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@80) (= ($generated@@143 $generated@@584 $generated@@139)  (or (= $generated@@584 $generated@@140) ($generated@@581 ($generated@@582 $generated@@584)))))
 :pattern ( ($generated@@143 $generated@@584 $generated@@139))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@147) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@267 $generated@@587) (and ($generated@@145 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@146 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@146 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@268 ($generated@@154 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@268 ($generated@@154 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@147) (= (type $generated@@590) $generated@@67)) (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@267 $generated@@591) (and ($generated@@145 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@67) ($generated@@77 $generated@@589 ($generated@@146 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@77 $generated@@589 ($generated@@146 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@268 ($generated@@155 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@268 ($generated@@155 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@156) (= (type $generated@@594) $generated@@156)) (= ($generated@@225 ($generated@@245 $generated@@593) ($generated@@245 $generated@@594)) ($generated@@245 ($generated@@225 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@593) ($generated@@245 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@288 ($generated@@245 $generated@@595)) ($generated@@245 ($generated@@288 $generated@@595)))
 :pattern ( ($generated@@288 ($generated@@245 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@252 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@251 $generated@@597)) (= ($generated@@281 $generated@@596) 0)) (= $generated@@596 ($generated@@280 $generated@@597))))
 :pattern ( ($generated@@281 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@79 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@301 ($generated@@85 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@301 $generated@@598) ($generated ($generated@@84 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@301 ($generated@@85 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@2)) ($generated@@77 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@3)) ($generated@@77 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@4)) ($generated@@77 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@609) $generated@@264)) ($generated@@77 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@77 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@611) $generated@@156)) ($generated@@77 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@77 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@251 $generated@@156)) (= (type $generated@@613) $generated@@67)) (= ($generated@@143 $generated@@612 ($generated@@250 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@281 $generated@@612))) ($generated@@226 ($generated@@352 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@352 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@143 $generated@@612 ($generated@@250 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@251 $generated@@156)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@281 $generated@@616))) (< ($generated@@538 ($generated@@346 $generated@@147 ($generated@@352 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@538 ($generated@@346 $generated@@147 ($generated@@352 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) $generated@@67)) ($generated@@143 $generated@@618 ($generated@@421 $generated@@619 $generated@@620))) (and (and ($generated@@143 ($generated@@307 $generated@@618) ($generated@@235 $generated@@619)) ($generated@@143 ($generated@@364 $generated@@618) ($generated@@235 $generated@@620))) ($generated@@143 ($generated@@395 $generated@@618) ($generated@@235 ($generated@@146 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@143 $generated@@618 ($generated@@421 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@327 $generated@@156 $generated@@156)) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) $generated@@67)) ($generated@@143 $generated@@621 ($generated@@429 $generated@@622 $generated@@623))) (and (and ($generated@@143 ($generated@@325 $generated@@621) ($generated@@240 $generated@@622)) ($generated@@143 ($generated@@375 $generated@@621) ($generated@@240 $generated@@623))) ($generated@@143 ($generated@@403 $generated@@621) ($generated@@240 ($generated@@146 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@143 $generated@@621 ($generated@@429 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@143 $generated@@624 $generated@@46))
 :pattern ( ($generated@@143 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@143 $generated@@625 $generated@@47))
 :pattern ( ($generated@@143 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@143 $generated@@626 $generated@@44))
 :pattern ( ($generated@@143 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@264) ($generated@@143 $generated@@627 $generated@@45))
 :pattern ( ($generated@@143 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@156) ($generated@@143 $generated@@628 $generated@@48))
 :pattern ( ($generated@@143 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () Bool)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 (T@U) Bool)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Bool)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@636) $generated@@80) (= (type $generated@@632) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@637) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@638) $generated@@80)) (= (type $generated@@630) ($generated@@251 $generated@@156))) (= (type $generated@@631) $generated@@80)) (= (type $generated@@633) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@635) $generated@@80)) (= (type $generated@@639) ($generated@@168 $generated@@80 $generated@@4))) (= (type $generated@@641) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@643  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@644  (=> (and (not $generated@@629) (= $generated@@630 ($generated@@245 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@249 ($generated@@280 $generated@@156) ($generated@@288 ($generated@@262 118))) ($generated@@288 ($generated@@262 111))) ($generated@@288 ($generated@@262 105))) ($generated@@288 ($generated@@262 100))) ($generated@@288 ($generated@@262 32))) ($generated@@288 ($generated@@262 98))) ($generated@@288 ($generated@@262 97))) ($generated@@288 ($generated@@262 100))) ($generated@@288 ($generated@@262 32))) ($generated@@288 ($generated@@262 108))) ($generated@@288 ($generated@@262 117))) ($generated@@288 ($generated@@262 99))) ($generated@@288 ($generated@@262 107)))))) (=> (and (and ($generated@@143 $generated@@631 $generated@@222) ($generated@@77 $generated@@631 $generated@@222 $generated@@632)) (and ($generated@@267 $generated@@633) ($generated@@634 $generated@@633))) (=> (and (and (and ($generated@@143 $generated@@635 $generated@@222) ($generated@@77 $generated@@635 $generated@@222 $generated@@633)) (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@80) (=> (and (not (= $generated@@645 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@632 $generated@@645) $generated@@60))) (= ($generated@@84 $generated@@633 $generated@@645) ($generated@@84 $generated@@632 $generated@@645))))
 :pattern ( ($generated@@84 $generated@@633 $generated@@645))
))) (and ($generated@@135 $generated@@632 $generated@@633) (= (ControlFlow 0 4) 2))) $generated@@643)))))
(let (($generated@@646  (=> $generated@@629 (=> (and (and ($generated@@143 $generated@@636 $generated@@222) ($generated@@77 $generated@@636 $generated@@222 $generated@@632)) (and ($generated@@267 $generated@@637) ($generated@@634 $generated@@637))) (=> (and (and (and ($generated@@143 $generated@@638 $generated@@222) ($generated@@77 $generated@@638 $generated@@222 $generated@@637)) (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@80) (=> (and (not (= $generated@@647 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@632 $generated@@647) $generated@@60))) (= ($generated@@84 $generated@@637 $generated@@647) ($generated@@84 $generated@@632 $generated@@647))))
 :pattern ( ($generated@@84 $generated@@637 $generated@@647))
))) (and ($generated@@135 $generated@@632 $generated@@637) (= (ControlFlow 0 3) 2))) $generated@@643)))))
(let (($generated@@648  (=> (= $generated@@639 ($generated@@167 $generated@@140 $generated@@632 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@646) (=> (= (ControlFlow 0 5) 4) $generated@@644)))))
(let (($generated@@649  (=> (and (and (and ($generated@@267 $generated@@632) ($generated@@634 $generated@@632)) (=> $generated@@640 (and ($generated@@143 $generated@@641 $generated@@222) ($generated@@77 $generated@@641 $generated@@222 $generated@@632)))) (and (= 4 $generated@@642) (= (ControlFlow 0 6) 5))) $generated@@648)))
$generated@@649))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) Bool)
(declare-fun $generated@@335 (T@U) Bool)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Bool)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Bool)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@80 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@70 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@80) (= (type $generated@@216) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@217) ($generated@@69 $generated@@4))) (= (type $generated@@219) $generated@@80)) (= (type $generated@@220) ($generated@@69 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (= (type $generated@@222) $generated@@67))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@80) (= (type $generated@@224) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@223 $generated@@222 $generated@@224) ($generated@@77 $generated@@223 $generated@@139 $generated@@224)))
 :pattern ( ($generated@@77 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@147)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@156)) (= (type $generated@@232) $generated@@156)) (= ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@147) (= (type $generated@@234) $generated@@147)) (= ($generated@@153 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@153 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@156) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@156) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@156)) (= (type $generated@@254) $generated@@156)) (= (type $generated@@255) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@249 $generated@@255)) (= ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@146 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@146 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@147) (= ($generated@@145 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@147) ($generated@@145 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@156) (= (type $generated@@261) $generated@@156)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@145 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@156)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@67) (= (type $generated@@274) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@77 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@277) $generated@@156)) (= (type $generated@@278) $generated@@67)) ($generated@@135 $generated@@275 $generated@@276)) ($generated@@250 $generated@@277 $generated@@278 $generated@@275)) ($generated@@250 $generated@@277 $generated@@278 $generated@@276))
 :pattern ( ($generated@@135 $generated@@275 $generated@@276) ($generated@@250 $generated@@277 $generated@@278 $generated@@275))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@282) $generated@@67)) ($generated@@135 $generated@@279 $generated@@280)) ($generated@@77 $generated@@281 $generated@@282 $generated@@279)) ($generated@@77 $generated@@281 $generated@@282 $generated@@280))
 :pattern ( ($generated@@135 $generated@@279 $generated@@280) ($generated@@77 $generated@@281 $generated@@282 $generated@@279))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@79 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@82 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@79 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@84 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@79 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@82 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@79 $generated@@326 $generated@@2)) (= ($generated@@162 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@84 $generated@@325 $generated@@327))) (<= ($generated ($generated@@84 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@84 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@162 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@156) ($generated@@226 $generated@@331 $generated@@222)) (and (= ($generated@@270 ($generated@@328 $generated@@80 $generated@@331)) $generated@@331) ($generated@@143 ($generated@@328 $generated@@80 $generated@@331) $generated@@222)))
 :pattern ( ($generated@@226 $generated@@331 $generated@@222))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@156) ($generated@@226 $generated@@332 $generated@@139)) (and (= ($generated@@270 ($generated@@328 $generated@@80 $generated@@332)) $generated@@332) ($generated@@143 ($generated@@328 $generated@@80 $generated@@332) $generated@@139)))
 :pattern ( ($generated@@226 $generated@@332 $generated@@139))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@80) (= ($generated@@143 $generated@@333 $generated@@222)  (and ($generated@@143 $generated@@333 $generated@@139) (not (= $generated@@333 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@333 $generated@@222))
)))
(assert  (=> true (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@80) (or ($generated@@335 $generated@@336) (and (not (= $generated@@336 $generated@@140)) ($generated@@143 $generated@@336 $generated@@222)))) true)
 :pattern ( ($generated@@334 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(let (($generated@@339 ($generated@@292 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@291 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@290 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@289 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@293 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@293 (type $generated@@344))))
(let (($generated@@346 ($generated@@292 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@291 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@290 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(let (($generated@@350 ($generated@@310 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@309 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@308 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@307 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(let (($generated@@357 ($generated@@310 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@309 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@308 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@360) $generated@@67)) (= ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@359 $generated@@361)))) ($generated@@226 $generated@@361 $generated@@360))
 :pattern ( ($generated@@84 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@235 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@156) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@250 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@235 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@366 ($generated@@240 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@156) ($generated@@0 ($generated@@84 $generated@@366 $generated@@369))) ($generated@@250 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@84 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@366 ($generated@@240 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@84 ($generated@@284 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@84 ($generated@@284 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@293 (type $generated@@375))))
(let (($generated@@377 ($generated@@292 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@291 $generated@@156 $generated@@156)) (= (type $generated@@379) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@378) ($generated@@154 ($generated@@328 $generated@@147 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@154 ($generated@@328 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@328 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@311 (type $generated@@383))))
(let (($generated@@385 ($generated@@310 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@387) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@386) ($generated@@154 ($generated@@328 $generated@@147 $generated@@387)))) (= ($generated@@84 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@328 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@328 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@292 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@291 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@310 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@309 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@291 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@401) $generated@@405))) (and ($generated@@250 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@250 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@67)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@409) $generated@@413))) (and ($generated@@250 ($generated@@84 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@250 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@414 $generated@@416))) (and ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))) ($generated@@135 $generated@@414 $generated@@416))
 :pattern ( ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@311 (type $generated@@419))))
(let (($generated@@421 ($generated@@310 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@309 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@308 $generated@@421 $generated@@420)) (= ($generated@@307 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@307 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@311 (type $generated@@422))))
(let (($generated@@424 ($generated@@310 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@309 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@308 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@156))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@293 (type $generated@@428))))
(let (($generated@@430 ($generated@@292 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@291 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@290 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@156) (= (type $generated@@432) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@428) ($generated@@270 ($generated@@225 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@311 (type $generated@@433))))
(let (($generated@@435 ($generated@@310 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@309 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@308 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@433) ($generated@@270 ($generated@@225 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@226 $generated@@438 $generated@@46)) (and (= ($generated@@270 ($generated@@328 $generated@@2 $generated@@438)) $generated@@438) ($generated@@143 ($generated@@328 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@226 $generated@@439 $generated@@47)) (and (= ($generated@@270 ($generated@@328 $generated@@3 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@328 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@226 $generated@@440 $generated@@44)) (and (= ($generated@@270 ($generated@@328 $generated@@4 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@328 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@226 $generated@@442 $generated@@45)) (and (= ($generated@@270 ($generated@@328 $generated@@441 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@328 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@226 ($generated@@270 $generated@@443) $generated@@444) ($generated@@143 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@226 ($generated@@270 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@283 $generated@@445))))
 :pattern ( ($generated@@283 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@265 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@264 $generated@@448)) (<= 0 ($generated@@263 $generated@@447))))
 :pattern ( ($generated@@263 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@75 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) (= (type $generated@@470) $generated@@156)) (= ($generated@@256 ($generated@@225 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@146 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@156) (= (type $generated@@480) $generated@@156)) (= ($generated@@154 ($generated@@225 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@225 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@155 ($generated@@225 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@225 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@265 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@264 $generated@@156)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@263 $generated@@489))) ($generated@@250 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@78 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@78 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@235 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@235 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@240 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@240 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@161 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@328 $generated@@512 ($generated@@270 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@270 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@291 $generated@@156 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@513) $generated@@516))) (and ($generated@@226 ($generated@@84 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@226 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@517) $generated@@520))) (and ($generated@@226 ($generated@@84 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@226 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@225 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@225 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@225 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@225 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) ($generated@@226 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@270 ($generated@@328 ($generated@@291 $generated@@156 $generated@@156) $generated@@527)) $generated@@527) ($generated@@143 ($generated@@328 ($generated@@291 $generated@@156 $generated@@156) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@226 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@226 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@270 ($generated@@328 ($generated@@309 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@328 ($generated@@309 $generated@@156 $generated@@156) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@226 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@156)) ($generated@@226 $generated@@535 ($generated@@146 $generated@@533 $generated@@534))) (and (= ($generated@@270 ($generated@@328 $generated@@147 $generated@@535)) $generated@@535) ($generated@@143 ($generated@@328 $generated@@147 $generated@@535) ($generated@@146 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@226 $generated@@535 ($generated@@146 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@538)) $generated@@80)
 :pattern ( ($generated@@536 $generated@@538))
)))
(assert  (=> true (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@80) (or ($generated@@537 $generated@@539) (and (and (not (= $generated@@539 $generated@@140)) ($generated@@143 $generated@@539 $generated@@222)) ($generated@@334 $generated@@539)))) ($generated@@143 ($generated@@536 $generated@@539) $generated@@222))
 :pattern ( ($generated@@536 $generated@@539))
))))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@84 ($generated@@417 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@84 ($generated@@417 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@72)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@544 $generated@@545)) $generated@@62) (= ($generated@@542 ($generated@@146 $generated@@544 $generated@@545)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@147) (= ($generated@@521 ($generated@@270 $generated@@546)) ($generated@@522 $generated@@546)))
 :pattern ( ($generated@@521 ($generated@@270 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@156) ($generated@@226 $generated@@547 ($generated@@78 0))) (and (= ($generated@@270 ($generated@@328 $generated@@2 $generated@@547)) $generated@@547) ($generated@@143 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@547) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@547 ($generated@@78 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@226 $generated@@548 ($generated@@235 $generated@@549))) (and (= ($generated@@270 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@548) ($generated@@235 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@548 ($generated@@235 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@226 $generated@@550 ($generated@@240 $generated@@551))) (and (= ($generated@@270 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@550) ($generated@@240 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@240 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@156) (= (type $generated@@553) $generated@@67)) ($generated@@226 $generated@@552 ($generated@@161 $generated@@553))) (and (= ($generated@@270 ($generated@@328 ($generated@@79 $generated@@156 $generated@@2) $generated@@552)) $generated@@552) ($generated@@143 ($generated@@328 ($generated@@79 $generated@@156 $generated@@2) $generated@@552) ($generated@@161 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@161 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@156) (= (type $generated@@555) $generated@@67)) ($generated@@226 $generated@@554 ($generated@@483 $generated@@555))) (and (= ($generated@@270 ($generated@@328 ($generated@@264 $generated@@156) $generated@@554)) $generated@@554) ($generated@@143 ($generated@@328 ($generated@@264 $generated@@156) $generated@@554) ($generated@@483 $generated@@555))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@483 $generated@@555)))
)))
(assert (= ($generated@@75 $generated@@222) $generated@@63))
(assert (= ($generated@@542 $generated@@222) $generated@@66))
(assert (= ($generated@@75 $generated@@139) $generated@@64))
(assert (= ($generated@@542 $generated@@139) $generated@@66))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@556 ($generated@@161 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@556 $generated@@559)))) ($generated@@250 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@84 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@161 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@67)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@80) (= ($generated@@143 $generated@@563 $generated@@139)  (or (= $generated@@563 $generated@@140) ($generated@@560 ($generated@@561 $generated@@563)))))
 :pattern ( ($generated@@143 $generated@@563 $generated@@139))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@147) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@566) (and ($generated@@145 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@67) ($generated@@77 $generated@@564 ($generated@@146 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@77 $generated@@564 ($generated@@146 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@250 ($generated@@154 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@250 ($generated@@154 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@147) (= (type $generated@@569) $generated@@67)) (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@570) (and ($generated@@145 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@67) ($generated@@77 $generated@@568 ($generated@@146 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@77 $generated@@568 ($generated@@146 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@250 ($generated@@155 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@250 ($generated@@155 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@156) (= (type $generated@@573) $generated@@156)) (= ($generated@@225 ($generated@@245 $generated@@572) ($generated@@245 $generated@@573)) ($generated@@245 ($generated@@225 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@572) ($generated@@245 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@574)) ($generated@@245 ($generated@@270 $generated@@574)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@265 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@264 $generated@@576)) (= ($generated@@263 $generated@@575) 0)) (= $generated@@575 ($generated@@262 $generated@@576))))
 :pattern ( ($generated@@263 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@283 ($generated@@85 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@283 $generated@@577) ($generated ($generated@@84 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@283 ($generated@@85 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@2)) ($generated@@77 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@3)) ($generated@@77 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@4)) ($generated@@77 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@441)) ($generated@@77 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@590) $generated@@156)) ($generated@@77 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@77 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@264 $generated@@156)) (= (type $generated@@592) $generated@@67)) (= ($generated@@143 $generated@@591 ($generated@@483 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@263 $generated@@591))) ($generated@@226 ($generated@@484 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@484 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@143 $generated@@591 ($generated@@483 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@264 $generated@@156)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@263 $generated@@595))) (< ($generated@@522 ($generated@@328 $generated@@147 ($generated@@484 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@522 ($generated@@328 $generated@@147 ($generated@@484 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@291 $generated@@156 $generated@@156)) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) $generated@@67)) ($generated@@143 $generated@@597 ($generated@@398 $generated@@598 $generated@@599))) (and (and ($generated@@143 ($generated@@289 $generated@@597) ($generated@@235 $generated@@598)) ($generated@@143 ($generated@@341 $generated@@597) ($generated@@235 $generated@@599))) ($generated@@143 ($generated@@372 $generated@@597) ($generated@@235 ($generated@@146 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@143 $generated@@597 ($generated@@398 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) $generated@@67)) ($generated@@143 $generated@@600 ($generated@@406 $generated@@601 $generated@@602))) (and (and ($generated@@143 ($generated@@307 $generated@@600) ($generated@@240 $generated@@601)) ($generated@@143 ($generated@@352 $generated@@600) ($generated@@240 $generated@@602))) ($generated@@143 ($generated@@380 $generated@@600) ($generated@@240 ($generated@@146 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@143 $generated@@600 ($generated@@406 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@143 $generated@@603 $generated@@46))
 :pattern ( ($generated@@143 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@143 $generated@@604 $generated@@47))
 :pattern ( ($generated@@143 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@143 $generated@@605 $generated@@44))
 :pattern ( ($generated@@143 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@441) ($generated@@143 $generated@@606 $generated@@45))
 :pattern ( ($generated@@143 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@156) ($generated@@143 $generated@@607 $generated@@48))
 :pattern ( ($generated@@143 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () Bool)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Bool)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () Bool)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@622) $generated@@80) (= (type $generated@@625) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@627) $generated@@80)) (= (type $generated@@616) $generated@@80)) (= (type $generated@@619) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@621) $generated@@80)) (= (type $generated@@608) $generated@@80)) (= (type $generated@@614) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@615) $generated@@80)) (= (type $generated@@609) $generated@@80)) (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@613) $generated@@80)) (= (type $generated@@618) $generated@@80)) (= (type $generated@@620) $generated@@80)) (= (type $generated@@624) $generated@@80)) (= (type $generated@@626) $generated@@80)) (= (type $generated@@628) ($generated@@168 $generated@@80 $generated@@4))) (= (type $generated@@630) $generated@@80)) (= (type $generated@@631) $generated@@80)) (= (type $generated@@633) $generated@@80)) (= (type $generated@@634) $generated@@80)) (= (type $generated@@635) $generated@@80)) (= (type $generated@@636) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@638  (=> (not ($generated@@334 $generated@@608)) (=> (and (and ($generated@@143 $generated@@609 $generated@@222) ($generated@@77 $generated@@609 $generated@@222 $generated@@610)) (and ($generated@@249 $generated@@611) ($generated@@612 $generated@@611))) (=> (and (and (and ($generated@@143 $generated@@613 $generated@@222) ($generated@@77 $generated@@613 $generated@@222 $generated@@611)) (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@80) (=> (and (not (= $generated@@639 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@614 $generated@@639) $generated@@60))) (= ($generated@@84 $generated@@611 $generated@@639) ($generated@@84 $generated@@614 $generated@@639))))
 :pattern ( ($generated@@84 $generated@@611 $generated@@639))
))) (and ($generated@@135 $generated@@614 $generated@@611) (= (ControlFlow 0 17) (- 0 16)))) true)))))
(let (($generated@@640  (=> ($generated@@334 $generated@@608) (and (=> (= (ControlFlow 0 12) (- 0 15)) true) (and (=> (= (ControlFlow 0 12) (- 0 14)) (not (= $generated@@608 $generated@@140))) (=> (not (= $generated@@608 $generated@@140)) (=> ($generated@@77 $generated@@608 $generated@@139 $generated@@614) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@334 $generated@@608)) (=> ($generated@@334 $generated@@608) (=> (and (and ($generated@@537 $generated@@608) ($generated@@537 $generated@@608)) (and (= $generated@@615 ($generated@@536 $generated@@608)) (= (ControlFlow 0 12) (- 0 11)))) true))))))))))
(let (($generated@@641  (=> (and (not ($generated@@334 $generated@@616)) (=> $generated@@617 (and ($generated@@143 $generated@@618 $generated@@222) ($generated@@77 $generated@@618 $generated@@222 $generated@@619)))) (=> (and (and (and ($generated@@143 $generated@@620 $generated@@222) ($generated@@77 $generated@@620 $generated@@222 $generated@@610)) (and ($generated@@249 $generated@@614) ($generated@@612 $generated@@614))) (and (and ($generated@@143 $generated@@608 $generated@@222) ($generated@@77 $generated@@608 $generated@@222 $generated@@614)) (and (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@80) (=> (and (not (= $generated@@642 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@619 $generated@@642) $generated@@60))) (= ($generated@@84 $generated@@614 $generated@@642) ($generated@@84 $generated@@619 $generated@@642))))
 :pattern ( ($generated@@84 $generated@@614 $generated@@642))
)) ($generated@@135 $generated@@619 $generated@@614)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) true) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= $generated@@608 $generated@@140))) (=> (not (= $generated@@608 $generated@@140)) (=> ($generated@@77 $generated@@608 $generated@@139 $generated@@614) (=> (and ($generated@@335 $generated@@608) ($generated@@335 $generated@@608)) (and (=> (= (ControlFlow 0 18) 12) $generated@@640) (=> (= (ControlFlow 0 18) 17) $generated@@638)))))))))))
(let (($generated@@643  (=> ($generated@@334 $generated@@616) (and (=> (= (ControlFlow 0 7) (- 0 10)) true) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= $generated@@616 $generated@@140))) (=> (not (= $generated@@616 $generated@@140)) (=> ($generated@@77 $generated@@616 $generated@@139 $generated@@619) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@334 $generated@@616)) (=> ($generated@@334 $generated@@616) (=> (and (and ($generated@@537 $generated@@616) ($generated@@537 $generated@@616)) (and (= $generated@@621 ($generated@@536 $generated@@616)) (= (ControlFlow 0 7) (- 0 6)))) true))))))))))
(let (($generated@@644  (=> (and (not ($generated@@334 $generated@@622)) (=> $generated@@623 (and ($generated@@143 $generated@@624 $generated@@222) ($generated@@77 $generated@@624 $generated@@222 $generated@@625)))) (=> (and (and (and ($generated@@143 $generated@@626 $generated@@222) ($generated@@77 $generated@@626 $generated@@222 $generated@@610)) (and ($generated@@249 $generated@@619) ($generated@@612 $generated@@619))) (and (and ($generated@@143 $generated@@616 $generated@@222) ($generated@@77 $generated@@616 $generated@@222 $generated@@619)) (and (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@80) (=> (and (not (= $generated@@645 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@625 $generated@@645) $generated@@60))) (= ($generated@@84 $generated@@619 $generated@@645) ($generated@@84 $generated@@625 $generated@@645))))
 :pattern ( ($generated@@84 $generated@@619 $generated@@645))
)) ($generated@@135 $generated@@625 $generated@@619)))) (and (=> (= (ControlFlow 0 21) (- 0 23)) true) (and (=> (= (ControlFlow 0 21) (- 0 22)) (not (= $generated@@616 $generated@@140))) (=> (not (= $generated@@616 $generated@@140)) (=> ($generated@@77 $generated@@616 $generated@@139 $generated@@619) (=> (and ($generated@@335 $generated@@616) ($generated@@335 $generated@@616)) (and (=> (= (ControlFlow 0 21) 7) $generated@@643) (=> (= (ControlFlow 0 21) 18) $generated@@641)))))))))))
(let (($generated@@646  (=> ($generated@@334 $generated@@622) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@622 $generated@@140))) (=> (not (= $generated@@622 $generated@@140)) (=> ($generated@@77 $generated@@622 $generated@@139 $generated@@625) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@334 $generated@@622)) (=> ($generated@@334 $generated@@622) (=> (and (and ($generated@@537 $generated@@622) ($generated@@537 $generated@@622)) (and (= $generated@@627 ($generated@@536 $generated@@622)) (= (ControlFlow 0 2) (- 0 1)))) true))))))))))
(let (($generated@@647  (=> (and (= $generated@@628 ($generated@@167 $generated@@140 $generated@@610 $generated@@60 false)) (=> $generated@@629 (and ($generated@@143 $generated@@630 $generated@@222) ($generated@@77 $generated@@630 $generated@@222 $generated@@610)))) (=> (and (and (and ($generated@@143 $generated@@631 $generated@@222) ($generated@@77 $generated@@631 $generated@@222 $generated@@610)) (and ($generated@@249 $generated@@625) ($generated@@612 $generated@@625))) (and (and ($generated@@143 $generated@@622 $generated@@222) ($generated@@77 $generated@@622 $generated@@222 $generated@@625)) (and (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@80) (=> (and (not (= $generated@@648 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@610 $generated@@648) $generated@@60))) (= ($generated@@84 $generated@@625 $generated@@648) ($generated@@84 $generated@@610 $generated@@648))))
 :pattern ( ($generated@@84 $generated@@625 $generated@@648))
)) ($generated@@135 $generated@@610 $generated@@625)))) (and (=> (= (ControlFlow 0 24) (- 0 26)) true) (and (=> (= (ControlFlow 0 24) (- 0 25)) (not (= $generated@@622 $generated@@140))) (=> (not (= $generated@@622 $generated@@140)) (=> ($generated@@77 $generated@@622 $generated@@139 $generated@@625) (=> (and ($generated@@335 $generated@@622) ($generated@@335 $generated@@622)) (and (=> (= (ControlFlow 0 24) 2) $generated@@646) (=> (= (ControlFlow 0 24) 21) $generated@@644)))))))))))
(let (($generated@@649  (=> (and (and ($generated@@249 $generated@@610) ($generated@@612 $generated@@610)) (=> $generated@@632 (and ($generated@@143 $generated@@633 $generated@@222) ($generated@@77 $generated@@633 $generated@@222 $generated@@610)))) (=> (and (and (and (=> $generated@@629 (and ($generated@@143 $generated@@634 $generated@@222) ($generated@@77 $generated@@634 $generated@@222 $generated@@610))) true) (and (=> $generated@@623 (and ($generated@@143 $generated@@635 $generated@@222) ($generated@@77 $generated@@635 $generated@@222 $generated@@610))) true)) (and (and (=> $generated@@617 (and ($generated@@143 $generated@@636 $generated@@222) ($generated@@77 $generated@@636 $generated@@222 $generated@@610))) true) (and (= 5 $generated@@637) (= (ControlFlow 0 27) 24)))) $generated@@647))))
$generated@@649)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) Bool)
(declare-fun $generated@@356 (T@U) Bool)
(declare-fun $generated@@358 (T@U) Bool)
(declare-fun $generated@@359 (T@U) Bool)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (Int Int) Int)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U Int) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@565 (Int Int) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Bool)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Bool)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (= (type $generated@@144) $generated@@72))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@145 $generated@@144 $generated@@146))
 :pattern ( ($generated@@82 $generated@@145 $generated@@144 $generated@@146))
)))
(assert  (and (= (type $generated@@147) $generated@@72) (= (type $generated@@148) $generated@@85)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@85) (= (type $generated@@150) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@149 $generated@@147 $generated@@150))
)))
(assert (= (type $generated@@151) $generated@@72))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@85) (= (type $generated@@153) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@152 $generated@@151 $generated@@153)  (or (= $generated@@152 $generated@@148) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@152 $generated@@151 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@154 $generated@@155 ($generated@@83 0)))
 :pattern ( ($generated@@154 $generated@@155 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@158) 14) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@159 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@157 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@72) (= (type $generated@@162) $generated@@72)) (= (type $generated@@163) $generated@@158)) ($generated@@154 $generated@@163 ($generated@@157 $generated@@161 $generated@@162))) ($generated@@156 $generated@@163))
 :pattern ( ($generated@@156 $generated@@163) ($generated@@154 $generated@@163 ($generated@@157 $generated@@161 $generated@@162)))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 15) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@167)
 :pattern ( ($generated@@166 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@158) (= (type $generated@@171) $generated@@158)) true) (= ($generated@@164 $generated@@170 $generated@@171)  (and (= ($generated@@165 $generated@@170) ($generated@@165 $generated@@171)) (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)))))
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@72)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@84 $generated@@167 $generated@@2)) (= (type $generated@@176) $generated@@72)) ($generated@@154 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@154 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 16)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@85 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@75 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@85) (= (type $generated@@227) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@228) ($generated@@74 $generated@@4))) (= (type $generated@@230) $generated@@85)) (= (type $generated@@231) ($generated@@74 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (= (type $generated@@233) $generated@@72))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@85) (= (type $generated@@235) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@234 $generated@@233 $generated@@235) ($generated@@82 $generated@@234 $generated@@147 $generated@@235)))
 :pattern ( ($generated@@82 $generated@@234 $generated@@233 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@72))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@85) (= (type $generated@@238) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@237 $generated@@236 $generated@@238) ($generated@@82 $generated@@237 $generated@@151 $generated@@238)))
 :pattern ( ($generated@@82 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@158)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@72) (= (type $generated@@244) $generated@@72)) (= (type $generated@@245) $generated@@167)) (= (type $generated@@246) $generated@@167)) (= ($generated@@154 ($generated@@239 $generated@@245 $generated@@246) ($generated@@157 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@154 ($generated@@239 $generated@@245 $generated@@246) ($generated@@157 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) (= (type $generated@@248) $generated@@158)) (= ($generated@@164 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@164 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@72)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@84 $generated@@167 $generated@@4)) (= (type $generated@@252) $generated@@72)) (= ($generated@@154 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@167) ($generated@@0 ($generated@@89 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@89 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@154 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@84 $generated@@167 $generated@@4)) (= (type $generated@@257) $generated@@72)) (= ($generated@@154 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@167) ($generated@@0 ($generated@@89 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@89 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@154 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@72) (= (type $generated@@268) $generated@@72)) (= (type $generated@@269) $generated@@167)) (= (type $generated@@270) $generated@@167)) (= (type $generated@@271) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@265 $generated@@271)) (= ($generated@@82 ($generated@@239 $generated@@269 $generated@@270) ($generated@@157 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@82 ($generated@@239 $generated@@269 $generated@@270) ($generated@@157 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@76)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@158) (= ($generated@@156 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@62)))
 :pattern ( ($generated@@156 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@158) ($generated@@156 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@167) (= (type $generated@@277) $generated@@167)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@156 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@2) (= ($generated@@154 $generated@@286 $generated@@144) (<= ($generated@@259 0) ($generated $generated@@286))))
 :pattern ( ($generated@@154 $generated@@286 $generated@@144))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@167)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@72) (= (type $generated@@291) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@266 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@82 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@266 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@293) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@294) $generated@@167)) (= (type $generated@@295) $generated@@72)) ($generated@@140 $generated@@292 $generated@@293)) ($generated@@266 $generated@@294 $generated@@295 $generated@@292)) ($generated@@266 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@140 $generated@@292 $generated@@293) ($generated@@266 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@297) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@299) $generated@@72)) ($generated@@140 $generated@@296 $generated@@297)) ($generated@@82 $generated@@298 $generated@@299 $generated@@296)) ($generated@@82 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@140 $generated@@296 $generated@@297) ($generated@@82 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@84 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@87 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@84 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@89 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@84 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@89 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@89 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@84 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@89 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@89 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@87 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@84 $generated@@343 $generated@@2)) (= ($generated@@173 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@89 $generated@@342 $generated@@344))) (<= ($generated ($generated@@89 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@89 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@173 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@167) ($generated@@240 $generated@@348 $generated@@144)) (and (= ($generated@@287 ($generated@@345 $generated@@2 $generated@@348)) $generated@@348) ($generated@@154 ($generated@@345 $generated@@2 $generated@@348) $generated@@144)))
 :pattern ( ($generated@@240 $generated@@348 $generated@@144))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@167) ($generated@@240 $generated@@349 $generated@@233)) (and (= ($generated@@287 ($generated@@345 $generated@@85 $generated@@349)) $generated@@349) ($generated@@154 ($generated@@345 $generated@@85 $generated@@349) $generated@@233)))
 :pattern ( ($generated@@240 $generated@@349 $generated@@233))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@167) ($generated@@240 $generated@@350 $generated@@147)) (and (= ($generated@@287 ($generated@@345 $generated@@85 $generated@@350)) $generated@@350) ($generated@@154 ($generated@@345 $generated@@85 $generated@@350) $generated@@147)))
 :pattern ( ($generated@@240 $generated@@350 $generated@@147))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@167) ($generated@@240 $generated@@351 $generated@@236)) (and (= ($generated@@287 ($generated@@345 $generated@@85 $generated@@351)) $generated@@351) ($generated@@154 ($generated@@345 $generated@@85 $generated@@351) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@351 $generated@@236))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@167) ($generated@@240 $generated@@352 $generated@@151)) (and (= ($generated@@287 ($generated@@345 $generated@@85 $generated@@352)) $generated@@352) ($generated@@154 ($generated@@345 $generated@@85 $generated@@352) $generated@@151)))
 :pattern ( ($generated@@240 $generated@@352 $generated@@151))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@85) (= ($generated@@154 $generated@@353 $generated@@233)  (and ($generated@@154 $generated@@353 $generated@@147) (not (= $generated@@353 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@353 $generated@@233))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@85) (= ($generated@@154 $generated@@354 $generated@@236)  (and ($generated@@154 $generated@@354 $generated@@151) (not (= $generated@@354 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@354 $generated@@236))
)))
(assert  (=> true (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@85) (or ($generated@@356 $generated@@357) (and (not (= $generated@@357 $generated@@148)) ($generated@@154 $generated@@357 $generated@@233)))) true)
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert  (=> true (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@85) (or ($generated@@359 $generated@@360) (and (not (= $generated@@360 $generated@@148)) ($generated@@154 $generated@@360 $generated@@236)))) true)
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@310 (type $generated@@361))))
(let (($generated@@363 ($generated@@309 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@308 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@307 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@89 ($generated@@306 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@306 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@310 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@84 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@310 (type $generated@@368))))
(let (($generated@@370 ($generated@@309 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@308 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@307 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(let (($generated@@374 ($generated@@327 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@326 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@325 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@89 ($generated@@324 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@324 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@328 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@84 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@328 (type $generated@@379))))
(let (($generated@@381 ($generated@@327 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@326 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@325 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@84 $generated@@167 $generated@@2)) (= (type $generated@@384) $generated@@72)) (= ($generated@@154 $generated@@383 ($generated@@172 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@167) (< 0 ($generated ($generated@@89 $generated@@383 $generated@@385)))) ($generated@@240 $generated@@385 $generated@@384))
 :pattern ( ($generated@@89 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@154 $generated@@383 ($generated@@172 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@84 $generated@@167 $generated@@4)) (= (type $generated@@387) $generated@@72)) (= (type $generated@@388) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@386 ($generated@@249 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@167) ($generated@@0 ($generated@@89 $generated@@386 $generated@@389))) ($generated@@266 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@89 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@82 $generated@@386 ($generated@@249 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@84 $generated@@167 $generated@@4)) (= (type $generated@@391) $generated@@72)) (= (type $generated@@392) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@390 ($generated@@254 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@167) ($generated@@0 ($generated@@89 $generated@@390 $generated@@393))) ($generated@@266 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@89 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@82 $generated@@390 ($generated@@254 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@89 ($generated@@301 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@89 ($generated@@301 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@84 $generated@@167 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@310 (type $generated@@399))))
(let (($generated@@401 ($generated@@309 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@84 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@308 $generated@@167 $generated@@167)) (= (type $generated@@403) $generated@@167)) (= ($generated@@0 ($generated@@89 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@89 ($generated@@306 $generated@@402) ($generated@@165 ($generated@@345 $generated@@158 $generated@@403)))) (= ($generated@@89 ($generated@@397 $generated@@402) ($generated@@165 ($generated@@345 $generated@@158 $generated@@403))) ($generated@@166 ($generated@@345 $generated@@158 $generated@@403))))))
 :pattern ( ($generated@@89 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@167 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@328 (type $generated@@407))))
(let (($generated@@409 ($generated@@327 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@326 $generated@@167 $generated@@167)) (= (type $generated@@411) $generated@@167)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@324 $generated@@410) ($generated@@165 ($generated@@345 $generated@@158 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@165 ($generated@@345 $generated@@158 $generated@@411))) ($generated@@166 ($generated@@345 $generated@@158 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@309 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@308 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@89 ($generated@@365 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@89 ($generated@@306 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@89 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@89 ($generated@@306 $generated@@412) $generated@@416))
 :pattern ( ($generated@@89 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@89 ($generated@@365 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@327 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@326 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@89 ($generated@@376 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@89 ($generated@@324 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@89 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@89 ($generated@@324 $generated@@417) $generated@@421))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@89 ($generated@@376 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@72)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@308 $generated@@167 $generated@@167)) (= (type $generated@@426) $generated@@72)) (= (type $generated@@427) $generated@@72)) (= (type $generated@@428) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@167) ($generated@@0 ($generated@@89 ($generated@@306 $generated@@425) $generated@@429))) (and ($generated@@266 ($generated@@89 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@266 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@89 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@306 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@82 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@326 $generated@@167 $generated@@167)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@167) ($generated@@0 ($generated@@89 ($generated@@324 $generated@@433) $generated@@437))) (and ($generated@@266 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@266 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@324 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 Int) ($generated@@440 Int) ) (! (= ($generated@@438 $generated@@439 $generated@@440) (div $generated@@439 $generated@@440))
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@441) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@442) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@443) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@441 $generated@@443))) (and ($generated@@140 $generated@@441 $generated@@442) ($generated@@140 $generated@@442 $generated@@443))) ($generated@@140 $generated@@441 $generated@@443))
 :pattern ( ($generated@@140 $generated@@441 $generated@@442) ($generated@@140 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@84 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@328 (type $generated@@446))))
(let (($generated@@448 ($generated@@327 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@326 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@325 $generated@@448 $generated@@447)) (= ($generated@@324 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@324 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@328 (type $generated@@449))))
(let (($generated@@451 ($generated@@327 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@326 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@325 $generated@@451 $generated@@450)) (= ($generated@@376 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@376 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@328 (type $generated@@452))))
(let (($generated@@454 ($generated@@327 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@326 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@325 $generated@@454 $generated@@453)) (= ($generated@@404 $generated@@452) ($generated@@444 $generated@@167))))))
 :pattern ( ($generated@@404 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@310 (type $generated@@455))))
(let (($generated@@457 ($generated@@309 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@308 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@307 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@167) (= (type $generated@@459) $generated@@167)) ($generated@@0 ($generated@@89 ($generated@@396 $generated@@455) ($generated@@287 ($generated@@239 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@396 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@328 (type $generated@@460))))
(let (($generated@@462 ($generated@@327 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@326 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@325 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@167) (= (type $generated@@464) $generated@@167)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@460) ($generated@@287 ($generated@@239 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@404 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@167) ($generated@@240 $generated@@465 $generated@@46)) (and (= ($generated@@287 ($generated@@345 $generated@@2 $generated@@465)) $generated@@465) ($generated@@154 ($generated@@345 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@167) ($generated@@240 $generated@@466 $generated@@47)) (and (= ($generated@@287 ($generated@@345 $generated@@3 $generated@@466)) $generated@@466) ($generated@@154 ($generated@@345 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@167) ($generated@@240 $generated@@467 $generated@@44)) (and (= ($generated@@287 ($generated@@345 $generated@@4 $generated@@467)) $generated@@467) ($generated@@154 ($generated@@345 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 20))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@167) ($generated@@240 $generated@@469 $generated@@45)) (and (= ($generated@@287 ($generated@@345 $generated@@468 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@345 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@72) (= ($generated@@240 ($generated@@287 $generated@@470) $generated@@471) ($generated@@154 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@87 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@84 $generated@@473 $generated@@2)) (<= 0 ($generated@@300 $generated@@472))))
 :pattern ( ($generated@@300 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@281 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@280 $generated@@475)) (<= 0 ($generated@@279 $generated@@474))))
 :pattern ( ($generated@@279 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@72)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@72) (= (type $generated@@479) $generated@@72)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@72)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@72) (= (type $generated@@483) $generated@@72)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@80 ($generated@@422 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@72)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@72) (= (type $generated@@489) $generated@@72)) (= ($generated@@486 ($generated@@430 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@430 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@72)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@72) (= (type $generated@@493) $generated@@72)) (= ($generated@@490 ($generated@@430 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@430 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@167) (= (type $generated@@497) $generated@@167)) (= ($generated@@272 ($generated@@239 $generated@@496 $generated@@497)) $generated@@62))
 :pattern ( ($generated@@239 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@72)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@72) (= (type $generated@@501) $generated@@72)) (= ($generated@@498 ($generated@@157 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@157 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@72)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@72) (= (type $generated@@505) $generated@@72)) (= ($generated@@502 ($generated@@157 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@157 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@167) (= (type $generated@@507) $generated@@167)) (= ($generated@@165 ($generated@@239 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@167) (= (type $generated@@509) $generated@@167)) (= ($generated@@166 ($generated@@239 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@239 $generated@@508 $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) $generated@@72)
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ($generated@@514 Int) ) (! (let (($generated@@515 ($generated@@281 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513 $generated@@514)) $generated@@515))
 :pattern ( ($generated@@511 $generated@@513 $generated@@514))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@280 $generated@@167)) (= (type $generated@@517) $generated@@72)) (= (type $generated@@518) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@516 ($generated@@510 $generated@@517) $generated@@518) (forall (($generated@@519 Int) ) (!  (=> (and (<= 0 $generated@@519) (< $generated@@519 ($generated@@279 $generated@@516))) ($generated@@266 ($generated@@511 $generated@@516 $generated@@519) $generated@@517 $generated@@518))
 :pattern ( ($generated@@511 $generated@@516 $generated@@519))
))))
 :pattern ( ($generated@@82 $generated@@516 ($generated@@510 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@521 Int) ) (! (= ($generated@@520 ($generated@@83 $generated@@521)) $generated@@521)
 :pattern ( ($generated@@83 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@72)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@72) (= ($generated@@522 ($generated@@249 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@249 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@72) (= ($generated@@80 ($generated@@249 $generated@@525)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@72)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@72) (= ($generated@@526 ($generated@@254 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@72) (= ($generated@@80 ($generated@@254 $generated@@529)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@72)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@72) (= ($generated@@530 ($generated@@172 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@172 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@72) (= ($generated@@80 ($generated@@172 $generated@@533)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@72)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@72) (= ($generated@@534 ($generated@@510 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@510 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@72) (= ($generated@@80 ($generated@@510 $generated@@537)) $generated@@57))
 :pattern ( ($generated@@510 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(= ($generated@@345 $generated@@539 ($generated@@287 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@287 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@308 $generated@@167 $generated@@167)) (= (type $generated@@541) $generated@@72)) (= (type $generated@@542) $generated@@72)) (= ($generated@@154 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@167) ($generated@@0 ($generated@@89 ($generated@@306 $generated@@540) $generated@@543))) (and ($generated@@240 ($generated@@89 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@240 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@89 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@89 ($generated@@306 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@154 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@326 $generated@@167 $generated@@167)) (= (type $generated@@545) $generated@@72)) (= (type $generated@@546) $generated@@72)) (= ($generated@@154 $generated@@544 ($generated@@430 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@167) ($generated@@0 ($generated@@89 ($generated@@324 $generated@@544) $generated@@547))) (and ($generated@@240 ($generated@@89 ($generated@@405 $generated@@544) $generated@@547) $generated@@546) ($generated@@240 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@544) $generated@@547))
 :pattern ( ($generated@@89 ($generated@@324 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@154 $generated@@544 ($generated@@430 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@167) (= (type $generated@@551) $generated@@167)) (< ($generated@@548 $generated@@550) ($generated@@549 ($generated@@239 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@239 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@167) (= (type $generated@@553) $generated@@167)) (< ($generated@@548 $generated@@553) ($generated@@549 ($generated@@239 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@239 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@167) (= (type $generated@@555) $generated@@72)) (= (type $generated@@556) $generated@@72)) ($generated@@240 $generated@@554 ($generated@@422 $generated@@555 $generated@@556))) (and (= ($generated@@287 ($generated@@345 ($generated@@308 $generated@@167 $generated@@167) $generated@@554)) $generated@@554) ($generated@@154 ($generated@@345 ($generated@@308 $generated@@167 $generated@@167) $generated@@554) ($generated@@422 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@240 $generated@@554 ($generated@@422 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@167) (= (type $generated@@558) $generated@@72)) (= (type $generated@@559) $generated@@72)) ($generated@@240 $generated@@557 ($generated@@430 $generated@@558 $generated@@559))) (and (= ($generated@@287 ($generated@@345 ($generated@@326 $generated@@167 $generated@@167) $generated@@557)) $generated@@557) ($generated@@154 ($generated@@345 ($generated@@326 $generated@@167 $generated@@167) $generated@@557) ($generated@@430 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@430 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@72) (= (type $generated@@561) $generated@@72)) (= (type $generated@@562) $generated@@167)) ($generated@@240 $generated@@562 ($generated@@157 $generated@@560 $generated@@561))) (and (= ($generated@@287 ($generated@@345 $generated@@158 $generated@@562)) $generated@@562) ($generated@@154 ($generated@@345 $generated@@158 $generated@@562) ($generated@@157 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@157 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@89 ($generated@@444 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@89 ($generated@@444 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@566 Int) ($generated@@567 Int) ) (! (= ($generated@@565 $generated@@566 $generated@@567) (mod $generated@@566 $generated@@567))
 :pattern ( ($generated@@565 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@77)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@72) (= (type $generated@@571) $generated@@72)) (and (= ($generated@@80 ($generated@@157 $generated@@570 $generated@@571)) $generated@@63) (= ($generated@@568 ($generated@@157 $generated@@570 $generated@@571)) $generated@@69)))
 :pattern ( ($generated@@157 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@158) (= ($generated@@548 ($generated@@287 $generated@@572)) ($generated@@549 $generated@@572)))
 :pattern ( ($generated@@548 ($generated@@287 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@167) ($generated@@240 $generated@@573 ($generated@@83 0))) (and (= ($generated@@287 ($generated@@345 $generated@@2 $generated@@573)) $generated@@573) ($generated@@154 ($generated@@345 ($generated@@84 $generated@@167 $generated@@4) $generated@@573) ($generated@@83 0))))
 :pattern ( ($generated@@240 $generated@@573 ($generated@@83 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@167) (= (type $generated@@575) $generated@@72)) ($generated@@240 $generated@@574 ($generated@@249 $generated@@575))) (and (= ($generated@@287 ($generated@@345 ($generated@@84 $generated@@167 $generated@@4) $generated@@574)) $generated@@574) ($generated@@154 ($generated@@345 ($generated@@84 $generated@@167 $generated@@4) $generated@@574) ($generated@@249 $generated@@575))))
 :pattern ( ($generated@@240 $generated@@574 ($generated@@249 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@167) (= (type $generated@@577) $generated@@72)) ($generated@@240 $generated@@576 ($generated@@254 $generated@@577))) (and (= ($generated@@287 ($generated@@345 ($generated@@84 $generated@@167 $generated@@4) $generated@@576)) $generated@@576) ($generated@@154 ($generated@@345 ($generated@@84 $generated@@167 $generated@@4) $generated@@576) ($generated@@254 $generated@@577))))
 :pattern ( ($generated@@240 $generated@@576 ($generated@@254 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@167) (= (type $generated@@579) $generated@@72)) ($generated@@240 $generated@@578 ($generated@@172 $generated@@579))) (and (= ($generated@@287 ($generated@@345 ($generated@@84 $generated@@167 $generated@@2) $generated@@578)) $generated@@578) ($generated@@154 ($generated@@345 ($generated@@84 $generated@@167 $generated@@2) $generated@@578) ($generated@@172 $generated@@579))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@172 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@167) (= (type $generated@@581) $generated@@72)) ($generated@@240 $generated@@580 ($generated@@510 $generated@@581))) (and (= ($generated@@287 ($generated@@345 ($generated@@280 $generated@@167) $generated@@580)) $generated@@580) ($generated@@154 ($generated@@345 ($generated@@280 $generated@@167) $generated@@580) ($generated@@510 $generated@@581))))
 :pattern ( ($generated@@240 $generated@@580 ($generated@@510 $generated@@581)))
)))
(assert (= ($generated@@80 $generated@@144) $generated@@61))
(assert (= ($generated@@568 $generated@@144) $generated@@68))
(assert (= ($generated@@80 $generated@@233) $generated@@64))
(assert (= ($generated@@568 $generated@@233) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@65))
(assert (= ($generated@@568 $generated@@147) $generated@@70))
(assert (= ($generated@@80 $generated@@236) $generated@@66))
(assert (= ($generated@@568 $generated@@236) $generated@@71))
(assert (= ($generated@@80 $generated@@151) $generated@@67))
(assert (= ($generated@@568 $generated@@151) $generated@@71))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@84 $generated@@167 $generated@@2)) (= (type $generated@@583) $generated@@72)) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@582 ($generated@@172 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@167) (< 0 ($generated ($generated@@89 $generated@@582 $generated@@585)))) ($generated@@266 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@89 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@82 $generated@@582 ($generated@@172 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@72)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@154 $generated@@589 $generated@@147)  (or (= $generated@@589 $generated@@148) ($generated@@586 ($generated@@587 $generated@@589)))))
 :pattern ( ($generated@@154 $generated@@589 $generated@@147))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@85) (= ($generated@@154 $generated@@591 $generated@@151)  (or (= $generated@@591 $generated@@148) ($generated@@590 ($generated@@587 $generated@@591)))))
 :pattern ( ($generated@@154 $generated@@591 $generated@@151))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@158) (= (type $generated@@593) $generated@@72)) (= (type $generated@@594) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@265 $generated@@594) (and ($generated@@156 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@72) ($generated@@82 $generated@@592 ($generated@@157 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@82 $generated@@592 ($generated@@157 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@266 ($generated@@165 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@266 ($generated@@165 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@158) (= (type $generated@@597) $generated@@72)) (= (type $generated@@598) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@265 $generated@@598) (and ($generated@@156 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@72) ($generated@@82 $generated@@596 ($generated@@157 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@82 $generated@@596 ($generated@@157 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@266 ($generated@@166 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@266 ($generated@@166 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@167) (= (type $generated@@601) $generated@@167)) (= ($generated@@239 ($generated@@261 $generated@@600) ($generated@@261 $generated@@601)) ($generated@@261 ($generated@@239 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@600) ($generated@@261 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@602))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@603)) ($generated@@261 ($generated@@287 $generated@@603)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@281 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@280 $generated@@605)) (= ($generated@@279 $generated@@604) 0)) (= $generated@@604 ($generated@@278 $generated@@605))))
 :pattern ( ($generated@@279 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@84 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@300 ($generated@@90 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@300 $generated@@606) ($generated ($generated@@89 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@300 ($generated@@90 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@2)) ($generated@@82 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@3)) ($generated@@82 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@4)) ($generated@@82 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@468)) ($generated@@82 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@619) $generated@@167)) ($generated@@82 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@82 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@280 $generated@@167)) (= (type $generated@@621) $generated@@72)) (= ($generated@@154 $generated@@620 ($generated@@510 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@279 $generated@@620))) ($generated@@240 ($generated@@511 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@511 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@154 $generated@@620 ($generated@@510 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@280 $generated@@167)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@279 $generated@@624))) (< ($generated@@549 ($generated@@345 $generated@@158 ($generated@@511 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@549 ($generated@@345 $generated@@158 ($generated@@511 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@308 $generated@@167 $generated@@167)) (= (type $generated@@627) $generated@@72)) (= (type $generated@@628) $generated@@72)) ($generated@@154 $generated@@626 ($generated@@422 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@306 $generated@@626) ($generated@@249 $generated@@627)) ($generated@@154 ($generated@@365 $generated@@626) ($generated@@249 $generated@@628))) ($generated@@154 ($generated@@396 $generated@@626) ($generated@@249 ($generated@@157 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@422 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@326 $generated@@167 $generated@@167)) (= (type $generated@@630) $generated@@72)) (= (type $generated@@631) $generated@@72)) ($generated@@154 $generated@@629 ($generated@@430 $generated@@630 $generated@@631))) (and (and ($generated@@154 ($generated@@324 $generated@@629) ($generated@@254 $generated@@630)) ($generated@@154 ($generated@@376 $generated@@629) ($generated@@254 $generated@@631))) ($generated@@154 ($generated@@404 $generated@@629) ($generated@@254 ($generated@@157 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@154 $generated@@629 ($generated@@430 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@154 $generated@@632 $generated@@46))
 :pattern ( ($generated@@154 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@154 $generated@@633 $generated@@47))
 :pattern ( ($generated@@154 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@154 $generated@@634 $generated@@44))
 :pattern ( ($generated@@154 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@468) ($generated@@154 $generated@@635 $generated@@45))
 :pattern ( ($generated@@154 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@167) ($generated@@154 $generated@@636 $generated@@48))
 :pattern ( ($generated@@154 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 (T@U) Bool)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () Bool)
(declare-fun $generated@@649 () Bool)
(declare-fun $generated@@650 () Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () Bool)
(declare-fun $generated@@654 () Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Bool)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Bool)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@640) $generated@@85) (= (type $generated@@641) $generated@@85)) (= (type $generated@@642) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@643) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@645) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@646) $generated@@85)) (= (type $generated@@651) $generated@@85)) (= (type $generated@@652) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@655) $generated@@85)) (= (type $generated@@657) $generated@@85)) (= (type $generated@@659) ($generated@@179 $generated@@85 $generated@@4))) (= (type $generated@@663) $generated@@85)) (= (type $generated@@665) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@667  (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@154 ($generated@@8 (+ $generated@@637 1)) $generated@@144)) (=> ($generated@@154 ($generated@@8 (+ $generated@@637 1)) $generated@@144) (=> (= $generated@@638 (+ $generated@@637 1)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@639) (= (- 8 $generated@@638) $generated@@639))) (=> (or (<= 0 $generated@@639) (= (- 8 $generated@@638) $generated@@639)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- 8 $generated@@638) $generated@@639)))))))))
(let (($generated@@668  (=> (and (not ($generated@@358 $generated@@640)) (= (ControlFlow 0 9) 5)) $generated@@667)))
(let (($generated@@669  (=> (and ($generated@@358 $generated@@640) (= (ControlFlow 0 8) 5)) $generated@@667)))
(let (($generated@@670  (=> (and (and (and ($generated@@154 $generated@@641 $generated@@236) ($generated@@82 $generated@@641 $generated@@236 $generated@@642)) (and ($generated@@265 $generated@@643) ($generated@@644 $generated@@643))) (and (and ($generated@@154 $generated@@640 $generated@@236) ($generated@@82 $generated@@640 $generated@@236 $generated@@643)) (and (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@85) (=> (and (not (= $generated@@671 $generated@@148)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@645 $generated@@671) $generated@@60))) (= ($generated@@89 $generated@@643 $generated@@671) ($generated@@89 $generated@@645 $generated@@671))))
 :pattern ( ($generated@@89 $generated@@643 $generated@@671))
)) ($generated@@140 $generated@@645 $generated@@643)))) (and (=> (= (ControlFlow 0 10) (- 0 12)) true) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= $generated@@640 $generated@@148))) (=> (not (= $generated@@640 $generated@@148)) (=> ($generated@@82 $generated@@640 $generated@@151 $generated@@643) (=> (and ($generated@@359 $generated@@640) ($generated@@359 $generated@@640)) (and (=> (= (ControlFlow 0 10) 8) $generated@@669) (=> (= (ControlFlow 0 10) 9) $generated@@668))))))))))
(let (($generated@@672  (=> (not ($generated@@355 $generated@@646)) (and (=> (= (ControlFlow 0 14) (- 0 17)) true) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not (= $generated@@646 $generated@@148))) (=> ($generated@@82 $generated@@646 $generated@@147 $generated@@645) (and (=> (= (ControlFlow 0 14) (- 0 15)) (not ($generated@@355 $generated@@646))) (=> ($generated@@647 $generated@@646) (=> (and ($generated@@647 $generated@@646) (= (ControlFlow 0 14) 10)) $generated@@670)))))))))
(let (($generated@@673  (=> (and ($generated@@355 $generated@@646) (= (ControlFlow 0 13) 10)) $generated@@670)))
(let (($generated@@674  (=> (and (< $generated@@637 8) (= $generated@@639 (- 8 $generated@@637))) (and (=> (= (ControlFlow 0 18) (- 0 25)) (not (= ($generated@@259 4) 0))) (=> (not (= ($generated@@259 4) 0)) (and (=> (= (ControlFlow 0 18) (- 0 24)) (not (= ($generated@@259 2) 0))) (=> (not (= ($generated@@259 2) 0)) (=> (= $generated@@648 (= ($generated@@565 ($generated@@438 $generated@@637 ($generated@@259 4)) ($generated@@259 2)) ($generated@@259 0))) (and (=> (= (ControlFlow 0 18) (- 0 23)) (not (= ($generated@@259 2) 0))) (=> (not (= ($generated@@259 2) 0)) (and (=> (= (ControlFlow 0 18) (- 0 22)) (not (= ($generated@@259 2) 0))) (=> (not (= ($generated@@259 2) 0)) (=> (= $generated@@649 (= ($generated@@565 ($generated@@438 $generated@@637 ($generated@@259 2)) ($generated@@259 2)) ($generated@@259 0))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (not (= ($generated@@259 2) 0))) (=> (not (= ($generated@@259 2) 0)) (=> (= $generated@@650 (= ($generated@@565 $generated@@637 ($generated@@259 2)) ($generated@@259 0))) (=> (and (and (and ($generated@@154 $generated@@651 $generated@@233) ($generated@@82 $generated@@651 $generated@@233 $generated@@642)) (and ($generated@@265 $generated@@645) ($generated@@644 $generated@@645))) (and (and ($generated@@154 $generated@@646 $generated@@233) ($generated@@82 $generated@@646 $generated@@233 $generated@@645)) (and (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@85) (=> (and (not (= $generated@@675 $generated@@148)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@652 $generated@@675) $generated@@60))) (= ($generated@@89 $generated@@645 $generated@@675) ($generated@@89 $generated@@652 $generated@@675))))
 :pattern ( ($generated@@89 $generated@@645 $generated@@675))
)) ($generated@@140 $generated@@652 $generated@@645)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) true) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= $generated@@646 $generated@@148))) (=> (not (= $generated@@646 $generated@@148)) (=> ($generated@@82 $generated@@646 $generated@@147 $generated@@645) (=> (and ($generated@@356 $generated@@646) ($generated@@356 $generated@@646)) (and (=> (= (ControlFlow 0 18) 13) $generated@@673) (=> (= (ControlFlow 0 18) 14) $generated@@672))))))))))))))))))))))))
(let (($generated@@676 true))
(let (($generated@@677  (=> $generated@@653 (and (=> (= (ControlFlow 0 26) 3) $generated@@676) (=> (= (ControlFlow 0 26) 18) $generated@@674)))))
(let (($generated@@678 true))
(let (($generated@@679  (and (=> (= (ControlFlow 0 27) 2) $generated@@678) (=> (= (ControlFlow 0 27) 26) $generated@@677))))
(let (($generated@@680 true))
(let (($generated@@681  (=> (<= ($generated@@259 0) $generated@@637) (=> (and (and ($generated@@265 $generated@@652) ($generated@@644 $generated@@652)) (and (=> $generated@@654 (and ($generated@@154 $generated@@655 $generated@@236) ($generated@@82 $generated@@655 $generated@@236 $generated@@652))) (=> $generated@@656 (and ($generated@@154 $generated@@657 $generated@@233) ($generated@@82 $generated@@657 $generated@@233 $generated@@652))))) (=> (and (and (and (and (not false) (and (<= 0 $generated@@637) (< $generated@@637 9))) (= $generated@@658 8)) (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@85) (=> (and (not (= $generated@@682 $generated@@148)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@642 $generated@@682) $generated@@60))) (= ($generated@@89 $generated@@652 $generated@@682) ($generated@@89 $generated@@642 $generated@@682))))
 :pattern ( ($generated@@89 $generated@@652 $generated@@682))
))) (and (and ($generated@@140 $generated@@642 $generated@@652) (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (! (let (($generated@@685 ($generated@@75 (type $generated@@684))))
 (=> (and (and (= (type $generated@@683) $generated@@85) (= (type $generated@@684) ($generated@@74 $generated@@685))) (and (not (= $generated@@683 $generated@@148)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@642 $generated@@683) $generated@@60)))) (or (= ($generated@@91 ($generated@@89 $generated@@652 $generated@@683) $generated@@684) ($generated@@91 ($generated@@89 $generated@@642 $generated@@683) $generated@@684)) ($generated@@0 ($generated@@177 $generated@@659 $generated@@683 $generated@@684)))))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@652 $generated@@683) $generated@@684))
))) (and (<= (- 8 $generated@@637) $generated@@658) (=> (= (- 8 $generated@@637) $generated@@658) true)))) (and (=> (= (ControlFlow 0 28) 1) $generated@@680) (=> (= (ControlFlow 0 28) 27) $generated@@679)))))))
(let (($generated@@686  (=> (= $generated@@659 ($generated@@178 $generated@@148 $generated@@642 $generated@@60 false)) (and (=> (= (ControlFlow 0 29) (- 0 30)) ($generated@@154 ($generated@@8 ($generated@@259 0)) $generated@@144)) (=> ($generated@@154 ($generated@@8 ($generated@@259 0)) $generated@@144) (=> (= $generated@@660 ($generated@@259 0)) (=> (and (= $generated@@658 (- 8 $generated@@660)) (= (ControlFlow 0 29) 28)) $generated@@681)))))))
(let (($generated@@687  (=> (and ($generated@@265 $generated@@642) ($generated@@644 $generated@@642)) (=> (and (and (and (<= ($generated@@259 0) $generated@@661) true) (and (=> $generated@@662 (and ($generated@@154 $generated@@663 $generated@@233) ($generated@@82 $generated@@663 $generated@@233 $generated@@642))) true)) (and (and (=> $generated@@664 (and ($generated@@154 $generated@@665 $generated@@236) ($generated@@82 $generated@@665 $generated@@236 $generated@@642))) true) (and (= 6 $generated@@666) (= (ControlFlow 0 31) 29)))) $generated@@686))))
$generated@@687))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@264 (Int) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 () T@T)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U Int) T@U)
(declare-fun $generated@@366 (T@U) Bool)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@T) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Bool)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Bool)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@80 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@70 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@80) (= (type $generated@@216) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@217) ($generated@@69 $generated@@4))) (= (type $generated@@219) $generated@@80)) (= (type $generated@@220) ($generated@@69 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (= (type $generated@@222) $generated@@67))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@80) (= (type $generated@@224) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@223 $generated@@222 $generated@@224) ($generated@@77 $generated@@223 $generated@@139 $generated@@224)))
 :pattern ( ($generated@@77 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@147)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@156)) (= (type $generated@@232) $generated@@156)) (= ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@147) (= (type $generated@@234) $generated@@147)) (= ($generated@@153 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@153 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@156) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@156) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@245 $generated@@246) $generated@@246)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert  (and (and (and (forall (($generated@@255 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@255)) 17)) (forall (($generated@@256 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@256)) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@251 $generated@@257 $generated@@258)) ($generated@@253 $generated@@259)))
 :pattern ( ($generated@@251 $generated@@257 $generated@@258))
))) (forall (($generated@@260 T@U) ) (! (= (type ($generated@@252 $generated@@260)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@260))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) ($generated@@253 $generated@@156)) (= (type $generated@@262) $generated@@156)) (= (type $generated@@263) $generated@@67)) (and ($generated@@143 $generated@@261 ($generated@@252 $generated@@263)) ($generated@@226 $generated@@262 $generated@@263))) ($generated@@143 ($generated@@251 $generated@@261 $generated@@262) ($generated@@252 $generated@@263)))
 :pattern ( ($generated@@143 ($generated@@251 $generated@@261 $generated@@262) ($generated@@252 $generated@@263)))
)))
(assert  (and (= ($generated@@1 $generated@@266) 18) (forall (($generated@@267 Int) ) (! (= (type ($generated@@264 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@264 $generated@@267))
))))
(assert (forall (($generated@@268 Int) ) (!  (=> (and (<= 0 $generated@@268) (< $generated@@268 65536)) (= ($generated@@265 ($generated@@264 $generated@@268)) $generated@@268))
 :pattern ( ($generated@@264 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) $generated@@67)) (= (type $generated@@273) $generated@@156)) (= (type $generated@@274) $generated@@156)) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@269 $generated@@275)) (= ($generated@@77 ($generated@@225 $generated@@273 $generated@@274) ($generated@@146 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@273 $generated@@274) ($generated@@146 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@71)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@147) (= ($generated@@145 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@147) ($generated@@145 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@156) (= (type $generated@@281) $generated@@156)) (= $generated@@279 ($generated@@225 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@145 $generated@@279))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@282 $generated@@284)) ($generated@@253 $generated@@284))
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) 0)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (=> true (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@80) (or ($generated@@287 $generated@@289) (and (and (not (= $generated@@289 $generated@@140)) ($generated@@143 $generated@@289 $generated@@222)) (not ($generated@@288 $generated@@289))))) (<= ($generated@@245 0) ($generated@@286 $generated@@289)))
 :pattern ( ($generated@@286 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 (type $generated@@291)))
 (=> (= (type $generated@@290) ($generated@@253 $generated@@292)) (= ($generated@@283 ($generated@@251 $generated@@290 $generated@@291)) (+ 1 ($generated@@283 $generated@@290)))))
 :pattern ( ($generated@@251 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@266) (and (and (= ($generated@@264 ($generated@@265 $generated@@293)) $generated@@293) (<= 0 ($generated@@265 $generated@@293))) (< ($generated@@265 $generated@@293) 65536)))
 :pattern ( ($generated@@265 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@156)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@67) (= (type $generated@@298) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@77 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@301) $generated@@156)) (= (type $generated@@302) $generated@@67)) ($generated@@135 $generated@@299 $generated@@300)) ($generated@@270 $generated@@301 $generated@@302 $generated@@299)) ($generated@@270 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@135 $generated@@299 $generated@@300) ($generated@@270 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@303) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@304) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@306) $generated@@67)) ($generated@@135 $generated@@303 $generated@@304)) ($generated@@77 $generated@@305 $generated@@306 $generated@@303)) ($generated@@77 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@135 $generated@@303 $generated@@304) ($generated@@77 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@309 T@T) ) (! (= (type ($generated@@308 $generated@@309)) ($generated@@79 $generated@@309 $generated@@2))
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@82 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@79 $generated@@311 $generated@@2)) (and (= (= ($generated@@307 $generated@@310) 0) (= $generated@@310 ($generated@@308 $generated@@311))) (=> (not (= ($generated@@307 $generated@@310) 0)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) (< 0 ($generated ($generated@@84 $generated@@310 $generated@@312))))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@79 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@84 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@84 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 20)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@84 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@84 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@82 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@79 $generated@@350 $generated@@2)) (= ($generated@@162 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@84 $generated@@349 $generated@@351))) (<= ($generated ($generated@@84 $generated@@349 $generated@@351)) ($generated@@307 $generated@@349))))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@162 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@156) ($generated@@226 $generated@@355 $generated@@222)) (and (= ($generated@@294 ($generated@@352 $generated@@80 $generated@@355)) $generated@@355) ($generated@@143 ($generated@@352 $generated@@80 $generated@@355) $generated@@222)))
 :pattern ( ($generated@@226 $generated@@355 $generated@@222))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@156) ($generated@@226 $generated@@356 $generated@@139)) (and (= ($generated@@294 ($generated@@352 $generated@@80 $generated@@356)) $generated@@356) ($generated@@143 ($generated@@352 $generated@@80 $generated@@356) $generated@@139)))
 :pattern ( ($generated@@226 $generated@@356 $generated@@139))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@80) (= ($generated@@143 $generated@@357 $generated@@222)  (and ($generated@@143 $generated@@357 $generated@@139) (not (= $generated@@357 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@357 $generated@@222))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 Int) ) (! (let (($generated@@361 ($generated@@254 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@361))
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (=> (= (type $generated@@362) ($generated@@253 $generated@@365)) (and (=> (= $generated@@363 ($generated@@283 $generated@@362)) (= ($generated@@358 ($generated@@251 $generated@@362 $generated@@364) $generated@@363) $generated@@364)) (=> (not (= $generated@@363 ($generated@@283 $generated@@362))) (= ($generated@@358 ($generated@@251 $generated@@362 $generated@@364) $generated@@363) ($generated@@358 $generated@@362 $generated@@363))))))
 :pattern ( ($generated@@358 ($generated@@251 $generated@@362 $generated@@364) $generated@@363))
)))
(assert  (=> true (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@80) (or ($generated@@366 $generated@@367) (and (not (= $generated@@367 $generated@@140)) ($generated@@143 $generated@@367 $generated@@222)))) true)
 :pattern ( ($generated@@288 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@317 (type $generated@@368))))
(let (($generated@@370 ($generated@@316 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@315 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@314 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@313 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@317 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@79 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@317 (type $generated@@375))))
(let (($generated@@377 ($generated@@316 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@315 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@314 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@335 (type $generated@@379))))
(let (($generated@@381 ($generated@@334 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@333 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@332 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@331 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@335 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@79 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@335 (type $generated@@386))))
(let (($generated@@388 ($generated@@334 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@333 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@332 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@84 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@391) $generated@@67)) (= ($generated@@143 $generated@@390 ($generated@@161 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@390 $generated@@392)))) ($generated@@226 $generated@@392 $generated@@391))
 :pattern ( ($generated@@84 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@143 $generated@@390 ($generated@@161 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@394) $generated@@67)) (= (type $generated@@395) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@393 ($generated@@235 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@156) ($generated@@0 ($generated@@84 $generated@@393 $generated@@396))) ($generated@@270 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@84 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@77 $generated@@393 ($generated@@235 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@240 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@156) ($generated@@0 ($generated@@84 $generated@@397 $generated@@400))) ($generated@@270 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@84 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@240 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@84 ($generated@@308 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@84 ($generated@@308 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@317 (type $generated@@406))))
(let (($generated@@408 ($generated@@316 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@79 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@315 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@84 ($generated@@313 $generated@@409) ($generated@@154 ($generated@@352 $generated@@147 $generated@@410)))) (= ($generated@@84 ($generated@@404 $generated@@409) ($generated@@154 ($generated@@352 $generated@@147 $generated@@410))) ($generated@@155 ($generated@@352 $generated@@147 $generated@@410))))))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@335 (type $generated@@414))))
(let (($generated@@416 ($generated@@334 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@79 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@333 $generated@@156 $generated@@156)) (= (type $generated@@418) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@84 ($generated@@331 $generated@@417) ($generated@@154 ($generated@@352 $generated@@147 $generated@@418)))) (= ($generated@@84 ($generated@@412 $generated@@417) ($generated@@154 ($generated@@352 $generated@@147 $generated@@418))) ($generated@@155 ($generated@@352 $generated@@147 $generated@@418))))))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@316 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@315 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@84 ($generated@@313 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@84 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@419) $generated@@423))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@334 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@333 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@84 ($generated@@383 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@84 ($generated@@331 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@84 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@424) $generated@@428))
 :pattern ( ($generated@@84 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@315 $generated@@156 $generated@@156)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) $generated@@67)) (= (type $generated@@435) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@432) $generated@@436))) (and ($generated@@270 ($generated@@84 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@270 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@67)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@333 $generated@@156 $generated@@156)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) $generated@@67)) (= (type $generated@@443) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@440) $generated@@444))) (and ($generated@@270 ($generated@@84 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@270 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@84 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@77 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@445) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@446) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@447) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@445 $generated@@447))) (and ($generated@@135 $generated@@445 $generated@@446) ($generated@@135 $generated@@446 $generated@@447))) ($generated@@135 $generated@@445 $generated@@447))
 :pattern ( ($generated@@135 $generated@@445 $generated@@446) ($generated@@135 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@T) ) (! (= (type ($generated@@448 $generated@@449)) ($generated@@79 $generated@@449 $generated@@4))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@335 (type $generated@@450))))
(let (($generated@@452 ($generated@@334 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@333 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@332 $generated@@452 $generated@@451)) (= ($generated@@331 $generated@@450) ($generated@@448 $generated@@452))))))
 :pattern ( ($generated@@331 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@335 (type $generated@@453))))
(let (($generated@@455 ($generated@@334 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@333 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@332 $generated@@455 $generated@@454)) (= ($generated@@383 $generated@@453) ($generated@@448 $generated@@454))))))
 :pattern ( ($generated@@383 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@335 (type $generated@@456))))
(let (($generated@@458 ($generated@@334 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@333 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@332 $generated@@458 $generated@@457)) (= ($generated@@411 $generated@@456) ($generated@@448 $generated@@156))))))
 :pattern ( ($generated@@411 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@317 (type $generated@@459))))
(let (($generated@@461 ($generated@@316 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@315 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@314 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@156) (= (type $generated@@463) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@403 $generated@@459) ($generated@@294 ($generated@@225 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@403 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@335 (type $generated@@464))))
(let (($generated@@466 ($generated@@334 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@333 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@332 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@156) (= (type $generated@@468) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@411 $generated@@464) ($generated@@294 ($generated@@225 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@411 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) ($generated@@226 $generated@@469 $generated@@46)) (and (= ($generated@@294 ($generated@@352 $generated@@2 $generated@@469)) $generated@@469) ($generated@@143 ($generated@@352 $generated@@2 $generated@@469) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@469 $generated@@46))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@156) ($generated@@226 $generated@@470 $generated@@47)) (and (= ($generated@@294 ($generated@@352 $generated@@3 $generated@@470)) $generated@@470) ($generated@@143 ($generated@@352 $generated@@3 $generated@@470) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@470 $generated@@47))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@156) ($generated@@226 $generated@@471 $generated@@44)) (and (= ($generated@@294 ($generated@@352 $generated@@4 $generated@@471)) $generated@@471) ($generated@@143 ($generated@@352 $generated@@4 $generated@@471) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@471 $generated@@44))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@156) ($generated@@226 $generated@@472 $generated@@45)) (and (= ($generated@@294 ($generated@@352 $generated@@266 $generated@@472)) $generated@@472) ($generated@@143 ($generated@@352 $generated@@266 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@226 ($generated@@294 $generated@@473) $generated@@474) ($generated@@143 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@226 ($generated@@294 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@82 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@79 $generated@@476 $generated@@2)) (<= 0 ($generated@@307 $generated@@475))))
 :pattern ( ($generated@@307 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@254 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@253 $generated@@478)) (<= 0 ($generated@@283 $generated@@477))))
 :pattern ( ($generated@@283 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@429 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@429 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@75 ($generated@@429 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@437 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@437 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@67) (= (type $generated@@496) $generated@@67)) (= ($generated@@493 ($generated@@437 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@437 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@75 ($generated@@437 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@156) (= (type $generated@@500) $generated@@156)) (= ($generated@@276 ($generated@@225 $generated@@499 $generated@@500)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@146 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@146 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@67) (= (type $generated@@508) $generated@@67)) (= ($generated@@505 ($generated@@146 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@146 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@156) (= (type $generated@@510) $generated@@156)) (= ($generated@@154 ($generated@@225 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@225 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@156) (= (type $generated@@512) $generated@@156)) (= ($generated@@155 ($generated@@225 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@225 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@253 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@513 ($generated@@252 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@283 $generated@@513))) ($generated@@270 ($generated@@358 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@358 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@77 $generated@@513 ($generated@@252 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@78 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@78 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@235 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@235 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@240 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@240 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@161 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@161 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@252 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@252 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@75 ($generated@@252 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@252 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
(= ($generated@@352 $generated@@536 ($generated@@294 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@294 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@315 $generated@@156 $generated@@156)) (= (type $generated@@538) $generated@@67)) (= (type $generated@@539) $generated@@67)) (= ($generated@@143 $generated@@537 ($generated@@429 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@537) $generated@@540))) (and ($generated@@226 ($generated@@84 ($generated@@404 $generated@@537) $generated@@540) $generated@@539) ($generated@@226 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@537) $generated@@540))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@143 $generated@@537 ($generated@@429 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@333 $generated@@156 $generated@@156)) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) $generated@@67)) (= ($generated@@143 $generated@@541 ($generated@@437 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@541) $generated@@544))) (and ($generated@@226 ($generated@@84 ($generated@@412 $generated@@541) $generated@@544) $generated@@543) ($generated@@226 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@84 ($generated@@412 $generated@@541) $generated@@544))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@143 $generated@@541 ($generated@@437 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@156) (= (type $generated@@548) $generated@@156)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@225 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@156) (= (type $generated@@550) $generated@@156)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@225 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@156) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) $generated@@67)) ($generated@@226 $generated@@551 ($generated@@429 $generated@@552 $generated@@553))) (and (= ($generated@@294 ($generated@@352 ($generated@@315 $generated@@156 $generated@@156) $generated@@551)) $generated@@551) ($generated@@143 ($generated@@352 ($generated@@315 $generated@@156 $generated@@156) $generated@@551) ($generated@@429 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@551 ($generated@@429 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@156) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) $generated@@67)) ($generated@@226 $generated@@554 ($generated@@437 $generated@@555 $generated@@556))) (and (= ($generated@@294 ($generated@@352 ($generated@@333 $generated@@156 $generated@@156) $generated@@554)) $generated@@554) ($generated@@143 ($generated@@352 ($generated@@333 $generated@@156 $generated@@156) $generated@@554) ($generated@@437 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@437 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@67) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) $generated@@156)) ($generated@@226 $generated@@559 ($generated@@146 $generated@@557 $generated@@558))) (and (= ($generated@@294 ($generated@@352 $generated@@147 $generated@@559)) $generated@@559) ($generated@@143 ($generated@@352 $generated@@147 $generated@@559) ($generated@@146 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@226 $generated@@559 ($generated@@146 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@560 $generated@@562)) $generated@@80)
 :pattern ( ($generated@@560 $generated@@562))
)))
(assert  (=> true (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@80) (or ($generated@@561 $generated@@563) (and (and (not (= $generated@@563 $generated@@140)) ($generated@@143 $generated@@563 $generated@@222)) ($generated@@288 $generated@@563)))) ($generated@@143 ($generated@@560 $generated@@563) $generated@@222))
 :pattern ( ($generated@@560 $generated@@563))
))))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@84 ($generated@@448 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@84 ($generated@@448 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@72)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@67) (= (type $generated@@569) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@568 $generated@@569)) $generated@@62) (= ($generated@@566 ($generated@@146 $generated@@568 $generated@@569)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@568 $generated@@569))
)))
(assert  (and (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@254 (type $generated@@572))))
(= (type ($generated@@570 $generated@@572)) ($generated@@253 $generated@@573)))
 :pattern ( ($generated@@570 $generated@@572))
)) (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@254 (type $generated@@574))))
(= (type ($generated@@571 $generated@@574)) $generated@@575))
 :pattern ( ($generated@@571 $generated@@574))
))))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
 (=> (= (type $generated@@576) ($generated@@253 $generated@@578)) (and (= ($generated@@570 ($generated@@251 $generated@@576 $generated@@577)) $generated@@576) (= ($generated@@571 ($generated@@251 $generated@@576 $generated@@577)) $generated@@577))))
 :pattern ( ($generated@@251 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@147) (= ($generated@@545 ($generated@@294 $generated@@579)) ($generated@@546 $generated@@579)))
 :pattern ( ($generated@@545 ($generated@@294 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@156) ($generated@@226 $generated@@580 ($generated@@78 0))) (and (= ($generated@@294 ($generated@@352 $generated@@2 $generated@@580)) $generated@@580) ($generated@@143 ($generated@@352 ($generated@@79 $generated@@156 $generated@@4) $generated@@580) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@580 ($generated@@78 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@156) (= (type $generated@@582) $generated@@67)) ($generated@@226 $generated@@581 ($generated@@235 $generated@@582))) (and (= ($generated@@294 ($generated@@352 ($generated@@79 $generated@@156 $generated@@4) $generated@@581)) $generated@@581) ($generated@@143 ($generated@@352 ($generated@@79 $generated@@156 $generated@@4) $generated@@581) ($generated@@235 $generated@@582))))
 :pattern ( ($generated@@226 $generated@@581 ($generated@@235 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@156) (= (type $generated@@584) $generated@@67)) ($generated@@226 $generated@@583 ($generated@@240 $generated@@584))) (and (= ($generated@@294 ($generated@@352 ($generated@@79 $generated@@156 $generated@@4) $generated@@583)) $generated@@583) ($generated@@143 ($generated@@352 ($generated@@79 $generated@@156 $generated@@4) $generated@@583) ($generated@@240 $generated@@584))))
 :pattern ( ($generated@@226 $generated@@583 ($generated@@240 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@156) (= (type $generated@@586) $generated@@67)) ($generated@@226 $generated@@585 ($generated@@161 $generated@@586))) (and (= ($generated@@294 ($generated@@352 ($generated@@79 $generated@@156 $generated@@2) $generated@@585)) $generated@@585) ($generated@@143 ($generated@@352 ($generated@@79 $generated@@156 $generated@@2) $generated@@585) ($generated@@161 $generated@@586))))
 :pattern ( ($generated@@226 $generated@@585 ($generated@@161 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@156) (= (type $generated@@588) $generated@@67)) ($generated@@226 $generated@@587 ($generated@@252 $generated@@588))) (and (= ($generated@@294 ($generated@@352 ($generated@@253 $generated@@156) $generated@@587)) $generated@@587) ($generated@@143 ($generated@@352 ($generated@@253 $generated@@156) $generated@@587) ($generated@@252 $generated@@588))))
 :pattern ( ($generated@@226 $generated@@587 ($generated@@252 $generated@@588)))
)))
(assert (= ($generated@@75 $generated@@222) $generated@@63))
(assert (= ($generated@@566 $generated@@222) $generated@@66))
(assert (= ($generated@@75 $generated@@139) $generated@@64))
(assert (= ($generated@@566 $generated@@139) $generated@@66))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@590) $generated@@67)) (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@589 ($generated@@161 $generated@@590) $generated@@591) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@589 $generated@@592)))) ($generated@@270 $generated@@592 $generated@@590 $generated@@591))
 :pattern ( ($generated@@84 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@77 $generated@@589 ($generated@@161 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@67)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@80) (= ($generated@@143 $generated@@596 $generated@@139)  (or (= $generated@@596 $generated@@140) ($generated@@593 ($generated@@594 $generated@@596)))))
 :pattern ( ($generated@@143 $generated@@596 $generated@@139))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@147) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@269 $generated@@599) (and ($generated@@145 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@67) ($generated@@77 $generated@@597 ($generated@@146 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@77 $generated@@597 ($generated@@146 $generated@@598 $generated@@600) $generated@@599))
))))) ($generated@@270 ($generated@@154 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@270 ($generated@@154 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@147) (= (type $generated@@602) $generated@@67)) (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@269 $generated@@603) (and ($generated@@145 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@67) ($generated@@77 $generated@@601 ($generated@@146 $generated@@604 $generated@@602) $generated@@603))
 :pattern ( ($generated@@77 $generated@@601 ($generated@@146 $generated@@604 $generated@@602) $generated@@603))
))))) ($generated@@270 ($generated@@155 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@270 ($generated@@155 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@156) (= (type $generated@@606) $generated@@156)) (= ($generated@@225 ($generated@@247 $generated@@605) ($generated@@247 $generated@@606)) ($generated@@247 ($generated@@225 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@225 ($generated@@247 $generated@@605) ($generated@@247 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@245 $generated@@607))) ($generated@@247 ($generated@@294 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@245 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@294 ($generated@@247 $generated@@608)) ($generated@@247 ($generated@@294 $generated@@608)))
 :pattern ( ($generated@@294 ($generated@@247 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@254 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@253 $generated@@610)) (= ($generated@@283 $generated@@609) 0)) (= $generated@@609 ($generated@@282 $generated@@610))))
 :pattern ( ($generated@@283 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@79 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@307 ($generated@@85 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@307 $generated@@611) ($generated ($generated@@84 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@307 ($generated@@85 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@616) $generated@@2)) ($generated@@77 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@77 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@618) $generated@@3)) ($generated@@77 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@77 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@620) $generated@@4)) ($generated@@77 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@77 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@622) $generated@@266)) ($generated@@77 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@77 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@624) $generated@@156)) ($generated@@77 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@77 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@253 $generated@@156)) (= (type $generated@@626) $generated@@67)) (= ($generated@@143 $generated@@625 ($generated@@252 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@283 $generated@@625))) ($generated@@226 ($generated@@358 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@358 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@143 $generated@@625 ($generated@@252 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@253 $generated@@156)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@283 $generated@@629))) (< ($generated@@546 ($generated@@352 $generated@@147 ($generated@@358 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@546 ($generated@@352 $generated@@147 ($generated@@358 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@315 $generated@@156 $generated@@156)) (= (type $generated@@632) $generated@@67)) (= (type $generated@@633) $generated@@67)) ($generated@@143 $generated@@631 ($generated@@429 $generated@@632 $generated@@633))) (and (and ($generated@@143 ($generated@@313 $generated@@631) ($generated@@235 $generated@@632)) ($generated@@143 ($generated@@372 $generated@@631) ($generated@@235 $generated@@633))) ($generated@@143 ($generated@@403 $generated@@631) ($generated@@235 ($generated@@146 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@143 $generated@@631 ($generated@@429 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@333 $generated@@156 $generated@@156)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@143 $generated@@634 ($generated@@437 $generated@@635 $generated@@636))) (and (and ($generated@@143 ($generated@@331 $generated@@634) ($generated@@240 $generated@@635)) ($generated@@143 ($generated@@383 $generated@@634) ($generated@@240 $generated@@636))) ($generated@@143 ($generated@@411 $generated@@634) ($generated@@240 ($generated@@146 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@143 $generated@@634 ($generated@@437 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@143 $generated@@637 $generated@@46))
 :pattern ( ($generated@@143 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@143 $generated@@638 $generated@@47))
 :pattern ( ($generated@@143 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@143 $generated@@639 $generated@@44))
 :pattern ( ($generated@@143 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@266) ($generated@@143 $generated@@640 $generated@@45))
 :pattern ( ($generated@@143 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@156) ($generated@@143 $generated@@641 $generated@@48))
 :pattern ( ($generated@@143 $generated@@641 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Bool)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Bool)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Bool)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Bool)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Bool)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@680) $generated@@80) (= (type $generated@@653) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@685) $generated@@80)) (= (type $generated@@672) $generated@@80)) (= (type $generated@@673) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@679) $generated@@80)) (= (type $generated@@668) $generated@@80)) (= (type $generated@@657) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@671) $generated@@80)) (= (type $generated@@656) $generated@@80)) (= (type $generated@@662) $generated@@80)) (= (type $generated@@646) $generated@@80)) (= (type $generated@@647) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@655) $generated@@80)) (= (type $generated@@642) $generated@@80)) (= (type $generated@@643) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@645) $generated@@80)) (= (type $generated@@650) $generated@@80)) (= (type $generated@@651) ($generated@@253 $generated@@156))) (= (type $generated@@652) $generated@@80)) (= (type $generated@@660) $generated@@80)) (= (type $generated@@661) $generated@@80)) (= (type $generated@@663) $generated@@80)) (= (type $generated@@664) $generated@@80)) (= (type $generated@@666) $generated@@80)) (= (type $generated@@667) $generated@@80)) (= (type $generated@@670) $generated@@80)) (= (type $generated@@676) $generated@@80)) (= (type $generated@@677) ($generated@@253 $generated@@156))) (= (type $generated@@678) $generated@@80)) (= (type $generated@@683) $generated@@80)) (= (type $generated@@684) $generated@@80)) (= (type $generated@@686) $generated@@80)) (= (type $generated@@687) $generated@@80)) (= (type $generated@@688) ($generated@@168 $generated@@80 $generated@@4))) (= (type $generated@@689) $generated@@80)) (= (type $generated@@692) $generated@@80)) (= (type $generated@@694) $generated@@80)) (= (type $generated@@697) $generated@@80)) (= (type $generated@@698) $generated@@80)) (= (type $generated@@701) $generated@@80)) (= (type $generated@@704) $generated@@80)) (= (type $generated@@705) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 69) (let (($generated@@708  (=> (not ($generated@@288 $generated@@642)) (and (=> (= (ControlFlow 0 30) (- 0 33)) true) (and (=> (= (ControlFlow 0 30) (- 0 32)) (not (= $generated@@642 $generated@@140))) (=> (not (= $generated@@642 $generated@@140)) (=> ($generated@@77 $generated@@642 $generated@@139 $generated@@643) (and (=> (= (ControlFlow 0 30) (- 0 31)) (not ($generated@@288 $generated@@642))) (=> (not ($generated@@288 $generated@@642)) (=> (and (and ($generated@@287 $generated@@642) ($generated@@287 $generated@@642)) (and (= $generated@@644 ($generated@@286 $generated@@642)) (= (ControlFlow 0 30) (- 0 29)))) true))))))))))
(let (($generated@@709  (=> ($generated@@288 $generated@@642) (and (=> (= (ControlFlow 0 25) (- 0 28)) true) (and (=> (= (ControlFlow 0 25) (- 0 27)) (not (= $generated@@642 $generated@@140))) (=> (not (= $generated@@642 $generated@@140)) (=> ($generated@@77 $generated@@642 $generated@@139 $generated@@643) (and (=> (= (ControlFlow 0 25) (- 0 26)) ($generated@@288 $generated@@642)) (=> ($generated@@288 $generated@@642) (=> (and (and ($generated@@561 $generated@@642) ($generated@@561 $generated@@642)) (and (= $generated@@645 ($generated@@560 $generated@@642)) (= (ControlFlow 0 25) (- 0 24)))) true))))))))))
(let (($generated@@710  (=> (not ($generated@@288 $generated@@646)) (and (=> (= (ControlFlow 0 34) (- 0 39)) true) (and (=> (= (ControlFlow 0 34) (- 0 38)) (not (= $generated@@646 $generated@@140))) (=> (not (= $generated@@646 $generated@@140)) (=> ($generated@@77 $generated@@646 $generated@@139 $generated@@647) (and (=> (= (ControlFlow 0 34) (- 0 37)) (not ($generated@@288 $generated@@646))) (=> (and (not ($generated@@288 $generated@@646)) ($generated@@287 $generated@@646)) (=> (and (and ($generated@@287 $generated@@646) (= $generated@@648 ($generated@@286 $generated@@646))) (and (=> $generated@@649 (and ($generated@@143 $generated@@650 $generated@@222) ($generated@@77 $generated@@650 $generated@@222 $generated@@647))) (= $generated@@651 ($generated@@247 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@282 $generated@@156) ($generated@@294 ($generated@@264 115))) ($generated@@294 ($generated@@264 111))) ($generated@@294 ($generated@@264 114))) ($generated@@294 ($generated@@264 114))) ($generated@@294 ($generated@@264 121))) ($generated@@294 ($generated@@264 44))) ($generated@@294 ($generated@@264 32))) ($generated@@294 ($generated@@264 98))) ($generated@@294 ($generated@@264 97))) ($generated@@294 ($generated@@264 100))) ($generated@@294 ($generated@@264 32))) ($generated@@294 ($generated@@264 108))) ($generated@@294 ($generated@@264 117))) ($generated@@294 ($generated@@264 99))) ($generated@@294 ($generated@@264 107))))))) (=> (and (and (and ($generated@@143 $generated@@652 $generated@@222) ($generated@@77 $generated@@652 $generated@@222 $generated@@653)) (and ($generated@@269 $generated@@643) ($generated@@654 $generated@@643))) (and (and ($generated@@143 $generated@@642 $generated@@222) ($generated@@77 $generated@@642 $generated@@222 $generated@@643)) (and (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@80) (=> (and (not (= $generated@@711 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@647 $generated@@711) $generated@@60))) (= ($generated@@84 $generated@@643 $generated@@711) ($generated@@84 $generated@@647 $generated@@711))))
 :pattern ( ($generated@@84 $generated@@643 $generated@@711))
)) ($generated@@135 $generated@@647 $generated@@643)))) (and (=> (= (ControlFlow 0 34) (- 0 36)) true) (and (=> (= (ControlFlow 0 34) (- 0 35)) (not (= $generated@@642 $generated@@140))) (=> (not (= $generated@@642 $generated@@140)) (=> ($generated@@77 $generated@@642 $generated@@139 $generated@@643) (=> (and ($generated@@366 $generated@@642) ($generated@@366 $generated@@642)) (and (=> (= (ControlFlow 0 34) 25) $generated@@709) (=> (= (ControlFlow 0 34) 30) $generated@@708))))))))))))))))))
(let (($generated@@712  (=> ($generated@@288 $generated@@646) (and (=> (= (ControlFlow 0 20) (- 0 23)) true) (and (=> (= (ControlFlow 0 20) (- 0 22)) (not (= $generated@@646 $generated@@140))) (=> (not (= $generated@@646 $generated@@140)) (=> ($generated@@77 $generated@@646 $generated@@139 $generated@@647) (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@288 $generated@@646)) (=> ($generated@@288 $generated@@646) (=> (and (and ($generated@@561 $generated@@646) ($generated@@561 $generated@@646)) (and (= $generated@@655 ($generated@@560 $generated@@646)) (= (ControlFlow 0 20) (- 0 19)))) true))))))))))
(let (($generated@@713  (=> (not ($generated@@288 $generated@@656)) (and (=> (= (ControlFlow 0 40) (- 0 44)) (not (= $generated@@656 $generated@@140))) (=> (not (= $generated@@656 $generated@@140)) (=> ($generated@@77 $generated@@656 $generated@@139 $generated@@657) (and (=> (= (ControlFlow 0 40) (- 0 43)) (not ($generated@@288 $generated@@656))) (=> (not ($generated@@288 $generated@@656)) (=> (and (and ($generated@@287 $generated@@656) ($generated@@287 $generated@@656)) (and (= $generated@@658 ($generated@@286 $generated@@656)) (=> $generated@@659 (and ($generated@@143 $generated@@660 $generated@@222) ($generated@@77 $generated@@660 $generated@@222 $generated@@657))))) (=> (and (and (and ($generated@@143 $generated@@661 $generated@@222) ($generated@@77 $generated@@661 $generated@@222 $generated@@653)) (and ($generated@@269 $generated@@647) ($generated@@654 $generated@@647))) (and (and ($generated@@143 $generated@@646 $generated@@222) ($generated@@77 $generated@@646 $generated@@222 $generated@@647)) (and (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@80) (=> (and (not (= $generated@@714 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@657 $generated@@714) $generated@@60))) (= ($generated@@84 $generated@@647 $generated@@714) ($generated@@84 $generated@@657 $generated@@714))))
 :pattern ( ($generated@@84 $generated@@647 $generated@@714))
)) ($generated@@135 $generated@@657 $generated@@647)))) (and (=> (= (ControlFlow 0 40) (- 0 42)) true) (and (=> (= (ControlFlow 0 40) (- 0 41)) (not (= $generated@@646 $generated@@140))) (=> (not (= $generated@@646 $generated@@140)) (=> ($generated@@77 $generated@@646 $generated@@139 $generated@@647) (=> (and ($generated@@366 $generated@@646) ($generated@@366 $generated@@646)) (and (=> (= (ControlFlow 0 40) 20) $generated@@712) (=> (= (ControlFlow 0 40) 34) $generated@@710)))))))))))))))))
(let (($generated@@715  (=> ($generated@@288 $generated@@656) (and (=> (= (ControlFlow 0 16) (- 0 18)) (not (= $generated@@656 $generated@@140))) (=> (not (= $generated@@656 $generated@@140)) (=> ($generated@@77 $generated@@656 $generated@@139 $generated@@657) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@288 $generated@@656)) (=> ($generated@@288 $generated@@656) (=> (and (and ($generated@@561 $generated@@656) ($generated@@561 $generated@@656)) (and (= $generated@@662 ($generated@@560 $generated@@656)) (= (ControlFlow 0 16) (- 0 15)))) true)))))))))
(let (($generated@@716  (=> (and (= $generated@@663 $generated@@664) (= $generated@@656 (let (($generated@@717 (ite $generated@@665 $generated@@666 $generated@@667)))
$generated@@717))) (and (=> (= (ControlFlow 0 45) (- 0 46)) (not (= $generated@@656 $generated@@140))) (=> (not (= $generated@@656 $generated@@140)) (=> ($generated@@77 $generated@@656 $generated@@139 $generated@@657) (=> (and ($generated@@366 $generated@@656) ($generated@@366 $generated@@656)) (and (=> (= (ControlFlow 0 45) 16) $generated@@715) (=> (= (ControlFlow 0 45) 40) $generated@@713)))))))))
(let (($generated@@718  (=> (and (and (not $generated@@665) (= $generated@@664 $generated@@667)) (and ($generated@@143 $generated@@664 $generated@@139) (= (ControlFlow 0 48) 45))) $generated@@716)))
(let (($generated@@719  (=> (and (and $generated@@665 (= $generated@@664 $generated@@666)) (and ($generated@@143 $generated@@664 $generated@@139) (= (ControlFlow 0 47) 45))) $generated@@716)))
(let (($generated@@720  (=> (not ($generated@@288 $generated@@668)) (and (=> (= (ControlFlow 0 49) (- 0 52)) true) (and (=> (= (ControlFlow 0 49) (- 0 51)) (not (= $generated@@668 $generated@@140))) (=> (not (= $generated@@668 $generated@@140)) (=> ($generated@@77 $generated@@668 $generated@@139 $generated@@657) (and (=> (= (ControlFlow 0 49) (- 0 50)) (not ($generated@@288 $generated@@668))) (=> (and (and (and (not ($generated@@288 $generated@@668)) ($generated@@287 $generated@@668)) (and ($generated@@287 $generated@@668) (= $generated@@669 ($generated@@286 $generated@@668)))) (and (and ($generated@@143 $generated@@670 $generated@@139) ($generated@@77 $generated@@670 $generated@@139 $generated@@657)) (and ($generated@@143 $generated@@663 $generated@@139) ($generated@@77 $generated@@663 $generated@@139 $generated@@657)))) (and (=> (= (ControlFlow 0 49) 47) $generated@@719) (=> (= (ControlFlow 0 49) 48) $generated@@718)))))))))))
(let (($generated@@721  (=> ($generated@@288 $generated@@668) (and (=> (= (ControlFlow 0 11) (- 0 14)) true) (and (=> (= (ControlFlow 0 11) (- 0 13)) (not (= $generated@@668 $generated@@140))) (=> (not (= $generated@@668 $generated@@140)) (=> ($generated@@77 $generated@@668 $generated@@139 $generated@@657) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@288 $generated@@668)) (=> ($generated@@288 $generated@@668) (=> (and (and ($generated@@561 $generated@@668) ($generated@@561 $generated@@668)) (and (= $generated@@671 ($generated@@560 $generated@@668)) (= (ControlFlow 0 11) (- 0 10)))) true))))))))))
(let (($generated@@722  (=> (not ($generated@@288 $generated@@672)) (and (=> (= (ControlFlow 0 53) (- 0 58)) true) (and (=> (= (ControlFlow 0 53) (- 0 57)) (not (= $generated@@672 $generated@@140))) (=> (not (= $generated@@672 $generated@@140)) (=> ($generated@@77 $generated@@672 $generated@@139 $generated@@673) (and (=> (= (ControlFlow 0 53) (- 0 56)) (not ($generated@@288 $generated@@672))) (=> (and (not ($generated@@288 $generated@@672)) ($generated@@287 $generated@@672)) (=> (and (and ($generated@@287 $generated@@672) (= $generated@@674 ($generated@@286 $generated@@672))) (and (=> $generated@@675 (and ($generated@@143 $generated@@676 $generated@@222) ($generated@@77 $generated@@676 $generated@@222 $generated@@673))) (= $generated@@677 ($generated@@247 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@251 ($generated@@282 $generated@@156) ($generated@@294 ($generated@@264 115))) ($generated@@294 ($generated@@264 111))) ($generated@@294 ($generated@@264 114))) ($generated@@294 ($generated@@264 114))) ($generated@@294 ($generated@@264 121))) ($generated@@294 ($generated@@264 44))) ($generated@@294 ($generated@@264 32))) ($generated@@294 ($generated@@264 98))) ($generated@@294 ($generated@@264 97))) ($generated@@294 ($generated@@264 100))) ($generated@@294 ($generated@@264 32))) ($generated@@294 ($generated@@264 108))) ($generated@@294 ($generated@@264 117))) ($generated@@294 ($generated@@264 99))) ($generated@@294 ($generated@@264 107))))))) (=> (and (and (and ($generated@@143 $generated@@678 $generated@@222) ($generated@@77 $generated@@678 $generated@@222 $generated@@653)) (and ($generated@@269 $generated@@657) ($generated@@654 $generated@@657))) (and (and ($generated@@143 $generated@@668 $generated@@222) ($generated@@77 $generated@@668 $generated@@222 $generated@@657)) (and (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@80) (=> (and (not (= $generated@@723 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@673 $generated@@723) $generated@@60))) (= ($generated@@84 $generated@@657 $generated@@723) ($generated@@84 $generated@@673 $generated@@723))))
 :pattern ( ($generated@@84 $generated@@657 $generated@@723))
)) ($generated@@135 $generated@@673 $generated@@657)))) (and (=> (= (ControlFlow 0 53) (- 0 55)) true) (and (=> (= (ControlFlow 0 53) (- 0 54)) (not (= $generated@@668 $generated@@140))) (=> (not (= $generated@@668 $generated@@140)) (=> ($generated@@77 $generated@@668 $generated@@139 $generated@@657) (=> (and ($generated@@366 $generated@@668) ($generated@@366 $generated@@668)) (and (=> (= (ControlFlow 0 53) 11) $generated@@721) (=> (= (ControlFlow 0 53) 49) $generated@@720))))))))))))))))))
(let (($generated@@724  (=> ($generated@@288 $generated@@672) (and (=> (= (ControlFlow 0 6) (- 0 9)) true) (and (=> (= (ControlFlow 0 6) (- 0 8)) (not (= $generated@@672 $generated@@140))) (=> (not (= $generated@@672 $generated@@140)) (=> ($generated@@77 $generated@@672 $generated@@139 $generated@@673) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@288 $generated@@672)) (=> ($generated@@288 $generated@@672) (=> (and (and ($generated@@561 $generated@@672) ($generated@@561 $generated@@672)) (and (= $generated@@679 ($generated@@560 $generated@@672)) (= (ControlFlow 0 6) (- 0 5)))) true))))))))))
(let (($generated@@725  (=> (not ($generated@@288 $generated@@680)) (and (=> (= (ControlFlow 0 59) (- 0 63)) (not (= $generated@@680 $generated@@140))) (=> (not (= $generated@@680 $generated@@140)) (=> ($generated@@77 $generated@@680 $generated@@139 $generated@@653) (and (=> (= (ControlFlow 0 59) (- 0 62)) (not ($generated@@288 $generated@@680))) (=> (not ($generated@@288 $generated@@680)) (=> (and (and ($generated@@287 $generated@@680) ($generated@@287 $generated@@680)) (and (= $generated@@681 ($generated@@286 $generated@@680)) (=> $generated@@682 (and ($generated@@143 $generated@@683 $generated@@222) ($generated@@77 $generated@@683 $generated@@222 $generated@@653))))) (=> (and (and (and ($generated@@143 $generated@@684 $generated@@222) ($generated@@77 $generated@@684 $generated@@222 $generated@@653)) (and ($generated@@269 $generated@@673) ($generated@@654 $generated@@673))) (and (and ($generated@@143 $generated@@672 $generated@@222) ($generated@@77 $generated@@672 $generated@@222 $generated@@673)) (and (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@80) (=> (and (not (= $generated@@726 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@653 $generated@@726) $generated@@60))) (= ($generated@@84 $generated@@673 $generated@@726) ($generated@@84 $generated@@653 $generated@@726))))
 :pattern ( ($generated@@84 $generated@@673 $generated@@726))
)) ($generated@@135 $generated@@653 $generated@@673)))) (and (=> (= (ControlFlow 0 59) (- 0 61)) true) (and (=> (= (ControlFlow 0 59) (- 0 60)) (not (= $generated@@672 $generated@@140))) (=> (not (= $generated@@672 $generated@@140)) (=> ($generated@@77 $generated@@672 $generated@@139 $generated@@673) (=> (and ($generated@@366 $generated@@672) ($generated@@366 $generated@@672)) (and (=> (= (ControlFlow 0 59) 6) $generated@@724) (=> (= (ControlFlow 0 59) 53) $generated@@722)))))))))))))))))
(let (($generated@@727  (=> ($generated@@288 $generated@@680) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@680 $generated@@140))) (=> (not (= $generated@@680 $generated@@140)) (=> ($generated@@77 $generated@@680 $generated@@139 $generated@@653) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@288 $generated@@680)) (=> ($generated@@288 $generated@@680) (=> (and (and ($generated@@561 $generated@@680) ($generated@@561 $generated@@680)) (and (= $generated@@685 ($generated@@560 $generated@@680)) (= (ControlFlow 0 2) (- 0 1)))) true)))))))))
(let (($generated@@728  (=> (and (= $generated@@686 $generated@@687) (= $generated@@680 (let (($generated@@729 (ite $generated@@665 $generated@@666 $generated@@667)))
$generated@@729))) (and (=> (= (ControlFlow 0 64) (- 0 65)) (not (= $generated@@680 $generated@@140))) (=> (not (= $generated@@680 $generated@@140)) (=> ($generated@@77 $generated@@680 $generated@@139 $generated@@653) (=> (and ($generated@@366 $generated@@680) ($generated@@366 $generated@@680)) (and (=> (= (ControlFlow 0 64) 2) $generated@@727) (=> (= (ControlFlow 0 64) 59) $generated@@725)))))))))
(let (($generated@@730  (=> (and (and (not $generated@@665) (= $generated@@687 $generated@@667)) (and ($generated@@143 $generated@@687 $generated@@139) (= (ControlFlow 0 67) 64))) $generated@@728)))
(let (($generated@@731  (=> (and (and $generated@@665 (= $generated@@687 $generated@@666)) (and ($generated@@143 $generated@@687 $generated@@139) (= (ControlFlow 0 66) 64))) $generated@@728)))
(let (($generated@@732  (=> (= $generated@@688 ($generated@@167 $generated@@140 $generated@@653 $generated@@60 false)) (=> (and (and ($generated@@143 $generated@@689 $generated@@139) ($generated@@77 $generated@@689 $generated@@139 $generated@@653)) (and ($generated@@143 $generated@@686 $generated@@139) ($generated@@77 $generated@@686 $generated@@139 $generated@@653))) (and (=> (= (ControlFlow 0 68) 66) $generated@@731) (=> (= (ControlFlow 0 68) 67) $generated@@730))))))
(let (($generated@@733  (=> (and (and (and (and ($generated@@269 $generated@@653) ($generated@@654 $generated@@653)) (<= ($generated@@245 0) $generated@@690)) (and ($generated@@143 $generated@@666 $generated@@222) ($generated@@77 $generated@@666 $generated@@222 $generated@@653))) (and (and (and ($generated@@143 $generated@@667 $generated@@222) ($generated@@77 $generated@@667 $generated@@222 $generated@@653)) (=> $generated@@691 (and ($generated@@143 $generated@@692 $generated@@222) ($generated@@77 $generated@@692 $generated@@222 $generated@@653)))) (and (<= ($generated@@245 0) $generated@@693) true))) (=> (and (and (and (and (and ($generated@@143 $generated@@694 $generated@@139) ($generated@@77 $generated@@694 $generated@@139 $generated@@653)) true) (and (and (<= ($generated@@245 0) $generated@@695) true) (and (<= ($generated@@245 0) $generated@@696) true))) (and (and (and (=> $generated@@682 (and ($generated@@143 $generated@@697 $generated@@222) ($generated@@77 $generated@@697 $generated@@222 $generated@@653))) true) (and (=> $generated@@675 (and ($generated@@143 $generated@@698 $generated@@222) ($generated@@77 $generated@@698 $generated@@222 $generated@@653))) true)) (and (and (<= ($generated@@245 0) $generated@@699) true) (and (<= ($generated@@245 0) $generated@@700) true)))) (and (and (and (and ($generated@@143 $generated@@701 $generated@@139) ($generated@@77 $generated@@701 $generated@@139 $generated@@653)) true) (and (and (<= ($generated@@245 0) $generated@@702) true) (and (<= ($generated@@245 0) $generated@@703) true))) (and (and (and (=> $generated@@659 (and ($generated@@143 $generated@@704 $generated@@222) ($generated@@77 $generated@@704 $generated@@222 $generated@@653))) true) (and (=> $generated@@649 (and ($generated@@143 $generated@@705 $generated@@222) ($generated@@77 $generated@@705 $generated@@222 $generated@@653))) true)) (and (and (<= ($generated@@245 0) $generated@@706) true) (and (= 4 $generated@@707) (= (ControlFlow 0 69) 68)))))) $generated@@732))))
$generated@@733)))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
