(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (Int Int) Bool)
(declare-fun $generated@@214 (Int Int) Bool)
(declare-fun $generated@@215 (Int Int) Int)
(declare-fun $generated@@220 (Int Int) Int)
(declare-fun $generated@@228 (T@T) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@239 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 () T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@301 (Int Int Int) Bool)
(declare-fun $generated@@302 (Int Int Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) Int)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@446 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@146) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (and (= (type $generated@@148) $generated@@131) (or ($generated@@132 $generated@@149 $generated@@150) (and (not (= 1 $generated@@127)) (and (> $generated@@149 0) (> $generated@@150 0))))) (and (forall (($generated@@151 Int) ) (!  (=> (> $generated@@151 0) ($generated@@135 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@151 $generated@@149 $generated@@150))
)) (= ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150) (exists (($generated@@152 Int) ) (!  (and (> $generated@@152 0) ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@159 $generated@@160)) 13)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@157 ($generated@@155 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@155 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@157 (type $generated@@165))))
(= (type ($generated@@153 $generated@@165 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@153 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(let (($generated@@174 (type $generated@@170)))
(= (type ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172)) ($generated@@155 $generated@@174 $generated@@173))))
 :pattern ( ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@157 (type $generated@@175))))
 (=> (= (type $generated@@178) $generated@@179) (= ($generated@@153 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@176 $generated@@177) $generated@@178)))
 :weight 0
))) (and (and (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@153 ($generated@@158 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@153 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@153 ($generated@@158 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@153 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or true (= ($generated@@153 ($generated@@158 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@153 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ) (! (= (type ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@155 $generated@@72 $generated@@4))
 :pattern ( ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@64 (type $generated@@207))))
 (=> (and (and (and (and (= (type $generated@@202) $generated@@72) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@204) ($generated@@63 $generated@@4))) (= (type $generated@@206) $generated@@72)) (= (type $generated@@207) ($generated@@63 $generated@@208))) (= ($generated@@0 ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (not (= $generated@@206 $generated@@202)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@203 $generated@@206) $generated@@204))) $generated@@205))))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@130 $generated@@209) $generated@@209)
 :pattern ( ($generated@@130 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@133 $generated@@210) $generated@@210)
 :pattern ( ($generated@@133 $generated@@210))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ($generated@@218 Int) ) (!  (=> (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@216) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@217 0) (> $generated@@218 0))))))))) (and ($generated@@214 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (= ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (let (($generated@@219 ($generated@@215 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218))))
$generated@@219))))
 :weight 3
 :pattern ( ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) ($generated@@212 $generated@@216))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (or ($generated@@135 $generated@@221 $generated@@222 $generated@@223) (and (not (= 0 $generated@@127)) (and (> $generated@@221 0) (> $generated@@222 0)))) (= ($generated@@134 $generated@@221 $generated@@222 $generated@@223) (= ($generated@@220 $generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@134 $generated@@221 $generated@@222 $generated@@223))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 $generated@@225 $generated@@226) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@224) (and (> $generated@@225 0) (> $generated@@226 0)))))) (and ($generated@@214 $generated@@225 $generated@@226) (= ($generated@@211 $generated@@225 $generated@@226) (let (($generated@@227 ($generated@@215 $generated@@225 $generated@@226)))
$generated@@227))))
 :pattern ( ($generated@@211 $generated@@225 $generated@@226) ($generated@@212 $generated@@224))
))))
(assert  (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@232)) 14)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
))) (forall (($generated@@234 T@T) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@230 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@235)) 0)
 :pattern ( ($generated@@228 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (= (type $generated@@236) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238) ($generated@@128 $generated@@236 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
)))
(assert  (and (= ($generated@@1 $generated@@241) 15) (forall (($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@61) (= (type $generated@@245) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245) ($generated@@69 $generated@@243 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@248) $generated@@241)) (= (type $generated@@249) $generated@@61)) ($generated@@144 $generated@@246 $generated@@247)) ($generated@@239 $generated@@248 $generated@@249 $generated@@246)) ($generated@@239 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@144 $generated@@246 $generated@@247) ($generated@@239 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@250) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@251) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@253) $generated@@61)) ($generated@@144 $generated@@250 $generated@@251)) ($generated@@69 $generated@@252 $generated@@253 $generated@@250)) ($generated@@69 $generated@@252 $generated@@253 $generated@@251))
 :pattern ( ($generated@@144 $generated@@250 $generated@@251) ($generated@@69 $generated@@252 $generated@@253 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 16)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 17)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@71 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@258 (type $generated@@290))))
(let (($generated@@292 ($generated@@257 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@256 $generated@@292 $generated@@291)) (or (= $generated@@290 ($generated@@255 $generated@@292 $generated@@291)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@290) $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@254 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@276 (type $generated@@294))))
(let (($generated@@296 ($generated@@275 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@274 $generated@@296 $generated@@295)) (or (= $generated@@294 ($generated@@273 $generated@@296 $generated@@295)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@294) $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@272 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@298 Int) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (or ($generated@@135 $generated@@298 $generated@@299 $generated@@300) (and (not (= 0 $generated@@127)) (and (> $generated@@298 0) (> $generated@@299 0)))) true)
 :pattern ( ($generated@@134 $generated@@298 $generated@@299 $generated@@300))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@303 Int) ($generated@@304 Int) ($generated@@305 Int) ) (!  (=> (or ($generated@@302 $generated@@303 $generated@@304 $generated@@305) (and (not (= 2 $generated@@127)) (and (> $generated@@304 0) (> $generated@@305 0)))) true)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 Int) ($generated@@307 Int) ) (!  (=> ($generated@@214 $generated@@306 $generated@@307) (and ($generated@@301 ($generated@@215 $generated@@306 $generated@@307) $generated@@306 $generated@@307) (forall (($generated@@308 Int) ) (!  (=> true (=> ($generated@@301 $generated@@308 $generated@@306 $generated@@307) (<= $generated@@308 ($generated@@215 $generated@@306 $generated@@307))))
 :pattern ( ($generated@@301 $generated@@308 $generated@@306 $generated@@307))
))))
 :pattern ( ($generated@@215 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@241) ($generated@@0 ($generated@@76 $generated@@311 $generated@@314))) ($generated@@239 $generated@@314 $generated@@312 $generated@@313))
 :pattern ( ($generated@@76 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@241) ($generated@@0 ($generated@@76 $generated@@317 $generated@@320))) ($generated@@239 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@76 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@321) $generated@@131) (or ($generated@@132 $generated@@322 $generated@@323) (and (not (= 1 $generated@@127)) (and (> $generated@@322 0) (> $generated@@323 0))))) true)
 :pattern ( ($generated@@128 $generated@@321 $generated@@322 $generated@@323))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@324 Int) ($generated@@325 Int) ) (!  (=> (or ($generated@@213 $generated@@324 $generated@@325) (and (not (= 5 $generated@@127)) (and (> $generated@@324 0) (> $generated@@325 0)))) true)
 :pattern ( ($generated@@211 $generated@@324 $generated@@325))
))))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@258 (type $generated@@330))))
(let (($generated@@332 ($generated@@257 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@256 $generated@@241 $generated@@241)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))) (and ($generated@@239 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@239 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert  (and (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= (type ($generated@@338 $generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340 $generated@@341))
)) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@276 (type $generated@@342))))
(let (($generated@@344 ($generated@@275 (type $generated@@342))))
(= (type ($generated@@339 $generated@@342)) ($generated@@71 $generated@@344 $generated@@343))))
 :pattern ( ($generated@@339 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (= (type $generated@@345) ($generated@@274 $generated@@241 $generated@@241)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) $generated@@61)) (= (type $generated@@348) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))) (and ($generated@@239 ($generated@@76 ($generated@@339 $generated@@345) $generated@@349) $generated@@347 $generated@@348) ($generated@@239 $generated@@349 $generated@@346 $generated@@348)))
 :pattern ( ($generated@@76 ($generated@@339 $generated@@345) $generated@@349))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))
))))
 :pattern ( ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@350 $generated@@352))) (and ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))) ($generated@@144 $generated@@350 $generated@@352))
 :pattern ( ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@71 $generated@@354 $generated@@4))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@276 (type $generated@@355))))
(let (($generated@@357 ($generated@@275 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@274 $generated@@357 $generated@@356)) (= (= $generated@@355 ($generated@@273 $generated@@357 $generated@@356)) (= ($generated@@272 $generated@@355) ($generated@@353 $generated@@357))))))
 :pattern ( ($generated@@272 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@231 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@230 $generated@@359)) (<= 0 ($generated@@229 $generated@@358))))
 :pattern ( ($generated@@229 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@61) (= (type $generated@@363) $generated@@61)) (= ($generated@@360 ($generated@@326 $generated@@362 $generated@@363)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@61) (= (type $generated@@367) $generated@@61)) (= ($generated@@364 ($generated@@326 $generated@@366 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@326 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@368 $generated@@369)) $generated@@58))
 :pattern ( ($generated@@326 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@61) (= (type $generated@@373) $generated@@61)) (= ($generated@@370 ($generated@@338 $generated@@372 $generated@@373)) $generated@@372))
 :pattern ( ($generated@@338 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@374 ($generated@@338 $generated@@376 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@338 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@61) (= (type $generated@@379) $generated@@61)) (= ($generated@@67 ($generated@@338 $generated@@378 $generated@@379)) $generated@@59))
 :pattern ( ($generated@@338 $generated@@378 $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ($generated@@384 Int) ) (! (let (($generated@@385 ($generated@@231 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@230 $generated@@241)) (= (type $generated@@387) $generated@@61)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388) (forall (($generated@@389 Int) ) (!  (=> (and (<= 0 $generated@@389) (< $generated@@389 ($generated@@229 $generated@@386))) ($generated@@239 ($generated@@381 $generated@@386 $generated@@389) $generated@@387 $generated@@388))
 :pattern ( ($generated@@381 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@390 ($generated@@70 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@70 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@392 ($generated@@309 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@309 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@67 ($generated@@309 $generated@@395)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) $generated@@61)
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@61) (= ($generated@@396 ($generated@@315 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@315 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@399)) $generated@@55))
 :pattern ( ($generated@@315 $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@61) (= ($generated@@401 ($generated@@400 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@61) (= ($generated@@67 ($generated@@400 $generated@@405)) $generated@@56))
 :pattern ( ($generated@@400 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@61)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@61) (= ($generated@@406 ($generated@@380 $generated@@408)) $generated@@408))
 :pattern ( ($generated@@380 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@61) (= ($generated@@67 ($generated@@380 $generated@@409)) $generated@@57))
 :pattern ( ($generated@@380 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated@@410 $generated@@414 ($generated@@240 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@240 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (not ($generated@@0 ($generated@@76 ($generated@@353 $generated@@416) $generated@@415))))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@76 ($generated@@353 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Int) ) (! (= ($generated@@220 $generated@@417 $generated@@418) (* $generated@@417 $generated@@418))
 :pattern ( ($generated@@220 $generated@@417 $generated@@418))
)))
(assert (= (type $generated@@419) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@420 Int) ($generated@@421 Int) ($generated@@422 Int) ) (!  (=> (or ($generated@@302 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@421 0) (> $generated@@422 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@420 0)))) (and ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) (=> ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))) (= ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422))  (and (and (> $generated@@420 0) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421))) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@71 $generated@@241 $generated@@2)) (= (type $generated@@424) $generated@@61)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@241) (< 0 ($generated ($generated@@76 $generated@@423 $generated@@426)))) ($generated@@239 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@76 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))) ($generated@@133 ($generated@@240 ($generated@@8 $generated@@427))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))))
)))
(assert (forall (($generated@@428 T@U) ) (! (= ($generated@@240 ($generated@@133 $generated@@428)) ($generated@@133 ($generated@@240 $generated@@428)))
 :pattern ( ($generated@@240 ($generated@@133 $generated@@428)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@231 (type $generated@@429))))
 (=> (and (= (type $generated@@429) ($generated@@230 $generated@@430)) (= ($generated@@229 $generated@@429) 0)) (= $generated@@429 ($generated@@228 $generated@@430))))
 :pattern ( ($generated@@229 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@432) $generated@@2)) ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
 :pattern ( ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@434) $generated@@3)) ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
 :pattern ( ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@436) $generated@@4)) ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
 :pattern ( ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
)))
(assert (= ($generated@@1 $generated@@437) 18))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@437)) ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@241)) ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@442 Int) ($generated@@443 Int) ($generated@@444 Int) ) (!  (=> (or ($generated@@302 $generated@@442 $generated@@443 $generated@@444) (and (not (= 2 $generated@@127)) (and (> $generated@@443 0) (> $generated@@444 0)))) (and (=> (> $generated@@442 0) (and ($generated@@132 $generated@@442 $generated@@443) (=> ($generated@@128 $generated@@419 $generated@@442 $generated@@443) ($generated@@132 $generated@@442 $generated@@444)))) (= ($generated@@301 $generated@@442 $generated@@443 $generated@@444)  (and (and (> $generated@@442 0) ($generated@@128 $generated@@419 $generated@@442 $generated@@443)) ($generated@@128 $generated@@419 $generated@@442 $generated@@444)))))
 :pattern ( ($generated@@301 $generated@@442 $generated@@443 $generated@@444))
))))
(assert  (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@447)) $generated@@131)
 :pattern ( ($generated@@445 $generated@@447))
)) (= (type $generated@@446) $generated@@131)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 Int) ) (!  (=> (= (type $generated@@448) $generated@@131) (= ($generated@@128 $generated@@448 $generated@@449 $generated@@450) ($generated@@128 $generated@@446 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@128 ($generated@@445 $generated@@448) $generated@@449 $generated@@450))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@451 Int) ($generated@@452 Int) ($generated@@453 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@451 0) (> $generated@@452 0))))))) (= ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (= ($generated@@130 ($generated@@220 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452))) ($generated@@130 $generated@@453))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@454 () T@U)
(declare-fun $generated@@455 () T@U)
(declare-fun $generated@@456 () T@U)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Int)
(declare-fun $generated@@460 () T@U)
(declare-fun $generated@@461 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@454) $generated@@131) (= (type $generated@@455) ($generated@@155 $generated@@72 $generated@@4))) (= (type $generated@@456) $generated@@72)) (= (type $generated@@457) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@460) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@462  (=> (= ($generated@@445 $generated@@419) $generated@@419) (=> (and (= ($generated@@445 $generated@@454) $generated@@454) (= $generated@@455 ($generated@@154 $generated@@456 $generated@@457 $generated@@60 false))) (=> (and (and (and (> $generated@@458 0) (> $generated@@459 0)) (and ($generated@@212 $generated@@460) ($generated@@461 $generated@@460))) (and (and (forall (($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@72) (=> (and (not (= $generated@@463 $generated@@456)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@457 $generated@@463) $generated@@60))) (= ($generated@@76 $generated@@460 $generated@@463) ($generated@@76 $generated@@457 $generated@@463))))
 :pattern ( ($generated@@76 $generated@@460 $generated@@463))
)) ($generated@@144 $generated@@457 $generated@@460)) (and ($generated@@69 ($generated@@8 $generated@@458) $generated@@46 $generated@@460) ($generated@@69 ($generated@@8 $generated@@459) $generated@@46 $generated@@460)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@458 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@459 0))))))))
(let (($generated@@464  (=> (and (and ($generated@@212 $generated@@457) ($generated@@461 $generated@@457)) (and (= 7 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@462)))
$generated@@464)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (Int Int) Bool)
(declare-fun $generated@@214 (Int Int) Bool)
(declare-fun $generated@@215 (Int Int) Int)
(declare-fun $generated@@220 (Int Int) Int)
(declare-fun $generated@@228 (T@T) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@239 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 () T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@301 (Int Int Int) Bool)
(declare-fun $generated@@302 (Int Int Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) Int)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@446 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@146) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (and (= (type $generated@@148) $generated@@131) (or ($generated@@132 $generated@@149 $generated@@150) (and (not (= 1 $generated@@127)) (and (> $generated@@149 0) (> $generated@@150 0))))) (and (forall (($generated@@151 Int) ) (!  (=> (> $generated@@151 0) ($generated@@135 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@151 $generated@@149 $generated@@150))
)) (= ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150) (exists (($generated@@152 Int) ) (!  (and (> $generated@@152 0) ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@159 $generated@@160)) 13)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@157 ($generated@@155 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@155 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@157 (type $generated@@165))))
(= (type ($generated@@153 $generated@@165 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@153 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(let (($generated@@174 (type $generated@@170)))
(= (type ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172)) ($generated@@155 $generated@@174 $generated@@173))))
 :pattern ( ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@157 (type $generated@@175))))
 (=> (= (type $generated@@178) $generated@@179) (= ($generated@@153 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@176 $generated@@177) $generated@@178)))
 :weight 0
))) (and (and (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@153 ($generated@@158 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@153 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@153 ($generated@@158 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@153 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or true (= ($generated@@153 ($generated@@158 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@153 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ) (! (= (type ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@155 $generated@@72 $generated@@4))
 :pattern ( ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@64 (type $generated@@207))))
 (=> (and (and (and (and (= (type $generated@@202) $generated@@72) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@204) ($generated@@63 $generated@@4))) (= (type $generated@@206) $generated@@72)) (= (type $generated@@207) ($generated@@63 $generated@@208))) (= ($generated@@0 ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (not (= $generated@@206 $generated@@202)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@203 $generated@@206) $generated@@204))) $generated@@205))))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@130 $generated@@209) $generated@@209)
 :pattern ( ($generated@@130 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@133 $generated@@210) $generated@@210)
 :pattern ( ($generated@@133 $generated@@210))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ($generated@@218 Int) ) (!  (=> (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@216) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@217 0) (> $generated@@218 0))))))))) (and ($generated@@214 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (= ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (let (($generated@@219 ($generated@@215 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218))))
$generated@@219))))
 :weight 3
 :pattern ( ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) ($generated@@212 $generated@@216))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (or ($generated@@135 $generated@@221 $generated@@222 $generated@@223) (and (not (= 0 $generated@@127)) (and (> $generated@@221 0) (> $generated@@222 0)))) (= ($generated@@134 $generated@@221 $generated@@222 $generated@@223) (= ($generated@@220 $generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@134 $generated@@221 $generated@@222 $generated@@223))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 $generated@@225 $generated@@226) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@224) (and (> $generated@@225 0) (> $generated@@226 0)))))) (and ($generated@@214 $generated@@225 $generated@@226) (= ($generated@@211 $generated@@225 $generated@@226) (let (($generated@@227 ($generated@@215 $generated@@225 $generated@@226)))
$generated@@227))))
 :pattern ( ($generated@@211 $generated@@225 $generated@@226) ($generated@@212 $generated@@224))
))))
(assert  (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@232)) 14)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
))) (forall (($generated@@234 T@T) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@230 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@235)) 0)
 :pattern ( ($generated@@228 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (= (type $generated@@236) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238) ($generated@@128 $generated@@236 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
)))
(assert  (and (= ($generated@@1 $generated@@241) 15) (forall (($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@61) (= (type $generated@@245) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245) ($generated@@69 $generated@@243 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@248) $generated@@241)) (= (type $generated@@249) $generated@@61)) ($generated@@144 $generated@@246 $generated@@247)) ($generated@@239 $generated@@248 $generated@@249 $generated@@246)) ($generated@@239 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@144 $generated@@246 $generated@@247) ($generated@@239 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@250) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@251) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@253) $generated@@61)) ($generated@@144 $generated@@250 $generated@@251)) ($generated@@69 $generated@@252 $generated@@253 $generated@@250)) ($generated@@69 $generated@@252 $generated@@253 $generated@@251))
 :pattern ( ($generated@@144 $generated@@250 $generated@@251) ($generated@@69 $generated@@252 $generated@@253 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 16)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 17)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@71 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@258 (type $generated@@290))))
(let (($generated@@292 ($generated@@257 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@256 $generated@@292 $generated@@291)) (or (= $generated@@290 ($generated@@255 $generated@@292 $generated@@291)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@290) $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@254 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@276 (type $generated@@294))))
(let (($generated@@296 ($generated@@275 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@274 $generated@@296 $generated@@295)) (or (= $generated@@294 ($generated@@273 $generated@@296 $generated@@295)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@294) $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@272 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@298 Int) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (or ($generated@@135 $generated@@298 $generated@@299 $generated@@300) (and (not (= 0 $generated@@127)) (and (> $generated@@298 0) (> $generated@@299 0)))) true)
 :pattern ( ($generated@@134 $generated@@298 $generated@@299 $generated@@300))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@303 Int) ($generated@@304 Int) ($generated@@305 Int) ) (!  (=> (or ($generated@@302 $generated@@303 $generated@@304 $generated@@305) (and (not (= 2 $generated@@127)) (and (> $generated@@304 0) (> $generated@@305 0)))) true)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 Int) ($generated@@307 Int) ) (!  (=> ($generated@@214 $generated@@306 $generated@@307) (and ($generated@@301 ($generated@@215 $generated@@306 $generated@@307) $generated@@306 $generated@@307) (forall (($generated@@308 Int) ) (!  (=> true (=> ($generated@@301 $generated@@308 $generated@@306 $generated@@307) (<= $generated@@308 ($generated@@215 $generated@@306 $generated@@307))))
 :pattern ( ($generated@@301 $generated@@308 $generated@@306 $generated@@307))
))))
 :pattern ( ($generated@@215 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@241) ($generated@@0 ($generated@@76 $generated@@311 $generated@@314))) ($generated@@239 $generated@@314 $generated@@312 $generated@@313))
 :pattern ( ($generated@@76 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@241) ($generated@@0 ($generated@@76 $generated@@317 $generated@@320))) ($generated@@239 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@76 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@321) $generated@@131) (or ($generated@@132 $generated@@322 $generated@@323) (and (not (= 1 $generated@@127)) (and (> $generated@@322 0) (> $generated@@323 0))))) true)
 :pattern ( ($generated@@128 $generated@@321 $generated@@322 $generated@@323))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@324 Int) ($generated@@325 Int) ) (!  (=> (or ($generated@@213 $generated@@324 $generated@@325) (and (not (= 5 $generated@@127)) (and (> $generated@@324 0) (> $generated@@325 0)))) true)
 :pattern ( ($generated@@211 $generated@@324 $generated@@325))
))))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@258 (type $generated@@330))))
(let (($generated@@332 ($generated@@257 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@256 $generated@@241 $generated@@241)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))) (and ($generated@@239 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@239 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert  (and (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= (type ($generated@@338 $generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340 $generated@@341))
)) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@276 (type $generated@@342))))
(let (($generated@@344 ($generated@@275 (type $generated@@342))))
(= (type ($generated@@339 $generated@@342)) ($generated@@71 $generated@@344 $generated@@343))))
 :pattern ( ($generated@@339 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (= (type $generated@@345) ($generated@@274 $generated@@241 $generated@@241)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) $generated@@61)) (= (type $generated@@348) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))) (and ($generated@@239 ($generated@@76 ($generated@@339 $generated@@345) $generated@@349) $generated@@347 $generated@@348) ($generated@@239 $generated@@349 $generated@@346 $generated@@348)))
 :pattern ( ($generated@@76 ($generated@@339 $generated@@345) $generated@@349))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))
))))
 :pattern ( ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@350 $generated@@352))) (and ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))) ($generated@@144 $generated@@350 $generated@@352))
 :pattern ( ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@71 $generated@@354 $generated@@4))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@276 (type $generated@@355))))
(let (($generated@@357 ($generated@@275 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@274 $generated@@357 $generated@@356)) (= (= $generated@@355 ($generated@@273 $generated@@357 $generated@@356)) (= ($generated@@272 $generated@@355) ($generated@@353 $generated@@357))))))
 :pattern ( ($generated@@272 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@231 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@230 $generated@@359)) (<= 0 ($generated@@229 $generated@@358))))
 :pattern ( ($generated@@229 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@61) (= (type $generated@@363) $generated@@61)) (= ($generated@@360 ($generated@@326 $generated@@362 $generated@@363)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@61) (= (type $generated@@367) $generated@@61)) (= ($generated@@364 ($generated@@326 $generated@@366 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@326 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@368 $generated@@369)) $generated@@58))
 :pattern ( ($generated@@326 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@61) (= (type $generated@@373) $generated@@61)) (= ($generated@@370 ($generated@@338 $generated@@372 $generated@@373)) $generated@@372))
 :pattern ( ($generated@@338 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@374 ($generated@@338 $generated@@376 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@338 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@61) (= (type $generated@@379) $generated@@61)) (= ($generated@@67 ($generated@@338 $generated@@378 $generated@@379)) $generated@@59))
 :pattern ( ($generated@@338 $generated@@378 $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ($generated@@384 Int) ) (! (let (($generated@@385 ($generated@@231 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@230 $generated@@241)) (= (type $generated@@387) $generated@@61)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388) (forall (($generated@@389 Int) ) (!  (=> (and (<= 0 $generated@@389) (< $generated@@389 ($generated@@229 $generated@@386))) ($generated@@239 ($generated@@381 $generated@@386 $generated@@389) $generated@@387 $generated@@388))
 :pattern ( ($generated@@381 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@390 ($generated@@70 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@70 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@392 ($generated@@309 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@309 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@67 ($generated@@309 $generated@@395)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) $generated@@61)
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@61) (= ($generated@@396 ($generated@@315 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@315 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@399)) $generated@@55))
 :pattern ( ($generated@@315 $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@61) (= ($generated@@401 ($generated@@400 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@61) (= ($generated@@67 ($generated@@400 $generated@@405)) $generated@@56))
 :pattern ( ($generated@@400 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@61)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@61) (= ($generated@@406 ($generated@@380 $generated@@408)) $generated@@408))
 :pattern ( ($generated@@380 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@61) (= ($generated@@67 ($generated@@380 $generated@@409)) $generated@@57))
 :pattern ( ($generated@@380 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated@@410 $generated@@414 ($generated@@240 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@240 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (not ($generated@@0 ($generated@@76 ($generated@@353 $generated@@416) $generated@@415))))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@76 ($generated@@353 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Int) ) (! (= ($generated@@220 $generated@@417 $generated@@418) (* $generated@@417 $generated@@418))
 :pattern ( ($generated@@220 $generated@@417 $generated@@418))
)))
(assert (= (type $generated@@419) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@420 Int) ($generated@@421 Int) ($generated@@422 Int) ) (!  (=> (or ($generated@@302 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@421 0) (> $generated@@422 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@420 0)))) (and ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) (=> ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))) (= ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422))  (and (and (> $generated@@420 0) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421))) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@71 $generated@@241 $generated@@2)) (= (type $generated@@424) $generated@@61)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@241) (< 0 ($generated ($generated@@76 $generated@@423 $generated@@426)))) ($generated@@239 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@76 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))) ($generated@@133 ($generated@@240 ($generated@@8 $generated@@427))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))))
)))
(assert (forall (($generated@@428 T@U) ) (! (= ($generated@@240 ($generated@@133 $generated@@428)) ($generated@@133 ($generated@@240 $generated@@428)))
 :pattern ( ($generated@@240 ($generated@@133 $generated@@428)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@231 (type $generated@@429))))
 (=> (and (= (type $generated@@429) ($generated@@230 $generated@@430)) (= ($generated@@229 $generated@@429) 0)) (= $generated@@429 ($generated@@228 $generated@@430))))
 :pattern ( ($generated@@229 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@432) $generated@@2)) ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
 :pattern ( ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@434) $generated@@3)) ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
 :pattern ( ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@436) $generated@@4)) ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
 :pattern ( ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
)))
(assert (= ($generated@@1 $generated@@437) 18))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@437)) ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@241)) ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@442 Int) ($generated@@443 Int) ($generated@@444 Int) ) (!  (=> (or ($generated@@302 $generated@@442 $generated@@443 $generated@@444) (and (not (= 2 $generated@@127)) (and (> $generated@@443 0) (> $generated@@444 0)))) (and (=> (> $generated@@442 0) (and ($generated@@132 $generated@@442 $generated@@443) (=> ($generated@@128 $generated@@419 $generated@@442 $generated@@443) ($generated@@132 $generated@@442 $generated@@444)))) (= ($generated@@301 $generated@@442 $generated@@443 $generated@@444)  (and (and (> $generated@@442 0) ($generated@@128 $generated@@419 $generated@@442 $generated@@443)) ($generated@@128 $generated@@419 $generated@@442 $generated@@444)))))
 :pattern ( ($generated@@301 $generated@@442 $generated@@443 $generated@@444))
))))
(assert  (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@447)) $generated@@131)
 :pattern ( ($generated@@445 $generated@@447))
)) (= (type $generated@@446) $generated@@131)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 Int) ) (!  (=> (= (type $generated@@448) $generated@@131) (= ($generated@@128 $generated@@448 $generated@@449 $generated@@450) ($generated@@128 $generated@@446 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@128 ($generated@@445 $generated@@448) $generated@@449 $generated@@450))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@451 Int) ($generated@@452 Int) ($generated@@453 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@451 0) (> $generated@@452 0))))))) (= ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (= ($generated@@130 ($generated@@220 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452))) ($generated@@130 $generated@@453))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@454 () Int)
(declare-fun $generated@@455 () Int)
(declare-fun $generated@@456 () Int)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Bool)
(declare-fun $generated@@460 () Int)
(declare-fun $generated@@461 () Int)
(declare-fun $generated@@462 () Int)
(declare-fun $generated@@463 () Int)
(declare-fun $generated@@464 () T@U)
(declare-fun $generated@@465 (T@U) Bool)
(declare-fun $generated@@466 () Int)
(declare-fun $generated@@467 () Int)
(declare-fun $generated@@468 () Int)
(declare-fun $generated@@469 () T@U)
(declare-fun $generated@@470 () Int)
(declare-fun $generated@@471 () T@U)
(declare-fun $generated@@472 () Int)
(declare-fun $generated@@473 () T@U)
(declare-fun $generated@@474 () Int)
(declare-fun $generated@@475 () T@U)
(declare-fun $generated@@476 () Int)
(declare-fun $generated@@477 () T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@480 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@475) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@457) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@473) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@471) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@469) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@464) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@477) $generated@@72)) (= (type $generated@@478) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@479) ($generated@@155 $generated@@72 $generated@@4))) (= (type $generated@@480) $generated@@131)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 56) (let (($generated@@481  (=> (and (and (< 0 $generated@@454) (< 0 $generated@@455)) (and ($generated@@69 ($generated@@8 $generated@@456) $generated@@46 $generated@@457) ($generated@@69 ($generated@@8 $generated@@458) $generated@@46 $generated@@457))) (and (=> (= (ControlFlow 0 43) (- 0 46)) (> $generated@@456 0)) (and (=> (= (ControlFlow 0 43) (- 0 45)) (> $generated@@458 0)) (=> ($generated@@213 $generated@@456 $generated@@458) (=> (and ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@457) ($generated@@69 ($generated@@8 $generated@@455) $generated@@46 $generated@@457)) (and (=> (= (ControlFlow 0 43) (- 0 44)) (> $generated@@454 0)) (=> (= (ControlFlow 0 43) (- 0 42)) (> $generated@@455 0))))))))))
(let (($generated@@482  (=> (and (<= $generated@@454 0) (= (ControlFlow 0 48) 43)) $generated@@481)))
(let (($generated@@483  (=> (and (< 0 $generated@@454) (= (ControlFlow 0 47) 43)) $generated@@481)))
(let (($generated@@484  (=> (not $generated@@459) (and (=> (= (ControlFlow 0 49) 47) $generated@@483) (=> (= (ControlFlow 0 49) 48) $generated@@482)))))
(let (($generated@@485  (and (=> (= (ControlFlow 0 30) (- 0 34)) (or (<= 0 $generated@@460) (= (+ $generated@@461 $generated@@462) $generated@@460))) (=> (or (<= 0 $generated@@460) (= (+ $generated@@461 $generated@@462) $generated@@460)) (and (=> (= (ControlFlow 0 30) (- 0 33)) (< (+ $generated@@461 $generated@@462) $generated@@460)) (=> (< (+ $generated@@461 $generated@@462) $generated@@460) (=> (=> (< 0 $generated@@461) (=> (< 0 $generated@@462) (and ($generated@@213 $generated@@456 $generated@@458) ($generated@@213 $generated@@461 $generated@@462)))) (and (=> (= (ControlFlow 0 30) (- 0 32)) (=> $generated@@459 (< 0 $generated@@461))) (=> (=> $generated@@459 (< 0 $generated@@461)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (=> $generated@@459 (< 0 $generated@@462))) (=> (=> $generated@@459 (< 0 $generated@@462)) (=> (= (ControlFlow 0 30) (- 0 29)) (=> $generated@@459 (= ($generated@@211 $generated@@456 $generated@@458) ($generated@@211 $generated@@461 $generated@@462)))))))))))))))
(let (($generated@@486  (=> (= ($generated@@211 $generated@@454 $generated@@455) ($generated@@211 $generated@@454 (- $generated@@455 $generated@@454))) (=> (and (and (= $generated@@463 (- $generated@@455 $generated@@454)) (= $generated@@461 $generated@@454)) (and (= $generated@@462 $generated@@463) (= (ControlFlow 0 38) 30))) $generated@@485))))
(let (($generated@@487  (=> (> $generated@@454 $generated@@455) (and (=> (= (ControlFlow 0 35) (- 0 37)) (> $generated@@454 $generated@@455)) (=> (> $generated@@454 $generated@@455) (and (=> (= (ControlFlow 0 35) (- 0 36)) (> $generated@@455 0)) (=> (> $generated@@455 0) (=> (and ($generated@@212 $generated@@464) ($generated@@465 $generated@@464)) (=> (and (and (and ($generated@@213 $generated@@454 $generated@@455) ($generated@@213 (- $generated@@454 $generated@@455) $generated@@455)) (and (= ($generated@@211 $generated@@454 $generated@@455) ($generated@@211 (- $generated@@454 $generated@@455) $generated@@455)) (= $generated@@457 $generated@@464))) (and (and (= $generated@@466 (- $generated@@454 $generated@@455)) (= $generated@@461 $generated@@466)) (and (= $generated@@462 $generated@@455) (= (ControlFlow 0 35) 30)))) $generated@@485)))))))))
(let (($generated@@488  (=> (and (and (and (= $generated@@467 (- $generated@@455 $generated@@454)) ($generated@@69 ($generated@@8 $generated@@467) $generated@@46 $generated@@457)) (and ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@457) (> $generated@@467 0))) (and (and (> $generated@@454 0) ($generated@@213 (- $generated@@455 $generated@@454) $generated@@454)) (and ($generated@@213 (- $generated@@455 $generated@@454) $generated@@454) (= $generated@@468 (- $generated@@455 $generated@@454))))) (and (=> (= (ControlFlow 0 24) (- 0 28)) (> $generated@@468 0)) (=> (> $generated@@468 0) (and (=> (= (ControlFlow 0 24) (- 0 27)) (> $generated@@454 0)) (=> (> $generated@@454 0) (=> (and ($generated@@212 $generated@@469) ($generated@@465 $generated@@469)) (=> (and (and (and ($generated@@213 $generated@@468 $generated@@454) ($generated@@213 $generated@@454 $generated@@468)) (= ($generated@@211 $generated@@468 $generated@@454) ($generated@@211 $generated@@454 $generated@@468))) (and (and (= $generated@@457 $generated@@469) ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@469)) (and (= $generated@@470 (- $generated@@455 $generated@@454)) ($generated@@69 ($generated@@8 $generated@@470) $generated@@46 $generated@@469)))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (> $generated@@454 0)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (> $generated@@470 0)) (=> ($generated@@213 $generated@@454 (- $generated@@455 $generated@@454)) (=> (and ($generated@@213 $generated@@454 (- $generated@@455 $generated@@454)) (= (ControlFlow 0 24) (- 0 23))) (= ($generated@@211 (- $generated@@455 $generated@@454) $generated@@454) ($generated@@211 $generated@@454 (- $generated@@455 $generated@@454))))))))))))))))
(let (($generated@@489  (=> (and ($generated@@69 ($generated@@8 $generated@@455) $generated@@46 $generated@@457) ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@457)) (=> (and (and (> $generated@@455 0) (> $generated@@454 0)) (and ($generated@@213 $generated@@455 $generated@@454) ($generated@@213 $generated@@455 $generated@@454))) (and (=> (= (ControlFlow 0 18) (- 0 22)) (> $generated@@455 $generated@@454)) (=> (> $generated@@455 $generated@@454) (and (=> (= (ControlFlow 0 18) (- 0 21)) (> $generated@@454 0)) (=> (> $generated@@454 0) (=> (and ($generated@@212 $generated@@471) ($generated@@465 $generated@@471)) (=> (and (and (and ($generated@@213 $generated@@455 $generated@@454) ($generated@@213 (- $generated@@455 $generated@@454) $generated@@454)) (= ($generated@@211 $generated@@455 $generated@@454) ($generated@@211 (- $generated@@455 $generated@@454) $generated@@454))) (and (and (= $generated@@457 $generated@@471) (= $generated@@472 (- $generated@@455 $generated@@454))) (and ($generated@@69 ($generated@@8 $generated@@472) $generated@@46 $generated@@471) ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@471)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (> $generated@@472 0)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (> $generated@@454 0)) (=> ($generated@@213 (- $generated@@455 $generated@@454) $generated@@454) (=> (and ($generated@@213 (- $generated@@455 $generated@@454) $generated@@454) (= (ControlFlow 0 18) (- 0 17))) (= ($generated@@211 $generated@@455 $generated@@454) ($generated@@211 (- $generated@@455 $generated@@454) $generated@@454))))))))))))))))
(let (($generated@@490  (=> (and ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@457) ($generated@@69 ($generated@@8 $generated@@455) $generated@@46 $generated@@457)) (=> (and (and (> $generated@@454 0) (> $generated@@455 0)) (and ($generated@@213 $generated@@454 $generated@@455) ($generated@@213 $generated@@454 $generated@@455))) (and (=> (= (ControlFlow 0 12) (- 0 16)) (> $generated@@454 0)) (=> (> $generated@@454 0) (and (=> (= (ControlFlow 0 12) (- 0 15)) (> $generated@@455 0)) (=> (> $generated@@455 0) (=> (and (and (and ($generated@@212 $generated@@473) ($generated@@465 $generated@@473)) (and ($generated@@213 $generated@@454 $generated@@455) ($generated@@213 $generated@@455 $generated@@454))) (and (and (= ($generated@@211 $generated@@454 $generated@@455) ($generated@@211 $generated@@455 $generated@@454)) (= $generated@@457 $generated@@473)) (and ($generated@@69 ($generated@@8 $generated@@455) $generated@@46 $generated@@473) ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@473)))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (> $generated@@455 0)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (> $generated@@454 0)) (=> ($generated@@213 $generated@@455 $generated@@454) (=> (and ($generated@@213 $generated@@455 $generated@@454) (= (ControlFlow 0 12) (- 0 11))) (= ($generated@@211 $generated@@454 $generated@@455) ($generated@@211 $generated@@455 $generated@@454)))))))))))))))
(let (($generated@@491  (=> (and ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@457) ($generated@@69 ($generated@@8 $generated@@455) $generated@@46 $generated@@457)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (> $generated@@454 0)) (=> (= (ControlFlow 0 9) (- 0 8)) (> $generated@@455 0))))))
(let (($generated@@492  (=> (> $generated@@455 $generated@@454) (and (and (and (and (=> (= (ControlFlow 0 39) 9) $generated@@491) (=> (= (ControlFlow 0 39) 12) $generated@@490)) (=> (= (ControlFlow 0 39) 18) $generated@@489)) (=> (= (ControlFlow 0 39) 24) $generated@@488)) (=> (= (ControlFlow 0 39) 38) $generated@@486)))))
(let (($generated@@493  (=> (= (ControlFlow 0 3) (- 0 2)) (= $generated@@474 ($generated@@211 $generated@@456 $generated@@458)))))
(let (($generated@@494  (and (=> (= (ControlFlow 0 4) (- 0 5)) (> $generated@@454 0)) (=> (> $generated@@454 0) (=> (and (and (and ($generated@@212 $generated@@475) ($generated@@465 $generated@@475)) ($generated@@213 $generated@@454 $generated@@454)) (and (and (= ($generated@@211 $generated@@454 $generated@@454) $generated@@454) (= $generated@@457 $generated@@475)) (and (= $generated@@474 $generated@@454) (= (ControlFlow 0 4) 3)))) $generated@@493)))))
(let (($generated@@495  (=> (and (and (>= $generated@@455 $generated@@454) (>= $generated@@454 $generated@@455)) (= (ControlFlow 0 7) 4)) $generated@@494)))
(let (($generated@@496  (=> (and ($generated@@0 ($generated@@133 ($generated@@11 true))) (= $generated@@460 (+ $generated@@454 $generated@@455))) (and (and (=> (= (ControlFlow 0 40) 35) $generated@@487) (=> (= (ControlFlow 0 40) 39) $generated@@492)) (=> (= (ControlFlow 0 40) 7) $generated@@495)))))
(let (($generated@@497  (=> (and (not ($generated@@0 ($generated@@133 ($generated@@11 true)))) (= (ControlFlow 0 6) 4)) $generated@@494)))
(let (($generated@@498  (=> $generated@@459 (and (=> (= (ControlFlow 0 41) 6) $generated@@497) (=> (= (ControlFlow 0 41) 40) $generated@@496)))))
(let (($generated@@499  (and (=> (= (ControlFlow 0 50) 49) $generated@@484) (=> (= (ControlFlow 0 50) 41) $generated@@498))))
(let (($generated@@500 true))
(let (($generated@@501  (=> (and ($generated@@212 $generated@@457) ($generated@@465 $generated@@457)) (=> (and (and (and (and (and (not false) (<= 1 $generated@@456)) (<= 1 $generated@@458)) (<= 2 $generated@@476)) (and (=> $generated@@459 true) (=> $generated@@459 (< 0 $generated@@454)))) (and (and (and (=> $generated@@459 (< 0 $generated@@455)) (=> $generated@@459 (and ($generated@@213 $generated@@456 $generated@@458) ($generated@@213 $generated@@454 $generated@@455)))) (and (=> $generated@@459 (= ($generated@@211 $generated@@456 $generated@@458) ($generated@@211 $generated@@454 $generated@@455))) (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@72) (=> (and (not (= $generated@@502 $generated@@477)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@478 $generated@@502) $generated@@60))) (= ($generated@@76 $generated@@457 $generated@@502) ($generated@@76 $generated@@478 $generated@@502))))
 :pattern ( ($generated@@76 $generated@@457 $generated@@502))
)))) (and (and ($generated@@144 $generated@@478 $generated@@457) (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@64 (type $generated@@504))))
 (=> (and (and (= (type $generated@@503) $generated@@72) (= (type $generated@@504) ($generated@@63 $generated@@505))) (and (not (= $generated@@503 $generated@@477)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@478 $generated@@503) $generated@@60)))) (or (= ($generated@@78 ($generated@@76 $generated@@457 $generated@@503) $generated@@504) ($generated@@78 ($generated@@76 $generated@@478 $generated@@503) $generated@@504)) ($generated@@0 ($generated@@153 $generated@@479 $generated@@503 $generated@@504)))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@457 $generated@@503) $generated@@504))
))) (and (<= (+ $generated@@454 $generated@@455) $generated@@476) (=> (= (+ $generated@@454 $generated@@455) $generated@@476) true))))) (and (=> (= (ControlFlow 0 51) 1) $generated@@500) (=> (= (ControlFlow 0 51) 50) $generated@@499))))))
(let (($generated@@506  (=> (and (and (= ($generated@@445 $generated@@419) $generated@@419) (= ($generated@@445 $generated@@480) $generated@@480)) (and (= $generated@@479 ($generated@@154 $generated@@477 $generated@@478 $generated@@60 false)) (= $generated@@476 (+ $generated@@456 $generated@@458)))) (and (=> (= (ControlFlow 0 52) (- 0 55)) (=> $generated@@459 (< 0 $generated@@456))) (=> (=> $generated@@459 (< 0 $generated@@456)) (and (=> (= (ControlFlow 0 52) (- 0 54)) (=> $generated@@459 (< 0 $generated@@458))) (=> (=> $generated@@459 (< 0 $generated@@458)) (and (=> (= (ControlFlow 0 52) (- 0 53)) (=> $generated@@459 (= ($generated@@211 $generated@@456 $generated@@458) ($generated@@211 $generated@@456 $generated@@458)))) (=> (=> $generated@@459 (= ($generated@@211 $generated@@456 $generated@@458) ($generated@@211 $generated@@456 $generated@@458))) (=> (= (ControlFlow 0 52) 51) $generated@@501))))))))))
(let (($generated@@507  (=> (and ($generated@@212 $generated@@478) ($generated@@465 $generated@@478)) (=> (and (and (= 7 $generated@@127) (> $generated@@456 0)) (and (> $generated@@458 0) (= (ControlFlow 0 56) 52))) $generated@@506))))
$generated@@507))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (Int Int) Bool)
(declare-fun $generated@@214 (Int Int) Bool)
(declare-fun $generated@@215 (Int Int) Int)
(declare-fun $generated@@220 (Int Int) Int)
(declare-fun $generated@@228 (T@T) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@239 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 () T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@301 (Int Int Int) Bool)
(declare-fun $generated@@302 (Int Int Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) Int)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@446 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@146) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (and (= (type $generated@@148) $generated@@131) (or ($generated@@132 $generated@@149 $generated@@150) (and (not (= 1 $generated@@127)) (and (> $generated@@149 0) (> $generated@@150 0))))) (and (forall (($generated@@151 Int) ) (!  (=> (> $generated@@151 0) ($generated@@135 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@151 $generated@@149 $generated@@150))
)) (= ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150) (exists (($generated@@152 Int) ) (!  (and (> $generated@@152 0) ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@159 $generated@@160)) 13)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@157 ($generated@@155 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@155 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@157 (type $generated@@165))))
(= (type ($generated@@153 $generated@@165 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@153 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(let (($generated@@174 (type $generated@@170)))
(= (type ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172)) ($generated@@155 $generated@@174 $generated@@173))))
 :pattern ( ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@157 (type $generated@@175))))
 (=> (= (type $generated@@178) $generated@@179) (= ($generated@@153 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@176 $generated@@177) $generated@@178)))
 :weight 0
))) (and (and (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@153 ($generated@@158 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@153 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@153 ($generated@@158 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@153 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or true (= ($generated@@153 ($generated@@158 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@153 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ) (! (= (type ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@155 $generated@@72 $generated@@4))
 :pattern ( ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@64 (type $generated@@207))))
 (=> (and (and (and (and (= (type $generated@@202) $generated@@72) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@204) ($generated@@63 $generated@@4))) (= (type $generated@@206) $generated@@72)) (= (type $generated@@207) ($generated@@63 $generated@@208))) (= ($generated@@0 ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (not (= $generated@@206 $generated@@202)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@203 $generated@@206) $generated@@204))) $generated@@205))))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@130 $generated@@209) $generated@@209)
 :pattern ( ($generated@@130 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@133 $generated@@210) $generated@@210)
 :pattern ( ($generated@@133 $generated@@210))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ($generated@@218 Int) ) (!  (=> (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@216) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@217 0) (> $generated@@218 0))))))))) (and ($generated@@214 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (= ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (let (($generated@@219 ($generated@@215 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218))))
$generated@@219))))
 :weight 3
 :pattern ( ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) ($generated@@212 $generated@@216))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (or ($generated@@135 $generated@@221 $generated@@222 $generated@@223) (and (not (= 0 $generated@@127)) (and (> $generated@@221 0) (> $generated@@222 0)))) (= ($generated@@134 $generated@@221 $generated@@222 $generated@@223) (= ($generated@@220 $generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@134 $generated@@221 $generated@@222 $generated@@223))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 $generated@@225 $generated@@226) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@224) (and (> $generated@@225 0) (> $generated@@226 0)))))) (and ($generated@@214 $generated@@225 $generated@@226) (= ($generated@@211 $generated@@225 $generated@@226) (let (($generated@@227 ($generated@@215 $generated@@225 $generated@@226)))
$generated@@227))))
 :pattern ( ($generated@@211 $generated@@225 $generated@@226) ($generated@@212 $generated@@224))
))))
(assert  (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@232)) 14)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
))) (forall (($generated@@234 T@T) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@230 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@235)) 0)
 :pattern ( ($generated@@228 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (= (type $generated@@236) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238) ($generated@@128 $generated@@236 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
)))
(assert  (and (= ($generated@@1 $generated@@241) 15) (forall (($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@61) (= (type $generated@@245) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245) ($generated@@69 $generated@@243 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@248) $generated@@241)) (= (type $generated@@249) $generated@@61)) ($generated@@144 $generated@@246 $generated@@247)) ($generated@@239 $generated@@248 $generated@@249 $generated@@246)) ($generated@@239 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@144 $generated@@246 $generated@@247) ($generated@@239 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@250) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@251) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@253) $generated@@61)) ($generated@@144 $generated@@250 $generated@@251)) ($generated@@69 $generated@@252 $generated@@253 $generated@@250)) ($generated@@69 $generated@@252 $generated@@253 $generated@@251))
 :pattern ( ($generated@@144 $generated@@250 $generated@@251) ($generated@@69 $generated@@252 $generated@@253 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 16)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 17)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@71 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@258 (type $generated@@290))))
(let (($generated@@292 ($generated@@257 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@256 $generated@@292 $generated@@291)) (or (= $generated@@290 ($generated@@255 $generated@@292 $generated@@291)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@290) $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@254 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@276 (type $generated@@294))))
(let (($generated@@296 ($generated@@275 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@274 $generated@@296 $generated@@295)) (or (= $generated@@294 ($generated@@273 $generated@@296 $generated@@295)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@294) $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@272 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@298 Int) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (or ($generated@@135 $generated@@298 $generated@@299 $generated@@300) (and (not (= 0 $generated@@127)) (and (> $generated@@298 0) (> $generated@@299 0)))) true)
 :pattern ( ($generated@@134 $generated@@298 $generated@@299 $generated@@300))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@303 Int) ($generated@@304 Int) ($generated@@305 Int) ) (!  (=> (or ($generated@@302 $generated@@303 $generated@@304 $generated@@305) (and (not (= 2 $generated@@127)) (and (> $generated@@304 0) (> $generated@@305 0)))) true)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 Int) ($generated@@307 Int) ) (!  (=> ($generated@@214 $generated@@306 $generated@@307) (and ($generated@@301 ($generated@@215 $generated@@306 $generated@@307) $generated@@306 $generated@@307) (forall (($generated@@308 Int) ) (!  (=> true (=> ($generated@@301 $generated@@308 $generated@@306 $generated@@307) (<= $generated@@308 ($generated@@215 $generated@@306 $generated@@307))))
 :pattern ( ($generated@@301 $generated@@308 $generated@@306 $generated@@307))
))))
 :pattern ( ($generated@@215 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@241) ($generated@@0 ($generated@@76 $generated@@311 $generated@@314))) ($generated@@239 $generated@@314 $generated@@312 $generated@@313))
 :pattern ( ($generated@@76 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@241) ($generated@@0 ($generated@@76 $generated@@317 $generated@@320))) ($generated@@239 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@76 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@321) $generated@@131) (or ($generated@@132 $generated@@322 $generated@@323) (and (not (= 1 $generated@@127)) (and (> $generated@@322 0) (> $generated@@323 0))))) true)
 :pattern ( ($generated@@128 $generated@@321 $generated@@322 $generated@@323))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@324 Int) ($generated@@325 Int) ) (!  (=> (or ($generated@@213 $generated@@324 $generated@@325) (and (not (= 5 $generated@@127)) (and (> $generated@@324 0) (> $generated@@325 0)))) true)
 :pattern ( ($generated@@211 $generated@@324 $generated@@325))
))))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@258 (type $generated@@330))))
(let (($generated@@332 ($generated@@257 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@256 $generated@@241 $generated@@241)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))) (and ($generated@@239 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@239 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert  (and (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= (type ($generated@@338 $generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340 $generated@@341))
)) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@276 (type $generated@@342))))
(let (($generated@@344 ($generated@@275 (type $generated@@342))))
(= (type ($generated@@339 $generated@@342)) ($generated@@71 $generated@@344 $generated@@343))))
 :pattern ( ($generated@@339 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (= (type $generated@@345) ($generated@@274 $generated@@241 $generated@@241)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) $generated@@61)) (= (type $generated@@348) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))) (and ($generated@@239 ($generated@@76 ($generated@@339 $generated@@345) $generated@@349) $generated@@347 $generated@@348) ($generated@@239 $generated@@349 $generated@@346 $generated@@348)))
 :pattern ( ($generated@@76 ($generated@@339 $generated@@345) $generated@@349))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))
))))
 :pattern ( ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@350 $generated@@352))) (and ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))) ($generated@@144 $generated@@350 $generated@@352))
 :pattern ( ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@71 $generated@@354 $generated@@4))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@276 (type $generated@@355))))
(let (($generated@@357 ($generated@@275 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@274 $generated@@357 $generated@@356)) (= (= $generated@@355 ($generated@@273 $generated@@357 $generated@@356)) (= ($generated@@272 $generated@@355) ($generated@@353 $generated@@357))))))
 :pattern ( ($generated@@272 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@231 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@230 $generated@@359)) (<= 0 ($generated@@229 $generated@@358))))
 :pattern ( ($generated@@229 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@61) (= (type $generated@@363) $generated@@61)) (= ($generated@@360 ($generated@@326 $generated@@362 $generated@@363)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@61) (= (type $generated@@367) $generated@@61)) (= ($generated@@364 ($generated@@326 $generated@@366 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@326 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@368 $generated@@369)) $generated@@58))
 :pattern ( ($generated@@326 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@61) (= (type $generated@@373) $generated@@61)) (= ($generated@@370 ($generated@@338 $generated@@372 $generated@@373)) $generated@@372))
 :pattern ( ($generated@@338 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@374 ($generated@@338 $generated@@376 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@338 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@61) (= (type $generated@@379) $generated@@61)) (= ($generated@@67 ($generated@@338 $generated@@378 $generated@@379)) $generated@@59))
 :pattern ( ($generated@@338 $generated@@378 $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ($generated@@384 Int) ) (! (let (($generated@@385 ($generated@@231 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@230 $generated@@241)) (= (type $generated@@387) $generated@@61)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388) (forall (($generated@@389 Int) ) (!  (=> (and (<= 0 $generated@@389) (< $generated@@389 ($generated@@229 $generated@@386))) ($generated@@239 ($generated@@381 $generated@@386 $generated@@389) $generated@@387 $generated@@388))
 :pattern ( ($generated@@381 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@390 ($generated@@70 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@70 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@392 ($generated@@309 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@309 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@67 ($generated@@309 $generated@@395)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) $generated@@61)
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@61) (= ($generated@@396 ($generated@@315 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@315 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@399)) $generated@@55))
 :pattern ( ($generated@@315 $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@61) (= ($generated@@401 ($generated@@400 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@61) (= ($generated@@67 ($generated@@400 $generated@@405)) $generated@@56))
 :pattern ( ($generated@@400 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@61)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@61) (= ($generated@@406 ($generated@@380 $generated@@408)) $generated@@408))
 :pattern ( ($generated@@380 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@61) (= ($generated@@67 ($generated@@380 $generated@@409)) $generated@@57))
 :pattern ( ($generated@@380 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated@@410 $generated@@414 ($generated@@240 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@240 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (not ($generated@@0 ($generated@@76 ($generated@@353 $generated@@416) $generated@@415))))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@76 ($generated@@353 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Int) ) (! (= ($generated@@220 $generated@@417 $generated@@418) (* $generated@@417 $generated@@418))
 :pattern ( ($generated@@220 $generated@@417 $generated@@418))
)))
(assert (= (type $generated@@419) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@420 Int) ($generated@@421 Int) ($generated@@422 Int) ) (!  (=> (or ($generated@@302 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@421 0) (> $generated@@422 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@420 0)))) (and ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) (=> ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))) (= ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422))  (and (and (> $generated@@420 0) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421))) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@71 $generated@@241 $generated@@2)) (= (type $generated@@424) $generated@@61)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@241) (< 0 ($generated ($generated@@76 $generated@@423 $generated@@426)))) ($generated@@239 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@76 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))) ($generated@@133 ($generated@@240 ($generated@@8 $generated@@427))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))))
)))
(assert (forall (($generated@@428 T@U) ) (! (= ($generated@@240 ($generated@@133 $generated@@428)) ($generated@@133 ($generated@@240 $generated@@428)))
 :pattern ( ($generated@@240 ($generated@@133 $generated@@428)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@231 (type $generated@@429))))
 (=> (and (= (type $generated@@429) ($generated@@230 $generated@@430)) (= ($generated@@229 $generated@@429) 0)) (= $generated@@429 ($generated@@228 $generated@@430))))
 :pattern ( ($generated@@229 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@432) $generated@@2)) ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
 :pattern ( ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@434) $generated@@3)) ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
 :pattern ( ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@436) $generated@@4)) ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
 :pattern ( ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
)))
(assert (= ($generated@@1 $generated@@437) 18))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@437)) ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@241)) ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@442 Int) ($generated@@443 Int) ($generated@@444 Int) ) (!  (=> (or ($generated@@302 $generated@@442 $generated@@443 $generated@@444) (and (not (= 2 $generated@@127)) (and (> $generated@@443 0) (> $generated@@444 0)))) (and (=> (> $generated@@442 0) (and ($generated@@132 $generated@@442 $generated@@443) (=> ($generated@@128 $generated@@419 $generated@@442 $generated@@443) ($generated@@132 $generated@@442 $generated@@444)))) (= ($generated@@301 $generated@@442 $generated@@443 $generated@@444)  (and (and (> $generated@@442 0) ($generated@@128 $generated@@419 $generated@@442 $generated@@443)) ($generated@@128 $generated@@419 $generated@@442 $generated@@444)))))
 :pattern ( ($generated@@301 $generated@@442 $generated@@443 $generated@@444))
))))
(assert  (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@447)) $generated@@131)
 :pattern ( ($generated@@445 $generated@@447))
)) (= (type $generated@@446) $generated@@131)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 Int) ) (!  (=> (= (type $generated@@448) $generated@@131) (= ($generated@@128 $generated@@448 $generated@@449 $generated@@450) ($generated@@128 $generated@@446 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@128 ($generated@@445 $generated@@448) $generated@@449 $generated@@450))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@451 Int) ($generated@@452 Int) ($generated@@453 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@451 0) (> $generated@@452 0))))))) (= ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (= ($generated@@130 ($generated@@220 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452))) ($generated@@130 $generated@@453))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@454 () T@U)
(declare-fun $generated@@455 () T@U)
(declare-fun $generated@@456 () T@U)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Int)
(declare-fun $generated@@460 () T@U)
(declare-fun $generated@@461 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@454) $generated@@131) (= (type $generated@@455) ($generated@@155 $generated@@72 $generated@@4))) (= (type $generated@@456) $generated@@72)) (= (type $generated@@457) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@460) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@462  (=> (= ($generated@@445 $generated@@419) $generated@@419) (=> (and (= ($generated@@445 $generated@@454) $generated@@454) (= $generated@@455 ($generated@@154 $generated@@456 $generated@@457 $generated@@60 false))) (=> (and (and (and (> $generated@@458 0) (> $generated@@459 0)) (and ($generated@@212 $generated@@460) ($generated@@461 $generated@@460))) (and (and (forall (($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@72) (=> (and (not (= $generated@@463 $generated@@456)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@457 $generated@@463) $generated@@60))) (= ($generated@@76 $generated@@460 $generated@@463) ($generated@@76 $generated@@457 $generated@@463))))
 :pattern ( ($generated@@76 $generated@@460 $generated@@463))
)) ($generated@@144 $generated@@457 $generated@@460)) (and ($generated@@69 ($generated@@8 $generated@@458) $generated@@46 $generated@@460) ($generated@@69 ($generated@@8 $generated@@459) $generated@@46 $generated@@460)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@458 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@459 0))))))))
(let (($generated@@464  (=> (and (and ($generated@@212 $generated@@457) ($generated@@461 $generated@@457)) (and (= 7 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@462)))
$generated@@464)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (Int Int) Bool)
(declare-fun $generated@@214 (Int Int) Bool)
(declare-fun $generated@@215 (Int Int) Int)
(declare-fun $generated@@220 (Int Int) Int)
(declare-fun $generated@@228 (T@T) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@239 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 () T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@301 (Int Int Int) Bool)
(declare-fun $generated@@302 (Int Int Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) Int)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@446 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@146) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (and (= (type $generated@@148) $generated@@131) (or ($generated@@132 $generated@@149 $generated@@150) (and (not (= 1 $generated@@127)) (and (> $generated@@149 0) (> $generated@@150 0))))) (and (forall (($generated@@151 Int) ) (!  (=> (> $generated@@151 0) ($generated@@135 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@151 $generated@@149 $generated@@150))
)) (= ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150) (exists (($generated@@152 Int) ) (!  (and (> $generated@@152 0) ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@159 $generated@@160)) 13)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@157 ($generated@@155 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@155 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@157 (type $generated@@165))))
(= (type ($generated@@153 $generated@@165 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@153 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(let (($generated@@174 (type $generated@@170)))
(= (type ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172)) ($generated@@155 $generated@@174 $generated@@173))))
 :pattern ( ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@157 (type $generated@@175))))
 (=> (= (type $generated@@178) $generated@@179) (= ($generated@@153 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@176 $generated@@177) $generated@@178)))
 :weight 0
))) (and (and (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@153 ($generated@@158 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@153 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@153 ($generated@@158 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@153 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or true (= ($generated@@153 ($generated@@158 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@153 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ) (! (= (type ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@155 $generated@@72 $generated@@4))
 :pattern ( ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@64 (type $generated@@207))))
 (=> (and (and (and (and (= (type $generated@@202) $generated@@72) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@204) ($generated@@63 $generated@@4))) (= (type $generated@@206) $generated@@72)) (= (type $generated@@207) ($generated@@63 $generated@@208))) (= ($generated@@0 ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (not (= $generated@@206 $generated@@202)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@203 $generated@@206) $generated@@204))) $generated@@205))))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@130 $generated@@209) $generated@@209)
 :pattern ( ($generated@@130 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@133 $generated@@210) $generated@@210)
 :pattern ( ($generated@@133 $generated@@210))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ($generated@@218 Int) ) (!  (=> (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@216) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@217 0) (> $generated@@218 0))))))))) (and ($generated@@214 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (= ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (let (($generated@@219 ($generated@@215 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218))))
$generated@@219))))
 :weight 3
 :pattern ( ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) ($generated@@212 $generated@@216))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (or ($generated@@135 $generated@@221 $generated@@222 $generated@@223) (and (not (= 0 $generated@@127)) (and (> $generated@@221 0) (> $generated@@222 0)))) (= ($generated@@134 $generated@@221 $generated@@222 $generated@@223) (= ($generated@@220 $generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@134 $generated@@221 $generated@@222 $generated@@223))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 $generated@@225 $generated@@226) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@224) (and (> $generated@@225 0) (> $generated@@226 0)))))) (and ($generated@@214 $generated@@225 $generated@@226) (= ($generated@@211 $generated@@225 $generated@@226) (let (($generated@@227 ($generated@@215 $generated@@225 $generated@@226)))
$generated@@227))))
 :pattern ( ($generated@@211 $generated@@225 $generated@@226) ($generated@@212 $generated@@224))
))))
(assert  (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@232)) 14)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
))) (forall (($generated@@234 T@T) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@230 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@235)) 0)
 :pattern ( ($generated@@228 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (= (type $generated@@236) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238) ($generated@@128 $generated@@236 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
)))
(assert  (and (= ($generated@@1 $generated@@241) 15) (forall (($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@61) (= (type $generated@@245) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245) ($generated@@69 $generated@@243 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@248) $generated@@241)) (= (type $generated@@249) $generated@@61)) ($generated@@144 $generated@@246 $generated@@247)) ($generated@@239 $generated@@248 $generated@@249 $generated@@246)) ($generated@@239 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@144 $generated@@246 $generated@@247) ($generated@@239 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@250) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@251) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@253) $generated@@61)) ($generated@@144 $generated@@250 $generated@@251)) ($generated@@69 $generated@@252 $generated@@253 $generated@@250)) ($generated@@69 $generated@@252 $generated@@253 $generated@@251))
 :pattern ( ($generated@@144 $generated@@250 $generated@@251) ($generated@@69 $generated@@252 $generated@@253 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 16)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 17)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@71 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@258 (type $generated@@290))))
(let (($generated@@292 ($generated@@257 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@256 $generated@@292 $generated@@291)) (or (= $generated@@290 ($generated@@255 $generated@@292 $generated@@291)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@290) $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@254 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@276 (type $generated@@294))))
(let (($generated@@296 ($generated@@275 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@274 $generated@@296 $generated@@295)) (or (= $generated@@294 ($generated@@273 $generated@@296 $generated@@295)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@294) $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@272 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@298 Int) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (or ($generated@@135 $generated@@298 $generated@@299 $generated@@300) (and (not (= 0 $generated@@127)) (and (> $generated@@298 0) (> $generated@@299 0)))) true)
 :pattern ( ($generated@@134 $generated@@298 $generated@@299 $generated@@300))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@303 Int) ($generated@@304 Int) ($generated@@305 Int) ) (!  (=> (or ($generated@@302 $generated@@303 $generated@@304 $generated@@305) (and (not (= 2 $generated@@127)) (and (> $generated@@304 0) (> $generated@@305 0)))) true)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 Int) ($generated@@307 Int) ) (!  (=> ($generated@@214 $generated@@306 $generated@@307) (and ($generated@@301 ($generated@@215 $generated@@306 $generated@@307) $generated@@306 $generated@@307) (forall (($generated@@308 Int) ) (!  (=> true (=> ($generated@@301 $generated@@308 $generated@@306 $generated@@307) (<= $generated@@308 ($generated@@215 $generated@@306 $generated@@307))))
 :pattern ( ($generated@@301 $generated@@308 $generated@@306 $generated@@307))
))))
 :pattern ( ($generated@@215 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@241) ($generated@@0 ($generated@@76 $generated@@311 $generated@@314))) ($generated@@239 $generated@@314 $generated@@312 $generated@@313))
 :pattern ( ($generated@@76 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@241) ($generated@@0 ($generated@@76 $generated@@317 $generated@@320))) ($generated@@239 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@76 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@321) $generated@@131) (or ($generated@@132 $generated@@322 $generated@@323) (and (not (= 1 $generated@@127)) (and (> $generated@@322 0) (> $generated@@323 0))))) true)
 :pattern ( ($generated@@128 $generated@@321 $generated@@322 $generated@@323))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@324 Int) ($generated@@325 Int) ) (!  (=> (or ($generated@@213 $generated@@324 $generated@@325) (and (not (= 5 $generated@@127)) (and (> $generated@@324 0) (> $generated@@325 0)))) true)
 :pattern ( ($generated@@211 $generated@@324 $generated@@325))
))))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@258 (type $generated@@330))))
(let (($generated@@332 ($generated@@257 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@256 $generated@@241 $generated@@241)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))) (and ($generated@@239 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@239 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert  (and (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= (type ($generated@@338 $generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340 $generated@@341))
)) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@276 (type $generated@@342))))
(let (($generated@@344 ($generated@@275 (type $generated@@342))))
(= (type ($generated@@339 $generated@@342)) ($generated@@71 $generated@@344 $generated@@343))))
 :pattern ( ($generated@@339 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (= (type $generated@@345) ($generated@@274 $generated@@241 $generated@@241)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) $generated@@61)) (= (type $generated@@348) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))) (and ($generated@@239 ($generated@@76 ($generated@@339 $generated@@345) $generated@@349) $generated@@347 $generated@@348) ($generated@@239 $generated@@349 $generated@@346 $generated@@348)))
 :pattern ( ($generated@@76 ($generated@@339 $generated@@345) $generated@@349))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))
))))
 :pattern ( ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@350 $generated@@352))) (and ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))) ($generated@@144 $generated@@350 $generated@@352))
 :pattern ( ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@71 $generated@@354 $generated@@4))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@276 (type $generated@@355))))
(let (($generated@@357 ($generated@@275 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@274 $generated@@357 $generated@@356)) (= (= $generated@@355 ($generated@@273 $generated@@357 $generated@@356)) (= ($generated@@272 $generated@@355) ($generated@@353 $generated@@357))))))
 :pattern ( ($generated@@272 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@231 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@230 $generated@@359)) (<= 0 ($generated@@229 $generated@@358))))
 :pattern ( ($generated@@229 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@61) (= (type $generated@@363) $generated@@61)) (= ($generated@@360 ($generated@@326 $generated@@362 $generated@@363)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@61) (= (type $generated@@367) $generated@@61)) (= ($generated@@364 ($generated@@326 $generated@@366 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@326 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@368 $generated@@369)) $generated@@58))
 :pattern ( ($generated@@326 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@61) (= (type $generated@@373) $generated@@61)) (= ($generated@@370 ($generated@@338 $generated@@372 $generated@@373)) $generated@@372))
 :pattern ( ($generated@@338 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@374 ($generated@@338 $generated@@376 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@338 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@61) (= (type $generated@@379) $generated@@61)) (= ($generated@@67 ($generated@@338 $generated@@378 $generated@@379)) $generated@@59))
 :pattern ( ($generated@@338 $generated@@378 $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ($generated@@384 Int) ) (! (let (($generated@@385 ($generated@@231 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@230 $generated@@241)) (= (type $generated@@387) $generated@@61)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388) (forall (($generated@@389 Int) ) (!  (=> (and (<= 0 $generated@@389) (< $generated@@389 ($generated@@229 $generated@@386))) ($generated@@239 ($generated@@381 $generated@@386 $generated@@389) $generated@@387 $generated@@388))
 :pattern ( ($generated@@381 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@390 ($generated@@70 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@70 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@392 ($generated@@309 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@309 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@67 ($generated@@309 $generated@@395)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) $generated@@61)
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@61) (= ($generated@@396 ($generated@@315 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@315 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@399)) $generated@@55))
 :pattern ( ($generated@@315 $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@61) (= ($generated@@401 ($generated@@400 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@61) (= ($generated@@67 ($generated@@400 $generated@@405)) $generated@@56))
 :pattern ( ($generated@@400 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@61)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@61) (= ($generated@@406 ($generated@@380 $generated@@408)) $generated@@408))
 :pattern ( ($generated@@380 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@61) (= ($generated@@67 ($generated@@380 $generated@@409)) $generated@@57))
 :pattern ( ($generated@@380 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated@@410 $generated@@414 ($generated@@240 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@240 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (not ($generated@@0 ($generated@@76 ($generated@@353 $generated@@416) $generated@@415))))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@76 ($generated@@353 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Int) ) (! (= ($generated@@220 $generated@@417 $generated@@418) (* $generated@@417 $generated@@418))
 :pattern ( ($generated@@220 $generated@@417 $generated@@418))
)))
(assert (= (type $generated@@419) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@420 Int) ($generated@@421 Int) ($generated@@422 Int) ) (!  (=> (or ($generated@@302 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@421 0) (> $generated@@422 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@420 0)))) (and ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) (=> ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))) (= ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422))  (and (and (> $generated@@420 0) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421))) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@71 $generated@@241 $generated@@2)) (= (type $generated@@424) $generated@@61)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@241) (< 0 ($generated ($generated@@76 $generated@@423 $generated@@426)))) ($generated@@239 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@76 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))) ($generated@@133 ($generated@@240 ($generated@@8 $generated@@427))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))))
)))
(assert (forall (($generated@@428 T@U) ) (! (= ($generated@@240 ($generated@@133 $generated@@428)) ($generated@@133 ($generated@@240 $generated@@428)))
 :pattern ( ($generated@@240 ($generated@@133 $generated@@428)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@231 (type $generated@@429))))
 (=> (and (= (type $generated@@429) ($generated@@230 $generated@@430)) (= ($generated@@229 $generated@@429) 0)) (= $generated@@429 ($generated@@228 $generated@@430))))
 :pattern ( ($generated@@229 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@432) $generated@@2)) ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
 :pattern ( ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@434) $generated@@3)) ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
 :pattern ( ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@436) $generated@@4)) ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
 :pattern ( ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
)))
(assert (= ($generated@@1 $generated@@437) 18))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@437)) ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@241)) ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@442 Int) ($generated@@443 Int) ($generated@@444 Int) ) (!  (=> (or ($generated@@302 $generated@@442 $generated@@443 $generated@@444) (and (not (= 2 $generated@@127)) (and (> $generated@@443 0) (> $generated@@444 0)))) (and (=> (> $generated@@442 0) (and ($generated@@132 $generated@@442 $generated@@443) (=> ($generated@@128 $generated@@419 $generated@@442 $generated@@443) ($generated@@132 $generated@@442 $generated@@444)))) (= ($generated@@301 $generated@@442 $generated@@443 $generated@@444)  (and (and (> $generated@@442 0) ($generated@@128 $generated@@419 $generated@@442 $generated@@443)) ($generated@@128 $generated@@419 $generated@@442 $generated@@444)))))
 :pattern ( ($generated@@301 $generated@@442 $generated@@443 $generated@@444))
))))
(assert  (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@447)) $generated@@131)
 :pattern ( ($generated@@445 $generated@@447))
)) (= (type $generated@@446) $generated@@131)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 Int) ) (!  (=> (= (type $generated@@448) $generated@@131) (= ($generated@@128 $generated@@448 $generated@@449 $generated@@450) ($generated@@128 $generated@@446 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@128 ($generated@@445 $generated@@448) $generated@@449 $generated@@450))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@451 Int) ($generated@@452 Int) ($generated@@453 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@451 0) (> $generated@@452 0))))))) (= ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (= ($generated@@130 ($generated@@220 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452))) ($generated@@130 $generated@@453))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@454 () Int)
(declare-fun $generated@@455 () Int)
(declare-fun $generated@@456 () Int)
(declare-fun $generated@@457 () Int)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Int)
(declare-fun $generated@@460 () Int)
(declare-fun $generated@@461 () Int)
(declare-fun $generated@@462 () Int)
(declare-fun $generated@@463 () T@U)
(declare-fun $generated@@464 () Int)
(declare-fun $generated@@465 () Bool)
(declare-fun $generated@@466 () Int)
(declare-fun $generated@@467 () T@U)
(declare-fun $generated@@468 (T@U) Bool)
(declare-fun $generated@@469 () Int)
(declare-fun $generated@@470 () Int)
(declare-fun $generated@@471 () Int)
(declare-fun $generated@@472 () Int)
(declare-fun $generated@@473 () Int)
(declare-fun $generated@@474 () Int)
(declare-fun $generated@@475 () Int)
(declare-fun $generated@@476 () Int)
(declare-fun $generated@@477 () Int)
(declare-fun $generated@@478 () Int)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@480 () T@U)
(declare-fun $generated@@481 () Int)
(declare-fun $generated@@482 () T@U)
(declare-fun $generated@@483 () Int)
(declare-fun $generated@@484 () Int)
(declare-fun $generated@@485 () Int)
(declare-fun $generated@@486 () Int)
(declare-fun $generated@@487 () T@U)
(declare-fun $generated@@488 () Int)
(declare-fun $generated@@489 () Int)
(declare-fun $generated@@490 () Int)
(declare-fun $generated@@491 () Int)
(declare-fun $generated@@492 () Int)
(declare-fun $generated@@493 () Int)
(declare-fun $generated@@494 () T@U)
(declare-fun $generated@@495 () T@U)
(declare-fun $generated@@496 () T@U)
(declare-fun $generated@@497 () T@U)
(declare-fun $generated@@498 () Int)
(declare-fun $generated@@499 () Int)
(declare-fun $generated@@500 () Int)
(declare-fun $generated@@501 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@487) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@463) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@479) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@480) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@482) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@467) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@494) $generated@@72)) (= (type $generated@@495) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@496) ($generated@@155 $generated@@72 $generated@@4))) (= (type $generated@@497) $generated@@131)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 107) (let (($generated@@502 true))
(let (($generated@@503  (=> (and (not (= $generated@@454 ($generated@@130 2))) (= (ControlFlow 0 58) 55)) $generated@@502)))
(let (($generated@@504  (=> (and (= $generated@@454 ($generated@@130 2)) (= (ControlFlow 0 57) 55)) $generated@@502)))
(let (($generated@@505  (=> (=> (= $generated@@455 ($generated@@130 2)) (= $generated@@456 $generated@@457)) (and (=> (= (ControlFlow 0 59) 57) $generated@@504) (=> (= (ControlFlow 0 59) 58) $generated@@503)))))
(let (($generated@@506  (=> (and (not (=> (= $generated@@455 ($generated@@130 2)) (= $generated@@456 $generated@@457))) (= (ControlFlow 0 56) 55)) $generated@@502)))
(let (($generated@@507  (=> (not (= $generated@@455 ($generated@@130 2))) (and (=> (= (ControlFlow 0 61) 59) $generated@@505) (=> (= (ControlFlow 0 61) 56) $generated@@506)))))
(let (($generated@@508  (=> (= $generated@@455 ($generated@@130 2)) (and (=> (= (ControlFlow 0 60) 59) $generated@@505) (=> (= (ControlFlow 0 60) 56) $generated@@506)))))
(let (($generated@@509  (=> (=> (and (= $generated@@454 ($generated@@130 1)) (<= $generated@@458 $generated@@459)) (and (= $generated@@458 $generated@@456) (= $generated@@459 $generated@@457))) (and (=> (= (ControlFlow 0 62) 60) $generated@@508) (=> (= (ControlFlow 0 62) 61) $generated@@507)))))
(let (($generated@@510  (=> (and (not (= $generated@@458 $generated@@456)) (= (ControlFlow 0 65) 62)) $generated@@509)))
(let (($generated@@511  (=> (and (= $generated@@458 $generated@@456) (= (ControlFlow 0 64) 62)) $generated@@509)))
(let (($generated@@512  (=> (and (= $generated@@454 ($generated@@130 1)) (<= $generated@@458 $generated@@459)) (and (=> (= (ControlFlow 0 66) 64) $generated@@511) (=> (= (ControlFlow 0 66) 65) $generated@@510)))))
(let (($generated@@513  (=> (and (not (and (= $generated@@454 ($generated@@130 1)) (<= $generated@@458 $generated@@459))) (= (ControlFlow 0 63) 62)) $generated@@509)))
(let (($generated@@514  (=> (not (= $generated@@454 ($generated@@130 1))) (and (=> (= (ControlFlow 0 68) 66) $generated@@512) (=> (= (ControlFlow 0 68) 63) $generated@@513)))))
(let (($generated@@515  (=> (= $generated@@454 ($generated@@130 1)) (and (=> (= (ControlFlow 0 67) 66) $generated@@512) (=> (= (ControlFlow 0 67) 63) $generated@@513)))))
(let (($generated@@516  (=> (=> (and (= $generated@@455 ($generated@@130 1)) (<= $generated@@460 $generated@@461)) (and (= $generated@@461 $generated@@456) (= $generated@@460 $generated@@457))) (and (=> (= (ControlFlow 0 69) 67) $generated@@515) (=> (= (ControlFlow 0 69) 68) $generated@@514)))))
(let (($generated@@517  (=> (and (not (= $generated@@461 $generated@@456)) (= (ControlFlow 0 72) 69)) $generated@@516)))
(let (($generated@@518  (=> (and (= $generated@@461 $generated@@456) (= (ControlFlow 0 71) 69)) $generated@@516)))
(let (($generated@@519  (=> (and (= $generated@@455 ($generated@@130 1)) (<= $generated@@460 $generated@@461)) (and (=> (= (ControlFlow 0 73) 71) $generated@@518) (=> (= (ControlFlow 0 73) 72) $generated@@517)))))
(let (($generated@@520  (=> (and (not (and (= $generated@@455 ($generated@@130 1)) (<= $generated@@460 $generated@@461))) (= (ControlFlow 0 70) 69)) $generated@@516)))
(let (($generated@@521  (=> (not (= $generated@@455 ($generated@@130 1))) (and (=> (= (ControlFlow 0 75) 73) $generated@@519) (=> (= (ControlFlow 0 75) 70) $generated@@520)))))
(let (($generated@@522  (=> (= $generated@@455 ($generated@@130 1)) (and (=> (= (ControlFlow 0 74) 73) $generated@@519) (=> (= (ControlFlow 0 74) 70) $generated@@520)))))
(let (($generated@@523  (=> (and (and (<= ($generated@@130 0) $generated@@455) (< $generated@@455 3)) (and (<= ($generated@@130 0) $generated@@454) (< $generated@@454 3))) (and (=> (= (ControlFlow 0 76) 74) $generated@@522) (=> (= (ControlFlow 0 76) 75) $generated@@521)))))
(let (($generated@@524  (=> (and (< $generated@@454 ($generated@@130 0)) (= (ControlFlow 0 79) 76)) $generated@@523)))
(let (($generated@@525  (=> (and (<= ($generated@@130 0) $generated@@454) (= (ControlFlow 0 78) 76)) $generated@@523)))
(let (($generated@@526  (=> (and (<= ($generated@@130 0) $generated@@455) (< $generated@@455 3)) (and (=> (= (ControlFlow 0 80) 78) $generated@@525) (=> (= (ControlFlow 0 80) 79) $generated@@524)))))
(let (($generated@@527  (=> (and (not (and (<= ($generated@@130 0) $generated@@455) (< $generated@@455 3))) (= (ControlFlow 0 77) 76)) $generated@@523)))
(let (($generated@@528  (=> (< $generated@@455 ($generated@@130 0)) (and (=> (= (ControlFlow 0 82) 80) $generated@@526) (=> (= (ControlFlow 0 82) 77) $generated@@527)))))
(let (($generated@@529  (=> (<= ($generated@@130 0) $generated@@455) (and (=> (= (ControlFlow 0 81) 80) $generated@@526) (=> (= (ControlFlow 0 81) 77) $generated@@527)))))
(let (($generated@@530  (=> (and (and (< 0 $generated@@456) (< 0 $generated@@457)) (and ($generated@@69 ($generated@@8 $generated@@462) $generated@@46 $generated@@463) ($generated@@69 ($generated@@8 $generated@@464) $generated@@46 $generated@@463))) (and (=> (= (ControlFlow 0 83) (- 0 87)) (> $generated@@462 0)) (and (=> (= (ControlFlow 0 83) (- 0 86)) (> $generated@@464 0)) (=> ($generated@@213 $generated@@462 $generated@@464) (=> (and ($generated@@69 ($generated@@8 $generated@@456) $generated@@46 $generated@@463) ($generated@@69 ($generated@@8 $generated@@457) $generated@@46 $generated@@463)) (and (=> (= (ControlFlow 0 83) (- 0 85)) (> $generated@@456 0)) (and (=> (= (ControlFlow 0 83) (- 0 84)) (> $generated@@457 0)) (=> ($generated@@213 $generated@@456 $generated@@457) (=> (and (and ($generated@@213 $generated@@462 $generated@@464) ($generated@@213 $generated@@456 $generated@@457)) (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@456 $generated@@457))) (and (=> (= (ControlFlow 0 83) 81) $generated@@529) (=> (= (ControlFlow 0 83) 82) $generated@@528)))))))))))))
(let (($generated@@531  (=> (and (<= $generated@@456 0) (= (ControlFlow 0 89) 83)) $generated@@530)))
(let (($generated@@532  (=> (and (< 0 $generated@@456) (= (ControlFlow 0 88) 83)) $generated@@530)))
(let (($generated@@533  (=> (not $generated@@465) (and (=> (= (ControlFlow 0 90) 88) $generated@@532) (=> (= (ControlFlow 0 90) 89) $generated@@531)))))
(let (($generated@@534  (=> (= (ControlFlow 0 48) (- 0 47)) (= $generated@@466 ($generated@@211 $generated@@462 $generated@@464)))))
(let (($generated@@535  (=> (and (= $generated@@455 ($generated@@130 2)) (= $generated@@454 ($generated@@130 2))) (and (=> (= (ControlFlow 0 49) (- 0 50)) (> $generated@@456 0)) (=> (> $generated@@456 0) (=> (and (and (and ($generated@@212 $generated@@467) ($generated@@468 $generated@@467)) ($generated@@213 $generated@@456 $generated@@456)) (and (and (= ($generated@@211 $generated@@456 $generated@@456) $generated@@456) (= $generated@@463 $generated@@467)) (and (= $generated@@466 $generated@@456) (= (ControlFlow 0 49) 48)))) $generated@@534))))))
(let (($generated@@536  (=> (=> (< 0 $generated@@469) (=> (< 0 $generated@@470) (and ($generated@@213 $generated@@462 $generated@@464) ($generated@@213 $generated@@469 $generated@@470)))) (and (=> (= (ControlFlow 0 5) (- 0 17)) (=> $generated@@465 (< 0 $generated@@469))) (=> (=> $generated@@465 (< 0 $generated@@469)) (and (=> (= (ControlFlow 0 5) (- 0 16)) (=> $generated@@465 (< 0 $generated@@470))) (=> (=> $generated@@465 (< 0 $generated@@470)) (and (=> (= (ControlFlow 0 5) (- 0 15)) (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@469 $generated@@470)))) (=> (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@469 $generated@@470))) (and (=> (= (ControlFlow 0 5) (- 0 14)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@471))) (=> (=> $generated@@465 (<= ($generated@@130 0) $generated@@471)) (and (=> (= (ControlFlow 0 5) (- 0 13)) (=> $generated@@465 (< $generated@@471 3))) (=> (=> $generated@@465 (< $generated@@471 3)) (and (=> (= (ControlFlow 0 5) (- 0 12)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@472))) (=> (=> $generated@@465 (<= ($generated@@130 0) $generated@@472)) (and (=> (= (ControlFlow 0 5) (- 0 11)) (=> $generated@@465 (< $generated@@472 3))) (=> (=> $generated@@465 (< $generated@@472 3)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (=> $generated@@465 (=> (and (= $generated@@471 ($generated@@130 1)) (<= $generated@@473 $generated@@474)) (= $generated@@474 $generated@@469)))) (=> (=> $generated@@465 (=> (and (= $generated@@471 ($generated@@130 1)) (<= $generated@@473 $generated@@474)) (= $generated@@474 $generated@@469))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (=> $generated@@465 (=> (and (= $generated@@471 ($generated@@130 1)) (<= $generated@@473 $generated@@474)) (= $generated@@473 $generated@@470)))) (=> (=> $generated@@465 (=> (and (= $generated@@471 ($generated@@130 1)) (<= $generated@@473 $generated@@474)) (= $generated@@473 $generated@@470))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (=> $generated@@465 (=> (and (= $generated@@472 ($generated@@130 1)) (<= $generated@@475 $generated@@476)) (= $generated@@475 $generated@@469)))) (=> (=> $generated@@465 (=> (and (= $generated@@472 ($generated@@130 1)) (<= $generated@@475 $generated@@476)) (= $generated@@475 $generated@@469))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (=> $generated@@465 (=> (and (= $generated@@472 ($generated@@130 1)) (<= $generated@@475 $generated@@476)) (= $generated@@476 $generated@@470)))) (=> (=> $generated@@465 (=> (and (= $generated@@472 ($generated@@130 1)) (<= $generated@@475 $generated@@476)) (= $generated@@476 $generated@@470))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@465 (=> (= $generated@@471 ($generated@@130 2)) (= $generated@@469 $generated@@470)))) (=> (=> $generated@@465 (=> (= $generated@@471 ($generated@@130 2)) (= $generated@@469 $generated@@470))) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@465 (=> (= $generated@@472 ($generated@@130 2)) (= $generated@@469 $generated@@470)))))))))))))))))))))))))))))))
(let (($generated@@537  (=> (and (and (= $generated@@454 ($generated@@130 1)) (= $generated@@458 $generated@@459)) (and (= $generated@@477 ($generated@@130 2)) (= $generated@@472 $generated@@477))) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@475 $generated@@458)) (and (= $generated@@476 $generated@@459) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@474 $generated@@461)) (and (= $generated@@473 $generated@@460) (= (ControlFlow 0 43) 5)))) $generated@@536))))
(let (($generated@@538  (=> (and (not (= $generated@@454 ($generated@@130 1))) (= (ControlFlow 0 45) 43)) $generated@@537)))
(let (($generated@@539  (=> (and (= $generated@@454 ($generated@@130 1)) (= (ControlFlow 0 44) 43)) $generated@@537)))
(let (($generated@@540  (=> (and (and (= $generated@@454 ($generated@@130 1)) (> $generated@@458 $generated@@459)) (and (= $generated@@478 ($generated@@130 0)) (= $generated@@472 $generated@@478))) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@475 $generated@@458)) (and (= $generated@@476 $generated@@459) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@474 $generated@@461)) (and (= $generated@@473 $generated@@460) (= (ControlFlow 0 40) 5)))) $generated@@536))))
(let (($generated@@541  (=> (and (not (= $generated@@454 ($generated@@130 1))) (= (ControlFlow 0 42) 40)) $generated@@540)))
(let (($generated@@542  (=> (and (= $generated@@454 ($generated@@130 1)) (= (ControlFlow 0 41) 40)) $generated@@540)))
(let (($generated@@543  (=> (and (= $generated@@454 ($generated@@130 1)) (< $generated@@458 $generated@@459)) (and (=> (= (ControlFlow 0 31) (- 0 37)) (> $generated@@456 0)) (=> (> $generated@@456 0) (and (=> (= (ControlFlow 0 31) (- 0 36)) (> $generated@@457 0)) (=> (> $generated@@457 0) (=> (and ($generated@@212 $generated@@479) ($generated@@468 $generated@@479)) (=> (and (and ($generated@@213 $generated@@456 $generated@@457) ($generated@@213 $generated@@457 $generated@@456)) (and (= ($generated@@211 $generated@@456 $generated@@457) ($generated@@211 $generated@@457 $generated@@456)) (= $generated@@463 $generated@@479))) (and (=> (= (ControlFlow 0 31) (- 0 35)) (> $generated@@457 $generated@@456)) (=> (> $generated@@457 $generated@@456) (and (=> (= (ControlFlow 0 31) (- 0 34)) (> $generated@@456 0)) (=> (> $generated@@456 0) (=> (and ($generated@@212 $generated@@480) ($generated@@468 $generated@@480)) (=> (and (and (and ($generated@@213 $generated@@457 $generated@@456) ($generated@@213 (- $generated@@457 $generated@@456) $generated@@456)) (= ($generated@@211 $generated@@457 $generated@@456) ($generated@@211 (- $generated@@457 $generated@@456) $generated@@456))) (and (= $generated@@479 $generated@@480) (= $generated@@481 (- $generated@@457 $generated@@456)))) (and (=> (= (ControlFlow 0 31) (- 0 33)) (> $generated@@481 0)) (=> (> $generated@@481 0) (and (=> (= (ControlFlow 0 31) (- 0 32)) (> $generated@@456 0)) (=> (> $generated@@456 0) (=> (and ($generated@@212 $generated@@482) ($generated@@468 $generated@@482)) (=> (and (and (and (and ($generated@@213 $generated@@481 $generated@@456) ($generated@@213 $generated@@456 $generated@@481)) (= ($generated@@211 $generated@@481 $generated@@456) ($generated@@211 $generated@@456 $generated@@481))) (and (and (= $generated@@480 $generated@@482) (= $generated@@483 (- $generated@@459 $generated@@458))) (and (= $generated@@484 ($generated@@130 0)) (= $generated@@472 $generated@@484)))) (and (and (and (= $generated@@470 $generated@@483) (= $generated@@475 $generated@@458)) (and (= $generated@@476 $generated@@459) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@474 $generated@@461)) (and (= $generated@@473 $generated@@460) (= (ControlFlow 0 31) 5))))) $generated@@536)))))))))))))))))))))
(let (($generated@@544  (=> (and (not (= $generated@@454 ($generated@@130 1))) (= (ControlFlow 0 39) 31)) $generated@@543)))
(let (($generated@@545  (=> (and (= $generated@@454 ($generated@@130 1)) (= (ControlFlow 0 38) 31)) $generated@@543)))
(let (($generated@@546  (=> (and (and (= $generated@@455 ($generated@@130 1)) (= $generated@@460 $generated@@461)) (and (= $generated@@485 ($generated@@130 2)) (= $generated@@472 $generated@@454))) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@475 $generated@@458)) (and (= $generated@@476 $generated@@459) (= $generated@@471 $generated@@485))) (and (and (= $generated@@469 $generated@@456) (= $generated@@474 $generated@@461)) (and (= $generated@@473 $generated@@460) (= (ControlFlow 0 28) 5)))) $generated@@536))))
(let (($generated@@547  (=> (and (not (= $generated@@455 ($generated@@130 1))) (= (ControlFlow 0 30) 28)) $generated@@546)))
(let (($generated@@548  (=> (and (= $generated@@455 ($generated@@130 1)) (= (ControlFlow 0 29) 28)) $generated@@546)))
(let (($generated@@549  (=> (and (and (= $generated@@455 ($generated@@130 1)) (> $generated@@460 $generated@@461)) (and (= $generated@@486 ($generated@@130 0)) (= $generated@@472 $generated@@454))) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@475 $generated@@458)) (and (= $generated@@476 $generated@@459) (= $generated@@471 $generated@@486))) (and (and (= $generated@@469 $generated@@456) (= $generated@@474 $generated@@461)) (and (= $generated@@473 $generated@@460) (= (ControlFlow 0 25) 5)))) $generated@@536))))
(let (($generated@@550  (=> (and (not (= $generated@@455 ($generated@@130 1))) (= (ControlFlow 0 27) 25)) $generated@@549)))
(let (($generated@@551  (=> (and (= $generated@@455 ($generated@@130 1)) (= (ControlFlow 0 26) 25)) $generated@@549)))
(let (($generated@@552  (=> (and (= $generated@@455 ($generated@@130 1)) (< $generated@@460 $generated@@461)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (> $generated@@456 $generated@@457)) (=> (> $generated@@456 $generated@@457) (and (=> (= (ControlFlow 0 20) (- 0 21)) (> $generated@@457 0)) (=> (> $generated@@457 0) (=> (and ($generated@@212 $generated@@487) ($generated@@468 $generated@@487)) (=> (and (and (and (and ($generated@@213 $generated@@456 $generated@@457) ($generated@@213 (- $generated@@456 $generated@@457) $generated@@457)) (= ($generated@@211 $generated@@456 $generated@@457) ($generated@@211 (- $generated@@456 $generated@@457) $generated@@457))) (and (and (= $generated@@463 $generated@@487) (= $generated@@488 (- $generated@@461 $generated@@460))) (and (= $generated@@489 ($generated@@130 0)) (= $generated@@472 $generated@@454)))) (and (and (and (= $generated@@470 $generated@@457) (= $generated@@475 $generated@@458)) (and (= $generated@@476 $generated@@459) (= $generated@@471 $generated@@489))) (and (and (= $generated@@469 $generated@@488) (= $generated@@474 $generated@@461)) (and (= $generated@@473 $generated@@460) (= (ControlFlow 0 20) 5))))) $generated@@536)))))))))
(let (($generated@@553  (=> (and (not (= $generated@@455 ($generated@@130 1))) (= (ControlFlow 0 24) 20)) $generated@@552)))
(let (($generated@@554  (=> (and (= $generated@@455 ($generated@@130 1)) (= (ControlFlow 0 23) 20)) $generated@@552)))
(let (($generated@@555  (=> (= $generated@@454 ($generated@@130 0)) (=> (and (= $generated@@490 ($generated@@130 1)) (= $generated@@472 $generated@@490)) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@475 $generated@@456)) (and (= $generated@@476 $generated@@457) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@474 $generated@@461)) (and (= $generated@@473 $generated@@460) (= (ControlFlow 0 19) 5)))) $generated@@536)))))
(let (($generated@@556  (=> (= $generated@@455 ($generated@@130 0)) (=> (and (= $generated@@491 ($generated@@130 1)) (= $generated@@472 $generated@@454)) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@475 $generated@@458)) (and (= $generated@@476 $generated@@459) (= $generated@@471 $generated@@491))) (and (and (= $generated@@469 $generated@@456) (= $generated@@474 $generated@@456)) (and (= $generated@@473 $generated@@457) (= (ControlFlow 0 18) 5)))) $generated@@536)))))
(let (($generated@@557  (=> (and (and (and (and (and (and (and (and (not (= $generated@@455 ($generated@@130 0))) (not (and (= $generated@@455 ($generated@@130 1)) (< $generated@@460 $generated@@461)))) (not (and (= $generated@@455 ($generated@@130 1)) (> $generated@@460 $generated@@461)))) (not (and (= $generated@@455 ($generated@@130 1)) (= $generated@@460 $generated@@461)))) (not (= $generated@@454 ($generated@@130 0)))) (not (and (= $generated@@454 ($generated@@130 1)) (< $generated@@458 $generated@@459)))) (not (and (= $generated@@454 ($generated@@130 1)) (> $generated@@458 $generated@@459)))) (not (and (= $generated@@454 ($generated@@130 1)) (= $generated@@458 $generated@@459)))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@558  (=> (not (and (= $generated@@455 ($generated@@130 2)) (= $generated@@454 ($generated@@130 2)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 46) 18) $generated@@556) (=> (= (ControlFlow 0 46) 19) $generated@@555)) (=> (= (ControlFlow 0 46) 3) $generated@@557)) (=> (= (ControlFlow 0 46) 44) $generated@@539)) (=> (= (ControlFlow 0 46) 45) $generated@@538)) (=> (= (ControlFlow 0 46) 41) $generated@@542)) (=> (= (ControlFlow 0 46) 42) $generated@@541)) (=> (= (ControlFlow 0 46) 38) $generated@@545)) (=> (= (ControlFlow 0 46) 39) $generated@@544)) (=> (= (ControlFlow 0 46) 29) $generated@@548)) (=> (= (ControlFlow 0 46) 30) $generated@@547)) (=> (= (ControlFlow 0 46) 26) $generated@@551)) (=> (= (ControlFlow 0 46) 27) $generated@@550)) (=> (= (ControlFlow 0 46) 23) $generated@@554)) (=> (= (ControlFlow 0 46) 24) $generated@@553)))))
(let (($generated@@559  (and (=> (= (ControlFlow 0 51) 49) $generated@@535) (=> (= (ControlFlow 0 51) 46) $generated@@558))))
(let (($generated@@560  (=> (and (not (= $generated@@455 ($generated@@130 2))) (= (ControlFlow 0 53) 51)) $generated@@559)))
(let (($generated@@561  (=> (and (= $generated@@455 ($generated@@130 2)) (= (ControlFlow 0 52) 51)) $generated@@559)))
(let (($generated@@562  (=> $generated@@465 (and (=> (= (ControlFlow 0 54) 52) $generated@@561) (=> (= (ControlFlow 0 54) 53) $generated@@560)))))
(let (($generated@@563  (and (=> (= (ControlFlow 0 91) 90) $generated@@533) (=> (= (ControlFlow 0 91) 54) $generated@@562))))
(let (($generated@@564 true))
(let (($generated@@565  (=> (and ($generated@@212 $generated@@463) ($generated@@468 $generated@@463)) (=> (and (and (and (and (and (and (and (and (and (not false) (<= 1 $generated@@462)) (<= 1 $generated@@464)) (and (<= 0 $generated@@455) (< $generated@@455 3))) (and (<= 0 $generated@@454) (< $generated@@454 3))) (= $generated@@492 0)) (= $generated@@493 0)) (and (=> $generated@@465 true) (=> $generated@@465 (< 0 $generated@@456)))) (and (and (=> $generated@@465 (< 0 $generated@@457)) (=> $generated@@465 (and ($generated@@213 $generated@@462 $generated@@464) ($generated@@213 $generated@@456 $generated@@457)))) (and (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@456 $generated@@457))) (=> $generated@@465 true)))) (and (and (and (and (=> $generated@@465 (<= ($generated@@130 0) $generated@@455)) (=> $generated@@465 (< $generated@@455 3))) (and (=> $generated@@465 (<= ($generated@@130 0) $generated@@454)) (=> $generated@@465 (< $generated@@454 3)))) (and (and (=> $generated@@465 true) (=> $generated@@465 (=> (and (= $generated@@455 ($generated@@130 1)) (<= $generated@@460 $generated@@461)) (= $generated@@461 $generated@@456)))) (and (=> $generated@@465 (=> (and (= $generated@@455 ($generated@@130 1)) (<= $generated@@460 $generated@@461)) (= $generated@@460 $generated@@457))) (=> $generated@@465 true)))) (and (and (and (=> $generated@@465 (=> (and (= $generated@@454 ($generated@@130 1)) (<= $generated@@458 $generated@@459)) (= $generated@@458 $generated@@456))) (=> $generated@@465 (=> (and (= $generated@@454 ($generated@@130 1)) (<= $generated@@458 $generated@@459)) (= $generated@@459 $generated@@457)))) (and (=> $generated@@465 true) (=> $generated@@465 (=> (= $generated@@455 ($generated@@130 2)) (= $generated@@456 $generated@@457))))) (and (and (=> $generated@@465 (=> (= $generated@@454 ($generated@@130 2)) (= $generated@@456 $generated@@457))) (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@72) (=> (and (not (= $generated@@566 $generated@@494)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@495 $generated@@566) $generated@@60))) (= ($generated@@76 $generated@@463 $generated@@566) ($generated@@76 $generated@@495 $generated@@566))))
 :pattern ( ($generated@@76 $generated@@463 $generated@@566))
))) (and ($generated@@144 $generated@@495 $generated@@463) (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@64 (type $generated@@568))))
 (=> (and (and (= (type $generated@@567) $generated@@72) (= (type $generated@@568) ($generated@@63 $generated@@569))) (and (not (= $generated@@567 $generated@@494)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@495 $generated@@567) $generated@@60)))) (or (= ($generated@@78 ($generated@@76 $generated@@463 $generated@@567) $generated@@568) ($generated@@78 ($generated@@76 $generated@@495 $generated@@567) $generated@@568)) ($generated@@0 ($generated@@153 $generated@@496 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@463 $generated@@567) $generated@@568))
))))))) (and (=> (= (ControlFlow 0 92) 1) $generated@@564) (=> (= (ControlFlow 0 92) 91) $generated@@563))))))
(let (($generated@@570  (=> (= ($generated@@445 $generated@@419) $generated@@419) (=> (and (and (= ($generated@@445 $generated@@497) $generated@@497) (= $generated@@496 ($generated@@154 $generated@@494 $generated@@495 $generated@@60 false))) (and (= $generated@@492 ($generated@@130 0)) (= $generated@@493 ($generated@@130 0)))) (and (=> (= (ControlFlow 0 93) (- 0 106)) (=> $generated@@465 (< 0 $generated@@462))) (=> (=> $generated@@465 (< 0 $generated@@462)) (and (=> (= (ControlFlow 0 93) (- 0 105)) (=> $generated@@465 (< 0 $generated@@464))) (=> (=> $generated@@465 (< 0 $generated@@464)) (and (=> (= (ControlFlow 0 93) (- 0 104)) (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@462 $generated@@464)))) (=> (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@462 $generated@@464))) (and (=> (= (ControlFlow 0 93) (- 0 103)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@492))) (=> (=> $generated@@465 (<= ($generated@@130 0) $generated@@492)) (and (=> (= (ControlFlow 0 93) (- 0 102)) (=> $generated@@465 (< $generated@@492 3))) (=> (=> $generated@@465 (< $generated@@492 3)) (and (=> (= (ControlFlow 0 93) (- 0 101)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@493))) (=> (=> $generated@@465 (<= ($generated@@130 0) $generated@@493)) (and (=> (= (ControlFlow 0 93) (- 0 100)) (=> $generated@@465 (< $generated@@493 3))) (=> (=> $generated@@465 (< $generated@@493 3)) (and (=> (= (ControlFlow 0 93) (- 0 99)) (=> $generated@@465 (=> (and (= $generated@@492 ($generated@@130 1)) (<= $generated@@498 $generated@@499)) (= $generated@@499 $generated@@462)))) (=> (=> $generated@@465 (=> (and (= $generated@@492 ($generated@@130 1)) (<= $generated@@498 $generated@@499)) (= $generated@@499 $generated@@462))) (and (=> (= (ControlFlow 0 93) (- 0 98)) (=> $generated@@465 (=> (and (= $generated@@492 ($generated@@130 1)) (<= $generated@@498 $generated@@499)) (= $generated@@498 $generated@@464)))) (=> (=> $generated@@465 (=> (and (= $generated@@492 ($generated@@130 1)) (<= $generated@@498 $generated@@499)) (= $generated@@498 $generated@@464))) (and (=> (= (ControlFlow 0 93) (- 0 97)) (=> $generated@@465 (=> (and (= $generated@@493 ($generated@@130 1)) (<= $generated@@500 $generated@@501)) (= $generated@@500 $generated@@462)))) (=> (=> $generated@@465 (=> (and (= $generated@@493 ($generated@@130 1)) (<= $generated@@500 $generated@@501)) (= $generated@@500 $generated@@462))) (and (=> (= (ControlFlow 0 93) (- 0 96)) (=> $generated@@465 (=> (and (= $generated@@493 ($generated@@130 1)) (<= $generated@@500 $generated@@501)) (= $generated@@501 $generated@@464)))) (=> (=> $generated@@465 (=> (and (= $generated@@493 ($generated@@130 1)) (<= $generated@@500 $generated@@501)) (= $generated@@501 $generated@@464))) (and (=> (= (ControlFlow 0 93) (- 0 95)) (=> $generated@@465 (=> (= $generated@@492 ($generated@@130 2)) (= $generated@@462 $generated@@464)))) (=> (=> $generated@@465 (=> (= $generated@@492 ($generated@@130 2)) (= $generated@@462 $generated@@464))) (and (=> (= (ControlFlow 0 93) (- 0 94)) (=> $generated@@465 (=> (= $generated@@493 ($generated@@130 2)) (= $generated@@462 $generated@@464)))) (=> (=> $generated@@465 (=> (= $generated@@493 ($generated@@130 2)) (= $generated@@462 $generated@@464))) (=> (= (ControlFlow 0 93) 92) $generated@@565)))))))))))))))))))))))))))))))
(let (($generated@@571  (=> (and ($generated@@212 $generated@@495) ($generated@@468 $generated@@495)) (=> (and (and (= 7 $generated@@127) (> $generated@@462 0)) (and (> $generated@@464 0) (= (ControlFlow 0 107) 93))) $generated@@570))))
$generated@@571)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (Int Int) Bool)
(declare-fun $generated@@214 (Int Int) Bool)
(declare-fun $generated@@215 (Int Int) Int)
(declare-fun $generated@@220 (Int Int) Int)
(declare-fun $generated@@228 (T@T) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@239 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 () T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@301 (Int Int Int) Bool)
(declare-fun $generated@@302 (Int Int Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) Int)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@446 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@146) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (and (= (type $generated@@148) $generated@@131) (or ($generated@@132 $generated@@149 $generated@@150) (and (not (= 1 $generated@@127)) (and (> $generated@@149 0) (> $generated@@150 0))))) (and (forall (($generated@@151 Int) ) (!  (=> (> $generated@@151 0) ($generated@@135 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@151 $generated@@149 $generated@@150))
)) (= ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150) (exists (($generated@@152 Int) ) (!  (and (> $generated@@152 0) ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@159 $generated@@160)) 13)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@157 ($generated@@155 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@155 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@157 (type $generated@@165))))
(= (type ($generated@@153 $generated@@165 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@153 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(let (($generated@@174 (type $generated@@170)))
(= (type ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172)) ($generated@@155 $generated@@174 $generated@@173))))
 :pattern ( ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@157 (type $generated@@175))))
 (=> (= (type $generated@@178) $generated@@179) (= ($generated@@153 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@176 $generated@@177) $generated@@178)))
 :weight 0
))) (and (and (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@153 ($generated@@158 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@153 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@153 ($generated@@158 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@153 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or true (= ($generated@@153 ($generated@@158 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@153 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ) (! (= (type ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@155 $generated@@72 $generated@@4))
 :pattern ( ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@64 (type $generated@@207))))
 (=> (and (and (and (and (= (type $generated@@202) $generated@@72) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@204) ($generated@@63 $generated@@4))) (= (type $generated@@206) $generated@@72)) (= (type $generated@@207) ($generated@@63 $generated@@208))) (= ($generated@@0 ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (not (= $generated@@206 $generated@@202)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@203 $generated@@206) $generated@@204))) $generated@@205))))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@130 $generated@@209) $generated@@209)
 :pattern ( ($generated@@130 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@133 $generated@@210) $generated@@210)
 :pattern ( ($generated@@133 $generated@@210))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ($generated@@218 Int) ) (!  (=> (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@216) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@217 0) (> $generated@@218 0))))))))) (and ($generated@@214 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (= ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (let (($generated@@219 ($generated@@215 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218))))
$generated@@219))))
 :weight 3
 :pattern ( ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) ($generated@@212 $generated@@216))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (or ($generated@@135 $generated@@221 $generated@@222 $generated@@223) (and (not (= 0 $generated@@127)) (and (> $generated@@221 0) (> $generated@@222 0)))) (= ($generated@@134 $generated@@221 $generated@@222 $generated@@223) (= ($generated@@220 $generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@134 $generated@@221 $generated@@222 $generated@@223))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 $generated@@225 $generated@@226) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@224) (and (> $generated@@225 0) (> $generated@@226 0)))))) (and ($generated@@214 $generated@@225 $generated@@226) (= ($generated@@211 $generated@@225 $generated@@226) (let (($generated@@227 ($generated@@215 $generated@@225 $generated@@226)))
$generated@@227))))
 :pattern ( ($generated@@211 $generated@@225 $generated@@226) ($generated@@212 $generated@@224))
))))
(assert  (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@232)) 14)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
))) (forall (($generated@@234 T@T) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@230 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@235)) 0)
 :pattern ( ($generated@@228 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (= (type $generated@@236) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238) ($generated@@128 $generated@@236 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
)))
(assert  (and (= ($generated@@1 $generated@@241) 15) (forall (($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@61) (= (type $generated@@245) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245) ($generated@@69 $generated@@243 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@248) $generated@@241)) (= (type $generated@@249) $generated@@61)) ($generated@@144 $generated@@246 $generated@@247)) ($generated@@239 $generated@@248 $generated@@249 $generated@@246)) ($generated@@239 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@144 $generated@@246 $generated@@247) ($generated@@239 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@250) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@251) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@253) $generated@@61)) ($generated@@144 $generated@@250 $generated@@251)) ($generated@@69 $generated@@252 $generated@@253 $generated@@250)) ($generated@@69 $generated@@252 $generated@@253 $generated@@251))
 :pattern ( ($generated@@144 $generated@@250 $generated@@251) ($generated@@69 $generated@@252 $generated@@253 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 16)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 17)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@71 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@258 (type $generated@@290))))
(let (($generated@@292 ($generated@@257 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@256 $generated@@292 $generated@@291)) (or (= $generated@@290 ($generated@@255 $generated@@292 $generated@@291)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@290) $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@254 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@276 (type $generated@@294))))
(let (($generated@@296 ($generated@@275 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@274 $generated@@296 $generated@@295)) (or (= $generated@@294 ($generated@@273 $generated@@296 $generated@@295)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@294) $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@272 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@298 Int) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (or ($generated@@135 $generated@@298 $generated@@299 $generated@@300) (and (not (= 0 $generated@@127)) (and (> $generated@@298 0) (> $generated@@299 0)))) true)
 :pattern ( ($generated@@134 $generated@@298 $generated@@299 $generated@@300))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@303 Int) ($generated@@304 Int) ($generated@@305 Int) ) (!  (=> (or ($generated@@302 $generated@@303 $generated@@304 $generated@@305) (and (not (= 2 $generated@@127)) (and (> $generated@@304 0) (> $generated@@305 0)))) true)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 Int) ($generated@@307 Int) ) (!  (=> ($generated@@214 $generated@@306 $generated@@307) (and ($generated@@301 ($generated@@215 $generated@@306 $generated@@307) $generated@@306 $generated@@307) (forall (($generated@@308 Int) ) (!  (=> true (=> ($generated@@301 $generated@@308 $generated@@306 $generated@@307) (<= $generated@@308 ($generated@@215 $generated@@306 $generated@@307))))
 :pattern ( ($generated@@301 $generated@@308 $generated@@306 $generated@@307))
))))
 :pattern ( ($generated@@215 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@241) ($generated@@0 ($generated@@76 $generated@@311 $generated@@314))) ($generated@@239 $generated@@314 $generated@@312 $generated@@313))
 :pattern ( ($generated@@76 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@241) ($generated@@0 ($generated@@76 $generated@@317 $generated@@320))) ($generated@@239 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@76 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@321) $generated@@131) (or ($generated@@132 $generated@@322 $generated@@323) (and (not (= 1 $generated@@127)) (and (> $generated@@322 0) (> $generated@@323 0))))) true)
 :pattern ( ($generated@@128 $generated@@321 $generated@@322 $generated@@323))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@324 Int) ($generated@@325 Int) ) (!  (=> (or ($generated@@213 $generated@@324 $generated@@325) (and (not (= 5 $generated@@127)) (and (> $generated@@324 0) (> $generated@@325 0)))) true)
 :pattern ( ($generated@@211 $generated@@324 $generated@@325))
))))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@258 (type $generated@@330))))
(let (($generated@@332 ($generated@@257 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@256 $generated@@241 $generated@@241)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))) (and ($generated@@239 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@239 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert  (and (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= (type ($generated@@338 $generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340 $generated@@341))
)) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@276 (type $generated@@342))))
(let (($generated@@344 ($generated@@275 (type $generated@@342))))
(= (type ($generated@@339 $generated@@342)) ($generated@@71 $generated@@344 $generated@@343))))
 :pattern ( ($generated@@339 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (= (type $generated@@345) ($generated@@274 $generated@@241 $generated@@241)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) $generated@@61)) (= (type $generated@@348) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))) (and ($generated@@239 ($generated@@76 ($generated@@339 $generated@@345) $generated@@349) $generated@@347 $generated@@348) ($generated@@239 $generated@@349 $generated@@346 $generated@@348)))
 :pattern ( ($generated@@76 ($generated@@339 $generated@@345) $generated@@349))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))
))))
 :pattern ( ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@350 $generated@@352))) (and ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))) ($generated@@144 $generated@@350 $generated@@352))
 :pattern ( ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@71 $generated@@354 $generated@@4))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@276 (type $generated@@355))))
(let (($generated@@357 ($generated@@275 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@274 $generated@@357 $generated@@356)) (= (= $generated@@355 ($generated@@273 $generated@@357 $generated@@356)) (= ($generated@@272 $generated@@355) ($generated@@353 $generated@@357))))))
 :pattern ( ($generated@@272 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@231 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@230 $generated@@359)) (<= 0 ($generated@@229 $generated@@358))))
 :pattern ( ($generated@@229 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@61) (= (type $generated@@363) $generated@@61)) (= ($generated@@360 ($generated@@326 $generated@@362 $generated@@363)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@61) (= (type $generated@@367) $generated@@61)) (= ($generated@@364 ($generated@@326 $generated@@366 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@326 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@368 $generated@@369)) $generated@@58))
 :pattern ( ($generated@@326 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@61) (= (type $generated@@373) $generated@@61)) (= ($generated@@370 ($generated@@338 $generated@@372 $generated@@373)) $generated@@372))
 :pattern ( ($generated@@338 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@374 ($generated@@338 $generated@@376 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@338 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@61) (= (type $generated@@379) $generated@@61)) (= ($generated@@67 ($generated@@338 $generated@@378 $generated@@379)) $generated@@59))
 :pattern ( ($generated@@338 $generated@@378 $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ($generated@@384 Int) ) (! (let (($generated@@385 ($generated@@231 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@230 $generated@@241)) (= (type $generated@@387) $generated@@61)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388) (forall (($generated@@389 Int) ) (!  (=> (and (<= 0 $generated@@389) (< $generated@@389 ($generated@@229 $generated@@386))) ($generated@@239 ($generated@@381 $generated@@386 $generated@@389) $generated@@387 $generated@@388))
 :pattern ( ($generated@@381 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@390 ($generated@@70 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@70 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@392 ($generated@@309 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@309 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@67 ($generated@@309 $generated@@395)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) $generated@@61)
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@61) (= ($generated@@396 ($generated@@315 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@315 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@399)) $generated@@55))
 :pattern ( ($generated@@315 $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@61) (= ($generated@@401 ($generated@@400 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@61) (= ($generated@@67 ($generated@@400 $generated@@405)) $generated@@56))
 :pattern ( ($generated@@400 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@61)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@61) (= ($generated@@406 ($generated@@380 $generated@@408)) $generated@@408))
 :pattern ( ($generated@@380 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@61) (= ($generated@@67 ($generated@@380 $generated@@409)) $generated@@57))
 :pattern ( ($generated@@380 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated@@410 $generated@@414 ($generated@@240 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@240 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (not ($generated@@0 ($generated@@76 ($generated@@353 $generated@@416) $generated@@415))))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@76 ($generated@@353 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Int) ) (! (= ($generated@@220 $generated@@417 $generated@@418) (* $generated@@417 $generated@@418))
 :pattern ( ($generated@@220 $generated@@417 $generated@@418))
)))
(assert (= (type $generated@@419) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@420 Int) ($generated@@421 Int) ($generated@@422 Int) ) (!  (=> (or ($generated@@302 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@421 0) (> $generated@@422 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@420 0)))) (and ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) (=> ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))) (= ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422))  (and (and (> $generated@@420 0) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421))) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@71 $generated@@241 $generated@@2)) (= (type $generated@@424) $generated@@61)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@241) (< 0 ($generated ($generated@@76 $generated@@423 $generated@@426)))) ($generated@@239 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@76 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))) ($generated@@133 ($generated@@240 ($generated@@8 $generated@@427))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))))
)))
(assert (forall (($generated@@428 T@U) ) (! (= ($generated@@240 ($generated@@133 $generated@@428)) ($generated@@133 ($generated@@240 $generated@@428)))
 :pattern ( ($generated@@240 ($generated@@133 $generated@@428)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@231 (type $generated@@429))))
 (=> (and (= (type $generated@@429) ($generated@@230 $generated@@430)) (= ($generated@@229 $generated@@429) 0)) (= $generated@@429 ($generated@@228 $generated@@430))))
 :pattern ( ($generated@@229 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@432) $generated@@2)) ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
 :pattern ( ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@434) $generated@@3)) ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
 :pattern ( ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@436) $generated@@4)) ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
 :pattern ( ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
)))
(assert (= ($generated@@1 $generated@@437) 18))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@437)) ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@241)) ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@442 Int) ($generated@@443 Int) ($generated@@444 Int) ) (!  (=> (or ($generated@@302 $generated@@442 $generated@@443 $generated@@444) (and (not (= 2 $generated@@127)) (and (> $generated@@443 0) (> $generated@@444 0)))) (and (=> (> $generated@@442 0) (and ($generated@@132 $generated@@442 $generated@@443) (=> ($generated@@128 $generated@@419 $generated@@442 $generated@@443) ($generated@@132 $generated@@442 $generated@@444)))) (= ($generated@@301 $generated@@442 $generated@@443 $generated@@444)  (and (and (> $generated@@442 0) ($generated@@128 $generated@@419 $generated@@442 $generated@@443)) ($generated@@128 $generated@@419 $generated@@442 $generated@@444)))))
 :pattern ( ($generated@@301 $generated@@442 $generated@@443 $generated@@444))
))))
(assert  (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@447)) $generated@@131)
 :pattern ( ($generated@@445 $generated@@447))
)) (= (type $generated@@446) $generated@@131)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 Int) ) (!  (=> (= (type $generated@@448) $generated@@131) (= ($generated@@128 $generated@@448 $generated@@449 $generated@@450) ($generated@@128 $generated@@446 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@128 ($generated@@445 $generated@@448) $generated@@449 $generated@@450))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@451 Int) ($generated@@452 Int) ($generated@@453 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@451 0) (> $generated@@452 0))))))) (= ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (= ($generated@@130 ($generated@@220 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452))) ($generated@@130 $generated@@453))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@454 () T@U)
(declare-fun $generated@@455 () T@U)
(declare-fun $generated@@456 () T@U)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Int)
(declare-fun $generated@@460 () T@U)
(declare-fun $generated@@461 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@454) $generated@@131) (= (type $generated@@455) ($generated@@155 $generated@@72 $generated@@4))) (= (type $generated@@456) $generated@@72)) (= (type $generated@@457) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@460) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@462  (=> (= ($generated@@445 $generated@@419) $generated@@419) (=> (and (= ($generated@@445 $generated@@454) $generated@@454) (= $generated@@455 ($generated@@154 $generated@@456 $generated@@457 $generated@@60 false))) (=> (and (and (and (> $generated@@458 0) (> $generated@@459 0)) (and ($generated@@212 $generated@@460) ($generated@@461 $generated@@460))) (and (and (forall (($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@72) (=> (and (not (= $generated@@463 $generated@@456)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@457 $generated@@463) $generated@@60))) (= ($generated@@76 $generated@@460 $generated@@463) ($generated@@76 $generated@@457 $generated@@463))))
 :pattern ( ($generated@@76 $generated@@460 $generated@@463))
)) ($generated@@144 $generated@@457 $generated@@460)) (and ($generated@@69 ($generated@@8 $generated@@458) $generated@@46 $generated@@460) ($generated@@69 ($generated@@8 $generated@@459) $generated@@46 $generated@@460)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@458 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@459 0))))))))
(let (($generated@@464  (=> (and (and ($generated@@212 $generated@@457) ($generated@@461 $generated@@457)) (and (= 7 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@462)))
$generated@@464)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (Int Int) Bool)
(declare-fun $generated@@214 (Int Int) Bool)
(declare-fun $generated@@215 (Int Int) Int)
(declare-fun $generated@@220 (Int Int) Int)
(declare-fun $generated@@228 (T@T) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@239 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 () T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@301 (Int Int Int) Bool)
(declare-fun $generated@@302 (Int Int Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) Int)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@446 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@146) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (and (= (type $generated@@148) $generated@@131) (or ($generated@@132 $generated@@149 $generated@@150) (and (not (= 1 $generated@@127)) (and (> $generated@@149 0) (> $generated@@150 0))))) (and (forall (($generated@@151 Int) ) (!  (=> (> $generated@@151 0) ($generated@@135 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@151 $generated@@149 $generated@@150))
)) (= ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150) (exists (($generated@@152 Int) ) (!  (and (> $generated@@152 0) ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@159 $generated@@160)) 13)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@157 ($generated@@155 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@155 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@157 (type $generated@@165))))
(= (type ($generated@@153 $generated@@165 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@153 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(let (($generated@@174 (type $generated@@170)))
(= (type ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172)) ($generated@@155 $generated@@174 $generated@@173))))
 :pattern ( ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@157 (type $generated@@175))))
 (=> (= (type $generated@@178) $generated@@179) (= ($generated@@153 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@176 $generated@@177) $generated@@178)))
 :weight 0
))) (and (and (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@153 ($generated@@158 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@153 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@153 ($generated@@158 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@153 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or true (= ($generated@@153 ($generated@@158 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@153 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ) (! (= (type ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@155 $generated@@72 $generated@@4))
 :pattern ( ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@64 (type $generated@@207))))
 (=> (and (and (and (and (= (type $generated@@202) $generated@@72) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@204) ($generated@@63 $generated@@4))) (= (type $generated@@206) $generated@@72)) (= (type $generated@@207) ($generated@@63 $generated@@208))) (= ($generated@@0 ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (not (= $generated@@206 $generated@@202)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@203 $generated@@206) $generated@@204))) $generated@@205))))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@130 $generated@@209) $generated@@209)
 :pattern ( ($generated@@130 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@133 $generated@@210) $generated@@210)
 :pattern ( ($generated@@133 $generated@@210))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ($generated@@218 Int) ) (!  (=> (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@216) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@217 0) (> $generated@@218 0))))))))) (and ($generated@@214 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (= ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (let (($generated@@219 ($generated@@215 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218))))
$generated@@219))))
 :weight 3
 :pattern ( ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) ($generated@@212 $generated@@216))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (or ($generated@@135 $generated@@221 $generated@@222 $generated@@223) (and (not (= 0 $generated@@127)) (and (> $generated@@221 0) (> $generated@@222 0)))) (= ($generated@@134 $generated@@221 $generated@@222 $generated@@223) (= ($generated@@220 $generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@134 $generated@@221 $generated@@222 $generated@@223))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 $generated@@225 $generated@@226) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@224) (and (> $generated@@225 0) (> $generated@@226 0)))))) (and ($generated@@214 $generated@@225 $generated@@226) (= ($generated@@211 $generated@@225 $generated@@226) (let (($generated@@227 ($generated@@215 $generated@@225 $generated@@226)))
$generated@@227))))
 :pattern ( ($generated@@211 $generated@@225 $generated@@226) ($generated@@212 $generated@@224))
))))
(assert  (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@232)) 14)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
))) (forall (($generated@@234 T@T) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@230 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@235)) 0)
 :pattern ( ($generated@@228 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (= (type $generated@@236) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238) ($generated@@128 $generated@@236 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
)))
(assert  (and (= ($generated@@1 $generated@@241) 15) (forall (($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@61) (= (type $generated@@245) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245) ($generated@@69 $generated@@243 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@248) $generated@@241)) (= (type $generated@@249) $generated@@61)) ($generated@@144 $generated@@246 $generated@@247)) ($generated@@239 $generated@@248 $generated@@249 $generated@@246)) ($generated@@239 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@144 $generated@@246 $generated@@247) ($generated@@239 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@250) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@251) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@253) $generated@@61)) ($generated@@144 $generated@@250 $generated@@251)) ($generated@@69 $generated@@252 $generated@@253 $generated@@250)) ($generated@@69 $generated@@252 $generated@@253 $generated@@251))
 :pattern ( ($generated@@144 $generated@@250 $generated@@251) ($generated@@69 $generated@@252 $generated@@253 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 16)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 17)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@71 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@258 (type $generated@@290))))
(let (($generated@@292 ($generated@@257 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@256 $generated@@292 $generated@@291)) (or (= $generated@@290 ($generated@@255 $generated@@292 $generated@@291)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@290) $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@254 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@276 (type $generated@@294))))
(let (($generated@@296 ($generated@@275 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@274 $generated@@296 $generated@@295)) (or (= $generated@@294 ($generated@@273 $generated@@296 $generated@@295)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@294) $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@272 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@298 Int) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (or ($generated@@135 $generated@@298 $generated@@299 $generated@@300) (and (not (= 0 $generated@@127)) (and (> $generated@@298 0) (> $generated@@299 0)))) true)
 :pattern ( ($generated@@134 $generated@@298 $generated@@299 $generated@@300))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@303 Int) ($generated@@304 Int) ($generated@@305 Int) ) (!  (=> (or ($generated@@302 $generated@@303 $generated@@304 $generated@@305) (and (not (= 2 $generated@@127)) (and (> $generated@@304 0) (> $generated@@305 0)))) true)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 Int) ($generated@@307 Int) ) (!  (=> ($generated@@214 $generated@@306 $generated@@307) (and ($generated@@301 ($generated@@215 $generated@@306 $generated@@307) $generated@@306 $generated@@307) (forall (($generated@@308 Int) ) (!  (=> true (=> ($generated@@301 $generated@@308 $generated@@306 $generated@@307) (<= $generated@@308 ($generated@@215 $generated@@306 $generated@@307))))
 :pattern ( ($generated@@301 $generated@@308 $generated@@306 $generated@@307))
))))
 :pattern ( ($generated@@215 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@241) ($generated@@0 ($generated@@76 $generated@@311 $generated@@314))) ($generated@@239 $generated@@314 $generated@@312 $generated@@313))
 :pattern ( ($generated@@76 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@241) ($generated@@0 ($generated@@76 $generated@@317 $generated@@320))) ($generated@@239 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@76 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@321) $generated@@131) (or ($generated@@132 $generated@@322 $generated@@323) (and (not (= 1 $generated@@127)) (and (> $generated@@322 0) (> $generated@@323 0))))) true)
 :pattern ( ($generated@@128 $generated@@321 $generated@@322 $generated@@323))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@324 Int) ($generated@@325 Int) ) (!  (=> (or ($generated@@213 $generated@@324 $generated@@325) (and (not (= 5 $generated@@127)) (and (> $generated@@324 0) (> $generated@@325 0)))) true)
 :pattern ( ($generated@@211 $generated@@324 $generated@@325))
))))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@258 (type $generated@@330))))
(let (($generated@@332 ($generated@@257 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@256 $generated@@241 $generated@@241)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))) (and ($generated@@239 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@239 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert  (and (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= (type ($generated@@338 $generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340 $generated@@341))
)) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@276 (type $generated@@342))))
(let (($generated@@344 ($generated@@275 (type $generated@@342))))
(= (type ($generated@@339 $generated@@342)) ($generated@@71 $generated@@344 $generated@@343))))
 :pattern ( ($generated@@339 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (= (type $generated@@345) ($generated@@274 $generated@@241 $generated@@241)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) $generated@@61)) (= (type $generated@@348) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))) (and ($generated@@239 ($generated@@76 ($generated@@339 $generated@@345) $generated@@349) $generated@@347 $generated@@348) ($generated@@239 $generated@@349 $generated@@346 $generated@@348)))
 :pattern ( ($generated@@76 ($generated@@339 $generated@@345) $generated@@349))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))
))))
 :pattern ( ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@350 $generated@@352))) (and ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))) ($generated@@144 $generated@@350 $generated@@352))
 :pattern ( ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@71 $generated@@354 $generated@@4))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@276 (type $generated@@355))))
(let (($generated@@357 ($generated@@275 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@274 $generated@@357 $generated@@356)) (= (= $generated@@355 ($generated@@273 $generated@@357 $generated@@356)) (= ($generated@@272 $generated@@355) ($generated@@353 $generated@@357))))))
 :pattern ( ($generated@@272 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@231 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@230 $generated@@359)) (<= 0 ($generated@@229 $generated@@358))))
 :pattern ( ($generated@@229 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@61) (= (type $generated@@363) $generated@@61)) (= ($generated@@360 ($generated@@326 $generated@@362 $generated@@363)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@61) (= (type $generated@@367) $generated@@61)) (= ($generated@@364 ($generated@@326 $generated@@366 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@326 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@368 $generated@@369)) $generated@@58))
 :pattern ( ($generated@@326 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@61) (= (type $generated@@373) $generated@@61)) (= ($generated@@370 ($generated@@338 $generated@@372 $generated@@373)) $generated@@372))
 :pattern ( ($generated@@338 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@374 ($generated@@338 $generated@@376 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@338 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@61) (= (type $generated@@379) $generated@@61)) (= ($generated@@67 ($generated@@338 $generated@@378 $generated@@379)) $generated@@59))
 :pattern ( ($generated@@338 $generated@@378 $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ($generated@@384 Int) ) (! (let (($generated@@385 ($generated@@231 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@230 $generated@@241)) (= (type $generated@@387) $generated@@61)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388) (forall (($generated@@389 Int) ) (!  (=> (and (<= 0 $generated@@389) (< $generated@@389 ($generated@@229 $generated@@386))) ($generated@@239 ($generated@@381 $generated@@386 $generated@@389) $generated@@387 $generated@@388))
 :pattern ( ($generated@@381 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@390 ($generated@@70 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@70 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@392 ($generated@@309 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@309 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@67 ($generated@@309 $generated@@395)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) $generated@@61)
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@61) (= ($generated@@396 ($generated@@315 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@315 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@399)) $generated@@55))
 :pattern ( ($generated@@315 $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@61) (= ($generated@@401 ($generated@@400 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@61) (= ($generated@@67 ($generated@@400 $generated@@405)) $generated@@56))
 :pattern ( ($generated@@400 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@61)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@61) (= ($generated@@406 ($generated@@380 $generated@@408)) $generated@@408))
 :pattern ( ($generated@@380 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@61) (= ($generated@@67 ($generated@@380 $generated@@409)) $generated@@57))
 :pattern ( ($generated@@380 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated@@410 $generated@@414 ($generated@@240 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@240 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (not ($generated@@0 ($generated@@76 ($generated@@353 $generated@@416) $generated@@415))))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@76 ($generated@@353 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Int) ) (! (= ($generated@@220 $generated@@417 $generated@@418) (* $generated@@417 $generated@@418))
 :pattern ( ($generated@@220 $generated@@417 $generated@@418))
)))
(assert (= (type $generated@@419) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@420 Int) ($generated@@421 Int) ($generated@@422 Int) ) (!  (=> (or ($generated@@302 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@421 0) (> $generated@@422 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@420 0)))) (and ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) (=> ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))) (= ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422))  (and (and (> $generated@@420 0) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421))) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@71 $generated@@241 $generated@@2)) (= (type $generated@@424) $generated@@61)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@241) (< 0 ($generated ($generated@@76 $generated@@423 $generated@@426)))) ($generated@@239 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@76 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))) ($generated@@133 ($generated@@240 ($generated@@8 $generated@@427))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))))
)))
(assert (forall (($generated@@428 T@U) ) (! (= ($generated@@240 ($generated@@133 $generated@@428)) ($generated@@133 ($generated@@240 $generated@@428)))
 :pattern ( ($generated@@240 ($generated@@133 $generated@@428)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@231 (type $generated@@429))))
 (=> (and (= (type $generated@@429) ($generated@@230 $generated@@430)) (= ($generated@@229 $generated@@429) 0)) (= $generated@@429 ($generated@@228 $generated@@430))))
 :pattern ( ($generated@@229 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@432) $generated@@2)) ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
 :pattern ( ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@434) $generated@@3)) ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
 :pattern ( ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@436) $generated@@4)) ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
 :pattern ( ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
)))
(assert (= ($generated@@1 $generated@@437) 18))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@437)) ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@241)) ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@442 Int) ($generated@@443 Int) ($generated@@444 Int) ) (!  (=> (or ($generated@@302 $generated@@442 $generated@@443 $generated@@444) (and (not (= 2 $generated@@127)) (and (> $generated@@443 0) (> $generated@@444 0)))) (and (=> (> $generated@@442 0) (and ($generated@@132 $generated@@442 $generated@@443) (=> ($generated@@128 $generated@@419 $generated@@442 $generated@@443) ($generated@@132 $generated@@442 $generated@@444)))) (= ($generated@@301 $generated@@442 $generated@@443 $generated@@444)  (and (and (> $generated@@442 0) ($generated@@128 $generated@@419 $generated@@442 $generated@@443)) ($generated@@128 $generated@@419 $generated@@442 $generated@@444)))))
 :pattern ( ($generated@@301 $generated@@442 $generated@@443 $generated@@444))
))))
(assert  (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@447)) $generated@@131)
 :pattern ( ($generated@@445 $generated@@447))
)) (= (type $generated@@446) $generated@@131)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 Int) ) (!  (=> (= (type $generated@@448) $generated@@131) (= ($generated@@128 $generated@@448 $generated@@449 $generated@@450) ($generated@@128 $generated@@446 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@128 ($generated@@445 $generated@@448) $generated@@449 $generated@@450))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@451 Int) ($generated@@452 Int) ($generated@@453 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@451 0) (> $generated@@452 0))))))) (= ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (= ($generated@@130 ($generated@@220 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452))) ($generated@@130 $generated@@453))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@454 () Int)
(declare-fun $generated@@455 () Int)
(declare-fun $generated@@456 () Int)
(declare-fun $generated@@457 () Int)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Int)
(declare-fun $generated@@460 () Int)
(declare-fun $generated@@461 () Int)
(declare-fun $generated@@462 () Int)
(declare-fun $generated@@463 () T@U)
(declare-fun $generated@@464 () Int)
(declare-fun $generated@@465 () Bool)
(declare-fun $generated@@466 () Int)
(declare-fun $generated@@467 () T@U)
(declare-fun $generated@@468 (T@U) Bool)
(declare-fun $generated@@469 () Int)
(declare-fun $generated@@470 () Int)
(declare-fun $generated@@471 () Int)
(declare-fun $generated@@472 () Int)
(declare-fun $generated@@473 () Int)
(declare-fun $generated@@474 () Int)
(declare-fun $generated@@475 () Int)
(declare-fun $generated@@476 () Int)
(declare-fun $generated@@477 () Int)
(declare-fun $generated@@478 () Int)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@480 () T@U)
(declare-fun $generated@@481 () Int)
(declare-fun $generated@@482 () T@U)
(declare-fun $generated@@483 () Int)
(declare-fun $generated@@484 () Int)
(declare-fun $generated@@485 () Int)
(declare-fun $generated@@486 () Int)
(declare-fun $generated@@487 () T@U)
(declare-fun $generated@@488 () Int)
(declare-fun $generated@@489 () Int)
(declare-fun $generated@@490 () Int)
(declare-fun $generated@@491 () Int)
(declare-fun $generated@@492 () Int)
(declare-fun $generated@@493 () Int)
(declare-fun $generated@@494 () Int)
(declare-fun $generated@@495 () Int)
(declare-fun $generated@@496 () T@U)
(declare-fun $generated@@497 () T@U)
(declare-fun $generated@@498 () T@U)
(declare-fun $generated@@499 () T@U)
(declare-fun $generated@@500 () Int)
(declare-fun $generated@@501 () Int)
(declare-fun $generated@@502 () Int)
(declare-fun $generated@@503 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@487) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@463) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@479) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@480) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@482) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@467) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@496) $generated@@72)) (= (type $generated@@497) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@498) ($generated@@155 $generated@@72 $generated@@4))) (= (type $generated@@499) $generated@@131)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 120) (let (($generated@@504 true))
(let (($generated@@505  (=> (and (not (= $generated@@454 ($generated@@130 3))) (= (ControlFlow 0 62) 59)) $generated@@504)))
(let (($generated@@506  (=> (and (= $generated@@454 ($generated@@130 3)) (= (ControlFlow 0 61) 59)) $generated@@504)))
(let (($generated@@507  (=> (=> (= $generated@@455 ($generated@@130 3)) (= $generated@@456 $generated@@457)) (and (=> (= (ControlFlow 0 63) 61) $generated@@506) (=> (= (ControlFlow 0 63) 62) $generated@@505)))))
(let (($generated@@508  (=> (and (not (=> (= $generated@@455 ($generated@@130 3)) (= $generated@@456 $generated@@457))) (= (ControlFlow 0 60) 59)) $generated@@504)))
(let (($generated@@509  (=> (not (= $generated@@455 ($generated@@130 3))) (and (=> (= (ControlFlow 0 65) 63) $generated@@507) (=> (= (ControlFlow 0 65) 60) $generated@@508)))))
(let (($generated@@510  (=> (= $generated@@455 ($generated@@130 3)) (and (=> (= (ControlFlow 0 64) 63) $generated@@507) (=> (= (ControlFlow 0 64) 60) $generated@@508)))))
(let (($generated@@511  (=> (=> (= $generated@@454 ($generated@@130 2)) (and (<= $generated@@456 $generated@@458) (=> (<= $generated@@458 $generated@@459) (= $generated@@458 $generated@@456)))) (and (=> (= (ControlFlow 0 66) 64) $generated@@510) (=> (= (ControlFlow 0 66) 65) $generated@@509)))))
(let (($generated@@512  (=> (and (< $generated@@459 $generated@@458) (= (ControlFlow 0 70) 66)) $generated@@511)))
(let (($generated@@513  (=> (and (<= $generated@@458 $generated@@459) (= (ControlFlow 0 69) 66)) $generated@@511)))
(let (($generated@@514  (=> (<= $generated@@456 $generated@@458) (and (=> (= (ControlFlow 0 71) 69) $generated@@513) (=> (= (ControlFlow 0 71) 70) $generated@@512)))))
(let (($generated@@515  (=> (and (< $generated@@458 $generated@@456) (= (ControlFlow 0 68) 66)) $generated@@511)))
(let (($generated@@516  (=> (= $generated@@454 ($generated@@130 2)) (and (=> (= (ControlFlow 0 72) 71) $generated@@514) (=> (= (ControlFlow 0 72) 68) $generated@@515)))))
(let (($generated@@517  (=> (and (not (= $generated@@454 ($generated@@130 2))) (= (ControlFlow 0 67) 66)) $generated@@511)))
(let (($generated@@518  (=> (=> (= $generated@@455 ($generated@@130 2)) (and (<= $generated@@457 $generated@@460) (=> (<= $generated@@460 $generated@@461) (= $generated@@460 $generated@@457)))) (and (=> (= (ControlFlow 0 73) 72) $generated@@516) (=> (= (ControlFlow 0 73) 67) $generated@@517)))))
(let (($generated@@519  (=> (and (< $generated@@461 $generated@@460) (= (ControlFlow 0 77) 73)) $generated@@518)))
(let (($generated@@520  (=> (and (<= $generated@@460 $generated@@461) (= (ControlFlow 0 76) 73)) $generated@@518)))
(let (($generated@@521  (=> (<= $generated@@457 $generated@@460) (and (=> (= (ControlFlow 0 78) 76) $generated@@520) (=> (= (ControlFlow 0 78) 77) $generated@@519)))))
(let (($generated@@522  (=> (and (< $generated@@460 $generated@@457) (= (ControlFlow 0 75) 73)) $generated@@518)))
(let (($generated@@523  (=> (= $generated@@455 ($generated@@130 2)) (and (=> (= (ControlFlow 0 79) 78) $generated@@521) (=> (= (ControlFlow 0 79) 75) $generated@@522)))))
(let (($generated@@524  (=> (and (not (= $generated@@455 ($generated@@130 2))) (= (ControlFlow 0 74) 73)) $generated@@518)))
(let (($generated@@525  (=> (and (or (= $generated@@455 ($generated@@130 0)) (= $generated@@461 $generated@@456)) (or (= $generated@@454 ($generated@@130 0)) (= $generated@@459 $generated@@457))) (and (=> (= (ControlFlow 0 80) 79) $generated@@523) (=> (= (ControlFlow 0 80) 74) $generated@@524)))))
(let (($generated@@526  (=> (and (= $generated@@454 ($generated@@130 0)) (= (ControlFlow 0 83) 80)) $generated@@525)))
(let (($generated@@527  (=> (and (not (= $generated@@454 ($generated@@130 0))) (= (ControlFlow 0 82) 80)) $generated@@525)))
(let (($generated@@528  (=> (or (= $generated@@455 ($generated@@130 0)) (= $generated@@461 $generated@@456)) (and (=> (= (ControlFlow 0 84) 82) $generated@@527) (=> (= (ControlFlow 0 84) 83) $generated@@526)))))
(let (($generated@@529  (=> (and (not (or (= $generated@@455 ($generated@@130 0)) (= $generated@@461 $generated@@456))) (= (ControlFlow 0 81) 80)) $generated@@525)))
(let (($generated@@530  (=> (= $generated@@455 ($generated@@130 0)) (and (=> (= (ControlFlow 0 86) 84) $generated@@528) (=> (= (ControlFlow 0 86) 81) $generated@@529)))))
(let (($generated@@531  (=> (not (= $generated@@455 ($generated@@130 0))) (and (=> (= (ControlFlow 0 85) 84) $generated@@528) (=> (= (ControlFlow 0 85) 81) $generated@@529)))))
(let (($generated@@532  (=> (and (and (<= ($generated@@130 0) $generated@@455) (< $generated@@455 4)) (and (<= ($generated@@130 0) $generated@@454) (< $generated@@454 4))) (and (=> (= (ControlFlow 0 87) 85) $generated@@531) (=> (= (ControlFlow 0 87) 86) $generated@@530)))))
(let (($generated@@533  (=> (and (< $generated@@454 ($generated@@130 0)) (= (ControlFlow 0 90) 87)) $generated@@532)))
(let (($generated@@534  (=> (and (<= ($generated@@130 0) $generated@@454) (= (ControlFlow 0 89) 87)) $generated@@532)))
(let (($generated@@535  (=> (and (<= ($generated@@130 0) $generated@@455) (< $generated@@455 4)) (and (=> (= (ControlFlow 0 91) 89) $generated@@534) (=> (= (ControlFlow 0 91) 90) $generated@@533)))))
(let (($generated@@536  (=> (and (not (and (<= ($generated@@130 0) $generated@@455) (< $generated@@455 4))) (= (ControlFlow 0 88) 87)) $generated@@532)))
(let (($generated@@537  (=> (< $generated@@455 ($generated@@130 0)) (and (=> (= (ControlFlow 0 93) 91) $generated@@535) (=> (= (ControlFlow 0 93) 88) $generated@@536)))))
(let (($generated@@538  (=> (<= ($generated@@130 0) $generated@@455) (and (=> (= (ControlFlow 0 92) 91) $generated@@535) (=> (= (ControlFlow 0 92) 88) $generated@@536)))))
(let (($generated@@539  (=> (and (and (< 0 $generated@@456) (< 0 $generated@@457)) (and ($generated@@69 ($generated@@8 $generated@@462) $generated@@46 $generated@@463) ($generated@@69 ($generated@@8 $generated@@464) $generated@@46 $generated@@463))) (and (=> (= (ControlFlow 0 94) (- 0 98)) (> $generated@@462 0)) (and (=> (= (ControlFlow 0 94) (- 0 97)) (> $generated@@464 0)) (=> ($generated@@213 $generated@@462 $generated@@464) (=> (and ($generated@@69 ($generated@@8 $generated@@456) $generated@@46 $generated@@463) ($generated@@69 ($generated@@8 $generated@@457) $generated@@46 $generated@@463)) (and (=> (= (ControlFlow 0 94) (- 0 96)) (> $generated@@456 0)) (and (=> (= (ControlFlow 0 94) (- 0 95)) (> $generated@@457 0)) (=> ($generated@@213 $generated@@456 $generated@@457) (=> (and (and ($generated@@213 $generated@@462 $generated@@464) ($generated@@213 $generated@@456 $generated@@457)) (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@456 $generated@@457))) (and (=> (= (ControlFlow 0 94) 92) $generated@@538) (=> (= (ControlFlow 0 94) 93) $generated@@537)))))))))))))
(let (($generated@@540  (=> (and (<= $generated@@456 0) (= (ControlFlow 0 100) 94)) $generated@@539)))
(let (($generated@@541  (=> (and (< 0 $generated@@456) (= (ControlFlow 0 99) 94)) $generated@@539)))
(let (($generated@@542  (=> (not $generated@@465) (and (=> (= (ControlFlow 0 101) 99) $generated@@541) (=> (= (ControlFlow 0 101) 100) $generated@@540)))))
(let (($generated@@543  (=> (= (ControlFlow 0 52) (- 0 51)) (= $generated@@466 ($generated@@211 $generated@@462 $generated@@464)))))
(let (($generated@@544  (=> (and (= $generated@@455 ($generated@@130 3)) (= $generated@@454 ($generated@@130 3))) (and (=> (= (ControlFlow 0 53) (- 0 54)) (> $generated@@456 0)) (=> (> $generated@@456 0) (=> (and (and (and ($generated@@212 $generated@@467) ($generated@@468 $generated@@467)) ($generated@@213 $generated@@456 $generated@@456)) (and (and (= ($generated@@211 $generated@@456 $generated@@456) $generated@@456) (= $generated@@463 $generated@@467)) (and (= $generated@@466 $generated@@456) (= (ControlFlow 0 53) 52)))) $generated@@543))))))
(let (($generated@@545  (=> (=> (< 0 $generated@@469) (=> (< 0 $generated@@470) (and ($generated@@213 $generated@@462 $generated@@464) ($generated@@213 $generated@@469 $generated@@470)))) (and (=> (= (ControlFlow 0 5) (- 0 19)) (=> $generated@@465 (< 0 $generated@@469))) (=> (=> $generated@@465 (< 0 $generated@@469)) (and (=> (= (ControlFlow 0 5) (- 0 18)) (=> $generated@@465 (< 0 $generated@@470))) (=> (=> $generated@@465 (< 0 $generated@@470)) (and (=> (= (ControlFlow 0 5) (- 0 17)) (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@469 $generated@@470)))) (=> (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@469 $generated@@470))) (and (=> (= (ControlFlow 0 5) (- 0 16)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@471))) (=> (=> $generated@@465 (<= ($generated@@130 0) $generated@@471)) (and (=> (= (ControlFlow 0 5) (- 0 15)) (=> $generated@@465 (< $generated@@471 4))) (=> (=> $generated@@465 (< $generated@@471 4)) (and (=> (= (ControlFlow 0 5) (- 0 14)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@472))) (=> (=> $generated@@465 (<= ($generated@@130 0) $generated@@472)) (and (=> (= (ControlFlow 0 5) (- 0 13)) (=> $generated@@465 (< $generated@@472 4))) (=> (=> $generated@@465 (< $generated@@472 4)) (and (=> (= (ControlFlow 0 5) (- 0 12)) (=> $generated@@465 (or (= $generated@@471 ($generated@@130 0)) (= $generated@@473 $generated@@469)))) (=> (=> $generated@@465 (or (= $generated@@471 ($generated@@130 0)) (= $generated@@473 $generated@@469))) (and (=> (= (ControlFlow 0 5) (- 0 11)) (=> $generated@@465 (or (= $generated@@472 ($generated@@130 0)) (= $generated@@474 $generated@@470)))) (=> (=> $generated@@465 (or (= $generated@@472 ($generated@@130 0)) (= $generated@@474 $generated@@470))) (and (=> (= (ControlFlow 0 5) (- 0 10)) (=> $generated@@465 (=> (= $generated@@471 ($generated@@130 2)) (<= $generated@@470 $generated@@475)))) (=> (=> $generated@@465 (=> (= $generated@@471 ($generated@@130 2)) (<= $generated@@470 $generated@@475))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (=> $generated@@465 (=> (= $generated@@471 ($generated@@130 2)) (=> (<= $generated@@475 $generated@@473) (= $generated@@475 $generated@@470))))) (=> (=> $generated@@465 (=> (= $generated@@471 ($generated@@130 2)) (=> (<= $generated@@475 $generated@@473) (= $generated@@475 $generated@@470)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (=> $generated@@465 (=> (= $generated@@472 ($generated@@130 2)) (<= $generated@@469 $generated@@476)))) (=> (=> $generated@@465 (=> (= $generated@@472 ($generated@@130 2)) (<= $generated@@469 $generated@@476))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (=> $generated@@465 (=> (= $generated@@472 ($generated@@130 2)) (=> (<= $generated@@476 $generated@@474) (= $generated@@476 $generated@@469))))) (=> (=> $generated@@465 (=> (= $generated@@472 ($generated@@130 2)) (=> (<= $generated@@476 $generated@@474) (= $generated@@476 $generated@@469)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@465 (=> (= $generated@@471 ($generated@@130 3)) (= $generated@@469 $generated@@470)))) (=> (=> $generated@@465 (=> (= $generated@@471 ($generated@@130 3)) (= $generated@@469 $generated@@470))) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@465 (=> (= $generated@@472 ($generated@@130 3)) (= $generated@@469 $generated@@470)))))))))))))))))))))))))))))))))))
(let (($generated@@546  (=> (and (and (= $generated@@454 ($generated@@130 2)) (= $generated@@459 $generated@@458)) (and (= $generated@@477 ($generated@@130 3)) (= $generated@@472 $generated@@477))) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 47) 5)))) $generated@@545))))
(let (($generated@@547  (=> (and (not (= $generated@@454 ($generated@@130 2))) (= (ControlFlow 0 49) 47)) $generated@@546)))
(let (($generated@@548  (=> (and (= $generated@@454 ($generated@@130 2)) (= (ControlFlow 0 48) 47)) $generated@@546)))
(let (($generated@@549  (=> (and (and (= $generated@@454 ($generated@@130 2)) (< $generated@@459 $generated@@458)) (and (= $generated@@478 ($generated@@130 0)) (= $generated@@472 $generated@@478))) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 44) 5)))) $generated@@545))))
(let (($generated@@550  (=> (and (not (= $generated@@454 ($generated@@130 2))) (= (ControlFlow 0 46) 44)) $generated@@549)))
(let (($generated@@551  (=> (and (= $generated@@454 ($generated@@130 2)) (= (ControlFlow 0 45) 44)) $generated@@549)))
(let (($generated@@552  (=> (and (= $generated@@454 ($generated@@130 2)) (> $generated@@459 $generated@@458)) (and (=> (= (ControlFlow 0 35) (- 0 41)) (> $generated@@456 0)) (=> (> $generated@@456 0) (and (=> (= (ControlFlow 0 35) (- 0 40)) (> $generated@@457 0)) (=> (> $generated@@457 0) (=> (and ($generated@@212 $generated@@479) ($generated@@468 $generated@@479)) (=> (and (and ($generated@@213 $generated@@456 $generated@@457) ($generated@@213 $generated@@457 $generated@@456)) (and (= ($generated@@211 $generated@@456 $generated@@457) ($generated@@211 $generated@@457 $generated@@456)) (= $generated@@463 $generated@@479))) (and (=> (= (ControlFlow 0 35) (- 0 39)) (> $generated@@457 $generated@@456)) (=> (> $generated@@457 $generated@@456) (and (=> (= (ControlFlow 0 35) (- 0 38)) (> $generated@@456 0)) (=> (> $generated@@456 0) (=> (and ($generated@@212 $generated@@480) ($generated@@468 $generated@@480)) (=> (and (and (and ($generated@@213 $generated@@457 $generated@@456) ($generated@@213 (- $generated@@457 $generated@@456) $generated@@456)) (= ($generated@@211 $generated@@457 $generated@@456) ($generated@@211 (- $generated@@457 $generated@@456) $generated@@456))) (and (= $generated@@479 $generated@@480) (= $generated@@481 (- $generated@@457 $generated@@456)))) (and (=> (= (ControlFlow 0 35) (- 0 37)) (> $generated@@481 0)) (=> (> $generated@@481 0) (and (=> (= (ControlFlow 0 35) (- 0 36)) (> $generated@@456 0)) (=> (> $generated@@456 0) (=> (and ($generated@@212 $generated@@482) ($generated@@468 $generated@@482)) (=> (and (and (and (and ($generated@@213 $generated@@481 $generated@@456) ($generated@@213 $generated@@456 $generated@@481)) (= ($generated@@211 $generated@@481 $generated@@456) ($generated@@211 $generated@@456 $generated@@481))) (and (and (= $generated@@480 $generated@@482) (= $generated@@483 (- $generated@@459 $generated@@458))) (and (= $generated@@484 ($generated@@130 0)) (= $generated@@472 $generated@@484)))) (and (and (and (= $generated@@470 $generated@@483) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 35) 5))))) $generated@@545)))))))))))))))))))))
(let (($generated@@553  (=> (and (not (= $generated@@454 ($generated@@130 2))) (= (ControlFlow 0 43) 35)) $generated@@552)))
(let (($generated@@554  (=> (and (= $generated@@454 ($generated@@130 2)) (= (ControlFlow 0 42) 35)) $generated@@552)))
(let (($generated@@555  (=> (and (and (= $generated@@455 ($generated@@130 2)) (= $generated@@461 $generated@@460)) (and (= $generated@@485 ($generated@@130 3)) (= $generated@@472 $generated@@454))) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@485))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 32) 5)))) $generated@@545))))
(let (($generated@@556  (=> (and (not (= $generated@@455 ($generated@@130 2))) (= (ControlFlow 0 34) 32)) $generated@@555)))
(let (($generated@@557  (=> (and (= $generated@@455 ($generated@@130 2)) (= (ControlFlow 0 33) 32)) $generated@@555)))
(let (($generated@@558  (=> (and (and (= $generated@@455 ($generated@@130 2)) (< $generated@@461 $generated@@460)) (and (= $generated@@486 ($generated@@130 0)) (= $generated@@472 $generated@@454))) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@486))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 29) 5)))) $generated@@545))))
(let (($generated@@559  (=> (and (not (= $generated@@455 ($generated@@130 2))) (= (ControlFlow 0 31) 29)) $generated@@558)))
(let (($generated@@560  (=> (and (= $generated@@455 ($generated@@130 2)) (= (ControlFlow 0 30) 29)) $generated@@558)))
(let (($generated@@561  (=> (and (= $generated@@455 ($generated@@130 2)) (> $generated@@461 $generated@@460)) (and (=> (= (ControlFlow 0 24) (- 0 26)) (> $generated@@456 $generated@@457)) (=> (> $generated@@456 $generated@@457) (and (=> (= (ControlFlow 0 24) (- 0 25)) (> $generated@@457 0)) (=> (> $generated@@457 0) (=> (and ($generated@@212 $generated@@487) ($generated@@468 $generated@@487)) (=> (and (and (and (and ($generated@@213 $generated@@456 $generated@@457) ($generated@@213 (- $generated@@456 $generated@@457) $generated@@457)) (= ($generated@@211 $generated@@456 $generated@@457) ($generated@@211 (- $generated@@456 $generated@@457) $generated@@457))) (and (and (= $generated@@463 $generated@@487) (= $generated@@488 (- $generated@@461 $generated@@460))) (and (= $generated@@489 ($generated@@130 0)) (= $generated@@472 $generated@@454)))) (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@489))) (and (and (= $generated@@469 $generated@@488) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 24) 5))))) $generated@@545)))))))))
(let (($generated@@562  (=> (and (not (= $generated@@455 ($generated@@130 2))) (= (ControlFlow 0 28) 24)) $generated@@561)))
(let (($generated@@563  (=> (and (= $generated@@455 ($generated@@130 2)) (= (ControlFlow 0 27) 24)) $generated@@561)))
(let (($generated@@564  (=> (= $generated@@454 ($generated@@130 1)) (=> (and (= $generated@@490 ($generated@@130 2)) (= $generated@@472 $generated@@490)) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@456)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 23) 5)))) $generated@@545)))))
(let (($generated@@565  (=> (= $generated@@454 ($generated@@130 0)) (=> (and (= $generated@@491 ($generated@@130 1)) (= $generated@@472 $generated@@491)) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@457) (= $generated@@471 $generated@@455))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 22) 5)))) $generated@@545)))))
(let (($generated@@566  (=> (= $generated@@455 ($generated@@130 1)) (=> (and (= $generated@@492 ($generated@@130 2)) (= $generated@@472 $generated@@454)) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@492))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@457)) (and (= $generated@@473 $generated@@461) (= (ControlFlow 0 21) 5)))) $generated@@545)))))
(let (($generated@@567  (=> (= $generated@@455 ($generated@@130 0)) (=> (and (= $generated@@493 ($generated@@130 1)) (= $generated@@472 $generated@@454)) (=> (and (and (and (= $generated@@470 $generated@@457) (= $generated@@476 $generated@@458)) (and (= $generated@@474 $generated@@459) (= $generated@@471 $generated@@493))) (and (and (= $generated@@469 $generated@@456) (= $generated@@475 $generated@@460)) (and (= $generated@@473 $generated@@456) (= (ControlFlow 0 20) 5)))) $generated@@545)))))
(let (($generated@@568  (=> (and (and (and (and (and (and (and (and (and (and (not (= $generated@@455 ($generated@@130 0))) (not (= $generated@@455 ($generated@@130 1)))) (not (and (= $generated@@455 ($generated@@130 2)) (> $generated@@461 $generated@@460)))) (not (and (= $generated@@455 ($generated@@130 2)) (< $generated@@461 $generated@@460)))) (not (and (= $generated@@455 ($generated@@130 2)) (= $generated@@461 $generated@@460)))) (not (= $generated@@454 ($generated@@130 0)))) (not (= $generated@@454 ($generated@@130 1)))) (not (and (= $generated@@454 ($generated@@130 2)) (> $generated@@459 $generated@@458)))) (not (and (= $generated@@454 ($generated@@130 2)) (< $generated@@459 $generated@@458)))) (not (and (= $generated@@454 ($generated@@130 2)) (= $generated@@459 $generated@@458)))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@569  (=> (not (and (= $generated@@455 ($generated@@130 3)) (= $generated@@454 ($generated@@130 3)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 50) 20) $generated@@567) (=> (= (ControlFlow 0 50) 21) $generated@@566)) (=> (= (ControlFlow 0 50) 22) $generated@@565)) (=> (= (ControlFlow 0 50) 23) $generated@@564)) (=> (= (ControlFlow 0 50) 3) $generated@@568)) (=> (= (ControlFlow 0 50) 48) $generated@@548)) (=> (= (ControlFlow 0 50) 49) $generated@@547)) (=> (= (ControlFlow 0 50) 45) $generated@@551)) (=> (= (ControlFlow 0 50) 46) $generated@@550)) (=> (= (ControlFlow 0 50) 42) $generated@@554)) (=> (= (ControlFlow 0 50) 43) $generated@@553)) (=> (= (ControlFlow 0 50) 33) $generated@@557)) (=> (= (ControlFlow 0 50) 34) $generated@@556)) (=> (= (ControlFlow 0 50) 30) $generated@@560)) (=> (= (ControlFlow 0 50) 31) $generated@@559)) (=> (= (ControlFlow 0 50) 27) $generated@@563)) (=> (= (ControlFlow 0 50) 28) $generated@@562)))))
(let (($generated@@570  (and (=> (= (ControlFlow 0 55) 53) $generated@@544) (=> (= (ControlFlow 0 55) 50) $generated@@569))))
(let (($generated@@571  (=> (and (not (= $generated@@455 ($generated@@130 3))) (= (ControlFlow 0 57) 55)) $generated@@570)))
(let (($generated@@572  (=> (and (= $generated@@455 ($generated@@130 3)) (= (ControlFlow 0 56) 55)) $generated@@570)))
(let (($generated@@573  (=> $generated@@465 (and (=> (= (ControlFlow 0 58) 56) $generated@@572) (=> (= (ControlFlow 0 58) 57) $generated@@571)))))
(let (($generated@@574  (and (=> (= (ControlFlow 0 102) 101) $generated@@542) (=> (= (ControlFlow 0 102) 58) $generated@@573))))
(let (($generated@@575 true))
(let (($generated@@576  (=> (and ($generated@@212 $generated@@463) ($generated@@468 $generated@@463)) (=> (and (and (and (and (and (and (and (and (and (not false) (<= 1 $generated@@462)) (<= 1 $generated@@464)) (and (<= 0 $generated@@455) (< $generated@@455 4))) (and (<= 0 $generated@@454) (< $generated@@454 4))) (= $generated@@494 0)) (= $generated@@495 0)) (=> $generated@@465 true)) (and (and (and (=> $generated@@465 (< 0 $generated@@456)) (=> $generated@@465 (< 0 $generated@@457))) (and (=> $generated@@465 (and ($generated@@213 $generated@@462 $generated@@464) ($generated@@213 $generated@@456 $generated@@457))) (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@456 $generated@@457))))) (and (and (=> $generated@@465 true) (=> $generated@@465 (<= ($generated@@130 0) $generated@@455))) (and (=> $generated@@465 (< $generated@@455 4)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@454)))))) (and (and (and (and (=> $generated@@465 (< $generated@@454 4)) (=> $generated@@465 true)) (and (=> $generated@@465 (or (= $generated@@455 ($generated@@130 0)) (= $generated@@461 $generated@@456))) (=> $generated@@465 (or (= $generated@@454 ($generated@@130 0)) (= $generated@@459 $generated@@457))))) (and (and (=> $generated@@465 true) (=> $generated@@465 (=> (= $generated@@455 ($generated@@130 2)) (<= $generated@@457 $generated@@460)))) (and (=> $generated@@465 (=> (= $generated@@455 ($generated@@130 2)) (=> (<= $generated@@460 $generated@@461) (= $generated@@460 $generated@@457)))) (=> $generated@@465 true)))) (and (and (and (=> $generated@@465 (=> (= $generated@@454 ($generated@@130 2)) (<= $generated@@456 $generated@@458))) (=> $generated@@465 (=> (= $generated@@454 ($generated@@130 2)) (=> (<= $generated@@458 $generated@@459) (= $generated@@458 $generated@@456))))) (and (=> $generated@@465 true) (=> $generated@@465 (=> (= $generated@@455 ($generated@@130 3)) (= $generated@@456 $generated@@457))))) (and (and (=> $generated@@465 (=> (= $generated@@454 ($generated@@130 3)) (= $generated@@456 $generated@@457))) (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@72) (=> (and (not (= $generated@@577 $generated@@496)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@497 $generated@@577) $generated@@60))) (= ($generated@@76 $generated@@463 $generated@@577) ($generated@@76 $generated@@497 $generated@@577))))
 :pattern ( ($generated@@76 $generated@@463 $generated@@577))
))) (and ($generated@@144 $generated@@497 $generated@@463) (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@64 (type $generated@@579))))
 (=> (and (and (= (type $generated@@578) $generated@@72) (= (type $generated@@579) ($generated@@63 $generated@@580))) (and (not (= $generated@@578 $generated@@496)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@497 $generated@@578) $generated@@60)))) (or (= ($generated@@78 ($generated@@76 $generated@@463 $generated@@578) $generated@@579) ($generated@@78 ($generated@@76 $generated@@497 $generated@@578) $generated@@579)) ($generated@@0 ($generated@@153 $generated@@498 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@463 $generated@@578) $generated@@579))
))))))) (and (=> (= (ControlFlow 0 103) 1) $generated@@575) (=> (= (ControlFlow 0 103) 102) $generated@@574))))))
(let (($generated@@581  (=> (= ($generated@@445 $generated@@419) $generated@@419) (=> (and (and (= ($generated@@445 $generated@@499) $generated@@499) (= $generated@@498 ($generated@@154 $generated@@496 $generated@@497 $generated@@60 false))) (and (= $generated@@494 ($generated@@130 0)) (= $generated@@495 ($generated@@130 0)))) (and (=> (= (ControlFlow 0 104) (- 0 119)) (=> $generated@@465 (< 0 $generated@@462))) (=> (=> $generated@@465 (< 0 $generated@@462)) (and (=> (= (ControlFlow 0 104) (- 0 118)) (=> $generated@@465 (< 0 $generated@@464))) (=> (=> $generated@@465 (< 0 $generated@@464)) (and (=> (= (ControlFlow 0 104) (- 0 117)) (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@462 $generated@@464)))) (=> (=> $generated@@465 (= ($generated@@211 $generated@@462 $generated@@464) ($generated@@211 $generated@@462 $generated@@464))) (and (=> (= (ControlFlow 0 104) (- 0 116)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@494))) (=> (=> $generated@@465 (<= ($generated@@130 0) $generated@@494)) (and (=> (= (ControlFlow 0 104) (- 0 115)) (=> $generated@@465 (< $generated@@494 4))) (=> (=> $generated@@465 (< $generated@@494 4)) (and (=> (= (ControlFlow 0 104) (- 0 114)) (=> $generated@@465 (<= ($generated@@130 0) $generated@@495))) (=> (=> $generated@@465 (<= ($generated@@130 0) $generated@@495)) (and (=> (= (ControlFlow 0 104) (- 0 113)) (=> $generated@@465 (< $generated@@495 4))) (=> (=> $generated@@465 (< $generated@@495 4)) (and (=> (= (ControlFlow 0 104) (- 0 112)) (=> $generated@@465 (or (= $generated@@494 ($generated@@130 0)) (= $generated@@500 $generated@@462)))) (=> (=> $generated@@465 (or (= $generated@@494 ($generated@@130 0)) (= $generated@@500 $generated@@462))) (and (=> (= (ControlFlow 0 104) (- 0 111)) (=> $generated@@465 (or (= $generated@@495 ($generated@@130 0)) (= $generated@@501 $generated@@464)))) (=> (=> $generated@@465 (or (= $generated@@495 ($generated@@130 0)) (= $generated@@501 $generated@@464))) (and (=> (= (ControlFlow 0 104) (- 0 110)) (=> $generated@@465 (=> (= $generated@@494 ($generated@@130 2)) (<= $generated@@464 $generated@@502)))) (=> (=> $generated@@465 (=> (= $generated@@494 ($generated@@130 2)) (<= $generated@@464 $generated@@502))) (and (=> (= (ControlFlow 0 104) (- 0 109)) (=> $generated@@465 (=> (= $generated@@494 ($generated@@130 2)) (=> (<= $generated@@502 $generated@@500) (= $generated@@502 $generated@@464))))) (=> (=> $generated@@465 (=> (= $generated@@494 ($generated@@130 2)) (=> (<= $generated@@502 $generated@@500) (= $generated@@502 $generated@@464)))) (and (=> (= (ControlFlow 0 104) (- 0 108)) (=> $generated@@465 (=> (= $generated@@495 ($generated@@130 2)) (<= $generated@@462 $generated@@503)))) (=> (=> $generated@@465 (=> (= $generated@@495 ($generated@@130 2)) (<= $generated@@462 $generated@@503))) (and (=> (= (ControlFlow 0 104) (- 0 107)) (=> $generated@@465 (=> (= $generated@@495 ($generated@@130 2)) (=> (<= $generated@@503 $generated@@501) (= $generated@@503 $generated@@462))))) (=> (=> $generated@@465 (=> (= $generated@@495 ($generated@@130 2)) (=> (<= $generated@@503 $generated@@501) (= $generated@@503 $generated@@462)))) (and (=> (= (ControlFlow 0 104) (- 0 106)) (=> $generated@@465 (=> (= $generated@@494 ($generated@@130 3)) (= $generated@@462 $generated@@464)))) (=> (=> $generated@@465 (=> (= $generated@@494 ($generated@@130 3)) (= $generated@@462 $generated@@464))) (and (=> (= (ControlFlow 0 104) (- 0 105)) (=> $generated@@465 (=> (= $generated@@495 ($generated@@130 3)) (= $generated@@462 $generated@@464)))) (=> (=> $generated@@465 (=> (= $generated@@495 ($generated@@130 3)) (= $generated@@462 $generated@@464))) (=> (= (ControlFlow 0 104) 103) $generated@@576)))))))))))))))))))))))))))))))))))
(let (($generated@@582  (=> (and ($generated@@212 $generated@@497) ($generated@@468 $generated@@497)) (=> (and (and (= 7 $generated@@127) (> $generated@@462 0)) (and (> $generated@@464 0) (= (ControlFlow 0 120) 104))) $generated@@581))))
$generated@@582))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (Int Int) Bool)
(declare-fun $generated@@214 (Int Int) Bool)
(declare-fun $generated@@215 (Int Int) Int)
(declare-fun $generated@@220 (Int Int) Int)
(declare-fun $generated@@228 (T@T) T@U)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@239 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 () T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@301 (Int Int Int) Bool)
(declare-fun $generated@@302 (Int Int Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) Int)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@446 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@146) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (and (= (type $generated@@148) $generated@@131) (or ($generated@@132 $generated@@149 $generated@@150) (and (not (= 1 $generated@@127)) (and (> $generated@@149 0) (> $generated@@150 0))))) (and (forall (($generated@@151 Int) ) (!  (=> (> $generated@@151 0) ($generated@@135 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@151 $generated@@149 $generated@@150))
)) (= ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150) (exists (($generated@@152 Int) ) (!  (and (> $generated@@152 0) ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
 :pattern ( ($generated@@134 $generated@@152 $generated@@149 $generated@@150))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@148) $generated@@149 $generated@@150))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@159 $generated@@160)) 13)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@157 ($generated@@155 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@155 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@157 (type $generated@@165))))
(= (type ($generated@@153 $generated@@165 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@153 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(let (($generated@@174 (type $generated@@170)))
(= (type ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172)) ($generated@@155 $generated@@174 $generated@@173))))
 :pattern ( ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@157 (type $generated@@175))))
 (=> (= (type $generated@@178) $generated@@179) (= ($generated@@153 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@176 $generated@@177) $generated@@178)))
 :weight 0
))) (and (and (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@153 ($generated@@158 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@153 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@153 ($generated@@158 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@153 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or true (= ($generated@@153 ($generated@@158 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@153 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ) (! (= (type ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@155 $generated@@72 $generated@@4))
 :pattern ( ($generated@@154 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@64 (type $generated@@207))))
 (=> (and (and (and (and (= (type $generated@@202) $generated@@72) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@204) ($generated@@63 $generated@@4))) (= (type $generated@@206) $generated@@72)) (= (type $generated@@207) ($generated@@63 $generated@@208))) (= ($generated@@0 ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (not (= $generated@@206 $generated@@202)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@203 $generated@@206) $generated@@204))) $generated@@205))))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@130 $generated@@209) $generated@@209)
 :pattern ( ($generated@@130 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@133 $generated@@210) $generated@@210)
 :pattern ( ($generated@@133 $generated@@210))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@216 T@U) ($generated@@217 Int) ($generated@@218 Int) ) (!  (=> (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@216) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@217 0) (> $generated@@218 0))))))))) (and ($generated@@214 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (= ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) (let (($generated@@219 ($generated@@215 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218))))
$generated@@219))))
 :weight 3
 :pattern ( ($generated@@211 ($generated@@130 $generated@@217) ($generated@@130 $generated@@218)) ($generated@@212 $generated@@216))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (or ($generated@@135 $generated@@221 $generated@@222 $generated@@223) (and (not (= 0 $generated@@127)) (and (> $generated@@221 0) (> $generated@@222 0)))) (= ($generated@@134 $generated@@221 $generated@@222 $generated@@223) (= ($generated@@220 $generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@134 $generated@@221 $generated@@222 $generated@@223))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (and (= (type $generated@@224) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@213 $generated@@225 $generated@@226) (and (not (= 5 $generated@@127)) (and ($generated@@212 $generated@@224) (and (> $generated@@225 0) (> $generated@@226 0)))))) (and ($generated@@214 $generated@@225 $generated@@226) (= ($generated@@211 $generated@@225 $generated@@226) (let (($generated@@227 ($generated@@215 $generated@@225 $generated@@226)))
$generated@@227))))
 :pattern ( ($generated@@211 $generated@@225 $generated@@226) ($generated@@212 $generated@@224))
))))
(assert  (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@232)) 14)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
))) (forall (($generated@@234 T@T) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@230 $generated@@234))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@235)) 0)
 :pattern ( ($generated@@228 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (= (type $generated@@236) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238) ($generated@@128 $generated@@236 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
)))
(assert  (and (= ($generated@@1 $generated@@241) 15) (forall (($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@61) (= (type $generated@@245) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245) ($generated@@69 $generated@@243 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@248) $generated@@241)) (= (type $generated@@249) $generated@@61)) ($generated@@144 $generated@@246 $generated@@247)) ($generated@@239 $generated@@248 $generated@@249 $generated@@246)) ($generated@@239 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@144 $generated@@246 $generated@@247) ($generated@@239 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@250) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@251) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@253) $generated@@61)) ($generated@@144 $generated@@250 $generated@@251)) ($generated@@69 $generated@@252 $generated@@253 $generated@@250)) ($generated@@69 $generated@@252 $generated@@253 $generated@@251))
 :pattern ( ($generated@@144 $generated@@250 $generated@@251) ($generated@@69 $generated@@252 $generated@@253 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 16)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 17)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@71 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@76 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@258 (type $generated@@290))))
(let (($generated@@292 ($generated@@257 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@256 $generated@@292 $generated@@291)) (or (= $generated@@290 ($generated@@255 $generated@@292 $generated@@291)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@290) $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@254 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@276 (type $generated@@294))))
(let (($generated@@296 ($generated@@275 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@274 $generated@@296 $generated@@295)) (or (= $generated@@294 ($generated@@273 $generated@@296 $generated@@295)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@294) $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@272 $generated@@294))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@298 Int) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (or ($generated@@135 $generated@@298 $generated@@299 $generated@@300) (and (not (= 0 $generated@@127)) (and (> $generated@@298 0) (> $generated@@299 0)))) true)
 :pattern ( ($generated@@134 $generated@@298 $generated@@299 $generated@@300))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@303 Int) ($generated@@304 Int) ($generated@@305 Int) ) (!  (=> (or ($generated@@302 $generated@@303 $generated@@304 $generated@@305) (and (not (= 2 $generated@@127)) (and (> $generated@@304 0) (> $generated@@305 0)))) true)
 :pattern ( ($generated@@301 $generated@@303 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 Int) ($generated@@307 Int) ) (!  (=> ($generated@@214 $generated@@306 $generated@@307) (and ($generated@@301 ($generated@@215 $generated@@306 $generated@@307) $generated@@306 $generated@@307) (forall (($generated@@308 Int) ) (!  (=> true (=> ($generated@@301 $generated@@308 $generated@@306 $generated@@307) (<= $generated@@308 ($generated@@215 $generated@@306 $generated@@307))))
 :pattern ( ($generated@@301 $generated@@308 $generated@@306 $generated@@307))
))))
 :pattern ( ($generated@@215 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@241) ($generated@@0 ($generated@@76 $generated@@311 $generated@@314))) ($generated@@239 $generated@@314 $generated@@312 $generated@@313))
 :pattern ( ($generated@@76 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@309 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@71 $generated@@241 $generated@@4)) (= (type $generated@@318) $generated@@61)) (= (type $generated@@319) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@241) ($generated@@0 ($generated@@76 $generated@@317 $generated@@320))) ($generated@@239 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@76 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@69 $generated@@317 ($generated@@315 $generated@@318) $generated@@319))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@321) $generated@@131) (or ($generated@@132 $generated@@322 $generated@@323) (and (not (= 1 $generated@@127)) (and (> $generated@@322 0) (> $generated@@323 0))))) true)
 :pattern ( ($generated@@128 $generated@@321 $generated@@322 $generated@@323))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@324 Int) ($generated@@325 Int) ) (!  (=> (or ($generated@@213 $generated@@324 $generated@@325) (and (not (= 5 $generated@@127)) (and (> $generated@@324 0) (> $generated@@325 0)))) true)
 :pattern ( ($generated@@211 $generated@@324 $generated@@325))
))))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@258 (type $generated@@330))))
(let (($generated@@332 ($generated@@257 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@256 $generated@@241 $generated@@241)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))) (and ($generated@@239 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@239 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert  (and (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= (type ($generated@@338 $generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340 $generated@@341))
)) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@276 (type $generated@@342))))
(let (($generated@@344 ($generated@@275 (type $generated@@342))))
(= (type ($generated@@339 $generated@@342)) ($generated@@71 $generated@@344 $generated@@343))))
 :pattern ( ($generated@@339 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (= (type $generated@@345) ($generated@@274 $generated@@241 $generated@@241)) (= (type $generated@@346) $generated@@61)) (= (type $generated@@347) $generated@@61)) (= (type $generated@@348) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@241) ($generated@@0 ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))) (and ($generated@@239 ($generated@@76 ($generated@@339 $generated@@345) $generated@@349) $generated@@347 $generated@@348) ($generated@@239 $generated@@349 $generated@@346 $generated@@348)))
 :pattern ( ($generated@@76 ($generated@@339 $generated@@345) $generated@@349))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@345) $generated@@349))
))))
 :pattern ( ($generated@@69 $generated@@345 ($generated@@338 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@350 $generated@@352))) (and ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))) ($generated@@144 $generated@@350 $generated@@352))
 :pattern ( ($generated@@144 $generated@@350 $generated@@351) ($generated@@144 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@71 $generated@@354 $generated@@4))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@276 (type $generated@@355))))
(let (($generated@@357 ($generated@@275 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@274 $generated@@357 $generated@@356)) (= (= $generated@@355 ($generated@@273 $generated@@357 $generated@@356)) (= ($generated@@272 $generated@@355) ($generated@@353 $generated@@357))))))
 :pattern ( ($generated@@272 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@231 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@230 $generated@@359)) (<= 0 ($generated@@229 $generated@@358))))
 :pattern ( ($generated@@229 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@61) (= (type $generated@@363) $generated@@61)) (= ($generated@@360 ($generated@@326 $generated@@362 $generated@@363)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@61) (= (type $generated@@367) $generated@@61)) (= ($generated@@364 ($generated@@326 $generated@@366 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@326 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@61) (= (type $generated@@369) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@368 $generated@@369)) $generated@@58))
 :pattern ( ($generated@@326 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@61) (= (type $generated@@373) $generated@@61)) (= ($generated@@370 ($generated@@338 $generated@@372 $generated@@373)) $generated@@372))
 :pattern ( ($generated@@338 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@61) (= (type $generated@@377) $generated@@61)) (= ($generated@@374 ($generated@@338 $generated@@376 $generated@@377)) $generated@@377))
 :pattern ( ($generated@@338 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@61) (= (type $generated@@379) $generated@@61)) (= ($generated@@67 ($generated@@338 $generated@@378 $generated@@379)) $generated@@59))
 :pattern ( ($generated@@338 $generated@@378 $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ($generated@@384 Int) ) (! (let (($generated@@385 ($generated@@231 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@230 $generated@@241)) (= (type $generated@@387) $generated@@61)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388) (forall (($generated@@389 Int) ) (!  (=> (and (<= 0 $generated@@389) (< $generated@@389 ($generated@@229 $generated@@386))) ($generated@@239 ($generated@@381 $generated@@386 $generated@@389) $generated@@387 $generated@@388))
 :pattern ( ($generated@@381 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@69 $generated@@386 ($generated@@380 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 Int) ) (! (= ($generated@@390 ($generated@@70 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@70 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@61)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@392 ($generated@@309 $generated@@394)) $generated@@394))
 :pattern ( ($generated@@309 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@61) (= ($generated@@67 ($generated@@309 $generated@@395)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) $generated@@61)
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@61) (= ($generated@@396 ($generated@@315 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@315 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@399)) $generated@@55))
 :pattern ( ($generated@@315 $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@61)
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@61)
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@61) (= ($generated@@401 ($generated@@400 $generated@@404)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@61) (= ($generated@@67 ($generated@@400 $generated@@405)) $generated@@56))
 :pattern ( ($generated@@400 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@61)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@61) (= ($generated@@406 ($generated@@380 $generated@@408)) $generated@@408))
 :pattern ( ($generated@@380 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@61) (= ($generated@@67 ($generated@@380 $generated@@409)) $generated@@57))
 :pattern ( ($generated@@380 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated@@410 $generated@@414 ($generated@@240 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@240 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (not ($generated@@0 ($generated@@76 ($generated@@353 $generated@@416) $generated@@415))))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@76 ($generated@@353 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Int) ) (! (= ($generated@@220 $generated@@417 $generated@@418) (* $generated@@417 $generated@@418))
 :pattern ( ($generated@@220 $generated@@417 $generated@@418))
)))
(assert (= (type $generated@@419) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@420 Int) ($generated@@421 Int) ($generated@@422 Int) ) (!  (=> (or ($generated@@302 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@421 0) (> $generated@@422 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@420 0)))) (and ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) (=> ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421)) ($generated@@132 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))) (= ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422))  (and (and (> $generated@@420 0) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421))) ($generated@@128 $generated@@419 ($generated@@130 $generated@@420) ($generated@@130 $generated@@422))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@130 $generated@@420) ($generated@@130 $generated@@421) ($generated@@130 $generated@@422)))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@71 $generated@@241 $generated@@2)) (= (type $generated@@424) $generated@@61)) (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@241) (< 0 ($generated ($generated@@76 $generated@@423 $generated@@426)))) ($generated@@239 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@76 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@69 $generated@@423 ($generated@@400 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))) ($generated@@133 ($generated@@240 ($generated@@8 $generated@@427))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@130 $generated@@427))))
)))
(assert (forall (($generated@@428 T@U) ) (! (= ($generated@@240 ($generated@@133 $generated@@428)) ($generated@@133 ($generated@@240 $generated@@428)))
 :pattern ( ($generated@@240 ($generated@@133 $generated@@428)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@231 (type $generated@@429))))
 (=> (and (= (type $generated@@429) ($generated@@230 $generated@@430)) (= ($generated@@229 $generated@@429) 0)) (= $generated@@429 ($generated@@228 $generated@@430))))
 :pattern ( ($generated@@229 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@432) $generated@@2)) ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
 :pattern ( ($generated@@69 $generated@@432 $generated@@46 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@434) $generated@@3)) ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
 :pattern ( ($generated@@69 $generated@@434 $generated@@47 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@436) $generated@@4)) ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
 :pattern ( ($generated@@69 $generated@@436 $generated@@44 $generated@@435))
)))
(assert (= ($generated@@1 $generated@@437) 18))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@439) $generated@@437)) ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
 :pattern ( ($generated@@69 $generated@@439 $generated@@45 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@441) $generated@@241)) ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
 :pattern ( ($generated@@69 $generated@@441 $generated@@48 $generated@@440))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@442 Int) ($generated@@443 Int) ($generated@@444 Int) ) (!  (=> (or ($generated@@302 $generated@@442 $generated@@443 $generated@@444) (and (not (= 2 $generated@@127)) (and (> $generated@@443 0) (> $generated@@444 0)))) (and (=> (> $generated@@442 0) (and ($generated@@132 $generated@@442 $generated@@443) (=> ($generated@@128 $generated@@419 $generated@@442 $generated@@443) ($generated@@132 $generated@@442 $generated@@444)))) (= ($generated@@301 $generated@@442 $generated@@443 $generated@@444)  (and (and (> $generated@@442 0) ($generated@@128 $generated@@419 $generated@@442 $generated@@443)) ($generated@@128 $generated@@419 $generated@@442 $generated@@444)))))
 :pattern ( ($generated@@301 $generated@@442 $generated@@443 $generated@@444))
))))
(assert  (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@447)) $generated@@131)
 :pattern ( ($generated@@445 $generated@@447))
)) (= (type $generated@@446) $generated@@131)))
(assert (forall (($generated@@448 T@U) ($generated@@449 Int) ($generated@@450 Int) ) (!  (=> (= (type $generated@@448) $generated@@131) (= ($generated@@128 $generated@@448 $generated@@449 $generated@@450) ($generated@@128 $generated@@446 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@128 ($generated@@445 $generated@@448) $generated@@449 $generated@@450))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@451 Int) ($generated@@452 Int) ($generated@@453 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@451 0) (> $generated@@452 0))))))) (= ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)) (= ($generated@@130 ($generated@@220 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452))) ($generated@@130 $generated@@453))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@451) ($generated@@130 $generated@@452) ($generated@@130 $generated@@453)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@454 () T@U)
(declare-fun $generated@@455 () T@U)
(declare-fun $generated@@456 () T@U)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Int)
(declare-fun $generated@@460 () T@U)
(declare-fun $generated@@461 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@454) $generated@@131) (= (type $generated@@455) ($generated@@155 $generated@@72 $generated@@4))) (= (type $generated@@456) $generated@@72)) (= (type $generated@@457) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@460) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@462  (=> (= ($generated@@445 $generated@@419) $generated@@419) (=> (and (= ($generated@@445 $generated@@454) $generated@@454) (= $generated@@455 ($generated@@154 $generated@@456 $generated@@457 $generated@@60 false))) (=> (and (and (and (> $generated@@458 0) (> $generated@@459 0)) (and ($generated@@212 $generated@@460) ($generated@@461 $generated@@460))) (and (and (forall (($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@72) (=> (and (not (= $generated@@463 $generated@@456)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@457 $generated@@463) $generated@@60))) (= ($generated@@76 $generated@@460 $generated@@463) ($generated@@76 $generated@@457 $generated@@463))))
 :pattern ( ($generated@@76 $generated@@460 $generated@@463))
)) ($generated@@144 $generated@@457 $generated@@460)) (and ($generated@@69 ($generated@@8 $generated@@458) $generated@@46 $generated@@460) ($generated@@69 ($generated@@8 $generated@@459) $generated@@46 $generated@@460)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@458 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@459 0))))))))
(let (($generated@@464  (=> (and (and ($generated@@212 $generated@@457) ($generated@@461 $generated@@457)) (and (= 7 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@462)))
$generated@@464)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int Int) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (Int Int Int) Bool)
(declare-fun $generated@@140 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@155 (Int Int Int Int Int) Int)
(declare-fun $generated@@156 (Int Int Int Int Int) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@271 (Int Int) Int)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (Int Int) Bool)
(declare-fun $generated@@274 (Int Int) Bool)
(declare-fun $generated@@275 (Int Int) Int)
(declare-fun $generated@@280 (Int Int) Int)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@397 (Int Int Int) Bool)
(declare-fun $generated@@398 (Int Int Int) Bool)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@T T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@468 (T@T) T@U)
(declare-fun $generated@@492 () T@T)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@535 (T@U Int) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@658 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@134 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(= (type ($generated@@138 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (and (not (= 1 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@145 0) (> $generated@@146 0)))))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@140 $generated@@147 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@139 $generated@@148 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@148 $generated@@145 $generated@@146))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@151) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@149 $generated@@150 $generated@@151)) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@150 $generated@@152) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@151 $generated@@152) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@151 $generated@@152) $generated@@60))
)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@153 $generated@@154 ($generated@@75 0)))
 :pattern ( ($generated@@153 $generated@@154 ($generated@@75 0)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@157 Int) ($generated@@158 Int) ($generated@@159 Int) ($generated@@160 Int) ($generated@@161 Int) ) (!  (=> (or ($generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@161) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@161))
))))
(assert  (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@64)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@64) (= (type $generated@@168) $generated@@64)) (= (type $generated@@169) $generated@@164)) ($generated@@153 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@153 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@178 T@U) ($generated@@179 Int) ($generated@@180 Int) ) (!  (=> (and (= (type $generated@@178) $generated@@136) (or ($generated@@137 $generated@@179 $generated@@180) (and (not (= 1 $generated@@132)) (and (> $generated@@179 0) (> $generated@@180 0))))) (and (forall (($generated@@181 Int) ) (!  (=> (> $generated@@181 0) ($generated@@140 $generated@@181 $generated@@179 $generated@@180))
 :pattern ( ($generated@@139 $generated@@181 $generated@@179 $generated@@180))
)) (= ($generated@@133 ($generated@@134 $generated@@178) $generated@@179 $generated@@180) (exists (($generated@@182 Int) ) (!  (and (> $generated@@182 0) ($generated@@139 $generated@@182 $generated@@179 $generated@@180))
 :pattern ( ($generated@@139 $generated@@182 $generated@@179 $generated@@180))
)))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@178) $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@76 $generated@@173 $generated@@2)) (= (type $generated@@187) $generated@@64)) ($generated@@153 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@153 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 17)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@77 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@67 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@77) (= (type $generated@@238) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@239) ($generated@@66 $generated@@4))) (= (type $generated@@241) $generated@@77)) (= (type $generated@@242) ($generated@@66 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@164)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@173)) (= (type $generated@@251) $generated@@173)) (= ($generated@@153 ($generated@@244 $generated@@250 $generated@@251) ($generated@@163 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@153 ($generated@@244 $generated@@250 $generated@@251) ($generated@@163 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@164) (= (type $generated@@253) $generated@@164)) (= ($generated@@170 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@170 $generated@@252 $generated@@253))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@254 Int) ($generated@@255 Int) ($generated@@256 Int) ($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (or ($generated@@156 ($generated@@135 $generated@@254) ($generated@@135 $generated@@255) ($generated@@135 $generated@@256) ($generated@@135 $generated@@257) ($generated@@135 $generated@@258)) (not (= 0 $generated@@132))) (= ($generated@@155 ($generated@@135 $generated@@254) ($generated@@135 $generated@@255) ($generated@@135 $generated@@256) ($generated@@135 $generated@@257) ($generated@@135 $generated@@258)) (ite (not (= $generated@@255 3)) 10 (ite (= ($generated@@135 $generated@@254) ($generated@@135 3)) 0 (ite  (and (= ($generated@@135 $generated@@254) ($generated@@135 2)) (= ($generated@@135 $generated@@256) ($generated@@135 $generated@@257))) 1 (ite  (and (= ($generated@@135 $generated@@254) ($generated@@135 1)) (= ($generated@@135 $generated@@256) ($generated@@135 $generated@@258))) 2 (ite (= ($generated@@135 $generated@@254) ($generated@@135 0)) 3 (ite  (and (= ($generated@@135 $generated@@254) ($generated@@135 2)) (< $generated@@256 $generated@@257)) 4 5))))))))
 :weight 3
 :pattern ( ($generated@@155 ($generated@@135 $generated@@254) ($generated@@135 $generated@@255) ($generated@@135 $generated@@256) ($generated@@135 $generated@@257) ($generated@@135 $generated@@258)))
))))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@173 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@153 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@173) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@153 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@64)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@76 $generated@@173 $generated@@4)) (= (type $generated@@267) $generated@@64)) (= ($generated@@153 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@173) ($generated@@0 ($generated@@81 $generated@@266 $generated@@268))) ($generated@@245 $generated@@268 $generated@@267))
 :pattern ( ($generated@@81 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@153 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@135 $generated@@269) $generated@@269)
 :pattern ( ($generated@@135 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@138 $generated@@270) $generated@@270)
 :pattern ( ($generated@@138 $generated@@270))
)))
(assert  (=> (<= 5 $generated@@132) (forall (($generated@@276 T@U) ($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (and (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78)) (or ($generated@@273 ($generated@@135 $generated@@277) ($generated@@135 $generated@@278)) (and (not (= 5 $generated@@132)) (and ($generated@@272 $generated@@276) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@277 0) (> $generated@@278 0))))))))) (and ($generated@@274 ($generated@@135 $generated@@277) ($generated@@135 $generated@@278)) (= ($generated@@271 ($generated@@135 $generated@@277) ($generated@@135 $generated@@278)) (let (($generated@@279 ($generated@@275 ($generated@@135 $generated@@277) ($generated@@135 $generated@@278))))
$generated@@279))))
 :weight 3
 :pattern ( ($generated@@271 ($generated@@135 $generated@@277) ($generated@@135 $generated@@278)) ($generated@@272 $generated@@276))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@281 Int) ($generated@@282 Int) ($generated@@283 Int) ) (!  (=> (or ($generated@@140 $generated@@281 $generated@@282 $generated@@283) (and (not (= 0 $generated@@132)) (and (> $generated@@281 0) (> $generated@@282 0)))) (= ($generated@@139 $generated@@281 $generated@@282 $generated@@283) (= ($generated@@280 $generated@@281 $generated@@282) $generated@@283)))
 :pattern ( ($generated@@139 $generated@@281 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) $generated@@64)) (= (type $generated@@287) $generated@@173)) (= (type $generated@@288) $generated@@173)) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@272 $generated@@289)) (= ($generated@@74 ($generated@@244 $generated@@287 $generated@@288) ($generated@@163 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@74 ($generated@@244 $generated@@287 $generated@@288) ($generated@@163 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@68)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@164) (= ($generated@@162 $generated@@292) (= ($generated@@290 $generated@@292) $generated@@61)))
 :pattern ( ($generated@@162 $generated@@292))
)))
(assert  (=> (<= 5 $generated@@132) (forall (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 Int) ) (!  (=> (and (= (type $generated@@293) ($generated@@76 $generated@@77 $generated@@78)) (or ($generated@@273 $generated@@294 $generated@@295) (and (not (= 5 $generated@@132)) (and ($generated@@272 $generated@@293) (and (> $generated@@294 0) (> $generated@@295 0)))))) (and ($generated@@274 $generated@@294 $generated@@295) (= ($generated@@271 $generated@@294 $generated@@295) (let (($generated@@296 ($generated@@275 $generated@@294 $generated@@295)))
$generated@@296))))
 :pattern ( ($generated@@271 $generated@@294 $generated@@295) ($generated@@272 $generated@@293))
))))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@164) ($generated@@162 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@173) (= (type $generated@@299) $generated@@173)) (= $generated@@297 ($generated@@244 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@162 $generated@@297))
)))
(assert  (and (and (forall (($generated@@304 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@304)) 18)) (forall (($generated@@305 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305))
))) (forall (($generated@@306 T@T) ) (! (= (type ($generated@@300 $generated@@306)) ($generated@@302 $generated@@306))
 :pattern ( ($generated@@300 $generated@@306))
))))
(assert (forall (($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@307)) 0)
 :pattern ( ($generated@@300 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 Int) ($generated@@310 Int) ) (!  (=> (= (type $generated@@308) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@308) $generated@@309 $generated@@310) ($generated@@133 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@173)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@284 ($generated@@311 $generated@@313) $generated@@314 $generated@@315) ($generated@@74 $generated@@313 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@284 ($generated@@311 $generated@@313) $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@316) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@317) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@318) $generated@@173)) (= (type $generated@@319) $generated@@64)) ($generated@@149 $generated@@316 $generated@@317)) ($generated@@284 $generated@@318 $generated@@319 $generated@@316)) ($generated@@284 $generated@@318 $generated@@319 $generated@@317))
 :pattern ( ($generated@@149 $generated@@316 $generated@@317) ($generated@@284 $generated@@318 $generated@@319 $generated@@316))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@320) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@321) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@323) $generated@@64)) ($generated@@149 $generated@@320 $generated@@321)) ($generated@@74 $generated@@322 $generated@@323 $generated@@320)) ($generated@@74 $generated@@322 $generated@@323 $generated@@321))
 :pattern ( ($generated@@149 $generated@@320 $generated@@321) ($generated@@74 $generated@@322 $generated@@323 $generated@@320))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@76 $generated@@326 $generated@@2))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (and (= (= ($generated@@324 $generated@@327) 0) (= $generated@@327 ($generated@@325 $generated@@328))) (=> (not (= ($generated@@324 $generated@@327) 0)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (< 0 ($generated ($generated@@81 $generated@@327 $generated@@329))))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@81 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@81 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 20)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@76 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@81 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@81 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@79 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@76 $generated@@367 $generated@@2)) (= ($generated@@184 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@81 $generated@@366 $generated@@368))) (<= ($generated ($generated@@81 $generated@@366 $generated@@368)) ($generated@@324 $generated@@366))))
 :pattern ( ($generated@@81 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@184 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(let (($generated@@371 ($generated@@333 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@332 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@331 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@330 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@334 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@76 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@334 (type $generated@@376))))
(let (($generated@@378 ($generated@@333 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@332 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@331 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@352 (type $generated@@380))))
(let (($generated@@382 ($generated@@351 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@350 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@349 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@348 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@352 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@76 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@352 (type $generated@@387))))
(let (($generated@@389 ($generated@@351 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@350 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@349 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@76 $generated@@173 $generated@@2)) (= (type $generated@@392) $generated@@64)) (= ($generated@@153 $generated@@391 ($generated@@183 $generated@@392)) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@173) (< 0 ($generated ($generated@@81 $generated@@391 $generated@@393)))) ($generated@@245 $generated@@393 $generated@@392))
 :pattern ( ($generated@@81 $generated@@391 $generated@@393))
))))
 :pattern ( ($generated@@153 $generated@@391 ($generated@@183 $generated@@392)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@394 Int) ($generated@@395 Int) ($generated@@396 Int) ) (!  (=> (or ($generated@@140 $generated@@394 $generated@@395 $generated@@396) (and (not (= 0 $generated@@132)) (and (> $generated@@394 0) (> $generated@@395 0)))) true)
 :pattern ( ($generated@@139 $generated@@394 $generated@@395 $generated@@396))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@399 Int) ($generated@@400 Int) ($generated@@401 Int) ) (!  (=> (or ($generated@@398 $generated@@399 $generated@@400 $generated@@401) (and (not (= 2 $generated@@132)) (and (> $generated@@400 0) (> $generated@@401 0)))) true)
 :pattern ( ($generated@@397 $generated@@399 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (!  (=> ($generated@@274 $generated@@402 $generated@@403) (and ($generated@@397 ($generated@@275 $generated@@402 $generated@@403) $generated@@402 $generated@@403) (forall (($generated@@404 Int) ) (!  (=> true (=> ($generated@@397 $generated@@404 $generated@@402 $generated@@403) (<= $generated@@404 ($generated@@275 $generated@@402 $generated@@403))))
 :pattern ( ($generated@@397 $generated@@404 $generated@@402 $generated@@403))
))))
 :pattern ( ($generated@@275 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@76 $generated@@173 $generated@@4)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@259 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@173) ($generated@@0 ($generated@@81 $generated@@405 $generated@@408))) ($generated@@284 $generated@@408 $generated@@406 $generated@@407))
 :pattern ( ($generated@@81 $generated@@405 $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@259 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@409) ($generated@@76 $generated@@173 $generated@@4)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@264 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@173) ($generated@@0 ($generated@@81 $generated@@409 $generated@@412))) ($generated@@284 $generated@@412 $generated@@410 $generated@@411))
 :pattern ( ($generated@@81 $generated@@409 $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@264 $generated@@410) $generated@@411))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@413 T@U) ($generated@@414 Int) ($generated@@415 Int) ) (!  (=> (and (= (type $generated@@413) $generated@@136) (or ($generated@@137 $generated@@414 $generated@@415) (and (not (= 1 $generated@@132)) (and (> $generated@@414 0) (> $generated@@415 0))))) true)
 :pattern ( ($generated@@133 $generated@@413 $generated@@414 $generated@@415))
))))
(assert  (=> (<= 5 $generated@@132) (forall (($generated@@416 Int) ($generated@@417 Int) ) (!  (=> (or ($generated@@273 $generated@@416 $generated@@417) (and (not (= 5 $generated@@132)) (and (> $generated@@416 0) (> $generated@@417 0)))) true)
 :pattern ( ($generated@@271 $generated@@416 $generated@@417))
))))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(= ($generated ($generated@@81 ($generated@@325 $generated@@419) $generated@@418)) 0))
 :pattern ( (let (($generated@@419 (type $generated@@418)))
($generated@@81 ($generated@@325 $generated@@419) $generated@@418)))
)))
(assert  (and (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@420 $generated@@423)) ($generated@@76 $generated@@173 $generated@@4))
 :pattern ( ($generated@@420 $generated@@423))
)) (forall (($generated@@424 T@T) ($generated@@425 T@U) ) (! (= (type ($generated@@421 $generated@@424 $generated@@425)) $generated@@424)
 :pattern ( ($generated@@421 $generated@@424 $generated@@425))
))) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@334 (type $generated@@426))))
(let (($generated@@428 ($generated@@333 (type $generated@@426))))
(= (type ($generated@@422 $generated@@426)) ($generated@@76 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@422 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@430) $generated@@173)) (= ($generated@@0 ($generated@@81 ($generated@@420 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@81 ($generated@@330 $generated@@429) ($generated@@171 ($generated@@421 $generated@@164 $generated@@430)))) (= ($generated@@81 ($generated@@422 $generated@@429) ($generated@@171 ($generated@@421 $generated@@164 $generated@@430))) ($generated@@172 ($generated@@421 $generated@@164 $generated@@430))))))
 :pattern ( ($generated@@81 ($generated@@420 $generated@@429) $generated@@430))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) ($generated@@76 $generated@@173 $generated@@4))
 :pattern ( ($generated@@431 $generated@@433))
)) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@352 (type $generated@@434))))
(let (($generated@@436 ($generated@@351 (type $generated@@434))))
(= (type ($generated@@432 $generated@@434)) ($generated@@76 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@432 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@350 $generated@@173 $generated@@173)) (= (type $generated@@438) $generated@@173)) (= ($generated@@0 ($generated@@81 ($generated@@431 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@81 ($generated@@348 $generated@@437) ($generated@@171 ($generated@@421 $generated@@164 $generated@@438)))) (= ($generated@@81 ($generated@@432 $generated@@437) ($generated@@171 ($generated@@421 $generated@@164 $generated@@438))) ($generated@@172 ($generated@@421 $generated@@164 $generated@@438))))))
 :pattern ( ($generated@@81 ($generated@@431 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(let (($generated@@442 ($generated@@333 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@332 $generated@@442 $generated@@441)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@439) $generated@@440)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) (and ($generated@@0 ($generated@@81 ($generated@@330 $generated@@439) $generated@@443)) (= $generated@@440 ($generated@@81 ($generated@@422 $generated@@439) $generated@@443))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@439) $generated@@443))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@439) $generated@@443))
))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@351 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@350 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@81 ($generated@@384 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@81 ($generated@@348 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@81 ($generated@@432 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@444) $generated@@448))
 :pattern ( ($generated@@81 ($generated@@432 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@173) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@452) $generated@@456))) (and ($generated@@284 ($generated@@81 ($generated@@422 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@284 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@452) $generated@@456))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@74 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@350 $generated@@173 $generated@@173)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) $generated@@64)) (= (type $generated@@463) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@173) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@460) $generated@@464))) (and ($generated@@284 ($generated@@81 ($generated@@432 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@284 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@81 ($generated@@432 $generated@@460) $generated@@464))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@465) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@466) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@467) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@465 $generated@@467))) (and ($generated@@149 $generated@@465 $generated@@466) ($generated@@149 $generated@@466 $generated@@467))) ($generated@@149 $generated@@465 $generated@@467))
 :pattern ( ($generated@@149 $generated@@465 $generated@@466) ($generated@@149 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@T) ) (! (= (type ($generated@@468 $generated@@469)) ($generated@@76 $generated@@469 $generated@@4))
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@352 (type $generated@@470))))
(let (($generated@@472 ($generated@@351 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@350 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@349 $generated@@472 $generated@@471)) (= ($generated@@348 $generated@@470) ($generated@@468 $generated@@472))))))
 :pattern ( ($generated@@348 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@352 (type $generated@@473))))
(let (($generated@@475 ($generated@@351 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@350 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@349 $generated@@475 $generated@@474)) (= ($generated@@384 $generated@@473) ($generated@@468 $generated@@474))))))
 :pattern ( ($generated@@384 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@352 (type $generated@@476))))
(let (($generated@@478 ($generated@@351 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@350 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@349 $generated@@478 $generated@@477)) (= ($generated@@431 $generated@@476) ($generated@@468 $generated@@173))))))
 :pattern ( ($generated@@431 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@334 (type $generated@@479))))
(let (($generated@@481 ($generated@@333 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@332 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@331 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@173) (= (type $generated@@483) $generated@@173)) ($generated@@0 ($generated@@81 ($generated@@420 $generated@@479) ($generated@@311 ($generated@@244 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@420 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@352 (type $generated@@484))))
(let (($generated@@486 ($generated@@351 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@350 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@349 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@173) (= (type $generated@@488) $generated@@173)) ($generated@@0 ($generated@@81 ($generated@@431 $generated@@484) ($generated@@311 ($generated@@244 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@431 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@173) ($generated@@245 $generated@@489 $generated@@46)) (and (= ($generated@@311 ($generated@@421 $generated@@2 $generated@@489)) $generated@@489) ($generated@@153 ($generated@@421 $generated@@2 $generated@@489) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@489 $generated@@46))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@173) ($generated@@245 $generated@@490 $generated@@47)) (and (= ($generated@@311 ($generated@@421 $generated@@3 $generated@@490)) $generated@@490) ($generated@@153 ($generated@@421 $generated@@3 $generated@@490) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@490 $generated@@47))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@173) ($generated@@245 $generated@@491 $generated@@44)) (and (= ($generated@@311 ($generated@@421 $generated@@4 $generated@@491)) $generated@@491) ($generated@@153 ($generated@@421 $generated@@4 $generated@@491) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@491 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@492) 21))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@245 $generated@@493 $generated@@45)) (and (= ($generated@@311 ($generated@@421 $generated@@492 $generated@@493)) $generated@@493) ($generated@@153 ($generated@@421 $generated@@492 $generated@@493) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@493 $generated@@45))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@245 ($generated@@311 $generated@@494) $generated@@495) ($generated@@153 $generated@@494 $generated@@495)))
 :pattern ( ($generated@@245 ($generated@@311 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@79 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@76 $generated@@497 $generated@@2)) (<= 0 ($generated@@324 $generated@@496))))
 :pattern ( ($generated@@324 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@303 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@302 $generated@@499)) (<= 0 ($generated@@301 $generated@@498))))
 :pattern ( ($generated@@301 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@500 ($generated@@449 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@449 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@449 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@449 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= ($generated@@72 ($generated@@449 $generated@@508 $generated@@509)) $generated@@58))
 :pattern ( ($generated@@449 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@510 ($generated@@457 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@457 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= ($generated@@514 ($generated@@457 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@457 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (= ($generated@@72 ($generated@@457 $generated@@518 $generated@@519)) $generated@@59))
 :pattern ( ($generated@@457 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@173) (= (type $generated@@521) $generated@@173)) (= ($generated@@290 ($generated@@244 $generated@@520 $generated@@521)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@163 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@163 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@163 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@163 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@173) (= (type $generated@@531) $generated@@173)) (= ($generated@@171 ($generated@@244 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@244 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@173) (= (type $generated@@533) $generated@@173)) (= ($generated@@172 ($generated@@244 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@244 $generated@@532 $generated@@533))
)))
(assert  (and (forall (($generated@@536 T@U) ) (! (= (type ($generated@@534 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@536))
)) (forall (($generated@@537 T@U) ($generated@@538 Int) ) (! (let (($generated@@539 ($generated@@303 (type $generated@@537))))
(= (type ($generated@@535 $generated@@537 $generated@@538)) $generated@@539))
 :pattern ( ($generated@@535 $generated@@537 $generated@@538))
))))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@302 $generated@@173)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@540 ($generated@@534 $generated@@541) $generated@@542) (forall (($generated@@543 Int) ) (!  (=> (and (<= 0 $generated@@543) (< $generated@@543 ($generated@@301 $generated@@540))) ($generated@@284 ($generated@@535 $generated@@540 $generated@@543) $generated@@541 $generated@@542))
 :pattern ( ($generated@@535 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@534 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@544 ($generated@@75 $generated@@545)) $generated@@545)
 :pattern ( ($generated@@75 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@64)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@64) (= ($generated@@546 ($generated@@259 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@259 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@64) (= ($generated@@72 ($generated@@259 $generated@@549)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@64)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@64) (= ($generated@@550 ($generated@@264 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@264 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@64) (= ($generated@@72 ($generated@@264 $generated@@553)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@64)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@64) (= ($generated@@554 ($generated@@183 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@183 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@64) (= ($generated@@72 ($generated@@183 $generated@@557)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@64)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@64) (= ($generated@@558 ($generated@@534 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@534 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@64) (= ($generated@@72 ($generated@@534 $generated@@561)) $generated@@57))
 :pattern ( ($generated@@534 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
(= ($generated@@421 $generated@@563 ($generated@@311 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@311 $generated@@562))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@564 Int) ($generated@@565 Int) ($generated@@566 Int) ($generated@@567 Int) ($generated@@568 Int) ) (!  (=> (or ($generated@@156 $generated@@564 $generated@@565 $generated@@566 $generated@@567 $generated@@568) (not (= 0 $generated@@132))) (= ($generated@@155 $generated@@564 $generated@@565 $generated@@566 $generated@@567 $generated@@568) (ite (not (= $generated@@565 3)) 10 (ite (= $generated@@564 ($generated@@135 3)) 0 (ite  (and (= $generated@@564 ($generated@@135 2)) (= $generated@@566 $generated@@567)) 1 (ite  (and (= $generated@@564 ($generated@@135 1)) (= $generated@@566 $generated@@568)) 2 (ite (= $generated@@564 ($generated@@135 0)) 3 (ite  (and (= $generated@@564 ($generated@@135 2)) (< $generated@@566 $generated@@567)) 4 5))))))))
 :pattern ( ($generated@@155 $generated@@564 $generated@@565 $generated@@566 $generated@@567 $generated@@568))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) (= ($generated@@153 $generated@@569 ($generated@@449 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@173) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@569) $generated@@572))) (and ($generated@@245 ($generated@@81 ($generated@@422 $generated@@569) $generated@@572) $generated@@571) ($generated@@245 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@569) $generated@@572))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@153 $generated@@569 ($generated@@449 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@350 $generated@@173 $generated@@173)) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) $generated@@64)) (= ($generated@@153 $generated@@573 ($generated@@457 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@173) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@573) $generated@@576))) (and ($generated@@245 ($generated@@81 ($generated@@432 $generated@@573) $generated@@576) $generated@@575) ($generated@@245 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@81 ($generated@@432 $generated@@573) $generated@@576))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@153 $generated@@573 ($generated@@457 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@173)) (< ($generated@@577 $generated@@579) ($generated@@578 ($generated@@244 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@244 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@173)) (< ($generated@@577 $generated@@582) ($generated@@578 ($generated@@244 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@244 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@64)) ($generated@@245 $generated@@583 ($generated@@449 $generated@@584 $generated@@585))) (and (= ($generated@@311 ($generated@@421 ($generated@@332 $generated@@173 $generated@@173) $generated@@583)) $generated@@583) ($generated@@153 ($generated@@421 ($generated@@332 $generated@@173 $generated@@173) $generated@@583) ($generated@@449 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@245 $generated@@583 ($generated@@449 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@173) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) ($generated@@245 $generated@@586 ($generated@@457 $generated@@587 $generated@@588))) (and (= ($generated@@311 ($generated@@421 ($generated@@350 $generated@@173 $generated@@173) $generated@@586)) $generated@@586) ($generated@@153 ($generated@@421 ($generated@@350 $generated@@173 $generated@@173) $generated@@586) ($generated@@457 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@245 $generated@@586 ($generated@@457 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@64) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) $generated@@173)) ($generated@@245 $generated@@591 ($generated@@163 $generated@@589 $generated@@590))) (and (= ($generated@@311 ($generated@@421 $generated@@164 $generated@@591)) $generated@@591) ($generated@@153 ($generated@@421 $generated@@164 $generated@@591) ($generated@@163 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@245 $generated@@591 ($generated@@163 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@592)))
 (not ($generated@@0 ($generated@@81 ($generated@@468 $generated@@593) $generated@@592))))
 :pattern ( (let (($generated@@593 (type $generated@@592)))
($generated@@81 ($generated@@468 $generated@@593) $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@69)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@64) (= (type $generated@@597) $generated@@64)) (and (= ($generated@@72 ($generated@@163 $generated@@596 $generated@@597)) $generated@@62) (= ($generated@@594 ($generated@@163 $generated@@596 $generated@@597)) $generated@@63)))
 :pattern ( ($generated@@163 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 Int) ($generated@@599 Int) ) (! (= ($generated@@280 $generated@@598 $generated@@599) (* $generated@@598 $generated@@599))
 :pattern ( ($generated@@280 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@164) (= ($generated@@577 ($generated@@311 $generated@@600)) ($generated@@578 $generated@@600)))
 :pattern ( ($generated@@577 ($generated@@311 $generated@@600)))
)))
(assert (= (type $generated@@601) $generated@@136))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@602 Int) ($generated@@603 Int) ($generated@@604 Int) ) (!  (=> (or ($generated@@398 ($generated@@135 $generated@@602) ($generated@@135 $generated@@603) ($generated@@135 $generated@@604)) (and (not (= 2 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@603 0) (> $generated@@604 0))))))) (and (=> ($generated@@0 ($generated@@138 ($generated@@11 (> $generated@@602 0)))) (and ($generated@@137 ($generated@@135 $generated@@602) ($generated@@135 $generated@@603)) (=> ($generated@@133 $generated@@601 ($generated@@135 $generated@@602) ($generated@@135 $generated@@603)) ($generated@@137 ($generated@@135 $generated@@602) ($generated@@135 $generated@@604))))) (= ($generated@@397 ($generated@@135 $generated@@602) ($generated@@135 $generated@@603) ($generated@@135 $generated@@604))  (and (and (> $generated@@602 0) ($generated@@133 $generated@@601 ($generated@@135 $generated@@602) ($generated@@135 $generated@@603))) ($generated@@133 $generated@@601 ($generated@@135 $generated@@602) ($generated@@135 $generated@@604))))))
 :weight 3
 :pattern ( ($generated@@397 ($generated@@135 $generated@@602) ($generated@@135 $generated@@603) ($generated@@135 $generated@@604)))
))))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@173) ($generated@@245 $generated@@605 ($generated@@75 0))) (and (= ($generated@@311 ($generated@@421 $generated@@2 $generated@@605)) $generated@@605) ($generated@@153 ($generated@@421 ($generated@@76 $generated@@173 $generated@@4) $generated@@605) ($generated@@75 0))))
 :pattern ( ($generated@@245 $generated@@605 ($generated@@75 0)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@173) (= (type $generated@@607) $generated@@64)) ($generated@@245 $generated@@606 ($generated@@259 $generated@@607))) (and (= ($generated@@311 ($generated@@421 ($generated@@76 $generated@@173 $generated@@4) $generated@@606)) $generated@@606) ($generated@@153 ($generated@@421 ($generated@@76 $generated@@173 $generated@@4) $generated@@606) ($generated@@259 $generated@@607))))
 :pattern ( ($generated@@245 $generated@@606 ($generated@@259 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@64)) ($generated@@245 $generated@@608 ($generated@@264 $generated@@609))) (and (= ($generated@@311 ($generated@@421 ($generated@@76 $generated@@173 $generated@@4) $generated@@608)) $generated@@608) ($generated@@153 ($generated@@421 ($generated@@76 $generated@@173 $generated@@4) $generated@@608) ($generated@@264 $generated@@609))))
 :pattern ( ($generated@@245 $generated@@608 ($generated@@264 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@173) (= (type $generated@@611) $generated@@64)) ($generated@@245 $generated@@610 ($generated@@183 $generated@@611))) (and (= ($generated@@311 ($generated@@421 ($generated@@76 $generated@@173 $generated@@2) $generated@@610)) $generated@@610) ($generated@@153 ($generated@@421 ($generated@@76 $generated@@173 $generated@@2) $generated@@610) ($generated@@183 $generated@@611))))
 :pattern ( ($generated@@245 $generated@@610 ($generated@@183 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@173) (= (type $generated@@613) $generated@@64)) ($generated@@245 $generated@@612 ($generated@@534 $generated@@613))) (and (= ($generated@@311 ($generated@@421 ($generated@@302 $generated@@173) $generated@@612)) $generated@@612) ($generated@@153 ($generated@@421 ($generated@@302 $generated@@173) $generated@@612) ($generated@@534 $generated@@613))))
 :pattern ( ($generated@@245 $generated@@612 ($generated@@534 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@614) ($generated@@76 $generated@@173 $generated@@2)) (= (type $generated@@615) $generated@@64)) (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@614 ($generated@@183 $generated@@615) $generated@@616) (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@173) (< 0 ($generated ($generated@@81 $generated@@614 $generated@@617)))) ($generated@@284 $generated@@617 $generated@@615 $generated@@616))
 :pattern ( ($generated@@81 $generated@@614 $generated@@617))
))))
 :pattern ( ($generated@@74 $generated@@614 ($generated@@183 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@164) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@620) (and ($generated@@162 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@64) ($generated@@74 $generated@@618 ($generated@@163 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@74 $generated@@618 ($generated@@163 $generated@@619 $generated@@621) $generated@@620))
))))) ($generated@@284 ($generated@@171 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@284 ($generated@@171 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@164) (= (type $generated@@623) $generated@@64)) (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@624) (and ($generated@@162 $generated@@622) (exists (($generated@@625 T@U) ) (!  (and (= (type $generated@@625) $generated@@64) ($generated@@74 $generated@@622 ($generated@@163 $generated@@625 $generated@@623) $generated@@624))
 :pattern ( ($generated@@74 $generated@@622 ($generated@@163 $generated@@625 $generated@@623) $generated@@624))
))))) ($generated@@284 ($generated@@172 $generated@@622) $generated@@623 $generated@@624))
 :pattern ( ($generated@@284 ($generated@@172 $generated@@622) $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@173) (= (type $generated@@627) $generated@@173)) (= ($generated@@244 ($generated@@138 $generated@@626) ($generated@@138 $generated@@627)) ($generated@@138 ($generated@@244 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@244 ($generated@@138 $generated@@626) ($generated@@138 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@311 ($generated@@8 ($generated@@135 $generated@@628))) ($generated@@138 ($generated@@311 ($generated@@8 $generated@@628))))
 :pattern ( ($generated@@311 ($generated@@8 ($generated@@135 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ) (! (= ($generated@@311 ($generated@@138 $generated@@629)) ($generated@@138 ($generated@@311 $generated@@629)))
 :pattern ( ($generated@@311 ($generated@@138 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@303 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@302 $generated@@631)) (= ($generated@@301 $generated@@630) 0)) (= $generated@@630 ($generated@@300 $generated@@631))))
 :pattern ( ($generated@@301 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@633)))
 (=> (and (and (= (type $generated@@632) ($generated@@76 $generated@@635 $generated@@2)) (= (type $generated@@634) $generated@@2)) (<= 0 ($generated $generated@@634))) (= ($generated@@324 ($generated@@82 $generated@@632 $generated@@633 $generated@@634)) (+ (- ($generated@@324 $generated@@632) ($generated ($generated@@81 $generated@@632 $generated@@633))) ($generated $generated@@634)))))
 :pattern ( ($generated@@324 ($generated@@82 $generated@@632 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@637) $generated@@2)) ($generated@@74 $generated@@637 $generated@@46 $generated@@636))
 :pattern ( ($generated@@74 $generated@@637 $generated@@46 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@639) $generated@@3)) ($generated@@74 $generated@@639 $generated@@47 $generated@@638))
 :pattern ( ($generated@@74 $generated@@639 $generated@@47 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@641) $generated@@4)) ($generated@@74 $generated@@641 $generated@@44 $generated@@640))
 :pattern ( ($generated@@74 $generated@@641 $generated@@44 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@643) $generated@@492)) ($generated@@74 $generated@@643 $generated@@45 $generated@@642))
 :pattern ( ($generated@@74 $generated@@643 $generated@@45 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@645) $generated@@173)) ($generated@@74 $generated@@645 $generated@@48 $generated@@644))
 :pattern ( ($generated@@74 $generated@@645 $generated@@48 $generated@@644))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@646 Int) ($generated@@647 Int) ($generated@@648 Int) ) (!  (=> (or ($generated@@398 $generated@@646 $generated@@647 $generated@@648) (and (not (= 2 $generated@@132)) (and (> $generated@@647 0) (> $generated@@648 0)))) (and (=> (> $generated@@646 0) (and ($generated@@137 $generated@@646 $generated@@647) (=> ($generated@@133 $generated@@601 $generated@@646 $generated@@647) ($generated@@137 $generated@@646 $generated@@648)))) (= ($generated@@397 $generated@@646 $generated@@647 $generated@@648)  (and (and (> $generated@@646 0) ($generated@@133 $generated@@601 $generated@@646 $generated@@647)) ($generated@@133 $generated@@601 $generated@@646 $generated@@648)))))
 :pattern ( ($generated@@397 $generated@@646 $generated@@647 $generated@@648))
))))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@302 $generated@@173)) (= (type $generated@@650) $generated@@64)) (= ($generated@@153 $generated@@649 ($generated@@534 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@301 $generated@@649))) ($generated@@245 ($generated@@535 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@535 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@153 $generated@@649 ($generated@@534 $generated@@650)))
)))
(assert  (and (forall (($generated@@654 T@U) ) (! (= (type ($generated@@652 $generated@@654)) $generated@@136)
 :pattern ( ($generated@@652 $generated@@654))
)) (= (type $generated@@653) $generated@@136)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ($generated@@657 Int) ) (!  (=> (= (type $generated@@655) $generated@@136) (= ($generated@@133 $generated@@655 $generated@@656 $generated@@657) ($generated@@133 $generated@@653 $generated@@656 $generated@@657)))
 :pattern ( ($generated@@133 ($generated@@652 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 Int) ) (!  (=> (= (type $generated@@659) ($generated@@302 $generated@@173)) (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@301 $generated@@659))) (< ($generated@@578 ($generated@@421 $generated@@164 ($generated@@535 $generated@@659 $generated@@660))) ($generated@@658 $generated@@659))))
 :pattern ( ($generated@@578 ($generated@@421 $generated@@164 ($generated@@535 $generated@@659 $generated@@660))))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@662) $generated@@64)) (= (type $generated@@663) $generated@@64)) ($generated@@153 $generated@@661 ($generated@@449 $generated@@662 $generated@@663))) (and (and ($generated@@153 ($generated@@330 $generated@@661) ($generated@@259 $generated@@662)) ($generated@@153 ($generated@@373 $generated@@661) ($generated@@259 $generated@@663))) ($generated@@153 ($generated@@420 $generated@@661) ($generated@@259 ($generated@@163 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@153 $generated@@661 ($generated@@449 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@350 $generated@@173 $generated@@173)) (= (type $generated@@665) $generated@@64)) (= (type $generated@@666) $generated@@64)) ($generated@@153 $generated@@664 ($generated@@457 $generated@@665 $generated@@666))) (and (and ($generated@@153 ($generated@@348 $generated@@664) ($generated@@264 $generated@@665)) ($generated@@153 ($generated@@384 $generated@@664) ($generated@@264 $generated@@666))) ($generated@@153 ($generated@@431 $generated@@664) ($generated@@264 ($generated@@163 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@153 $generated@@664 ($generated@@457 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@2) ($generated@@153 $generated@@667 $generated@@46))
 :pattern ( ($generated@@153 $generated@@667 $generated@@46))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@3) ($generated@@153 $generated@@668 $generated@@47))
 :pattern ( ($generated@@153 $generated@@668 $generated@@47))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@4) ($generated@@153 $generated@@669 $generated@@44))
 :pattern ( ($generated@@153 $generated@@669 $generated@@44))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@492) ($generated@@153 $generated@@670 $generated@@45))
 :pattern ( ($generated@@153 $generated@@670 $generated@@45))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@173) ($generated@@153 $generated@@671 $generated@@48))
 :pattern ( ($generated@@153 $generated@@671 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@672 Int) ($generated@@673 Int) ($generated@@674 Int) ) (!  (=> (or ($generated@@140 ($generated@@135 $generated@@672) ($generated@@135 $generated@@673) ($generated@@135 $generated@@674)) (and (not (= 0 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@672 0) (> $generated@@673 0))))))) (= ($generated@@139 ($generated@@135 $generated@@672) ($generated@@135 $generated@@673) ($generated@@135 $generated@@674)) (= ($generated@@135 ($generated@@280 ($generated@@135 $generated@@672) ($generated@@135 $generated@@673))) ($generated@@135 $generated@@674))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@135 $generated@@672) ($generated@@135 $generated@@673) ($generated@@135 $generated@@674)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Bool)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 (T@U) Bool)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () Int)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () Int)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () Int)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () Int)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () Int)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () Int)
(declare-fun $generated@@724 () Int)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () Int)
(declare-fun $generated@@728 () Int)
(declare-fun $generated@@729 () Int)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () Int)
(declare-fun $generated@@732 () Int)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () Int)
(declare-fun $generated@@735 () Int)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () Int)
(declare-fun $generated@@738 () Int)
(declare-fun $generated@@739 () Int)
(declare-fun $generated@@740 () Int)
(declare-fun $generated@@741 () Int)
(declare-fun $generated@@742 () Int)
(declare-fun $generated@@743 () Int)
(declare-fun $generated@@744 () Int)
(declare-fun $generated@@745 () Int)
(declare-fun $generated@@746 () Int)
(declare-fun $generated@@747 () Int)
(declare-fun $generated@@748 () Int)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () Int)
(declare-fun $generated@@752 () Int)
(declare-fun $generated@@753 () Int)
(declare-fun $generated@@754 () Int)
(declare-fun $generated@@755 () Int)
(declare-fun $generated@@756 () Int)
(declare-fun $generated@@757 () Int)
(declare-fun $generated@@758 () Int)
(declare-fun $generated@@759 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@733) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@685) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@736) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@711) $generated@@77)) (= (type $generated@@730) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@726) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@716) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@717) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@719) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@722) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@713) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@708) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@749) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@750) ($generated@@190 $generated@@77 $generated@@4))) (= (type $generated@@759) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 195) (let (($generated@@760 true))
(let (($generated@@761  (=> (and (<= $generated@@675 $generated@@676) (= (ControlFlow 0 101) 99)) $generated@@760)))
(let (($generated@@762  (=> (and (< $generated@@676 $generated@@675) (= (ControlFlow 0 100) 99)) $generated@@760)))
(let (($generated@@763  (=> (<= $generated@@676 $generated@@675) (and (=> (= (ControlFlow 0 103) 100) $generated@@762) (=> (= (ControlFlow 0 103) 101) $generated@@761)))))
(let (($generated@@764  (=> (< $generated@@675 $generated@@676) (and (=> (= (ControlFlow 0 102) 100) $generated@@762) (=> (= (ControlFlow 0 102) 101) $generated@@761)))))
(let (($generated@@765  (and (=> (= (ControlFlow 0 104) 102) $generated@@764) (=> (= (ControlFlow 0 104) 103) $generated@@763))))
(let (($generated@@766  (=> (and (not (and (and (= $generated@@677 ($generated@@135 2)) (< $generated@@678 $generated@@679)) (not (< $generated@@676 $generated@@675)))) (= (ControlFlow 0 106) 104)) $generated@@765)))
(let (($generated@@767  (=> (and (and (and (= $generated@@677 ($generated@@135 2)) (< $generated@@678 $generated@@679)) (not (< $generated@@676 $generated@@675))) (= (ControlFlow 0 105) 104)) $generated@@765)))
(let (($generated@@768  (=> (not (and (= $generated@@677 ($generated@@135 2)) (< $generated@@678 $generated@@679))) (and (=> (= (ControlFlow 0 108) 105) $generated@@767) (=> (= (ControlFlow 0 108) 106) $generated@@766)))))
(let (($generated@@769  (=> (and (= $generated@@677 ($generated@@135 2)) (< $generated@@678 $generated@@679)) (and (=> (= (ControlFlow 0 107) 105) $generated@@767) (=> (= (ControlFlow 0 107) 106) $generated@@766)))))
(let (($generated@@770  (=> (not (= $generated@@677 ($generated@@135 2))) (and (=> (= (ControlFlow 0 110) 107) $generated@@769) (=> (= (ControlFlow 0 110) 108) $generated@@768)))))
(let (($generated@@771  (=> (= $generated@@677 ($generated@@135 2)) (and (=> (= (ControlFlow 0 109) 107) $generated@@769) (=> (= (ControlFlow 0 109) 108) $generated@@768)))))
(let (($generated@@772  (=> (not (and (and (= $generated@@680 ($generated@@135 2)) (< $generated@@681 $generated@@682)) (not (< $generated@@675 $generated@@676)))) (and (=> (= (ControlFlow 0 112) 109) $generated@@771) (=> (= (ControlFlow 0 112) 110) $generated@@770)))))
(let (($generated@@773  (=> (and (and (= $generated@@680 ($generated@@135 2)) (< $generated@@681 $generated@@682)) (not (< $generated@@675 $generated@@676))) (and (=> (= (ControlFlow 0 111) 109) $generated@@771) (=> (= (ControlFlow 0 111) 110) $generated@@770)))))
(let (($generated@@774  (=> (not (and (= $generated@@680 ($generated@@135 2)) (< $generated@@681 $generated@@682))) (and (=> (= (ControlFlow 0 114) 111) $generated@@773) (=> (= (ControlFlow 0 114) 112) $generated@@772)))))
(let (($generated@@775  (=> (and (= $generated@@680 ($generated@@135 2)) (< $generated@@681 $generated@@682)) (and (=> (= (ControlFlow 0 113) 111) $generated@@773) (=> (= (ControlFlow 0 113) 112) $generated@@772)))))
(let (($generated@@776  (=> (not (= $generated@@680 ($generated@@135 2))) (and (=> (= (ControlFlow 0 116) 113) $generated@@775) (=> (= (ControlFlow 0 116) 114) $generated@@774)))))
(let (($generated@@777  (=> (= $generated@@680 ($generated@@135 2)) (and (=> (= (ControlFlow 0 115) 113) $generated@@775) (=> (= (ControlFlow 0 115) 114) $generated@@774)))))
(let (($generated@@778  (=> (and (and (and (and (and (<= ($generated@@135 0) $generated@@683) (<= ($generated@@135 0) $generated@@684)) (or (or (= $generated@@680 ($generated@@135 3)) (= $generated@@677 ($generated@@135 3))) (<= ($generated@@135 1) (+ $generated@@683 $generated@@684)))) (and ($generated@@74 ($generated@@8 $generated@@680) $generated@@46 $generated@@685) ($generated@@74 ($generated@@8 $generated@@677) $generated@@46 $generated@@685))) (and (and ($generated@@74 ($generated@@8 $generated@@681) $generated@@46 $generated@@685) ($generated@@74 ($generated@@8 $generated@@682) $generated@@46 $generated@@685)) (and ($generated@@74 ($generated@@8 $generated@@676) $generated@@46 $generated@@685) ($generated@@156 $generated@@680 $generated@@677 $generated@@681 $generated@@682 $generated@@676)))) (and (and (and ($generated@@74 ($generated@@8 $generated@@677) $generated@@46 $generated@@685) ($generated@@74 ($generated@@8 $generated@@680) $generated@@46 $generated@@685)) (and ($generated@@74 ($generated@@8 $generated@@678) $generated@@46 $generated@@685) ($generated@@74 ($generated@@8 $generated@@679) $generated@@46 $generated@@685))) (and (and ($generated@@74 ($generated@@8 $generated@@675) $generated@@46 $generated@@685) ($generated@@156 $generated@@677 $generated@@680 $generated@@678 $generated@@679 $generated@@675)) (and ($generated@@156 $generated@@680 $generated@@677 $generated@@681 $generated@@682 $generated@@676) ($generated@@156 $generated@@677 $generated@@680 $generated@@678 $generated@@679 $generated@@675))))) (and (=> (= (ControlFlow 0 117) 115) $generated@@777) (=> (= (ControlFlow 0 117) 116) $generated@@776)))))
(let (($generated@@779  (=> (and (or (= $generated@@680 ($generated@@135 3)) (= $generated@@677 ($generated@@135 3))) (= (ControlFlow 0 120) 117)) $generated@@778)))
(let (($generated@@780  (=> (and (not (or (= $generated@@680 ($generated@@135 3)) (= $generated@@677 ($generated@@135 3)))) (= (ControlFlow 0 119) 117)) $generated@@778)))
(let (($generated@@781  (=> (= $generated@@680 ($generated@@135 3)) (and (=> (= (ControlFlow 0 122) 119) $generated@@780) (=> (= (ControlFlow 0 122) 120) $generated@@779)))))
(let (($generated@@782  (=> (not (= $generated@@680 ($generated@@135 3))) (and (=> (= (ControlFlow 0 121) 119) $generated@@780) (=> (= (ControlFlow 0 121) 120) $generated@@779)))))
(let (($generated@@783  (=> (and (<= ($generated@@135 0) $generated@@683) (<= ($generated@@135 0) $generated@@684)) (and (=> (= (ControlFlow 0 123) 121) $generated@@782) (=> (= (ControlFlow 0 123) 122) $generated@@781)))))
(let (($generated@@784  (=> (and (not (and (<= ($generated@@135 0) $generated@@683) (<= ($generated@@135 0) $generated@@684))) (= (ControlFlow 0 118) 117)) $generated@@778)))
(let (($generated@@785  (=> (< $generated@@683 ($generated@@135 0)) (and (=> (= (ControlFlow 0 125) 123) $generated@@783) (=> (= (ControlFlow 0 125) 118) $generated@@784)))))
(let (($generated@@786  (=> (<= ($generated@@135 0) $generated@@683) (and (=> (= (ControlFlow 0 124) 123) $generated@@783) (=> (= (ControlFlow 0 124) 118) $generated@@784)))))
(let (($generated@@787  (=> (and (=> (= $generated@@680 ($generated@@135 3)) (= $generated@@675 $generated@@676)) (=> (= $generated@@677 ($generated@@135 3)) (= $generated@@675 $generated@@676))) (and (=> (= (ControlFlow 0 126) 124) $generated@@786) (=> (= (ControlFlow 0 126) 125) $generated@@785)))))
(let (($generated@@788  (=> (and (not (= $generated@@677 ($generated@@135 3))) (= (ControlFlow 0 129) 126)) $generated@@787)))
(let (($generated@@789  (=> (and (= $generated@@677 ($generated@@135 3)) (= (ControlFlow 0 128) 126)) $generated@@787)))
(let (($generated@@790  (=> (=> (= $generated@@680 ($generated@@135 3)) (= $generated@@675 $generated@@676)) (and (=> (= (ControlFlow 0 130) 128) $generated@@789) (=> (= (ControlFlow 0 130) 129) $generated@@788)))))
(let (($generated@@791  (=> (and (not (=> (= $generated@@680 ($generated@@135 3)) (= $generated@@675 $generated@@676))) (= (ControlFlow 0 127) 126)) $generated@@787)))
(let (($generated@@792  (=> (not (= $generated@@680 ($generated@@135 3))) (and (=> (= (ControlFlow 0 132) 130) $generated@@790) (=> (= (ControlFlow 0 132) 127) $generated@@791)))))
(let (($generated@@793  (=> (= $generated@@680 ($generated@@135 3)) (and (=> (= (ControlFlow 0 131) 130) $generated@@790) (=> (= (ControlFlow 0 131) 127) $generated@@791)))))
(let (($generated@@794  (=> (=> (= $generated@@677 ($generated@@135 2)) (and (<= $generated@@675 $generated@@679) (=> (<= $generated@@679 $generated@@678) (= $generated@@679 $generated@@675)))) (and (=> (= (ControlFlow 0 133) 131) $generated@@793) (=> (= (ControlFlow 0 133) 132) $generated@@792)))))
(let (($generated@@795  (=> (and (< $generated@@678 $generated@@679) (= (ControlFlow 0 137) 133)) $generated@@794)))
(let (($generated@@796  (=> (and (<= $generated@@679 $generated@@678) (= (ControlFlow 0 136) 133)) $generated@@794)))
(let (($generated@@797  (=> (<= $generated@@675 $generated@@679) (and (=> (= (ControlFlow 0 138) 136) $generated@@796) (=> (= (ControlFlow 0 138) 137) $generated@@795)))))
(let (($generated@@798  (=> (and (< $generated@@679 $generated@@675) (= (ControlFlow 0 135) 133)) $generated@@794)))
(let (($generated@@799  (=> (= $generated@@677 ($generated@@135 2)) (and (=> (= (ControlFlow 0 139) 138) $generated@@797) (=> (= (ControlFlow 0 139) 135) $generated@@798)))))
(let (($generated@@800  (=> (and (not (= $generated@@677 ($generated@@135 2))) (= (ControlFlow 0 134) 133)) $generated@@794)))
(let (($generated@@801  (=> (=> (= $generated@@680 ($generated@@135 2)) (and (<= $generated@@676 $generated@@682) (=> (<= $generated@@682 $generated@@681) (= $generated@@682 $generated@@676)))) (and (=> (= (ControlFlow 0 140) 139) $generated@@799) (=> (= (ControlFlow 0 140) 134) $generated@@800)))))
(let (($generated@@802  (=> (and (< $generated@@681 $generated@@682) (= (ControlFlow 0 144) 140)) $generated@@801)))
(let (($generated@@803  (=> (and (<= $generated@@682 $generated@@681) (= (ControlFlow 0 143) 140)) $generated@@801)))
(let (($generated@@804  (=> (<= $generated@@676 $generated@@682) (and (=> (= (ControlFlow 0 145) 143) $generated@@803) (=> (= (ControlFlow 0 145) 144) $generated@@802)))))
(let (($generated@@805  (=> (and (< $generated@@682 $generated@@676) (= (ControlFlow 0 142) 140)) $generated@@801)))
(let (($generated@@806  (=> (= $generated@@680 ($generated@@135 2)) (and (=> (= (ControlFlow 0 146) 145) $generated@@804) (=> (= (ControlFlow 0 146) 142) $generated@@805)))))
(let (($generated@@807  (=> (and (not (= $generated@@680 ($generated@@135 2))) (= (ControlFlow 0 141) 140)) $generated@@801)))
(let (($generated@@808  (=> (and (or (= $generated@@680 ($generated@@135 0)) (= $generated@@681 $generated@@675)) (or (= $generated@@677 ($generated@@135 0)) (= $generated@@678 $generated@@676))) (and (=> (= (ControlFlow 0 147) 146) $generated@@806) (=> (= (ControlFlow 0 147) 141) $generated@@807)))))
(let (($generated@@809  (=> (and (= $generated@@677 ($generated@@135 0)) (= (ControlFlow 0 150) 147)) $generated@@808)))
(let (($generated@@810  (=> (and (not (= $generated@@677 ($generated@@135 0))) (= (ControlFlow 0 149) 147)) $generated@@808)))
(let (($generated@@811  (=> (or (= $generated@@680 ($generated@@135 0)) (= $generated@@681 $generated@@675)) (and (=> (= (ControlFlow 0 151) 149) $generated@@810) (=> (= (ControlFlow 0 151) 150) $generated@@809)))))
(let (($generated@@812  (=> (and (not (or (= $generated@@680 ($generated@@135 0)) (= $generated@@681 $generated@@675))) (= (ControlFlow 0 148) 147)) $generated@@808)))
(let (($generated@@813  (=> (= $generated@@680 ($generated@@135 0)) (and (=> (= (ControlFlow 0 153) 151) $generated@@811) (=> (= (ControlFlow 0 153) 148) $generated@@812)))))
(let (($generated@@814  (=> (not (= $generated@@680 ($generated@@135 0))) (and (=> (= (ControlFlow 0 152) 151) $generated@@811) (=> (= (ControlFlow 0 152) 148) $generated@@812)))))
(let (($generated@@815  (=> (and (and (<= ($generated@@135 0) $generated@@680) (< $generated@@680 4)) (and (<= ($generated@@135 0) $generated@@677) (< $generated@@677 4))) (and (=> (= (ControlFlow 0 154) 152) $generated@@814) (=> (= (ControlFlow 0 154) 153) $generated@@813)))))
(let (($generated@@816  (=> (and (< $generated@@677 ($generated@@135 0)) (= (ControlFlow 0 157) 154)) $generated@@815)))
(let (($generated@@817  (=> (and (<= ($generated@@135 0) $generated@@677) (= (ControlFlow 0 156) 154)) $generated@@815)))
(let (($generated@@818  (=> (and (<= ($generated@@135 0) $generated@@680) (< $generated@@680 4)) (and (=> (= (ControlFlow 0 158) 156) $generated@@817) (=> (= (ControlFlow 0 158) 157) $generated@@816)))))
(let (($generated@@819  (=> (and (not (and (<= ($generated@@135 0) $generated@@680) (< $generated@@680 4))) (= (ControlFlow 0 155) 154)) $generated@@815)))
(let (($generated@@820  (=> (< $generated@@680 ($generated@@135 0)) (and (=> (= (ControlFlow 0 160) 158) $generated@@818) (=> (= (ControlFlow 0 160) 155) $generated@@819)))))
(let (($generated@@821  (=> (<= ($generated@@135 0) $generated@@680) (and (=> (= (ControlFlow 0 159) 158) $generated@@818) (=> (= (ControlFlow 0 159) 155) $generated@@819)))))
(let (($generated@@822  (=> (and (and (< 0 $generated@@675) (< 0 $generated@@676)) (and ($generated@@74 ($generated@@8 $generated@@686) $generated@@46 $generated@@685) ($generated@@74 ($generated@@8 $generated@@687) $generated@@46 $generated@@685))) (and (=> (= (ControlFlow 0 161) (- 0 165)) (> $generated@@686 0)) (and (=> (= (ControlFlow 0 161) (- 0 164)) (> $generated@@687 0)) (=> ($generated@@273 $generated@@686 $generated@@687) (=> (and ($generated@@74 ($generated@@8 $generated@@675) $generated@@46 $generated@@685) ($generated@@74 ($generated@@8 $generated@@676) $generated@@46 $generated@@685)) (and (=> (= (ControlFlow 0 161) (- 0 163)) (> $generated@@675 0)) (and (=> (= (ControlFlow 0 161) (- 0 162)) (> $generated@@676 0)) (=> ($generated@@273 $generated@@675 $generated@@676) (=> (and (and ($generated@@273 $generated@@686 $generated@@687) ($generated@@273 $generated@@675 $generated@@676)) (= ($generated@@271 $generated@@686 $generated@@687) ($generated@@271 $generated@@675 $generated@@676))) (and (=> (= (ControlFlow 0 161) 159) $generated@@821) (=> (= (ControlFlow 0 161) 160) $generated@@820)))))))))))))
(let (($generated@@823  (=> (and (<= $generated@@675 0) (= (ControlFlow 0 167) 161)) $generated@@822)))
(let (($generated@@824  (=> (and (< 0 $generated@@675) (= (ControlFlow 0 166) 161)) $generated@@822)))
(let (($generated@@825  (=> (not $generated@@688) (and (=> (= (ControlFlow 0 168) 166) $generated@@824) (=> (= (ControlFlow 0 168) 167) $generated@@823)))))
(let (($generated@@826  (=> (= (ControlFlow 0 92) (- 0 91)) (= $generated@@689 ($generated@@271 $generated@@686 $generated@@687)))))
(let (($generated@@827  (=> (and (= $generated@@680 ($generated@@135 3)) (= $generated@@677 ($generated@@135 3))) (and (=> (= (ControlFlow 0 93) (- 0 94)) (> $generated@@675 0)) (=> (> $generated@@675 0) (=> (and (and (and ($generated@@272 $generated@@690) ($generated@@691 $generated@@690)) ($generated@@273 $generated@@675 $generated@@675)) (and (and (= ($generated@@271 $generated@@675 $generated@@675) $generated@@675) (= $generated@@685 $generated@@690)) (and (= $generated@@689 $generated@@675) (= (ControlFlow 0 93) 92)))) $generated@@826))))))
(let (($generated@@828  (and (=> (= (ControlFlow 0 6) (- 0 29)) (or (<= 0 $generated@@692) (= (+ $generated@@693 $generated@@694) $generated@@692))) (=> (or (<= 0 $generated@@692) (= (+ $generated@@693 $generated@@694) $generated@@692)) (and (=> (= (ControlFlow 0 6) (- 0 28)) (or (or (<= 0 $generated@@695) (< (+ $generated@@693 $generated@@694) $generated@@692)) (= (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695))) (=> (or (or (<= 0 $generated@@695) (< (+ $generated@@693 $generated@@694) $generated@@692)) (= (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695)) (and (=> (= (ControlFlow 0 6) (- 0 27)) (or (or (or (<= 0 $generated@@702) (< (+ $generated@@693 $generated@@694) $generated@@692)) (< (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695)) (= (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702))) (=> (or (or (or (<= 0 $generated@@702) (< (+ $generated@@693 $generated@@694) $generated@@692)) (< (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695)) (= (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702)) (and (=> (= (ControlFlow 0 6) (- 0 26)) (or (or (or (or (<= 0 $generated@@703) (< (+ $generated@@693 $generated@@694) $generated@@692)) (< (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695)) (< (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702)) (= (+ (ite (< $generated@@693 $generated@@694) $generated@@704 0) (ite (< $generated@@694 $generated@@693) $generated@@705 0)) $generated@@703))) (=> (or (or (or (or (<= 0 $generated@@703) (< (+ $generated@@693 $generated@@694) $generated@@692)) (< (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695)) (< (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702)) (= (+ (ite (< $generated@@693 $generated@@694) $generated@@704 0) (ite (< $generated@@694 $generated@@693) $generated@@705 0)) $generated@@703)) (and (=> (= (ControlFlow 0 6) (- 0 25)) (or (or (or (or (or (<= 0 $generated@@706) (< (+ $generated@@693 $generated@@694) $generated@@692)) (< (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695)) (< (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702)) (< (+ (ite (< $generated@@693 $generated@@694) $generated@@704 0) (ite (< $generated@@694 $generated@@693) $generated@@705 0)) $generated@@703)) (= (- (- 8 $generated@@696) $generated@@697) $generated@@706))) (=> (or (or (or (or (or (<= 0 $generated@@706) (< (+ $generated@@693 $generated@@694) $generated@@692)) (< (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695)) (< (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702)) (< (+ (ite (< $generated@@693 $generated@@694) $generated@@704 0) (ite (< $generated@@694 $generated@@693) $generated@@705 0)) $generated@@703)) (= (- (- 8 $generated@@696) $generated@@697) $generated@@706)) (and (=> (= (ControlFlow 0 6) (- 0 24)) (or (< (+ $generated@@693 $generated@@694) $generated@@692) (and (= (+ $generated@@693 $generated@@694) $generated@@692) (or (< (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695) (and (= (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695) (or (< (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702) (and (= (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702) (or (< (+ (ite (< $generated@@693 $generated@@694) $generated@@704 0) (ite (< $generated@@694 $generated@@693) $generated@@705 0)) $generated@@703) (and (= (+ (ite (< $generated@@693 $generated@@694) $generated@@704 0) (ite (< $generated@@694 $generated@@693) $generated@@705 0)) $generated@@703) (< (- (- 8 $generated@@696) $generated@@697) $generated@@706)))))))))) (=> (or (< (+ $generated@@693 $generated@@694) $generated@@692) (and (= (+ $generated@@693 $generated@@694) $generated@@692) (or (< (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695) (and (= (+ ($generated@@155 $generated@@696 $generated@@697 $generated@@698 $generated@@699 $generated@@694) ($generated@@155 $generated@@697 $generated@@696 $generated@@700 $generated@@701 $generated@@693)) $generated@@695) (or (< (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702) (and (= (+ (ite  (and (and (= $generated@@696 ($generated@@135 2)) (< $generated@@698 $generated@@699)) (not (< $generated@@693 $generated@@694))) 1 0) (ite  (and (and (= $generated@@697 ($generated@@135 2)) (< $generated@@700 $generated@@701)) (not (< $generated@@694 $generated@@693))) 1 0)) $generated@@702) (or (< (+ (ite (< $generated@@693 $generated@@694) $generated@@704 0) (ite (< $generated@@694 $generated@@693) $generated@@705 0)) $generated@@703) (and (= (+ (ite (< $generated@@693 $generated@@694) $generated@@704 0) (ite (< $generated@@694 $generated@@693) $generated@@705 0)) $generated@@703) (< (- (- 8 $generated@@696) $generated@@697) $generated@@706))))))))) (=> (=> (< 0 $generated@@693) (=> (< 0 $generated@@694) (and ($generated@@273 $generated@@686 $generated@@687) ($generated@@273 $generated@@693 $generated@@694)))) (and (=> (= (ControlFlow 0 6) (- 0 23)) (=> $generated@@688 (< 0 $generated@@693))) (=> (=> $generated@@688 (< 0 $generated@@693)) (and (=> (= (ControlFlow 0 6) (- 0 22)) (=> $generated@@688 (< 0 $generated@@694))) (=> (=> $generated@@688 (< 0 $generated@@694)) (and (=> (= (ControlFlow 0 6) (- 0 21)) (=> $generated@@688 (= ($generated@@271 $generated@@686 $generated@@687) ($generated@@271 $generated@@693 $generated@@694)))) (=> (=> $generated@@688 (= ($generated@@271 $generated@@686 $generated@@687) ($generated@@271 $generated@@693 $generated@@694))) (and (=> (= (ControlFlow 0 6) (- 0 20)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@696))) (=> (=> $generated@@688 (<= ($generated@@135 0) $generated@@696)) (and (=> (= (ControlFlow 0 6) (- 0 19)) (=> $generated@@688 (< $generated@@696 4))) (=> (=> $generated@@688 (< $generated@@696 4)) (and (=> (= (ControlFlow 0 6) (- 0 18)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@697))) (=> (=> $generated@@688 (<= ($generated@@135 0) $generated@@697)) (and (=> (= (ControlFlow 0 6) (- 0 17)) (=> $generated@@688 (< $generated@@697 4))) (=> (=> $generated@@688 (< $generated@@697 4)) (and (=> (= (ControlFlow 0 6) (- 0 16)) (=> $generated@@688 (or (= $generated@@696 ($generated@@135 0)) (= $generated@@698 $generated@@693)))) (=> (=> $generated@@688 (or (= $generated@@696 ($generated@@135 0)) (= $generated@@698 $generated@@693))) (and (=> (= (ControlFlow 0 6) (- 0 15)) (=> $generated@@688 (or (= $generated@@697 ($generated@@135 0)) (= $generated@@700 $generated@@694)))) (=> (=> $generated@@688 (or (= $generated@@697 ($generated@@135 0)) (= $generated@@700 $generated@@694))) (and (=> (= (ControlFlow 0 6) (- 0 14)) (=> $generated@@688 (=> (= $generated@@696 ($generated@@135 2)) (<= $generated@@694 $generated@@699)))) (=> (=> $generated@@688 (=> (= $generated@@696 ($generated@@135 2)) (<= $generated@@694 $generated@@699))) (and (=> (= (ControlFlow 0 6) (- 0 13)) (=> $generated@@688 (=> (= $generated@@696 ($generated@@135 2)) (=> (<= $generated@@699 $generated@@698) (= $generated@@699 $generated@@694))))) (=> (=> $generated@@688 (=> (= $generated@@696 ($generated@@135 2)) (=> (<= $generated@@699 $generated@@698) (= $generated@@699 $generated@@694)))) (and (=> (= (ControlFlow 0 6) (- 0 12)) (=> $generated@@688 (=> (= $generated@@697 ($generated@@135 2)) (<= $generated@@693 $generated@@701)))) (=> (=> $generated@@688 (=> (= $generated@@697 ($generated@@135 2)) (<= $generated@@693 $generated@@701))) (and (=> (= (ControlFlow 0 6) (- 0 11)) (=> $generated@@688 (=> (= $generated@@697 ($generated@@135 2)) (=> (<= $generated@@701 $generated@@700) (= $generated@@701 $generated@@693))))) (=> (=> $generated@@688 (=> (= $generated@@697 ($generated@@135 2)) (=> (<= $generated@@701 $generated@@700) (= $generated@@701 $generated@@693)))) (and (=> (= (ControlFlow 0 6) (- 0 10)) (=> $generated@@688 (=> (= $generated@@696 ($generated@@135 3)) (= $generated@@693 $generated@@694)))) (=> (=> $generated@@688 (=> (= $generated@@696 ($generated@@135 3)) (= $generated@@693 $generated@@694))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (=> $generated@@688 (=> (= $generated@@697 ($generated@@135 3)) (= $generated@@693 $generated@@694)))) (=> (=> $generated@@688 (=> (= $generated@@697 ($generated@@135 3)) (= $generated@@693 $generated@@694))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@704))) (=> (=> $generated@@688 (<= ($generated@@135 0) $generated@@704)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@705))) (=> (=> $generated@@688 (<= ($generated@@135 0) $generated@@705)) (=> (= (ControlFlow 0 6) (- 0 5)) (=> $generated@@688 (or (or (= $generated@@696 ($generated@@135 3)) (= $generated@@697 ($generated@@135 3))) (<= ($generated@@135 1) (+ $generated@@704 $generated@@705))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@829  (=> (and (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (= $generated@@678 $generated@@679)) (= $generated@@707 ($generated@@135 3))) (and (=> (= (ControlFlow 0 82) (- 0 83)) (or (= $generated@@680 ($generated@@135 3)) (< 0 $generated@@684))) (=> (or (= $generated@@680 ($generated@@135 3)) (< 0 $generated@@684)) (=> (and ($generated@@272 $generated@@708) ($generated@@691 $generated@@708)) (=> (and (and (and (and (= $generated@@709 (ite (< 0 $generated@@684) (- $generated@@684 1) $generated@@684)) (=> (= $generated@@680 ($generated@@135 3)) (= $generated@@710 $generated@@683))) (and (=> (not (= $generated@@680 ($generated@@135 3))) (> $generated@@710 0)) (forall (($generated@@830 T@U) ) (!  (=> (= (type $generated@@830) $generated@@77) (=> (and (not (= $generated@@830 $generated@@711)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@685 $generated@@830) $generated@@60))) (= ($generated@@81 $generated@@708 $generated@@830) ($generated@@81 $generated@@685 $generated@@830))))
 :pattern ( ($generated@@81 $generated@@708 $generated@@830))
)))) (and (and ($generated@@149 $generated@@685 $generated@@708) (= $generated@@697 $generated@@707)) (and (= $generated@@704 $generated@@710) (= $generated@@705 $generated@@709)))) (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@680))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 82) 6))))) $generated@@828)))))))
(let (($generated@@831  (=> (and (not (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3))))) (= (ControlFlow 0 85) 82)) $generated@@829)))
(let (($generated@@832  (=> (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (= (ControlFlow 0 84) 82)) $generated@@829)))
(let (($generated@@833  (=> (> $generated@@684 0) (and (=> (= (ControlFlow 0 88) 84) $generated@@832) (=> (= (ControlFlow 0 88) 85) $generated@@831)))))
(let (($generated@@834  (=> (>= 0 $generated@@684) (and (=> (= (ControlFlow 0 87) 84) $generated@@832) (=> (= (ControlFlow 0 87) 85) $generated@@831)))))
(let (($generated@@835  (=> (= $generated@@677 ($generated@@135 2)) (and (=> (= (ControlFlow 0 89) 87) $generated@@834) (=> (= (ControlFlow 0 89) 88) $generated@@833)))))
(let (($generated@@836  (=> (not (= $generated@@677 ($generated@@135 2))) (and (=> (= (ControlFlow 0 86) 84) $generated@@832) (=> (= (ControlFlow 0 86) 85) $generated@@831)))))
(let (($generated@@837  (=> (and (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (< $generated@@678 $generated@@679)) (= $generated@@712 ($generated@@135 0))) (and (=> (= (ControlFlow 0 74) (- 0 75)) (or (= $generated@@680 ($generated@@135 3)) (< 0 $generated@@684))) (=> (or (= $generated@@680 ($generated@@135 3)) (< 0 $generated@@684)) (=> (and ($generated@@272 $generated@@713) ($generated@@691 $generated@@713)) (=> (and (and (and (and (= $generated@@714 (ite (< 0 $generated@@684) (- $generated@@684 1) $generated@@684)) (=> (= $generated@@680 ($generated@@135 3)) (= $generated@@715 $generated@@683))) (and (=> (not (= $generated@@680 ($generated@@135 3))) (> $generated@@715 0)) (forall (($generated@@838 T@U) ) (!  (=> (= (type $generated@@838) $generated@@77) (=> (and (not (= $generated@@838 $generated@@711)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@685 $generated@@838) $generated@@60))) (= ($generated@@81 $generated@@713 $generated@@838) ($generated@@81 $generated@@685 $generated@@838))))
 :pattern ( ($generated@@81 $generated@@713 $generated@@838))
)))) (and (and ($generated@@149 $generated@@685 $generated@@713) (= $generated@@697 $generated@@712)) (and (= $generated@@704 $generated@@715) (= $generated@@705 $generated@@714)))) (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@680))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 74) 6))))) $generated@@828)))))))
(let (($generated@@839  (=> (and (not (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3))))) (= (ControlFlow 0 77) 74)) $generated@@837)))
(let (($generated@@840  (=> (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (= (ControlFlow 0 76) 74)) $generated@@837)))
(let (($generated@@841  (=> (> $generated@@684 0) (and (=> (= (ControlFlow 0 80) 76) $generated@@840) (=> (= (ControlFlow 0 80) 77) $generated@@839)))))
(let (($generated@@842  (=> (>= 0 $generated@@684) (and (=> (= (ControlFlow 0 79) 76) $generated@@840) (=> (= (ControlFlow 0 79) 77) $generated@@839)))))
(let (($generated@@843  (=> (= $generated@@677 ($generated@@135 2)) (and (=> (= (ControlFlow 0 81) 79) $generated@@842) (=> (= (ControlFlow 0 81) 80) $generated@@841)))))
(let (($generated@@844  (=> (not (= $generated@@677 ($generated@@135 2))) (and (=> (= (ControlFlow 0 78) 76) $generated@@840) (=> (= (ControlFlow 0 78) 77) $generated@@839)))))
(let (($generated@@845  (=> (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (> $generated@@678 $generated@@679)) (and (=> (= (ControlFlow 0 60) (- 0 67)) (> $generated@@675 0)) (=> (> $generated@@675 0) (and (=> (= (ControlFlow 0 60) (- 0 66)) (> $generated@@676 0)) (=> (> $generated@@676 0) (=> (and ($generated@@272 $generated@@716) ($generated@@691 $generated@@716)) (=> (and (and ($generated@@273 $generated@@675 $generated@@676) ($generated@@273 $generated@@676 $generated@@675)) (and (= ($generated@@271 $generated@@675 $generated@@676) ($generated@@271 $generated@@676 $generated@@675)) (= $generated@@685 $generated@@716))) (and (=> (= (ControlFlow 0 60) (- 0 65)) (> $generated@@676 $generated@@675)) (=> (> $generated@@676 $generated@@675) (and (=> (= (ControlFlow 0 60) (- 0 64)) (> $generated@@675 0)) (=> (> $generated@@675 0) (=> (and ($generated@@272 $generated@@717) ($generated@@691 $generated@@717)) (=> (and (and (and ($generated@@273 $generated@@676 $generated@@675) ($generated@@273 (- $generated@@676 $generated@@675) $generated@@675)) (= ($generated@@271 $generated@@676 $generated@@675) ($generated@@271 (- $generated@@676 $generated@@675) $generated@@675))) (and (= $generated@@716 $generated@@717) (= $generated@@718 (- $generated@@676 $generated@@675)))) (and (=> (= (ControlFlow 0 60) (- 0 63)) (> $generated@@718 0)) (=> (> $generated@@718 0) (and (=> (= (ControlFlow 0 60) (- 0 62)) (> $generated@@675 0)) (=> (> $generated@@675 0) (=> (and (and (and ($generated@@272 $generated@@719) ($generated@@691 $generated@@719)) (and ($generated@@273 $generated@@718 $generated@@675) ($generated@@273 $generated@@675 $generated@@718))) (and (and (= ($generated@@271 $generated@@718 $generated@@675) ($generated@@271 $generated@@675 $generated@@718)) (= $generated@@717 $generated@@719)) (and (= $generated@@720 (- $generated@@678 $generated@@679)) (= $generated@@721 ($generated@@135 0))))) (and (=> (= (ControlFlow 0 60) (- 0 61)) (or (= $generated@@680 ($generated@@135 3)) (< 0 $generated@@684))) (=> (or (= $generated@@680 ($generated@@135 3)) (< 0 $generated@@684)) (=> (and ($generated@@272 $generated@@722) ($generated@@691 $generated@@722)) (=> (and (and (and (and (= $generated@@723 (ite (< 0 $generated@@684) (- $generated@@684 1) $generated@@684)) (=> (= $generated@@680 ($generated@@135 3)) (= $generated@@724 $generated@@683))) (and (=> (not (= $generated@@680 ($generated@@135 3))) (> $generated@@724 0)) (forall (($generated@@846 T@U) ) (!  (=> (= (type $generated@@846) $generated@@77) (=> (and (not (= $generated@@846 $generated@@711)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@719 $generated@@846) $generated@@60))) (= ($generated@@81 $generated@@722 $generated@@846) ($generated@@81 $generated@@719 $generated@@846))))
 :pattern ( ($generated@@81 $generated@@722 $generated@@846))
)))) (and (and ($generated@@149 $generated@@719 $generated@@722) (= $generated@@697 $generated@@721)) (and (= $generated@@704 $generated@@724) (= $generated@@705 $generated@@723)))) (and (and (and (= $generated@@694 $generated@@720) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@680))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 60) 6))))) $generated@@828))))))))))))))))))))))))
(let (($generated@@847  (=> (and (not (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3))))) (= (ControlFlow 0 69) 60)) $generated@@845)))
(let (($generated@@848  (=> (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (= (ControlFlow 0 68) 60)) $generated@@845)))
(let (($generated@@849  (=> (> $generated@@684 0) (and (=> (= (ControlFlow 0 72) 68) $generated@@848) (=> (= (ControlFlow 0 72) 69) $generated@@847)))))
(let (($generated@@850  (=> (>= 0 $generated@@684) (and (=> (= (ControlFlow 0 71) 68) $generated@@848) (=> (= (ControlFlow 0 71) 69) $generated@@847)))))
(let (($generated@@851  (=> (= $generated@@677 ($generated@@135 2)) (and (=> (= (ControlFlow 0 73) 71) $generated@@850) (=> (= (ControlFlow 0 73) 72) $generated@@849)))))
(let (($generated@@852  (=> (not (= $generated@@677 ($generated@@135 2))) (and (=> (= (ControlFlow 0 70) 68) $generated@@848) (=> (= (ControlFlow 0 70) 69) $generated@@847)))))
(let (($generated@@853  (=> (and (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (= $generated@@681 $generated@@682)) (= $generated@@725 ($generated@@135 3))) (and (=> (= (ControlFlow 0 52) (- 0 53)) (or (= $generated@@677 ($generated@@135 3)) (< 0 $generated@@683))) (=> (or (= $generated@@677 ($generated@@135 3)) (< 0 $generated@@683)) (=> (and ($generated@@272 $generated@@726) ($generated@@691 $generated@@726)) (=> (and (and (and (and (= $generated@@727 (ite (< 0 $generated@@683) (- $generated@@683 1) $generated@@683)) (=> (= $generated@@677 ($generated@@135 3)) (= $generated@@728 $generated@@684))) (and (=> (not (= $generated@@677 ($generated@@135 3))) (> $generated@@728 0)) (forall (($generated@@854 T@U) ) (!  (=> (= (type $generated@@854) $generated@@77) (=> (and (not (= $generated@@854 $generated@@711)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@685 $generated@@854) $generated@@60))) (= ($generated@@81 $generated@@726 $generated@@854) ($generated@@81 $generated@@685 $generated@@854))))
 :pattern ( ($generated@@81 $generated@@726 $generated@@854))
)))) (and (and ($generated@@149 $generated@@685 $generated@@726) (= $generated@@697 $generated@@677)) (and (= $generated@@704 $generated@@727) (= $generated@@705 $generated@@728)))) (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@725))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 52) 6))))) $generated@@828)))))))
(let (($generated@@855  (=> (and (not (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3))))) (= (ControlFlow 0 55) 52)) $generated@@853)))
(let (($generated@@856  (=> (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (= (ControlFlow 0 54) 52)) $generated@@853)))
(let (($generated@@857  (=> (> $generated@@683 0) (and (=> (= (ControlFlow 0 58) 54) $generated@@856) (=> (= (ControlFlow 0 58) 55) $generated@@855)))))
(let (($generated@@858  (=> (>= 0 $generated@@683) (and (=> (= (ControlFlow 0 57) 54) $generated@@856) (=> (= (ControlFlow 0 57) 55) $generated@@855)))))
(let (($generated@@859  (=> (= $generated@@680 ($generated@@135 2)) (and (=> (= (ControlFlow 0 59) 57) $generated@@858) (=> (= (ControlFlow 0 59) 58) $generated@@857)))))
(let (($generated@@860  (=> (not (= $generated@@680 ($generated@@135 2))) (and (=> (= (ControlFlow 0 56) 54) $generated@@856) (=> (= (ControlFlow 0 56) 55) $generated@@855)))))
(let (($generated@@861  (=> (and (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (< $generated@@681 $generated@@682)) (= $generated@@729 ($generated@@135 0))) (and (=> (= (ControlFlow 0 44) (- 0 45)) (or (= $generated@@677 ($generated@@135 3)) (< 0 $generated@@683))) (=> (or (= $generated@@677 ($generated@@135 3)) (< 0 $generated@@683)) (=> (and ($generated@@272 $generated@@730) ($generated@@691 $generated@@730)) (=> (and (and (and (and (= $generated@@731 (ite (< 0 $generated@@683) (- $generated@@683 1) $generated@@683)) (=> (= $generated@@677 ($generated@@135 3)) (= $generated@@732 $generated@@684))) (and (=> (not (= $generated@@677 ($generated@@135 3))) (> $generated@@732 0)) (forall (($generated@@862 T@U) ) (!  (=> (= (type $generated@@862) $generated@@77) (=> (and (not (= $generated@@862 $generated@@711)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@685 $generated@@862) $generated@@60))) (= ($generated@@81 $generated@@730 $generated@@862) ($generated@@81 $generated@@685 $generated@@862))))
 :pattern ( ($generated@@81 $generated@@730 $generated@@862))
)))) (and (and ($generated@@149 $generated@@685 $generated@@730) (= $generated@@697 $generated@@677)) (and (= $generated@@704 $generated@@731) (= $generated@@705 $generated@@732)))) (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@729))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 44) 6))))) $generated@@828)))))))
(let (($generated@@863  (=> (and (not (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3))))) (= (ControlFlow 0 47) 44)) $generated@@861)))
(let (($generated@@864  (=> (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (= (ControlFlow 0 46) 44)) $generated@@861)))
(let (($generated@@865  (=> (> $generated@@683 0) (and (=> (= (ControlFlow 0 50) 46) $generated@@864) (=> (= (ControlFlow 0 50) 47) $generated@@863)))))
(let (($generated@@866  (=> (>= 0 $generated@@683) (and (=> (= (ControlFlow 0 49) 46) $generated@@864) (=> (= (ControlFlow 0 49) 47) $generated@@863)))))
(let (($generated@@867  (=> (= $generated@@680 ($generated@@135 2)) (and (=> (= (ControlFlow 0 51) 49) $generated@@866) (=> (= (ControlFlow 0 51) 50) $generated@@865)))))
(let (($generated@@868  (=> (not (= $generated@@680 ($generated@@135 2))) (and (=> (= (ControlFlow 0 48) 46) $generated@@864) (=> (= (ControlFlow 0 48) 47) $generated@@863)))))
(let (($generated@@869  (=> (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (> $generated@@681 $generated@@682)) (and (=> (= (ControlFlow 0 34) (- 0 37)) (> $generated@@675 $generated@@676)) (=> (> $generated@@675 $generated@@676) (and (=> (= (ControlFlow 0 34) (- 0 36)) (> $generated@@676 0)) (=> (> $generated@@676 0) (=> (and (and (and ($generated@@272 $generated@@733) ($generated@@691 $generated@@733)) (and ($generated@@273 $generated@@675 $generated@@676) ($generated@@273 (- $generated@@675 $generated@@676) $generated@@676))) (and (and (= ($generated@@271 $generated@@675 $generated@@676) ($generated@@271 (- $generated@@675 $generated@@676) $generated@@676)) (= $generated@@685 $generated@@733)) (and (= $generated@@734 (- $generated@@681 $generated@@682)) (= $generated@@735 ($generated@@135 0))))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (or (= $generated@@677 ($generated@@135 3)) (< 0 $generated@@683))) (=> (or (= $generated@@677 ($generated@@135 3)) (< 0 $generated@@683)) (=> (and ($generated@@272 $generated@@736) ($generated@@691 $generated@@736)) (=> (and (and (and (and (= $generated@@737 (ite (< 0 $generated@@683) (- $generated@@683 1) $generated@@683)) (=> (= $generated@@677 ($generated@@135 3)) (= $generated@@738 $generated@@684))) (and (=> (not (= $generated@@677 ($generated@@135 3))) (> $generated@@738 0)) (forall (($generated@@870 T@U) ) (!  (=> (= (type $generated@@870) $generated@@77) (=> (and (not (= $generated@@870 $generated@@711)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@733 $generated@@870) $generated@@60))) (= ($generated@@81 $generated@@736 $generated@@870) ($generated@@81 $generated@@733 $generated@@870))))
 :pattern ( ($generated@@81 $generated@@736 $generated@@870))
)))) (and (and ($generated@@149 $generated@@733 $generated@@736) (= $generated@@697 $generated@@677)) (and (= $generated@@704 $generated@@737) (= $generated@@705 $generated@@738)))) (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@735))) (and (and (= $generated@@693 $generated@@734) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 34) 6))))) $generated@@828))))))))))))
(let (($generated@@871  (=> (and (not (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3))))) (= (ControlFlow 0 39) 34)) $generated@@869)))
(let (($generated@@872  (=> (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (= (ControlFlow 0 38) 34)) $generated@@869)))
(let (($generated@@873  (=> (> $generated@@683 0) (and (=> (= (ControlFlow 0 42) 38) $generated@@872) (=> (= (ControlFlow 0 42) 39) $generated@@871)))))
(let (($generated@@874  (=> (>= 0 $generated@@683) (and (=> (= (ControlFlow 0 41) 38) $generated@@872) (=> (= (ControlFlow 0 41) 39) $generated@@871)))))
(let (($generated@@875  (=> (= $generated@@680 ($generated@@135 2)) (and (=> (= (ControlFlow 0 43) 41) $generated@@874) (=> (= (ControlFlow 0 43) 42) $generated@@873)))))
(let (($generated@@876  (=> (not (= $generated@@680 ($generated@@135 2))) (and (=> (= (ControlFlow 0 40) 38) $generated@@872) (=> (= (ControlFlow 0 40) 39) $generated@@871)))))
(let (($generated@@877  (=> (= $generated@@677 ($generated@@135 1)) (=> (and (and (= $generated@@739 ($generated@@135 2)) (= $generated@@697 $generated@@739)) (and (= $generated@@704 $generated@@683) (= $generated@@705 $generated@@684))) (=> (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@675)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@680))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 33) 6)))) $generated@@828)))))
(let (($generated@@878  (=> (= $generated@@677 ($generated@@135 0)) (=> (and (and (= $generated@@740 ($generated@@135 1)) (= $generated@@697 $generated@@740)) (and (= $generated@@704 $generated@@683) (= $generated@@705 $generated@@684))) (=> (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@676) (= $generated@@696 $generated@@680))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 32) 6)))) $generated@@828)))))
(let (($generated@@879  (=> (= $generated@@680 ($generated@@135 1)) (=> (and (and (= $generated@@741 ($generated@@135 2)) (= $generated@@697 $generated@@677)) (and (= $generated@@704 $generated@@683) (= $generated@@705 $generated@@684))) (=> (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@741))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@676)) (and (= $generated@@698 $generated@@681) (= (ControlFlow 0 31) 6)))) $generated@@828)))))
(let (($generated@@880  (=> (= $generated@@680 ($generated@@135 0)) (=> (and (and (= $generated@@742 ($generated@@135 1)) (= $generated@@697 $generated@@677)) (and (= $generated@@704 $generated@@683) (= $generated@@705 $generated@@684))) (=> (and (and (and (= $generated@@694 $generated@@676) (= $generated@@701 $generated@@679)) (and (= $generated@@700 $generated@@678) (= $generated@@696 $generated@@742))) (and (and (= $generated@@693 $generated@@675) (= $generated@@699 $generated@@682)) (and (= $generated@@698 $generated@@675) (= (ControlFlow 0 30) 6)))) $generated@@828)))))
(let (($generated@@881  (=> (and (and (and (and (and (and (and (and (and (and (not (= $generated@@680 ($generated@@135 0))) (not (= $generated@@680 ($generated@@135 1)))) (not (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (> $generated@@681 $generated@@682)))) (not (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (< $generated@@681 $generated@@682)))) (not (and (and (= $generated@@680 ($generated@@135 2)) (or (> $generated@@683 0) (= $generated@@677 ($generated@@135 3)))) (= $generated@@681 $generated@@682)))) (not (= $generated@@677 ($generated@@135 0)))) (not (= $generated@@677 ($generated@@135 1)))) (not (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (> $generated@@678 $generated@@679)))) (not (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (< $generated@@678 $generated@@679)))) (not (and (and (= $generated@@677 ($generated@@135 2)) (or (> $generated@@684 0) (= $generated@@680 ($generated@@135 3)))) (= $generated@@678 $generated@@679)))) (= (ControlFlow 0 4) (- 0 3))) false)))
(let (($generated@@882  (=> (and (not (and (= $generated@@680 ($generated@@135 3)) (= $generated@@677 ($generated@@135 3)))) (= $generated@@692 (+ $generated@@675 $generated@@676))) (=> (and (and (= $generated@@695 (+ ($generated@@155 $generated@@680 $generated@@677 $generated@@681 $generated@@682 $generated@@676) ($generated@@155 $generated@@677 $generated@@680 $generated@@678 $generated@@679 $generated@@675))) (= $generated@@702 (+ (ite  (and (and (= $generated@@680 ($generated@@135 2)) (< $generated@@681 $generated@@682)) (not (< $generated@@675 $generated@@676))) 1 0) (ite  (and (and (= $generated@@677 ($generated@@135 2)) (< $generated@@678 $generated@@679)) (not (< $generated@@676 $generated@@675))) 1 0)))) (and (= $generated@@703 (+ (ite (< $generated@@675 $generated@@676) $generated@@683 0) (ite (< $generated@@676 $generated@@675) $generated@@684 0))) (= $generated@@706 (- (- 8 $generated@@680) $generated@@677)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 90) 30) $generated@@880) (=> (= (ControlFlow 0 90) 31) $generated@@879)) (=> (= (ControlFlow 0 90) 32) $generated@@878)) (=> (= (ControlFlow 0 90) 33) $generated@@877)) (=> (= (ControlFlow 0 90) 4) $generated@@881)) (=> (= (ControlFlow 0 90) 89) $generated@@835)) (=> (= (ControlFlow 0 90) 86) $generated@@836)) (=> (= (ControlFlow 0 90) 81) $generated@@843)) (=> (= (ControlFlow 0 90) 78) $generated@@844)) (=> (= (ControlFlow 0 90) 73) $generated@@851)) (=> (= (ControlFlow 0 90) 70) $generated@@852)) (=> (= (ControlFlow 0 90) 59) $generated@@859)) (=> (= (ControlFlow 0 90) 56) $generated@@860)) (=> (= (ControlFlow 0 90) 51) $generated@@867)) (=> (= (ControlFlow 0 90) 48) $generated@@868)) (=> (= (ControlFlow 0 90) 43) $generated@@875)) (=> (= (ControlFlow 0 90) 40) $generated@@876))))))
(let (($generated@@883  (and (=> (= (ControlFlow 0 95) 93) $generated@@827) (=> (= (ControlFlow 0 95) 90) $generated@@882))))
(let (($generated@@884  (=> (and (not (= $generated@@680 ($generated@@135 3))) (= (ControlFlow 0 97) 95)) $generated@@883)))
(let (($generated@@885  (=> (and (= $generated@@680 ($generated@@135 3)) (= (ControlFlow 0 96) 95)) $generated@@883)))
(let (($generated@@886  (=> $generated@@688 (and (=> (= (ControlFlow 0 98) 96) $generated@@885) (=> (= (ControlFlow 0 98) 97) $generated@@884)))))
(let (($generated@@887  (and (=> (= (ControlFlow 0 169) 168) $generated@@825) (=> (= (ControlFlow 0 169) 98) $generated@@886))))
(let (($generated@@888 true))
(let (($generated@@889  (=> (and ($generated@@272 $generated@@685) ($generated@@691 $generated@@685)) (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not false) (<= 1 $generated@@686)) (<= 1 $generated@@687)) (and (<= 0 $generated@@680) (< $generated@@680 4))) (and (<= 0 $generated@@677) (< $generated@@677 4))) (= $generated@@743 0)) (= $generated@@744 0)) (<= 2 $generated@@745)) (= $generated@@746 0)) (<= 0 $generated@@747)) (= $generated@@748 8)) (=> $generated@@688 true)) (and (=> $generated@@688 (< 0 $generated@@675)) (=> $generated@@688 (< 0 $generated@@676)))) (and (and (=> $generated@@688 (and ($generated@@273 $generated@@686 $generated@@687) ($generated@@273 $generated@@675 $generated@@676))) (=> $generated@@688 (= ($generated@@271 $generated@@686 $generated@@687) ($generated@@271 $generated@@675 $generated@@676)))) (and (=> $generated@@688 true) (=> $generated@@688 (<= ($generated@@135 0) $generated@@680))))) (and (and (and (=> $generated@@688 (< $generated@@680 4)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@677))) (and (=> $generated@@688 (< $generated@@677 4)) (=> $generated@@688 true))) (and (and (=> $generated@@688 (or (= $generated@@680 ($generated@@135 0)) (= $generated@@681 $generated@@675))) (=> $generated@@688 (or (= $generated@@677 ($generated@@135 0)) (= $generated@@678 $generated@@676)))) (and (=> $generated@@688 true) (=> $generated@@688 (=> (= $generated@@680 ($generated@@135 2)) (<= $generated@@676 $generated@@682))))))) (and (and (and (and (=> $generated@@688 (=> (= $generated@@680 ($generated@@135 2)) (=> (<= $generated@@682 $generated@@681) (= $generated@@682 $generated@@676)))) (=> $generated@@688 true)) (and (=> $generated@@688 (=> (= $generated@@677 ($generated@@135 2)) (<= $generated@@675 $generated@@679))) (=> $generated@@688 (=> (= $generated@@677 ($generated@@135 2)) (=> (<= $generated@@679 $generated@@678) (= $generated@@679 $generated@@675)))))) (and (and (=> $generated@@688 true) (=> $generated@@688 (=> (= $generated@@680 ($generated@@135 3)) (= $generated@@675 $generated@@676)))) (and (=> $generated@@688 (=> (= $generated@@677 ($generated@@135 3)) (= $generated@@675 $generated@@676))) (=> $generated@@688 true)))) (and (and (and (=> $generated@@688 (<= ($generated@@135 0) $generated@@683)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@684))) (and (=> $generated@@688 (or (or (= $generated@@680 ($generated@@135 3)) (= $generated@@677 ($generated@@135 3))) (<= ($generated@@135 1) (+ $generated@@683 $generated@@684)))) (forall (($generated@@890 T@U) ) (!  (=> (= (type $generated@@890) $generated@@77) (=> (and (not (= $generated@@890 $generated@@711)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@749 $generated@@890) $generated@@60))) (= ($generated@@81 $generated@@685 $generated@@890) ($generated@@81 $generated@@749 $generated@@890))))
 :pattern ( ($generated@@81 $generated@@685 $generated@@890))
)))) (and (and ($generated@@149 $generated@@749 $generated@@685) (forall (($generated@@891 T@U) ($generated@@892 T@U) ) (! (let (($generated@@893 ($generated@@67 (type $generated@@892))))
 (=> (and (and (= (type $generated@@891) $generated@@77) (= (type $generated@@892) ($generated@@66 $generated@@893))) (and (not (= $generated@@891 $generated@@711)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@749 $generated@@891) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@685 $generated@@891) $generated@@892) ($generated@@83 ($generated@@81 $generated@@749 $generated@@891) $generated@@892)) ($generated@@0 ($generated@@188 $generated@@750 $generated@@891 $generated@@892)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@685 $generated@@891) $generated@@892))
))) (and (<= (+ $generated@@675 $generated@@676) $generated@@745) (=> (= (+ $generated@@675 $generated@@676) $generated@@745) (and (<= (+ ($generated@@155 $generated@@680 $generated@@677 $generated@@681 $generated@@682 $generated@@676) ($generated@@155 $generated@@677 $generated@@680 $generated@@678 $generated@@679 $generated@@675)) $generated@@751) (=> (= (+ ($generated@@155 $generated@@680 $generated@@677 $generated@@681 $generated@@682 $generated@@676) ($generated@@155 $generated@@677 $generated@@680 $generated@@678 $generated@@679 $generated@@675)) $generated@@751) (and (<= (+ (ite  (and (and (= $generated@@680 ($generated@@135 2)) (< $generated@@681 $generated@@682)) (not (< $generated@@675 $generated@@676))) 1 0) (ite  (and (and (= $generated@@677 ($generated@@135 2)) (< $generated@@678 $generated@@679)) (not (< $generated@@676 $generated@@675))) 1 0)) $generated@@746) (=> (= (+ (ite  (and (and (= $generated@@680 ($generated@@135 2)) (< $generated@@681 $generated@@682)) (not (< $generated@@675 $generated@@676))) 1 0) (ite  (and (and (= $generated@@677 ($generated@@135 2)) (< $generated@@678 $generated@@679)) (not (< $generated@@676 $generated@@675))) 1 0)) $generated@@746) (and (<= (+ (ite (< $generated@@675 $generated@@676) $generated@@683 0) (ite (< $generated@@676 $generated@@675) $generated@@684 0)) $generated@@747) (=> (= (+ (ite (< $generated@@675 $generated@@676) $generated@@683 0) (ite (< $generated@@676 $generated@@675) $generated@@684 0)) $generated@@747) (and (<= (- (- 8 $generated@@680) $generated@@677) $generated@@748) (=> (= (- (- 8 $generated@@680) $generated@@677) $generated@@748) true)))))))))))))) (and (=> (= (ControlFlow 0 170) 2) $generated@@888) (=> (= (ControlFlow 0 170) 169) $generated@@887))))))
(let (($generated@@894  (and (=> (= (ControlFlow 0 171) (- 0 190)) (or (and (and ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> (+ 0 1) 0) (> (+ 0 1) 0)))))) (or (and (and ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46) ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> 0 0) (> (+ 0 1) 0)))))) (or (exists (($generated@@895 Int) )  (and ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) (and (> $generated@@895 0) (> (+ 0 1) 0)))) (or (and (and ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> (+ 0 1) 0) (> 0 0)))))) (or (and (and ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46) ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> 0 0) (> 0 0)))))) (or (exists (($generated@@896 Int) )  (and ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46) (and (> $generated@@896 0) (> 0 0)))) (or (exists (($generated@@897 Int) )  (and ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) (and (> (+ 0 1) 0) (> $generated@@897 0)))) (or (exists (($generated@@898 Int) )  (and ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46) (and (> 0 0) (> $generated@@898 0)))) (exists (($generated@@899 Int) ($generated@@900 Int) )  (and (> $generated@@899 0) (> $generated@@900 0)))))))))))) (=> (or (and (and ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> (+ 0 1) 0) (> (+ 0 1) 0)))))) (or (and (and ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46) ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> 0 0) (> (+ 0 1) 0)))))) (or (exists (($generated@@901 Int) )  (and ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) (and (> $generated@@901 0) (> (+ 0 1) 0)))) (or (and (and ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> (+ 0 1) 0) (> 0 0)))))) (or (and (and ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46) ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> 0 0) (> 0 0)))))) (or (exists (($generated@@902 Int) )  (and ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46) (and (> $generated@@902 0) (> 0 0)))) (or (exists (($generated@@903 Int) )  (and ($generated@@153 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) (and (> (+ 0 1) 0) (> $generated@@903 0)))) (or (exists (($generated@@904 Int) )  (and ($generated@@153 ($generated@@8 ($generated@@135 0)) $generated@@46) (and (> 0 0) (> $generated@@904 0)))) (exists (($generated@@905 Int) ($generated@@906 Int) )  (and (> $generated@@905 0) (> $generated@@906 0))))))))))) (=> (and (and (and (> $generated@@752 0) (> $generated@@753 0)) (= $generated@@745 (+ $generated@@686 $generated@@687))) (and (and (= $generated@@751 (+ ($generated@@155 $generated@@743 $generated@@744 $generated@@754 $generated@@755 $generated@@687) ($generated@@155 $generated@@744 $generated@@743 $generated@@756 $generated@@757 $generated@@686))) (= $generated@@746 (+ (ite  (and (and (= $generated@@743 ($generated@@135 2)) (< $generated@@754 $generated@@755)) (not (< $generated@@686 $generated@@687))) 1 0) (ite  (and (and (= $generated@@744 ($generated@@135 2)) (< $generated@@756 $generated@@757)) (not (< $generated@@687 $generated@@686))) 1 0)))) (and (= $generated@@747 (+ (ite (< $generated@@686 $generated@@687) $generated@@752 0) (ite (< $generated@@687 $generated@@686) $generated@@753 0))) (= $generated@@748 (- (- 8 $generated@@743) $generated@@744))))) (and (=> (= (ControlFlow 0 171) (- 0 189)) (=> $generated@@688 (< 0 $generated@@686))) (=> (=> $generated@@688 (< 0 $generated@@686)) (and (=> (= (ControlFlow 0 171) (- 0 188)) (=> $generated@@688 (< 0 $generated@@687))) (=> (=> $generated@@688 (< 0 $generated@@687)) (and (=> (= (ControlFlow 0 171) (- 0 187)) (=> $generated@@688 (= ($generated@@271 $generated@@686 $generated@@687) ($generated@@271 $generated@@686 $generated@@687)))) (=> (=> $generated@@688 (= ($generated@@271 $generated@@686 $generated@@687) ($generated@@271 $generated@@686 $generated@@687))) (and (=> (= (ControlFlow 0 171) (- 0 186)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@743))) (=> (=> $generated@@688 (<= ($generated@@135 0) $generated@@743)) (and (=> (= (ControlFlow 0 171) (- 0 185)) (=> $generated@@688 (< $generated@@743 4))) (=> (=> $generated@@688 (< $generated@@743 4)) (and (=> (= (ControlFlow 0 171) (- 0 184)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@744))) (=> (=> $generated@@688 (<= ($generated@@135 0) $generated@@744)) (and (=> (= (ControlFlow 0 171) (- 0 183)) (=> $generated@@688 (< $generated@@744 4))) (=> (=> $generated@@688 (< $generated@@744 4)) (and (=> (= (ControlFlow 0 171) (- 0 182)) (=> $generated@@688 (or (= $generated@@743 ($generated@@135 0)) (= $generated@@754 $generated@@686)))) (=> (=> $generated@@688 (or (= $generated@@743 ($generated@@135 0)) (= $generated@@754 $generated@@686))) (and (=> (= (ControlFlow 0 171) (- 0 181)) (=> $generated@@688 (or (= $generated@@744 ($generated@@135 0)) (= $generated@@756 $generated@@687)))) (=> (=> $generated@@688 (or (= $generated@@744 ($generated@@135 0)) (= $generated@@756 $generated@@687))) (and (=> (= (ControlFlow 0 171) (- 0 180)) (=> $generated@@688 (=> (= $generated@@743 ($generated@@135 2)) (<= $generated@@687 $generated@@755)))) (=> (=> $generated@@688 (=> (= $generated@@743 ($generated@@135 2)) (<= $generated@@687 $generated@@755))) (and (=> (= (ControlFlow 0 171) (- 0 179)) (=> $generated@@688 (=> (= $generated@@743 ($generated@@135 2)) (=> (<= $generated@@755 $generated@@754) (= $generated@@755 $generated@@687))))) (=> (=> $generated@@688 (=> (= $generated@@743 ($generated@@135 2)) (=> (<= $generated@@755 $generated@@754) (= $generated@@755 $generated@@687)))) (and (=> (= (ControlFlow 0 171) (- 0 178)) (=> $generated@@688 (=> (= $generated@@744 ($generated@@135 2)) (<= $generated@@686 $generated@@757)))) (=> (=> $generated@@688 (=> (= $generated@@744 ($generated@@135 2)) (<= $generated@@686 $generated@@757))) (and (=> (= (ControlFlow 0 171) (- 0 177)) (=> $generated@@688 (=> (= $generated@@744 ($generated@@135 2)) (=> (<= $generated@@757 $generated@@756) (= $generated@@757 $generated@@686))))) (=> (=> $generated@@688 (=> (= $generated@@744 ($generated@@135 2)) (=> (<= $generated@@757 $generated@@756) (= $generated@@757 $generated@@686)))) (and (=> (= (ControlFlow 0 171) (- 0 176)) (=> $generated@@688 (=> (= $generated@@743 ($generated@@135 3)) (= $generated@@686 $generated@@687)))) (=> (=> $generated@@688 (=> (= $generated@@743 ($generated@@135 3)) (= $generated@@686 $generated@@687))) (and (=> (= (ControlFlow 0 171) (- 0 175)) (=> $generated@@688 (=> (= $generated@@744 ($generated@@135 3)) (= $generated@@686 $generated@@687)))) (=> (=> $generated@@688 (=> (= $generated@@744 ($generated@@135 3)) (= $generated@@686 $generated@@687))) (and (=> (= (ControlFlow 0 171) (- 0 174)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@752))) (=> (=> $generated@@688 (<= ($generated@@135 0) $generated@@752)) (and (=> (= (ControlFlow 0 171) (- 0 173)) (=> $generated@@688 (<= ($generated@@135 0) $generated@@753))) (=> (=> $generated@@688 (<= ($generated@@135 0) $generated@@753)) (and (=> (= (ControlFlow 0 171) (- 0 172)) (=> $generated@@688 (or (or (= $generated@@743 ($generated@@135 3)) (= $generated@@744 ($generated@@135 3))) (<= ($generated@@135 1) (+ $generated@@752 $generated@@753))))) (=> (=> $generated@@688 (or (or (= $generated@@743 ($generated@@135 3)) (= $generated@@744 ($generated@@135 3))) (<= ($generated@@135 1) (+ $generated@@752 $generated@@753)))) (=> (= (ControlFlow 0 171) 170) $generated@@889))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@907  (=> (and (>= 0 $generated@@758) (= (ControlFlow 0 192) 171)) $generated@@894)))
(let (($generated@@908  (=> (and (> $generated@@758 0) (= (ControlFlow 0 191) 171)) $generated@@894)))
(let (($generated@@909  (and (=> (= (ControlFlow 0 193) 191) $generated@@908) (=> (= (ControlFlow 0 193) 192) $generated@@907))))
(let (($generated@@910 true))
(let (($generated@@911  (=> (= ($generated@@652 $generated@@601) $generated@@601) (=> (and (and (= ($generated@@652 $generated@@759) $generated@@759) (= $generated@@750 ($generated@@189 $generated@@711 $generated@@749 $generated@@60 false))) (and (= $generated@@743 ($generated@@135 0)) (= $generated@@744 ($generated@@135 0)))) (and (=> (= (ControlFlow 0 194) 193) $generated@@909) (=> (= (ControlFlow 0 194) 1) $generated@@910))))))
(let (($generated@@912  (=> (and ($generated@@272 $generated@@749) ($generated@@691 $generated@@749)) (=> (and (and (= 7 $generated@@132) (> $generated@@686 0)) (and (> $generated@@687 0) (= (ControlFlow 0 195) 194))) $generated@@911))))
$generated@@912))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@513)) ($generated@@493 $generated@@513)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@212 $generated@@514 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@514) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@75 0)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@221 $generated@@516))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@221 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@221 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@226 $generated@@518))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@226 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@226 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@150 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519) ($generated@@150 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@150 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@454 $generated@@522))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521) ($generated@@454 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@454 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@523 $generated@@526)))) ($generated@@238 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@81 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@136) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@529) (and ($generated@@134 $generated@@527) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@64) ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
 :pattern ( ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
))))) ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@533) (and ($generated@@134 $generated@@531) (exists (($generated@@534 T@U) ) (!  (and (= (type $generated@@534) $generated@@64) ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
))))) ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)) ($generated@@233 ($generated@@211 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@537))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@258 $generated@@538)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@253 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@252 $generated@@540)) (= ($generated@@251 $generated@@539) 0)) (= $generated@@539 ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@263 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@412)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@252 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@251 $generated@@555))) ($generated@@212 ($generated@@455 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@455 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@559))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@269 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@312 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@343 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@287 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@323 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@354 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@412) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () Int)
(declare-fun $generated@@573 () Int)
(declare-fun $generated@@574 () Int)
(declare-fun $generated@@575 () Int)
(declare-fun $generated@@576 () Int)
(declare-fun $generated@@577 () Int)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(declare-fun $generated@@586 () T@T)
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@586) 21) (forall (($generated@@587 T@U) ) (! (= (type ($generated@@578 $generated@@587)) $generated@@586)
 :pattern ( ($generated@@578 $generated@@587))
))) (= (type $generated@@579) $generated@@586)) (= (type $generated@@580) $generated@@586)) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@588  (and (=> (= (ControlFlow 0 3) (- 0 5)) (= $generated@@572 (ite (< 0 $generated@@573) (- $generated@@573 1) $generated@@573))) (=> (= $generated@@572 (ite (< 0 $generated@@573) (- $generated@@573 1) $generated@@573)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> (= $generated@@574 ($generated@@231 3)) (= $generated@@575 $generated@@576))) (=> (=> (= $generated@@574 ($generated@@231 3)) (= $generated@@575 $generated@@576)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> (not (= $generated@@574 ($generated@@231 3))) (> $generated@@575 0)))))))))
(let (($generated@@589  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 (+ 0 1))) $generated@@46) ($generated@@0 ($generated@@233 ($generated@@11 (> (+ 0 1) 0))))) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) ($generated@@0 ($generated@@233 ($generated@@11 (> 0 0))))) (exists (($generated@@590 Int) ) (> $generated@@590 0))))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@231 (+ 0 1))) $generated@@46) ($generated@@0 ($generated@@233 ($generated@@11 (> (+ 0 1) 0))))) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) ($generated@@0 ($generated@@233 ($generated@@11 (> 0 0))))) (exists (($generated@@591 Int) ) (> $generated@@591 0)))) (=> (> $generated@@577 0) (=> (and (= $generated@@575 $generated@@577) (= (ControlFlow 0 7) 3)) $generated@@588))))))
(let (($generated@@592  (=> (= $generated@@574 ($generated@@231 3)) (=> (and (= $generated@@575 $generated@@576) (= (ControlFlow 0 6) 3)) $generated@@588))))
(let (($generated@@593 true))
(let (($generated@@594  (=> (not (= $generated@@574 ($generated@@231 3))) (and (=> (= (ControlFlow 0 9) 7) $generated@@589) (=> (= (ControlFlow 0 9) 1) $generated@@593)))))
(let (($generated@@595  (=> (= $generated@@572 (ite (< 0 $generated@@573) (- $generated@@573 1) $generated@@573)) (and (=> (= (ControlFlow 0 10) 6) $generated@@592) (=> (= (ControlFlow 0 10) 9) $generated@@594)))))
(let (($generated@@596  (=> (and (<= $generated@@573 0) (= (ControlFlow 0 12) 10)) $generated@@595)))
(let (($generated@@597  (=> (and (< 0 $generated@@573) (= (ControlFlow 0 11) 10)) $generated@@595)))
(let (($generated@@598  (=> (= ($generated@@578 $generated@@579) $generated@@579) (=> (and (= ($generated@@578 $generated@@580) $generated@@580) (= $generated@@581 ($generated@@156 $generated@@582 $generated@@583 $generated@@60 false))) (and (=> (= (ControlFlow 0 13) 11) $generated@@597) (=> (= (ControlFlow 0 13) 12) $generated@@596))))))
(let (($generated@@599  (=> (and (and (and ($generated@@237 $generated@@583) ($generated@@584 $generated@@583)) (= 0 $generated@@585)) (and (or (= $generated@@574 ($generated@@231 3)) (< 0 $generated@@573)) (= (ControlFlow 0 14) 13))) $generated@@598)))
$generated@@599)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int Int) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (Int Int Int) Bool)
(declare-fun $generated@@140 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@267 (Int Int) Int)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (Int Int) Bool)
(declare-fun $generated@@270 (Int Int) Bool)
(declare-fun $generated@@271 (Int Int) Int)
(declare-fun $generated@@276 (Int Int) Int)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@385 (Int Int Int) Bool)
(declare-fun $generated@@386 (Int Int Int) Bool)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@T T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@134 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(= (type ($generated@@138 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (and (not (= 1 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@145 0) (> $generated@@146 0)))))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@140 $generated@@147 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@139 $generated@@148 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@148 $generated@@145 $generated@@146))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
))))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@75 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@64) (= (type $generated@@157) $generated@@64)) (= (type $generated@@158) $generated@@153)) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 16) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@153)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@136) (or ($generated@@137 $generated@@168 $generated@@169) (and (not (= 1 $generated@@132)) (and (> $generated@@168 0) (> $generated@@169 0))))) (and (forall (($generated@@170 Int) ) (!  (=> (> $generated@@170 0) ($generated@@140 $generated@@170 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@170 $generated@@168 $generated@@169))
)) (= ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169) (exists (($generated@@171 Int) ) (!  (and (> $generated@@171 0) ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
)))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@64)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@176) $generated@@64)) ($generated@@149 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@149 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@77 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@179 $generated@@77 $generated@@4))
 :pattern ( ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@67 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@240) ($generated@@66 $generated@@4))) (= (type $generated@@242) $generated@@77)) (= (type $generated@@243) ($generated@@66 $generated@@244))) (= ($generated@@0 ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@153)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@162)) (= (type $generated@@252) $generated@@162)) (= ($generated@@149 ($generated@@245 $generated@@251 $generated@@252) ($generated@@152 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@149 ($generated@@245 $generated@@251 $generated@@252) ($generated@@152 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@153) (= (type $generated@@254) $generated@@153)) (= ($generated@@159 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@159 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@64)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@258) $generated@@64)) (= ($generated@@149 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@162) ($generated@@0 ($generated@@81 $generated@@257 $generated@@259))) ($generated@@246 $generated@@259 $generated@@258))
 :pattern ( ($generated@@81 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@149 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@149 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@162) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@149 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@135 $generated@@265) $generated@@265)
 :pattern ( ($generated@@135 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@138 $generated@@266) $generated@@266)
 :pattern ( ($generated@@138 $generated@@266))
)))
(assert  (=> (<= 5 $generated@@132) (forall (($generated@@272 T@U) ($generated@@273 Int) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78)) (or ($generated@@269 ($generated@@135 $generated@@273) ($generated@@135 $generated@@274)) (and (not (= 5 $generated@@132)) (and ($generated@@268 $generated@@272) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@273 0) (> $generated@@274 0))))))))) (and ($generated@@270 ($generated@@135 $generated@@273) ($generated@@135 $generated@@274)) (= ($generated@@267 ($generated@@135 $generated@@273) ($generated@@135 $generated@@274)) (let (($generated@@275 ($generated@@271 ($generated@@135 $generated@@273) ($generated@@135 $generated@@274))))
$generated@@275))))
 :weight 3
 :pattern ( ($generated@@267 ($generated@@135 $generated@@273) ($generated@@135 $generated@@274)) ($generated@@268 $generated@@272))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@277 Int) ($generated@@278 Int) ($generated@@279 Int) ) (!  (=> (or ($generated@@140 $generated@@277 $generated@@278 $generated@@279) (and (not (= 0 $generated@@132)) (and (> $generated@@277 0) (> $generated@@278 0)))) (= ($generated@@139 $generated@@277 $generated@@278 $generated@@279) (= ($generated@@276 $generated@@277 $generated@@278) $generated@@279)))
 :pattern ( ($generated@@139 $generated@@277 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) $generated@@64)) (= (type $generated@@283) $generated@@162)) (= (type $generated@@284) $generated@@162)) (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@268 $generated@@285)) (= ($generated@@74 ($generated@@245 $generated@@283 $generated@@284) ($generated@@152 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@74 ($generated@@245 $generated@@283 $generated@@284) ($generated@@152 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@153) (= ($generated@@151 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@288))
)))
(assert  (=> (<= 5 $generated@@132) (forall (($generated@@289 T@U) ($generated@@290 Int) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78)) (or ($generated@@269 $generated@@290 $generated@@291) (and (not (= 5 $generated@@132)) (and ($generated@@268 $generated@@289) (and (> $generated@@290 0) (> $generated@@291 0)))))) (and ($generated@@270 $generated@@290 $generated@@291) (= ($generated@@267 $generated@@290 $generated@@291) (let (($generated@@292 ($generated@@271 $generated@@290 $generated@@291)))
$generated@@292))))
 :pattern ( ($generated@@267 $generated@@290 $generated@@291) ($generated@@268 $generated@@289))
))))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@153) ($generated@@151 $generated@@293)) (exists (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (and (and (= (type $generated@@294) $generated@@162) (= (type $generated@@295) $generated@@162)) (= $generated@@293 ($generated@@245 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@294)
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@151 $generated@@293))
)))
(assert  (and (and (forall (($generated@@300 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@300)) 18)) (forall (($generated@@301 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@298 $generated@@301))
))) (forall (($generated@@302 T@T) ) (! (= (type ($generated@@296 $generated@@302)) ($generated@@298 $generated@@302))
 :pattern ( ($generated@@296 $generated@@302))
))))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@303)) 0)
 :pattern ( ($generated@@296 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 Int) ) (!  (=> (= (type $generated@@304) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@304) $generated@@305 $generated@@306) ($generated@@133 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@304) $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@162)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@64) (= (type $generated@@311) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@280 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@74 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@280 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@76 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@79 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@76 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@81 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 20)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@173 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@173 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@322 (type $generated@@357))))
(let (($generated@@359 ($generated@@321 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@320 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@319 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@318 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@322 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(let (($generated@@366 ($generated@@321 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@320 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@319 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@340 (type $generated@@368))))
(let (($generated@@370 ($generated@@339 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@338 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@337 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@336 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@340 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@76 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@340 (type $generated@@375))))
(let (($generated@@377 ($generated@@339 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@338 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@337 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@380) $generated@@64)) (= ($generated@@149 $generated@@379 ($generated@@172 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@379 $generated@@381)))) ($generated@@246 $generated@@381 $generated@@380))
 :pattern ( ($generated@@81 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@149 $generated@@379 ($generated@@172 $generated@@380)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@382 Int) ($generated@@383 Int) ($generated@@384 Int) ) (!  (=> (or ($generated@@140 $generated@@382 $generated@@383 $generated@@384) (and (not (= 0 $generated@@132)) (and (> $generated@@382 0) (> $generated@@383 0)))) true)
 :pattern ( ($generated@@139 $generated@@382 $generated@@383 $generated@@384))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@387 Int) ($generated@@388 Int) ($generated@@389 Int) ) (!  (=> (or ($generated@@386 $generated@@387 $generated@@388 $generated@@389) (and (not (= 2 $generated@@132)) (and (> $generated@@388 0) (> $generated@@389 0)))) true)
 :pattern ( ($generated@@385 $generated@@387 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 Int) ($generated@@391 Int) ) (!  (=> ($generated@@270 $generated@@390 $generated@@391) (and ($generated@@385 ($generated@@271 $generated@@390 $generated@@391) $generated@@390 $generated@@391) (forall (($generated@@392 Int) ) (!  (=> true (=> ($generated@@385 $generated@@392 $generated@@390 $generated@@391) (<= $generated@@392 ($generated@@271 $generated@@390 $generated@@391))))
 :pattern ( ($generated@@385 $generated@@392 $generated@@390 $generated@@391))
))))
 :pattern ( ($generated@@271 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@255 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@162) ($generated@@0 ($generated@@81 $generated@@393 $generated@@396))) ($generated@@280 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@81 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@255 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@260 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@162) ($generated@@0 ($generated@@81 $generated@@397 $generated@@400))) ($generated@@280 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@81 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@260 $generated@@398) $generated@@399))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@401 T@U) ($generated@@402 Int) ($generated@@403 Int) ) (!  (=> (and (= (type $generated@@401) $generated@@136) (or ($generated@@137 $generated@@402 $generated@@403) (and (not (= 1 $generated@@132)) (and (> $generated@@402 0) (> $generated@@403 0))))) true)
 :pattern ( ($generated@@133 $generated@@401 $generated@@402 $generated@@403))
))))
(assert  (=> (<= 5 $generated@@132) (forall (($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (or ($generated@@269 $generated@@404 $generated@@405) (and (not (= 5 $generated@@132)) (and (> $generated@@404 0) (> $generated@@405 0)))) true)
 :pattern ( ($generated@@267 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(= ($generated ($generated@@81 ($generated@@313 $generated@@407) $generated@@406)) 0))
 :pattern ( (let (($generated@@407 (type $generated@@406)))
($generated@@81 ($generated@@313 $generated@@407) $generated@@406)))
)))
(assert  (and (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@408 $generated@@411)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@408 $generated@@411))
)) (forall (($generated@@412 T@T) ($generated@@413 T@U) ) (! (= (type ($generated@@409 $generated@@412 $generated@@413)) $generated@@412)
 :pattern ( ($generated@@409 $generated@@412 $generated@@413))
))) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@322 (type $generated@@414))))
(let (($generated@@416 ($generated@@321 (type $generated@@414))))
(= (type ($generated@@410 $generated@@414)) ($generated@@76 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@410 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@320 $generated@@162 $generated@@162)) (= (type $generated@@418) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@408 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@417) ($generated@@160 ($generated@@409 $generated@@153 $generated@@418)))) (= ($generated@@81 ($generated@@410 $generated@@417) ($generated@@160 ($generated@@409 $generated@@153 $generated@@418))) ($generated@@161 ($generated@@409 $generated@@153 $generated@@418))))))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@417) $generated@@418))
)))
(assert  (and (forall (($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@421)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@419 $generated@@421))
)) (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@340 (type $generated@@422))))
(let (($generated@@424 ($generated@@339 (type $generated@@422))))
(= (type ($generated@@420 $generated@@422)) ($generated@@76 $generated@@424 $generated@@423))))
 :pattern ( ($generated@@420 $generated@@422))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@338 $generated@@162 $generated@@162)) (= (type $generated@@426) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@419 $generated@@425) $generated@@426))  (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@425) ($generated@@160 ($generated@@409 $generated@@153 $generated@@426)))) (= ($generated@@81 ($generated@@420 $generated@@425) ($generated@@160 ($generated@@409 $generated@@153 $generated@@426))) ($generated@@161 ($generated@@409 $generated@@153 $generated@@426))))))
 :pattern ( ($generated@@81 ($generated@@419 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@321 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@320 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@81 ($generated@@410 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@427) $generated@@431))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@339 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@338 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@81 ($generated@@420 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@432) $generated@@436))
 :pattern ( ($generated@@81 ($generated@@420 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@320 $generated@@162 $generated@@162)) (= (type $generated@@441) $generated@@64)) (= (type $generated@@442) $generated@@64)) (= (type $generated@@443) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@440) $generated@@444))) (and ($generated@@280 ($generated@@81 ($generated@@410 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@280 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@440) $generated@@444))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@74 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@338 $generated@@162 $generated@@162)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) $generated@@64)) (= (type $generated@@451) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@448) $generated@@452))) (and ($generated@@280 ($generated@@81 ($generated@@420 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@280 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@81 ($generated@@420 $generated@@448) $generated@@452))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@76 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@340 (type $generated@@455))))
(let (($generated@@457 ($generated@@339 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@338 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@337 $generated@@457 $generated@@456)) (= ($generated@@336 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@336 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@340 (type $generated@@458))))
(let (($generated@@460 ($generated@@339 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@338 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@337 $generated@@460 $generated@@459)) (= ($generated@@372 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@372 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@340 (type $generated@@461))))
(let (($generated@@463 ($generated@@339 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@338 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@337 $generated@@463 $generated@@462)) (= ($generated@@419 $generated@@461) ($generated@@453 $generated@@162))))))
 :pattern ( ($generated@@419 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@322 (type $generated@@464))))
(let (($generated@@466 ($generated@@321 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@320 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@319 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@162) (= (type $generated@@468) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@408 $generated@@464) ($generated@@307 ($generated@@245 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@408 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@340 (type $generated@@469))))
(let (($generated@@471 ($generated@@339 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@338 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@337 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@162) (= (type $generated@@473) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@419 $generated@@469) ($generated@@307 ($generated@@245 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@419 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@162) ($generated@@246 $generated@@474 $generated@@46)) (and (= ($generated@@307 ($generated@@409 $generated@@2 $generated@@474)) $generated@@474) ($generated@@149 ($generated@@409 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@162) ($generated@@246 $generated@@475 $generated@@47)) (and (= ($generated@@307 ($generated@@409 $generated@@3 $generated@@475)) $generated@@475) ($generated@@149 ($generated@@409 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@162) ($generated@@246 $generated@@476 $generated@@44)) (and (= ($generated@@307 ($generated@@409 $generated@@4 $generated@@476)) $generated@@476) ($generated@@149 ($generated@@409 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 21))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@162) ($generated@@246 $generated@@478 $generated@@45)) (and (= ($generated@@307 ($generated@@409 $generated@@477 $generated@@478)) $generated@@478) ($generated@@149 ($generated@@409 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@246 ($generated@@307 $generated@@479) $generated@@480) ($generated@@149 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@246 ($generated@@307 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@79 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@76 $generated@@482 $generated@@2)) (<= 0 ($generated@@312 $generated@@481))))
 :pattern ( ($generated@@312 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@299 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@298 $generated@@484)) (<= 0 ($generated@@297 $generated@@483))))
 :pattern ( ($generated@@297 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@437 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@437 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@437 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@437 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@72 ($generated@@437 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@437 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@445 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@445 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@445 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@445 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@64) (= (type $generated@@504) $generated@@64)) (= ($generated@@72 ($generated@@445 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@445 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@162) (= (type $generated@@506) $generated@@162)) (= ($generated@@286 ($generated@@245 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= ($generated@@507 ($generated@@152 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@152 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (= ($generated@@511 ($generated@@152 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@152 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@162) (= (type $generated@@516) $generated@@162)) (= ($generated@@160 ($generated@@245 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@245 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@162) (= (type $generated@@518) $generated@@162)) (= ($generated@@161 ($generated@@245 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@245 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@521))
)) (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@299 (type $generated@@522))))
(= (type ($generated@@520 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@520 $generated@@522 $generated@@523))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@298 $generated@@162)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@525 ($generated@@519 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@297 $generated@@525))) ($generated@@280 ($generated@@520 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@520 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@519 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@75 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@75 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@255 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@255 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@255 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@535 ($generated@@260 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@260 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@172 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@172 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@172 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@64) (= ($generated@@543 ($generated@@519 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@519 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@72 ($generated@@519 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@519 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@409 $generated@@548 ($generated@@307 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@307 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@320 $generated@@162 $generated@@162)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) (= ($generated@@149 $generated@@549 ($generated@@437 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@549) $generated@@552))) (and ($generated@@246 ($generated@@81 ($generated@@410 $generated@@549) $generated@@552) $generated@@551) ($generated@@246 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@549) $generated@@552))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@149 $generated@@549 ($generated@@437 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@338 $generated@@162 $generated@@162)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) $generated@@64)) (= ($generated@@149 $generated@@553 ($generated@@445 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@553) $generated@@556))) (and ($generated@@246 ($generated@@81 ($generated@@420 $generated@@553) $generated@@556) $generated@@555) ($generated@@246 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@81 ($generated@@420 $generated@@553) $generated@@556))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@149 $generated@@553 ($generated@@445 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@162) (= (type $generated@@560) $generated@@162)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@245 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@245 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@162) (= (type $generated@@562) $generated@@162)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@245 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@245 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@162) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@246 $generated@@563 ($generated@@437 $generated@@564 $generated@@565))) (and (= ($generated@@307 ($generated@@409 ($generated@@320 $generated@@162 $generated@@162) $generated@@563)) $generated@@563) ($generated@@149 ($generated@@409 ($generated@@320 $generated@@162 $generated@@162) $generated@@563) ($generated@@437 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@246 $generated@@563 ($generated@@437 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@162) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@246 $generated@@566 ($generated@@445 $generated@@567 $generated@@568))) (and (= ($generated@@307 ($generated@@409 ($generated@@338 $generated@@162 $generated@@162) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@409 ($generated@@338 $generated@@162 $generated@@162) $generated@@566) ($generated@@445 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@246 $generated@@566 ($generated@@445 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@162)) ($generated@@246 $generated@@571 ($generated@@152 $generated@@569 $generated@@570))) (and (= ($generated@@307 ($generated@@409 $generated@@153 $generated@@571)) $generated@@571) ($generated@@149 ($generated@@409 $generated@@153 $generated@@571) ($generated@@152 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@246 $generated@@571 ($generated@@152 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@81 ($generated@@453 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@81 ($generated@@453 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@69)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@64) (= (type $generated@@577) $generated@@64)) (and (= ($generated@@72 ($generated@@152 $generated@@576 $generated@@577)) $generated@@62) (= ($generated@@574 ($generated@@152 $generated@@576 $generated@@577)) $generated@@63)))
 :pattern ( ($generated@@152 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 Int) ($generated@@579 Int) ) (! (= ($generated@@276 $generated@@578 $generated@@579) (* $generated@@578 $generated@@579))
 :pattern ( ($generated@@276 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@153) (= ($generated@@557 ($generated@@307 $generated@@580)) ($generated@@558 $generated@@580)))
 :pattern ( ($generated@@557 ($generated@@307 $generated@@580)))
)))
(assert (= (type $generated@@581) $generated@@136))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@582 Int) ($generated@@583 Int) ($generated@@584 Int) ) (!  (=> (or ($generated@@386 ($generated@@135 $generated@@582) ($generated@@135 $generated@@583) ($generated@@135 $generated@@584)) (and (not (= 2 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@583 0) (> $generated@@584 0))))))) (and (=> ($generated@@0 ($generated@@138 ($generated@@11 (> $generated@@582 0)))) (and ($generated@@137 ($generated@@135 $generated@@582) ($generated@@135 $generated@@583)) (=> ($generated@@133 $generated@@581 ($generated@@135 $generated@@582) ($generated@@135 $generated@@583)) ($generated@@137 ($generated@@135 $generated@@582) ($generated@@135 $generated@@584))))) (= ($generated@@385 ($generated@@135 $generated@@582) ($generated@@135 $generated@@583) ($generated@@135 $generated@@584))  (and (and (> $generated@@582 0) ($generated@@133 $generated@@581 ($generated@@135 $generated@@582) ($generated@@135 $generated@@583))) ($generated@@133 $generated@@581 ($generated@@135 $generated@@582) ($generated@@135 $generated@@584))))))
 :weight 3
 :pattern ( ($generated@@385 ($generated@@135 $generated@@582) ($generated@@135 $generated@@583) ($generated@@135 $generated@@584)))
))))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@162) ($generated@@246 $generated@@585 ($generated@@75 0))) (and (= ($generated@@307 ($generated@@409 $generated@@2 $generated@@585)) $generated@@585) ($generated@@149 ($generated@@409 ($generated@@76 $generated@@162 $generated@@4) $generated@@585) ($generated@@75 0))))
 :pattern ( ($generated@@246 $generated@@585 ($generated@@75 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@162) (= (type $generated@@587) $generated@@64)) ($generated@@246 $generated@@586 ($generated@@255 $generated@@587))) (and (= ($generated@@307 ($generated@@409 ($generated@@76 $generated@@162 $generated@@4) $generated@@586)) $generated@@586) ($generated@@149 ($generated@@409 ($generated@@76 $generated@@162 $generated@@4) $generated@@586) ($generated@@255 $generated@@587))))
 :pattern ( ($generated@@246 $generated@@586 ($generated@@255 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@162) (= (type $generated@@589) $generated@@64)) ($generated@@246 $generated@@588 ($generated@@260 $generated@@589))) (and (= ($generated@@307 ($generated@@409 ($generated@@76 $generated@@162 $generated@@4) $generated@@588)) $generated@@588) ($generated@@149 ($generated@@409 ($generated@@76 $generated@@162 $generated@@4) $generated@@588) ($generated@@260 $generated@@589))))
 :pattern ( ($generated@@246 $generated@@588 ($generated@@260 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@64)) ($generated@@246 $generated@@590 ($generated@@172 $generated@@591))) (and (= ($generated@@307 ($generated@@409 ($generated@@76 $generated@@162 $generated@@2) $generated@@590)) $generated@@590) ($generated@@149 ($generated@@409 ($generated@@76 $generated@@162 $generated@@2) $generated@@590) ($generated@@172 $generated@@591))))
 :pattern ( ($generated@@246 $generated@@590 ($generated@@172 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@162) (= (type $generated@@593) $generated@@64)) ($generated@@246 $generated@@592 ($generated@@519 $generated@@593))) (and (= ($generated@@307 ($generated@@409 ($generated@@298 $generated@@162) $generated@@592)) $generated@@592) ($generated@@149 ($generated@@409 ($generated@@298 $generated@@162) $generated@@592) ($generated@@519 $generated@@593))))
 :pattern ( ($generated@@246 $generated@@592 ($generated@@519 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@594 ($generated@@172 $generated@@595) $generated@@596) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@594 $generated@@597)))) ($generated@@280 $generated@@597 $generated@@595 $generated@@596))
 :pattern ( ($generated@@81 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@74 $generated@@594 ($generated@@172 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@153) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@268 $generated@@600) (and ($generated@@151 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@64) ($generated@@74 $generated@@598 ($generated@@152 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@74 $generated@@598 ($generated@@152 $generated@@599 $generated@@601) $generated@@600))
))))) ($generated@@280 ($generated@@160 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@280 ($generated@@160 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@153) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@268 $generated@@604) (and ($generated@@151 $generated@@602) (exists (($generated@@605 T@U) ) (!  (and (= (type $generated@@605) $generated@@64) ($generated@@74 $generated@@602 ($generated@@152 $generated@@605 $generated@@603) $generated@@604))
 :pattern ( ($generated@@74 $generated@@602 ($generated@@152 $generated@@605 $generated@@603) $generated@@604))
))))) ($generated@@280 ($generated@@161 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@280 ($generated@@161 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@162) (= (type $generated@@607) $generated@@162)) (= ($generated@@245 ($generated@@138 $generated@@606) ($generated@@138 $generated@@607)) ($generated@@138 ($generated@@245 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@245 ($generated@@138 $generated@@606) ($generated@@138 $generated@@607)))
)))
(assert (forall (($generated@@608 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@135 $generated@@608))) ($generated@@138 ($generated@@307 ($generated@@8 $generated@@608))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@135 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ) (! (= ($generated@@307 ($generated@@138 $generated@@609)) ($generated@@138 ($generated@@307 $generated@@609)))
 :pattern ( ($generated@@307 ($generated@@138 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 ($generated@@299 (type $generated@@610))))
 (=> (and (= (type $generated@@610) ($generated@@298 $generated@@611)) (= ($generated@@297 $generated@@610) 0)) (= $generated@@610 ($generated@@296 $generated@@611))))
 :pattern ( ($generated@@297 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@613)))
 (=> (and (and (= (type $generated@@612) ($generated@@76 $generated@@615 $generated@@2)) (= (type $generated@@614) $generated@@2)) (<= 0 ($generated $generated@@614))) (= ($generated@@312 ($generated@@82 $generated@@612 $generated@@613 $generated@@614)) (+ (- ($generated@@312 $generated@@612) ($generated ($generated@@81 $generated@@612 $generated@@613))) ($generated $generated@@614)))))
 :pattern ( ($generated@@312 ($generated@@82 $generated@@612 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@617) $generated@@2)) ($generated@@74 $generated@@617 $generated@@46 $generated@@616))
 :pattern ( ($generated@@74 $generated@@617 $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@619) $generated@@3)) ($generated@@74 $generated@@619 $generated@@47 $generated@@618))
 :pattern ( ($generated@@74 $generated@@619 $generated@@47 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@621) $generated@@4)) ($generated@@74 $generated@@621 $generated@@44 $generated@@620))
 :pattern ( ($generated@@74 $generated@@621 $generated@@44 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@623) $generated@@477)) ($generated@@74 $generated@@623 $generated@@45 $generated@@622))
 :pattern ( ($generated@@74 $generated@@623 $generated@@45 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@625) $generated@@162)) ($generated@@74 $generated@@625 $generated@@48 $generated@@624))
 :pattern ( ($generated@@74 $generated@@625 $generated@@48 $generated@@624))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@626 Int) ($generated@@627 Int) ($generated@@628 Int) ) (!  (=> (or ($generated@@386 $generated@@626 $generated@@627 $generated@@628) (and (not (= 2 $generated@@132)) (and (> $generated@@627 0) (> $generated@@628 0)))) (and (=> (> $generated@@626 0) (and ($generated@@137 $generated@@626 $generated@@627) (=> ($generated@@133 $generated@@581 $generated@@626 $generated@@627) ($generated@@137 $generated@@626 $generated@@628)))) (= ($generated@@385 $generated@@626 $generated@@627 $generated@@628)  (and (and (> $generated@@626 0) ($generated@@133 $generated@@581 $generated@@626 $generated@@627)) ($generated@@133 $generated@@581 $generated@@626 $generated@@628)))))
 :pattern ( ($generated@@385 $generated@@626 $generated@@627 $generated@@628))
))))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@298 $generated@@162)) (= (type $generated@@630) $generated@@64)) (= ($generated@@149 $generated@@629 ($generated@@519 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@297 $generated@@629))) ($generated@@246 ($generated@@520 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@520 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@149 $generated@@629 ($generated@@519 $generated@@630)))
)))
(assert  (and (forall (($generated@@634 T@U) ) (! (= (type ($generated@@632 $generated@@634)) $generated@@136)
 :pattern ( ($generated@@632 $generated@@634))
)) (= (type $generated@@633) $generated@@136)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ($generated@@637 Int) ) (!  (=> (= (type $generated@@635) $generated@@136) (= ($generated@@133 $generated@@635 $generated@@636 $generated@@637) ($generated@@133 $generated@@633 $generated@@636 $generated@@637)))
 :pattern ( ($generated@@133 ($generated@@632 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@298 $generated@@162)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@297 $generated@@639))) (< ($generated@@558 ($generated@@409 $generated@@153 ($generated@@520 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@558 ($generated@@409 $generated@@153 ($generated@@520 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@320 $generated@@162 $generated@@162)) (= (type $generated@@642) $generated@@64)) (= (type $generated@@643) $generated@@64)) ($generated@@149 $generated@@641 ($generated@@437 $generated@@642 $generated@@643))) (and (and ($generated@@149 ($generated@@318 $generated@@641) ($generated@@255 $generated@@642)) ($generated@@149 ($generated@@361 $generated@@641) ($generated@@255 $generated@@643))) ($generated@@149 ($generated@@408 $generated@@641) ($generated@@255 ($generated@@152 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@149 $generated@@641 ($generated@@437 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@338 $generated@@162 $generated@@162)) (= (type $generated@@645) $generated@@64)) (= (type $generated@@646) $generated@@64)) ($generated@@149 $generated@@644 ($generated@@445 $generated@@645 $generated@@646))) (and (and ($generated@@149 ($generated@@336 $generated@@644) ($generated@@260 $generated@@645)) ($generated@@149 ($generated@@372 $generated@@644) ($generated@@260 $generated@@646))) ($generated@@149 ($generated@@419 $generated@@644) ($generated@@260 ($generated@@152 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@149 $generated@@644 ($generated@@445 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@149 $generated@@647 $generated@@46))
 :pattern ( ($generated@@149 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@149 $generated@@648 $generated@@47))
 :pattern ( ($generated@@149 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@149 $generated@@649 $generated@@44))
 :pattern ( ($generated@@149 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@477) ($generated@@149 $generated@@650 $generated@@45))
 :pattern ( ($generated@@149 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@162) ($generated@@149 $generated@@651 $generated@@48))
 :pattern ( ($generated@@149 $generated@@651 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@652 Int) ($generated@@653 Int) ($generated@@654 Int) ) (!  (=> (or ($generated@@140 ($generated@@135 $generated@@652) ($generated@@135 $generated@@653) ($generated@@135 $generated@@654)) (and (not (= 0 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@652 0) (> $generated@@653 0))))))) (= ($generated@@139 ($generated@@135 $generated@@652) ($generated@@135 $generated@@653) ($generated@@135 $generated@@654)) (= ($generated@@135 ($generated@@276 ($generated@@135 $generated@@652) ($generated@@135 $generated@@653))) ($generated@@135 $generated@@654))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@135 $generated@@652) ($generated@@135 $generated@@653) ($generated@@135 $generated@@654)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@660) ($generated@@179 $generated@@77 $generated@@4))) (= (type $generated@@661) $generated@@77)) (= (type $generated@@662) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@664) ($generated@@179 $generated@@77 $generated@@4))) (= (type $generated@@665) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@666 true))
(let (($generated@@667  (=> (= (ControlFlow 0 4) (- 0 3)) (or (and ($generated@@149 ($generated@@8 ($generated@@135 0)) $generated@@46) (and ($generated@@385 ($generated@@135 0) $generated@@655 $generated@@656) (forall (($generated@@668 Int) ) (!  (=> true (=> ($generated@@385 $generated@@668 $generated@@655 $generated@@656) (<= $generated@@668 ($generated@@135 0))))
 :pattern ( ($generated@@385 $generated@@668 $generated@@655 $generated@@656))
)))) (exists (($generated@@669 Int) )  (and ($generated@@385 $generated@@669 $generated@@655 $generated@@656) (forall (($generated@@670 Int) ) (!  (=> true (=> ($generated@@385 $generated@@670 $generated@@655 $generated@@656) (<= $generated@@670 $generated@@669)))
 :pattern ( ($generated@@385 $generated@@670 $generated@@655 $generated@@656))
))))))))
(let (($generated@@671  (=> (and (not ($generated@@385 $generated@@657 $generated@@655 $generated@@656)) (= (ControlFlow 0 8) 4)) $generated@@667)))
(let (($generated@@672  (=> (and ($generated@@385 $generated@@657 $generated@@655 $generated@@656) (= (ControlFlow 0 7) 4)) $generated@@667)))
(let (($generated@@673  (=> ($generated@@74 ($generated@@8 $generated@@657) $generated@@46 $generated@@658) (=> (and ($generated@@74 ($generated@@8 $generated@@655) $generated@@46 $generated@@658) ($generated@@74 ($generated@@8 $generated@@656) $generated@@46 $generated@@658)) (and (=> (= (ControlFlow 0 9) (- 0 11)) (> $generated@@655 0)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (> $generated@@656 0)) (=> (and (and (> $generated@@655 0) (> $generated@@656 0)) ($generated@@386 $generated@@657 $generated@@655 $generated@@656)) (and (=> (= (ControlFlow 0 9) 7) $generated@@672) (=> (= (ControlFlow 0 9) 8) $generated@@671)))))))))
(let (($generated@@674  (=> ($generated@@385 $generated@@659 $generated@@655 $generated@@656) (and (=> (= (ControlFlow 0 12) 9) $generated@@673) (=> (= (ControlFlow 0 12) 6) $generated@@666)))))
(let (($generated@@675  (=> (and (not ($generated@@385 $generated@@659 $generated@@655 $generated@@656)) (= (ControlFlow 0 5) 4)) $generated@@667)))
(let (($generated@@676  (=> ($generated@@74 ($generated@@8 $generated@@659) $generated@@46 $generated@@658) (=> (and ($generated@@74 ($generated@@8 $generated@@655) $generated@@46 $generated@@658) ($generated@@74 ($generated@@8 $generated@@656) $generated@@46 $generated@@658)) (and (=> (= (ControlFlow 0 13) (- 0 15)) (> $generated@@655 0)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (> $generated@@656 0)) (=> (and (and (> $generated@@655 0) (> $generated@@656 0)) ($generated@@386 $generated@@659 $generated@@655 $generated@@656)) (and (=> (= (ControlFlow 0 13) 12) $generated@@674) (=> (= (ControlFlow 0 13) 5) $generated@@675)))))))))
(let (($generated@@677 true))
(let (($generated@@678  (=> (= $generated@@660 ($generated@@233 $generated@@661 $generated@@662 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) (- 0 18)) (> $generated@@655 0)) (=> (> $generated@@655 0) (and (=> (= (ControlFlow 0 16) (- 0 17)) (> $generated@@656 0)) (=> (> $generated@@656 0) (=> (and (and (and ($generated@@268 $generated@@658) ($generated@@663 $generated@@658)) (forall (($generated@@679 Int) ) (!  (and ($generated@@386 $generated@@679 $generated@@655 $generated@@656) (=> ($generated@@385 $generated@@679 $generated@@655 $generated@@656) (forall (($generated@@680 Int) ) (! ($generated@@386 $generated@@680 $generated@@655 $generated@@656)
 :pattern ( ($generated@@385 $generated@@680 $generated@@655 $generated@@656))
))))
 :pattern ( ($generated@@385 $generated@@679 $generated@@655 $generated@@656))
))) (and (exists (($generated@@681 Int) ) (!  (and ($generated@@385 $generated@@681 $generated@@655 $generated@@656) (forall (($generated@@682 Int) ) (!  (=> true (=> ($generated@@385 $generated@@682 $generated@@655 $generated@@656) (<= $generated@@682 $generated@@681)))
 :pattern ( ($generated@@385 $generated@@682 $generated@@655 $generated@@656))
)))
 :pattern ( ($generated@@385 $generated@@681 $generated@@655 $generated@@656))
)) (= $generated@@662 $generated@@658))) (and (=> (= (ControlFlow 0 16) 13) $generated@@676) (=> (= (ControlFlow 0 16) 2) $generated@@677))))))))))
(let (($generated@@683 true))
(let (($generated@@684  (=> (= $generated@@664 ($generated@@178 $generated@@661 $generated@@662 $generated@@60 false)) (=> (and (and (= ($generated@@632 $generated@@581) $generated@@581) (= ($generated@@632 $generated@@665) $generated@@665)) (and (> $generated@@655 0) (> $generated@@656 0))) (and (=> (= (ControlFlow 0 19) 1) $generated@@683) (=> (= (ControlFlow 0 19) 16) $generated@@678))))))
(let (($generated@@685  (=> (and (and ($generated@@268 $generated@@662) ($generated@@663 $generated@@662)) (and (= 5 $generated@@132) (= (ControlFlow 0 20) 19))) $generated@@684)))
$generated@@685))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int Int) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (Int Int Int) Bool)
(declare-fun $generated@@140 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@267 (Int Int) Int)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@373 (Int Int Int) Bool)
(declare-fun $generated@@374 (Int Int Int) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@564 () T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@134 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(= (type ($generated@@138 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (and (not (= 1 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@145 0) (> $generated@@146 0)))))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@140 $generated@@147 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@139 $generated@@148 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@148 $generated@@145 $generated@@146))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
))))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@75 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@64) (= (type $generated@@157) $generated@@64)) (= (type $generated@@158) $generated@@153)) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 16) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@153)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@136) (or ($generated@@137 $generated@@168 $generated@@169) (and (not (= 1 $generated@@132)) (and (> $generated@@168 0) (> $generated@@169 0))))) (and (forall (($generated@@170 Int) ) (!  (=> (> $generated@@170 0) ($generated@@140 $generated@@170 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@170 $generated@@168 $generated@@169))
)) (= ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169) (exists (($generated@@171 Int) ) (!  (and (> $generated@@171 0) ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
)))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@64)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@176) $generated@@64)) ($generated@@149 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@149 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@77 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@179 $generated@@77 $generated@@4))
 :pattern ( ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@67 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@240) ($generated@@66 $generated@@4))) (= (type $generated@@242) $generated@@77)) (= (type $generated@@243) ($generated@@66 $generated@@244))) (= ($generated@@0 ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@153)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@162)) (= (type $generated@@252) $generated@@162)) (= ($generated@@149 ($generated@@245 $generated@@251 $generated@@252) ($generated@@152 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@149 ($generated@@245 $generated@@251 $generated@@252) ($generated@@152 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@153) (= (type $generated@@254) $generated@@153)) (= ($generated@@159 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@159 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@64)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@258) $generated@@64)) (= ($generated@@149 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@162) ($generated@@0 ($generated@@81 $generated@@257 $generated@@259))) ($generated@@246 $generated@@259 $generated@@258))
 :pattern ( ($generated@@81 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@149 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@149 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@162) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@149 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@135 $generated@@265) $generated@@265)
 :pattern ( ($generated@@135 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@138 $generated@@266) $generated@@266)
 :pattern ( ($generated@@138 $generated@@266))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@268 Int) ($generated@@269 Int) ($generated@@270 Int) ) (!  (=> (or ($generated@@140 $generated@@268 $generated@@269 $generated@@270) (and (not (= 0 $generated@@132)) (and (> $generated@@268 0) (> $generated@@269 0)))) (= ($generated@@139 $generated@@268 $generated@@269 $generated@@270) (= ($generated@@267 $generated@@268 $generated@@269) $generated@@270)))
 :pattern ( ($generated@@139 $generated@@268 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) $generated@@64)) (= (type $generated@@275) $generated@@162)) (= (type $generated@@276) $generated@@162)) (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@271 $generated@@277)) (= ($generated@@74 ($generated@@245 $generated@@275 $generated@@276) ($generated@@152 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@74 ($generated@@245 $generated@@275 $generated@@276) ($generated@@152 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@68)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@153) (= ($generated@@151 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@153) ($generated@@151 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@162) (= (type $generated@@283) $generated@@162)) (= $generated@@281 ($generated@@245 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@151 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 18)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 Int) ($generated@@294 Int) ) (!  (=> (= (type $generated@@292) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@292) $generated@@293 $generated@@294) ($generated@@133 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@162)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@64) (= (type $generated@@299) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@272 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@74 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@272 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@76 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@81 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 20)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@79 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@76 $generated@@343 $generated@@2)) (= ($generated@@173 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@81 $generated@@342 $generated@@344))) (<= ($generated ($generated@@81 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@173 $generated@@342))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@310 (type $generated@@345))))
(let (($generated@@347 ($generated@@309 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@308 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@307 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@306 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@310 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@76 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(let (($generated@@354 ($generated@@309 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@308 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@307 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@328 (type $generated@@356))))
(let (($generated@@358 ($generated@@327 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@326 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@325 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@324 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@328 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@76 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@328 (type $generated@@363))))
(let (($generated@@365 ($generated@@327 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@326 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@325 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@368) $generated@@64)) (= ($generated@@149 $generated@@367 ($generated@@172 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@367 $generated@@369)))) ($generated@@246 $generated@@369 $generated@@368))
 :pattern ( ($generated@@81 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@149 $generated@@367 ($generated@@172 $generated@@368)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@370 Int) ($generated@@371 Int) ($generated@@372 Int) ) (!  (=> (or ($generated@@140 $generated@@370 $generated@@371 $generated@@372) (and (not (= 0 $generated@@132)) (and (> $generated@@370 0) (> $generated@@371 0)))) true)
 :pattern ( ($generated@@139 $generated@@370 $generated@@371 $generated@@372))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@375 Int) ($generated@@376 Int) ($generated@@377 Int) ) (!  (=> (or ($generated@@374 $generated@@375 $generated@@376 $generated@@377) (and (not (= 2 $generated@@132)) (and (> $generated@@376 0) (> $generated@@377 0)))) true)
 :pattern ( ($generated@@373 $generated@@375 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@378 ($generated@@255 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@162) ($generated@@0 ($generated@@81 $generated@@378 $generated@@381))) ($generated@@272 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@81 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@378 ($generated@@255 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@382 ($generated@@260 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@162) ($generated@@0 ($generated@@81 $generated@@382 $generated@@385))) ($generated@@272 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@81 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@382 ($generated@@260 $generated@@383) $generated@@384))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@386 T@U) ($generated@@387 Int) ($generated@@388 Int) ) (!  (=> (and (= (type $generated@@386) $generated@@136) (or ($generated@@137 $generated@@387 $generated@@388) (and (not (= 1 $generated@@132)) (and (> $generated@@387 0) (> $generated@@388 0))))) true)
 :pattern ( ($generated@@133 $generated@@386 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(= ($generated ($generated@@81 ($generated@@301 $generated@@390) $generated@@389)) 0))
 :pattern ( (let (($generated@@390 (type $generated@@389)))
($generated@@81 ($generated@@301 $generated@@390) $generated@@389)))
)))
(assert  (and (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@391 $generated@@394)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@391 $generated@@394))
)) (forall (($generated@@395 T@T) ($generated@@396 T@U) ) (! (= (type ($generated@@392 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@392 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@310 (type $generated@@397))))
(let (($generated@@399 ($generated@@309 (type $generated@@397))))
(= (type ($generated@@393 $generated@@397)) ($generated@@76 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@393 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@308 $generated@@162 $generated@@162)) (= (type $generated@@401) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@391 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@400) ($generated@@160 ($generated@@392 $generated@@153 $generated@@401)))) (= ($generated@@81 ($generated@@393 $generated@@400) ($generated@@160 ($generated@@392 $generated@@153 $generated@@401))) ($generated@@161 ($generated@@392 $generated@@153 $generated@@401))))))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@400) $generated@@401))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@328 (type $generated@@405))))
(let (($generated@@407 ($generated@@327 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@76 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@409) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@408) ($generated@@160 ($generated@@392 $generated@@153 $generated@@409)))) (= ($generated@@81 ($generated@@403 $generated@@408) ($generated@@160 ($generated@@392 $generated@@153 $generated@@409))) ($generated@@161 ($generated@@392 $generated@@153 $generated@@409))))))
 :pattern ( ($generated@@81 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@309 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@81 ($generated@@349 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@81 ($generated@@393 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@327 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@326 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@81 ($generated@@403 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@308 $generated@@162 $generated@@162)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) $generated@@64)) (= (type $generated@@426) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@423) $generated@@427))) (and ($generated@@272 ($generated@@81 ($generated@@393 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@272 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@423) $generated@@427))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@74 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@432) $generated@@64)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@431) $generated@@435))) (and ($generated@@272 ($generated@@81 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@272 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@76 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@328 (type $generated@@438))))
(let (($generated@@440 ($generated@@327 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@326 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@325 $generated@@440 $generated@@439)) (= ($generated@@324 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@324 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@328 (type $generated@@441))))
(let (($generated@@443 ($generated@@327 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@326 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@325 $generated@@443 $generated@@442)) (= ($generated@@360 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@360 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@328 (type $generated@@444))))
(let (($generated@@446 ($generated@@327 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@326 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@325 $generated@@446 $generated@@445)) (= ($generated@@402 $generated@@444) ($generated@@436 $generated@@162))))))
 :pattern ( ($generated@@402 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@310 (type $generated@@447))))
(let (($generated@@449 ($generated@@309 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@308 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@307 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@162) (= (type $generated@@451) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@391 $generated@@447) ($generated@@295 ($generated@@245 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@391 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@328 (type $generated@@452))))
(let (($generated@@454 ($generated@@327 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@326 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@325 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@162) (= (type $generated@@456) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@402 $generated@@452) ($generated@@295 ($generated@@245 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@402 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@162) ($generated@@246 $generated@@457 $generated@@46)) (and (= ($generated@@295 ($generated@@392 $generated@@2 $generated@@457)) $generated@@457) ($generated@@149 ($generated@@392 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@162) ($generated@@246 $generated@@458 $generated@@47)) (and (= ($generated@@295 ($generated@@392 $generated@@3 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@392 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@162) ($generated@@246 $generated@@459 $generated@@44)) (and (= ($generated@@295 ($generated@@392 $generated@@4 $generated@@459)) $generated@@459) ($generated@@149 ($generated@@392 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 21))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@162) ($generated@@246 $generated@@461 $generated@@45)) (and (= ($generated@@295 ($generated@@392 $generated@@460 $generated@@461)) $generated@@461) ($generated@@149 ($generated@@392 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@64) (= ($generated@@246 ($generated@@295 $generated@@462) $generated@@463) ($generated@@149 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@246 ($generated@@295 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@79 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@76 $generated@@465 $generated@@2)) (<= 0 ($generated@@300 $generated@@464))))
 :pattern ( ($generated@@300 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@287 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@286 $generated@@467)) (<= 0 ($generated@@285 $generated@@466))))
 :pattern ( ($generated@@285 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@420 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@420 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@420 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@72 ($generated@@420 $generated@@476 $generated@@477)) $generated@@58))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@428 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@428 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@428 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@428 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@72 ($generated@@428 $generated@@486 $generated@@487)) $generated@@59))
 :pattern ( ($generated@@428 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@162) (= (type $generated@@489) $generated@@162)) (= ($generated@@278 ($generated@@245 $generated@@488 $generated@@489)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@152 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@152 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@152 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@152 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@162) (= (type $generated@@499) $generated@@162)) (= ($generated@@160 ($generated@@245 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@245 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@162) (= (type $generated@@501) $generated@@162)) (= ($generated@@161 ($generated@@245 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@245 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@287 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@286 $generated@@162)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@285 $generated@@508))) ($generated@@272 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@74 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@75 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@75 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@255 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@255 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@255 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@518 ($generated@@260 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@260 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@522 ($generated@@172 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@172 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@72 ($generated@@172 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@72 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@392 $generated@@531 ($generated@@295 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@295 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@308 $generated@@162 $generated@@162)) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) (= ($generated@@149 $generated@@532 ($generated@@420 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@532) $generated@@535))) (and ($generated@@246 ($generated@@81 ($generated@@393 $generated@@532) $generated@@535) $generated@@534) ($generated@@246 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@532) $generated@@535))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@149 $generated@@532 ($generated@@420 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) (= ($generated@@149 $generated@@536 ($generated@@428 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@536) $generated@@539))) (and ($generated@@246 ($generated@@81 ($generated@@403 $generated@@536) $generated@@539) $generated@@538) ($generated@@246 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@536) $generated@@539))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@149 $generated@@536 ($generated@@428 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@162) (= (type $generated@@543) $generated@@162)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@245 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@245 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@162) (= (type $generated@@545) $generated@@162)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@245 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@245 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@162) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) ($generated@@246 $generated@@546 ($generated@@420 $generated@@547 $generated@@548))) (and (= ($generated@@295 ($generated@@392 ($generated@@308 $generated@@162 $generated@@162) $generated@@546)) $generated@@546) ($generated@@149 ($generated@@392 ($generated@@308 $generated@@162 $generated@@162) $generated@@546) ($generated@@420 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@246 $generated@@546 ($generated@@420 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@162) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) ($generated@@246 $generated@@549 ($generated@@428 $generated@@550 $generated@@551))) (and (= ($generated@@295 ($generated@@392 ($generated@@326 $generated@@162 $generated@@162) $generated@@549)) $generated@@549) ($generated@@149 ($generated@@392 ($generated@@326 $generated@@162 $generated@@162) $generated@@549) ($generated@@428 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@246 $generated@@549 ($generated@@428 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) $generated@@162)) ($generated@@246 $generated@@554 ($generated@@152 $generated@@552 $generated@@553))) (and (= ($generated@@295 ($generated@@392 $generated@@153 $generated@@554)) $generated@@554) ($generated@@149 ($generated@@392 $generated@@153 $generated@@554) ($generated@@152 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@246 $generated@@554 ($generated@@152 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@81 ($generated@@436 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@81 ($generated@@436 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@69)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@64) (= (type $generated@@560) $generated@@64)) (and (= ($generated@@72 ($generated@@152 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@152 $generated@@559 $generated@@560)) $generated@@63)))
 :pattern ( ($generated@@152 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 Int) ($generated@@562 Int) ) (! (= ($generated@@267 $generated@@561 $generated@@562) (* $generated@@561 $generated@@562))
 :pattern ( ($generated@@267 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@153) (= ($generated@@540 ($generated@@295 $generated@@563)) ($generated@@541 $generated@@563)))
 :pattern ( ($generated@@540 ($generated@@295 $generated@@563)))
)))
(assert (= (type $generated@@564) $generated@@136))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@565 Int) ($generated@@566 Int) ($generated@@567 Int) ) (!  (=> (or ($generated@@374 ($generated@@135 $generated@@565) ($generated@@135 $generated@@566) ($generated@@135 $generated@@567)) (and (not (= 2 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@566 0) (> $generated@@567 0))))))) (and (=> ($generated@@0 ($generated@@138 ($generated@@11 (> $generated@@565 0)))) (and ($generated@@137 ($generated@@135 $generated@@565) ($generated@@135 $generated@@566)) (=> ($generated@@133 $generated@@564 ($generated@@135 $generated@@565) ($generated@@135 $generated@@566)) ($generated@@137 ($generated@@135 $generated@@565) ($generated@@135 $generated@@567))))) (= ($generated@@373 ($generated@@135 $generated@@565) ($generated@@135 $generated@@566) ($generated@@135 $generated@@567))  (and (and (> $generated@@565 0) ($generated@@133 $generated@@564 ($generated@@135 $generated@@565) ($generated@@135 $generated@@566))) ($generated@@133 $generated@@564 ($generated@@135 $generated@@565) ($generated@@135 $generated@@567))))))
 :weight 3
 :pattern ( ($generated@@373 ($generated@@135 $generated@@565) ($generated@@135 $generated@@566) ($generated@@135 $generated@@567)))
))))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@162) ($generated@@246 $generated@@568 ($generated@@75 0))) (and (= ($generated@@295 ($generated@@392 $generated@@2 $generated@@568)) $generated@@568) ($generated@@149 ($generated@@392 ($generated@@76 $generated@@162 $generated@@4) $generated@@568) ($generated@@75 0))))
 :pattern ( ($generated@@246 $generated@@568 ($generated@@75 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@162) (= (type $generated@@570) $generated@@64)) ($generated@@246 $generated@@569 ($generated@@255 $generated@@570))) (and (= ($generated@@295 ($generated@@392 ($generated@@76 $generated@@162 $generated@@4) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@392 ($generated@@76 $generated@@162 $generated@@4) $generated@@569) ($generated@@255 $generated@@570))))
 :pattern ( ($generated@@246 $generated@@569 ($generated@@255 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@162) (= (type $generated@@572) $generated@@64)) ($generated@@246 $generated@@571 ($generated@@260 $generated@@572))) (and (= ($generated@@295 ($generated@@392 ($generated@@76 $generated@@162 $generated@@4) $generated@@571)) $generated@@571) ($generated@@149 ($generated@@392 ($generated@@76 $generated@@162 $generated@@4) $generated@@571) ($generated@@260 $generated@@572))))
 :pattern ( ($generated@@246 $generated@@571 ($generated@@260 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@162) (= (type $generated@@574) $generated@@64)) ($generated@@246 $generated@@573 ($generated@@172 $generated@@574))) (and (= ($generated@@295 ($generated@@392 ($generated@@76 $generated@@162 $generated@@2) $generated@@573)) $generated@@573) ($generated@@149 ($generated@@392 ($generated@@76 $generated@@162 $generated@@2) $generated@@573) ($generated@@172 $generated@@574))))
 :pattern ( ($generated@@246 $generated@@573 ($generated@@172 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@162) (= (type $generated@@576) $generated@@64)) ($generated@@246 $generated@@575 ($generated@@502 $generated@@576))) (and (= ($generated@@295 ($generated@@392 ($generated@@286 $generated@@162) $generated@@575)) $generated@@575) ($generated@@149 ($generated@@392 ($generated@@286 $generated@@162) $generated@@575) ($generated@@502 $generated@@576))))
 :pattern ( ($generated@@246 $generated@@575 ($generated@@502 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@577 ($generated@@172 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@577 $generated@@580)))) ($generated@@272 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@81 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@74 $generated@@577 ($generated@@172 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@153) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@271 $generated@@583) (and ($generated@@151 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@64) ($generated@@74 $generated@@581 ($generated@@152 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@74 $generated@@581 ($generated@@152 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@272 ($generated@@160 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@272 ($generated@@160 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@153) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@271 $generated@@587) (and ($generated@@151 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@64) ($generated@@74 $generated@@585 ($generated@@152 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@74 $generated@@585 ($generated@@152 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@272 ($generated@@161 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@272 ($generated@@161 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@162) (= (type $generated@@590) $generated@@162)) (= ($generated@@245 ($generated@@138 $generated@@589) ($generated@@138 $generated@@590)) ($generated@@138 ($generated@@245 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@245 ($generated@@138 $generated@@589) ($generated@@138 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@135 $generated@@591))) ($generated@@138 ($generated@@295 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@135 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@295 ($generated@@138 $generated@@592)) ($generated@@138 ($generated@@295 $generated@@592)))
 :pattern ( ($generated@@295 ($generated@@138 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@287 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@286 $generated@@594)) (= ($generated@@285 $generated@@593) 0)) (= $generated@@593 ($generated@@284 $generated@@594))))
 :pattern ( ($generated@@285 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@76 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@300 ($generated@@82 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@300 $generated@@595) ($generated ($generated@@81 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@300 ($generated@@82 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@2)) ($generated@@74 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@602) $generated@@3)) ($generated@@74 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@74 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@604) $generated@@4)) ($generated@@74 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@74 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) $generated@@460)) ($generated@@74 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@74 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@608) $generated@@162)) ($generated@@74 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@74 $generated@@608 $generated@@48 $generated@@607))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@609 Int) ($generated@@610 Int) ($generated@@611 Int) ) (!  (=> (or ($generated@@374 $generated@@609 $generated@@610 $generated@@611) (and (not (= 2 $generated@@132)) (and (> $generated@@610 0) (> $generated@@611 0)))) (and (=> (> $generated@@609 0) (and ($generated@@137 $generated@@609 $generated@@610) (=> ($generated@@133 $generated@@564 $generated@@609 $generated@@610) ($generated@@137 $generated@@609 $generated@@611)))) (= ($generated@@373 $generated@@609 $generated@@610 $generated@@611)  (and (and (> $generated@@609 0) ($generated@@133 $generated@@564 $generated@@609 $generated@@610)) ($generated@@133 $generated@@564 $generated@@609 $generated@@611)))))
 :pattern ( ($generated@@373 $generated@@609 $generated@@610 $generated@@611))
))))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@286 $generated@@162)) (= (type $generated@@613) $generated@@64)) (= ($generated@@149 $generated@@612 ($generated@@502 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@285 $generated@@612))) ($generated@@246 ($generated@@503 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@503 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@502 $generated@@613)))
)))
(assert  (and (forall (($generated@@617 T@U) ) (! (= (type ($generated@@615 $generated@@617)) $generated@@136)
 :pattern ( ($generated@@615 $generated@@617))
)) (= (type $generated@@616) $generated@@136)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ($generated@@620 Int) ) (!  (=> (= (type $generated@@618) $generated@@136) (= ($generated@@133 $generated@@618 $generated@@619 $generated@@620) ($generated@@133 $generated@@616 $generated@@619 $generated@@620)))
 :pattern ( ($generated@@133 ($generated@@615 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@286 $generated@@162)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@285 $generated@@622))) (< ($generated@@541 ($generated@@392 $generated@@153 ($generated@@503 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@541 ($generated@@392 $generated@@153 ($generated@@503 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@308 $generated@@162 $generated@@162)) (= (type $generated@@625) $generated@@64)) (= (type $generated@@626) $generated@@64)) ($generated@@149 $generated@@624 ($generated@@420 $generated@@625 $generated@@626))) (and (and ($generated@@149 ($generated@@306 $generated@@624) ($generated@@255 $generated@@625)) ($generated@@149 ($generated@@349 $generated@@624) ($generated@@255 $generated@@626))) ($generated@@149 ($generated@@391 $generated@@624) ($generated@@255 ($generated@@152 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@149 $generated@@624 ($generated@@420 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@628) $generated@@64)) (= (type $generated@@629) $generated@@64)) ($generated@@149 $generated@@627 ($generated@@428 $generated@@628 $generated@@629))) (and (and ($generated@@149 ($generated@@324 $generated@@627) ($generated@@260 $generated@@628)) ($generated@@149 ($generated@@360 $generated@@627) ($generated@@260 $generated@@629))) ($generated@@149 ($generated@@402 $generated@@627) ($generated@@260 ($generated@@152 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@149 $generated@@627 ($generated@@428 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@149 $generated@@630 $generated@@46))
 :pattern ( ($generated@@149 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@149 $generated@@631 $generated@@47))
 :pattern ( ($generated@@149 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@149 $generated@@632 $generated@@44))
 :pattern ( ($generated@@149 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@460) ($generated@@149 $generated@@633 $generated@@45))
 :pattern ( ($generated@@149 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@162) ($generated@@149 $generated@@634 $generated@@48))
 :pattern ( ($generated@@149 $generated@@634 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@635 Int) ($generated@@636 Int) ($generated@@637 Int) ) (!  (=> (or ($generated@@140 ($generated@@135 $generated@@635) ($generated@@135 $generated@@636) ($generated@@135 $generated@@637)) (and (not (= 0 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@635 0) (> $generated@@636 0))))))) (= ($generated@@139 ($generated@@135 $generated@@635) ($generated@@135 $generated@@636) ($generated@@135 $generated@@637)) (= ($generated@@135 ($generated@@267 ($generated@@135 $generated@@635) ($generated@@135 $generated@@636))) ($generated@@135 $generated@@637))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@135 $generated@@635) ($generated@@135 $generated@@636) ($generated@@135 $generated@@637)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@640) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@642) ($generated@@179 $generated@@77 $generated@@4))) (= (type $generated@@643) $generated@@77)) (= (type $generated@@644) ($generated@@179 $generated@@77 $generated@@4))) (= (type $generated@@645) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@647 true))
(let (($generated@@648  (=> (and (not (and (> $generated@@638 0) ($generated@@133 $generated@@564 $generated@@638 $generated@@639))) (= (ControlFlow 0 6) 2)) $generated@@647)))
(let (($generated@@649  (=> (and (and (> $generated@@638 0) ($generated@@133 $generated@@564 $generated@@638 $generated@@639)) (and ($generated@@74 ($generated@@8 $generated@@638) $generated@@46 $generated@@640) ($generated@@74 ($generated@@8 $generated@@641) $generated@@46 $generated@@640))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (> $generated@@638 0)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (> $generated@@641 0)) (=> (and (and (> $generated@@638 0) (> $generated@@641 0)) (and ($generated@@137 $generated@@638 $generated@@641) (= (ControlFlow 0 3) 2))) $generated@@647))))))
(let (($generated@@650  (=> (>= 0 $generated@@638) (and (=> (= (ControlFlow 0 10) 3) $generated@@649) (=> (= (ControlFlow 0 10) 6) $generated@@648)))))
(let (($generated@@651  (=> (> $generated@@638 0) (=> (and ($generated@@74 ($generated@@8 $generated@@638) $generated@@46 $generated@@640) ($generated@@74 ($generated@@8 $generated@@639) $generated@@46 $generated@@640)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (> $generated@@638 0)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (> $generated@@639 0)) (=> (and (and (> $generated@@638 0) (> $generated@@639 0)) ($generated@@137 $generated@@638 $generated@@639)) (and (=> (= (ControlFlow 0 7) 3) $generated@@649) (=> (= (ControlFlow 0 7) 6) $generated@@648)))))))))
(let (($generated@@652  (=> (= $generated@@642 ($generated@@233 $generated@@643 $generated@@640 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 7) $generated@@651) (=> (= (ControlFlow 0 11) 10) $generated@@650)))))
(let (($generated@@653 true))
(let (($generated@@654  (=> (= $generated@@644 ($generated@@178 $generated@@643 $generated@@640 $generated@@60 false)) (=> (and (and (= ($generated@@615 $generated@@564) $generated@@564) (= ($generated@@615 $generated@@645) $generated@@645)) (and (> $generated@@639 0) (> $generated@@641 0))) (and (=> (= (ControlFlow 0 12) 1) $generated@@653) (=> (= (ControlFlow 0 12) 11) $generated@@652))))))
(let (($generated@@655  (=> (and (and ($generated@@271 $generated@@640) ($generated@@646 $generated@@640)) (and (= 2 $generated@@132) (= (ControlFlow 0 13) 12))) $generated@@654)))
$generated@@655))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int Int) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (Int Int Int) Bool)
(declare-fun $generated@@140 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@267 (Int Int) Int)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@134 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(= (type ($generated@@138 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (and (not (= 1 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@145 0) (> $generated@@146 0)))))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@140 $generated@@147 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@139 $generated@@148 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@148 $generated@@145 $generated@@146))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
))))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@75 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@64) (= (type $generated@@157) $generated@@64)) (= (type $generated@@158) $generated@@153)) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 16) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@153)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@136) (or ($generated@@137 $generated@@168 $generated@@169) (and (not (= 1 $generated@@132)) (and (> $generated@@168 0) (> $generated@@169 0))))) (and (forall (($generated@@170 Int) ) (!  (=> (> $generated@@170 0) ($generated@@140 $generated@@170 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@170 $generated@@168 $generated@@169))
)) (= ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169) (exists (($generated@@171 Int) ) (!  (and (> $generated@@171 0) ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
)))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@64)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@176) $generated@@64)) ($generated@@149 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@149 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@77 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@179 $generated@@77 $generated@@4))
 :pattern ( ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@67 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@240) ($generated@@66 $generated@@4))) (= (type $generated@@242) $generated@@77)) (= (type $generated@@243) ($generated@@66 $generated@@244))) (= ($generated@@0 ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@153)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@162)) (= (type $generated@@252) $generated@@162)) (= ($generated@@149 ($generated@@245 $generated@@251 $generated@@252) ($generated@@152 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@149 ($generated@@245 $generated@@251 $generated@@252) ($generated@@152 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@153) (= (type $generated@@254) $generated@@153)) (= ($generated@@159 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@159 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@64)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@258) $generated@@64)) (= ($generated@@149 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@162) ($generated@@0 ($generated@@81 $generated@@257 $generated@@259))) ($generated@@246 $generated@@259 $generated@@258))
 :pattern ( ($generated@@81 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@149 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@149 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@162) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@149 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@135 $generated@@265) $generated@@265)
 :pattern ( ($generated@@135 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@138 $generated@@266) $generated@@266)
 :pattern ( ($generated@@138 $generated@@266))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@268 Int) ($generated@@269 Int) ($generated@@270 Int) ) (!  (=> (or ($generated@@140 $generated@@268 $generated@@269 $generated@@270) (and (not (= 0 $generated@@132)) (and (> $generated@@268 0) (> $generated@@269 0)))) (= ($generated@@139 $generated@@268 $generated@@269 $generated@@270) (= ($generated@@267 $generated@@268 $generated@@269) $generated@@270)))
 :pattern ( ($generated@@139 $generated@@268 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) $generated@@64)) (= (type $generated@@275) $generated@@162)) (= (type $generated@@276) $generated@@162)) (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@271 $generated@@277)) (= ($generated@@74 ($generated@@245 $generated@@275 $generated@@276) ($generated@@152 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@74 ($generated@@245 $generated@@275 $generated@@276) ($generated@@152 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@68)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@153) (= ($generated@@151 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@153) ($generated@@151 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@162) (= (type $generated@@283) $generated@@162)) (= $generated@@281 ($generated@@245 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@151 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 18)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 Int) ($generated@@294 Int) ) (!  (=> (= (type $generated@@292) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@292) $generated@@293 $generated@@294) ($generated@@133 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@162)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@64) (= (type $generated@@299) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@272 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@74 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@272 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@76 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@81 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 20)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@79 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@76 $generated@@343 $generated@@2)) (= ($generated@@173 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@81 $generated@@342 $generated@@344))) (<= ($generated ($generated@@81 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@173 $generated@@342))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@310 (type $generated@@345))))
(let (($generated@@347 ($generated@@309 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@308 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@307 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@306 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@310 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@76 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(let (($generated@@354 ($generated@@309 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@308 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@307 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@328 (type $generated@@356))))
(let (($generated@@358 ($generated@@327 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@326 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@325 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@324 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@328 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@76 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@328 (type $generated@@363))))
(let (($generated@@365 ($generated@@327 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@326 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@325 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@368) $generated@@64)) (= ($generated@@149 $generated@@367 ($generated@@172 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@367 $generated@@369)))) ($generated@@246 $generated@@369 $generated@@368))
 :pattern ( ($generated@@81 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@149 $generated@@367 ($generated@@172 $generated@@368)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@370 Int) ($generated@@371 Int) ($generated@@372 Int) ) (!  (=> (or ($generated@@140 $generated@@370 $generated@@371 $generated@@372) (and (not (= 0 $generated@@132)) (and (> $generated@@370 0) (> $generated@@371 0)))) true)
 :pattern ( ($generated@@139 $generated@@370 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@255 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@162) ($generated@@0 ($generated@@81 $generated@@373 $generated@@376))) ($generated@@272 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@81 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@255 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@260 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@162) ($generated@@0 ($generated@@81 $generated@@377 $generated@@380))) ($generated@@272 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@81 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@260 $generated@@378) $generated@@379))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@381 T@U) ($generated@@382 Int) ($generated@@383 Int) ) (!  (=> (and (= (type $generated@@381) $generated@@136) (or ($generated@@137 $generated@@382 $generated@@383) (and (not (= 1 $generated@@132)) (and (> $generated@@382 0) (> $generated@@383 0))))) true)
 :pattern ( ($generated@@133 $generated@@381 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@81 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@81 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@310 (type $generated@@392))))
(let (($generated@@394 ($generated@@309 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@76 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@308 $generated@@162 $generated@@162)) (= (type $generated@@396) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@395) ($generated@@160 ($generated@@387 $generated@@153 $generated@@396)))) (= ($generated@@81 ($generated@@388 $generated@@395) ($generated@@160 ($generated@@387 $generated@@153 $generated@@396))) ($generated@@161 ($generated@@387 $generated@@153 $generated@@396))))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@328 (type $generated@@400))))
(let (($generated@@402 ($generated@@327 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@76 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@404) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@403) ($generated@@160 ($generated@@387 $generated@@153 $generated@@404)))) (= ($generated@@81 ($generated@@398 $generated@@403) ($generated@@160 ($generated@@387 $generated@@153 $generated@@404))) ($generated@@161 ($generated@@387 $generated@@153 $generated@@404))))))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@309 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@308 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@81 ($generated@@349 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@81 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@327 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@326 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@81 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@308 $generated@@162 $generated@@162)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@418) $generated@@422))) (and ($generated@@272 ($generated@@81 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@272 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@426) $generated@@430))) (and ($generated@@272 ($generated@@81 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@272 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@76 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@328 (type $generated@@433))))
(let (($generated@@435 ($generated@@327 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@326 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@325 $generated@@435 $generated@@434)) (= ($generated@@324 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@324 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@328 (type $generated@@436))))
(let (($generated@@438 ($generated@@327 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@326 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@325 $generated@@438 $generated@@437)) (= ($generated@@360 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@360 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@328 (type $generated@@439))))
(let (($generated@@441 ($generated@@327 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@326 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@325 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@162))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@310 (type $generated@@442))))
(let (($generated@@444 ($generated@@309 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@308 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@307 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@162) (= (type $generated@@446) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@442) ($generated@@295 ($generated@@245 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@386 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@328 (type $generated@@447))))
(let (($generated@@449 ($generated@@327 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@326 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@325 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@162) (= (type $generated@@451) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@397 $generated@@447) ($generated@@295 ($generated@@245 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@162) ($generated@@246 $generated@@452 $generated@@46)) (and (= ($generated@@295 ($generated@@387 $generated@@2 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@387 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@162) ($generated@@246 $generated@@453 $generated@@47)) (and (= ($generated@@295 ($generated@@387 $generated@@3 $generated@@453)) $generated@@453) ($generated@@149 ($generated@@387 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@162) ($generated@@246 $generated@@454 $generated@@44)) (and (= ($generated@@295 ($generated@@387 $generated@@4 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@387 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 21))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@162) ($generated@@246 $generated@@456 $generated@@45)) (and (= ($generated@@295 ($generated@@387 $generated@@455 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@387 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@64) (= ($generated@@246 ($generated@@295 $generated@@457) $generated@@458) ($generated@@149 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@246 ($generated@@295 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@79 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@76 $generated@@460 $generated@@2)) (<= 0 ($generated@@300 $generated@@459))))
 :pattern ( ($generated@@300 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@287 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@286 $generated@@462)) (<= 0 ($generated@@285 $generated@@461))))
 :pattern ( ($generated@@285 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@415 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@415 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@415 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@415 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@72 ($generated@@415 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@423 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@423 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@423 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@423 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@72 ($generated@@423 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@162) (= (type $generated@@484) $generated@@162)) (= ($generated@@278 ($generated@@245 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@152 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@152 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@152 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@152 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@162) (= (type $generated@@494) $generated@@162)) (= ($generated@@160 ($generated@@245 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@245 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@162) (= (type $generated@@496) $generated@@162)) (= ($generated@@161 ($generated@@245 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@245 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@287 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@286 $generated@@162)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@285 $generated@@503))) ($generated@@272 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@74 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@75 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@75 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@255 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@255 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@255 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@260 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@260 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@172 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@172 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@172 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@72 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@387 $generated@@526 ($generated@@295 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@295 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@308 $generated@@162 $generated@@162)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) (= ($generated@@149 $generated@@527 ($generated@@415 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@527) $generated@@530))) (and ($generated@@246 ($generated@@81 ($generated@@388 $generated@@527) $generated@@530) $generated@@529) ($generated@@246 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@527) $generated@@530))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@149 $generated@@527 ($generated@@415 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) (= ($generated@@149 $generated@@531 ($generated@@423 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@531) $generated@@534))) (and ($generated@@246 ($generated@@81 ($generated@@398 $generated@@531) $generated@@534) $generated@@533) ($generated@@246 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@531) $generated@@534))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@149 $generated@@531 ($generated@@423 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@162) (= (type $generated@@538) $generated@@162)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@245 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@245 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@162) (= (type $generated@@540) $generated@@162)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@245 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@245 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@162) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) ($generated@@246 $generated@@541 ($generated@@415 $generated@@542 $generated@@543))) (and (= ($generated@@295 ($generated@@387 ($generated@@308 $generated@@162 $generated@@162) $generated@@541)) $generated@@541) ($generated@@149 ($generated@@387 ($generated@@308 $generated@@162 $generated@@162) $generated@@541) ($generated@@415 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@246 $generated@@541 ($generated@@415 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@162) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) ($generated@@246 $generated@@544 ($generated@@423 $generated@@545 $generated@@546))) (and (= ($generated@@295 ($generated@@387 ($generated@@326 $generated@@162 $generated@@162) $generated@@544)) $generated@@544) ($generated@@149 ($generated@@387 ($generated@@326 $generated@@162 $generated@@162) $generated@@544) ($generated@@423 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@246 $generated@@544 ($generated@@423 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) $generated@@162)) ($generated@@246 $generated@@549 ($generated@@152 $generated@@547 $generated@@548))) (and (= ($generated@@295 ($generated@@387 $generated@@153 $generated@@549)) $generated@@549) ($generated@@149 ($generated@@387 $generated@@153 $generated@@549) ($generated@@152 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@246 $generated@@549 ($generated@@152 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@81 ($generated@@431 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@81 ($generated@@431 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@69)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (and (= ($generated@@72 ($generated@@152 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@152 $generated@@554 $generated@@555)) $generated@@63)))
 :pattern ( ($generated@@152 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 Int) ($generated@@557 Int) ) (! (= ($generated@@267 $generated@@556 $generated@@557) (* $generated@@556 $generated@@557))
 :pattern ( ($generated@@267 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@153) (= ($generated@@535 ($generated@@295 $generated@@558)) ($generated@@536 $generated@@558)))
 :pattern ( ($generated@@535 ($generated@@295 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@162) ($generated@@246 $generated@@559 ($generated@@75 0))) (and (= ($generated@@295 ($generated@@387 $generated@@2 $generated@@559)) $generated@@559) ($generated@@149 ($generated@@387 ($generated@@76 $generated@@162 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@246 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@162) (= (type $generated@@561) $generated@@64)) ($generated@@246 $generated@@560 ($generated@@255 $generated@@561))) (and (= ($generated@@295 ($generated@@387 ($generated@@76 $generated@@162 $generated@@4) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@387 ($generated@@76 $generated@@162 $generated@@4) $generated@@560) ($generated@@255 $generated@@561))))
 :pattern ( ($generated@@246 $generated@@560 ($generated@@255 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@162) (= (type $generated@@563) $generated@@64)) ($generated@@246 $generated@@562 ($generated@@260 $generated@@563))) (and (= ($generated@@295 ($generated@@387 ($generated@@76 $generated@@162 $generated@@4) $generated@@562)) $generated@@562) ($generated@@149 ($generated@@387 ($generated@@76 $generated@@162 $generated@@4) $generated@@562) ($generated@@260 $generated@@563))))
 :pattern ( ($generated@@246 $generated@@562 ($generated@@260 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@162) (= (type $generated@@565) $generated@@64)) ($generated@@246 $generated@@564 ($generated@@172 $generated@@565))) (and (= ($generated@@295 ($generated@@387 ($generated@@76 $generated@@162 $generated@@2) $generated@@564)) $generated@@564) ($generated@@149 ($generated@@387 ($generated@@76 $generated@@162 $generated@@2) $generated@@564) ($generated@@172 $generated@@565))))
 :pattern ( ($generated@@246 $generated@@564 ($generated@@172 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@162) (= (type $generated@@567) $generated@@64)) ($generated@@246 $generated@@566 ($generated@@497 $generated@@567))) (and (= ($generated@@295 ($generated@@387 ($generated@@286 $generated@@162) $generated@@566)) $generated@@566) ($generated@@149 ($generated@@387 ($generated@@286 $generated@@162) $generated@@566) ($generated@@497 $generated@@567))))
 :pattern ( ($generated@@246 $generated@@566 ($generated@@497 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@568 ($generated@@172 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@568 $generated@@571)))) ($generated@@272 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@81 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@172 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@153) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@271 $generated@@574) (and ($generated@@151 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@152 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@152 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@272 ($generated@@160 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@272 ($generated@@160 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@153) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@271 $generated@@578) (and ($generated@@151 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@74 $generated@@576 ($generated@@152 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@74 $generated@@576 ($generated@@152 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@272 ($generated@@161 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@272 ($generated@@161 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@162) (= (type $generated@@581) $generated@@162)) (= ($generated@@245 ($generated@@138 $generated@@580) ($generated@@138 $generated@@581)) ($generated@@138 ($generated@@245 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@245 ($generated@@138 $generated@@580) ($generated@@138 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@135 $generated@@582))) ($generated@@138 ($generated@@295 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@135 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@295 ($generated@@138 $generated@@583)) ($generated@@138 ($generated@@295 $generated@@583)))
 :pattern ( ($generated@@295 ($generated@@138 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@287 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@286 $generated@@585)) (= ($generated@@285 $generated@@584) 0)) (= $generated@@584 ($generated@@284 $generated@@585))))
 :pattern ( ($generated@@285 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@300 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@300 $generated@@586) ($generated ($generated@@81 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@300 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@2)) ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@3)) ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@4)) ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@455)) ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@162)) ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@286 $generated@@162)) (= (type $generated@@601) $generated@@64)) (= ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@285 $generated@@600))) ($generated@@246 ($generated@@498 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@498 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@497 $generated@@601)))
)))
(assert  (and (forall (($generated@@605 T@U) ) (! (= (type ($generated@@603 $generated@@605)) $generated@@136)
 :pattern ( ($generated@@603 $generated@@605))
)) (= (type $generated@@604) $generated@@136)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ($generated@@608 Int) ) (!  (=> (= (type $generated@@606) $generated@@136) (= ($generated@@133 $generated@@606 $generated@@607 $generated@@608) ($generated@@133 $generated@@604 $generated@@607 $generated@@608)))
 :pattern ( ($generated@@133 ($generated@@603 $generated@@606) $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@286 $generated@@162)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@285 $generated@@610))) (< ($generated@@536 ($generated@@387 $generated@@153 ($generated@@498 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@536 ($generated@@387 $generated@@153 ($generated@@498 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@308 $generated@@162 $generated@@162)) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@149 $generated@@612 ($generated@@415 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@306 $generated@@612) ($generated@@255 $generated@@613)) ($generated@@149 ($generated@@349 $generated@@612) ($generated@@255 $generated@@614))) ($generated@@149 ($generated@@386 $generated@@612) ($generated@@255 ($generated@@152 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@415 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@149 $generated@@615 ($generated@@423 $generated@@616 $generated@@617))) (and (and ($generated@@149 ($generated@@324 $generated@@615) ($generated@@260 $generated@@616)) ($generated@@149 ($generated@@360 $generated@@615) ($generated@@260 $generated@@617))) ($generated@@149 ($generated@@397 $generated@@615) ($generated@@260 ($generated@@152 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@423 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@149 $generated@@618 $generated@@46))
 :pattern ( ($generated@@149 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@149 $generated@@619 $generated@@47))
 :pattern ( ($generated@@149 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@149 $generated@@620 $generated@@44))
 :pattern ( ($generated@@149 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@455) ($generated@@149 $generated@@621 $generated@@45))
 :pattern ( ($generated@@149 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@162) ($generated@@149 $generated@@622 $generated@@48))
 :pattern ( ($generated@@149 $generated@@622 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@623 Int) ($generated@@624 Int) ($generated@@625 Int) ) (!  (=> (or ($generated@@140 ($generated@@135 $generated@@623) ($generated@@135 $generated@@624) ($generated@@135 $generated@@625)) (and (not (= 0 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@623 0) (> $generated@@624 0))))))) (= ($generated@@139 ($generated@@135 $generated@@623) ($generated@@135 $generated@@624) ($generated@@135 $generated@@625)) (= ($generated@@135 ($generated@@267 ($generated@@135 $generated@@623) ($generated@@135 $generated@@624))) ($generated@@135 $generated@@625))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@135 $generated@@623) ($generated@@135 $generated@@624) ($generated@@135 $generated@@625)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@630) ($generated@@179 $generated@@77 $generated@@4))) (= (type $generated@@631) $generated@@77)) (= (type $generated@@632) ($generated@@179 $generated@@77 $generated@@4))) (= (type $generated@@633) $generated@@136)) (= (type $generated@@634) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@636 true))
(let (($generated@@637  (=> (and (>= 0 $generated@@626) (= (ControlFlow 0 7) 3)) $generated@@636)))
(let (($generated@@638  (=> (and (and (> $generated@@626 0) ($generated@@74 ($generated@@8 $generated@@626) $generated@@46 $generated@@627)) (and ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@627) ($generated@@74 ($generated@@8 $generated@@629) $generated@@46 $generated@@627))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (> $generated@@626 0)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (> $generated@@628 0)) (=> (and (and (> $generated@@626 0) (> $generated@@628 0)) (and ($generated@@140 $generated@@626 $generated@@628 $generated@@629) (= (ControlFlow 0 4) 3))) $generated@@636))))))
(let (($generated@@639  (and (=> (= (ControlFlow 0 8) 4) $generated@@638) (=> (= (ControlFlow 0 8) 7) $generated@@637))))
(let (($generated@@640 true))
(let (($generated@@641  (=> (= $generated@@630 ($generated@@233 $generated@@631 $generated@@627 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@639) (=> (= (ControlFlow 0 9) 2) $generated@@640)))))
(let (($generated@@642 true))
(let (($generated@@643  (=> (= $generated@@632 ($generated@@178 $generated@@631 $generated@@627 $generated@@60 false)) (=> (and (and (= ($generated@@603 $generated@@633) $generated@@633) (= ($generated@@603 $generated@@634) $generated@@634)) (and (> $generated@@628 0) (> $generated@@629 0))) (and (=> (= (ControlFlow 0 10) 1) $generated@@642) (=> (= (ControlFlow 0 10) 9) $generated@@641))))))
(let (($generated@@644  (=> (and (and ($generated@@271 $generated@@627) ($generated@@635 $generated@@627)) (and (= 1 $generated@@132) (= (ControlFlow 0 11) 10))) $generated@@643)))
$generated@@644))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (Int Int Int) Bool)
(declare-fun $generated@@277 (Int Int Int) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@308 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U Int) T@U)
(declare-fun $generated@@357 (T@U) Int)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@404 () T@T)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@278 Int) ($generated@@279 Int) ($generated@@280 Int) ) (!  (=> (or ($generated@@277 $generated@@278 $generated@@279 $generated@@280) (and (not (= 2 $generated@@127)) (and (> $generated@@279 0) (> $generated@@280 0)))) true)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279 $generated@@280))
))))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@283) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@224) ($generated@@0 ($generated@@76 $generated@@283 $generated@@286))) ($generated@@222 $generated@@286 $generated@@284 $generated@@285))
 :pattern ( ($generated@@76 $generated@@283 $generated@@286))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@61)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@289) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@287 $generated@@290) $generated@@291) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@224) ($generated@@0 ($generated@@76 $generated@@289 $generated@@292))) ($generated@@222 $generated@@292 $generated@@290 $generated@@291))
 :pattern ( ($generated@@76 $generated@@289 $generated@@292))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@287 $generated@@290) $generated@@291))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 Int) ) (!  (=> (and (= (type $generated@@293) $generated@@131) (or ($generated@@132 $generated@@294 $generated@@295) (and (not (= 1 $generated@@127)) (and (> $generated@@294 0) (> $generated@@295 0))))) true)
 :pattern ( ($generated@@128 $generated@@293 $generated@@294 $generated@@295))
))))
(assert  (and (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (! (= (type ($generated@@296 $generated@@298 $generated@@299)) $generated@@61)
 :pattern ( ($generated@@296 $generated@@298 $generated@@299))
)) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@233 (type $generated@@300))))
(let (($generated@@302 ($generated@@232 (type $generated@@300))))
(= (type ($generated@@297 $generated@@300)) ($generated@@71 $generated@@302 $generated@@301))))
 :pattern ( ($generated@@297 $generated@@300))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@303) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@304) $generated@@61)) (= (type $generated@@305) $generated@@61)) (= (type $generated@@306) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@303 ($generated@@296 $generated@@304 $generated@@305) $generated@@306) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@303) $generated@@307))) (and ($generated@@222 ($generated@@76 ($generated@@297 $generated@@303) $generated@@307) $generated@@305 $generated@@306) ($generated@@222 $generated@@307 $generated@@304 $generated@@306)))
 :pattern ( ($generated@@76 ($generated@@297 $generated@@303) $generated@@307))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@303) $generated@@307))
))))
 :pattern ( ($generated@@69 $generated@@303 ($generated@@296 $generated@@304 $generated@@305) $generated@@306))
)))
(assert  (and (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (= (type ($generated@@308 $generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@308 $generated@@310 $generated@@311))
)) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@251 (type $generated@@312))))
(let (($generated@@314 ($generated@@250 (type $generated@@312))))
(= (type ($generated@@309 $generated@@312)) ($generated@@71 $generated@@314 $generated@@313))))
 :pattern ( ($generated@@309 $generated@@312))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (= (type $generated@@315) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@316) $generated@@61)) (= (type $generated@@317) $generated@@61)) (= (type $generated@@318) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@315 ($generated@@308 $generated@@316 $generated@@317) $generated@@318) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@315) $generated@@319))) (and ($generated@@222 ($generated@@76 ($generated@@309 $generated@@315) $generated@@319) $generated@@317 $generated@@318) ($generated@@222 $generated@@319 $generated@@316 $generated@@318)))
 :pattern ( ($generated@@76 ($generated@@309 $generated@@315) $generated@@319))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@315) $generated@@319))
))))
 :pattern ( ($generated@@69 $generated@@315 ($generated@@308 $generated@@316 $generated@@317) $generated@@318))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@71 $generated@@321 $generated@@4))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@251 (type $generated@@322))))
(let (($generated@@324 ($generated@@250 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@249 $generated@@324 $generated@@323)) (= (= $generated@@322 ($generated@@248 $generated@@324 $generated@@323)) (= ($generated@@247 $generated@@322) ($generated@@320 $generated@@324))))))
 :pattern ( ($generated@@247 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@214 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@213 $generated@@326)) (<= 0 ($generated@@212 $generated@@325))))
 :pattern ( ($generated@@212 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@296 $generated@@329 $generated@@330)) $generated@@329))
 :pattern ( ($generated@@296 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@61) (= (type $generated@@334) $generated@@61)) (= ($generated@@331 ($generated@@296 $generated@@333 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@296 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@67 ($generated@@296 $generated@@335 $generated@@336)) $generated@@58))
 :pattern ( ($generated@@296 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@308 $generated@@339 $generated@@340)) $generated@@339))
 :pattern ( ($generated@@308 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@61) (= (type $generated@@344) $generated@@61)) (= ($generated@@341 ($generated@@308 $generated@@343 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@308 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@61) (= (type $generated@@346) $generated@@61)) (= ($generated@@67 ($generated@@308 $generated@@345 $generated@@346)) $generated@@59))
 :pattern ( ($generated@@308 $generated@@345 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ($generated@@351 Int) ) (! (let (($generated@@352 ($generated@@214 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350 $generated@@351)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@213 $generated@@224)) (= (type $generated@@354) $generated@@61)) (= (type $generated@@355) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@353 ($generated@@347 $generated@@354) $generated@@355) (forall (($generated@@356 Int) ) (!  (=> (and (<= 0 $generated@@356) (< $generated@@356 ($generated@@212 $generated@@353))) ($generated@@222 ($generated@@348 $generated@@353 $generated@@356) $generated@@354 $generated@@355))
 :pattern ( ($generated@@348 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@69 $generated@@353 ($generated@@347 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@358 Int) ) (! (= ($generated@@357 ($generated@@70 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@70 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@281 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@281 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@281 $generated@@362)) $generated@@54))
 :pattern ( ($generated@@281 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (= (type ($generated@@363 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@61) (= ($generated@@363 ($generated@@287 $generated@@365)) $generated@@365))
 :pattern ( ($generated@@287 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@67 ($generated@@287 $generated@@366)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@368 ($generated@@367 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@367 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@367 $generated@@372)) $generated@@56))
 :pattern ( ($generated@@367 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@61)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@61) (= ($generated@@373 ($generated@@347 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@347 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@376)) $generated@@57))
 :pattern ( ($generated@@347 $generated@@376))
)))
(assert (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated@@377 $generated@@381 ($generated@@223 $generated@@380)) $generated@@380))
 :pattern ( ($generated@@223 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
 (not ($generated@@0 ($generated@@76 ($generated@@320 $generated@@383) $generated@@382))))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@76 ($generated@@320 $generated@@383) $generated@@382)))
)))
(assert (forall (($generated@@384 Int) ($generated@@385 Int) ) (! (= ($generated@@207 $generated@@384 $generated@@385) (* $generated@@384 $generated@@385))
 :pattern ( ($generated@@207 $generated@@384 $generated@@385))
)))
(assert (= (type $generated@@386) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@387 Int) ($generated@@388 Int) ($generated@@389 Int) ) (!  (=> (or ($generated@@277 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388) ($generated@@130 $generated@@389)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@388 0) (> $generated@@389 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@387 0)))) (and ($generated@@132 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388)) (=> ($generated@@128 $generated@@386 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388)) ($generated@@132 ($generated@@130 $generated@@387) ($generated@@130 $generated@@389))))) (= ($generated@@276 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388) ($generated@@130 $generated@@389))  (and (and (> $generated@@387 0) ($generated@@128 $generated@@386 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388))) ($generated@@128 $generated@@386 ($generated@@130 $generated@@387) ($generated@@130 $generated@@389))))))
 :weight 3
 :pattern ( ($generated@@276 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388) ($generated@@130 $generated@@389)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@391) $generated@@61)) (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@390 ($generated@@367 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@390 $generated@@393)))) ($generated@@222 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@76 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@69 $generated@@390 ($generated@@367 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@394))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@394))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@394))))
)))
(assert (forall (($generated@@395 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@395)) ($generated@@133 ($generated@@223 $generated@@395)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@395)))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@214 (type $generated@@396))))
 (=> (and (= (type $generated@@396) ($generated@@213 $generated@@397)) (= ($generated@@212 $generated@@396) 0)) (= $generated@@396 ($generated@@211 $generated@@397))))
 :pattern ( ($generated@@212 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@2)) ($generated@@69 $generated@@399 $generated@@46 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@46 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@401) $generated@@3)) ($generated@@69 $generated@@401 $generated@@47 $generated@@400))
 :pattern ( ($generated@@69 $generated@@401 $generated@@47 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@4)) ($generated@@69 $generated@@403 $generated@@44 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@44 $generated@@402))
)))
(assert (= ($generated@@1 $generated@@404) 18))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@406) $generated@@404)) ($generated@@69 $generated@@406 $generated@@45 $generated@@405))
 :pattern ( ($generated@@69 $generated@@406 $generated@@45 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@408) $generated@@224)) ($generated@@69 $generated@@408 $generated@@48 $generated@@407))
 :pattern ( ($generated@@69 $generated@@408 $generated@@48 $generated@@407))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@409 Int) ($generated@@410 Int) ($generated@@411 Int) ) (!  (=> (or ($generated@@277 $generated@@409 $generated@@410 $generated@@411) (and (not (= 2 $generated@@127)) (and (> $generated@@410 0) (> $generated@@411 0)))) (and (=> (> $generated@@409 0) (and ($generated@@132 $generated@@409 $generated@@410) (=> ($generated@@128 $generated@@386 $generated@@409 $generated@@410) ($generated@@132 $generated@@409 $generated@@411)))) (= ($generated@@276 $generated@@409 $generated@@410 $generated@@411)  (and (and (> $generated@@409 0) ($generated@@128 $generated@@386 $generated@@409 $generated@@410)) ($generated@@128 $generated@@386 $generated@@409 $generated@@411)))))
 :pattern ( ($generated@@276 $generated@@409 $generated@@410 $generated@@411))
))))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) $generated@@131)
 :pattern ( ($generated@@412 $generated@@414))
)) (= (type $generated@@413) $generated@@131)))
(assert (forall (($generated@@415 T@U) ($generated@@416 Int) ($generated@@417 Int) ) (!  (=> (= (type $generated@@415) $generated@@131) (= ($generated@@128 $generated@@415 $generated@@416 $generated@@417) ($generated@@128 $generated@@413 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@128 ($generated@@412 $generated@@415) $generated@@416 $generated@@417))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@418 Int) ($generated@@419 Int) ($generated@@420 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@418) ($generated@@130 $generated@@419) ($generated@@130 $generated@@420)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@418 0) (> $generated@@419 0))))))) (= ($generated@@134 ($generated@@130 $generated@@418) ($generated@@130 $generated@@419) ($generated@@130 $generated@@420)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@418) ($generated@@130 $generated@@419))) ($generated@@130 $generated@@420))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@418) ($generated@@130 $generated@@419) ($generated@@130 $generated@@420)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@421 () Int)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Int)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () T@U)
(declare-fun $generated@@426 () T@U)
(declare-fun $generated@@427 () T@U)
(declare-fun $generated@@428 () T@U)
(declare-fun $generated@@429 () T@U)
(declare-fun $generated@@430 (T@U) Bool)
(declare-fun $generated@@431 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@426) $generated@@131)) (= (type $generated@@427) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@428) $generated@@72)) (= (type $generated@@429) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@432 true))
(let (($generated@@433  (=> (and (=> ($generated@@276 $generated@@421 $generated@@422 $generated@@423) (<= $generated@@421 $generated@@424)) (= (ControlFlow 0 5) 1)) $generated@@432)))
(let (($generated@@434  (=> ($generated@@69 ($generated@@8 $generated@@421) $generated@@46 $generated@@425) (=> (and ($generated@@69 ($generated@@8 $generated@@422) $generated@@46 $generated@@425) ($generated@@69 ($generated@@8 $generated@@423) $generated@@46 $generated@@425)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@422 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@423 0)) (=> (and (> $generated@@422 0) (> $generated@@423 0)) (=> (and (and ($generated@@277 $generated@@421 $generated@@422 $generated@@423) ($generated@@276 $generated@@421 $generated@@422 $generated@@423)) (and (<= $generated@@421 $generated@@424) (= (ControlFlow 0 2) 1))) $generated@@432))))))))
(let (($generated@@435  (=> (= ($generated@@412 $generated@@386) $generated@@386) (=> (and (= ($generated@@412 $generated@@426) $generated@@426) (= $generated@@427 ($generated@@150 $generated@@428 $generated@@429 $generated@@60 false))) (=> (and (and (and (> $generated@@422 0) (> $generated@@423 0)) (and ($generated@@430 $generated@@425) ($generated@@431 $generated@@425))) (and (and (= $generated@@429 $generated@@425) ($generated@@69 ($generated@@8 $generated@@424) $generated@@46 $generated@@425)) (and ($generated@@69 ($generated@@8 $generated@@422) $generated@@46 $generated@@425) ($generated@@69 ($generated@@8 $generated@@423) $generated@@46 $generated@@425)))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (> $generated@@422 0)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (> $generated@@423 0)) (=> (and (and (> $generated@@422 0) (> $generated@@423 0)) (and ($generated@@277 $generated@@424 $generated@@422 $generated@@423) ($generated@@276 $generated@@424 $generated@@422 $generated@@423))) (and (=> (= (ControlFlow 0 6) 2) $generated@@434) (=> (= (ControlFlow 0 6) 5) $generated@@433))))))))))
(let (($generated@@436  (=> (and (and ($generated@@430 $generated@@429) ($generated@@431 $generated@@429)) (and (= 4 $generated@@127) (= (ControlFlow 0 9) 6))) $generated@@435)))
$generated@@436))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U Int Int) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (Int Int) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (Int Int Int) Bool)
(declare-fun $generated@@52 (Int Int Int) Bool)
(declare-fun $generated@@66 (T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@181 (Int Int) Int)
(declare-fun $generated@@191 (Int Int Int) Bool)
(declare-fun $generated@@192 (Int Int Int) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@T T@U) T@U)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (= ($generated@@1 $generated@@48) 6) (forall (($generated@@53 T@U) ) (! (= (type ($generated@@46 $generated@@53)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@53))
))) (forall (($generated@@54 T@U) ) (! (let (($generated@@55 (type $generated@@54)))
(= (type ($generated@@50 $generated@@54)) $generated@@55))
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@56 T@U) ($generated@@57 Int) ($generated@@58 Int) ) (!  (=> (and (= (type $generated@@56) $generated@@48) (or ($generated@@49 ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)) (and (not (= 1 $generated@@44)) ($generated@@0 ($generated@@50 ($generated@@11  (and (> $generated@@57 0) (> $generated@@58 0)))))))) (and (forall (($generated@@59 Int) ) (!  (=> (> $generated@@59 0) ($generated@@52 $generated@@59 ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)))
 :pattern ( ($generated@@51 $generated@@59 $generated@@57 $generated@@58))
)) (= ($generated@@45 ($generated@@46 $generated@@56) ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)) (exists (($generated@@60 Int) ) (!  (and (> $generated@@60 0) ($generated@@51 $generated@@60 ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)))
 :pattern ( ($generated@@51 $generated@@60 $generated@@57 $generated@@58))
)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@46 $generated@@56) ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@61 T@U) ($generated@@62 Int) ($generated@@63 Int) ) (!  (=> (and (= (type $generated@@61) $generated@@48) (or ($generated@@49 $generated@@62 $generated@@63) (and (not (= 1 $generated@@44)) (and (> $generated@@62 0) (> $generated@@63 0))))) (and (forall (($generated@@64 Int) ) (!  (=> (> $generated@@64 0) ($generated@@52 $generated@@64 $generated@@62 $generated@@63))
 :pattern ( ($generated@@51 $generated@@64 $generated@@62 $generated@@63))
)) (= ($generated@@45 ($generated@@46 $generated@@61) $generated@@62 $generated@@63) (exists (($generated@@65 Int) ) (!  (and (> $generated@@65 0) ($generated@@51 $generated@@65 $generated@@62 $generated@@63))
 :pattern ( ($generated@@51 $generated@@65 $generated@@62 $generated@@63))
)))))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@61) $generated@@62 $generated@@63))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@83 $generated@@84)) 7)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@75 ($generated@@70 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@70 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@76 ($generated@@70 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@70 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@76 (type $generated@@89))))
(= (type ($generated@@74 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@74 $generated@@89 $generated@@90))
))) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 (type $generated@@94)))
(let (($generated@@96 (type $generated@@93)))
(= (type ($generated@@77 $generated@@92 $generated@@93 $generated@@94)) ($generated@@70 $generated@@96 $generated@@95))))
 :pattern ( ($generated@@77 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@76 (type $generated@@97))))
 (=> (= (type $generated@@99) $generated@@100) (= ($generated@@74 ($generated@@77 $generated@@97 $generated@@98 $generated@@99) $generated@@98) $generated@@99)))
 :weight 0
))) (and (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@103 $generated@@104) (= ($generated@@74 ($generated@@77 $generated@@102 $generated@@103 $generated@@101) $generated@@104) ($generated@@74 $generated@@102 $generated@@104)))
 :weight 0
)) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or true (= ($generated@@74 ($generated@@77 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@74 $generated@@106 $generated@@108)))
 :weight 0
)))) (forall (($generated@@109 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@109)) 8))) (forall (($generated@@110 T@T) ) (! (= ($generated@@68 ($generated@@72 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@72 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@68 (type $generated@@112))))
(= (type ($generated@@73 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@73 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@71) 9)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@78 $generated@@114 $generated@@115 $generated@@116)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@68 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@73 ($generated@@78 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@73 ($generated@@78 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@73 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@73 ($generated@@78 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@73 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@69) 10)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@129 $generated@@130)) 11))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@80 ($generated@@79 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@79 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@81 ($generated@@79 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@79 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@81 (type $generated@@135))))
(= (type ($generated@@66 $generated@@135 $generated@@136 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@66 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(let (($generated@@144 (type $generated@@140)))
(= (type ($generated@@82 $generated@@139 $generated@@140 $generated@@141 $generated@@142)) ($generated@@79 $generated@@144 $generated@@143))))
 :pattern ( ($generated@@82 $generated@@139 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@81 (type $generated@@145))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@66 ($generated@@82 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@146 $generated@@147) $generated@@148)))
 :weight 0
))) (and (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@66 ($generated@@82 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@66 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@66 ($generated@@82 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@66 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
))) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or true (= ($generated@@66 ($generated@@82 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@66 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)))) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ) (! (= (type ($generated@@67 $generated@@168 $generated@@169 $generated@@170 $generated@@171)) ($generated@@79 $generated@@69 $generated@@4))
 :pattern ( ($generated@@67 $generated@@168 $generated@@169 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@68 (type $generated@@177))))
 (=> (and (and (and (and (= (type $generated@@172) $generated@@69) (= (type $generated@@173) ($generated@@70 $generated@@69 $generated@@71))) (= (type $generated@@174) ($generated@@72 $generated@@4))) (= (type $generated@@176) $generated@@69)) (= (type $generated@@177) ($generated@@72 $generated@@178))) (= ($generated@@0 ($generated@@66 ($generated@@67 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (not (= $generated@@176 $generated@@172)) ($generated@@0 ($generated@@73 ($generated@@74 $generated@@173 $generated@@176) $generated@@174))) $generated@@175))))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@47 $generated@@179) $generated@@179)
 :pattern ( ($generated@@47 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@50 $generated@@180) $generated@@180)
 :pattern ( ($generated@@50 $generated@@180))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@182 Int) ($generated@@183 Int) ($generated@@184 Int) ) (!  (=> (or ($generated@@52 $generated@@182 $generated@@183 $generated@@184) (and (not (= 0 $generated@@44)) (and (> $generated@@182 0) (> $generated@@183 0)))) (= ($generated@@51 $generated@@182 $generated@@183 $generated@@184) (= ($generated@@181 $generated@@182 $generated@@183) $generated@@184)))
 :pattern ( ($generated@@51 $generated@@182 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ($generated@@187 Int) ) (!  (=> (= (type $generated@@185) $generated@@48) (= ($generated@@45 ($generated@@46 $generated@@185) $generated@@186 $generated@@187) ($generated@@45 $generated@@185 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@185) $generated@@186 $generated@@187))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@188 Int) ($generated@@189 Int) ($generated@@190 Int) ) (!  (=> (or ($generated@@52 $generated@@188 $generated@@189 $generated@@190) (and (not (= 0 $generated@@44)) (and (> $generated@@188 0) (> $generated@@189 0)))) true)
 :pattern ( ($generated@@51 $generated@@188 $generated@@189 $generated@@190))
))))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@193 Int) ($generated@@194 Int) ($generated@@195 Int) ) (!  (=> (or ($generated@@192 $generated@@193 $generated@@194 $generated@@195) (and (not (= 2 $generated@@44)) (and (> $generated@@194 0) (> $generated@@195 0)))) true)
 :pattern ( ($generated@@191 $generated@@193 $generated@@194 $generated@@195))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@196 T@U) ($generated@@197 Int) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@196) $generated@@48) (or ($generated@@49 $generated@@197 $generated@@198) (and (not (= 1 $generated@@44)) (and (> $generated@@197 0) (> $generated@@198 0))))) true)
 :pattern ( ($generated@@45 $generated@@196 $generated@@197 $generated@@198))
))))
(assert  (and (and (= ($generated@@1 $generated@@201) 12) (forall (($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@199 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@U) ) (! (= (type ($generated@@200 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@200 $generated@@203 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(= ($generated@@200 $generated@@206 ($generated@@199 $generated@@205)) $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
)))
(assert (forall (($generated@@207 Int) ($generated@@208 Int) ) (! (= ($generated@@181 $generated@@207 $generated@@208) (* $generated@@207 $generated@@208))
 :pattern ( ($generated@@181 $generated@@207 $generated@@208))
)))
(assert (= (type $generated@@209) $generated@@48))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@210 Int) ($generated@@211 Int) ($generated@@212 Int) ) (!  (=> (or ($generated@@192 ($generated@@47 $generated@@210) ($generated@@47 $generated@@211) ($generated@@47 $generated@@212)) (and (not (= 2 $generated@@44)) ($generated@@0 ($generated@@50 ($generated@@11  (and (> $generated@@211 0) (> $generated@@212 0))))))) (and (=> ($generated@@0 ($generated@@50 ($generated@@11 (> $generated@@210 0)))) (and ($generated@@49 ($generated@@47 $generated@@210) ($generated@@47 $generated@@211)) (=> ($generated@@45 $generated@@209 ($generated@@47 $generated@@210) ($generated@@47 $generated@@211)) ($generated@@49 ($generated@@47 $generated@@210) ($generated@@47 $generated@@212))))) (= ($generated@@191 ($generated@@47 $generated@@210) ($generated@@47 $generated@@211) ($generated@@47 $generated@@212))  (and (and (> $generated@@210 0) ($generated@@45 $generated@@209 ($generated@@47 $generated@@210) ($generated@@47 $generated@@211))) ($generated@@45 $generated@@209 ($generated@@47 $generated@@210) ($generated@@47 $generated@@212))))))
 :weight 3
 :pattern ( ($generated@@191 ($generated@@47 $generated@@210) ($generated@@47 $generated@@211) ($generated@@47 $generated@@212)))
))))
(assert (forall (($generated@@213 Int) ) (! (= ($generated@@199 ($generated@@8 ($generated@@47 $generated@@213))) ($generated@@50 ($generated@@199 ($generated@@8 $generated@@213))))
 :pattern ( ($generated@@199 ($generated@@8 ($generated@@47 $generated@@213))))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@199 ($generated@@50 $generated@@214)) ($generated@@50 ($generated@@199 $generated@@214)))
 :pattern ( ($generated@@199 ($generated@@50 $generated@@214)))
)))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@215 Int) ($generated@@216 Int) ($generated@@217 Int) ) (!  (=> (or ($generated@@192 $generated@@215 $generated@@216 $generated@@217) (and (not (= 2 $generated@@44)) (and (> $generated@@216 0) (> $generated@@217 0)))) (and (=> (> $generated@@215 0) (and ($generated@@49 $generated@@215 $generated@@216) (=> ($generated@@45 $generated@@209 $generated@@215 $generated@@216) ($generated@@49 $generated@@215 $generated@@217)))) (= ($generated@@191 $generated@@215 $generated@@216 $generated@@217)  (and (and (> $generated@@215 0) ($generated@@45 $generated@@209 $generated@@215 $generated@@216)) ($generated@@45 $generated@@209 $generated@@215 $generated@@217)))))
 :pattern ( ($generated@@191 $generated@@215 $generated@@216 $generated@@217))
))))
(assert  (and (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@48)
 :pattern ( ($generated@@218 $generated@@220))
)) (= (type $generated@@219) $generated@@48)))
(assert (forall (($generated@@221 T@U) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (= (type $generated@@221) $generated@@48) (= ($generated@@45 $generated@@221 $generated@@222 $generated@@223) ($generated@@45 $generated@@219 $generated@@222 $generated@@223)))
 :pattern ( ($generated@@45 ($generated@@218 $generated@@221) $generated@@222 $generated@@223))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@224 Int) ($generated@@225 Int) ($generated@@226 Int) ) (!  (=> (or ($generated@@52 ($generated@@47 $generated@@224) ($generated@@47 $generated@@225) ($generated@@47 $generated@@226)) (and (not (= 0 $generated@@44)) ($generated@@0 ($generated@@50 ($generated@@11  (and (> $generated@@224 0) (> $generated@@225 0))))))) (= ($generated@@51 ($generated@@47 $generated@@224) ($generated@@47 $generated@@225) ($generated@@47 $generated@@226)) (= ($generated@@47 ($generated@@181 ($generated@@47 $generated@@224) ($generated@@47 $generated@@225))) ($generated@@47 $generated@@226))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@47 $generated@@224) ($generated@@47 $generated@@225) ($generated@@47 $generated@@226)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 () Int)
(assert  (and (and (and (and (and (= (type $generated@@227) $generated@@48) (= (type $generated@@228) ($generated@@79 $generated@@69 $generated@@4))) (= (type $generated@@229) $generated@@69)) (= (type $generated@@230) ($generated@@70 $generated@@69 $generated@@71))) (= (type $generated@@231) ($generated@@72 $generated@@4))) (= (type $generated@@235) ($generated@@70 $generated@@69 $generated@@71))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@238  (=> (= ($generated@@218 $generated@@209) $generated@@209) (=> (and (= ($generated@@218 $generated@@227) $generated@@227) (= $generated@@228 ($generated@@67 $generated@@229 $generated@@230 $generated@@231 false))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@232 0)) (=> (> $generated@@232 0) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@233 0)) (=> (> $generated@@233 0) (=> (and (and ($generated@@234 $generated@@235) ($generated@@236 $generated@@235)) (and ($generated@@192 $generated@@237 $generated@@232 $generated@@233) (=> ($generated@@191 $generated@@237 $generated@@232 $generated@@233) (forall (($generated@@239 Int) ) (! ($generated@@192 $generated@@239 $generated@@232 $generated@@233)
 :pattern ( ($generated@@191 $generated@@239 $generated@@232 $generated@@233))
))))) (=> (and (and (and ($generated@@192 $generated@@237 $generated@@232 $generated@@233) (and ($generated@@191 $generated@@237 $generated@@232 $generated@@233) (and (and (> $generated@@237 0) ($generated@@45 $generated@@209 $generated@@237 $generated@@232)) ($generated@@45 $generated@@209 $generated@@237 $generated@@233)))) (forall (($generated@@240 Int) ) (!  (=> true (=> ($generated@@191 $generated@@240 $generated@@232 $generated@@233) (<= $generated@@240 $generated@@237)))
 :pattern ( ($generated@@191 $generated@@240 $generated@@232 $generated@@233))
))) (and (= $generated@@230 $generated@@235) (= (ControlFlow 0 2) (- 0 1)))) (exists (($generated@@241 Int) ) (!  (and ($generated@@191 $generated@@241 $generated@@232 $generated@@233) (forall (($generated@@242 Int) ) (!  (=> true (=> ($generated@@191 $generated@@242 $generated@@232 $generated@@233) (<= $generated@@242 $generated@@241)))
 :pattern ( ($generated@@191 $generated@@242 $generated@@232 $generated@@233))
)))
 :pattern ( ($generated@@191 $generated@@241 $generated@@232 $generated@@233))
))))))))))))
(let (($generated@@243  (=> (and ($generated@@234 $generated@@230) ($generated@@236 $generated@@230)) (=> (and (and (= 4 $generated@@44) (> $generated@@232 0)) (and (> $generated@@233 0) (= (ControlFlow 0 5) 2))) $generated@@238))))
$generated@@243)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (Int Int Int) Bool)
(declare-fun $generated@@277 (Int Int Int) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@308 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U Int) T@U)
(declare-fun $generated@@357 (T@U) Int)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@404 () T@T)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@278 Int) ($generated@@279 Int) ($generated@@280 Int) ) (!  (=> (or ($generated@@277 $generated@@278 $generated@@279 $generated@@280) (and (not (= 2 $generated@@127)) (and (> $generated@@279 0) (> $generated@@280 0)))) true)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279 $generated@@280))
))))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@283) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@224) ($generated@@0 ($generated@@76 $generated@@283 $generated@@286))) ($generated@@222 $generated@@286 $generated@@284 $generated@@285))
 :pattern ( ($generated@@76 $generated@@283 $generated@@286))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@281 $generated@@284) $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@61)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@289) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@287 $generated@@290) $generated@@291) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@224) ($generated@@0 ($generated@@76 $generated@@289 $generated@@292))) ($generated@@222 $generated@@292 $generated@@290 $generated@@291))
 :pattern ( ($generated@@76 $generated@@289 $generated@@292))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@287 $generated@@290) $generated@@291))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 Int) ) (!  (=> (and (= (type $generated@@293) $generated@@131) (or ($generated@@132 $generated@@294 $generated@@295) (and (not (= 1 $generated@@127)) (and (> $generated@@294 0) (> $generated@@295 0))))) true)
 :pattern ( ($generated@@128 $generated@@293 $generated@@294 $generated@@295))
))))
(assert  (and (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (! (= (type ($generated@@296 $generated@@298 $generated@@299)) $generated@@61)
 :pattern ( ($generated@@296 $generated@@298 $generated@@299))
)) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@233 (type $generated@@300))))
(let (($generated@@302 ($generated@@232 (type $generated@@300))))
(= (type ($generated@@297 $generated@@300)) ($generated@@71 $generated@@302 $generated@@301))))
 :pattern ( ($generated@@297 $generated@@300))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@303) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@304) $generated@@61)) (= (type $generated@@305) $generated@@61)) (= (type $generated@@306) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@303 ($generated@@296 $generated@@304 $generated@@305) $generated@@306) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@303) $generated@@307))) (and ($generated@@222 ($generated@@76 ($generated@@297 $generated@@303) $generated@@307) $generated@@305 $generated@@306) ($generated@@222 $generated@@307 $generated@@304 $generated@@306)))
 :pattern ( ($generated@@76 ($generated@@297 $generated@@303) $generated@@307))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@303) $generated@@307))
))))
 :pattern ( ($generated@@69 $generated@@303 ($generated@@296 $generated@@304 $generated@@305) $generated@@306))
)))
(assert  (and (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (= (type ($generated@@308 $generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@308 $generated@@310 $generated@@311))
)) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@251 (type $generated@@312))))
(let (($generated@@314 ($generated@@250 (type $generated@@312))))
(= (type ($generated@@309 $generated@@312)) ($generated@@71 $generated@@314 $generated@@313))))
 :pattern ( ($generated@@309 $generated@@312))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (= (type $generated@@315) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@316) $generated@@61)) (= (type $generated@@317) $generated@@61)) (= (type $generated@@318) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@315 ($generated@@308 $generated@@316 $generated@@317) $generated@@318) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@315) $generated@@319))) (and ($generated@@222 ($generated@@76 ($generated@@309 $generated@@315) $generated@@319) $generated@@317 $generated@@318) ($generated@@222 $generated@@319 $generated@@316 $generated@@318)))
 :pattern ( ($generated@@76 ($generated@@309 $generated@@315) $generated@@319))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@315) $generated@@319))
))))
 :pattern ( ($generated@@69 $generated@@315 ($generated@@308 $generated@@316 $generated@@317) $generated@@318))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@71 $generated@@321 $generated@@4))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@251 (type $generated@@322))))
(let (($generated@@324 ($generated@@250 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@249 $generated@@324 $generated@@323)) (= (= $generated@@322 ($generated@@248 $generated@@324 $generated@@323)) (= ($generated@@247 $generated@@322) ($generated@@320 $generated@@324))))))
 :pattern ( ($generated@@247 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@214 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@213 $generated@@326)) (<= 0 ($generated@@212 $generated@@325))))
 :pattern ( ($generated@@212 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@296 $generated@@329 $generated@@330)) $generated@@329))
 :pattern ( ($generated@@296 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@61) (= (type $generated@@334) $generated@@61)) (= ($generated@@331 ($generated@@296 $generated@@333 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@296 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@67 ($generated@@296 $generated@@335 $generated@@336)) $generated@@58))
 :pattern ( ($generated@@296 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@308 $generated@@339 $generated@@340)) $generated@@339))
 :pattern ( ($generated@@308 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@61) (= (type $generated@@344) $generated@@61)) (= ($generated@@341 ($generated@@308 $generated@@343 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@308 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@61) (= (type $generated@@346) $generated@@61)) (= ($generated@@67 ($generated@@308 $generated@@345 $generated@@346)) $generated@@59))
 :pattern ( ($generated@@308 $generated@@345 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ($generated@@351 Int) ) (! (let (($generated@@352 ($generated@@214 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350 $generated@@351)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@213 $generated@@224)) (= (type $generated@@354) $generated@@61)) (= (type $generated@@355) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@353 ($generated@@347 $generated@@354) $generated@@355) (forall (($generated@@356 Int) ) (!  (=> (and (<= 0 $generated@@356) (< $generated@@356 ($generated@@212 $generated@@353))) ($generated@@222 ($generated@@348 $generated@@353 $generated@@356) $generated@@354 $generated@@355))
 :pattern ( ($generated@@348 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@69 $generated@@353 ($generated@@347 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@358 Int) ) (! (= ($generated@@357 ($generated@@70 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@70 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@281 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@281 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@281 $generated@@362)) $generated@@54))
 :pattern ( ($generated@@281 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (= (type ($generated@@363 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@61) (= ($generated@@363 ($generated@@287 $generated@@365)) $generated@@365))
 :pattern ( ($generated@@287 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@67 ($generated@@287 $generated@@366)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@368 ($generated@@367 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@367 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@367 $generated@@372)) $generated@@56))
 :pattern ( ($generated@@367 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@61)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@61) (= ($generated@@373 ($generated@@347 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@347 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@376)) $generated@@57))
 :pattern ( ($generated@@347 $generated@@376))
)))
(assert (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated@@377 $generated@@381 ($generated@@223 $generated@@380)) $generated@@380))
 :pattern ( ($generated@@223 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
 (not ($generated@@0 ($generated@@76 ($generated@@320 $generated@@383) $generated@@382))))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@76 ($generated@@320 $generated@@383) $generated@@382)))
)))
(assert (forall (($generated@@384 Int) ($generated@@385 Int) ) (! (= ($generated@@207 $generated@@384 $generated@@385) (* $generated@@384 $generated@@385))
 :pattern ( ($generated@@207 $generated@@384 $generated@@385))
)))
(assert (= (type $generated@@386) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@387 Int) ($generated@@388 Int) ($generated@@389 Int) ) (!  (=> (or ($generated@@277 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388) ($generated@@130 $generated@@389)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@388 0) (> $generated@@389 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@387 0)))) (and ($generated@@132 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388)) (=> ($generated@@128 $generated@@386 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388)) ($generated@@132 ($generated@@130 $generated@@387) ($generated@@130 $generated@@389))))) (= ($generated@@276 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388) ($generated@@130 $generated@@389))  (and (and (> $generated@@387 0) ($generated@@128 $generated@@386 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388))) ($generated@@128 $generated@@386 ($generated@@130 $generated@@387) ($generated@@130 $generated@@389))))))
 :weight 3
 :pattern ( ($generated@@276 ($generated@@130 $generated@@387) ($generated@@130 $generated@@388) ($generated@@130 $generated@@389)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@391) $generated@@61)) (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@390 ($generated@@367 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@390 $generated@@393)))) ($generated@@222 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@76 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@69 $generated@@390 ($generated@@367 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@394))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@394))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@394))))
)))
(assert (forall (($generated@@395 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@395)) ($generated@@133 ($generated@@223 $generated@@395)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@395)))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@214 (type $generated@@396))))
 (=> (and (= (type $generated@@396) ($generated@@213 $generated@@397)) (= ($generated@@212 $generated@@396) 0)) (= $generated@@396 ($generated@@211 $generated@@397))))
 :pattern ( ($generated@@212 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@2)) ($generated@@69 $generated@@399 $generated@@46 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@46 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@401) $generated@@3)) ($generated@@69 $generated@@401 $generated@@47 $generated@@400))
 :pattern ( ($generated@@69 $generated@@401 $generated@@47 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@4)) ($generated@@69 $generated@@403 $generated@@44 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@44 $generated@@402))
)))
(assert (= ($generated@@1 $generated@@404) 18))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@406) $generated@@404)) ($generated@@69 $generated@@406 $generated@@45 $generated@@405))
 :pattern ( ($generated@@69 $generated@@406 $generated@@45 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@408) $generated@@224)) ($generated@@69 $generated@@408 $generated@@48 $generated@@407))
 :pattern ( ($generated@@69 $generated@@408 $generated@@48 $generated@@407))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@409 Int) ($generated@@410 Int) ($generated@@411 Int) ) (!  (=> (or ($generated@@277 $generated@@409 $generated@@410 $generated@@411) (and (not (= 2 $generated@@127)) (and (> $generated@@410 0) (> $generated@@411 0)))) (and (=> (> $generated@@409 0) (and ($generated@@132 $generated@@409 $generated@@410) (=> ($generated@@128 $generated@@386 $generated@@409 $generated@@410) ($generated@@132 $generated@@409 $generated@@411)))) (= ($generated@@276 $generated@@409 $generated@@410 $generated@@411)  (and (and (> $generated@@409 0) ($generated@@128 $generated@@386 $generated@@409 $generated@@410)) ($generated@@128 $generated@@386 $generated@@409 $generated@@411)))))
 :pattern ( ($generated@@276 $generated@@409 $generated@@410 $generated@@411))
))))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) $generated@@131)
 :pattern ( ($generated@@412 $generated@@414))
)) (= (type $generated@@413) $generated@@131)))
(assert (forall (($generated@@415 T@U) ($generated@@416 Int) ($generated@@417 Int) ) (!  (=> (= (type $generated@@415) $generated@@131) (= ($generated@@128 $generated@@415 $generated@@416 $generated@@417) ($generated@@128 $generated@@413 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@128 ($generated@@412 $generated@@415) $generated@@416 $generated@@417))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@418 Int) ($generated@@419 Int) ($generated@@420 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@418) ($generated@@130 $generated@@419) ($generated@@130 $generated@@420)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@418 0) (> $generated@@419 0))))))) (= ($generated@@134 ($generated@@130 $generated@@418) ($generated@@130 $generated@@419) ($generated@@130 $generated@@420)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@418) ($generated@@130 $generated@@419))) ($generated@@130 $generated@@420))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@418) ($generated@@130 $generated@@419) ($generated@@130 $generated@@420)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@421 () Int)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Int)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () T@U)
(declare-fun $generated@@426 () T@U)
(declare-fun $generated@@427 () T@U)
(declare-fun $generated@@428 () T@U)
(declare-fun $generated@@429 () T@U)
(declare-fun $generated@@430 (T@U) Bool)
(declare-fun $generated@@431 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@426) $generated@@131)) (= (type $generated@@427) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@428) $generated@@72)) (= (type $generated@@429) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@432 true))
(let (($generated@@433  (=> (and (=> ($generated@@276 $generated@@421 $generated@@422 $generated@@423) (<= $generated@@421 $generated@@424)) (= (ControlFlow 0 5) 1)) $generated@@432)))
(let (($generated@@434  (=> ($generated@@69 ($generated@@8 $generated@@421) $generated@@46 $generated@@425) (=> (and ($generated@@69 ($generated@@8 $generated@@422) $generated@@46 $generated@@425) ($generated@@69 ($generated@@8 $generated@@423) $generated@@46 $generated@@425)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@422 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@423 0)) (=> (and (> $generated@@422 0) (> $generated@@423 0)) (=> (and (and ($generated@@277 $generated@@421 $generated@@422 $generated@@423) ($generated@@276 $generated@@421 $generated@@422 $generated@@423)) (and (<= $generated@@421 $generated@@424) (= (ControlFlow 0 2) 1))) $generated@@432))))))))
(let (($generated@@435  (=> (= ($generated@@412 $generated@@386) $generated@@386) (=> (and (= ($generated@@412 $generated@@426) $generated@@426) (= $generated@@427 ($generated@@150 $generated@@428 $generated@@429 $generated@@60 false))) (=> (and (and (and (> $generated@@422 0) (> $generated@@423 0)) (and ($generated@@430 $generated@@425) ($generated@@431 $generated@@425))) (and (and (= $generated@@429 $generated@@425) ($generated@@69 ($generated@@8 $generated@@424) $generated@@46 $generated@@425)) (and ($generated@@69 ($generated@@8 $generated@@422) $generated@@46 $generated@@425) ($generated@@69 ($generated@@8 $generated@@423) $generated@@46 $generated@@425)))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (> $generated@@422 0)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (> $generated@@423 0)) (=> (and (and (> $generated@@422 0) (> $generated@@423 0)) (and ($generated@@277 $generated@@424 $generated@@422 $generated@@423) ($generated@@276 $generated@@424 $generated@@422 $generated@@423))) (and (=> (= (ControlFlow 0 6) 2) $generated@@434) (=> (= (ControlFlow 0 6) 5) $generated@@433))))))))))
(let (($generated@@436  (=> (and (and ($generated@@430 $generated@@429) ($generated@@431 $generated@@429)) (and (= 3 $generated@@127) (= (ControlFlow 0 9) 6))) $generated@@435)))
$generated@@436))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int Int) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (Int Int Int) Bool)
(declare-fun $generated@@140 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@255 (Int Int) Int)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@361 (Int Int Int) Bool)
(declare-fun $generated@@362 (Int Int Int) Bool)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@552 () T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@134 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(= (type ($generated@@138 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (and (not (= 1 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@145 0) (> $generated@@146 0)))))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@140 $generated@@147 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@139 $generated@@148 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@148 $generated@@145 $generated@@146))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
))))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@75 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@64) (= (type $generated@@157) $generated@@64)) (= (type $generated@@158) $generated@@153)) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 16) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@153)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@136) (or ($generated@@137 $generated@@168 $generated@@169) (and (not (= 1 $generated@@132)) (and (> $generated@@168 0) (> $generated@@169 0))))) (and (forall (($generated@@170 Int) ) (!  (=> (> $generated@@170 0) ($generated@@140 $generated@@170 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@170 $generated@@168 $generated@@169))
)) (= ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169) (exists (($generated@@171 Int) ) (!  (and (> $generated@@171 0) ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
)))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@64)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@176) $generated@@64)) ($generated@@149 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@149 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@77 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@153)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@162)) (= (type $generated@@240) $generated@@162)) (= ($generated@@149 ($generated@@233 $generated@@239 $generated@@240) ($generated@@152 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@149 ($generated@@233 $generated@@239 $generated@@240) ($generated@@152 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@153) (= (type $generated@@242) $generated@@153)) (= ($generated@@159 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@159 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@149 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@162) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@149 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@149 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@162) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@149 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@135 $generated@@253) $generated@@253)
 :pattern ( ($generated@@135 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@138 $generated@@254) $generated@@254)
 :pattern ( ($generated@@138 $generated@@254))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@256 Int) ($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (or ($generated@@140 $generated@@256 $generated@@257 $generated@@258) (and (not (= 0 $generated@@132)) (and (> $generated@@256 0) (> $generated@@257 0)))) (= ($generated@@139 $generated@@256 $generated@@257 $generated@@258) (= ($generated@@255 $generated@@256 $generated@@257) $generated@@258)))
 :pattern ( ($generated@@139 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@162)) (= (type $generated@@264) $generated@@162)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@233 $generated@@263 $generated@@264) ($generated@@152 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@233 $generated@@263 $generated@@264) ($generated@@152 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@153) (= ($generated@@151 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@153) ($generated@@151 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@162) (= (type $generated@@271) $generated@@162)) (= $generated@@269 ($generated@@233 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@151 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 Int) ($generated@@282 Int) ) (!  (=> (= (type $generated@@280) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@280) $generated@@281 $generated@@282) ($generated@@133 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@162)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@74 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@260 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@76 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@76 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@81 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@2)) (= ($generated@@173 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@81 $generated@@330 $generated@@332))) (<= ($generated ($generated@@81 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@173 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@298 (type $generated@@333))))
(let (($generated@@335 ($generated@@297 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@296 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@295 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@294 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@298 (type $generated@@340))))
(let (($generated@@342 ($generated@@297 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@296 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@295 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@316 (type $generated@@344))))
(let (($generated@@346 ($generated@@315 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@314 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@313 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@312 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@316 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@316 (type $generated@@351))))
(let (($generated@@353 ($generated@@315 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@314 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@313 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@356) $generated@@64)) (= ($generated@@149 $generated@@355 ($generated@@172 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@355 $generated@@357)))) ($generated@@234 $generated@@357 $generated@@356))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@149 $generated@@355 ($generated@@172 $generated@@356)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@358 Int) ($generated@@359 Int) ($generated@@360 Int) ) (!  (=> (or ($generated@@140 $generated@@358 $generated@@359 $generated@@360) (and (not (= 0 $generated@@132)) (and (> $generated@@358 0) (> $generated@@359 0)))) true)
 :pattern ( ($generated@@139 $generated@@358 $generated@@359 $generated@@360))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@363 Int) ($generated@@364 Int) ($generated@@365 Int) ) (!  (=> (or ($generated@@362 $generated@@363 $generated@@364 $generated@@365) (and (not (= 2 $generated@@132)) (and (> $generated@@364 0) (> $generated@@365 0)))) true)
 :pattern ( ($generated@@361 $generated@@363 $generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@162) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@260 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@371) $generated@@64)) (= (type $generated@@372) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@370 ($generated@@248 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@162) ($generated@@0 ($generated@@81 $generated@@370 $generated@@373))) ($generated@@260 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@81 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@74 $generated@@370 ($generated@@248 $generated@@371) $generated@@372))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@374 T@U) ($generated@@375 Int) ($generated@@376 Int) ) (!  (=> (and (= (type $generated@@374) $generated@@136) (or ($generated@@137 $generated@@375 $generated@@376) (and (not (= 1 $generated@@132)) (and (> $generated@@375 0) (> $generated@@376 0))))) true)
 :pattern ( ($generated@@133 $generated@@374 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@81 ($generated@@289 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@81 ($generated@@289 $generated@@378) $generated@@377)))
)))
(assert  (and (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@379 $generated@@382)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@379 $generated@@382))
)) (forall (($generated@@383 T@T) ($generated@@384 T@U) ) (! (= (type ($generated@@380 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@380 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@298 (type $generated@@385))))
(let (($generated@@387 ($generated@@297 (type $generated@@385))))
(= (type ($generated@@381 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@381 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@296 $generated@@162 $generated@@162)) (= (type $generated@@389) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@388) ($generated@@160 ($generated@@380 $generated@@153 $generated@@389)))) (= ($generated@@81 ($generated@@381 $generated@@388) ($generated@@160 ($generated@@380 $generated@@153 $generated@@389))) ($generated@@161 ($generated@@380 $generated@@153 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@316 (type $generated@@393))))
(let (($generated@@395 ($generated@@315 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@76 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@314 $generated@@162 $generated@@162)) (= (type $generated@@397) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@396) ($generated@@160 ($generated@@380 $generated@@153 $generated@@397)))) (= ($generated@@81 ($generated@@391 $generated@@396) ($generated@@160 ($generated@@380 $generated@@153 $generated@@397))) ($generated@@161 ($generated@@380 $generated@@153 $generated@@397))))))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@297 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@296 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@381 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@315 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@314 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@81 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@296 $generated@@162 $generated@@162)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@411) $generated@@415))) (and ($generated@@260 ($generated@@81 ($generated@@381 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@260 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@64)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@314 $generated@@162 $generated@@162)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) $generated@@64)) (= (type $generated@@422) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@419) $generated@@423))) (and ($generated@@260 ($generated@@81 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@260 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@74 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@76 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@316 (type $generated@@426))))
(let (($generated@@428 ($generated@@315 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@314 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@313 $generated@@428 $generated@@427)) (= ($generated@@312 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@312 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@316 (type $generated@@429))))
(let (($generated@@431 ($generated@@315 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@314 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@313 $generated@@431 $generated@@430)) (= ($generated@@348 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@348 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@316 (type $generated@@432))))
(let (($generated@@434 ($generated@@315 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@314 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@313 $generated@@434 $generated@@433)) (= ($generated@@390 $generated@@432) ($generated@@424 $generated@@162))))))
 :pattern ( ($generated@@390 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@298 (type $generated@@435))))
(let (($generated@@437 ($generated@@297 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@296 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@295 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@162) (= (type $generated@@439) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@435) ($generated@@283 ($generated@@233 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@379 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@316 (type $generated@@440))))
(let (($generated@@442 ($generated@@315 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@314 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@313 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@162) (= (type $generated@@444) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@390 $generated@@440) ($generated@@283 ($generated@@233 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@390 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@162) ($generated@@234 $generated@@445 $generated@@46)) (and (= ($generated@@283 ($generated@@380 $generated@@2 $generated@@445)) $generated@@445) ($generated@@149 ($generated@@380 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@162) ($generated@@234 $generated@@446 $generated@@47)) (and (= ($generated@@283 ($generated@@380 $generated@@3 $generated@@446)) $generated@@446) ($generated@@149 ($generated@@380 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@162) ($generated@@234 $generated@@447 $generated@@44)) (and (= ($generated@@283 ($generated@@380 $generated@@4 $generated@@447)) $generated@@447) ($generated@@149 ($generated@@380 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 21))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@162) ($generated@@234 $generated@@449 $generated@@45)) (and (= ($generated@@283 ($generated@@380 $generated@@448 $generated@@449)) $generated@@449) ($generated@@149 ($generated@@380 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@64) (= ($generated@@234 ($generated@@283 $generated@@450) $generated@@451) ($generated@@149 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@234 ($generated@@283 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@79 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@76 $generated@@453 $generated@@2)) (<= 0 ($generated@@288 $generated@@452))))
 :pattern ( ($generated@@288 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@275 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@274 $generated@@455)) (<= 0 ($generated@@273 $generated@@454))))
 :pattern ( ($generated@@273 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@408 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@408 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@416 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@162) (= (type $generated@@477) $generated@@162)) (= ($generated@@266 ($generated@@233 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@152 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@152 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@152 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@152 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@162) (= (type $generated@@487) $generated@@162)) (= ($generated@@160 ($generated@@233 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@233 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@162) (= (type $generated@@489) $generated@@162)) (= ($generated@@161 ($generated@@233 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@233 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@275 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@274 $generated@@162)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@273 $generated@@496))) ($generated@@260 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@243 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@248 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@248 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@172 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@172 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@172 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@380 $generated@@519 ($generated@@283 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@283 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@296 $generated@@162 $generated@@162)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@149 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@520) $generated@@523))) (and ($generated@@234 ($generated@@81 ($generated@@381 $generated@@520) $generated@@523) $generated@@522) ($generated@@234 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@149 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@314 $generated@@162 $generated@@162)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@149 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@524) $generated@@527))) (and ($generated@@234 ($generated@@81 ($generated@@391 $generated@@524) $generated@@527) $generated@@526) ($generated@@234 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@149 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@162) (= (type $generated@@531) $generated@@162)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@233 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@162) (= (type $generated@@533) $generated@@162)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@233 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@162) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@234 $generated@@534 ($generated@@408 $generated@@535 $generated@@536))) (and (= ($generated@@283 ($generated@@380 ($generated@@296 $generated@@162 $generated@@162) $generated@@534)) $generated@@534) ($generated@@149 ($generated@@380 ($generated@@296 $generated@@162 $generated@@162) $generated@@534) ($generated@@408 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@534 ($generated@@408 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@162) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@234 $generated@@537 ($generated@@416 $generated@@538 $generated@@539))) (and (= ($generated@@283 ($generated@@380 ($generated@@314 $generated@@162 $generated@@162) $generated@@537)) $generated@@537) ($generated@@149 ($generated@@380 ($generated@@314 $generated@@162 $generated@@162) $generated@@537) ($generated@@416 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@234 $generated@@537 ($generated@@416 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@162)) ($generated@@234 $generated@@542 ($generated@@152 $generated@@540 $generated@@541))) (and (= ($generated@@283 ($generated@@380 $generated@@153 $generated@@542)) $generated@@542) ($generated@@149 ($generated@@380 $generated@@153 $generated@@542) ($generated@@152 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@234 $generated@@542 ($generated@@152 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@424 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@424 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@152 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@152 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@152 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 Int) ($generated@@550 Int) ) (! (= ($generated@@255 $generated@@549 $generated@@550) (* $generated@@549 $generated@@550))
 :pattern ( ($generated@@255 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@153) (= ($generated@@528 ($generated@@283 $generated@@551)) ($generated@@529 $generated@@551)))
 :pattern ( ($generated@@528 ($generated@@283 $generated@@551)))
)))
(assert (= (type $generated@@552) $generated@@136))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@553 Int) ($generated@@554 Int) ($generated@@555 Int) ) (!  (=> (or ($generated@@362 ($generated@@135 $generated@@553) ($generated@@135 $generated@@554) ($generated@@135 $generated@@555)) (and (not (= 2 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@554 0) (> $generated@@555 0))))))) (and (=> ($generated@@0 ($generated@@138 ($generated@@11 (> $generated@@553 0)))) (and ($generated@@137 ($generated@@135 $generated@@553) ($generated@@135 $generated@@554)) (=> ($generated@@133 $generated@@552 ($generated@@135 $generated@@553) ($generated@@135 $generated@@554)) ($generated@@137 ($generated@@135 $generated@@553) ($generated@@135 $generated@@555))))) (= ($generated@@361 ($generated@@135 $generated@@553) ($generated@@135 $generated@@554) ($generated@@135 $generated@@555))  (and (and (> $generated@@553 0) ($generated@@133 $generated@@552 ($generated@@135 $generated@@553) ($generated@@135 $generated@@554))) ($generated@@133 $generated@@552 ($generated@@135 $generated@@553) ($generated@@135 $generated@@555))))))
 :weight 3
 :pattern ( ($generated@@361 ($generated@@135 $generated@@553) ($generated@@135 $generated@@554) ($generated@@135 $generated@@555)))
))))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@162) ($generated@@234 $generated@@556 ($generated@@75 0))) (and (= ($generated@@283 ($generated@@380 $generated@@2 $generated@@556)) $generated@@556) ($generated@@149 ($generated@@380 ($generated@@76 $generated@@162 $generated@@4) $generated@@556) ($generated@@75 0))))
 :pattern ( ($generated@@234 $generated@@556 ($generated@@75 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@162) (= (type $generated@@558) $generated@@64)) ($generated@@234 $generated@@557 ($generated@@243 $generated@@558))) (and (= ($generated@@283 ($generated@@380 ($generated@@76 $generated@@162 $generated@@4) $generated@@557)) $generated@@557) ($generated@@149 ($generated@@380 ($generated@@76 $generated@@162 $generated@@4) $generated@@557) ($generated@@243 $generated@@558))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@243 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@162) (= (type $generated@@560) $generated@@64)) ($generated@@234 $generated@@559 ($generated@@248 $generated@@560))) (and (= ($generated@@283 ($generated@@380 ($generated@@76 $generated@@162 $generated@@4) $generated@@559)) $generated@@559) ($generated@@149 ($generated@@380 ($generated@@76 $generated@@162 $generated@@4) $generated@@559) ($generated@@248 $generated@@560))))
 :pattern ( ($generated@@234 $generated@@559 ($generated@@248 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@162) (= (type $generated@@562) $generated@@64)) ($generated@@234 $generated@@561 ($generated@@172 $generated@@562))) (and (= ($generated@@283 ($generated@@380 ($generated@@76 $generated@@162 $generated@@2) $generated@@561)) $generated@@561) ($generated@@149 ($generated@@380 ($generated@@76 $generated@@162 $generated@@2) $generated@@561) ($generated@@172 $generated@@562))))
 :pattern ( ($generated@@234 $generated@@561 ($generated@@172 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@162) (= (type $generated@@564) $generated@@64)) ($generated@@234 $generated@@563 ($generated@@490 $generated@@564))) (and (= ($generated@@283 ($generated@@380 ($generated@@274 $generated@@162) $generated@@563)) $generated@@563) ($generated@@149 ($generated@@380 ($generated@@274 $generated@@162) $generated@@563) ($generated@@490 $generated@@564))))
 :pattern ( ($generated@@234 $generated@@563 ($generated@@490 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@565 ($generated@@172 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@565 $generated@@568)))) ($generated@@260 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@81 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@172 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@153) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@571) (and ($generated@@151 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@152 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@152 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@260 ($generated@@160 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@260 ($generated@@160 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@153) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@575) (and ($generated@@151 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@64) ($generated@@74 $generated@@573 ($generated@@152 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@152 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@260 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@260 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@162) (= (type $generated@@578) $generated@@162)) (= ($generated@@233 ($generated@@138 $generated@@577) ($generated@@138 $generated@@578)) ($generated@@138 ($generated@@233 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@233 ($generated@@138 $generated@@577) ($generated@@138 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@135 $generated@@579))) ($generated@@138 ($generated@@283 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@135 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@283 ($generated@@138 $generated@@580)) ($generated@@138 ($generated@@283 $generated@@580)))
 :pattern ( ($generated@@283 ($generated@@138 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@275 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@274 $generated@@582)) (= ($generated@@273 $generated@@581) 0)) (= $generated@@581 ($generated@@272 $generated@@582))))
 :pattern ( ($generated@@273 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@76 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@288 ($generated@@82 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@288 $generated@@583) ($generated ($generated@@81 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@288 ($generated@@82 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@2)) ($generated@@74 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@3)) ($generated@@74 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@4)) ($generated@@74 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@448)) ($generated@@74 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) $generated@@162)) ($generated@@74 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@74 $generated@@596 $generated@@48 $generated@@595))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@597 Int) ($generated@@598 Int) ($generated@@599 Int) ) (!  (=> (or ($generated@@362 $generated@@597 $generated@@598 $generated@@599) (and (not (= 2 $generated@@132)) (and (> $generated@@598 0) (> $generated@@599 0)))) (and (=> (> $generated@@597 0) (and ($generated@@137 $generated@@597 $generated@@598) (=> ($generated@@133 $generated@@552 $generated@@597 $generated@@598) ($generated@@137 $generated@@597 $generated@@599)))) (= ($generated@@361 $generated@@597 $generated@@598 $generated@@599)  (and (and (> $generated@@597 0) ($generated@@133 $generated@@552 $generated@@597 $generated@@598)) ($generated@@133 $generated@@552 $generated@@597 $generated@@599)))))
 :pattern ( ($generated@@361 $generated@@597 $generated@@598 $generated@@599))
))))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@274 $generated@@162)) (= (type $generated@@601) $generated@@64)) (= ($generated@@149 $generated@@600 ($generated@@490 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@273 $generated@@600))) ($generated@@234 ($generated@@491 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@491 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@490 $generated@@601)))
)))
(assert  (and (forall (($generated@@605 T@U) ) (! (= (type ($generated@@603 $generated@@605)) $generated@@136)
 :pattern ( ($generated@@603 $generated@@605))
)) (= (type $generated@@604) $generated@@136)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ($generated@@608 Int) ) (!  (=> (= (type $generated@@606) $generated@@136) (= ($generated@@133 $generated@@606 $generated@@607 $generated@@608) ($generated@@133 $generated@@604 $generated@@607 $generated@@608)))
 :pattern ( ($generated@@133 ($generated@@603 $generated@@606) $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@274 $generated@@162)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@273 $generated@@610))) (< ($generated@@529 ($generated@@380 $generated@@153 ($generated@@491 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@529 ($generated@@380 $generated@@153 ($generated@@491 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@296 $generated@@162 $generated@@162)) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@149 $generated@@612 ($generated@@408 $generated@@613 $generated@@614))) (and (and ($generated@@149 ($generated@@294 $generated@@612) ($generated@@243 $generated@@613)) ($generated@@149 ($generated@@337 $generated@@612) ($generated@@243 $generated@@614))) ($generated@@149 ($generated@@379 $generated@@612) ($generated@@243 ($generated@@152 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@408 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@314 $generated@@162 $generated@@162)) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@149 $generated@@615 ($generated@@416 $generated@@616 $generated@@617))) (and (and ($generated@@149 ($generated@@312 $generated@@615) ($generated@@248 $generated@@616)) ($generated@@149 ($generated@@348 $generated@@615) ($generated@@248 $generated@@617))) ($generated@@149 ($generated@@390 $generated@@615) ($generated@@248 ($generated@@152 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@416 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@149 $generated@@618 $generated@@46))
 :pattern ( ($generated@@149 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@149 $generated@@619 $generated@@47))
 :pattern ( ($generated@@149 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@149 $generated@@620 $generated@@44))
 :pattern ( ($generated@@149 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@448) ($generated@@149 $generated@@621 $generated@@45))
 :pattern ( ($generated@@149 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@162) ($generated@@149 $generated@@622 $generated@@48))
 :pattern ( ($generated@@149 $generated@@622 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@623 Int) ($generated@@624 Int) ($generated@@625 Int) ) (!  (=> (or ($generated@@140 ($generated@@135 $generated@@623) ($generated@@135 $generated@@624) ($generated@@135 $generated@@625)) (and (not (= 0 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@623 0) (> $generated@@624 0))))))) (= ($generated@@139 ($generated@@135 $generated@@623) ($generated@@135 $generated@@624) ($generated@@135 $generated@@625)) (= ($generated@@135 ($generated@@255 ($generated@@135 $generated@@623) ($generated@@135 $generated@@624))) ($generated@@135 $generated@@625))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@135 $generated@@623) ($generated@@135 $generated@@624) ($generated@@135 $generated@@625)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Bool)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@632) $generated@@136) (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@642) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@643) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@647) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@648) $generated@@77)) (= (type $generated@@649) ($generated@@179 $generated@@77 $generated@@4))) (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@653) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 87) (let (($generated@@654 true))
(let (($generated@@655  (=> ($generated@@74 ($generated@@8 $generated@@626) $generated@@46 $generated@@627) (=> (and ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@627) ($generated@@74 ($generated@@8 $generated@@629) $generated@@46 $generated@@627)) (and (=> (= (ControlFlow 0 82) (- 0 83)) (> $generated@@628 0)) (=> (= (ControlFlow 0 82) (- 0 81)) (> $generated@@629 0)))))))
(let (($generated@@656  (and (=> (= (ControlFlow 0 67) (- 0 80)) (> $generated@@628 0)) (=> (> $generated@@628 0) (=> (and (and (and ($generated@@259 $generated@@630) ($generated@@631 $generated@@630)) ($generated@@137 ($generated@@135 1) $generated@@628)) (and ($generated@@133 $generated@@632 ($generated@@135 1) $generated@@628) (= $generated@@627 $generated@@630))) (and (=> (= (ControlFlow 0 67) (- 0 79)) (> $generated@@629 0)) (=> (> $generated@@629 0) (=> (and (and (and ($generated@@259 $generated@@633) ($generated@@631 $generated@@633)) (and ($generated@@137 ($generated@@135 1) $generated@@629) ($generated@@133 $generated@@632 ($generated@@135 1) $generated@@629))) (and (and (= $generated@@630 $generated@@633) (= $generated@@634 ($generated@@135 1))) (and ($generated@@74 ($generated@@8 $generated@@634) $generated@@46 $generated@@633) ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@633)))) (and (=> (= (ControlFlow 0 67) (- 0 78)) (> $generated@@634 0)) (and (=> (= (ControlFlow 0 67) (- 0 77)) (> $generated@@628 0)) (=> (and ($generated@@137 ($generated@@135 1) $generated@@628) ($generated@@137 ($generated@@135 1) $generated@@628)) (and (=> (= (ControlFlow 0 67) (- 0 76)) ($generated@@133 $generated@@632 ($generated@@135 1) $generated@@628)) (=> (and (and ($generated@@133 $generated@@632 ($generated@@135 1) $generated@@628) (= $generated@@635 ($generated@@135 1))) (and ($generated@@74 ($generated@@8 $generated@@635) $generated@@46 $generated@@633) ($generated@@74 ($generated@@8 $generated@@629) $generated@@46 $generated@@633))) (and (=> (= (ControlFlow 0 67) (- 0 75)) (> $generated@@635 0)) (and (=> (= (ControlFlow 0 67) (- 0 74)) (> $generated@@629 0)) (=> (and ($generated@@137 ($generated@@135 1) $generated@@629) ($generated@@137 ($generated@@135 1) $generated@@629)) (and (=> (= (ControlFlow 0 67) (- 0 73)) ($generated@@133 $generated@@632 ($generated@@135 1) $generated@@629)) (=> ($generated@@133 $generated@@632 ($generated@@135 1) $generated@@629) (=> (and (and (= $generated@@636 ($generated@@135 1)) ($generated@@74 ($generated@@8 $generated@@636) $generated@@46 $generated@@633)) (and ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@633) ($generated@@74 ($generated@@8 $generated@@629) $generated@@46 $generated@@633))) (and (=> (= (ControlFlow 0 67) (- 0 72)) (> $generated@@628 0)) (and (=> (= (ControlFlow 0 67) (- 0 71)) (> $generated@@629 0)) (=> (and ($generated@@362 ($generated@@135 1) $generated@@628 $generated@@629) ($generated@@362 ($generated@@135 1) $generated@@628 $generated@@629)) (and (=> (= (ControlFlow 0 67) (- 0 70)) (=> ($generated@@362 ($generated@@135 1) $generated@@628 $generated@@629) (or ($generated@@361 ($generated@@135 1) $generated@@628 $generated@@629) ($generated@@0 ($generated@@138 ($generated@@11 (> 1 0))))))) (and (=> (= (ControlFlow 0 67) (- 0 69)) (=> ($generated@@362 ($generated@@135 1) $generated@@628 $generated@@629) (or ($generated@@361 ($generated@@135 1) $generated@@628 $generated@@629) ($generated@@133 $generated@@632 ($generated@@135 1) $generated@@628)))) (and (=> (= (ControlFlow 0 67) (- 0 68)) (=> ($generated@@362 ($generated@@135 1) $generated@@628 $generated@@629) (or ($generated@@361 ($generated@@135 1) $generated@@628 $generated@@629) ($generated@@133 $generated@@632 ($generated@@135 1) $generated@@629)))) (=> (and ($generated@@361 ($generated@@135 1) $generated@@628 $generated@@629) (= (ControlFlow 0 67) (- 0 66))) (exists (($generated@@657 Int) ) (! ($generated@@361 $generated@@657 $generated@@628 $generated@@629)
 :pattern ( ($generated@@361 $generated@@657 $generated@@628 $generated@@629))
))))))))))))))))))))))))))))
(let (($generated@@658  (and (and (=> (= (ControlFlow 0 85) 67) $generated@@656) (=> (= (ControlFlow 0 85) 82) $generated@@655)) (=> (= (ControlFlow 0 85) 84) $generated@@654))))
(let (($generated@@659 true))
(let (($generated@@660  (=> (and (< $generated@@628 $generated@@637) (= (ControlFlow 0 46) 44)) $generated@@659)))
(let (($generated@@661  (=> (and (<= $generated@@637 $generated@@628) (= (ControlFlow 0 45) 44)) $generated@@659)))
(let (($generated@@662  (=> (and (and (not $generated@@638) ($generated@@74 ($generated@@8 $generated@@637) $generated@@46 $generated@@639)) (and ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@639) ($generated@@74 ($generated@@8 $generated@@629) $generated@@46 $generated@@639))) (and (=> (= (ControlFlow 0 47) (- 0 49)) (> $generated@@628 0)) (and (=> (= (ControlFlow 0 47) (- 0 48)) (> $generated@@629 0)) (=> ($generated@@362 $generated@@637 $generated@@628 $generated@@629) (=> (and ($generated@@362 $generated@@637 $generated@@628 $generated@@629) ($generated@@361 $generated@@637 $generated@@628 $generated@@629)) (and (=> (= (ControlFlow 0 47) 45) $generated@@661) (=> (= (ControlFlow 0 47) 46) $generated@@660)))))))))
(let (($generated@@663  (=> ($generated@@362 $generated@@640 $generated@@628 $generated@@629) (and (=> (= (ControlFlow 0 13) (- 0 29)) (or (and ($generated@@149 ($generated@@8 (+ $generated@@637 1)) $generated@@46) (and ($generated@@361 (+ $generated@@637 1) $generated@@628 $generated@@629) (> (+ $generated@@637 1) $generated@@637))) (or (and ($generated@@149 ($generated@@8 ($generated@@135 0)) $generated@@46) (and ($generated@@361 ($generated@@135 0) $generated@@628 $generated@@629) (> 0 $generated@@637))) (exists (($generated@@664 Int) )  (and ($generated@@361 $generated@@664 $generated@@628 $generated@@629) (> $generated@@664 $generated@@637)))))) (=> (or (and ($generated@@149 ($generated@@8 (+ $generated@@637 1)) $generated@@46) (and ($generated@@361 (+ $generated@@637 1) $generated@@628 $generated@@629) (> (+ $generated@@637 1) $generated@@637))) (or (and ($generated@@149 ($generated@@8 ($generated@@135 0)) $generated@@46) (and ($generated@@361 ($generated@@135 0) $generated@@628 $generated@@629) (> 0 $generated@@637))) (exists (($generated@@665 Int) )  (and ($generated@@361 $generated@@665 $generated@@628 $generated@@629) (> $generated@@665 $generated@@637))))) (=> (and (and ($generated@@361 $generated@@641 $generated@@628 $generated@@629) (> $generated@@641 $generated@@637)) (and ($generated@@74 ($generated@@8 $generated@@641) $generated@@46 $generated@@639) ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@639))) (and (=> (= (ControlFlow 0 13) (- 0 28)) (> $generated@@641 0)) (and (=> (= (ControlFlow 0 13) (- 0 27)) (> $generated@@628 0)) (=> (and ($generated@@137 $generated@@641 $generated@@628) ($generated@@137 $generated@@641 $generated@@628)) (and (=> (= (ControlFlow 0 13) (- 0 26)) ($generated@@133 $generated@@632 $generated@@641 $generated@@628)) (=> ($generated@@133 $generated@@632 $generated@@641 $generated@@628) (and (=> (= (ControlFlow 0 13) (- 0 25)) (> $generated@@641 0)) (=> (> $generated@@641 0) (and (=> (= (ControlFlow 0 13) (- 0 24)) (> $generated@@628 0)) (=> (> $generated@@628 0) (=> (and (and (and ($generated@@259 $generated@@642) ($generated@@631 $generated@@642)) ($generated@@137 $generated@@641 $generated@@628)) (and (=> ($generated@@133 $generated@@552 $generated@@641 $generated@@628) (<= $generated@@641 $generated@@628)) (= $generated@@639 $generated@@642))) (and (=> (= (ControlFlow 0 13) (- 0 23)) (<= $generated@@641 $generated@@628)) (=> (<= $generated@@641 $generated@@628) (and (=> (= (ControlFlow 0 13) (- 0 22)) (> $generated@@641 0)) (=> (> $generated@@641 0) (and (=> (= (ControlFlow 0 13) (- 0 21)) (> $generated@@629 0)) (=> (> $generated@@629 0) (=> (and (and (and ($generated@@259 $generated@@643) ($generated@@631 $generated@@643)) ($generated@@137 $generated@@641 $generated@@629)) (and (=> ($generated@@133 $generated@@552 $generated@@641 $generated@@629) (<= $generated@@641 $generated@@629)) (= $generated@@642 $generated@@643))) (and (=> (= (ControlFlow 0 13) (- 0 20)) (<= $generated@@641 $generated@@629)) (=> (<= $generated@@641 $generated@@629) (and (=> (= (ControlFlow 0 13) (- 0 19)) (or (<= 0 $generated@@644) (= (- (+ $generated@@628 $generated@@629) ($generated@@255 ($generated@@135 2) $generated@@641)) $generated@@644))) (=> (or (<= 0 $generated@@644) (= (- (+ $generated@@628 $generated@@629) ($generated@@255 ($generated@@135 2) $generated@@641)) $generated@@644)) (and (=> (= (ControlFlow 0 13) (- 0 18)) (< (- (+ $generated@@628 $generated@@629) ($generated@@255 ($generated@@135 2) $generated@@641)) $generated@@644)) (=> (< (- (+ $generated@@628 $generated@@629) ($generated@@255 ($generated@@135 2) $generated@@641)) $generated@@644) (=> ($generated@@362 $generated@@641 $generated@@628 $generated@@629) (and (=> (= (ControlFlow 0 13) (- 0 17)) (=> $generated@@638 (=> ($generated@@362 $generated@@641 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@641 $generated@@628 $generated@@629) (> $generated@@641 0))))) (=> (=> $generated@@638 (=> ($generated@@362 $generated@@641 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@641 $generated@@628 $generated@@629) (> $generated@@641 0)))) (and (=> (= (ControlFlow 0 13) (- 0 16)) (=> $generated@@638 (=> ($generated@@362 $generated@@641 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@641 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@641 $generated@@628))))) (=> (=> $generated@@638 (=> ($generated@@362 $generated@@641 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@641 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@641 $generated@@628)))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (=> $generated@@638 (=> ($generated@@362 $generated@@641 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@641 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@641 $generated@@629))))) (=> (=> $generated@@638 (=> ($generated@@362 $generated@@641 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@641 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@641 $generated@@629)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (=> $generated@@638 (<= $generated@@641 $generated@@628))) (=> (=> $generated@@638 (<= $generated@@641 $generated@@628)) (=> (= (ControlFlow 0 13) (- 0 12)) (=> $generated@@638 (<= $generated@@641 $generated@@629)))))))))))))))))))))))))))))))))))))))))
(let (($generated@@666  (=> (and (not ($generated@@361 $generated@@640 $generated@@628 $generated@@629)) (= (ControlFlow 0 31) 13)) $generated@@663)))
(let (($generated@@667  (=> (and ($generated@@361 $generated@@640 $generated@@628 $generated@@629) (= (ControlFlow 0 30) 13)) $generated@@663)))
(let (($generated@@668  (=> ($generated@@74 ($generated@@8 $generated@@640) $generated@@46 $generated@@639) (=> (and ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@639) ($generated@@74 ($generated@@8 $generated@@629) $generated@@46 $generated@@639)) (and (=> (= (ControlFlow 0 32) (- 0 34)) (> $generated@@628 0)) (and (=> (= (ControlFlow 0 32) (- 0 33)) (> $generated@@629 0)) (=> ($generated@@362 $generated@@640 $generated@@628 $generated@@629) (and (=> (= (ControlFlow 0 32) 30) $generated@@667) (=> (= (ControlFlow 0 32) 31) $generated@@666)))))))))
(let (($generated@@669 true))
(let (($generated@@670  (=> (exists (($generated@@671 Int) ) (!  (and ($generated@@361 $generated@@671 $generated@@628 $generated@@629) (> $generated@@671 $generated@@637))
 :pattern ( ($generated@@361 $generated@@671 $generated@@628 $generated@@629))
)) (and (=> (= (ControlFlow 0 35) 32) $generated@@668) (=> (= (ControlFlow 0 35) 11) $generated@@669)))))
(let (($generated@@672  (and (=> (= (ControlFlow 0 5) (- 0 8)) (=> ($generated@@362 $generated@@645 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@645 $generated@@628 $generated@@629) (> $generated@@645 0)))) (=> (=> ($generated@@362 $generated@@645 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@645 $generated@@628 $generated@@629) (> $generated@@645 0))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (=> ($generated@@362 $generated@@645 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@645 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@645 $generated@@628)))) (=> (=> ($generated@@362 $generated@@645 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@645 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@645 $generated@@628))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> ($generated@@362 $generated@@645 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@645 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@645 $generated@@629)))) (=> (=> ($generated@@362 $generated@@645 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@645 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@645 $generated@@629))) (=> (= (ControlFlow 0 5) (- 0 4)) (forall (($generated@@673 Int) ) (!  (=> true (=> ($generated@@361 $generated@@673 $generated@@628 $generated@@629) (<= $generated@@673 $generated@@645)))
 :pattern ( ($generated@@361 $generated@@673 $generated@@628 $generated@@629))
)))))))))))
(let (($generated@@674  (=> (not (exists (($generated@@675 Int) ) (!  (and ($generated@@361 $generated@@675 $generated@@628 $generated@@629) (> $generated@@675 $generated@@637))
 :pattern ( ($generated@@361 $generated@@675 $generated@@628 $generated@@629))
))) (=> (and (= $generated@@645 $generated@@637) (= (ControlFlow 0 10) 5)) $generated@@672))))
(let (($generated@@676  (=> (forall (($generated@@677 Int) ) (! ($generated@@362 $generated@@677 $generated@@628 $generated@@629)
 :pattern ( ($generated@@361 $generated@@677 $generated@@628 $generated@@629))
)) (and (=> (= (ControlFlow 0 36) 35) $generated@@670) (=> (= (ControlFlow 0 36) 10) $generated@@674)))))
(let (($generated@@678  (=> (and (not ($generated@@361 $generated@@646 $generated@@628 $generated@@629)) (= (ControlFlow 0 38) 36)) $generated@@676)))
(let (($generated@@679  (=> (and ($generated@@361 $generated@@646 $generated@@628 $generated@@629) (= (ControlFlow 0 37) 36)) $generated@@676)))
(let (($generated@@680  (=> ($generated@@74 ($generated@@8 $generated@@646) $generated@@46 $generated@@639) (=> (and ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@639) ($generated@@74 ($generated@@8 $generated@@629) $generated@@46 $generated@@639)) (and (=> (= (ControlFlow 0 39) (- 0 41)) (> $generated@@628 0)) (and (=> (= (ControlFlow 0 39) (- 0 40)) (> $generated@@629 0)) (=> (and (and (> $generated@@628 0) (> $generated@@629 0)) ($generated@@362 $generated@@646 $generated@@628 $generated@@629)) (and (=> (= (ControlFlow 0 39) 37) $generated@@679) (=> (= (ControlFlow 0 39) 38) $generated@@678)))))))))
(let (($generated@@681  (=> (not ($generated@@0 ($generated@@138 ($generated@@11 true)))) (=> (and (= $generated@@645 $generated@@637) (= (ControlFlow 0 9) 5)) $generated@@672))))
(let (($generated@@682 true))
(let (($generated@@683  (=> (and ($generated@@0 ($generated@@138 ($generated@@11 true))) (= $generated@@644 (- (+ $generated@@628 $generated@@629) ($generated@@255 ($generated@@135 2) $generated@@637)))) (and (=> (= (ControlFlow 0 42) 39) $generated@@680) (=> (= (ControlFlow 0 42) 3) $generated@@682)))))
(let (($generated@@684  (=> $generated@@638 (and (=> (= (ControlFlow 0 43) 9) $generated@@681) (=> (= (ControlFlow 0 43) 42) $generated@@683)))))
(let (($generated@@685  (and (=> (= (ControlFlow 0 50) 47) $generated@@662) (=> (= (ControlFlow 0 50) 43) $generated@@684))))
(let (($generated@@686 true))
(let (($generated@@687  (=> (and ($generated@@259 $generated@@639) ($generated@@631 $generated@@639)) (=> (and (and (and (and (and (and (not false) (<= 1 $generated@@628)) (<= 1 $generated@@629)) (<= 1 $generated@@628)) (<= 1 $generated@@629)) (and (and (=> $generated@@638 ($generated@@362 $generated@@637 $generated@@628 $generated@@629)) (=> $generated@@638 (=> ($generated@@362 $generated@@637 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@637 $generated@@628 $generated@@629) (> $generated@@637 0))))) (and (=> $generated@@638 (=> ($generated@@362 $generated@@637 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@637 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@637 $generated@@628)))) (=> $generated@@638 (=> ($generated@@362 $generated@@637 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@637 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@637 $generated@@629))))))) (and (and (and (=> $generated@@638 (and ($generated@@362 $generated@@637 $generated@@628 $generated@@629) (and ($generated@@361 $generated@@637 $generated@@628 $generated@@629) (and (and (> $generated@@637 0) ($generated@@133 $generated@@552 $generated@@637 $generated@@628)) ($generated@@133 $generated@@552 $generated@@637 $generated@@629))))) (=> $generated@@638 true)) (and (=> $generated@@638 (<= $generated@@637 $generated@@628)) (=> $generated@@638 (<= $generated@@637 $generated@@629)))) (and (and (= $generated@@647 $generated@@639) (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@67 (type $generated@@689))))
 (=> (and (and (= (type $generated@@688) $generated@@77) (= (type $generated@@689) ($generated@@66 $generated@@690))) (and (not (= $generated@@688 $generated@@648)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@647 $generated@@688) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@639 $generated@@688) $generated@@689) ($generated@@83 ($generated@@81 $generated@@647 $generated@@688) $generated@@689)) ($generated@@0 ($generated@@177 $generated@@649 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@639 $generated@@688) $generated@@689))
))) (and (<= (- (+ $generated@@628 $generated@@629) ($generated@@255 ($generated@@135 2) $generated@@637)) $generated@@650) (=> (= (- (+ $generated@@628 $generated@@629) ($generated@@255 ($generated@@135 2) $generated@@637)) $generated@@650) true))))) (and (=> (= (ControlFlow 0 51) 2) $generated@@686) (=> (= (ControlFlow 0 51) 50) $generated@@685))))))
(let (($generated@@691  (=> ($generated@@74 ($generated@@8 $generated@@651) $generated@@46 $generated@@627) (=> (and ($generated@@74 ($generated@@8 $generated@@628) $generated@@46 $generated@@627) ($generated@@74 ($generated@@8 $generated@@629) $generated@@46 $generated@@627)) (and (=> (= (ControlFlow 0 52) (- 0 64)) (> $generated@@628 0)) (and (=> (= (ControlFlow 0 52) (- 0 63)) (> $generated@@629 0)) (=> (and ($generated@@362 $generated@@651 $generated@@628 $generated@@629) ($generated@@362 $generated@@651 $generated@@628 $generated@@629)) (and (=> (= (ControlFlow 0 52) (- 0 62)) (or (and ($generated@@149 ($generated@@8 ($generated@@135 0)) $generated@@46) ($generated@@361 ($generated@@135 0) $generated@@628 $generated@@629)) (exists (($generated@@692 Int) ) ($generated@@361 $generated@@692 $generated@@628 $generated@@629)))) (=> (or (and ($generated@@149 ($generated@@8 ($generated@@135 0)) $generated@@46) ($generated@@361 ($generated@@135 0) $generated@@628 $generated@@629)) (exists (($generated@@693 Int) ) ($generated@@361 $generated@@693 $generated@@628 $generated@@629))) (=> ($generated@@361 $generated@@652 $generated@@628 $generated@@629) (and (=> (= (ControlFlow 0 52) (- 0 61)) (> $generated@@652 0)) (=> (> $generated@@652 0) (and (=> (= (ControlFlow 0 52) (- 0 60)) (> $generated@@628 0)) (=> (> $generated@@628 0) (=> (and (and (and ($generated@@259 $generated@@653) ($generated@@631 $generated@@653)) ($generated@@137 $generated@@652 $generated@@628)) (and (=> ($generated@@133 $generated@@552 $generated@@652 $generated@@628) (<= $generated@@652 $generated@@628)) (= $generated@@627 $generated@@653))) (and (=> (= (ControlFlow 0 52) (- 0 59)) (> $generated@@652 0)) (=> (> $generated@@652 0) (and (=> (= (ControlFlow 0 52) (- 0 58)) (> $generated@@629 0)) (=> (> $generated@@629 0) (=> (and ($generated@@259 $generated@@647) ($generated@@631 $generated@@647)) (=> (and (and ($generated@@137 $generated@@652 $generated@@629) (=> ($generated@@133 $generated@@552 $generated@@652 $generated@@629) (<= $generated@@652 $generated@@629))) (and (= $generated@@653 $generated@@647) (= $generated@@650 (- (+ $generated@@628 $generated@@629) ($generated@@255 ($generated@@135 2) $generated@@652))))) (and (=> (= (ControlFlow 0 52) (- 0 57)) (=> $generated@@638 (=> ($generated@@362 $generated@@652 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@652 $generated@@628 $generated@@629) (> $generated@@652 0))))) (=> (=> $generated@@638 (=> ($generated@@362 $generated@@652 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@652 $generated@@628 $generated@@629) (> $generated@@652 0)))) (and (=> (= (ControlFlow 0 52) (- 0 56)) (=> $generated@@638 (=> ($generated@@362 $generated@@652 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@652 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@652 $generated@@628))))) (=> (=> $generated@@638 (=> ($generated@@362 $generated@@652 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@652 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@652 $generated@@628)))) (and (=> (= (ControlFlow 0 52) (- 0 55)) (=> $generated@@638 (=> ($generated@@362 $generated@@652 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@652 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@652 $generated@@629))))) (=> (=> $generated@@638 (=> ($generated@@362 $generated@@652 $generated@@628 $generated@@629) (or ($generated@@361 $generated@@652 $generated@@628 $generated@@629) ($generated@@133 $generated@@632 $generated@@652 $generated@@629)))) (and (=> (= (ControlFlow 0 52) (- 0 54)) (=> $generated@@638 (<= $generated@@652 $generated@@628))) (=> (=> $generated@@638 (<= $generated@@652 $generated@@628)) (and (=> (= (ControlFlow 0 52) (- 0 53)) (=> $generated@@638 (<= $generated@@652 $generated@@629))) (=> (=> $generated@@638 (<= $generated@@652 $generated@@629)) (=> (= (ControlFlow 0 52) 51) $generated@@687))))))))))))))))))))))))))))))))
(let (($generated@@694 true))
(let (($generated@@695  (=> (=> ($generated@@0 ($generated@@138 ($generated@@11 true))) (exists (($generated@@696 Int) ) (! ($generated@@361 $generated@@696 $generated@@628 $generated@@629)
 :pattern ( ($generated@@361 $generated@@696 $generated@@628 $generated@@629))
))) (and (=> (= (ControlFlow 0 65) 52) $generated@@691) (=> (= (ControlFlow 0 65) 1) $generated@@694)))))
(let (($generated@@697  (=> (= ($generated@@603 $generated@@552) $generated@@552) (=> (and (= ($generated@@603 $generated@@632) $generated@@632) (= $generated@@649 ($generated@@178 $generated@@648 $generated@@627 $generated@@60 false))) (and (=> (= (ControlFlow 0 86) 85) $generated@@658) (=> (= (ControlFlow 0 86) 65) $generated@@695))))))
(let (($generated@@698  (=> (and ($generated@@259 $generated@@627) ($generated@@631 $generated@@627)) (=> (and (and (= 3 $generated@@132) (> $generated@@628 0)) (and (> $generated@@629 0) (= (ControlFlow 0 87) 86))) $generated@@697))))
$generated@@698)))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@395 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@224) ($generated@@0 ($generated@@76 $generated@@278 $generated@@281))) ($generated@@222 $generated@@281 $generated@@279 $generated@@280))
 :pattern ( ($generated@@76 $generated@@278 $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@224) ($generated@@0 ($generated@@76 $generated@@284 $generated@@287))) ($generated@@222 $generated@@287 $generated@@285 $generated@@286))
 :pattern ( ($generated@@76 $generated@@284 $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@131) (or ($generated@@132 $generated@@289 $generated@@290) (and (not (= 1 $generated@@127)) (and (> $generated@@289 0) (> $generated@@290 0))))) true)
 :pattern ( ($generated@@128 $generated@@288 $generated@@289 $generated@@290))
))))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))) (and ($generated@@222 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@222 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))) (and ($generated@@222 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@222 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@251 (type $generated@@317))))
(let (($generated@@319 ($generated@@250 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@249 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@248 $generated@@319 $generated@@318)) (= ($generated@@247 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@247 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@214 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@213 $generated@@321)) (<= 0 ($generated@@212 $generated@@320))))
 :pattern ( ($generated@@212 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@291 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@291 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@291 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@291 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@303 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@303 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@303 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@303 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@214 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@213 $generated@@224)) (= (type $generated@@349) $generated@@61)) (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@212 $generated@@348))) ($generated@@222 ($generated@@343 $generated@@348 $generated@@351) $generated@@349 $generated@@350))
 :pattern ( ($generated@@343 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@353 Int) ) (! (= ($generated@@352 ($generated@@70 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@70 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@276 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@276 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@276 $generated@@357)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@282 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@282 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@282 $generated@@361)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@363 ($generated@@362 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@362 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@362 $generated@@367)) $generated@@56))
 :pattern ( ($generated@@362 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@368 ($generated@@342 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@342 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@371)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@371))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated@@372 $generated@@376 ($generated@@223 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@223 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@315 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 Int) ($generated@@380 Int) ) (! (= ($generated@@207 $generated@@379 $generated@@380) (* $generated@@379 $generated@@380))
 :pattern ( ($generated@@207 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@382) $generated@@61)) (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@381 $generated@@384)))) ($generated@@222 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@76 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@386)) ($generated@@133 ($generated@@223 $generated@@386)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@386)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@214 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@213 $generated@@388)) (= ($generated@@212 $generated@@387) 0)) (= $generated@@387 ($generated@@211 $generated@@388))))
 :pattern ( ($generated@@212 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@2)) ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@3)) ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@4)) ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
)))
(assert (= ($generated@@1 $generated@@395) 18))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@395)) ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@224)) ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@131)
 :pattern ( ($generated@@400 $generated@@402))
)) (= (type $generated@@401) $generated@@131)))
(assert (forall (($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (= (type $generated@@403) $generated@@131) (= ($generated@@128 $generated@@403 $generated@@404 $generated@@405) ($generated@@128 $generated@@401 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@128 ($generated@@400 $generated@@403) $generated@@404 $generated@@405))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@406 Int) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (= ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))) ($generated@@130 $generated@@408))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 (T@U) Bool)
(declare-fun $generated@@416 () T@U)
(declare-fun $generated@@417 (T@U) Bool)
(declare-fun $generated@@418 () Int)
(assert  (and (and (and (and (and (= (type $generated@@409) $generated@@131) (= (type $generated@@410) $generated@@131)) (= (type $generated@@411) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@419  (=> (and (= ($generated@@400 $generated@@409) $generated@@409) (= ($generated@@400 $generated@@410) $generated@@410)) (=> (and (and (and (= $generated@@411 ($generated@@150 $generated@@412 $generated@@413 $generated@@60 false)) (> $generated@@414 0)) (and ($generated@@415 $generated@@416) ($generated@@417 $generated@@416))) (and (and (= $generated@@413 $generated@@416) (= $generated@@418 ($generated@@130 1))) (and ($generated@@69 ($generated@@8 $generated@@418) $generated@@46 $generated@@416) ($generated@@69 ($generated@@8 $generated@@414) $generated@@46 $generated@@416)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@418 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@414 0)))))))
(let (($generated@@420  (=> (and (and ($generated@@415 $generated@@413) ($generated@@417 $generated@@413)) (and (= 2 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@419)))
$generated@@420)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@395 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@224) ($generated@@0 ($generated@@76 $generated@@278 $generated@@281))) ($generated@@222 $generated@@281 $generated@@279 $generated@@280))
 :pattern ( ($generated@@76 $generated@@278 $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@224) ($generated@@0 ($generated@@76 $generated@@284 $generated@@287))) ($generated@@222 $generated@@287 $generated@@285 $generated@@286))
 :pattern ( ($generated@@76 $generated@@284 $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@131) (or ($generated@@132 $generated@@289 $generated@@290) (and (not (= 1 $generated@@127)) (and (> $generated@@289 0) (> $generated@@290 0))))) true)
 :pattern ( ($generated@@128 $generated@@288 $generated@@289 $generated@@290))
))))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))) (and ($generated@@222 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@222 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))) (and ($generated@@222 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@222 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@251 (type $generated@@317))))
(let (($generated@@319 ($generated@@250 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@249 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@248 $generated@@319 $generated@@318)) (= ($generated@@247 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@247 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@214 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@213 $generated@@321)) (<= 0 ($generated@@212 $generated@@320))))
 :pattern ( ($generated@@212 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@291 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@291 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@291 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@291 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@303 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@303 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@303 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@303 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@214 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@213 $generated@@224)) (= (type $generated@@349) $generated@@61)) (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@212 $generated@@348))) ($generated@@222 ($generated@@343 $generated@@348 $generated@@351) $generated@@349 $generated@@350))
 :pattern ( ($generated@@343 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@353 Int) ) (! (= ($generated@@352 ($generated@@70 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@70 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@276 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@276 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@276 $generated@@357)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@282 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@282 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@282 $generated@@361)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@363 ($generated@@362 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@362 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@362 $generated@@367)) $generated@@56))
 :pattern ( ($generated@@362 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@368 ($generated@@342 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@342 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@371)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@371))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated@@372 $generated@@376 ($generated@@223 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@223 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@315 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 Int) ($generated@@380 Int) ) (! (= ($generated@@207 $generated@@379 $generated@@380) (* $generated@@379 $generated@@380))
 :pattern ( ($generated@@207 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@382) $generated@@61)) (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@381 $generated@@384)))) ($generated@@222 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@76 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@386)) ($generated@@133 ($generated@@223 $generated@@386)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@386)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@214 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@213 $generated@@388)) (= ($generated@@212 $generated@@387) 0)) (= $generated@@387 ($generated@@211 $generated@@388))))
 :pattern ( ($generated@@212 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@2)) ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@3)) ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@4)) ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
)))
(assert (= ($generated@@1 $generated@@395) 18))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@395)) ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@224)) ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@131)
 :pattern ( ($generated@@400 $generated@@402))
)) (= (type $generated@@401) $generated@@131)))
(assert (forall (($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (= (type $generated@@403) $generated@@131) (= ($generated@@128 $generated@@403 $generated@@404 $generated@@405) ($generated@@128 $generated@@401 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@128 ($generated@@400 $generated@@403) $generated@@404 $generated@@405))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@406 Int) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (= ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))) ($generated@@130 $generated@@408))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 (T@U) Bool)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@417 () T@U)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@409) $generated@@131) (= (type $generated@@410) $generated@@131)) (= (type $generated@@411) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@415) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@417) $generated@@131)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@420  (=> (= ($generated@@400 $generated@@409) $generated@@409) (=> (and (and (= ($generated@@400 $generated@@410) $generated@@410) (= $generated@@411 ($generated@@150 $generated@@412 $generated@@413 $generated@@60 false))) (and ($generated@@414 $generated@@415) ($generated@@416 $generated@@415))) (=> (and (and (and (= $generated@@413 $generated@@415) (= $generated@@409 ($generated@@129 $generated@@417))) (and (= $generated@@410 ($generated@@129 ($generated@@129 $generated@@417))) (= ($generated@@400 $generated@@417) $generated@@417))) (and (and ($generated@@69 ($generated@@8 $generated@@418) $generated@@46 $generated@@415) (= $generated@@419 ($generated@@130 1))) (and ($generated@@69 ($generated@@8 $generated@@419) $generated@@46 $generated@@415) ($generated@@69 ($generated@@8 $generated@@418) $generated@@46 $generated@@415)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (> $generated@@418 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@419 0)) (=> (and ($generated@@135 $generated@@418 ($generated@@130 1) $generated@@418) ($generated@@135 $generated@@418 ($generated@@130 1) $generated@@418)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@135 $generated@@418 ($generated@@130 1) $generated@@418) (or ($generated@@134 $generated@@418 ($generated@@130 1) $generated@@418) (= ($generated@@207 $generated@@418 ($generated@@130 1)) $generated@@418)))) (=> (and ($generated@@134 $generated@@418 ($generated@@130 1) $generated@@418) (= (ControlFlow 0 2) (- 0 1))) ($generated@@128 $generated@@410 ($generated@@130 1) $generated@@418)))))))))))
(let (($generated@@421  (=> (and (and (and ($generated@@414 $generated@@413) ($generated@@416 $generated@@413)) (= 2 $generated@@127)) (and (> $generated@@418 0) (= (ControlFlow 0 6) 2))) $generated@@420)))
$generated@@421)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 (Int Int) Bool)
(declare-fun $generated@@210 (Int Int) Bool)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@216 (Int Int) Int)
(declare-fun $generated@@224 (T@T) T@U)
(declare-fun $generated@@225 (T@U) Int)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T T@T) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@289 (Int Int Int) Bool)
(declare-fun $generated@@290 (Int Int Int) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U Int) T@U)
(declare-fun $generated@@375 (T@U) Int)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@422 () T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (= (type $generated@@212) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@212) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@213 0) (> $generated@@214 0))))))))) (and ($generated@@210 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (= ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (let (($generated@@215 ($generated@@211 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214))))
$generated@@215))))
 :weight 3
 :pattern ( ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) ($generated@@208 $generated@@212))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@217 Int) ($generated@@218 Int) ($generated@@219 Int) ) (!  (=> (or ($generated@@135 $generated@@217 $generated@@218 $generated@@219) (and (not (= 0 $generated@@127)) (and (> $generated@@217 0) (> $generated@@218 0)))) (= ($generated@@134 $generated@@217 $generated@@218 $generated@@219) (= ($generated@@216 $generated@@217 $generated@@218) $generated@@219)))
 :pattern ( ($generated@@134 $generated@@217 $generated@@218 $generated@@219))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@220 T@U) ($generated@@221 Int) ($generated@@222 Int) ) (!  (=> (and (= (type $generated@@220) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 $generated@@221 $generated@@222) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@220) (and (> $generated@@221 0) (> $generated@@222 0)))))) (and ($generated@@210 $generated@@221 $generated@@222) (= ($generated@@207 $generated@@221 $generated@@222) (let (($generated@@223 ($generated@@211 $generated@@221 $generated@@222)))
$generated@@223))))
 :pattern ( ($generated@@207 $generated@@221 $generated@@222) ($generated@@208 $generated@@220))
))))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@228)) 14)) (forall (($generated@@229 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@226 $generated@@229))
))) (forall (($generated@@230 T@T) ) (! (= (type ($generated@@224 $generated@@230)) ($generated@@226 $generated@@230))
 :pattern ( ($generated@@224 $generated@@230))
))))
(assert (forall (($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@231)) 0)
 :pattern ( ($generated@@224 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ($generated@@234 Int) ) (!  (=> (= (type $generated@@232) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234) ($generated@@128 $generated@@232 $generated@@233 $generated@@234)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 15) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@236 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@61) (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241) ($generated@@69 $generated@@239 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (and (and (and (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@247 $generated@@248)) 16)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@244 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@244 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@245 (type $generated@@253))))
(= (type ($generated@@242 $generated@@253)) ($generated@@71 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@242 $generated@@253))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= (type ($generated@@243 $generated@@255 $generated@@256)) ($generated@@244 $generated@@255 $generated@@256))
 :pattern ( ($generated@@243 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@T) ) (! (let (($generated@@259 (type $generated@@257)))
 (not ($generated@@0 ($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257))))
 :pattern ( (let (($generated@@259 (type $generated@@257)))
($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257)))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 17)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@71 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@246 (type $generated@@278))))
(let (($generated@@280 ($generated@@245 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@244 $generated@@280 $generated@@279)) (or (= $generated@@278 ($generated@@243 $generated@@280 $generated@@279)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@278) $generated@@281)))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@242 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@264 (type $generated@@282))))
(let (($generated@@284 ($generated@@263 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@262 $generated@@284 $generated@@283)) (or (= $generated@@282 ($generated@@261 $generated@@284 $generated@@283)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@282) $generated@@285)))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@260 $generated@@282))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@286 Int) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@135 $generated@@286 $generated@@287 $generated@@288) (and (not (= 0 $generated@@127)) (and (> $generated@@286 0) (> $generated@@287 0)))) true)
 :pattern ( ($generated@@134 $generated@@286 $generated@@287 $generated@@288))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@291 Int) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (or ($generated@@290 $generated@@291 $generated@@292 $generated@@293) (and (not (= 2 $generated@@127)) (and (> $generated@@292 0) (> $generated@@293 0)))) true)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 Int) ($generated@@295 Int) ) (!  (=> ($generated@@210 $generated@@294 $generated@@295) (and ($generated@@289 ($generated@@211 $generated@@294 $generated@@295) $generated@@294 $generated@@295) (forall (($generated@@296 Int) ) (!  (=> true (=> ($generated@@289 $generated@@296 $generated@@294 $generated@@295) (<= $generated@@296 ($generated@@211 $generated@@294 $generated@@295))))
 :pattern ( ($generated@@289 $generated@@296 $generated@@294 $generated@@295))
))))
 :pattern ( ($generated@@211 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@299) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@237) ($generated@@0 ($generated@@76 $generated@@299 $generated@@302))) ($generated@@235 $generated@@302 $generated@@300 $generated@@301))
 :pattern ( ($generated@@76 $generated@@299 $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@305) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@306) $generated@@61)) (= (type $generated@@307) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@237) ($generated@@0 ($generated@@76 $generated@@305 $generated@@308))) ($generated@@235 $generated@@308 $generated@@306 $generated@@307))
 :pattern ( ($generated@@76 $generated@@305 $generated@@308))
))))
 :pattern ( ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@309 T@U) ($generated@@310 Int) ($generated@@311 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@131) (or ($generated@@132 $generated@@310 $generated@@311) (and (not (= 1 $generated@@127)) (and (> $generated@@310 0) (> $generated@@311 0))))) true)
 :pattern ( ($generated@@128 $generated@@309 $generated@@310 $generated@@311))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@312 Int) ($generated@@313 Int) ) (!  (=> (or ($generated@@209 $generated@@312 $generated@@313) (and (not (= 5 $generated@@127)) (and (> $generated@@312 0) (> $generated@@313 0)))) true)
 :pattern ( ($generated@@207 $generated@@312 $generated@@313))
))))
(assert  (and (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@246 (type $generated@@318))))
(let (($generated@@320 ($generated@@245 (type $generated@@318))))
(= (type ($generated@@315 $generated@@318)) ($generated@@71 $generated@@320 $generated@@319))))
 :pattern ( ($generated@@315 $generated@@318))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (= (type $generated@@321) ($generated@@244 $generated@@237 $generated@@237)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))) (and ($generated@@235 ($generated@@76 ($generated@@315 $generated@@321) $generated@@325) $generated@@323 $generated@@324) ($generated@@235 $generated@@325 $generated@@322 $generated@@324)))
 :pattern ( ($generated@@76 ($generated@@315 $generated@@321) $generated@@325))
 :pattern ( ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324))
)))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@264 (type $generated@@330))))
(let (($generated@@332 ($generated@@263 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@262 $generated@@237 $generated@@237)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))) (and ($generated@@235 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@235 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@71 $generated@@339 $generated@@4))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@264 (type $generated@@340))))
(let (($generated@@342 ($generated@@263 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@262 $generated@@342 $generated@@341)) (= (= $generated@@340 ($generated@@261 $generated@@342 $generated@@341)) (= ($generated@@260 $generated@@340) ($generated@@338 $generated@@342))))))
 :pattern ( ($generated@@260 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@227 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@226 $generated@@344)) (<= 0 ($generated@@225 $generated@@343))))
 :pattern ( ($generated@@225 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@61) (= (type $generated@@348) $generated@@61)) (= ($generated@@345 ($generated@@314 $generated@@347 $generated@@348)) $generated@@347))
 :pattern ( ($generated@@314 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@61) (= (type $generated@@352) $generated@@61)) (= ($generated@@349 ($generated@@314 $generated@@351 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@314 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@67 ($generated@@314 $generated@@353 $generated@@354)) $generated@@58))
 :pattern ( ($generated@@314 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@61) (= (type $generated@@358) $generated@@61)) (= ($generated@@355 ($generated@@326 $generated@@357 $generated@@358)) $generated@@357))
 :pattern ( ($generated@@326 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@61) (= (type $generated@@362) $generated@@61)) (= ($generated@@359 ($generated@@326 $generated@@361 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@61) (= (type $generated@@364) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@363 $generated@@364)) $generated@@59))
 :pattern ( ($generated@@326 $generated@@363 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (! (let (($generated@@370 ($generated@@227 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368 $generated@@369)) $generated@@370))
 :pattern ( ($generated@@366 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@226 $generated@@237)) (= (type $generated@@372) $generated@@61)) (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373) (forall (($generated@@374 Int) ) (!  (=> (and (<= 0 $generated@@374) (< $generated@@374 ($generated@@225 $generated@@371))) ($generated@@235 ($generated@@366 $generated@@371 $generated@@374) $generated@@372 $generated@@373))
 :pattern ( ($generated@@366 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@376 Int) ) (! (= ($generated@@375 ($generated@@70 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@70 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@61)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@61) (= ($generated@@377 ($generated@@297 $generated@@379)) $generated@@379))
 :pattern ( ($generated@@297 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@61) (= ($generated@@67 ($generated@@297 $generated@@380)) $generated@@54))
 :pattern ( ($generated@@297 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@61) (= ($generated@@381 ($generated@@303 $generated@@383)) $generated@@383))
 :pattern ( ($generated@@303 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@61) (= ($generated@@67 ($generated@@303 $generated@@384)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) $generated@@61)
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) $generated@@61)
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@61) (= ($generated@@386 ($generated@@385 $generated@@389)) $generated@@389))
 :pattern ( ($generated@@385 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@67 ($generated@@385 $generated@@390)) $generated@@56))
 :pattern ( ($generated@@385 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (= (type ($generated@@391 $generated@@392)) $generated@@61)
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@61) (= ($generated@@391 ($generated@@365 $generated@@393)) $generated@@393))
 :pattern ( ($generated@@365 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@67 ($generated@@365 $generated@@394)) $generated@@57))
 :pattern ( ($generated@@365 $generated@@394))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated@@395 $generated@@399 ($generated@@236 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@236 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (not ($generated@@0 ($generated@@76 ($generated@@338 $generated@@401) $generated@@400))))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@76 ($generated@@338 $generated@@401) $generated@@400)))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@216 $generated@@402 $generated@@403) (* $generated@@402 $generated@@403))
 :pattern ( ($generated@@216 $generated@@402 $generated@@403))
)))
(assert (= (type $generated@@404) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@405 Int) ($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@290 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@405 0)))) (and ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) (=> ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))) (= ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))  (and (and (> $generated@@405 0) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406))) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))))
 :weight 3
 :pattern ( ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@71 $generated@@237 $generated@@2)) (= (type $generated@@409) $generated@@61)) (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@237) (< 0 ($generated ($generated@@76 $generated@@408 $generated@@411)))) ($generated@@235 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@76 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 Int) ) (! (= ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))) ($generated@@133 ($generated@@236 ($generated@@8 $generated@@412))))
 :pattern ( ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))))
)))
(assert (forall (($generated@@413 T@U) ) (! (= ($generated@@236 ($generated@@133 $generated@@413)) ($generated@@133 ($generated@@236 $generated@@413)))
 :pattern ( ($generated@@236 ($generated@@133 $generated@@413)))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@227 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@226 $generated@@415)) (= ($generated@@225 $generated@@414) 0)) (= $generated@@414 ($generated@@224 $generated@@415))))
 :pattern ( ($generated@@225 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@417) $generated@@2)) ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
 :pattern ( ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@419) $generated@@3)) ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
 :pattern ( ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@421) $generated@@4)) ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
 :pattern ( ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
)))
(assert (= ($generated@@1 $generated@@422) 18))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@422)) ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@426) $generated@@237)) ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
 :pattern ( ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@427 Int) ($generated@@428 Int) ($generated@@429 Int) ) (!  (=> (or ($generated@@290 $generated@@427 $generated@@428 $generated@@429) (and (not (= 2 $generated@@127)) (and (> $generated@@428 0) (> $generated@@429 0)))) (and (=> (> $generated@@427 0) (and ($generated@@132 $generated@@427 $generated@@428) (=> ($generated@@128 $generated@@404 $generated@@427 $generated@@428) ($generated@@132 $generated@@427 $generated@@429)))) (= ($generated@@289 $generated@@427 $generated@@428 $generated@@429)  (and (and (> $generated@@427 0) ($generated@@128 $generated@@404 $generated@@427 $generated@@428)) ($generated@@128 $generated@@404 $generated@@427 $generated@@429)))))
 :pattern ( ($generated@@289 $generated@@427 $generated@@428 $generated@@429))
))))
(assert  (and (forall (($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@432)) $generated@@131)
 :pattern ( ($generated@@430 $generated@@432))
)) (= (type $generated@@431) $generated@@131)))
(assert (forall (($generated@@433 T@U) ($generated@@434 Int) ($generated@@435 Int) ) (!  (=> (= (type $generated@@433) $generated@@131) (= ($generated@@128 $generated@@433 $generated@@434 $generated@@435) ($generated@@128 $generated@@431 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@128 ($generated@@430 $generated@@433) $generated@@434 $generated@@435))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@436 Int) ($generated@@437 Int) ($generated@@438 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@436 0) (> $generated@@437 0))))))) (= ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (= ($generated@@130 ($generated@@216 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437))) ($generated@@130 $generated@@438))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@439 () T@U)
(declare-fun $generated@@440 () T@U)
(declare-fun $generated@@441 () T@U)
(declare-fun $generated@@442 () T@U)
(declare-fun $generated@@443 () Int)
(declare-fun $generated@@444 () T@U)
(declare-fun $generated@@445 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@439) $generated@@131) (= (type $generated@@440) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@441) $generated@@72)) (= (type $generated@@442) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@444) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@446  (=> (and (and (= ($generated@@430 $generated@@404) $generated@@404) (= ($generated@@430 $generated@@439) $generated@@439)) (and (= $generated@@440 ($generated@@150 $generated@@441 $generated@@442 $generated@@60 false)) (> $generated@@443 0))) (=> (and (and (and ($generated@@208 $generated@@444) ($generated@@445 $generated@@444)) (= $generated@@442 $generated@@444)) (and ($generated@@69 ($generated@@8 $generated@@443) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@443) $generated@@46 $generated@@444))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@443 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@443 0)))))))
(let (($generated@@447  (=> (and (and ($generated@@208 $generated@@442) ($generated@@445 $generated@@442)) (and (= 6 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@446)))
$generated@@447)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 (Int Int) Bool)
(declare-fun $generated@@210 (Int Int) Bool)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@216 (Int Int) Int)
(declare-fun $generated@@224 (T@T) T@U)
(declare-fun $generated@@225 (T@U) Int)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T T@T) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@289 (Int Int Int) Bool)
(declare-fun $generated@@290 (Int Int Int) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U Int) T@U)
(declare-fun $generated@@375 (T@U) Int)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@422 () T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (= (type $generated@@212) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@212) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@213 0) (> $generated@@214 0))))))))) (and ($generated@@210 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (= ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (let (($generated@@215 ($generated@@211 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214))))
$generated@@215))))
 :weight 3
 :pattern ( ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) ($generated@@208 $generated@@212))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@217 Int) ($generated@@218 Int) ($generated@@219 Int) ) (!  (=> (or ($generated@@135 $generated@@217 $generated@@218 $generated@@219) (and (not (= 0 $generated@@127)) (and (> $generated@@217 0) (> $generated@@218 0)))) (= ($generated@@134 $generated@@217 $generated@@218 $generated@@219) (= ($generated@@216 $generated@@217 $generated@@218) $generated@@219)))
 :pattern ( ($generated@@134 $generated@@217 $generated@@218 $generated@@219))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@220 T@U) ($generated@@221 Int) ($generated@@222 Int) ) (!  (=> (and (= (type $generated@@220) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 $generated@@221 $generated@@222) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@220) (and (> $generated@@221 0) (> $generated@@222 0)))))) (and ($generated@@210 $generated@@221 $generated@@222) (= ($generated@@207 $generated@@221 $generated@@222) (let (($generated@@223 ($generated@@211 $generated@@221 $generated@@222)))
$generated@@223))))
 :pattern ( ($generated@@207 $generated@@221 $generated@@222) ($generated@@208 $generated@@220))
))))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@228)) 14)) (forall (($generated@@229 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@226 $generated@@229))
))) (forall (($generated@@230 T@T) ) (! (= (type ($generated@@224 $generated@@230)) ($generated@@226 $generated@@230))
 :pattern ( ($generated@@224 $generated@@230))
))))
(assert (forall (($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@231)) 0)
 :pattern ( ($generated@@224 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ($generated@@234 Int) ) (!  (=> (= (type $generated@@232) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234) ($generated@@128 $generated@@232 $generated@@233 $generated@@234)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 15) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@236 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@61) (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241) ($generated@@69 $generated@@239 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (and (and (and (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@247 $generated@@248)) 16)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@244 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@244 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@245 (type $generated@@253))))
(= (type ($generated@@242 $generated@@253)) ($generated@@71 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@242 $generated@@253))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= (type ($generated@@243 $generated@@255 $generated@@256)) ($generated@@244 $generated@@255 $generated@@256))
 :pattern ( ($generated@@243 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@T) ) (! (let (($generated@@259 (type $generated@@257)))
 (not ($generated@@0 ($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257))))
 :pattern ( (let (($generated@@259 (type $generated@@257)))
($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257)))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 17)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@71 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@246 (type $generated@@278))))
(let (($generated@@280 ($generated@@245 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@244 $generated@@280 $generated@@279)) (or (= $generated@@278 ($generated@@243 $generated@@280 $generated@@279)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@278) $generated@@281)))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@242 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@264 (type $generated@@282))))
(let (($generated@@284 ($generated@@263 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@262 $generated@@284 $generated@@283)) (or (= $generated@@282 ($generated@@261 $generated@@284 $generated@@283)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@282) $generated@@285)))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@260 $generated@@282))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@286 Int) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@135 $generated@@286 $generated@@287 $generated@@288) (and (not (= 0 $generated@@127)) (and (> $generated@@286 0) (> $generated@@287 0)))) true)
 :pattern ( ($generated@@134 $generated@@286 $generated@@287 $generated@@288))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@291 Int) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (or ($generated@@290 $generated@@291 $generated@@292 $generated@@293) (and (not (= 2 $generated@@127)) (and (> $generated@@292 0) (> $generated@@293 0)))) true)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 Int) ($generated@@295 Int) ) (!  (=> ($generated@@210 $generated@@294 $generated@@295) (and ($generated@@289 ($generated@@211 $generated@@294 $generated@@295) $generated@@294 $generated@@295) (forall (($generated@@296 Int) ) (!  (=> true (=> ($generated@@289 $generated@@296 $generated@@294 $generated@@295) (<= $generated@@296 ($generated@@211 $generated@@294 $generated@@295))))
 :pattern ( ($generated@@289 $generated@@296 $generated@@294 $generated@@295))
))))
 :pattern ( ($generated@@211 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@299) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@237) ($generated@@0 ($generated@@76 $generated@@299 $generated@@302))) ($generated@@235 $generated@@302 $generated@@300 $generated@@301))
 :pattern ( ($generated@@76 $generated@@299 $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@305) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@306) $generated@@61)) (= (type $generated@@307) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@237) ($generated@@0 ($generated@@76 $generated@@305 $generated@@308))) ($generated@@235 $generated@@308 $generated@@306 $generated@@307))
 :pattern ( ($generated@@76 $generated@@305 $generated@@308))
))))
 :pattern ( ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@309 T@U) ($generated@@310 Int) ($generated@@311 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@131) (or ($generated@@132 $generated@@310 $generated@@311) (and (not (= 1 $generated@@127)) (and (> $generated@@310 0) (> $generated@@311 0))))) true)
 :pattern ( ($generated@@128 $generated@@309 $generated@@310 $generated@@311))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@312 Int) ($generated@@313 Int) ) (!  (=> (or ($generated@@209 $generated@@312 $generated@@313) (and (not (= 5 $generated@@127)) (and (> $generated@@312 0) (> $generated@@313 0)))) true)
 :pattern ( ($generated@@207 $generated@@312 $generated@@313))
))))
(assert  (and (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@246 (type $generated@@318))))
(let (($generated@@320 ($generated@@245 (type $generated@@318))))
(= (type ($generated@@315 $generated@@318)) ($generated@@71 $generated@@320 $generated@@319))))
 :pattern ( ($generated@@315 $generated@@318))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (= (type $generated@@321) ($generated@@244 $generated@@237 $generated@@237)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))) (and ($generated@@235 ($generated@@76 ($generated@@315 $generated@@321) $generated@@325) $generated@@323 $generated@@324) ($generated@@235 $generated@@325 $generated@@322 $generated@@324)))
 :pattern ( ($generated@@76 ($generated@@315 $generated@@321) $generated@@325))
 :pattern ( ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324))
)))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@264 (type $generated@@330))))
(let (($generated@@332 ($generated@@263 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@262 $generated@@237 $generated@@237)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))) (and ($generated@@235 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@235 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@71 $generated@@339 $generated@@4))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@264 (type $generated@@340))))
(let (($generated@@342 ($generated@@263 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@262 $generated@@342 $generated@@341)) (= (= $generated@@340 ($generated@@261 $generated@@342 $generated@@341)) (= ($generated@@260 $generated@@340) ($generated@@338 $generated@@342))))))
 :pattern ( ($generated@@260 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@227 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@226 $generated@@344)) (<= 0 ($generated@@225 $generated@@343))))
 :pattern ( ($generated@@225 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@61) (= (type $generated@@348) $generated@@61)) (= ($generated@@345 ($generated@@314 $generated@@347 $generated@@348)) $generated@@347))
 :pattern ( ($generated@@314 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@61) (= (type $generated@@352) $generated@@61)) (= ($generated@@349 ($generated@@314 $generated@@351 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@314 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@67 ($generated@@314 $generated@@353 $generated@@354)) $generated@@58))
 :pattern ( ($generated@@314 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@61) (= (type $generated@@358) $generated@@61)) (= ($generated@@355 ($generated@@326 $generated@@357 $generated@@358)) $generated@@357))
 :pattern ( ($generated@@326 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@61) (= (type $generated@@362) $generated@@61)) (= ($generated@@359 ($generated@@326 $generated@@361 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@61) (= (type $generated@@364) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@363 $generated@@364)) $generated@@59))
 :pattern ( ($generated@@326 $generated@@363 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (! (let (($generated@@370 ($generated@@227 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368 $generated@@369)) $generated@@370))
 :pattern ( ($generated@@366 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@226 $generated@@237)) (= (type $generated@@372) $generated@@61)) (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373) (forall (($generated@@374 Int) ) (!  (=> (and (<= 0 $generated@@374) (< $generated@@374 ($generated@@225 $generated@@371))) ($generated@@235 ($generated@@366 $generated@@371 $generated@@374) $generated@@372 $generated@@373))
 :pattern ( ($generated@@366 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@376 Int) ) (! (= ($generated@@375 ($generated@@70 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@70 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@61)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@61) (= ($generated@@377 ($generated@@297 $generated@@379)) $generated@@379))
 :pattern ( ($generated@@297 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@61) (= ($generated@@67 ($generated@@297 $generated@@380)) $generated@@54))
 :pattern ( ($generated@@297 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@61) (= ($generated@@381 ($generated@@303 $generated@@383)) $generated@@383))
 :pattern ( ($generated@@303 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@61) (= ($generated@@67 ($generated@@303 $generated@@384)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) $generated@@61)
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) $generated@@61)
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@61) (= ($generated@@386 ($generated@@385 $generated@@389)) $generated@@389))
 :pattern ( ($generated@@385 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@67 ($generated@@385 $generated@@390)) $generated@@56))
 :pattern ( ($generated@@385 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (= (type ($generated@@391 $generated@@392)) $generated@@61)
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@61) (= ($generated@@391 ($generated@@365 $generated@@393)) $generated@@393))
 :pattern ( ($generated@@365 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@67 ($generated@@365 $generated@@394)) $generated@@57))
 :pattern ( ($generated@@365 $generated@@394))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated@@395 $generated@@399 ($generated@@236 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@236 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (not ($generated@@0 ($generated@@76 ($generated@@338 $generated@@401) $generated@@400))))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@76 ($generated@@338 $generated@@401) $generated@@400)))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@216 $generated@@402 $generated@@403) (* $generated@@402 $generated@@403))
 :pattern ( ($generated@@216 $generated@@402 $generated@@403))
)))
(assert (= (type $generated@@404) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@405 Int) ($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@290 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@405 0)))) (and ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) (=> ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))) (= ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))  (and (and (> $generated@@405 0) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406))) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))))
 :weight 3
 :pattern ( ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@71 $generated@@237 $generated@@2)) (= (type $generated@@409) $generated@@61)) (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@237) (< 0 ($generated ($generated@@76 $generated@@408 $generated@@411)))) ($generated@@235 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@76 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 Int) ) (! (= ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))) ($generated@@133 ($generated@@236 ($generated@@8 $generated@@412))))
 :pattern ( ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))))
)))
(assert (forall (($generated@@413 T@U) ) (! (= ($generated@@236 ($generated@@133 $generated@@413)) ($generated@@133 ($generated@@236 $generated@@413)))
 :pattern ( ($generated@@236 ($generated@@133 $generated@@413)))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@227 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@226 $generated@@415)) (= ($generated@@225 $generated@@414) 0)) (= $generated@@414 ($generated@@224 $generated@@415))))
 :pattern ( ($generated@@225 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@417) $generated@@2)) ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
 :pattern ( ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@419) $generated@@3)) ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
 :pattern ( ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@421) $generated@@4)) ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
 :pattern ( ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
)))
(assert (= ($generated@@1 $generated@@422) 18))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@422)) ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@426) $generated@@237)) ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
 :pattern ( ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@427 Int) ($generated@@428 Int) ($generated@@429 Int) ) (!  (=> (or ($generated@@290 $generated@@427 $generated@@428 $generated@@429) (and (not (= 2 $generated@@127)) (and (> $generated@@428 0) (> $generated@@429 0)))) (and (=> (> $generated@@427 0) (and ($generated@@132 $generated@@427 $generated@@428) (=> ($generated@@128 $generated@@404 $generated@@427 $generated@@428) ($generated@@132 $generated@@427 $generated@@429)))) (= ($generated@@289 $generated@@427 $generated@@428 $generated@@429)  (and (and (> $generated@@427 0) ($generated@@128 $generated@@404 $generated@@427 $generated@@428)) ($generated@@128 $generated@@404 $generated@@427 $generated@@429)))))
 :pattern ( ($generated@@289 $generated@@427 $generated@@428 $generated@@429))
))))
(assert  (and (forall (($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@432)) $generated@@131)
 :pattern ( ($generated@@430 $generated@@432))
)) (= (type $generated@@431) $generated@@131)))
(assert (forall (($generated@@433 T@U) ($generated@@434 Int) ($generated@@435 Int) ) (!  (=> (= (type $generated@@433) $generated@@131) (= ($generated@@128 $generated@@433 $generated@@434 $generated@@435) ($generated@@128 $generated@@431 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@128 ($generated@@430 $generated@@433) $generated@@434 $generated@@435))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@436 Int) ($generated@@437 Int) ($generated@@438 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@436 0) (> $generated@@437 0))))))) (= ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (= ($generated@@130 ($generated@@216 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437))) ($generated@@130 $generated@@438))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@439 () Int)
(declare-fun $generated@@440 () Int)
(declare-fun $generated@@441 () T@U)
(declare-fun $generated@@442 () T@U)
(declare-fun $generated@@443 () T@U)
(declare-fun $generated@@444 (T@U) Bool)
(declare-fun $generated@@445 () Int)
(declare-fun $generated@@446 () T@U)
(declare-fun $generated@@447 () T@U)
(declare-fun $generated@@448 () T@U)
(declare-fun $generated@@449 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@441) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@442) $generated@@131)) (= (type $generated@@443) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@446) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@447) $generated@@72)) (= (type $generated@@448) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@449) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 41) (let (($generated@@450  (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@207 $generated@@439 $generated@@439) $generated@@439))))
(let (($generated@@451  (=> (forall (($generated@@452 Int) ) (!  (=> (> $generated@@452 0) ($generated@@290 $generated@@452 $generated@@439 $generated@@439))
 :pattern ( ($generated@@289 $generated@@452 $generated@@439 $generated@@439))
)) (and (=> (= (ControlFlow 0 4) (- 0 10)) (forall (($generated@@453 Int) ) (!  (=> true (=> (and (> $generated@@453 0) ($generated@@289 $generated@@453 $generated@@439 $generated@@439)) (<= $generated@@453 $generated@@440)))
 :pattern ( ($generated@@289 $generated@@453 $generated@@439 $generated@@439))
))) (=> (forall (($generated@@454 Int) ) (!  (=> true (=> (and (> $generated@@454 0) ($generated@@289 $generated@@454 $generated@@439 $generated@@439)) (<= $generated@@454 $generated@@440)))
 :pattern ( ($generated@@289 $generated@@454 $generated@@439 $generated@@439))
)) (=> (and ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@441) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (> $generated@@440 0)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (> $generated@@439 0)) (=> (and ($generated@@132 $generated@@440 $generated@@439) ($generated@@132 $generated@@440 $generated@@439)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@128 $generated@@442 $generated@@440 $generated@@439)) (=> ($generated@@128 $generated@@442 $generated@@440 $generated@@439) (and (=> (= (ControlFlow 0 4) (- 0 6)) (> $generated@@440 0)) (=> (> $generated@@440 0) (and (=> (= (ControlFlow 0 4) (- 0 5)) (> $generated@@439 0)) (=> (> $generated@@439 0) (=> (and ($generated@@208 $generated@@443) ($generated@@444 $generated@@443)) (=> (and (and ($generated@@132 $generated@@440 $generated@@439) (=> ($generated@@128 $generated@@404 $generated@@440 $generated@@439) (<= $generated@@440 $generated@@439))) (and (= $generated@@441 $generated@@443) (= (ControlFlow 0 4) 3))) $generated@@450)))))))))))))))))
(let (($generated@@455  (=> (and (not (and (> $generated@@445 0) ($generated@@289 $generated@@445 $generated@@439 $generated@@439))) (= (ControlFlow 0 12) 4)) $generated@@451)))
(let (($generated@@456  (=> (and (and (> $generated@@445 0) ($generated@@289 $generated@@445 $generated@@439 $generated@@439)) (= (ControlFlow 0 11) 4)) $generated@@451)))
(let (($generated@@457  (=> (>= 0 $generated@@445) (and (=> (= (ControlFlow 0 16) 11) $generated@@456) (=> (= (ControlFlow 0 16) 12) $generated@@455)))))
(let (($generated@@458  (=> (and (and (> $generated@@445 0) ($generated@@69 ($generated@@8 $generated@@445) $generated@@46 $generated@@441)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (> $generated@@439 0)) (=> ($generated@@290 $generated@@445 $generated@@439 $generated@@439) (and (=> (= (ControlFlow 0 13) 11) $generated@@456) (=> (= (ControlFlow 0 13) 12) $generated@@455))))))))
(let (($generated@@459  (and (=> (= (ControlFlow 0 17) 13) $generated@@458) (=> (= (ControlFlow 0 17) 16) $generated@@457))))
(let (($generated@@460 true))
(let (($generated@@461  (=> (=> (> $generated@@440 0) ($generated@@290 $generated@@440 $generated@@439 $generated@@439)) (and (=> (= (ControlFlow 0 18) (- 0 22)) (> $generated@@440 0)) (and (=> (= (ControlFlow 0 18) (- 0 21)) (=> ($generated@@290 $generated@@440 $generated@@439 $generated@@439) (or ($generated@@289 $generated@@440 $generated@@439 $generated@@439) (> $generated@@440 0)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> ($generated@@290 $generated@@440 $generated@@439 $generated@@439) (or ($generated@@289 $generated@@440 $generated@@439 $generated@@439) ($generated@@128 $generated@@442 $generated@@440 $generated@@439)))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> ($generated@@290 $generated@@440 $generated@@439 $generated@@439) (or ($generated@@289 $generated@@440 $generated@@439 $generated@@439) ($generated@@128 $generated@@442 $generated@@440 $generated@@439)))) (=> (and (> $generated@@440 0) ($generated@@289 $generated@@440 $generated@@439 $generated@@439)) (and (=> (= (ControlFlow 0 18) 17) $generated@@459) (=> (= (ControlFlow 0 18) 1) $generated@@460))))))))))
(let (($generated@@462  (=> (and (>= 0 $generated@@440) (= (ControlFlow 0 26) 18)) $generated@@461)))
(let (($generated@@463  (=> (and (and (> $generated@@440 0) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@441)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441))) (and (=> (= (ControlFlow 0 23) (- 0 25)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 23) (- 0 24)) (> $generated@@439 0)) (=> (and ($generated@@290 $generated@@440 $generated@@439 $generated@@439) (= (ControlFlow 0 23) 18)) $generated@@461))))))
(let (($generated@@464  (=> (= ($generated@@430 $generated@@404) $generated@@404) (=> (and (= ($generated@@430 $generated@@442) $generated@@442) (= $generated@@446 ($generated@@150 $generated@@447 $generated@@448 $generated@@60 false))) (and (=> (= (ControlFlow 0 27) (- 0 40)) (> $generated@@439 0)) (=> (> $generated@@439 0) (=> (and (and (and ($generated@@208 $generated@@449) ($generated@@444 $generated@@449)) ($generated@@132 $generated@@439 $generated@@439)) (and (and ($generated@@128 $generated@@442 $generated@@439 $generated@@439) (= $generated@@448 $generated@@449)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@449) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@449)))) (and (=> (= (ControlFlow 0 27) (- 0 39)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 27) (- 0 38)) (> $generated@@439 0)) (=> (and ($generated@@132 $generated@@439 $generated@@439) ($generated@@132 $generated@@439 $generated@@439)) (and (=> (= (ControlFlow 0 27) (- 0 37)) ($generated@@128 $generated@@442 $generated@@439 $generated@@439)) (=> ($generated@@128 $generated@@442 $generated@@439 $generated@@439) (and (=> (= (ControlFlow 0 27) (- 0 36)) (> $generated@@439 0)) (=> (> $generated@@439 0) (and (=> (= (ControlFlow 0 27) (- 0 35)) (> $generated@@439 0)) (=> (> $generated@@439 0) (=> (and (and (and ($generated@@208 $generated@@441) ($generated@@444 $generated@@441)) (and ($generated@@132 $generated@@439 $generated@@439) (=> ($generated@@128 $generated@@404 $generated@@439 $generated@@439) (<= $generated@@439 $generated@@439)))) (and (and (= $generated@@449 $generated@@441) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441)))) (and (=> (= (ControlFlow 0 27) (- 0 34)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 27) (- 0 33)) (> $generated@@439 0)) (=> (and ($generated@@290 $generated@@439 $generated@@439 $generated@@439) ($generated@@290 $generated@@439 $generated@@439 $generated@@439)) (and (=> (= (ControlFlow 0 27) (- 0 32)) (=> ($generated@@290 $generated@@439 $generated@@439 $generated@@439) (or ($generated@@289 $generated@@439 $generated@@439 $generated@@439) (> $generated@@439 0)))) (and (=> (= (ControlFlow 0 27) (- 0 31)) (=> ($generated@@290 $generated@@439 $generated@@439 $generated@@439) (or ($generated@@289 $generated@@439 $generated@@439 $generated@@439) ($generated@@128 $generated@@442 $generated@@439 $generated@@439)))) (and (=> (= (ControlFlow 0 27) (- 0 30)) (=> ($generated@@290 $generated@@439 $generated@@439 $generated@@439) (or ($generated@@289 $generated@@439 $generated@@439 $generated@@439) ($generated@@128 $generated@@442 $generated@@439 $generated@@439)))) (=> ($generated@@289 $generated@@439 $generated@@439 $generated@@439) (=> (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441)) (and (=> (= (ControlFlow 0 27) (- 0 29)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 27) (- 0 28)) (> $generated@@439 0)) (=> (and (and (and (> $generated@@439 0) (> $generated@@439 0)) ($generated@@209 $generated@@439 $generated@@439)) (and ($generated@@209 $generated@@439 $generated@@439) (= $generated@@440 ($generated@@207 $generated@@439 $generated@@439)))) (and (=> (= (ControlFlow 0 27) 23) $generated@@463) (=> (= (ControlFlow 0 27) 26) $generated@@462))))))))))))))))))))))))))))))
(let (($generated@@465  (=> (and (and (and ($generated@@208 $generated@@448) ($generated@@444 $generated@@448)) (= 6 $generated@@127)) (and (> $generated@@439 0) (= (ControlFlow 0 41) 27))) $generated@@464)))
$generated@@465))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@395 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@224) ($generated@@0 ($generated@@76 $generated@@278 $generated@@281))) ($generated@@222 $generated@@281 $generated@@279 $generated@@280))
 :pattern ( ($generated@@76 $generated@@278 $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@224) ($generated@@0 ($generated@@76 $generated@@284 $generated@@287))) ($generated@@222 $generated@@287 $generated@@285 $generated@@286))
 :pattern ( ($generated@@76 $generated@@284 $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@131) (or ($generated@@132 $generated@@289 $generated@@290) (and (not (= 1 $generated@@127)) (and (> $generated@@289 0) (> $generated@@290 0))))) true)
 :pattern ( ($generated@@128 $generated@@288 $generated@@289 $generated@@290))
))))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))) (and ($generated@@222 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@222 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))) (and ($generated@@222 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@222 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@251 (type $generated@@317))))
(let (($generated@@319 ($generated@@250 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@249 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@248 $generated@@319 $generated@@318)) (= ($generated@@247 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@247 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@214 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@213 $generated@@321)) (<= 0 ($generated@@212 $generated@@320))))
 :pattern ( ($generated@@212 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@291 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@291 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@291 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@291 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@303 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@303 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@303 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@303 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@214 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@213 $generated@@224)) (= (type $generated@@349) $generated@@61)) (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@212 $generated@@348))) ($generated@@222 ($generated@@343 $generated@@348 $generated@@351) $generated@@349 $generated@@350))
 :pattern ( ($generated@@343 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@353 Int) ) (! (= ($generated@@352 ($generated@@70 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@70 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@276 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@276 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@276 $generated@@357)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@282 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@282 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@282 $generated@@361)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@363 ($generated@@362 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@362 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@362 $generated@@367)) $generated@@56))
 :pattern ( ($generated@@362 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@368 ($generated@@342 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@342 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@371)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@371))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated@@372 $generated@@376 ($generated@@223 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@223 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@315 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 Int) ($generated@@380 Int) ) (! (= ($generated@@207 $generated@@379 $generated@@380) (* $generated@@379 $generated@@380))
 :pattern ( ($generated@@207 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@382) $generated@@61)) (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@381 $generated@@384)))) ($generated@@222 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@76 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@386)) ($generated@@133 ($generated@@223 $generated@@386)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@386)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@214 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@213 $generated@@388)) (= ($generated@@212 $generated@@387) 0)) (= $generated@@387 ($generated@@211 $generated@@388))))
 :pattern ( ($generated@@212 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@2)) ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@3)) ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@4)) ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
)))
(assert (= ($generated@@1 $generated@@395) 18))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@395)) ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@224)) ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@131)
 :pattern ( ($generated@@400 $generated@@402))
)) (= (type $generated@@401) $generated@@131)))
(assert (forall (($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (= (type $generated@@403) $generated@@131) (= ($generated@@128 $generated@@403 $generated@@404 $generated@@405) ($generated@@128 $generated@@401 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@128 ($generated@@400 $generated@@403) $generated@@404 $generated@@405))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@406 Int) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (= ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))) ($generated@@130 $generated@@408))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 (T@U) Bool)
(declare-fun $generated@@416 () T@U)
(declare-fun $generated@@417 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@409) $generated@@131) (= (type $generated@@410) $generated@@131)) (= (type $generated@@411) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@418  (=> (and (and (= ($generated@@400 $generated@@409) $generated@@409) (= ($generated@@400 $generated@@410) $generated@@410)) (and (= $generated@@411 ($generated@@150 $generated@@412 $generated@@413 $generated@@60 false)) (> $generated@@414 0))) (=> (and (and (and ($generated@@415 $generated@@416) ($generated@@417 $generated@@416)) (= $generated@@413 $generated@@416)) (and ($generated@@69 ($generated@@8 $generated@@414) $generated@@46 $generated@@416) ($generated@@69 ($generated@@8 $generated@@414) $generated@@46 $generated@@416))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@414 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@414 0)))))))
(let (($generated@@419  (=> (and (and ($generated@@415 $generated@@413) ($generated@@417 $generated@@413)) (and (= 2 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@418)))
$generated@@419)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@395 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@224) ($generated@@0 ($generated@@76 $generated@@278 $generated@@281))) ($generated@@222 $generated@@281 $generated@@279 $generated@@280))
 :pattern ( ($generated@@76 $generated@@278 $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@224) ($generated@@0 ($generated@@76 $generated@@284 $generated@@287))) ($generated@@222 $generated@@287 $generated@@285 $generated@@286))
 :pattern ( ($generated@@76 $generated@@284 $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@131) (or ($generated@@132 $generated@@289 $generated@@290) (and (not (= 1 $generated@@127)) (and (> $generated@@289 0) (> $generated@@290 0))))) true)
 :pattern ( ($generated@@128 $generated@@288 $generated@@289 $generated@@290))
))))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))) (and ($generated@@222 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@222 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))) (and ($generated@@222 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@222 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@251 (type $generated@@317))))
(let (($generated@@319 ($generated@@250 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@249 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@248 $generated@@319 $generated@@318)) (= ($generated@@247 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@247 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@214 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@213 $generated@@321)) (<= 0 ($generated@@212 $generated@@320))))
 :pattern ( ($generated@@212 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@291 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@291 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@291 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@291 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@303 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@303 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@303 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@303 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@214 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@213 $generated@@224)) (= (type $generated@@349) $generated@@61)) (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@212 $generated@@348))) ($generated@@222 ($generated@@343 $generated@@348 $generated@@351) $generated@@349 $generated@@350))
 :pattern ( ($generated@@343 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@353 Int) ) (! (= ($generated@@352 ($generated@@70 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@70 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@276 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@276 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@276 $generated@@357)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@282 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@282 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@282 $generated@@361)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@363 ($generated@@362 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@362 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@362 $generated@@367)) $generated@@56))
 :pattern ( ($generated@@362 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@368 ($generated@@342 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@342 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@371)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@371))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated@@372 $generated@@376 ($generated@@223 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@223 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@315 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 Int) ($generated@@380 Int) ) (! (= ($generated@@207 $generated@@379 $generated@@380) (* $generated@@379 $generated@@380))
 :pattern ( ($generated@@207 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@382) $generated@@61)) (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@381 $generated@@384)))) ($generated@@222 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@76 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@386)) ($generated@@133 ($generated@@223 $generated@@386)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@386)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@214 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@213 $generated@@388)) (= ($generated@@212 $generated@@387) 0)) (= $generated@@387 ($generated@@211 $generated@@388))))
 :pattern ( ($generated@@212 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@2)) ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@3)) ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@4)) ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
)))
(assert (= ($generated@@1 $generated@@395) 18))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@395)) ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@224)) ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@131)
 :pattern ( ($generated@@400 $generated@@402))
)) (= (type $generated@@401) $generated@@131)))
(assert (forall (($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (= (type $generated@@403) $generated@@131) (= ($generated@@128 $generated@@403 $generated@@404 $generated@@405) ($generated@@128 $generated@@401 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@128 ($generated@@400 $generated@@403) $generated@@404 $generated@@405))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@406 Int) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (= ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))) ($generated@@130 $generated@@408))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 (T@U) Bool)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@417 () T@U)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@409) $generated@@131) (= (type $generated@@410) $generated@@131)) (= (type $generated@@411) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@415) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@417) $generated@@131)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@420  (=> (= ($generated@@400 $generated@@409) $generated@@409) (=> (and (and (= ($generated@@400 $generated@@410) $generated@@410) (= $generated@@411 ($generated@@150 $generated@@412 $generated@@413 $generated@@60 false))) (and ($generated@@414 $generated@@415) ($generated@@416 $generated@@415))) (=> (and (and (and (= $generated@@413 $generated@@415) (= $generated@@409 ($generated@@129 $generated@@417))) (and (= $generated@@410 ($generated@@129 ($generated@@129 $generated@@417))) (= ($generated@@400 $generated@@417) $generated@@417))) (and (and (= $generated@@418 ($generated@@130 1)) ($generated@@69 ($generated@@8 $generated@@418) $generated@@46 $generated@@415)) (and ($generated@@69 ($generated@@8 $generated@@419) $generated@@46 $generated@@415) ($generated@@69 ($generated@@8 $generated@@419) $generated@@46 $generated@@415)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (> $generated@@418 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@419 0)) (=> (and ($generated@@135 ($generated@@130 1) $generated@@419 $generated@@419) ($generated@@135 ($generated@@130 1) $generated@@419 $generated@@419)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@135 ($generated@@130 1) $generated@@419 $generated@@419) (or ($generated@@134 ($generated@@130 1) $generated@@419 $generated@@419) (= ($generated@@207 ($generated@@130 1) $generated@@419) $generated@@419)))) (=> (and ($generated@@134 ($generated@@130 1) $generated@@419 $generated@@419) (= (ControlFlow 0 2) (- 0 1))) ($generated@@128 $generated@@410 $generated@@419 $generated@@419)))))))))))
(let (($generated@@421  (=> (and (and (and ($generated@@414 $generated@@413) ($generated@@416 $generated@@413)) (= 2 $generated@@127)) (and (> $generated@@419 0) (= (ControlFlow 0 6) 2))) $generated@@420)))
$generated@@421)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@395 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@224) ($generated@@0 ($generated@@76 $generated@@278 $generated@@281))) ($generated@@222 $generated@@281 $generated@@279 $generated@@280))
 :pattern ( ($generated@@76 $generated@@278 $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@224) ($generated@@0 ($generated@@76 $generated@@284 $generated@@287))) ($generated@@222 $generated@@287 $generated@@285 $generated@@286))
 :pattern ( ($generated@@76 $generated@@284 $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@131) (or ($generated@@132 $generated@@289 $generated@@290) (and (not (= 1 $generated@@127)) (and (> $generated@@289 0) (> $generated@@290 0))))) true)
 :pattern ( ($generated@@128 $generated@@288 $generated@@289 $generated@@290))
))))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))) (and ($generated@@222 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@222 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))) (and ($generated@@222 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@222 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@251 (type $generated@@317))))
(let (($generated@@319 ($generated@@250 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@249 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@248 $generated@@319 $generated@@318)) (= ($generated@@247 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@247 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@214 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@213 $generated@@321)) (<= 0 ($generated@@212 $generated@@320))))
 :pattern ( ($generated@@212 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@291 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@291 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@291 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@291 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@303 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@303 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@303 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@303 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@214 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@213 $generated@@224)) (= (type $generated@@349) $generated@@61)) (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@212 $generated@@348))) ($generated@@222 ($generated@@343 $generated@@348 $generated@@351) $generated@@349 $generated@@350))
 :pattern ( ($generated@@343 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@353 Int) ) (! (= ($generated@@352 ($generated@@70 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@70 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@276 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@276 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@276 $generated@@357)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@282 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@282 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@282 $generated@@361)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@363 ($generated@@362 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@362 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@362 $generated@@367)) $generated@@56))
 :pattern ( ($generated@@362 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@368 ($generated@@342 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@342 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@371)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@371))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated@@372 $generated@@376 ($generated@@223 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@223 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@315 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 Int) ($generated@@380 Int) ) (! (= ($generated@@207 $generated@@379 $generated@@380) (* $generated@@379 $generated@@380))
 :pattern ( ($generated@@207 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@382) $generated@@61)) (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@381 $generated@@384)))) ($generated@@222 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@76 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@386)) ($generated@@133 ($generated@@223 $generated@@386)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@386)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@214 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@213 $generated@@388)) (= ($generated@@212 $generated@@387) 0)) (= $generated@@387 ($generated@@211 $generated@@388))))
 :pattern ( ($generated@@212 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@2)) ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@3)) ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@4)) ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
)))
(assert (= ($generated@@1 $generated@@395) 18))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@395)) ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@224)) ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@131)
 :pattern ( ($generated@@400 $generated@@402))
)) (= (type $generated@@401) $generated@@131)))
(assert (forall (($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (= (type $generated@@403) $generated@@131) (= ($generated@@128 $generated@@403 $generated@@404 $generated@@405) ($generated@@128 $generated@@401 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@128 ($generated@@400 $generated@@403) $generated@@404 $generated@@405))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@406 Int) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (= ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))) ($generated@@130 $generated@@408))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () Int)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () Int)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 () T@U)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 () T@U)
(declare-fun $generated@@417 (T@U) Bool)
(declare-fun $generated@@418 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@412) $generated@@131)) (= (type $generated@@413) $generated@@131)) (= (type $generated@@414) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@415) $generated@@72)) (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@419 true))
(let (($generated@@420  (=> (and ($generated@@69 ($generated@@8 $generated@@409) $generated@@46 $generated@@410) ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@410)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@409 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@411 0))))))
(let (($generated@@421  (=> (= ($generated@@400 $generated@@412) $generated@@412) (=> (and (and (and (= ($generated@@400 $generated@@413) $generated@@413) (= $generated@@414 ($generated@@150 $generated@@415 $generated@@416 $generated@@60 false))) (and (> $generated@@409 0) (> $generated@@411 0))) (and (and ($generated@@417 $generated@@410) ($generated@@418 $generated@@410)) (= $generated@@416 $generated@@410))) (and (=> (= (ControlFlow 0 5) 2) $generated@@420) (=> (= (ControlFlow 0 5) 4) $generated@@419))))))
(let (($generated@@422  (=> (and (and ($generated@@417 $generated@@416) ($generated@@418 $generated@@416)) (and (= 2 $generated@@127) (= (ControlFlow 0 6) 5))) $generated@@421)))
$generated@@422)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U Int Int) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (Int Int) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (Int Int Int) Bool)
(declare-fun $generated@@52 (Int Int Int) Bool)
(declare-fun $generated@@66 (T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@181 (Int Int) Int)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 (T@T T@U) T@U)
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (= ($generated@@1 $generated@@48) 6) (forall (($generated@@53 T@U) ) (! (= (type ($generated@@46 $generated@@53)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@53))
))) (forall (($generated@@54 T@U) ) (! (let (($generated@@55 (type $generated@@54)))
(= (type ($generated@@50 $generated@@54)) $generated@@55))
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@56 T@U) ($generated@@57 Int) ($generated@@58 Int) ) (!  (=> (and (= (type $generated@@56) $generated@@48) (or ($generated@@49 ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)) (and (not (= 1 $generated@@44)) ($generated@@0 ($generated@@50 ($generated@@11  (and (> $generated@@57 0) (> $generated@@58 0)))))))) (and (forall (($generated@@59 Int) ) (!  (=> (> $generated@@59 0) ($generated@@52 $generated@@59 ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)))
 :pattern ( ($generated@@51 $generated@@59 $generated@@57 $generated@@58))
)) (= ($generated@@45 ($generated@@46 $generated@@56) ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)) (exists (($generated@@60 Int) ) (!  (and (> $generated@@60 0) ($generated@@51 $generated@@60 ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)))
 :pattern ( ($generated@@51 $generated@@60 $generated@@57 $generated@@58))
)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@46 $generated@@56) ($generated@@47 $generated@@57) ($generated@@47 $generated@@58)))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@61 T@U) ($generated@@62 Int) ($generated@@63 Int) ) (!  (=> (and (= (type $generated@@61) $generated@@48) (or ($generated@@49 $generated@@62 $generated@@63) (and (not (= 1 $generated@@44)) (and (> $generated@@62 0) (> $generated@@63 0))))) (and (forall (($generated@@64 Int) ) (!  (=> (> $generated@@64 0) ($generated@@52 $generated@@64 $generated@@62 $generated@@63))
 :pattern ( ($generated@@51 $generated@@64 $generated@@62 $generated@@63))
)) (= ($generated@@45 ($generated@@46 $generated@@61) $generated@@62 $generated@@63) (exists (($generated@@65 Int) ) (!  (and (> $generated@@65 0) ($generated@@51 $generated@@65 $generated@@62 $generated@@63))
 :pattern ( ($generated@@51 $generated@@65 $generated@@62 $generated@@63))
)))))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@61) $generated@@62 $generated@@63))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@83 $generated@@84)) 7)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@75 ($generated@@70 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@70 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@76 ($generated@@70 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@70 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@76 (type $generated@@89))))
(= (type ($generated@@74 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@74 $generated@@89 $generated@@90))
))) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 (type $generated@@94)))
(let (($generated@@96 (type $generated@@93)))
(= (type ($generated@@77 $generated@@92 $generated@@93 $generated@@94)) ($generated@@70 $generated@@96 $generated@@95))))
 :pattern ( ($generated@@77 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@76 (type $generated@@97))))
 (=> (= (type $generated@@99) $generated@@100) (= ($generated@@74 ($generated@@77 $generated@@97 $generated@@98 $generated@@99) $generated@@98) $generated@@99)))
 :weight 0
))) (and (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@103 $generated@@104) (= ($generated@@74 ($generated@@77 $generated@@102 $generated@@103 $generated@@101) $generated@@104) ($generated@@74 $generated@@102 $generated@@104)))
 :weight 0
)) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or true (= ($generated@@74 ($generated@@77 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@74 $generated@@106 $generated@@108)))
 :weight 0
)))) (forall (($generated@@109 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@109)) 8))) (forall (($generated@@110 T@T) ) (! (= ($generated@@68 ($generated@@72 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@72 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@68 (type $generated@@112))))
(= (type ($generated@@73 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@73 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@71) 9)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@78 $generated@@114 $generated@@115 $generated@@116)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@68 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@73 ($generated@@78 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@73 ($generated@@78 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@73 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@73 ($generated@@78 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@73 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@69) 10)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@129 $generated@@130)) 11))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@80 ($generated@@79 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@79 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@81 ($generated@@79 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@79 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@81 (type $generated@@135))))
(= (type ($generated@@66 $generated@@135 $generated@@136 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@66 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(let (($generated@@144 (type $generated@@140)))
(= (type ($generated@@82 $generated@@139 $generated@@140 $generated@@141 $generated@@142)) ($generated@@79 $generated@@144 $generated@@143))))
 :pattern ( ($generated@@82 $generated@@139 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@81 (type $generated@@145))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@66 ($generated@@82 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@146 $generated@@147) $generated@@148)))
 :weight 0
))) (and (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@66 ($generated@@82 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@66 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@66 ($generated@@82 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@66 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
))) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or true (= ($generated@@66 ($generated@@82 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@66 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)))) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ) (! (= (type ($generated@@67 $generated@@168 $generated@@169 $generated@@170 $generated@@171)) ($generated@@79 $generated@@69 $generated@@4))
 :pattern ( ($generated@@67 $generated@@168 $generated@@169 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@68 (type $generated@@177))))
 (=> (and (and (and (and (= (type $generated@@172) $generated@@69) (= (type $generated@@173) ($generated@@70 $generated@@69 $generated@@71))) (= (type $generated@@174) ($generated@@72 $generated@@4))) (= (type $generated@@176) $generated@@69)) (= (type $generated@@177) ($generated@@72 $generated@@178))) (= ($generated@@0 ($generated@@66 ($generated@@67 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (not (= $generated@@176 $generated@@172)) ($generated@@0 ($generated@@73 ($generated@@74 $generated@@173 $generated@@176) $generated@@174))) $generated@@175))))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@47 $generated@@179) $generated@@179)
 :pattern ( ($generated@@47 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@50 $generated@@180) $generated@@180)
 :pattern ( ($generated@@50 $generated@@180))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@182 Int) ($generated@@183 Int) ($generated@@184 Int) ) (!  (=> (or ($generated@@52 $generated@@182 $generated@@183 $generated@@184) (and (not (= 0 $generated@@44)) (and (> $generated@@182 0) (> $generated@@183 0)))) (= ($generated@@51 $generated@@182 $generated@@183 $generated@@184) (= ($generated@@181 $generated@@182 $generated@@183) $generated@@184)))
 :pattern ( ($generated@@51 $generated@@182 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ($generated@@187 Int) ) (!  (=> (= (type $generated@@185) $generated@@48) (= ($generated@@45 ($generated@@46 $generated@@185) $generated@@186 $generated@@187) ($generated@@45 $generated@@185 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@185) $generated@@186 $generated@@187))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@188 Int) ($generated@@189 Int) ($generated@@190 Int) ) (!  (=> (or ($generated@@52 $generated@@188 $generated@@189 $generated@@190) (and (not (= 0 $generated@@44)) (and (> $generated@@188 0) (> $generated@@189 0)))) true)
 :pattern ( ($generated@@51 $generated@@188 $generated@@189 $generated@@190))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@191 T@U) ($generated@@192 Int) ($generated@@193 Int) ) (!  (=> (and (= (type $generated@@191) $generated@@48) (or ($generated@@49 $generated@@192 $generated@@193) (and (not (= 1 $generated@@44)) (and (> $generated@@192 0) (> $generated@@193 0))))) true)
 :pattern ( ($generated@@45 $generated@@191 $generated@@192 $generated@@193))
))))
(assert  (and (and (= ($generated@@1 $generated@@196) 12) (forall (($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@194 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@U) ) (! (= (type ($generated@@195 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(= ($generated@@195 $generated@@201 ($generated@@194 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@194 $generated@@200))
)))
(assert (forall (($generated@@202 Int) ($generated@@203 Int) ) (! (= ($generated@@181 $generated@@202 $generated@@203) (* $generated@@202 $generated@@203))
 :pattern ( ($generated@@181 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@194 ($generated@@8 ($generated@@47 $generated@@204))) ($generated@@50 ($generated@@194 ($generated@@8 $generated@@204))))
 :pattern ( ($generated@@194 ($generated@@8 ($generated@@47 $generated@@204))))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@194 ($generated@@50 $generated@@205)) ($generated@@50 ($generated@@194 $generated@@205)))
 :pattern ( ($generated@@194 ($generated@@50 $generated@@205)))
)))
(assert  (and (forall (($generated@@208 T@U) ) (! (= (type ($generated@@206 $generated@@208)) $generated@@48)
 :pattern ( ($generated@@206 $generated@@208))
)) (= (type $generated@@207) $generated@@48)))
(assert (forall (($generated@@209 T@U) ($generated@@210 Int) ($generated@@211 Int) ) (!  (=> (= (type $generated@@209) $generated@@48) (= ($generated@@45 $generated@@209 $generated@@210 $generated@@211) ($generated@@45 $generated@@207 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@45 ($generated@@206 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@212 Int) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (or ($generated@@52 ($generated@@47 $generated@@212) ($generated@@47 $generated@@213) ($generated@@47 $generated@@214)) (and (not (= 0 $generated@@44)) ($generated@@0 ($generated@@50 ($generated@@11  (and (> $generated@@212 0) (> $generated@@213 0))))))) (= ($generated@@51 ($generated@@47 $generated@@212) ($generated@@47 $generated@@213) ($generated@@47 $generated@@214)) (= ($generated@@47 ($generated@@181 ($generated@@47 $generated@@212) ($generated@@47 $generated@@213))) ($generated@@47 $generated@@214))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@47 $generated@@212) ($generated@@47 $generated@@213) ($generated@@47 $generated@@214)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@215) $generated@@48) (= (type $generated@@216) $generated@@48)) (= (type $generated@@217) ($generated@@79 $generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@69)) (= (type $generated@@219) ($generated@@70 $generated@@69 $generated@@71))) (= (type $generated@@220) ($generated@@72 $generated@@4))) (= (type $generated@@222) ($generated@@70 $generated@@69 $generated@@71))) (= (type $generated@@224) $generated@@48)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@227  (=> (= ($generated@@206 $generated@@215) $generated@@215) (=> (and (= ($generated@@206 $generated@@216) $generated@@216) (= $generated@@217 ($generated@@67 $generated@@218 $generated@@219 $generated@@220 false))) (=> (and (and (and (and ($generated@@221 $generated@@222) ($generated@@223 $generated@@222)) (= $generated@@219 $generated@@222)) (and (= $generated@@215 ($generated@@46 $generated@@224)) (= $generated@@216 ($generated@@46 ($generated@@46 $generated@@224))))) (and (and (= ($generated@@206 $generated@@224) $generated@@224) (= (ControlFlow 0 2) (- 0 1))) ($generated@@45 $generated@@215 $generated@@225 $generated@@226))) (<= $generated@@225 $generated@@226))))))
(let (($generated@@228  (=> (and ($generated@@221 $generated@@219) ($generated@@223 $generated@@219)) (=> (and (and (= 2 $generated@@44) (> $generated@@225 0)) (and (> $generated@@226 0) (= (ControlFlow 0 3) 2))) $generated@@227))))
$generated@@228)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 (Int Int) Bool)
(declare-fun $generated@@210 (Int Int) Bool)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@216 (Int Int) Int)
(declare-fun $generated@@224 (T@T) T@U)
(declare-fun $generated@@225 (T@U) Int)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T T@T) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@289 (Int Int Int) Bool)
(declare-fun $generated@@290 (Int Int Int) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U Int) T@U)
(declare-fun $generated@@375 (T@U) Int)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@422 () T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (= (type $generated@@212) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@212) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@213 0) (> $generated@@214 0))))))))) (and ($generated@@210 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (= ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (let (($generated@@215 ($generated@@211 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214))))
$generated@@215))))
 :weight 3
 :pattern ( ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) ($generated@@208 $generated@@212))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@217 Int) ($generated@@218 Int) ($generated@@219 Int) ) (!  (=> (or ($generated@@135 $generated@@217 $generated@@218 $generated@@219) (and (not (= 0 $generated@@127)) (and (> $generated@@217 0) (> $generated@@218 0)))) (= ($generated@@134 $generated@@217 $generated@@218 $generated@@219) (= ($generated@@216 $generated@@217 $generated@@218) $generated@@219)))
 :pattern ( ($generated@@134 $generated@@217 $generated@@218 $generated@@219))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@220 T@U) ($generated@@221 Int) ($generated@@222 Int) ) (!  (=> (and (= (type $generated@@220) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 $generated@@221 $generated@@222) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@220) (and (> $generated@@221 0) (> $generated@@222 0)))))) (and ($generated@@210 $generated@@221 $generated@@222) (= ($generated@@207 $generated@@221 $generated@@222) (let (($generated@@223 ($generated@@211 $generated@@221 $generated@@222)))
$generated@@223))))
 :pattern ( ($generated@@207 $generated@@221 $generated@@222) ($generated@@208 $generated@@220))
))))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@228)) 14)) (forall (($generated@@229 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@226 $generated@@229))
))) (forall (($generated@@230 T@T) ) (! (= (type ($generated@@224 $generated@@230)) ($generated@@226 $generated@@230))
 :pattern ( ($generated@@224 $generated@@230))
))))
(assert (forall (($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@231)) 0)
 :pattern ( ($generated@@224 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ($generated@@234 Int) ) (!  (=> (= (type $generated@@232) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234) ($generated@@128 $generated@@232 $generated@@233 $generated@@234)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 15) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@236 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@61) (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241) ($generated@@69 $generated@@239 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (and (and (and (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@247 $generated@@248)) 16)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@244 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@244 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@245 (type $generated@@253))))
(= (type ($generated@@242 $generated@@253)) ($generated@@71 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@242 $generated@@253))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= (type ($generated@@243 $generated@@255 $generated@@256)) ($generated@@244 $generated@@255 $generated@@256))
 :pattern ( ($generated@@243 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@T) ) (! (let (($generated@@259 (type $generated@@257)))
 (not ($generated@@0 ($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257))))
 :pattern ( (let (($generated@@259 (type $generated@@257)))
($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257)))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 17)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@71 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@246 (type $generated@@278))))
(let (($generated@@280 ($generated@@245 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@244 $generated@@280 $generated@@279)) (or (= $generated@@278 ($generated@@243 $generated@@280 $generated@@279)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@278) $generated@@281)))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@242 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@264 (type $generated@@282))))
(let (($generated@@284 ($generated@@263 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@262 $generated@@284 $generated@@283)) (or (= $generated@@282 ($generated@@261 $generated@@284 $generated@@283)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@282) $generated@@285)))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@260 $generated@@282))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@286 Int) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@135 $generated@@286 $generated@@287 $generated@@288) (and (not (= 0 $generated@@127)) (and (> $generated@@286 0) (> $generated@@287 0)))) true)
 :pattern ( ($generated@@134 $generated@@286 $generated@@287 $generated@@288))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@291 Int) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (or ($generated@@290 $generated@@291 $generated@@292 $generated@@293) (and (not (= 2 $generated@@127)) (and (> $generated@@292 0) (> $generated@@293 0)))) true)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 Int) ($generated@@295 Int) ) (!  (=> ($generated@@210 $generated@@294 $generated@@295) (and ($generated@@289 ($generated@@211 $generated@@294 $generated@@295) $generated@@294 $generated@@295) (forall (($generated@@296 Int) ) (!  (=> true (=> ($generated@@289 $generated@@296 $generated@@294 $generated@@295) (<= $generated@@296 ($generated@@211 $generated@@294 $generated@@295))))
 :pattern ( ($generated@@289 $generated@@296 $generated@@294 $generated@@295))
))))
 :pattern ( ($generated@@211 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@299) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@237) ($generated@@0 ($generated@@76 $generated@@299 $generated@@302))) ($generated@@235 $generated@@302 $generated@@300 $generated@@301))
 :pattern ( ($generated@@76 $generated@@299 $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@305) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@306) $generated@@61)) (= (type $generated@@307) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@237) ($generated@@0 ($generated@@76 $generated@@305 $generated@@308))) ($generated@@235 $generated@@308 $generated@@306 $generated@@307))
 :pattern ( ($generated@@76 $generated@@305 $generated@@308))
))))
 :pattern ( ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@309 T@U) ($generated@@310 Int) ($generated@@311 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@131) (or ($generated@@132 $generated@@310 $generated@@311) (and (not (= 1 $generated@@127)) (and (> $generated@@310 0) (> $generated@@311 0))))) true)
 :pattern ( ($generated@@128 $generated@@309 $generated@@310 $generated@@311))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@312 Int) ($generated@@313 Int) ) (!  (=> (or ($generated@@209 $generated@@312 $generated@@313) (and (not (= 5 $generated@@127)) (and (> $generated@@312 0) (> $generated@@313 0)))) true)
 :pattern ( ($generated@@207 $generated@@312 $generated@@313))
))))
(assert  (and (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@246 (type $generated@@318))))
(let (($generated@@320 ($generated@@245 (type $generated@@318))))
(= (type ($generated@@315 $generated@@318)) ($generated@@71 $generated@@320 $generated@@319))))
 :pattern ( ($generated@@315 $generated@@318))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (= (type $generated@@321) ($generated@@244 $generated@@237 $generated@@237)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))) (and ($generated@@235 ($generated@@76 ($generated@@315 $generated@@321) $generated@@325) $generated@@323 $generated@@324) ($generated@@235 $generated@@325 $generated@@322 $generated@@324)))
 :pattern ( ($generated@@76 ($generated@@315 $generated@@321) $generated@@325))
 :pattern ( ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324))
)))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@264 (type $generated@@330))))
(let (($generated@@332 ($generated@@263 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@262 $generated@@237 $generated@@237)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))) (and ($generated@@235 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@235 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@71 $generated@@339 $generated@@4))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@264 (type $generated@@340))))
(let (($generated@@342 ($generated@@263 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@262 $generated@@342 $generated@@341)) (= (= $generated@@340 ($generated@@261 $generated@@342 $generated@@341)) (= ($generated@@260 $generated@@340) ($generated@@338 $generated@@342))))))
 :pattern ( ($generated@@260 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@227 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@226 $generated@@344)) (<= 0 ($generated@@225 $generated@@343))))
 :pattern ( ($generated@@225 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@61) (= (type $generated@@348) $generated@@61)) (= ($generated@@345 ($generated@@314 $generated@@347 $generated@@348)) $generated@@347))
 :pattern ( ($generated@@314 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@61) (= (type $generated@@352) $generated@@61)) (= ($generated@@349 ($generated@@314 $generated@@351 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@314 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@67 ($generated@@314 $generated@@353 $generated@@354)) $generated@@58))
 :pattern ( ($generated@@314 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@61) (= (type $generated@@358) $generated@@61)) (= ($generated@@355 ($generated@@326 $generated@@357 $generated@@358)) $generated@@357))
 :pattern ( ($generated@@326 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@61) (= (type $generated@@362) $generated@@61)) (= ($generated@@359 ($generated@@326 $generated@@361 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@61) (= (type $generated@@364) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@363 $generated@@364)) $generated@@59))
 :pattern ( ($generated@@326 $generated@@363 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (! (let (($generated@@370 ($generated@@227 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368 $generated@@369)) $generated@@370))
 :pattern ( ($generated@@366 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@226 $generated@@237)) (= (type $generated@@372) $generated@@61)) (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373) (forall (($generated@@374 Int) ) (!  (=> (and (<= 0 $generated@@374) (< $generated@@374 ($generated@@225 $generated@@371))) ($generated@@235 ($generated@@366 $generated@@371 $generated@@374) $generated@@372 $generated@@373))
 :pattern ( ($generated@@366 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@376 Int) ) (! (= ($generated@@375 ($generated@@70 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@70 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@61)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@61) (= ($generated@@377 ($generated@@297 $generated@@379)) $generated@@379))
 :pattern ( ($generated@@297 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@61) (= ($generated@@67 ($generated@@297 $generated@@380)) $generated@@54))
 :pattern ( ($generated@@297 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@61) (= ($generated@@381 ($generated@@303 $generated@@383)) $generated@@383))
 :pattern ( ($generated@@303 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@61) (= ($generated@@67 ($generated@@303 $generated@@384)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) $generated@@61)
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) $generated@@61)
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@61) (= ($generated@@386 ($generated@@385 $generated@@389)) $generated@@389))
 :pattern ( ($generated@@385 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@67 ($generated@@385 $generated@@390)) $generated@@56))
 :pattern ( ($generated@@385 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (= (type ($generated@@391 $generated@@392)) $generated@@61)
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@61) (= ($generated@@391 ($generated@@365 $generated@@393)) $generated@@393))
 :pattern ( ($generated@@365 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@67 ($generated@@365 $generated@@394)) $generated@@57))
 :pattern ( ($generated@@365 $generated@@394))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated@@395 $generated@@399 ($generated@@236 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@236 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (not ($generated@@0 ($generated@@76 ($generated@@338 $generated@@401) $generated@@400))))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@76 ($generated@@338 $generated@@401) $generated@@400)))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@216 $generated@@402 $generated@@403) (* $generated@@402 $generated@@403))
 :pattern ( ($generated@@216 $generated@@402 $generated@@403))
)))
(assert (= (type $generated@@404) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@405 Int) ($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@290 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@405 0)))) (and ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) (=> ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))) (= ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))  (and (and (> $generated@@405 0) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406))) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))))
 :weight 3
 :pattern ( ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@71 $generated@@237 $generated@@2)) (= (type $generated@@409) $generated@@61)) (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@237) (< 0 ($generated ($generated@@76 $generated@@408 $generated@@411)))) ($generated@@235 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@76 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 Int) ) (! (= ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))) ($generated@@133 ($generated@@236 ($generated@@8 $generated@@412))))
 :pattern ( ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))))
)))
(assert (forall (($generated@@413 T@U) ) (! (= ($generated@@236 ($generated@@133 $generated@@413)) ($generated@@133 ($generated@@236 $generated@@413)))
 :pattern ( ($generated@@236 ($generated@@133 $generated@@413)))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@227 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@226 $generated@@415)) (= ($generated@@225 $generated@@414) 0)) (= $generated@@414 ($generated@@224 $generated@@415))))
 :pattern ( ($generated@@225 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@417) $generated@@2)) ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
 :pattern ( ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@419) $generated@@3)) ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
 :pattern ( ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@421) $generated@@4)) ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
 :pattern ( ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
)))
(assert (= ($generated@@1 $generated@@422) 18))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@422)) ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@426) $generated@@237)) ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
 :pattern ( ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@427 Int) ($generated@@428 Int) ($generated@@429 Int) ) (!  (=> (or ($generated@@290 $generated@@427 $generated@@428 $generated@@429) (and (not (= 2 $generated@@127)) (and (> $generated@@428 0) (> $generated@@429 0)))) (and (=> (> $generated@@427 0) (and ($generated@@132 $generated@@427 $generated@@428) (=> ($generated@@128 $generated@@404 $generated@@427 $generated@@428) ($generated@@132 $generated@@427 $generated@@429)))) (= ($generated@@289 $generated@@427 $generated@@428 $generated@@429)  (and (and (> $generated@@427 0) ($generated@@128 $generated@@404 $generated@@427 $generated@@428)) ($generated@@128 $generated@@404 $generated@@427 $generated@@429)))))
 :pattern ( ($generated@@289 $generated@@427 $generated@@428 $generated@@429))
))))
(assert  (and (forall (($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@432)) $generated@@131)
 :pattern ( ($generated@@430 $generated@@432))
)) (= (type $generated@@431) $generated@@131)))
(assert (forall (($generated@@433 T@U) ($generated@@434 Int) ($generated@@435 Int) ) (!  (=> (= (type $generated@@433) $generated@@131) (= ($generated@@128 $generated@@433 $generated@@434 $generated@@435) ($generated@@128 $generated@@431 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@128 ($generated@@430 $generated@@433) $generated@@434 $generated@@435))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@436 Int) ($generated@@437 Int) ($generated@@438 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@436 0) (> $generated@@437 0))))))) (= ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (= ($generated@@130 ($generated@@216 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437))) ($generated@@130 $generated@@438))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@439 () T@U)
(declare-fun $generated@@440 () T@U)
(declare-fun $generated@@441 () T@U)
(declare-fun $generated@@442 () T@U)
(declare-fun $generated@@443 () Int)
(declare-fun $generated@@444 () Int)
(declare-fun $generated@@445 () T@U)
(declare-fun $generated@@446 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@439) $generated@@131) (= (type $generated@@440) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@441) $generated@@72)) (= (type $generated@@442) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@445) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@447  (=> (= ($generated@@430 $generated@@404) $generated@@404) (=> (and (and (= ($generated@@430 $generated@@439) $generated@@439) (= $generated@@440 ($generated@@150 $generated@@441 $generated@@442 $generated@@60 false))) (and (> $generated@@443 0) (> $generated@@444 0))) (=> (and (and (and ($generated@@208 $generated@@445) ($generated@@446 $generated@@445)) (= $generated@@442 $generated@@445)) (and ($generated@@69 ($generated@@8 $generated@@443) $generated@@46 $generated@@445) ($generated@@69 ($generated@@8 $generated@@444) $generated@@46 $generated@@445))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (> $generated@@443 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@444 0)) (=> (and (and (and (> $generated@@443 0) (> $generated@@444 0)) ($generated@@209 $generated@@443 $generated@@444)) (and ($generated@@69 ($generated@@8 $generated@@444) $generated@@46 $generated@@445) ($generated@@69 ($generated@@8 $generated@@443) $generated@@46 $generated@@445))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@444 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@443 0)))))))))))
(let (($generated@@448  (=> (and (and ($generated@@208 $generated@@442) ($generated@@446 $generated@@442)) (and (= 6 $generated@@127) (= (ControlFlow 0 6) 2))) $generated@@447)))
$generated@@448)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 (Int Int) Bool)
(declare-fun $generated@@210 (Int Int) Bool)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@216 (Int Int) Int)
(declare-fun $generated@@224 (T@T) T@U)
(declare-fun $generated@@225 (T@U) Int)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T T@T) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@289 (Int Int Int) Bool)
(declare-fun $generated@@290 (Int Int Int) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U Int) T@U)
(declare-fun $generated@@375 (T@U) Int)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@422 () T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (= (type $generated@@212) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@212) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@213 0) (> $generated@@214 0))))))))) (and ($generated@@210 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (= ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (let (($generated@@215 ($generated@@211 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214))))
$generated@@215))))
 :weight 3
 :pattern ( ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) ($generated@@208 $generated@@212))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@217 Int) ($generated@@218 Int) ($generated@@219 Int) ) (!  (=> (or ($generated@@135 $generated@@217 $generated@@218 $generated@@219) (and (not (= 0 $generated@@127)) (and (> $generated@@217 0) (> $generated@@218 0)))) (= ($generated@@134 $generated@@217 $generated@@218 $generated@@219) (= ($generated@@216 $generated@@217 $generated@@218) $generated@@219)))
 :pattern ( ($generated@@134 $generated@@217 $generated@@218 $generated@@219))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@220 T@U) ($generated@@221 Int) ($generated@@222 Int) ) (!  (=> (and (= (type $generated@@220) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 $generated@@221 $generated@@222) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@220) (and (> $generated@@221 0) (> $generated@@222 0)))))) (and ($generated@@210 $generated@@221 $generated@@222) (= ($generated@@207 $generated@@221 $generated@@222) (let (($generated@@223 ($generated@@211 $generated@@221 $generated@@222)))
$generated@@223))))
 :pattern ( ($generated@@207 $generated@@221 $generated@@222) ($generated@@208 $generated@@220))
))))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@228)) 14)) (forall (($generated@@229 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@226 $generated@@229))
))) (forall (($generated@@230 T@T) ) (! (= (type ($generated@@224 $generated@@230)) ($generated@@226 $generated@@230))
 :pattern ( ($generated@@224 $generated@@230))
))))
(assert (forall (($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@231)) 0)
 :pattern ( ($generated@@224 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ($generated@@234 Int) ) (!  (=> (= (type $generated@@232) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234) ($generated@@128 $generated@@232 $generated@@233 $generated@@234)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 15) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@236 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@61) (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241) ($generated@@69 $generated@@239 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (and (and (and (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@247 $generated@@248)) 16)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@244 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@244 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@245 (type $generated@@253))))
(= (type ($generated@@242 $generated@@253)) ($generated@@71 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@242 $generated@@253))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= (type ($generated@@243 $generated@@255 $generated@@256)) ($generated@@244 $generated@@255 $generated@@256))
 :pattern ( ($generated@@243 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@T) ) (! (let (($generated@@259 (type $generated@@257)))
 (not ($generated@@0 ($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257))))
 :pattern ( (let (($generated@@259 (type $generated@@257)))
($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257)))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 17)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@71 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@246 (type $generated@@278))))
(let (($generated@@280 ($generated@@245 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@244 $generated@@280 $generated@@279)) (or (= $generated@@278 ($generated@@243 $generated@@280 $generated@@279)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@278) $generated@@281)))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@242 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@264 (type $generated@@282))))
(let (($generated@@284 ($generated@@263 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@262 $generated@@284 $generated@@283)) (or (= $generated@@282 ($generated@@261 $generated@@284 $generated@@283)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@282) $generated@@285)))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@260 $generated@@282))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@286 Int) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@135 $generated@@286 $generated@@287 $generated@@288) (and (not (= 0 $generated@@127)) (and (> $generated@@286 0) (> $generated@@287 0)))) true)
 :pattern ( ($generated@@134 $generated@@286 $generated@@287 $generated@@288))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@291 Int) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (or ($generated@@290 $generated@@291 $generated@@292 $generated@@293) (and (not (= 2 $generated@@127)) (and (> $generated@@292 0) (> $generated@@293 0)))) true)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 Int) ($generated@@295 Int) ) (!  (=> ($generated@@210 $generated@@294 $generated@@295) (and ($generated@@289 ($generated@@211 $generated@@294 $generated@@295) $generated@@294 $generated@@295) (forall (($generated@@296 Int) ) (!  (=> true (=> ($generated@@289 $generated@@296 $generated@@294 $generated@@295) (<= $generated@@296 ($generated@@211 $generated@@294 $generated@@295))))
 :pattern ( ($generated@@289 $generated@@296 $generated@@294 $generated@@295))
))))
 :pattern ( ($generated@@211 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@299) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@237) ($generated@@0 ($generated@@76 $generated@@299 $generated@@302))) ($generated@@235 $generated@@302 $generated@@300 $generated@@301))
 :pattern ( ($generated@@76 $generated@@299 $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@305) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@306) $generated@@61)) (= (type $generated@@307) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@237) ($generated@@0 ($generated@@76 $generated@@305 $generated@@308))) ($generated@@235 $generated@@308 $generated@@306 $generated@@307))
 :pattern ( ($generated@@76 $generated@@305 $generated@@308))
))))
 :pattern ( ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@309 T@U) ($generated@@310 Int) ($generated@@311 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@131) (or ($generated@@132 $generated@@310 $generated@@311) (and (not (= 1 $generated@@127)) (and (> $generated@@310 0) (> $generated@@311 0))))) true)
 :pattern ( ($generated@@128 $generated@@309 $generated@@310 $generated@@311))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@312 Int) ($generated@@313 Int) ) (!  (=> (or ($generated@@209 $generated@@312 $generated@@313) (and (not (= 5 $generated@@127)) (and (> $generated@@312 0) (> $generated@@313 0)))) true)
 :pattern ( ($generated@@207 $generated@@312 $generated@@313))
))))
(assert  (and (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@246 (type $generated@@318))))
(let (($generated@@320 ($generated@@245 (type $generated@@318))))
(= (type ($generated@@315 $generated@@318)) ($generated@@71 $generated@@320 $generated@@319))))
 :pattern ( ($generated@@315 $generated@@318))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (= (type $generated@@321) ($generated@@244 $generated@@237 $generated@@237)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))) (and ($generated@@235 ($generated@@76 ($generated@@315 $generated@@321) $generated@@325) $generated@@323 $generated@@324) ($generated@@235 $generated@@325 $generated@@322 $generated@@324)))
 :pattern ( ($generated@@76 ($generated@@315 $generated@@321) $generated@@325))
 :pattern ( ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324))
)))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@264 (type $generated@@330))))
(let (($generated@@332 ($generated@@263 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@262 $generated@@237 $generated@@237)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))) (and ($generated@@235 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@235 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@71 $generated@@339 $generated@@4))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@264 (type $generated@@340))))
(let (($generated@@342 ($generated@@263 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@262 $generated@@342 $generated@@341)) (= (= $generated@@340 ($generated@@261 $generated@@342 $generated@@341)) (= ($generated@@260 $generated@@340) ($generated@@338 $generated@@342))))))
 :pattern ( ($generated@@260 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@227 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@226 $generated@@344)) (<= 0 ($generated@@225 $generated@@343))))
 :pattern ( ($generated@@225 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@61) (= (type $generated@@348) $generated@@61)) (= ($generated@@345 ($generated@@314 $generated@@347 $generated@@348)) $generated@@347))
 :pattern ( ($generated@@314 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@61) (= (type $generated@@352) $generated@@61)) (= ($generated@@349 ($generated@@314 $generated@@351 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@314 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@67 ($generated@@314 $generated@@353 $generated@@354)) $generated@@58))
 :pattern ( ($generated@@314 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@61) (= (type $generated@@358) $generated@@61)) (= ($generated@@355 ($generated@@326 $generated@@357 $generated@@358)) $generated@@357))
 :pattern ( ($generated@@326 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@61) (= (type $generated@@362) $generated@@61)) (= ($generated@@359 ($generated@@326 $generated@@361 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@61) (= (type $generated@@364) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@363 $generated@@364)) $generated@@59))
 :pattern ( ($generated@@326 $generated@@363 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (! (let (($generated@@370 ($generated@@227 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368 $generated@@369)) $generated@@370))
 :pattern ( ($generated@@366 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@226 $generated@@237)) (= (type $generated@@372) $generated@@61)) (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373) (forall (($generated@@374 Int) ) (!  (=> (and (<= 0 $generated@@374) (< $generated@@374 ($generated@@225 $generated@@371))) ($generated@@235 ($generated@@366 $generated@@371 $generated@@374) $generated@@372 $generated@@373))
 :pattern ( ($generated@@366 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@376 Int) ) (! (= ($generated@@375 ($generated@@70 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@70 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@61)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@61) (= ($generated@@377 ($generated@@297 $generated@@379)) $generated@@379))
 :pattern ( ($generated@@297 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@61) (= ($generated@@67 ($generated@@297 $generated@@380)) $generated@@54))
 :pattern ( ($generated@@297 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@61) (= ($generated@@381 ($generated@@303 $generated@@383)) $generated@@383))
 :pattern ( ($generated@@303 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@61) (= ($generated@@67 ($generated@@303 $generated@@384)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) $generated@@61)
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) $generated@@61)
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@61) (= ($generated@@386 ($generated@@385 $generated@@389)) $generated@@389))
 :pattern ( ($generated@@385 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@67 ($generated@@385 $generated@@390)) $generated@@56))
 :pattern ( ($generated@@385 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (= (type ($generated@@391 $generated@@392)) $generated@@61)
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@61) (= ($generated@@391 ($generated@@365 $generated@@393)) $generated@@393))
 :pattern ( ($generated@@365 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@67 ($generated@@365 $generated@@394)) $generated@@57))
 :pattern ( ($generated@@365 $generated@@394))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated@@395 $generated@@399 ($generated@@236 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@236 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (not ($generated@@0 ($generated@@76 ($generated@@338 $generated@@401) $generated@@400))))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@76 ($generated@@338 $generated@@401) $generated@@400)))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@216 $generated@@402 $generated@@403) (* $generated@@402 $generated@@403))
 :pattern ( ($generated@@216 $generated@@402 $generated@@403))
)))
(assert (= (type $generated@@404) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@405 Int) ($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@290 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@405 0)))) (and ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) (=> ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))) (= ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))  (and (and (> $generated@@405 0) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406))) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))))
 :weight 3
 :pattern ( ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@71 $generated@@237 $generated@@2)) (= (type $generated@@409) $generated@@61)) (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@237) (< 0 ($generated ($generated@@76 $generated@@408 $generated@@411)))) ($generated@@235 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@76 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 Int) ) (! (= ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))) ($generated@@133 ($generated@@236 ($generated@@8 $generated@@412))))
 :pattern ( ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))))
)))
(assert (forall (($generated@@413 T@U) ) (! (= ($generated@@236 ($generated@@133 $generated@@413)) ($generated@@133 ($generated@@236 $generated@@413)))
 :pattern ( ($generated@@236 ($generated@@133 $generated@@413)))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@227 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@226 $generated@@415)) (= ($generated@@225 $generated@@414) 0)) (= $generated@@414 ($generated@@224 $generated@@415))))
 :pattern ( ($generated@@225 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@417) $generated@@2)) ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
 :pattern ( ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@419) $generated@@3)) ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
 :pattern ( ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@421) $generated@@4)) ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
 :pattern ( ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
)))
(assert (= ($generated@@1 $generated@@422) 18))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@422)) ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@426) $generated@@237)) ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
 :pattern ( ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@427 Int) ($generated@@428 Int) ($generated@@429 Int) ) (!  (=> (or ($generated@@290 $generated@@427 $generated@@428 $generated@@429) (and (not (= 2 $generated@@127)) (and (> $generated@@428 0) (> $generated@@429 0)))) (and (=> (> $generated@@427 0) (and ($generated@@132 $generated@@427 $generated@@428) (=> ($generated@@128 $generated@@404 $generated@@427 $generated@@428) ($generated@@132 $generated@@427 $generated@@429)))) (= ($generated@@289 $generated@@427 $generated@@428 $generated@@429)  (and (and (> $generated@@427 0) ($generated@@128 $generated@@404 $generated@@427 $generated@@428)) ($generated@@128 $generated@@404 $generated@@427 $generated@@429)))))
 :pattern ( ($generated@@289 $generated@@427 $generated@@428 $generated@@429))
))))
(assert  (and (forall (($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@432)) $generated@@131)
 :pattern ( ($generated@@430 $generated@@432))
)) (= (type $generated@@431) $generated@@131)))
(assert (forall (($generated@@433 T@U) ($generated@@434 Int) ($generated@@435 Int) ) (!  (=> (= (type $generated@@433) $generated@@131) (= ($generated@@128 $generated@@433 $generated@@434 $generated@@435) ($generated@@128 $generated@@431 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@128 ($generated@@430 $generated@@433) $generated@@434 $generated@@435))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@436 Int) ($generated@@437 Int) ($generated@@438 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@436 0) (> $generated@@437 0))))))) (= ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (= ($generated@@130 ($generated@@216 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437))) ($generated@@130 $generated@@438))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@439 () Int)
(declare-fun $generated@@440 () Int)
(declare-fun $generated@@441 () Int)
(declare-fun $generated@@442 () Int)
(declare-fun $generated@@443 () Int)
(declare-fun $generated@@444 () T@U)
(declare-fun $generated@@445 () T@U)
(declare-fun $generated@@446 () Int)
(declare-fun $generated@@447 () Int)
(declare-fun $generated@@448 () T@U)
(declare-fun $generated@@449 () T@U)
(declare-fun $generated@@450 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@444) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@445) $generated@@131)) (= (type $generated@@448) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@449) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 56) (let (($generated@@451 true))
(let (($generated@@452 true))
(let (($generated@@453  (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@207 $generated@@439 $generated@@440) ($generated@@207 $generated@@440 $generated@@439)))))
(let (($generated@@454  (=> (forall (($generated@@455 Int) ) (!  (and ($generated@@290 $generated@@455 $generated@@440 $generated@@439) (=> (=> ($generated@@289 $generated@@455 $generated@@440 $generated@@439) (<= $generated@@455 $generated@@441)) (and ($generated@@290 $generated@@455 $generated@@440 $generated@@439) (=> ($generated@@289 $generated@@455 $generated@@440 $generated@@439) ($generated@@290 $generated@@455 $generated@@439 $generated@@440)))))
 :pattern ( ($generated@@289 $generated@@455 $generated@@439 $generated@@440))
 :pattern ( ($generated@@289 $generated@@455 $generated@@440 $generated@@439))
)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (forall (($generated@@456 Int) ) (!  (=> true (and (=> ($generated@@289 $generated@@456 $generated@@440 $generated@@439) (<= $generated@@456 $generated@@441)) (=> ($generated@@289 $generated@@456 $generated@@440 $generated@@439) ($generated@@289 $generated@@456 $generated@@439 $generated@@440))))
 :pattern ( ($generated@@289 $generated@@456 $generated@@439 $generated@@440))
 :pattern ( ($generated@@289 $generated@@456 $generated@@440 $generated@@439))
))) (=> (forall (($generated@@457 Int) ) (!  (=> true (and (=> ($generated@@289 $generated@@457 $generated@@440 $generated@@439) (<= $generated@@457 $generated@@441)) (=> ($generated@@289 $generated@@457 $generated@@440 $generated@@439) ($generated@@289 $generated@@457 $generated@@439 $generated@@440))))
 :pattern ( ($generated@@289 $generated@@457 $generated@@439 $generated@@440))
 :pattern ( ($generated@@289 $generated@@457 $generated@@440 $generated@@439))
)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= $generated@@442 $generated@@441)) (=> (= $generated@@442 $generated@@441) (=> (= (ControlFlow 0 4) 3) $generated@@453))))))))
(let (($generated@@458  (=> (and (< $generated@@441 $generated@@443) (= (ControlFlow 0 11) 4)) $generated@@454)))
(let (($generated@@459  (=> (and (and (<= $generated@@443 $generated@@441) ($generated@@69 ($generated@@8 $generated@@443) $generated@@46 $generated@@444)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (> $generated@@440 0)) (=> (and ($generated@@290 $generated@@443 $generated@@439 $generated@@440) (= (ControlFlow 0 8) 4)) $generated@@454))))))
(let (($generated@@460  (=> ($generated@@289 $generated@@443 $generated@@440 $generated@@439) (and (=> (= (ControlFlow 0 12) 8) $generated@@459) (=> (= (ControlFlow 0 12) 11) $generated@@458)))))
(let (($generated@@461  (=> (and (not ($generated@@289 $generated@@443 $generated@@440 $generated@@439)) (= (ControlFlow 0 7) 4)) $generated@@454)))
(let (($generated@@462  (=> ($generated@@69 ($generated@@8 $generated@@443) $generated@@46 $generated@@444) (=> (and ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444)) (and (=> (= (ControlFlow 0 13) (- 0 15)) (> $generated@@440 0)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (> $generated@@439 0)) (=> ($generated@@290 $generated@@443 $generated@@440 $generated@@439) (and (=> (= (ControlFlow 0 13) 12) $generated@@460) (=> (= (ControlFlow 0 13) 7) $generated@@461)))))))))
(let (($generated@@463 true))
(let (($generated@@464  (=> (and ($generated@@290 $generated@@441 $generated@@440 $generated@@439) (=> ($generated@@289 $generated@@441 $generated@@440 $generated@@439) (forall (($generated@@465 Int) ) (! ($generated@@290 $generated@@465 $generated@@440 $generated@@439)
 :pattern ( ($generated@@289 $generated@@465 $generated@@440 $generated@@439))
)))) (and (=> (= (ControlFlow 0 16) (- 0 25)) (=> ($generated@@290 $generated@@441 $generated@@440 $generated@@439) (or ($generated@@289 $generated@@441 $generated@@440 $generated@@439) (> $generated@@441 0)))) (and (=> (= (ControlFlow 0 16) (- 0 24)) (=> ($generated@@290 $generated@@441 $generated@@440 $generated@@439) (or ($generated@@289 $generated@@441 $generated@@440 $generated@@439) ($generated@@128 $generated@@445 $generated@@441 $generated@@440)))) (and (=> (= (ControlFlow 0 16) (- 0 23)) (=> ($generated@@290 $generated@@441 $generated@@440 $generated@@439) (or ($generated@@289 $generated@@441 $generated@@440 $generated@@439) ($generated@@128 $generated@@445 $generated@@441 $generated@@439)))) (and (=> (= (ControlFlow 0 16) (- 0 22)) (forall (($generated@@466 Int) ) (!  (=> true (=> ($generated@@289 $generated@@466 $generated@@440 $generated@@439) (<= $generated@@466 $generated@@441)))
 :pattern ( ($generated@@289 $generated@@466 $generated@@440 $generated@@439))
))) (=> (and (and (and ($generated@@289 $generated@@441 $generated@@440 $generated@@439) (forall (($generated@@467 Int) ) (!  (=> true (=> ($generated@@289 $generated@@467 $generated@@440 $generated@@439) (<= $generated@@467 $generated@@441)))
 :pattern ( ($generated@@289 $generated@@467 $generated@@440 $generated@@439))
))) ($generated@@69 ($generated@@8 $generated@@441) $generated@@46 $generated@@444)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444))) (and (=> (= (ControlFlow 0 16) (- 0 21)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 16) (- 0 20)) (> $generated@@440 0)) (=> (and ($generated@@290 $generated@@441 $generated@@439 $generated@@440) ($generated@@290 $generated@@441 $generated@@439 $generated@@440)) (and (=> (= (ControlFlow 0 16) (- 0 19)) (=> ($generated@@290 $generated@@441 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@441 $generated@@439 $generated@@440) (> $generated@@441 0)))) (and (=> (= (ControlFlow 0 16) (- 0 18)) (=> ($generated@@290 $generated@@441 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@441 $generated@@439 $generated@@440) ($generated@@128 $generated@@445 $generated@@441 $generated@@439)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (=> ($generated@@290 $generated@@441 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@441 $generated@@439 $generated@@440) ($generated@@128 $generated@@445 $generated@@441 $generated@@440)))) (=> ($generated@@289 $generated@@441 $generated@@439 $generated@@440) (and (=> (= (ControlFlow 0 16) 13) $generated@@462) (=> (= (ControlFlow 0 16) 1) $generated@@463)))))))))))))))))
(let (($generated@@468  (=> (and (not ($generated@@289 $generated@@446 $generated@@440 $generated@@439)) (= (ControlFlow 0 29) 16)) $generated@@464)))
(let (($generated@@469  (=> (and ($generated@@289 $generated@@446 $generated@@440 $generated@@439) (= (ControlFlow 0 28) 16)) $generated@@464)))
(let (($generated@@470  (=> ($generated@@69 ($generated@@8 $generated@@446) $generated@@46 $generated@@444) (=> (and ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444)) (and (=> (= (ControlFlow 0 30) (- 0 32)) (> $generated@@440 0)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (> $generated@@439 0)) (=> ($generated@@290 $generated@@446 $generated@@440 $generated@@439) (and (=> (= (ControlFlow 0 30) 28) $generated@@469) (=> (= (ControlFlow 0 30) 29) $generated@@468)))))))))
(let (($generated@@471  (=> ($generated@@289 $generated@@441 $generated@@440 $generated@@439) (and (=> (= (ControlFlow 0 33) 30) $generated@@470) (=> (= (ControlFlow 0 33) 27) $generated@@452)))))
(let (($generated@@472  (=> (and (not ($generated@@289 $generated@@441 $generated@@440 $generated@@439)) (= (ControlFlow 0 26) 16)) $generated@@464)))
(let (($generated@@473  (=> (and ($generated@@290 $generated@@442 $generated@@439 $generated@@440) (=> ($generated@@289 $generated@@442 $generated@@439 $generated@@440) (forall (($generated@@474 Int) ) (! ($generated@@290 $generated@@474 $generated@@439 $generated@@440)
 :pattern ( ($generated@@289 $generated@@474 $generated@@439 $generated@@440))
)))) (and (=> (= (ControlFlow 0 34) (- 0 40)) (=> ($generated@@290 $generated@@442 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@442 $generated@@439 $generated@@440) (> $generated@@442 0)))) (and (=> (= (ControlFlow 0 34) (- 0 39)) (=> ($generated@@290 $generated@@442 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@442 $generated@@439 $generated@@440) ($generated@@128 $generated@@445 $generated@@442 $generated@@439)))) (and (=> (= (ControlFlow 0 34) (- 0 38)) (=> ($generated@@290 $generated@@442 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@442 $generated@@439 $generated@@440) ($generated@@128 $generated@@445 $generated@@442 $generated@@440)))) (and (=> (= (ControlFlow 0 34) (- 0 37)) (forall (($generated@@475 Int) ) (!  (=> true (=> ($generated@@289 $generated@@475 $generated@@439 $generated@@440) (<= $generated@@475 $generated@@442)))
 :pattern ( ($generated@@289 $generated@@475 $generated@@439 $generated@@440))
))) (=> (and (and (and ($generated@@289 $generated@@442 $generated@@439 $generated@@440) (forall (($generated@@476 Int) ) (!  (=> true (=> ($generated@@289 $generated@@476 $generated@@439 $generated@@440) (<= $generated@@476 $generated@@442)))
 :pattern ( ($generated@@289 $generated@@476 $generated@@439 $generated@@440))
))) ($generated@@69 ($generated@@8 $generated@@441) $generated@@46 $generated@@444)) (and ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444))) (and (=> (= (ControlFlow 0 34) (- 0 36)) (> $generated@@440 0)) (and (=> (= (ControlFlow 0 34) (- 0 35)) (> $generated@@439 0)) (=> ($generated@@290 $generated@@441 $generated@@440 $generated@@439) (and (=> (= (ControlFlow 0 34) 33) $generated@@471) (=> (= (ControlFlow 0 34) 26) $generated@@472)))))))))))))
(let (($generated@@477  (=> (and (not ($generated@@289 $generated@@447 $generated@@439 $generated@@440)) (= (ControlFlow 0 44) 34)) $generated@@473)))
(let (($generated@@478  (=> (and ($generated@@289 $generated@@447 $generated@@439 $generated@@440) (= (ControlFlow 0 43) 34)) $generated@@473)))
(let (($generated@@479  (=> ($generated@@69 ($generated@@8 $generated@@447) $generated@@46 $generated@@444) (=> (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444)) (and (=> (= (ControlFlow 0 45) (- 0 47)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 45) (- 0 46)) (> $generated@@440 0)) (=> ($generated@@290 $generated@@447 $generated@@439 $generated@@440) (and (=> (= (ControlFlow 0 45) 43) $generated@@478) (=> (= (ControlFlow 0 45) 44) $generated@@477)))))))))
(let (($generated@@480  (=> ($generated@@289 $generated@@442 $generated@@439 $generated@@440) (and (=> (= (ControlFlow 0 48) 45) $generated@@479) (=> (= (ControlFlow 0 48) 42) $generated@@451)))))
(let (($generated@@481  (=> (and (not ($generated@@289 $generated@@442 $generated@@439 $generated@@440)) (= (ControlFlow 0 41) 34)) $generated@@473)))
(let (($generated@@482  (=> (= ($generated@@430 $generated@@404) $generated@@404) (=> (and (and (= ($generated@@430 $generated@@445) $generated@@445) (= $generated@@448 ($generated@@150 $generated@@449 $generated@@444 $generated@@60 false))) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444))) (and (=> (= (ControlFlow 0 49) (- 0 55)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 49) (- 0 54)) (> $generated@@440 0)) (=> (and (and (and (> $generated@@439 0) (> $generated@@440 0)) ($generated@@209 $generated@@439 $generated@@440)) (and (and ($generated@@209 $generated@@439 $generated@@440) (= $generated@@442 ($generated@@207 $generated@@439 $generated@@440))) (and ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444)))) (and (=> (= (ControlFlow 0 49) (- 0 53)) (> $generated@@440 0)) (and (=> (= (ControlFlow 0 49) (- 0 52)) (> $generated@@439 0)) (=> (and (and (and (> $generated@@440 0) (> $generated@@439 0)) (and ($generated@@209 $generated@@440 $generated@@439) ($generated@@209 $generated@@440 $generated@@439))) (and (and (= $generated@@441 ($generated@@207 $generated@@440 $generated@@439)) ($generated@@69 ($generated@@8 $generated@@442) $generated@@46 $generated@@444)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@444) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@444)))) (and (=> (= (ControlFlow 0 49) (- 0 51)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 49) (- 0 50)) (> $generated@@440 0)) (=> ($generated@@290 $generated@@442 $generated@@439 $generated@@440) (and (=> (= (ControlFlow 0 49) 48) $generated@@480) (=> (= (ControlFlow 0 49) 41) $generated@@481)))))))))))))))
(let (($generated@@483  (=> (and ($generated@@208 $generated@@444) ($generated@@450 $generated@@444)) (=> (and (and (= 6 $generated@@127) (> $generated@@439 0)) (and (> $generated@@440 0) (= (ControlFlow 0 56) 49))) $generated@@482))))
$generated@@483)))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 (Int Int) Bool)
(declare-fun $generated@@210 (Int Int) Bool)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@216 (Int Int) Int)
(declare-fun $generated@@224 (T@T) T@U)
(declare-fun $generated@@225 (T@U) Int)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T T@T) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@289 (Int Int Int) Bool)
(declare-fun $generated@@290 (Int Int Int) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U Int) T@U)
(declare-fun $generated@@375 (T@U) Int)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@422 () T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (= (type $generated@@212) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@212) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@213 0) (> $generated@@214 0))))))))) (and ($generated@@210 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (= ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (let (($generated@@215 ($generated@@211 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214))))
$generated@@215))))
 :weight 3
 :pattern ( ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) ($generated@@208 $generated@@212))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@217 Int) ($generated@@218 Int) ($generated@@219 Int) ) (!  (=> (or ($generated@@135 $generated@@217 $generated@@218 $generated@@219) (and (not (= 0 $generated@@127)) (and (> $generated@@217 0) (> $generated@@218 0)))) (= ($generated@@134 $generated@@217 $generated@@218 $generated@@219) (= ($generated@@216 $generated@@217 $generated@@218) $generated@@219)))
 :pattern ( ($generated@@134 $generated@@217 $generated@@218 $generated@@219))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@220 T@U) ($generated@@221 Int) ($generated@@222 Int) ) (!  (=> (and (= (type $generated@@220) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 $generated@@221 $generated@@222) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@220) (and (> $generated@@221 0) (> $generated@@222 0)))))) (and ($generated@@210 $generated@@221 $generated@@222) (= ($generated@@207 $generated@@221 $generated@@222) (let (($generated@@223 ($generated@@211 $generated@@221 $generated@@222)))
$generated@@223))))
 :pattern ( ($generated@@207 $generated@@221 $generated@@222) ($generated@@208 $generated@@220))
))))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@228)) 14)) (forall (($generated@@229 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@226 $generated@@229))
))) (forall (($generated@@230 T@T) ) (! (= (type ($generated@@224 $generated@@230)) ($generated@@226 $generated@@230))
 :pattern ( ($generated@@224 $generated@@230))
))))
(assert (forall (($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@231)) 0)
 :pattern ( ($generated@@224 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ($generated@@234 Int) ) (!  (=> (= (type $generated@@232) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234) ($generated@@128 $generated@@232 $generated@@233 $generated@@234)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 15) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@236 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@61) (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241) ($generated@@69 $generated@@239 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (and (and (and (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@247 $generated@@248)) 16)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@244 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@244 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@245 (type $generated@@253))))
(= (type ($generated@@242 $generated@@253)) ($generated@@71 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@242 $generated@@253))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= (type ($generated@@243 $generated@@255 $generated@@256)) ($generated@@244 $generated@@255 $generated@@256))
 :pattern ( ($generated@@243 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@T) ) (! (let (($generated@@259 (type $generated@@257)))
 (not ($generated@@0 ($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257))))
 :pattern ( (let (($generated@@259 (type $generated@@257)))
($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257)))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 17)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@71 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@246 (type $generated@@278))))
(let (($generated@@280 ($generated@@245 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@244 $generated@@280 $generated@@279)) (or (= $generated@@278 ($generated@@243 $generated@@280 $generated@@279)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@278) $generated@@281)))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@242 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@264 (type $generated@@282))))
(let (($generated@@284 ($generated@@263 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@262 $generated@@284 $generated@@283)) (or (= $generated@@282 ($generated@@261 $generated@@284 $generated@@283)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@282) $generated@@285)))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@260 $generated@@282))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@286 Int) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@135 $generated@@286 $generated@@287 $generated@@288) (and (not (= 0 $generated@@127)) (and (> $generated@@286 0) (> $generated@@287 0)))) true)
 :pattern ( ($generated@@134 $generated@@286 $generated@@287 $generated@@288))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@291 Int) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (or ($generated@@290 $generated@@291 $generated@@292 $generated@@293) (and (not (= 2 $generated@@127)) (and (> $generated@@292 0) (> $generated@@293 0)))) true)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 Int) ($generated@@295 Int) ) (!  (=> ($generated@@210 $generated@@294 $generated@@295) (and ($generated@@289 ($generated@@211 $generated@@294 $generated@@295) $generated@@294 $generated@@295) (forall (($generated@@296 Int) ) (!  (=> true (=> ($generated@@289 $generated@@296 $generated@@294 $generated@@295) (<= $generated@@296 ($generated@@211 $generated@@294 $generated@@295))))
 :pattern ( ($generated@@289 $generated@@296 $generated@@294 $generated@@295))
))))
 :pattern ( ($generated@@211 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@299) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@237) ($generated@@0 ($generated@@76 $generated@@299 $generated@@302))) ($generated@@235 $generated@@302 $generated@@300 $generated@@301))
 :pattern ( ($generated@@76 $generated@@299 $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@305) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@306) $generated@@61)) (= (type $generated@@307) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@237) ($generated@@0 ($generated@@76 $generated@@305 $generated@@308))) ($generated@@235 $generated@@308 $generated@@306 $generated@@307))
 :pattern ( ($generated@@76 $generated@@305 $generated@@308))
))))
 :pattern ( ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@309 T@U) ($generated@@310 Int) ($generated@@311 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@131) (or ($generated@@132 $generated@@310 $generated@@311) (and (not (= 1 $generated@@127)) (and (> $generated@@310 0) (> $generated@@311 0))))) true)
 :pattern ( ($generated@@128 $generated@@309 $generated@@310 $generated@@311))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@312 Int) ($generated@@313 Int) ) (!  (=> (or ($generated@@209 $generated@@312 $generated@@313) (and (not (= 5 $generated@@127)) (and (> $generated@@312 0) (> $generated@@313 0)))) true)
 :pattern ( ($generated@@207 $generated@@312 $generated@@313))
))))
(assert  (and (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@246 (type $generated@@318))))
(let (($generated@@320 ($generated@@245 (type $generated@@318))))
(= (type ($generated@@315 $generated@@318)) ($generated@@71 $generated@@320 $generated@@319))))
 :pattern ( ($generated@@315 $generated@@318))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (= (type $generated@@321) ($generated@@244 $generated@@237 $generated@@237)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))) (and ($generated@@235 ($generated@@76 ($generated@@315 $generated@@321) $generated@@325) $generated@@323 $generated@@324) ($generated@@235 $generated@@325 $generated@@322 $generated@@324)))
 :pattern ( ($generated@@76 ($generated@@315 $generated@@321) $generated@@325))
 :pattern ( ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324))
)))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@264 (type $generated@@330))))
(let (($generated@@332 ($generated@@263 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@262 $generated@@237 $generated@@237)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))) (and ($generated@@235 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@235 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@71 $generated@@339 $generated@@4))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@264 (type $generated@@340))))
(let (($generated@@342 ($generated@@263 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@262 $generated@@342 $generated@@341)) (= (= $generated@@340 ($generated@@261 $generated@@342 $generated@@341)) (= ($generated@@260 $generated@@340) ($generated@@338 $generated@@342))))))
 :pattern ( ($generated@@260 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@227 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@226 $generated@@344)) (<= 0 ($generated@@225 $generated@@343))))
 :pattern ( ($generated@@225 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@61) (= (type $generated@@348) $generated@@61)) (= ($generated@@345 ($generated@@314 $generated@@347 $generated@@348)) $generated@@347))
 :pattern ( ($generated@@314 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@61) (= (type $generated@@352) $generated@@61)) (= ($generated@@349 ($generated@@314 $generated@@351 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@314 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@67 ($generated@@314 $generated@@353 $generated@@354)) $generated@@58))
 :pattern ( ($generated@@314 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@61) (= (type $generated@@358) $generated@@61)) (= ($generated@@355 ($generated@@326 $generated@@357 $generated@@358)) $generated@@357))
 :pattern ( ($generated@@326 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@61) (= (type $generated@@362) $generated@@61)) (= ($generated@@359 ($generated@@326 $generated@@361 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@61) (= (type $generated@@364) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@363 $generated@@364)) $generated@@59))
 :pattern ( ($generated@@326 $generated@@363 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (! (let (($generated@@370 ($generated@@227 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368 $generated@@369)) $generated@@370))
 :pattern ( ($generated@@366 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@226 $generated@@237)) (= (type $generated@@372) $generated@@61)) (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373) (forall (($generated@@374 Int) ) (!  (=> (and (<= 0 $generated@@374) (< $generated@@374 ($generated@@225 $generated@@371))) ($generated@@235 ($generated@@366 $generated@@371 $generated@@374) $generated@@372 $generated@@373))
 :pattern ( ($generated@@366 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@376 Int) ) (! (= ($generated@@375 ($generated@@70 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@70 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@61)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@61) (= ($generated@@377 ($generated@@297 $generated@@379)) $generated@@379))
 :pattern ( ($generated@@297 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@61) (= ($generated@@67 ($generated@@297 $generated@@380)) $generated@@54))
 :pattern ( ($generated@@297 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@61) (= ($generated@@381 ($generated@@303 $generated@@383)) $generated@@383))
 :pattern ( ($generated@@303 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@61) (= ($generated@@67 ($generated@@303 $generated@@384)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) $generated@@61)
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) $generated@@61)
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@61) (= ($generated@@386 ($generated@@385 $generated@@389)) $generated@@389))
 :pattern ( ($generated@@385 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@67 ($generated@@385 $generated@@390)) $generated@@56))
 :pattern ( ($generated@@385 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (= (type ($generated@@391 $generated@@392)) $generated@@61)
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@61) (= ($generated@@391 ($generated@@365 $generated@@393)) $generated@@393))
 :pattern ( ($generated@@365 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@67 ($generated@@365 $generated@@394)) $generated@@57))
 :pattern ( ($generated@@365 $generated@@394))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated@@395 $generated@@399 ($generated@@236 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@236 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (not ($generated@@0 ($generated@@76 ($generated@@338 $generated@@401) $generated@@400))))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@76 ($generated@@338 $generated@@401) $generated@@400)))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@216 $generated@@402 $generated@@403) (* $generated@@402 $generated@@403))
 :pattern ( ($generated@@216 $generated@@402 $generated@@403))
)))
(assert (= (type $generated@@404) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@405 Int) ($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@290 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@405 0)))) (and ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) (=> ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))) (= ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))  (and (and (> $generated@@405 0) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406))) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))))
 :weight 3
 :pattern ( ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@71 $generated@@237 $generated@@2)) (= (type $generated@@409) $generated@@61)) (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@237) (< 0 ($generated ($generated@@76 $generated@@408 $generated@@411)))) ($generated@@235 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@76 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 Int) ) (! (= ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))) ($generated@@133 ($generated@@236 ($generated@@8 $generated@@412))))
 :pattern ( ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))))
)))
(assert (forall (($generated@@413 T@U) ) (! (= ($generated@@236 ($generated@@133 $generated@@413)) ($generated@@133 ($generated@@236 $generated@@413)))
 :pattern ( ($generated@@236 ($generated@@133 $generated@@413)))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@227 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@226 $generated@@415)) (= ($generated@@225 $generated@@414) 0)) (= $generated@@414 ($generated@@224 $generated@@415))))
 :pattern ( ($generated@@225 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@417) $generated@@2)) ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
 :pattern ( ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@419) $generated@@3)) ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
 :pattern ( ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@421) $generated@@4)) ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
 :pattern ( ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
)))
(assert (= ($generated@@1 $generated@@422) 18))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@422)) ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@426) $generated@@237)) ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
 :pattern ( ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@427 Int) ($generated@@428 Int) ($generated@@429 Int) ) (!  (=> (or ($generated@@290 $generated@@427 $generated@@428 $generated@@429) (and (not (= 2 $generated@@127)) (and (> $generated@@428 0) (> $generated@@429 0)))) (and (=> (> $generated@@427 0) (and ($generated@@132 $generated@@427 $generated@@428) (=> ($generated@@128 $generated@@404 $generated@@427 $generated@@428) ($generated@@132 $generated@@427 $generated@@429)))) (= ($generated@@289 $generated@@427 $generated@@428 $generated@@429)  (and (and (> $generated@@427 0) ($generated@@128 $generated@@404 $generated@@427 $generated@@428)) ($generated@@128 $generated@@404 $generated@@427 $generated@@429)))))
 :pattern ( ($generated@@289 $generated@@427 $generated@@428 $generated@@429))
))))
(assert  (and (forall (($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@432)) $generated@@131)
 :pattern ( ($generated@@430 $generated@@432))
)) (= (type $generated@@431) $generated@@131)))
(assert (forall (($generated@@433 T@U) ($generated@@434 Int) ($generated@@435 Int) ) (!  (=> (= (type $generated@@433) $generated@@131) (= ($generated@@128 $generated@@433 $generated@@434 $generated@@435) ($generated@@128 $generated@@431 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@128 ($generated@@430 $generated@@433) $generated@@434 $generated@@435))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@436 Int) ($generated@@437 Int) ($generated@@438 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@436 0) (> $generated@@437 0))))))) (= ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (= ($generated@@130 ($generated@@216 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437))) ($generated@@130 $generated@@438))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@439 () Int)
(declare-fun $generated@@440 () Int)
(declare-fun $generated@@441 () T@U)
(declare-fun $generated@@442 (T@U) Bool)
(declare-fun $generated@@443 () T@U)
(declare-fun $generated@@444 () Int)
(declare-fun $generated@@445 () T@U)
(declare-fun $generated@@446 () T@U)
(declare-fun $generated@@447 () T@U)
(assert  (and (and (and (and (= (type $generated@@441) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@443) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@445) $generated@@131)) (= (type $generated@@446) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@447) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@448  (=> (and (> $generated@@439 $generated@@440) (> $generated@@440 0)) (=> (and (and (and ($generated@@208 $generated@@441) ($generated@@442 $generated@@441)) (= $generated@@443 $generated@@441)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@441) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@441))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@440 0)) (=> (and (> $generated@@439 0) (> $generated@@440 0)) (=> (and (and ($generated@@209 $generated@@439 $generated@@440) (= $generated@@444 (- $generated@@439 $generated@@440))) (and ($generated@@69 ($generated@@8 $generated@@444) $generated@@46 $generated@@441) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@441))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@444 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@440 0)))))))))))
(let (($generated@@449  (=> (and (>= $generated@@440 $generated@@439) (= (ControlFlow 0 7) 2)) $generated@@448)))
(let (($generated@@450  (=> (and (> $generated@@439 $generated@@440) (= (ControlFlow 0 6) 2)) $generated@@448)))
(let (($generated@@451  (=> (= ($generated@@430 $generated@@404) $generated@@404) (=> (and (= ($generated@@430 $generated@@445) $generated@@445) (= $generated@@446 ($generated@@150 $generated@@447 $generated@@443 $generated@@60 false))) (and (=> (= (ControlFlow 0 8) 6) $generated@@450) (=> (= (ControlFlow 0 8) 7) $generated@@449))))))
(let (($generated@@452  (=> (and (and ($generated@@208 $generated@@443) ($generated@@442 $generated@@443)) (and (= 6 $generated@@127) (= (ControlFlow 0 9) 8))) $generated@@451)))
$generated@@452))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 (Int Int) Bool)
(declare-fun $generated@@210 (Int Int) Bool)
(declare-fun $generated@@211 (Int Int) Int)
(declare-fun $generated@@216 (Int Int) Int)
(declare-fun $generated@@224 (T@T) T@U)
(declare-fun $generated@@225 (T@U) Int)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T T@T) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@289 (Int Int Int) Bool)
(declare-fun $generated@@290 (Int Int Int) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U Int) T@U)
(declare-fun $generated@@375 (T@U) Int)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@422 () T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (= (type $generated@@212) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@212) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@213 0) (> $generated@@214 0))))))))) (and ($generated@@210 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (= ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) (let (($generated@@215 ($generated@@211 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214))))
$generated@@215))))
 :weight 3
 :pattern ( ($generated@@207 ($generated@@130 $generated@@213) ($generated@@130 $generated@@214)) ($generated@@208 $generated@@212))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@217 Int) ($generated@@218 Int) ($generated@@219 Int) ) (!  (=> (or ($generated@@135 $generated@@217 $generated@@218 $generated@@219) (and (not (= 0 $generated@@127)) (and (> $generated@@217 0) (> $generated@@218 0)))) (= ($generated@@134 $generated@@217 $generated@@218 $generated@@219) (= ($generated@@216 $generated@@217 $generated@@218) $generated@@219)))
 :pattern ( ($generated@@134 $generated@@217 $generated@@218 $generated@@219))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@220 T@U) ($generated@@221 Int) ($generated@@222 Int) ) (!  (=> (and (= (type $generated@@220) ($generated@@71 $generated@@72 $generated@@73)) (or ($generated@@209 $generated@@221 $generated@@222) (and (not (= 5 $generated@@127)) (and ($generated@@208 $generated@@220) (and (> $generated@@221 0) (> $generated@@222 0)))))) (and ($generated@@210 $generated@@221 $generated@@222) (= ($generated@@207 $generated@@221 $generated@@222) (let (($generated@@223 ($generated@@211 $generated@@221 $generated@@222)))
$generated@@223))))
 :pattern ( ($generated@@207 $generated@@221 $generated@@222) ($generated@@208 $generated@@220))
))))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@228)) 14)) (forall (($generated@@229 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@226 $generated@@229))
))) (forall (($generated@@230 T@T) ) (! (= (type ($generated@@224 $generated@@230)) ($generated@@226 $generated@@230))
 :pattern ( ($generated@@224 $generated@@230))
))))
(assert (forall (($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@231)) 0)
 :pattern ( ($generated@@224 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ($generated@@234 Int) ) (!  (=> (= (type $generated@@232) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234) ($generated@@128 $generated@@232 $generated@@233 $generated@@234)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 15) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@236 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@61) (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241) ($generated@@69 $generated@@239 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (and (and (and (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@247 $generated@@248)) 16)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@244 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@244 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@245 (type $generated@@253))))
(= (type ($generated@@242 $generated@@253)) ($generated@@71 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@242 $generated@@253))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= (type ($generated@@243 $generated@@255 $generated@@256)) ($generated@@244 $generated@@255 $generated@@256))
 :pattern ( ($generated@@243 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@T) ) (! (let (($generated@@259 (type $generated@@257)))
 (not ($generated@@0 ($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257))))
 :pattern ( (let (($generated@@259 (type $generated@@257)))
($generated@@76 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257)))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 17)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@71 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@76 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@246 (type $generated@@278))))
(let (($generated@@280 ($generated@@245 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@244 $generated@@280 $generated@@279)) (or (= $generated@@278 ($generated@@243 $generated@@280 $generated@@279)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@278) $generated@@281)))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@242 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@264 (type $generated@@282))))
(let (($generated@@284 ($generated@@263 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@262 $generated@@284 $generated@@283)) (or (= $generated@@282 ($generated@@261 $generated@@284 $generated@@283)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@282) $generated@@285)))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@260 $generated@@282))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@286 Int) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@135 $generated@@286 $generated@@287 $generated@@288) (and (not (= 0 $generated@@127)) (and (> $generated@@286 0) (> $generated@@287 0)))) true)
 :pattern ( ($generated@@134 $generated@@286 $generated@@287 $generated@@288))
))))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@291 Int) ($generated@@292 Int) ($generated@@293 Int) ) (!  (=> (or ($generated@@290 $generated@@291 $generated@@292 $generated@@293) (and (not (= 2 $generated@@127)) (and (> $generated@@292 0) (> $generated@@293 0)))) true)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 Int) ($generated@@295 Int) ) (!  (=> ($generated@@210 $generated@@294 $generated@@295) (and ($generated@@289 ($generated@@211 $generated@@294 $generated@@295) $generated@@294 $generated@@295) (forall (($generated@@296 Int) ) (!  (=> true (=> ($generated@@289 $generated@@296 $generated@@294 $generated@@295) (<= $generated@@296 ($generated@@211 $generated@@294 $generated@@295))))
 :pattern ( ($generated@@289 $generated@@296 $generated@@294 $generated@@295))
))))
 :pattern ( ($generated@@211 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@299) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@237) ($generated@@0 ($generated@@76 $generated@@299 $generated@@302))) ($generated@@235 $generated@@302 $generated@@300 $generated@@301))
 :pattern ( ($generated@@76 $generated@@299 $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@297 $generated@@300) $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@305) ($generated@@71 $generated@@237 $generated@@4)) (= (type $generated@@306) $generated@@61)) (= (type $generated@@307) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@237) ($generated@@0 ($generated@@76 $generated@@305 $generated@@308))) ($generated@@235 $generated@@308 $generated@@306 $generated@@307))
 :pattern ( ($generated@@76 $generated@@305 $generated@@308))
))))
 :pattern ( ($generated@@69 $generated@@305 ($generated@@303 $generated@@306) $generated@@307))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@309 T@U) ($generated@@310 Int) ($generated@@311 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@131) (or ($generated@@132 $generated@@310 $generated@@311) (and (not (= 1 $generated@@127)) (and (> $generated@@310 0) (> $generated@@311 0))))) true)
 :pattern ( ($generated@@128 $generated@@309 $generated@@310 $generated@@311))
))))
(assert  (=> (<= 5 $generated@@127) (forall (($generated@@312 Int) ($generated@@313 Int) ) (!  (=> (or ($generated@@209 $generated@@312 $generated@@313) (and (not (= 5 $generated@@127)) (and (> $generated@@312 0) (> $generated@@313 0)))) true)
 :pattern ( ($generated@@207 $generated@@312 $generated@@313))
))))
(assert  (and (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@246 (type $generated@@318))))
(let (($generated@@320 ($generated@@245 (type $generated@@318))))
(= (type ($generated@@315 $generated@@318)) ($generated@@71 $generated@@320 $generated@@319))))
 :pattern ( ($generated@@315 $generated@@318))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (= (type $generated@@321) ($generated@@244 $generated@@237 $generated@@237)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))) (and ($generated@@235 ($generated@@76 ($generated@@315 $generated@@321) $generated@@325) $generated@@323 $generated@@324) ($generated@@235 $generated@@325 $generated@@322 $generated@@324)))
 :pattern ( ($generated@@76 ($generated@@315 $generated@@321) $generated@@325))
 :pattern ( ($generated@@76 ($generated@@242 $generated@@321) $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@314 $generated@@322 $generated@@323) $generated@@324))
)))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
)) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@264 (type $generated@@330))))
(let (($generated@@332 ($generated@@263 (type $generated@@330))))
(= (type ($generated@@327 $generated@@330)) ($generated@@71 $generated@@332 $generated@@331))))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@262 $generated@@237 $generated@@237)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@237) ($generated@@0 ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))) (and ($generated@@235 ($generated@@76 ($generated@@327 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@235 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@76 ($generated@@327 $generated@@333) $generated@@337))
 :pattern ( ($generated@@76 ($generated@@260 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@326 $generated@@334 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@71 $generated@@339 $generated@@4))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@264 (type $generated@@340))))
(let (($generated@@342 ($generated@@263 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@262 $generated@@342 $generated@@341)) (= (= $generated@@340 ($generated@@261 $generated@@342 $generated@@341)) (= ($generated@@260 $generated@@340) ($generated@@338 $generated@@342))))))
 :pattern ( ($generated@@260 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@227 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@226 $generated@@344)) (<= 0 ($generated@@225 $generated@@343))))
 :pattern ( ($generated@@225 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@61) (= (type $generated@@348) $generated@@61)) (= ($generated@@345 ($generated@@314 $generated@@347 $generated@@348)) $generated@@347))
 :pattern ( ($generated@@314 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@61) (= (type $generated@@352) $generated@@61)) (= ($generated@@349 ($generated@@314 $generated@@351 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@314 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@61) (= (type $generated@@354) $generated@@61)) (= ($generated@@67 ($generated@@314 $generated@@353 $generated@@354)) $generated@@58))
 :pattern ( ($generated@@314 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@61) (= (type $generated@@358) $generated@@61)) (= ($generated@@355 ($generated@@326 $generated@@357 $generated@@358)) $generated@@357))
 :pattern ( ($generated@@326 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@61) (= (type $generated@@362) $generated@@61)) (= ($generated@@359 ($generated@@326 $generated@@361 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@326 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@61) (= (type $generated@@364) $generated@@61)) (= ($generated@@67 ($generated@@326 $generated@@363 $generated@@364)) $generated@@59))
 :pattern ( ($generated@@326 $generated@@363 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) $generated@@61)
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (! (let (($generated@@370 ($generated@@227 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368 $generated@@369)) $generated@@370))
 :pattern ( ($generated@@366 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@226 $generated@@237)) (= (type $generated@@372) $generated@@61)) (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373) (forall (($generated@@374 Int) ) (!  (=> (and (<= 0 $generated@@374) (< $generated@@374 ($generated@@225 $generated@@371))) ($generated@@235 ($generated@@366 $generated@@371 $generated@@374) $generated@@372 $generated@@373))
 :pattern ( ($generated@@366 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@69 $generated@@371 ($generated@@365 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@376 Int) ) (! (= ($generated@@375 ($generated@@70 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@70 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@61)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@61) (= ($generated@@377 ($generated@@297 $generated@@379)) $generated@@379))
 :pattern ( ($generated@@297 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@61) (= ($generated@@67 ($generated@@297 $generated@@380)) $generated@@54))
 :pattern ( ($generated@@297 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@61)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@61) (= ($generated@@381 ($generated@@303 $generated@@383)) $generated@@383))
 :pattern ( ($generated@@303 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@61) (= ($generated@@67 ($generated@@303 $generated@@384)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) $generated@@61)
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) $generated@@61)
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@61) (= ($generated@@386 ($generated@@385 $generated@@389)) $generated@@389))
 :pattern ( ($generated@@385 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@61) (= ($generated@@67 ($generated@@385 $generated@@390)) $generated@@56))
 :pattern ( ($generated@@385 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (= (type ($generated@@391 $generated@@392)) $generated@@61)
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@61) (= ($generated@@391 ($generated@@365 $generated@@393)) $generated@@393))
 :pattern ( ($generated@@365 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@61) (= ($generated@@67 ($generated@@365 $generated@@394)) $generated@@57))
 :pattern ( ($generated@@365 $generated@@394))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated@@395 $generated@@399 ($generated@@236 $generated@@398)) $generated@@398))
 :pattern ( ($generated@@236 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (not ($generated@@0 ($generated@@76 ($generated@@338 $generated@@401) $generated@@400))))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@76 ($generated@@338 $generated@@401) $generated@@400)))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@216 $generated@@402 $generated@@403) (* $generated@@402 $generated@@403))
 :pattern ( ($generated@@216 $generated@@402 $generated@@403))
)))
(assert (= (type $generated@@404) $generated@@131))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@405 Int) ($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@290 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)) (and (not (= 2 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (and (=> ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@405 0)))) (and ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) (=> ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406)) ($generated@@132 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))) (= ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))  (and (and (> $generated@@405 0) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406))) ($generated@@128 $generated@@404 ($generated@@130 $generated@@405) ($generated@@130 $generated@@407))))))
 :weight 3
 :pattern ( ($generated@@289 ($generated@@130 $generated@@405) ($generated@@130 $generated@@406) ($generated@@130 $generated@@407)))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@71 $generated@@237 $generated@@2)) (= (type $generated@@409) $generated@@61)) (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@237) (< 0 ($generated ($generated@@76 $generated@@408 $generated@@411)))) ($generated@@235 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@76 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@69 $generated@@408 ($generated@@385 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 Int) ) (! (= ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))) ($generated@@133 ($generated@@236 ($generated@@8 $generated@@412))))
 :pattern ( ($generated@@236 ($generated@@8 ($generated@@130 $generated@@412))))
)))
(assert (forall (($generated@@413 T@U) ) (! (= ($generated@@236 ($generated@@133 $generated@@413)) ($generated@@133 ($generated@@236 $generated@@413)))
 :pattern ( ($generated@@236 ($generated@@133 $generated@@413)))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@227 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@226 $generated@@415)) (= ($generated@@225 $generated@@414) 0)) (= $generated@@414 ($generated@@224 $generated@@415))))
 :pattern ( ($generated@@225 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@417) $generated@@2)) ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
 :pattern ( ($generated@@69 $generated@@417 $generated@@46 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@419) $generated@@3)) ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
 :pattern ( ($generated@@69 $generated@@419 $generated@@47 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@421) $generated@@4)) ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
 :pattern ( ($generated@@69 $generated@@421 $generated@@44 $generated@@420))
)))
(assert (= ($generated@@1 $generated@@422) 18))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@424) $generated@@422)) ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
 :pattern ( ($generated@@69 $generated@@424 $generated@@45 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@426) $generated@@237)) ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
 :pattern ( ($generated@@69 $generated@@426 $generated@@48 $generated@@425))
)))
(assert  (=> (<= 2 $generated@@127) (forall (($generated@@427 Int) ($generated@@428 Int) ($generated@@429 Int) ) (!  (=> (or ($generated@@290 $generated@@427 $generated@@428 $generated@@429) (and (not (= 2 $generated@@127)) (and (> $generated@@428 0) (> $generated@@429 0)))) (and (=> (> $generated@@427 0) (and ($generated@@132 $generated@@427 $generated@@428) (=> ($generated@@128 $generated@@404 $generated@@427 $generated@@428) ($generated@@132 $generated@@427 $generated@@429)))) (= ($generated@@289 $generated@@427 $generated@@428 $generated@@429)  (and (and (> $generated@@427 0) ($generated@@128 $generated@@404 $generated@@427 $generated@@428)) ($generated@@128 $generated@@404 $generated@@427 $generated@@429)))))
 :pattern ( ($generated@@289 $generated@@427 $generated@@428 $generated@@429))
))))
(assert  (and (forall (($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@432)) $generated@@131)
 :pattern ( ($generated@@430 $generated@@432))
)) (= (type $generated@@431) $generated@@131)))
(assert (forall (($generated@@433 T@U) ($generated@@434 Int) ($generated@@435 Int) ) (!  (=> (= (type $generated@@433) $generated@@131) (= ($generated@@128 $generated@@433 $generated@@434 $generated@@435) ($generated@@128 $generated@@431 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@128 ($generated@@430 $generated@@433) $generated@@434 $generated@@435))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@436 Int) ($generated@@437 Int) ($generated@@438 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@436 0) (> $generated@@437 0))))))) (= ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)) (= ($generated@@130 ($generated@@216 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437))) ($generated@@130 $generated@@438))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@436) ($generated@@130 $generated@@437) ($generated@@130 $generated@@438)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@439 () Int)
(declare-fun $generated@@440 () Int)
(declare-fun $generated@@441 () Int)
(declare-fun $generated@@442 () Int)
(declare-fun $generated@@443 () T@U)
(declare-fun $generated@@444 () T@U)
(declare-fun $generated@@445 (T@U) Bool)
(declare-fun $generated@@446 () Int)
(declare-fun $generated@@447 () T@U)
(declare-fun $generated@@448 () T@U)
(declare-fun $generated@@449 () Int)
(declare-fun $generated@@450 () Int)
(declare-fun $generated@@451 () Int)
(declare-fun $generated@@452 () T@U)
(declare-fun $generated@@453 () Int)
(declare-fun $generated@@454 () Int)
(declare-fun $generated@@455 () Int)
(declare-fun $generated@@456 () Int)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () T@U)
(declare-fun $generated@@460 () T@U)
(declare-fun $generated@@461 () Int)
(declare-fun $generated@@462 () Int)
(declare-fun $generated@@463 () Int)
(declare-fun $generated@@464 () Int)
(declare-fun $generated@@465 () T@U)
(declare-fun $generated@@466 () T@U)
(declare-fun $generated@@467 () Int)
(declare-fun $generated@@468 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@443) $generated@@131) (= (type $generated@@444) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@447) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@448) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@452) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@457) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@459) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@460) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@465) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@466) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 78) (let (($generated@@469 true))
(let (($generated@@470  (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@207 $generated@@439 $generated@@440) ($generated@@207 (- $generated@@439 $generated@@440) $generated@@440)))))
(let (($generated@@471  (=> (forall (($generated@@472 Int) ) (! ($generated@@290 $generated@@472 $generated@@439 $generated@@440)
 :pattern ( ($generated@@289 $generated@@472 $generated@@439 $generated@@440))
)) (and (=> (= (ControlFlow 0 4) (- 0 29)) (forall (($generated@@473 Int) ) (!  (=> true (=> ($generated@@289 $generated@@473 $generated@@439 $generated@@440) (<= $generated@@473 $generated@@441)))
 :pattern ( ($generated@@289 $generated@@473 $generated@@439 $generated@@440))
))) (=> (forall (($generated@@474 Int) ) (!  (=> true (=> ($generated@@289 $generated@@474 $generated@@439 $generated@@440) (<= $generated@@474 $generated@@441)))
 :pattern ( ($generated@@289 $generated@@474 $generated@@439 $generated@@440))
)) (and (=> (= (ControlFlow 0 4) (- 0 28)) (<= $generated@@442 $generated@@441)) (=> (<= $generated@@442 $generated@@441) (and (=> (= (ControlFlow 0 4) (- 0 27)) (> $generated@@441 0)) (=> (> $generated@@441 0) (and (=> (= (ControlFlow 0 4) (- 0 26)) (> $generated@@439 0)) (=> (> $generated@@439 0) (and (=> (= (ControlFlow 0 4) (- 0 25)) ($generated@@128 $generated@@443 $generated@@441 $generated@@439)) (=> ($generated@@128 $generated@@443 $generated@@441 $generated@@439) (=> (and (and ($generated@@208 $generated@@444) ($generated@@445 $generated@@444)) (and (= ($generated@@216 $generated@@446 $generated@@441) $generated@@439) (= $generated@@447 $generated@@444))) (and (=> (= (ControlFlow 0 4) (- 0 24)) (> $generated@@441 0)) (=> (> $generated@@441 0) (and (=> (= (ControlFlow 0 4) (- 0 23)) (> $generated@@440 0)) (=> (> $generated@@440 0) (and (=> (= (ControlFlow 0 4) (- 0 22)) ($generated@@128 $generated@@443 $generated@@441 $generated@@440)) (=> ($generated@@128 $generated@@443 $generated@@441 $generated@@440) (=> (and (and ($generated@@208 $generated@@448) ($generated@@445 $generated@@448)) (and (= ($generated@@216 $generated@@449 $generated@@441) $generated@@440) (= $generated@@444 $generated@@448))) (and (=> (= (ControlFlow 0 4) (- 0 21)) (= ($generated@@216 $generated@@446 $generated@@441) $generated@@439)) (=> (= ($generated@@216 $generated@@446 $generated@@441) $generated@@439) (and (=> (= (ControlFlow 0 4) (- 0 20)) (= ($generated@@216 $generated@@449 $generated@@441) $generated@@440)) (=> (= ($generated@@216 $generated@@449 $generated@@441) $generated@@440) (and (=> (= (ControlFlow 0 4) (- 0 19)) (= (- ($generated@@216 $generated@@446 $generated@@441) ($generated@@216 $generated@@449 $generated@@441)) (- $generated@@439 $generated@@440))) (=> (= (- ($generated@@216 $generated@@446 $generated@@441) ($generated@@216 $generated@@449 $generated@@441)) (- $generated@@439 $generated@@440)) (and (=> (= (ControlFlow 0 4) (- 0 18)) (= ($generated@@216 (- $generated@@446 $generated@@449) $generated@@441) (- $generated@@439 $generated@@440))) (=> (= ($generated@@216 (- $generated@@446 $generated@@449) $generated@@441) (- $generated@@439 $generated@@440)) (=> (and (= $generated@@450 (- $generated@@446 $generated@@449)) (= $generated@@451 (- $generated@@439 $generated@@440))) (and (=> (= (ControlFlow 0 4) (- 0 17)) (> $generated@@450 0)) (=> (> $generated@@450 0) (and (=> (= (ControlFlow 0 4) (- 0 16)) (> $generated@@441 0)) (=> (> $generated@@441 0) (and (=> (= (ControlFlow 0 4) (- 0 15)) (= ($generated@@216 $generated@@450 $generated@@441) $generated@@451)) (=> (= ($generated@@216 $generated@@450 $generated@@441) $generated@@451) (=> (and (and (and ($generated@@208 $generated@@452) ($generated@@445 $generated@@452)) (and ($generated@@132 $generated@@441 $generated@@451) ($generated@@128 $generated@@443 $generated@@441 $generated@@451))) (and (and (= $generated@@448 $generated@@452) ($generated@@69 ($generated@@8 $generated@@441) $generated@@46 $generated@@452)) (and (= $generated@@453 (- $generated@@439 $generated@@440)) ($generated@@69 ($generated@@8 $generated@@453) $generated@@46 $generated@@452)))) (and (=> (= (ControlFlow 0 4) (- 0 14)) (> $generated@@441 0)) (and (=> (= (ControlFlow 0 4) (- 0 13)) (> $generated@@453 0)) (=> (and ($generated@@132 $generated@@441 (- $generated@@439 $generated@@440)) ($generated@@132 $generated@@441 (- $generated@@439 $generated@@440))) (and (=> (= (ControlFlow 0 4) (- 0 12)) ($generated@@128 $generated@@443 $generated@@441 (- $generated@@439 $generated@@440))) (=> ($generated@@128 $generated@@443 $generated@@441 (- $generated@@439 $generated@@440)) (=> (and (and ($generated@@69 ($generated@@8 $generated@@441) $generated@@46 $generated@@452) (= $generated@@454 (- $generated@@439 $generated@@440))) (and ($generated@@69 ($generated@@8 $generated@@454) $generated@@46 $generated@@452) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@452))) (and (=> (= (ControlFlow 0 4) (- 0 11)) (> $generated@@454 0)) (and (=> (= (ControlFlow 0 4) (- 0 10)) (> $generated@@440 0)) (=> (and ($generated@@290 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440) ($generated@@290 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (=> ($generated@@290 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440) (or ($generated@@289 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440) (> $generated@@441 0)))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (=> ($generated@@290 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440) (or ($generated@@289 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440) ($generated@@128 $generated@@443 $generated@@441 (- $generated@@439 $generated@@440))))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (=> ($generated@@290 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440) (or ($generated@@289 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440) ($generated@@128 $generated@@443 $generated@@441 $generated@@440)))) (=> ($generated@@289 $generated@@441 (- $generated@@439 $generated@@440) $generated@@440) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= $generated@@441 $generated@@442)) (=> (<= $generated@@441 $generated@@442) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= $generated@@442 $generated@@441)) (=> (= $generated@@442 $generated@@441) (=> (= (ControlFlow 0 4) 3) $generated@@470)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@475  (=> (and (not ($generated@@289 $generated@@455 $generated@@439 $generated@@440)) (= (ControlFlow 0 31) 4)) $generated@@471)))
(let (($generated@@476  (=> (and ($generated@@289 $generated@@455 $generated@@439 $generated@@440) (= (ControlFlow 0 30) 4)) $generated@@471)))
(let (($generated@@477  (=> ($generated@@69 ($generated@@8 $generated@@455) $generated@@46 $generated@@447) (=> (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@447) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@447)) (and (=> (= (ControlFlow 0 32) (- 0 34)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 32) (- 0 33)) (> $generated@@440 0)) (=> ($generated@@290 $generated@@455 $generated@@439 $generated@@440) (and (=> (= (ControlFlow 0 32) 30) $generated@@476) (=> (= (ControlFlow 0 32) 31) $generated@@475)))))))))
(let (($generated@@478 true))
(let (($generated@@479  (=> (and ($generated@@290 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (=> ($generated@@289 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (forall (($generated@@480 Int) ($generated@@481 Int) ) (!  (=> (= $generated@@481 (- $generated@@439 $generated@@440)) ($generated@@290 $generated@@480 $generated@@481 $generated@@440))
 :pattern ( ($generated@@289 $generated@@480 $generated@@481 $generated@@440))
)))) (and (=> (= (ControlFlow 0 35) (- 0 62)) (=> ($generated@@290 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (or ($generated@@289 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (> $generated@@442 0)))) (and (=> (= (ControlFlow 0 35) (- 0 61)) (=> ($generated@@290 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (or ($generated@@289 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) ($generated@@128 $generated@@443 $generated@@442 (- $generated@@439 $generated@@440))))) (and (=> (= (ControlFlow 0 35) (- 0 60)) (=> ($generated@@290 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (or ($generated@@289 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) ($generated@@128 $generated@@443 $generated@@442 $generated@@440)))) (and (=> (= (ControlFlow 0 35) (- 0 59)) (forall (($generated@@482 Int) ($generated@@483 Int) ) (!  (=> true (=> (= $generated@@483 (- $generated@@439 $generated@@440)) (=> ($generated@@289 $generated@@482 $generated@@483 $generated@@440) (<= $generated@@482 $generated@@442))))
 :pattern ( ($generated@@289 $generated@@482 $generated@@483 $generated@@440))
))) (=> (and (and ($generated@@289 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (forall (($generated@@484 Int) ($generated@@485 Int) ) (!  (=> true (=> (= $generated@@485 (- $generated@@439 $generated@@440)) (=> ($generated@@289 $generated@@484 $generated@@485 $generated@@440) (<= $generated@@484 $generated@@442))))
 :pattern ( ($generated@@289 $generated@@484 $generated@@485 $generated@@440))
))) (= $generated@@456 (- $generated@@439 $generated@@440))) (and (=> (= (ControlFlow 0 35) (- 0 58)) (> $generated@@442 0)) (=> (> $generated@@442 0) (and (=> (= (ControlFlow 0 35) (- 0 57)) (> $generated@@456 0)) (=> (> $generated@@456 0) (and (=> (= (ControlFlow 0 35) (- 0 56)) ($generated@@128 $generated@@443 $generated@@442 $generated@@456)) (=> ($generated@@128 $generated@@443 $generated@@442 $generated@@456) (=> (and (and ($generated@@208 $generated@@457) ($generated@@445 $generated@@457)) (and (= ($generated@@216 $generated@@458 $generated@@442) $generated@@456) (= $generated@@459 $generated@@457))) (and (=> (= (ControlFlow 0 35) (- 0 55)) (= ($generated@@216 $generated@@458 $generated@@442) (- $generated@@439 $generated@@440))) (=> (= ($generated@@216 $generated@@458 $generated@@442) (- $generated@@439 $generated@@440)) (and (=> (= (ControlFlow 0 35) (- 0 54)) (> $generated@@442 0)) (=> (> $generated@@442 0) (and (=> (= (ControlFlow 0 35) (- 0 53)) (> $generated@@440 0)) (=> (> $generated@@440 0) (and (=> (= (ControlFlow 0 35) (- 0 52)) ($generated@@128 $generated@@443 $generated@@442 $generated@@440)) (=> ($generated@@128 $generated@@443 $generated@@442 $generated@@440) (=> (and (and ($generated@@208 $generated@@460) ($generated@@445 $generated@@460)) (and (= ($generated@@216 $generated@@461 $generated@@442) $generated@@440) (= $generated@@457 $generated@@460))) (and (=> (= (ControlFlow 0 35) (- 0 51)) (= ($generated@@216 $generated@@461 $generated@@442) $generated@@440)) (=> (= ($generated@@216 $generated@@461 $generated@@442) $generated@@440) (and (=> (= (ControlFlow 0 35) (- 0 50)) (= (+ ($generated@@216 $generated@@458 $generated@@442) ($generated@@216 $generated@@461 $generated@@442)) (+ (- $generated@@439 $generated@@440) $generated@@440))) (=> (= (+ ($generated@@216 $generated@@458 $generated@@442) ($generated@@216 $generated@@461 $generated@@442)) (+ (- $generated@@439 $generated@@440) $generated@@440)) (and (=> (= (ControlFlow 0 35) (- 0 49)) (= ($generated@@216 (+ $generated@@458 $generated@@461) $generated@@442) $generated@@439)) (=> (= ($generated@@216 (+ $generated@@458 $generated@@461) $generated@@442) $generated@@439) (=> (= $generated@@462 (+ $generated@@458 $generated@@461)) (and (=> (= (ControlFlow 0 35) (- 0 48)) (> $generated@@462 0)) (=> (> $generated@@462 0) (and (=> (= (ControlFlow 0 35) (- 0 47)) (> $generated@@442 0)) (=> (> $generated@@442 0) (and (=> (= (ControlFlow 0 35) (- 0 46)) (= ($generated@@216 $generated@@462 $generated@@442) $generated@@439)) (=> (= ($generated@@216 $generated@@462 $generated@@442) $generated@@439) (=> (and (and (and ($generated@@208 $generated@@447) ($generated@@445 $generated@@447)) ($generated@@132 $generated@@442 $generated@@439)) (and (and ($generated@@128 $generated@@443 $generated@@442 $generated@@439) (= $generated@@460 $generated@@447)) (and ($generated@@69 ($generated@@8 $generated@@442) $generated@@46 $generated@@447) ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@447)))) (and (=> (= (ControlFlow 0 35) (- 0 45)) (> $generated@@442 0)) (and (=> (= (ControlFlow 0 35) (- 0 44)) (> $generated@@439 0)) (=> (and ($generated@@132 $generated@@442 $generated@@439) ($generated@@132 $generated@@442 $generated@@439)) (and (=> (= (ControlFlow 0 35) (- 0 43)) ($generated@@128 $generated@@443 $generated@@442 $generated@@439)) (=> (and (and ($generated@@128 $generated@@443 $generated@@442 $generated@@439) ($generated@@69 ($generated@@8 $generated@@442) $generated@@46 $generated@@447)) (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@447) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@447))) (and (=> (= (ControlFlow 0 35) (- 0 42)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 35) (- 0 41)) (> $generated@@440 0)) (=> (and ($generated@@290 $generated@@442 $generated@@439 $generated@@440) ($generated@@290 $generated@@442 $generated@@439 $generated@@440)) (and (=> (= (ControlFlow 0 35) (- 0 40)) (=> ($generated@@290 $generated@@442 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@442 $generated@@439 $generated@@440) (> $generated@@442 0)))) (and (=> (= (ControlFlow 0 35) (- 0 39)) (=> ($generated@@290 $generated@@442 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@442 $generated@@439 $generated@@440) ($generated@@128 $generated@@443 $generated@@442 $generated@@439)))) (and (=> (= (ControlFlow 0 35) (- 0 38)) (=> ($generated@@290 $generated@@442 $generated@@439 $generated@@440) (or ($generated@@289 $generated@@442 $generated@@439 $generated@@440) ($generated@@128 $generated@@443 $generated@@442 $generated@@440)))) (=> ($generated@@289 $generated@@442 $generated@@439 $generated@@440) (=> (and ($generated@@69 ($generated@@8 $generated@@439) $generated@@46 $generated@@447) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@447)) (and (=> (= (ControlFlow 0 35) (- 0 37)) (> $generated@@439 0)) (and (=> (= (ControlFlow 0 35) (- 0 36)) (> $generated@@440 0)) (=> (and (and (and (> $generated@@439 0) (> $generated@@440 0)) ($generated@@209 $generated@@439 $generated@@440)) (and ($generated@@209 $generated@@439 $generated@@440) (= $generated@@441 ($generated@@207 $generated@@439 $generated@@440)))) (and (=> (= (ControlFlow 0 35) 32) $generated@@477) (=> (= (ControlFlow 0 35) 1) $generated@@478))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@486  (=> (and (not ($generated@@289 $generated@@463 $generated@@464 $generated@@440)) (= (ControlFlow 0 67) 35)) $generated@@479)))
(let (($generated@@487  (=> (and ($generated@@289 $generated@@463 $generated@@464 $generated@@440) (= (ControlFlow 0 66) 35)) $generated@@479)))
(let (($generated@@488  (=> (and (and (= $generated@@464 (- $generated@@439 $generated@@440)) ($generated@@69 ($generated@@8 $generated@@463) $generated@@46 $generated@@459)) (and ($generated@@69 ($generated@@8 $generated@@464) $generated@@46 $generated@@459) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@459))) (and (=> (= (ControlFlow 0 68) (- 0 70)) (> $generated@@464 0)) (and (=> (= (ControlFlow 0 68) (- 0 69)) (> $generated@@440 0)) (=> ($generated@@290 $generated@@463 $generated@@464 $generated@@440) (and (=> (= (ControlFlow 0 68) 66) $generated@@487) (=> (= (ControlFlow 0 68) 67) $generated@@486))))))))
(let (($generated@@489  (=> (and (not (= $generated@@464 (- $generated@@439 $generated@@440))) (= (ControlFlow 0 65) 35)) $generated@@479)))
(let (($generated@@490  (and (=> (= (ControlFlow 0 71) 68) $generated@@488) (=> (= (ControlFlow 0 71) 65) $generated@@489))))
(let (($generated@@491  (=> ($generated@@289 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (and (=> (= (ControlFlow 0 72) 71) $generated@@490) (=> (= (ControlFlow 0 72) 64) $generated@@469)))))
(let (($generated@@492  (=> (and (not ($generated@@289 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440)) (= (ControlFlow 0 63) 35)) $generated@@479)))
(let (($generated@@493  (=> (and (= ($generated@@430 $generated@@404) $generated@@404) (= ($generated@@430 $generated@@443) $generated@@443)) (=> (and (and (= $generated@@465 ($generated@@150 $generated@@466 $generated@@459 $generated@@60 false)) (= $generated@@467 (- $generated@@439 $generated@@440))) (and ($generated@@69 ($generated@@8 $generated@@467) $generated@@46 $generated@@459) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@459))) (and (=> (= (ControlFlow 0 73) (- 0 77)) (> $generated@@467 0)) (and (=> (= (ControlFlow 0 73) (- 0 76)) (> $generated@@440 0)) (=> (and (and (and (and (> $generated@@467 0) (> $generated@@440 0)) ($generated@@209 (- $generated@@439 $generated@@440) $generated@@440)) (and ($generated@@209 (- $generated@@439 $generated@@440) $generated@@440) (= $generated@@442 ($generated@@207 (- $generated@@439 $generated@@440) $generated@@440)))) (and (and ($generated@@69 ($generated@@8 $generated@@442) $generated@@46 $generated@@459) (= $generated@@468 (- $generated@@439 $generated@@440))) (and ($generated@@69 ($generated@@8 $generated@@468) $generated@@46 $generated@@459) ($generated@@69 ($generated@@8 $generated@@440) $generated@@46 $generated@@459)))) (and (=> (= (ControlFlow 0 73) (- 0 75)) (> $generated@@468 0)) (and (=> (= (ControlFlow 0 73) (- 0 74)) (> $generated@@440 0)) (=> ($generated@@290 $generated@@442 (- $generated@@439 $generated@@440) $generated@@440) (and (=> (= (ControlFlow 0 73) 72) $generated@@491) (=> (= (ControlFlow 0 73) 63) $generated@@492))))))))))))
(let (($generated@@494  (=> (and ($generated@@208 $generated@@459) ($generated@@445 $generated@@459)) (=> (and (and (= 6 $generated@@127) (> $generated@@439 $generated@@440)) (and (> $generated@@440 0) (= (ControlFlow 0 78) 73))) $generated@@493))))
$generated@@494))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@395 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@224) ($generated@@0 ($generated@@76 $generated@@278 $generated@@281))) ($generated@@222 $generated@@281 $generated@@279 $generated@@280))
 :pattern ( ($generated@@76 $generated@@278 $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@224) ($generated@@0 ($generated@@76 $generated@@284 $generated@@287))) ($generated@@222 $generated@@287 $generated@@285 $generated@@286))
 :pattern ( ($generated@@76 $generated@@284 $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@131) (or ($generated@@132 $generated@@289 $generated@@290) (and (not (= 1 $generated@@127)) (and (> $generated@@289 0) (> $generated@@290 0))))) true)
 :pattern ( ($generated@@128 $generated@@288 $generated@@289 $generated@@290))
))))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))) (and ($generated@@222 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@222 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))) (and ($generated@@222 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@222 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@251 (type $generated@@317))))
(let (($generated@@319 ($generated@@250 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@249 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@248 $generated@@319 $generated@@318)) (= ($generated@@247 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@247 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@214 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@213 $generated@@321)) (<= 0 ($generated@@212 $generated@@320))))
 :pattern ( ($generated@@212 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@291 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@291 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@291 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@291 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@303 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@303 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@303 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@303 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@214 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@213 $generated@@224)) (= (type $generated@@349) $generated@@61)) (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@212 $generated@@348))) ($generated@@222 ($generated@@343 $generated@@348 $generated@@351) $generated@@349 $generated@@350))
 :pattern ( ($generated@@343 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@353 Int) ) (! (= ($generated@@352 ($generated@@70 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@70 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@276 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@276 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@276 $generated@@357)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@282 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@282 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@282 $generated@@361)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@363 ($generated@@362 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@362 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@362 $generated@@367)) $generated@@56))
 :pattern ( ($generated@@362 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@368 ($generated@@342 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@342 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@371)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@371))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated@@372 $generated@@376 ($generated@@223 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@223 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@315 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 Int) ($generated@@380 Int) ) (! (= ($generated@@207 $generated@@379 $generated@@380) (* $generated@@379 $generated@@380))
 :pattern ( ($generated@@207 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@382) $generated@@61)) (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@381 $generated@@384)))) ($generated@@222 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@76 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@386)) ($generated@@133 ($generated@@223 $generated@@386)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@386)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@214 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@213 $generated@@388)) (= ($generated@@212 $generated@@387) 0)) (= $generated@@387 ($generated@@211 $generated@@388))))
 :pattern ( ($generated@@212 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@2)) ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@3)) ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@4)) ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
)))
(assert (= ($generated@@1 $generated@@395) 18))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@395)) ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@224)) ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@131)
 :pattern ( ($generated@@400 $generated@@402))
)) (= (type $generated@@401) $generated@@131)))
(assert (forall (($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (= (type $generated@@403) $generated@@131) (= ($generated@@128 $generated@@403 $generated@@404 $generated@@405) ($generated@@128 $generated@@401 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@128 ($generated@@400 $generated@@403) $generated@@404 $generated@@405))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@406 Int) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (= ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))) ($generated@@130 $generated@@408))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Int)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 (T@U) Bool)
(declare-fun $generated@@418 () T@U)
(declare-fun $generated@@419 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@409) $generated@@131) (= (type $generated@@410) $generated@@131)) (= (type $generated@@411) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@418) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@420  (=> (and (= ($generated@@400 $generated@@409) $generated@@409) (= ($generated@@400 $generated@@410) $generated@@410)) (=> (and (and (= $generated@@411 ($generated@@150 $generated@@412 $generated@@413 $generated@@60 false)) (> $generated@@414 0)) (and (> $generated@@415 0) (= ($generated@@207 $generated@@414 $generated@@415) $generated@@416))) (=> (and (and (and ($generated@@417 $generated@@418) ($generated@@419 $generated@@418)) (= $generated@@413 $generated@@418)) (and ($generated@@69 ($generated@@8 $generated@@415) $generated@@46 $generated@@418) ($generated@@69 ($generated@@8 $generated@@416) $generated@@46 $generated@@418))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@415 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@416 0))))))))
(let (($generated@@421  (=> (and (and ($generated@@417 $generated@@413) ($generated@@419 $generated@@413)) (and (= 2 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@420)))
$generated@@421)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@395 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@224) ($generated@@0 ($generated@@76 $generated@@278 $generated@@281))) ($generated@@222 $generated@@281 $generated@@279 $generated@@280))
 :pattern ( ($generated@@76 $generated@@278 $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@224) ($generated@@0 ($generated@@76 $generated@@284 $generated@@287))) ($generated@@222 $generated@@287 $generated@@285 $generated@@286))
 :pattern ( ($generated@@76 $generated@@284 $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@131) (or ($generated@@132 $generated@@289 $generated@@290) (and (not (= 1 $generated@@127)) (and (> $generated@@289 0) (> $generated@@290 0))))) true)
 :pattern ( ($generated@@128 $generated@@288 $generated@@289 $generated@@290))
))))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))) (and ($generated@@222 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@222 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))) (and ($generated@@222 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@222 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@251 (type $generated@@317))))
(let (($generated@@319 ($generated@@250 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@249 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@248 $generated@@319 $generated@@318)) (= ($generated@@247 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@247 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@214 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@213 $generated@@321)) (<= 0 ($generated@@212 $generated@@320))))
 :pattern ( ($generated@@212 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@291 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@291 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@291 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@291 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@303 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@303 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@303 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@303 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@214 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@213 $generated@@224)) (= (type $generated@@349) $generated@@61)) (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@212 $generated@@348))) ($generated@@222 ($generated@@343 $generated@@348 $generated@@351) $generated@@349 $generated@@350))
 :pattern ( ($generated@@343 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@353 Int) ) (! (= ($generated@@352 ($generated@@70 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@70 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@276 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@276 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@276 $generated@@357)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@282 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@282 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@282 $generated@@361)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@363 ($generated@@362 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@362 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@362 $generated@@367)) $generated@@56))
 :pattern ( ($generated@@362 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@368 ($generated@@342 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@342 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@371)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@371))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated@@372 $generated@@376 ($generated@@223 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@223 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@315 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 Int) ($generated@@380 Int) ) (! (= ($generated@@207 $generated@@379 $generated@@380) (* $generated@@379 $generated@@380))
 :pattern ( ($generated@@207 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@382) $generated@@61)) (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@381 $generated@@384)))) ($generated@@222 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@76 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@386)) ($generated@@133 ($generated@@223 $generated@@386)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@386)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@214 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@213 $generated@@388)) (= ($generated@@212 $generated@@387) 0)) (= $generated@@387 ($generated@@211 $generated@@388))))
 :pattern ( ($generated@@212 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@2)) ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@3)) ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@4)) ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
)))
(assert (= ($generated@@1 $generated@@395) 18))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@395)) ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@224)) ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@131)
 :pattern ( ($generated@@400 $generated@@402))
)) (= (type $generated@@401) $generated@@131)))
(assert (forall (($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (= (type $generated@@403) $generated@@131) (= ($generated@@128 $generated@@403 $generated@@404 $generated@@405) ($generated@@128 $generated@@401 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@128 ($generated@@400 $generated@@403) $generated@@404 $generated@@405))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@406 Int) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (= ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))) ($generated@@130 $generated@@408))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 (T@U) Bool)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@417 () T@U)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Int)
(declare-fun $generated@@420 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@409) $generated@@131) (= (type $generated@@410) $generated@@131)) (= (type $generated@@411) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@415) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@417) $generated@@131)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@421  (=> (= ($generated@@400 $generated@@409) $generated@@409) (=> (and (= ($generated@@400 $generated@@410) $generated@@410) (= $generated@@411 ($generated@@150 $generated@@412 $generated@@413 $generated@@60 false))) (=> (and (and (and (and ($generated@@414 $generated@@415) ($generated@@416 $generated@@415)) (= $generated@@413 $generated@@415)) (and (= $generated@@409 ($generated@@129 $generated@@417)) (= $generated@@410 ($generated@@129 ($generated@@129 $generated@@417))))) (and (and (= ($generated@@400 $generated@@417) $generated@@417) ($generated@@69 ($generated@@8 $generated@@418) $generated@@46 $generated@@415)) (and ($generated@@69 ($generated@@8 $generated@@419) $generated@@46 $generated@@415) ($generated@@69 ($generated@@8 $generated@@420) $generated@@46 $generated@@415)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (> $generated@@418 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (> $generated@@419 0)) (=> (and ($generated@@135 $generated@@418 $generated@@419 $generated@@420) ($generated@@135 $generated@@418 $generated@@419 $generated@@420)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@135 $generated@@418 $generated@@419 $generated@@420) (or ($generated@@134 $generated@@418 $generated@@419 $generated@@420) (= ($generated@@207 $generated@@418 $generated@@419) $generated@@420)))) (=> (and ($generated@@134 $generated@@418 $generated@@419 $generated@@420) (= (ControlFlow 0 2) (- 0 1))) ($generated@@128 $generated@@410 $generated@@419 $generated@@420)))))))))))
(let (($generated@@422  (=> (and (and (and ($generated@@414 $generated@@413) ($generated@@416 $generated@@413)) (= 2 $generated@@127)) (and (and (> $generated@@418 0) (> $generated@@419 0)) (and (= ($generated@@207 $generated@@418 $generated@@419) $generated@@420) (= (ControlFlow 0 6) 2)))) $generated@@421)))
$generated@@422)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int Int) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int Int Int) Bool)
(declare-fun $generated@@135 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(declare-fun $generated@@211 (T@T) T@U)
(declare-fun $generated@@212 (T@U) Int)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@395 () T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (and (not (= 1 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@140 0) (> $generated@@141 0)))))))) (and (forall (($generated@@142 Int) ) (!  (=> (> $generated@@142 0) ($generated@@135 $generated@@142 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@142 $generated@@140 $generated@@141))
)) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)) (exists (($generated@@143 Int) ) (!  (and (> $generated@@143 0) ($generated@@134 $generated@@143 ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
 :pattern ( ($generated@@134 $generated@@143 $generated@@140 $generated@@141))
)))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140) ($generated@@130 $generated@@141)))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@131) (or ($generated@@132 $generated@@145 $generated@@146) (and (not (= 1 $generated@@127)) (and (> $generated@@145 0) (> $generated@@146 0))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@135 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
 :pattern ( ($generated@@134 $generated@@148 $generated@@145 $generated@@146))
)))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@144) $generated@@145 $generated@@146))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@155 $generated@@156)) 13)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@153 ($generated@@151 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@151 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@153 (type $generated@@161))))
(= (type ($generated@@149 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@166)))
(= (type ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@151 $generated@@170 $generated@@169))))
 :pattern ( ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@153 (type $generated@@171))))
 (=> (= (type $generated@@174) $generated@@175) (= ($generated@@149 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@172 $generated@@173) $generated@@174)))
 :weight 0
))) (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@149 ($generated@@154 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@149 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@149 ($generated@@154 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@149 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or true (= ($generated@@149 ($generated@@154 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@149 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ) (! (= (type ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@151 $generated@@72 $generated@@4))
 :pattern ( ($generated@@150 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@64 (type $generated@@203))))
 (=> (and (and (and (and (= (type $generated@@198) $generated@@72) (= (type $generated@@199) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@200) ($generated@@63 $generated@@4))) (= (type $generated@@202) $generated@@72)) (= (type $generated@@203) ($generated@@63 $generated@@204))) (= ($generated@@0 ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (not (= $generated@@202 $generated@@198)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@199 $generated@@202) $generated@@200))) $generated@@201))))
 :pattern ( ($generated@@149 ($generated@@150 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@130 $generated@@205) $generated@@205)
 :pattern ( ($generated@@130 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 $generated@@206) $generated@@206)
 :pattern ( ($generated@@133 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@208 Int) ($generated@@209 Int) ($generated@@210 Int) ) (!  (=> (or ($generated@@135 $generated@@208 $generated@@209 $generated@@210) (and (not (= 0 $generated@@127)) (and (> $generated@@208 0) (> $generated@@209 0)))) (= ($generated@@134 $generated@@208 $generated@@209 $generated@@210) (= ($generated@@207 $generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@134 $generated@@208 $generated@@209 $generated@@210))
))))
(assert  (and (and (forall (($generated@@215 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@215)) 14)) (forall (($generated@@216 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ) (! (= (type ($generated@@211 $generated@@217)) ($generated@@213 $generated@@217))
 :pattern ( ($generated@@211 $generated@@217))
))))
(assert (forall (($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@218)) 0)
 :pattern ( ($generated@@211 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (= (type $generated@@219) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221) ($generated@@128 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 15) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@61) (= (type $generated@@228) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228) ($generated@@69 $generated@@226 $generated@@227 $generated@@228)))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 16)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 17)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@71 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@76 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@233 (type $generated@@265))))
(let (($generated@@267 ($generated@@232 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@231 $generated@@267 $generated@@266)) (or (= $generated@@265 ($generated@@230 $generated@@267 $generated@@266)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@265) $generated@@268)))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@229 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@251 (type $generated@@269))))
(let (($generated@@271 ($generated@@250 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@249 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@248 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@247 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@273 Int) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@135 $generated@@273 $generated@@274 $generated@@275) (and (not (= 0 $generated@@127)) (and (> $generated@@273 0) (> $generated@@274 0)))) true)
 :pattern ( ($generated@@134 $generated@@273 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@278) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@224) ($generated@@0 ($generated@@76 $generated@@278 $generated@@281))) ($generated@@222 $generated@@281 $generated@@279 $generated@@280))
 :pattern ( ($generated@@76 $generated@@278 $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@276 $generated@@279) $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@71 $generated@@224 $generated@@4)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@224) ($generated@@0 ($generated@@76 $generated@@284 $generated@@287))) ($generated@@222 $generated@@287 $generated@@285 $generated@@286))
 :pattern ( ($generated@@76 $generated@@284 $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@282 $generated@@285) $generated@@286))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@131) (or ($generated@@132 $generated@@289 $generated@@290) (and (not (= 1 $generated@@127)) (and (> $generated@@289 0) (> $generated@@290 0))))) true)
 :pattern ( ($generated@@128 $generated@@288 $generated@@289 $generated@@290))
))))
(assert  (and (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@61)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
(= (type ($generated@@292 $generated@@295)) ($generated@@71 $generated@@297 $generated@@296))))
 :pattern ( ($generated@@292 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) ($generated@@231 $generated@@224 $generated@@224)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))) (and ($generated@@222 ($generated@@76 ($generated@@292 $generated@@298) $generated@@302) $generated@@300 $generated@@301) ($generated@@222 $generated@@302 $generated@@299 $generated@@301)))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@298) $generated@@302))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@298) $generated@@302))
))))
 :pattern ( ($generated@@69 $generated@@298 ($generated@@291 $generated@@299 $generated@@300) $generated@@301))
)))
(assert  (and (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
(= (type ($generated@@304 $generated@@307)) ($generated@@71 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@304 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) ($generated@@249 $generated@@224 $generated@@224)) (= (type $generated@@311) $generated@@61)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@224) ($generated@@0 ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))) (and ($generated@@222 ($generated@@76 ($generated@@304 $generated@@310) $generated@@314) $generated@@312 $generated@@313) ($generated@@222 $generated@@314 $generated@@311 $generated@@313)))
 :pattern ( ($generated@@76 ($generated@@304 $generated@@310) $generated@@314))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@310) $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@310 ($generated@@303 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@251 (type $generated@@317))))
(let (($generated@@319 ($generated@@250 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@249 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@248 $generated@@319 $generated@@318)) (= ($generated@@247 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@247 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@214 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@213 $generated@@321)) (<= 0 ($generated@@212 $generated@@320))))
 :pattern ( ($generated@@212 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@291 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@291 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@291 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@291 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@291 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@291 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@303 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@303 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@303 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@303 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@303 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@303 $generated@@340 $generated@@341))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@214 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@213 $generated@@224)) (= (type $generated@@349) $generated@@61)) (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@212 $generated@@348))) ($generated@@222 ($generated@@343 $generated@@348 $generated@@351) $generated@@349 $generated@@350))
 :pattern ( ($generated@@343 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@69 $generated@@348 ($generated@@342 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@353 Int) ) (! (= ($generated@@352 ($generated@@70 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@70 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@276 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@276 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@276 $generated@@357)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@282 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@282 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@282 $generated@@361)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@61)
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@363 ($generated@@362 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@362 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@362 $generated@@367)) $generated@@56))
 :pattern ( ($generated@@362 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@61) (= ($generated@@368 ($generated@@342 $generated@@370)) $generated@@370))
 :pattern ( ($generated@@342 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@371)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@371))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated@@372 $generated@@376 ($generated@@223 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@223 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@315 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 Int) ($generated@@380 Int) ) (! (= ($generated@@207 $generated@@379 $generated@@380) (* $generated@@379 $generated@@380))
 :pattern ( ($generated@@207 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@71 $generated@@224 $generated@@2)) (= (type $generated@@382) $generated@@61)) (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@224) (< 0 ($generated ($generated@@76 $generated@@381 $generated@@384)))) ($generated@@222 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@76 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@69 $generated@@381 ($generated@@362 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))) ($generated@@133 ($generated@@223 ($generated@@8 $generated@@385))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@130 $generated@@385))))
)))
(assert (forall (($generated@@386 T@U) ) (! (= ($generated@@223 ($generated@@133 $generated@@386)) ($generated@@133 ($generated@@223 $generated@@386)))
 :pattern ( ($generated@@223 ($generated@@133 $generated@@386)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@214 (type $generated@@387))))
 (=> (and (= (type $generated@@387) ($generated@@213 $generated@@388)) (= ($generated@@212 $generated@@387) 0)) (= $generated@@387 ($generated@@211 $generated@@388))))
 :pattern ( ($generated@@212 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@2)) ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@46 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@3)) ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@47 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@4)) ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@44 $generated@@393))
)))
(assert (= ($generated@@1 $generated@@395) 18))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@395)) ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@45 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@399) $generated@@224)) ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
 :pattern ( ($generated@@69 $generated@@399 $generated@@48 $generated@@398))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) $generated@@131)
 :pattern ( ($generated@@400 $generated@@402))
)) (= (type $generated@@401) $generated@@131)))
(assert (forall (($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ) (!  (=> (= (type $generated@@403) $generated@@131) (= ($generated@@128 $generated@@403 $generated@@404 $generated@@405) ($generated@@128 $generated@@401 $generated@@404 $generated@@405)))
 :pattern ( ($generated@@128 ($generated@@400 $generated@@403) $generated@@404 $generated@@405))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@406 Int) ($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (and (not (= 0 $generated@@127)) ($generated@@0 ($generated@@133 ($generated@@11  (and (> $generated@@406 0) (> $generated@@407 0))))))) (= ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)) (= ($generated@@130 ($generated@@207 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407))) ($generated@@130 $generated@@408))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@130 $generated@@406) ($generated@@130 $generated@@407) ($generated@@130 $generated@@408)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Int)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@417 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@409) $generated@@131) (= (type $generated@@410) $generated@@131)) (= (type $generated@@411) ($generated@@151 $generated@@72 $generated@@4))) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@418  (=> (= ($generated@@400 $generated@@409) $generated@@409) (=> (and (= ($generated@@400 $generated@@410) $generated@@410) (= $generated@@411 ($generated@@150 $generated@@412 $generated@@413 $generated@@60 false))) (=> (and (and (> $generated@@414 0) (> $generated@@415 0)) (and ($generated@@69 ($generated@@8 $generated@@414) $generated@@46 $generated@@413) ($generated@@69 ($generated@@8 $generated@@415) $generated@@46 $generated@@413))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> $generated@@414 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (> $generated@@415 0))))))))
(let (($generated@@419  (=> (and (and ($generated@@416 $generated@@413) ($generated@@417 $generated@@413)) (and (= 2 $generated@@127) (= (ControlFlow 0 4) 2))) $generated@@418)))
$generated@@419)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int Int) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (Int Int Int) Bool)
(declare-fun $generated@@140 (Int Int Int) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@255 (Int Int) Int)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@134 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(= (type ($generated@@138 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (and (not (= 1 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@145 0) (> $generated@@146 0)))))))) (and (forall (($generated@@147 Int) ) (!  (=> (> $generated@@147 0) ($generated@@140 $generated@@147 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@147 $generated@@145 $generated@@146))
)) (= ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)) (exists (($generated@@148 Int) ) (!  (and (> $generated@@148 0) ($generated@@139 $generated@@148 ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
 :pattern ( ($generated@@139 $generated@@148 $generated@@145 $generated@@146))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145) ($generated@@135 $generated@@146)))
))))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@75 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@64) (= (type $generated@@157) $generated@@64)) (= (type $generated@@158) $generated@@153)) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 16) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@153)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (and (= (type $generated@@167) $generated@@136) (or ($generated@@137 $generated@@168 $generated@@169) (and (not (= 1 $generated@@132)) (and (> $generated@@168 0) (> $generated@@169 0))))) (and (forall (($generated@@170 Int) ) (!  (=> (> $generated@@170 0) ($generated@@140 $generated@@170 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@170 $generated@@168 $generated@@169))
)) (= ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169) (exists (($generated@@171 Int) ) (!  (and (> $generated@@171 0) ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
 :pattern ( ($generated@@139 $generated@@171 $generated@@168 $generated@@169))
)))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@167) $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@64)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@176) $generated@@64)) ($generated@@149 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@149 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@77 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@153)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@162)) (= (type $generated@@240) $generated@@162)) (= ($generated@@149 ($generated@@233 $generated@@239 $generated@@240) ($generated@@152 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@149 ($generated@@233 $generated@@239 $generated@@240) ($generated@@152 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@153) (= (type $generated@@242) $generated@@153)) (= ($generated@@159 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@159 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@149 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@162) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@149 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@149 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@162) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@149 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@135 $generated@@253) $generated@@253)
 :pattern ( ($generated@@135 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@138 $generated@@254) $generated@@254)
 :pattern ( ($generated@@138 $generated@@254))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@256 Int) ($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (or ($generated@@140 $generated@@256 $generated@@257 $generated@@258) (and (not (= 0 $generated@@132)) (and (> $generated@@256 0) (> $generated@@257 0)))) (= ($generated@@139 $generated@@256 $generated@@257 $generated@@258) (= ($generated@@255 $generated@@256 $generated@@257) $generated@@258)))
 :pattern ( ($generated@@139 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@162)) (= (type $generated@@264) $generated@@162)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@233 $generated@@263 $generated@@264) ($generated@@152 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@233 $generated@@263 $generated@@264) ($generated@@152 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@153) (= ($generated@@151 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@153) ($generated@@151 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@162) (= (type $generated@@271) $generated@@162)) (= $generated@@269 ($generated@@233 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@151 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 Int) ($generated@@282 Int) ) (!  (=> (= (type $generated@@280) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@280) $generated@@281 $generated@@282) ($generated@@133 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@162)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@74 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@260 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@76 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@76 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@81 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@2)) (= ($generated@@173 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@81 $generated@@330 $generated@@332))) (<= ($generated ($generated@@81 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@173 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@298 (type $generated@@333))))
(let (($generated@@335 ($generated@@297 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@296 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@295 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@294 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@298 (type $generated@@340))))
(let (($generated@@342 ($generated@@297 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@296 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@295 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@316 (type $generated@@344))))
(let (($generated@@346 ($generated@@315 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@314 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@313 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@312 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@316 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@316 (type $generated@@351))))
(let (($generated@@353 ($generated@@315 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@314 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@313 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@356) $generated@@64)) (= ($generated@@149 $generated@@355 ($generated@@172 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@355 $generated@@357)))) ($generated@@234 $generated@@357 $generated@@356))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@149 $generated@@355 ($generated@@172 $generated@@356)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@358 Int) ($generated@@359 Int) ($generated@@360 Int) ) (!  (=> (or ($generated@@140 $generated@@358 $generated@@359 $generated@@360) (and (not (= 0 $generated@@132)) (and (> $generated@@358 0) (> $generated@@359 0)))) true)
 :pattern ( ($generated@@139 $generated@@358 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@243 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@162) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@260 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@243 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@162 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@248 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@162) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@260 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@248 $generated@@366) $generated@@367))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@369 T@U) ($generated@@370 Int) ($generated@@371 Int) ) (!  (=> (and (= (type $generated@@369) $generated@@136) (or ($generated@@137 $generated@@370 $generated@@371) (and (not (= 1 $generated@@132)) (and (> $generated@@370 0) (> $generated@@371 0))))) true)
 :pattern ( ($generated@@133 $generated@@369 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@289 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@289 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@298 (type $generated@@380))))
(let (($generated@@382 ($generated@@297 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@296 $generated@@162 $generated@@162)) (= (type $generated@@384) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@383) ($generated@@160 ($generated@@375 $generated@@153 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@160 ($generated@@375 $generated@@153 $generated@@384))) ($generated@@161 ($generated@@375 $generated@@153 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@162 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@316 (type $generated@@388))))
(let (($generated@@390 ($generated@@315 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@314 $generated@@162 $generated@@162)) (= (type $generated@@392) $generated@@162)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@391) ($generated@@160 ($generated@@375 $generated@@153 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@160 ($generated@@375 $generated@@153 $generated@@392))) ($generated@@161 ($generated@@375 $generated@@153 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@297 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@296 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@315 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@314 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@296 $generated@@162 $generated@@162)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@314 $generated@@162 $generated@@162)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@316 (type $generated@@421))))
(let (($generated@@423 ($generated@@315 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@314 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@313 $generated@@423 $generated@@422)) (= ($generated@@312 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@312 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@316 (type $generated@@424))))
(let (($generated@@426 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@313 $generated@@426 $generated@@425)) (= ($generated@@348 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@348 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@314 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@313 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@162))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@298 (type $generated@@430))))
(let (($generated@@432 ($generated@@297 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@296 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@295 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@162) (= (type $generated@@434) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@283 ($generated@@233 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@316 (type $generated@@435))))
(let (($generated@@437 ($generated@@315 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@314 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@313 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@162) (= (type $generated@@439) $generated@@162)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@283 ($generated@@233 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@162) ($generated@@234 $generated@@440 $generated@@46)) (and (= ($generated@@283 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@149 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@162) ($generated@@234 $generated@@441 $generated@@47)) (and (= ($generated@@283 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@149 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@162) ($generated@@234 $generated@@442 $generated@@44)) (and (= ($generated@@283 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@149 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 21))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@162) ($generated@@234 $generated@@444 $generated@@45)) (and (= ($generated@@283 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@149 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@234 ($generated@@283 $generated@@445) $generated@@446) ($generated@@149 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@234 ($generated@@283 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@288 $generated@@447))))
 :pattern ( ($generated@@288 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@275 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@274 $generated@@450)) (<= 0 ($generated@@273 $generated@@449))))
 :pattern ( ($generated@@273 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@162) (= (type $generated@@472) $generated@@162)) (= ($generated@@266 ($generated@@233 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@152 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@152 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@152 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@152 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@162) (= (type $generated@@482) $generated@@162)) (= ($generated@@160 ($generated@@233 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@233 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@162) (= (type $generated@@484) $generated@@162)) (= ($generated@@161 ($generated@@233 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@275 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@274 $generated@@162)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@273 $generated@@491))) ($generated@@260 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@243 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@243 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@248 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@248 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@172 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@172 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@172 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@375 $generated@@514 ($generated@@283 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@283 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@296 $generated@@162 $generated@@162)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@149 $generated@@515 ($generated@@403 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@515) $generated@@518))) (and ($generated@@234 ($generated@@81 ($generated@@376 $generated@@515) $generated@@518) $generated@@517) ($generated@@234 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@149 $generated@@515 ($generated@@403 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@314 $generated@@162 $generated@@162)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@149 $generated@@519 ($generated@@411 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@162) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@519) $generated@@522))) (and ($generated@@234 ($generated@@81 ($generated@@386 $generated@@519) $generated@@522) $generated@@521) ($generated@@234 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@149 $generated@@519 ($generated@@411 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@162) (= (type $generated@@526) $generated@@162)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@233 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@233 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@162) (= (type $generated@@528) $generated@@162)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@233 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@233 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@162) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@234 $generated@@529 ($generated@@403 $generated@@530 $generated@@531))) (and (= ($generated@@283 ($generated@@375 ($generated@@296 $generated@@162 $generated@@162) $generated@@529)) $generated@@529) ($generated@@149 ($generated@@375 ($generated@@296 $generated@@162 $generated@@162) $generated@@529) ($generated@@403 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@234 $generated@@529 ($generated@@403 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@162) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@234 $generated@@532 ($generated@@411 $generated@@533 $generated@@534))) (and (= ($generated@@283 ($generated@@375 ($generated@@314 $generated@@162 $generated@@162) $generated@@532)) $generated@@532) ($generated@@149 ($generated@@375 ($generated@@314 $generated@@162 $generated@@162) $generated@@532) ($generated@@411 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@234 $generated@@532 ($generated@@411 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@162)) ($generated@@234 $generated@@537 ($generated@@152 $generated@@535 $generated@@536))) (and (= ($generated@@283 ($generated@@375 $generated@@153 $generated@@537)) $generated@@537) ($generated@@149 ($generated@@375 $generated@@153 $generated@@537) ($generated@@152 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@537 ($generated@@152 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@419 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@152 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@152 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@152 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 Int) ($generated@@545 Int) ) (! (= ($generated@@255 $generated@@544 $generated@@545) (* $generated@@544 $generated@@545))
 :pattern ( ($generated@@255 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@153) (= ($generated@@523 ($generated@@283 $generated@@546)) ($generated@@524 $generated@@546)))
 :pattern ( ($generated@@523 ($generated@@283 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@162) ($generated@@234 $generated@@547 ($generated@@75 0))) (and (= ($generated@@283 ($generated@@375 $generated@@2 $generated@@547)) $generated@@547) ($generated@@149 ($generated@@375 ($generated@@76 $generated@@162 $generated@@4) $generated@@547) ($generated@@75 0))))
 :pattern ( ($generated@@234 $generated@@547 ($generated@@75 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@162) (= (type $generated@@549) $generated@@64)) ($generated@@234 $generated@@548 ($generated@@243 $generated@@549))) (and (= ($generated@@283 ($generated@@375 ($generated@@76 $generated@@162 $generated@@4) $generated@@548)) $generated@@548) ($generated@@149 ($generated@@375 ($generated@@76 $generated@@162 $generated@@4) $generated@@548) ($generated@@243 $generated@@549))))
 :pattern ( ($generated@@234 $generated@@548 ($generated@@243 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@162) (= (type $generated@@551) $generated@@64)) ($generated@@234 $generated@@550 ($generated@@248 $generated@@551))) (and (= ($generated@@283 ($generated@@375 ($generated@@76 $generated@@162 $generated@@4) $generated@@550)) $generated@@550) ($generated@@149 ($generated@@375 ($generated@@76 $generated@@162 $generated@@4) $generated@@550) ($generated@@248 $generated@@551))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@248 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@162) (= (type $generated@@553) $generated@@64)) ($generated@@234 $generated@@552 ($generated@@172 $generated@@553))) (and (= ($generated@@283 ($generated@@375 ($generated@@76 $generated@@162 $generated@@2) $generated@@552)) $generated@@552) ($generated@@149 ($generated@@375 ($generated@@76 $generated@@162 $generated@@2) $generated@@552) ($generated@@172 $generated@@553))))
 :pattern ( ($generated@@234 $generated@@552 ($generated@@172 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@162) (= (type $generated@@555) $generated@@64)) ($generated@@234 $generated@@554 ($generated@@485 $generated@@555))) (and (= ($generated@@283 ($generated@@375 ($generated@@274 $generated@@162) $generated@@554)) $generated@@554) ($generated@@149 ($generated@@375 ($generated@@274 $generated@@162) $generated@@554) ($generated@@485 $generated@@555))))
 :pattern ( ($generated@@234 $generated@@554 ($generated@@485 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@162 $generated@@2)) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@556 ($generated@@172 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@162) (< 0 ($generated ($generated@@81 $generated@@556 $generated@@559)))) ($generated@@260 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@81 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@172 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@153) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@562) (and ($generated@@151 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@152 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@152 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@260 ($generated@@160 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@260 ($generated@@160 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@153) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@566) (and ($generated@@151 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@64) ($generated@@74 $generated@@564 ($generated@@152 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@74 $generated@@564 ($generated@@152 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@260 ($generated@@161 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@260 ($generated@@161 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@162) (= (type $generated@@569) $generated@@162)) (= ($generated@@233 ($generated@@138 $generated@@568) ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@233 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@233 ($generated@@138 $generated@@568) ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@135 $generated@@570))) ($generated@@138 ($generated@@283 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@135 $generated@@570))))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@283 ($generated@@138 $generated@@571)) ($generated@@138 ($generated@@283 $generated@@571)))
 :pattern ( ($generated@@283 ($generated@@138 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@275 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@274 $generated@@573)) (= ($generated@@273 $generated@@572) 0)) (= $generated@@572 ($generated@@272 $generated@@573))))
 :pattern ( ($generated@@273 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@76 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@288 ($generated@@82 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@288 $generated@@574) ($generated ($generated@@81 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@288 ($generated@@82 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@2)) ($generated@@74 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@3)) ($generated@@74 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@4)) ($generated@@74 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@443)) ($generated@@74 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@162)) ($generated@@74 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@274 $generated@@162)) (= (type $generated@@589) $generated@@64)) (= ($generated@@149 $generated@@588 ($generated@@485 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@273 $generated@@588))) ($generated@@234 ($generated@@486 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@486 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@149 $generated@@588 ($generated@@485 $generated@@589)))
)))
(assert  (and (forall (($generated@@593 T@U) ) (! (= (type ($generated@@591 $generated@@593)) $generated@@136)
 :pattern ( ($generated@@591 $generated@@593))
)) (= (type $generated@@592) $generated@@136)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ($generated@@596 Int) ) (!  (=> (= (type $generated@@594) $generated@@136) (= ($generated@@133 $generated@@594 $generated@@595 $generated@@596) ($generated@@133 $generated@@592 $generated@@595 $generated@@596)))
 :pattern ( ($generated@@133 ($generated@@591 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@274 $generated@@162)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@273 $generated@@598))) (< ($generated@@524 ($generated@@375 $generated@@153 ($generated@@486 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@524 ($generated@@375 $generated@@153 ($generated@@486 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@296 $generated@@162 $generated@@162)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@149 $generated@@600 ($generated@@403 $generated@@601 $generated@@602))) (and (and ($generated@@149 ($generated@@294 $generated@@600) ($generated@@243 $generated@@601)) ($generated@@149 ($generated@@337 $generated@@600) ($generated@@243 $generated@@602))) ($generated@@149 ($generated@@374 $generated@@600) ($generated@@243 ($generated@@152 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@403 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@314 $generated@@162 $generated@@162)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@149 $generated@@603 ($generated@@411 $generated@@604 $generated@@605))) (and (and ($generated@@149 ($generated@@312 $generated@@603) ($generated@@248 $generated@@604)) ($generated@@149 ($generated@@348 $generated@@603) ($generated@@248 $generated@@605))) ($generated@@149 ($generated@@385 $generated@@603) ($generated@@248 ($generated@@152 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@149 $generated@@603 ($generated@@411 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@149 $generated@@606 $generated@@46))
 :pattern ( ($generated@@149 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@149 $generated@@607 $generated@@47))
 :pattern ( ($generated@@149 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@149 $generated@@608 $generated@@44))
 :pattern ( ($generated@@149 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@443) ($generated@@149 $generated@@609 $generated@@45))
 :pattern ( ($generated@@149 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@162) ($generated@@149 $generated@@610 $generated@@48))
 :pattern ( ($generated@@149 $generated@@610 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@611 Int) ($generated@@612 Int) ($generated@@613 Int) ) (!  (=> (or ($generated@@140 ($generated@@135 $generated@@611) ($generated@@135 $generated@@612) ($generated@@135 $generated@@613)) (and (not (= 0 $generated@@132)) ($generated@@0 ($generated@@138 ($generated@@11  (and (> $generated@@611 0) (> $generated@@612 0))))))) (= ($generated@@139 ($generated@@135 $generated@@611) ($generated@@135 $generated@@612) ($generated@@135 $generated@@613)) (= ($generated@@135 ($generated@@255 ($generated@@135 $generated@@611) ($generated@@135 $generated@@612))) ($generated@@135 $generated@@613))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@135 $generated@@611) ($generated@@135 $generated@@612) ($generated@@135 $generated@@613)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@136)) (= (type $generated@@621) $generated@@136)) (= (type $generated@@622) ($generated@@179 $generated@@77 $generated@@4))) (= (type $generated@@623) $generated@@77)) (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@626) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@627  (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@255 $generated@@614 $generated@@615) $generated@@616))))
(let (($generated@@628  (=> (=> (> $generated@@617 0) ($generated@@140 $generated@@617 $generated@@615 $generated@@616)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (and ($generated@@149 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) (and (> (+ 0 1) 0) ($generated@@139 ($generated@@135 (+ 0 1)) $generated@@615 $generated@@616))) (or (and ($generated@@149 ($generated@@8 ($generated@@135 0)) $generated@@46) (and (> 0 0) ($generated@@139 ($generated@@135 0) $generated@@615 $generated@@616))) (exists (($generated@@629 Int) )  (and (> $generated@@629 0) ($generated@@139 $generated@@629 $generated@@615 $generated@@616)))))) (=> (or (and ($generated@@149 ($generated@@8 ($generated@@135 (+ 0 1))) $generated@@46) (and (> (+ 0 1) 0) ($generated@@139 ($generated@@135 (+ 0 1)) $generated@@615 $generated@@616))) (or (and ($generated@@149 ($generated@@8 ($generated@@135 0)) $generated@@46) (and (> 0 0) ($generated@@139 ($generated@@135 0) $generated@@615 $generated@@616))) (exists (($generated@@630 Int) )  (and (> $generated@@630 0) ($generated@@139 $generated@@630 $generated@@615 $generated@@616))))) (=> (and (and (> $generated@@618 0) ($generated@@139 $generated@@618 $generated@@615 $generated@@616)) (and (= $generated@@614 $generated@@618) (= (ControlFlow 0 4) 3))) $generated@@627))))))
(let (($generated@@631  (=> (and (>= 0 $generated@@617) (= (ControlFlow 0 9) 4)) $generated@@628)))
(let (($generated@@632  (=> (and (and (> $generated@@617 0) ($generated@@74 ($generated@@8 $generated@@617) $generated@@46 $generated@@619)) (and ($generated@@74 ($generated@@8 $generated@@615) $generated@@46 $generated@@619) ($generated@@74 ($generated@@8 $generated@@616) $generated@@46 $generated@@619))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (> $generated@@617 0)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (> $generated@@615 0)) (=> (and ($generated@@140 $generated@@617 $generated@@615 $generated@@616) (= (ControlFlow 0 6) 4)) $generated@@628))))))
(let (($generated@@633  (and (=> (= (ControlFlow 0 10) 6) $generated@@632) (=> (= (ControlFlow 0 10) 9) $generated@@631))))
(let (($generated@@634 true))
(let (($generated@@635  (=> (= ($generated@@591 $generated@@620) $generated@@620) (=> (and (and (and (= ($generated@@591 $generated@@621) $generated@@621) (= $generated@@622 ($generated@@178 $generated@@623 $generated@@624 $generated@@60 false))) (and ($generated@@259 $generated@@619) ($generated@@625 $generated@@619))) (and (and (= $generated@@624 $generated@@619) (= $generated@@620 ($generated@@134 $generated@@626))) (and (= $generated@@621 ($generated@@134 ($generated@@134 $generated@@626))) (= ($generated@@591 $generated@@626) $generated@@626)))) (and (=> (= (ControlFlow 0 11) 10) $generated@@633) (=> (= (ControlFlow 0 11) 1) $generated@@634))))))
(let (($generated@@636  (=> (and (and (and ($generated@@259 $generated@@624) ($generated@@625 $generated@@624)) (= 2 $generated@@132)) (and (and (> $generated@@615 0) (> $generated@@616 0)) (and ($generated@@133 $generated@@621 $generated@@615 $generated@@616) (= (ControlFlow 0 12) 11)))) $generated@@635)))
$generated@@636)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
