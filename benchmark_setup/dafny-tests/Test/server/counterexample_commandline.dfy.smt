(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@249 (T@T T@U T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (Int) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 () T@T)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U T@U) Bool)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@86 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 16) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@70)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@70) (= (type $generated@@159) $generated@@70)) (= (type $generated@@160) $generated@@155)) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 17) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@70)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@70)) ($generated@@151 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@151 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@88) (= ($generated@@151 $generated@@176 $generated@@147)  (or (= $generated@@176 $generated@@148) (= ($generated@@174 $generated@@176) $generated@@147))))
 :pattern ( ($generated@@151 $generated@@176 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 18)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@88 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@73 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@88) (= (type $generated@@227) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@228) ($generated@@72 $generated@@4))) (= (type $generated@@230) $generated@@88)) (= (type $generated@@231) ($generated@@72 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (= (type $generated@@233) $generated@@70))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@88) (= (type $generated@@235) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@234 $generated@@233 $generated@@235) ($generated@@85 $generated@@234 $generated@@147 $generated@@235)))
 :pattern ( ($generated@@85 $generated@@234 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@155)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@70) (= (type $generated@@241) $generated@@70)) (= (type $generated@@242) $generated@@164)) (= (type $generated@@243) $generated@@164)) (= ($generated@@151 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@151 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241)))
)))
(assert  (and (and (forall (($generated@@247 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@247)) 19)) (forall (($generated@@248 T@T) ) (! (= ($generated@@246 ($generated@@245 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
))) (= (type $generated@@244) ($generated@@72 ($generated@@245 $generated@@164)))))
(assert (= ($generated@@80 $generated@@244) 0))
(assert (forall (($generated@@250 T@T) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@72 $generated@@250))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251 $generated@@252))
)))
(assert (= ($generated@@249 ($generated@@245 $generated@@164) $generated@@64 $generated@@69) $generated@@244))
(assert  (not ($generated@@253 $generated@@244)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@258) $generated@@88)) (and ($generated@@254 $generated@@257) (and (not (= $generated@@258 $generated@@148)) (= ($generated@@174 $generated@@258) $generated@@147)))) ($generated@@151 ($generated@@94 ($generated@@92 $generated@@257 $generated@@258) $generated@@244) ($generated@@255 $generated@@45)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@257 $generated@@258) $generated@@244))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@155) (= (type $generated@@260) $generated@@155)) (= ($generated@@161 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@161 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@151 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@164) ($generated@@0 ($generated@@92 $generated@@263 $generated@@265))) ($generated@@237 $generated@@265 $generated@@264))
 :pattern ( ($generated@@92 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@151 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@151 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@164) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@237 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@151 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (= ($generated@@1 $generated@@279) 20) (forall (($generated@@280 Int) ) (! (= (type ($generated@@277 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@281 Int) ) (!  (=> (and (<= 0 $generated@@281) (< $generated@@281 65536)) (= ($generated@@278 ($generated@@277 $generated@@281)) $generated@@281))
 :pattern ( ($generated@@277 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@70) (= (type $generated@@284) $generated@@70)) (= (type $generated@@285) $generated@@164)) (= (type $generated@@286) $generated@@164)) (= (type $generated@@287) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@254 $generated@@287)) (= ($generated@@85 ($generated@@236 $generated@@285 $generated@@286) ($generated@@154 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@85 ($generated@@236 $generated@@285 $generated@@286) ($generated@@154 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@75)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@155) (= ($generated@@153 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@155) ($generated@@153 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@164) (= (type $generated@@293) $generated@@164)) (= $generated@@291 ($generated@@236 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@153 $generated@@291))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@294 $generated@@296)) ($generated@@245 $generated@@296))
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) 0)
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert ($generated@@253 $generated@@60))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@279) (and (and (= ($generated@@277 ($generated@@278 $generated@@298)) $generated@@298) (<= 0 ($generated@@278 $generated@@298))) (< ($generated@@278 $generated@@298) 65536)))
 :pattern ( ($generated@@278 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@164)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@70) (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@282 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@85 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@282 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@306) $generated@@164)) (= (type $generated@@307) $generated@@70)) ($generated@@143 $generated@@304 $generated@@305)) ($generated@@282 $generated@@306 $generated@@307 $generated@@304)) ($generated@@282 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@143 $generated@@304 $generated@@305) ($generated@@282 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@309) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@311) $generated@@70)) ($generated@@143 $generated@@308 $generated@@309)) ($generated@@85 $generated@@310 $generated@@311 $generated@@308)) ($generated@@85 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@143 $generated@@308 $generated@@309) ($generated@@85 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@87 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@90 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@87 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@92 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 21)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@87 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@92 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@92 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 22)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@87 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@92 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@92 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@356) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@354 $generated@@355 $generated@@356)) (and ($generated@@143 $generated@@355 $generated@@356) (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@73 (type $generated@@358))))
 (=> (and (and (= (type $generated@@357) $generated@@88) (= (type $generated@@358) ($generated@@72 $generated@@359))) (not ($generated@@253 $generated@@358))) (= ($generated@@94 ($generated@@92 $generated@@355 $generated@@357) $generated@@358) ($generated@@94 ($generated@@92 $generated@@356 $generated@@357) $generated@@358))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@356 $generated@@357) $generated@@358))
))))
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@90 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@87 $generated@@361 $generated@@2)) (= ($generated@@170 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@92 $generated@@360 $generated@@362))) (<= ($generated ($generated@@92 $generated@@360 $generated@@362)) ($generated@@312 $generated@@360))))
 :pattern ( ($generated@@92 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@170 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@164) ($generated@@237 $generated@@366 $generated@@147)) (and (= ($generated@@299 ($generated@@363 $generated@@88 $generated@@366)) $generated@@366) ($generated@@151 ($generated@@363 $generated@@88 $generated@@366) $generated@@147)))
 :pattern ( ($generated@@237 $generated@@366 $generated@@147))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@164) ($generated@@237 $generated@@367 $generated@@233)) (and (= ($generated@@299 ($generated@@363 $generated@@88 $generated@@367)) $generated@@367) ($generated@@151 ($generated@@363 $generated@@88 $generated@@367) $generated@@233)))
 :pattern ( ($generated@@237 $generated@@367 $generated@@233))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@88) (= ($generated@@151 $generated@@368 $generated@@233)  (and ($generated@@151 $generated@@368 $generated@@147) (not (= $generated@@368 $generated@@148)))))
 :pattern ( ($generated@@151 $generated@@368 $generated@@233))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@370) $generated@@88)) (=> (and (and ($generated@@254 $generated@@369) (and (not (= $generated@@370 $generated@@148)) (= ($generated@@174 $generated@@370) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@369 $generated@@370) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@369 $generated@@370) $generated@@244) ($generated@@255 $generated@@45) $generated@@369)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@369 $generated@@370) $generated@@244))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@322 (type $generated@@371))))
(let (($generated@@373 ($generated@@321 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@320 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@319 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@318 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@322 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@87 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@322 (type $generated@@378))))
(let (($generated@@380 ($generated@@321 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@320 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@319 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@92 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@340 (type $generated@@382))))
(let (($generated@@384 ($generated@@339 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@338 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@337 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@336 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@340 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@87 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@340 (type $generated@@389))))
(let (($generated@@391 ($generated@@339 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@338 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@337 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@92 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@394) $generated@@70)) (= ($generated@@151 $generated@@393 ($generated@@169 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@164) (< 0 ($generated ($generated@@92 $generated@@393 $generated@@395)))) ($generated@@237 $generated@@395 $generated@@394))
 :pattern ( ($generated@@92 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@151 $generated@@393 ($generated@@169 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@396 ($generated@@261 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@164) ($generated@@0 ($generated@@92 $generated@@396 $generated@@399))) ($generated@@282 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@92 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@85 $generated@@396 ($generated@@261 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@401) $generated@@70)) (= (type $generated@@402) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@400 ($generated@@266 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@164) ($generated@@0 ($generated@@92 $generated@@400 $generated@@403))) ($generated@@282 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@92 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@85 $generated@@400 ($generated@@266 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@92 ($generated@@313 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@92 ($generated@@313 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@322 (type $generated@@409))))
(let (($generated@@411 ($generated@@321 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@87 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@320 $generated@@164 $generated@@164)) (= (type $generated@@413) $generated@@164)) (= ($generated@@0 ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@92 ($generated@@318 $generated@@412) ($generated@@162 ($generated@@363 $generated@@155 $generated@@413)))) (= ($generated@@92 ($generated@@407 $generated@@412) ($generated@@162 ($generated@@363 $generated@@155 $generated@@413))) ($generated@@163 ($generated@@363 $generated@@155 $generated@@413))))))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@340 (type $generated@@417))))
(let (($generated@@419 ($generated@@339 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@87 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@338 $generated@@164 $generated@@164)) (= (type $generated@@421) $generated@@164)) (= ($generated@@0 ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@92 ($generated@@336 $generated@@420) ($generated@@162 ($generated@@363 $generated@@155 $generated@@421)))) (= ($generated@@92 ($generated@@415 $generated@@420) ($generated@@162 ($generated@@363 $generated@@155 $generated@@421))) ($generated@@163 ($generated@@363 $generated@@155 $generated@@421))))))
 :pattern ( ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@321 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@320 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@92 ($generated@@375 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@92 ($generated@@318 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@92 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@422) $generated@@426))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@92 ($generated@@375 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@339 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@338 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@92 ($generated@@386 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@92 ($generated@@336 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@427) $generated@@431))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@92 ($generated@@386 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@320 $generated@@164 $generated@@164)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@435) $generated@@439))) (and ($generated@@282 ($generated@@92 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@282 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@338 $generated@@164 $generated@@164)) (= (type $generated@@444) $generated@@70)) (= (type $generated@@445) $generated@@70)) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@443) $generated@@447))) (and ($generated@@282 ($generated@@92 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@282 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@448) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@449) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@448 $generated@@450))) (and ($generated@@143 $generated@@448 $generated@@449) ($generated@@143 $generated@@449 $generated@@450))) ($generated@@143 $generated@@448 $generated@@450))
 :pattern ( ($generated@@143 $generated@@448 $generated@@449) ($generated@@143 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@87 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@340 (type $generated@@453))))
(let (($generated@@455 ($generated@@339 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@338 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@337 $generated@@455 $generated@@454)) (= ($generated@@336 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@336 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@340 (type $generated@@456))))
(let (($generated@@458 ($generated@@339 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@338 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@337 $generated@@458 $generated@@457)) (= ($generated@@386 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@386 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@340 (type $generated@@459))))
(let (($generated@@461 ($generated@@339 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@338 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@337 $generated@@461 $generated@@460)) (= ($generated@@414 $generated@@459) ($generated@@451 $generated@@164))))))
 :pattern ( ($generated@@414 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@322 (type $generated@@462))))
(let (($generated@@464 ($generated@@321 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@320 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@319 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@164) (= (type $generated@@466) $generated@@164)) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@462) ($generated@@299 ($generated@@236 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@406 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@340 (type $generated@@467))))
(let (($generated@@469 ($generated@@339 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@338 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@337 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@164) (= (type $generated@@471) $generated@@164)) ($generated@@0 ($generated@@92 ($generated@@414 $generated@@467) ($generated@@299 ($generated@@236 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@414 $generated@@467))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@76)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@T) ) (!  (=> (and (= (type $generated@@474) $generated@@76) (= (type $generated@@475) $generated@@74)) (and (= ($generated@@472 ($generated@@249 $generated@@476 $generated@@474 $generated@@475)) $generated@@474) (= ($generated@@83 ($generated@@249 $generated@@476 $generated@@474 $generated@@475)) $generated@@475)))
 :pattern ( ($generated@@249 $generated@@476 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@164) ($generated@@237 $generated@@477 $generated@@46)) (and (= ($generated@@299 ($generated@@363 $generated@@2 $generated@@477)) $generated@@477) ($generated@@151 ($generated@@363 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@164) ($generated@@237 $generated@@478 $generated@@47)) (and (= ($generated@@299 ($generated@@363 $generated@@3 $generated@@478)) $generated@@478) ($generated@@151 ($generated@@363 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@164) ($generated@@237 $generated@@479 $generated@@44)) (and (= ($generated@@299 ($generated@@363 $generated@@4 $generated@@479)) $generated@@479) ($generated@@151 ($generated@@363 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@479 $generated@@44))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@164) ($generated@@237 $generated@@480 $generated@@45)) (and (= ($generated@@299 ($generated@@363 $generated@@279 $generated@@480)) $generated@@480) ($generated@@151 ($generated@@363 $generated@@279 $generated@@480) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@480 $generated@@45))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@237 ($generated@@299 $generated@@481) $generated@@482) ($generated@@151 $generated@@481 $generated@@482)))
 :pattern ( ($generated@@237 ($generated@@299 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@90 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@87 $generated@@484 $generated@@2)) (<= 0 ($generated@@312 $generated@@483))))
 :pattern ( ($generated@@312 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@246 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@245 $generated@@486)) (<= 0 ($generated@@295 $generated@@485))))
 :pattern ( ($generated@@295 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@432 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@81 ($generated@@432 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@497 ($generated@@440 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@440 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@440 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@440 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@81 ($generated@@440 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@164) (= (type $generated@@508) $generated@@164)) (= ($generated@@288 ($generated@@236 $generated@@507 $generated@@508)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@154 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@154 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@154 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@154 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@164) (= (type $generated@@518) $generated@@164)) (= ($generated@@162 ($generated@@236 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@236 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@164) (= (type $generated@@520) $generated@@164)) (= ($generated@@163 ($generated@@236 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@236 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@246 (type $generated@@522))))
(= (type ($generated@@521 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@521 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@245 $generated@@164)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@525 ($generated@@255 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@295 $generated@@525))) ($generated@@282 ($generated@@521 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@521 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@85 $generated@@525 ($generated@@255 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@86 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@86 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@261 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@261 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@81 ($generated@@261 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@266 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@266 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@81 ($generated@@266 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@169 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@169 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@81 ($generated@@169 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@543 ($generated@@255 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@255 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@255 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@363 $generated@@548 ($generated@@299 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@299 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@320 $generated@@164 $generated@@164)) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@70)) (= ($generated@@151 $generated@@549 ($generated@@432 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@549) $generated@@552))) (and ($generated@@237 ($generated@@92 ($generated@@407 $generated@@549) $generated@@552) $generated@@551) ($generated@@237 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@549) $generated@@552))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@151 $generated@@549 ($generated@@432 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@338 $generated@@164 $generated@@164)) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@70)) (= ($generated@@151 $generated@@553 ($generated@@440 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@553) $generated@@556))) (and ($generated@@237 ($generated@@92 ($generated@@415 $generated@@553) $generated@@556) $generated@@555) ($generated@@237 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@553) $generated@@556))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@151 $generated@@553 ($generated@@440 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@164) (= (type $generated@@560) $generated@@164)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@236 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@236 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@164) (= (type $generated@@562) $generated@@164)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@236 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@236 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@164) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@237 $generated@@563 ($generated@@432 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@363 ($generated@@320 $generated@@164 $generated@@164) $generated@@563)) $generated@@563) ($generated@@151 ($generated@@363 ($generated@@320 $generated@@164 $generated@@164) $generated@@563) ($generated@@432 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@237 $generated@@563 ($generated@@432 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@164) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@70)) ($generated@@237 $generated@@566 ($generated@@440 $generated@@567 $generated@@568))) (and (= ($generated@@299 ($generated@@363 ($generated@@338 $generated@@164 $generated@@164) $generated@@566)) $generated@@566) ($generated@@151 ($generated@@363 ($generated@@338 $generated@@164 $generated@@164) $generated@@566) ($generated@@440 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@237 $generated@@566 ($generated@@440 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) $generated@@164)) ($generated@@237 $generated@@571 ($generated@@154 $generated@@569 $generated@@570))) (and (= ($generated@@299 ($generated@@363 $generated@@155 $generated@@571)) $generated@@571) ($generated@@151 ($generated@@363 $generated@@155 $generated@@571) ($generated@@154 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@237 $generated@@571 ($generated@@154 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@92 ($generated@@451 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@92 ($generated@@451 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@77)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@70) (= (type $generated@@577) $generated@@70)) (and (= ($generated@@81 ($generated@@154 $generated@@576 $generated@@577)) $generated@@63) (= ($generated@@574 ($generated@@154 $generated@@576 $generated@@577)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@155) (= ($generated@@557 ($generated@@299 $generated@@578)) ($generated@@558 $generated@@578)))
 :pattern ( ($generated@@557 ($generated@@299 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@164) ($generated@@237 $generated@@579 ($generated@@86 0))) (and (= ($generated@@299 ($generated@@363 $generated@@2 $generated@@579)) $generated@@579) ($generated@@151 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@579) ($generated@@86 0))))
 :pattern ( ($generated@@237 $generated@@579 ($generated@@86 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@164) (= (type $generated@@581) $generated@@70)) ($generated@@237 $generated@@580 ($generated@@261 $generated@@581))) (and (= ($generated@@299 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@580)) $generated@@580) ($generated@@151 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@580) ($generated@@261 $generated@@581))))
 :pattern ( ($generated@@237 $generated@@580 ($generated@@261 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@164) (= (type $generated@@583) $generated@@70)) ($generated@@237 $generated@@582 ($generated@@266 $generated@@583))) (and (= ($generated@@299 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@582)) $generated@@582) ($generated@@151 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@582) ($generated@@266 $generated@@583))))
 :pattern ( ($generated@@237 $generated@@582 ($generated@@266 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@164) (= (type $generated@@585) $generated@@70)) ($generated@@237 $generated@@584 ($generated@@169 $generated@@585))) (and (= ($generated@@299 ($generated@@363 ($generated@@87 $generated@@164 $generated@@2) $generated@@584)) $generated@@584) ($generated@@151 ($generated@@363 ($generated@@87 $generated@@164 $generated@@2) $generated@@584) ($generated@@169 $generated@@585))))
 :pattern ( ($generated@@237 $generated@@584 ($generated@@169 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@164) (= (type $generated@@587) $generated@@70)) ($generated@@237 $generated@@586 ($generated@@255 $generated@@587))) (and (= ($generated@@299 ($generated@@363 ($generated@@245 $generated@@164) $generated@@586)) $generated@@586) ($generated@@151 ($generated@@363 ($generated@@245 $generated@@164) $generated@@586) ($generated@@255 $generated@@587))))
 :pattern ( ($generated@@237 $generated@@586 ($generated@@255 $generated@@587)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@574 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@233) $generated@@66))
(assert (= ($generated@@574 $generated@@233) $generated@@68))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@588 ($generated@@169 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@164) (< 0 ($generated ($generated@@92 $generated@@588 $generated@@591)))) ($generated@@282 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@85 $generated@@588 ($generated@@169 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@155) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@254 $generated@@594) (and ($generated@@153 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@70) ($generated@@85 $generated@@592 ($generated@@154 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@85 $generated@@592 ($generated@@154 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@282 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@282 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@155) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@254 $generated@@598) (and ($generated@@153 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@70) ($generated@@85 $generated@@596 ($generated@@154 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 ($generated@@154 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@282 ($generated@@163 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@282 ($generated@@163 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@164)) (= ($generated@@236 ($generated@@273 $generated@@600) ($generated@@273 $generated@@601)) ($generated@@273 ($generated@@236 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@236 ($generated@@273 $generated@@600) ($generated@@273 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@271 $generated@@602))) ($generated@@273 ($generated@@299 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@271 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@299 ($generated@@273 $generated@@603)) ($generated@@273 ($generated@@299 $generated@@603)))
 :pattern ( ($generated@@299 ($generated@@273 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@246 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@245 $generated@@605)) (= ($generated@@295 $generated@@604) 0)) (= $generated@@604 ($generated@@294 $generated@@605))))
 :pattern ( ($generated@@295 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@87 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@312 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@312 $generated@@606) ($generated ($generated@@92 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@312 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@2)) ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@613) $generated@@3)) ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@4)) ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@279)) ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@619) $generated@@164)) ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@245 $generated@@164)) (= (type $generated@@621) $generated@@70)) (= ($generated@@151 $generated@@620 ($generated@@255 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@295 $generated@@620))) ($generated@@237 ($generated@@521 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@521 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@151 $generated@@620 ($generated@@255 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@245 $generated@@164)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@295 $generated@@624))) (< ($generated@@558 ($generated@@363 $generated@@155 ($generated@@521 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@558 ($generated@@363 $generated@@155 ($generated@@521 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@320 $generated@@164 $generated@@164)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@151 $generated@@626 ($generated@@432 $generated@@627 $generated@@628))) (and (and ($generated@@151 ($generated@@318 $generated@@626) ($generated@@261 $generated@@627)) ($generated@@151 ($generated@@375 $generated@@626) ($generated@@261 $generated@@628))) ($generated@@151 ($generated@@406 $generated@@626) ($generated@@261 ($generated@@154 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@151 $generated@@626 ($generated@@432 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@338 $generated@@164 $generated@@164)) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) $generated@@70)) ($generated@@151 $generated@@629 ($generated@@440 $generated@@630 $generated@@631))) (and (and ($generated@@151 ($generated@@336 $generated@@629) ($generated@@266 $generated@@630)) ($generated@@151 ($generated@@386 $generated@@629) ($generated@@266 $generated@@631))) ($generated@@151 ($generated@@414 $generated@@629) ($generated@@266 ($generated@@154 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@151 $generated@@629 ($generated@@440 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@151 $generated@@632 $generated@@46))
 :pattern ( ($generated@@151 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@151 $generated@@633 $generated@@47))
 :pattern ( ($generated@@151 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@151 $generated@@634 $generated@@44))
 :pattern ( ($generated@@151 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@279) ($generated@@151 $generated@@635 $generated@@45))
 :pattern ( ($generated@@151 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@164) ($generated@@151 $generated@@636 $generated@@48))
 :pattern ( ($generated@@151 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 (T@U) Bool)
(declare-fun $generated@@644 () Int)
(assert  (and (and (and (and (= (type $generated@@637) ($generated@@245 $generated@@164)) (= (type $generated@@639) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@640) $generated@@88)) (= (type $generated@@641) ($generated@@179 $generated@@88 $generated@@4))) (= (type $generated@@642) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@645 true))
(let (($generated@@646  (=> (and (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@638)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@638))) (= (ControlFlow 0 6) 2)) $generated@@645)))
(let (($generated@@647  (=> (not (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@638)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@638)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244))))) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244)))) (=> (= (ControlFlow 0 4) 2) $generated@@645))))))
(let (($generated@@648  (=> (and (<= ($generated@@271 0) $generated@@638) (< $generated@@638 ($generated@@295 $generated@@637))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 $generated@@637)))) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 $generated@@637))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244))))) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@647) (=> (= (ControlFlow 0 7) 6) $generated@@646)))))))))
(let (($generated@@649  (=> (and (not (and (<= ($generated@@271 0) $generated@@638) (< $generated@@638 ($generated@@295 $generated@@637)))) (= (ControlFlow 0 3) 2)) $generated@@645)))
(let (($generated@@650  (=> (< $generated@@638 ($generated@@271 0)) (and (=> (= (ControlFlow 0 11) 7) $generated@@648) (=> (= (ControlFlow 0 11) 3) $generated@@649)))))
(let (($generated@@651  (=> (<= ($generated@@271 0) $generated@@638) (and (=> (= (ControlFlow 0 10) 7) $generated@@648) (=> (= (ControlFlow 0 10) 3) $generated@@649)))))
(let (($generated@@652  (and (=> (= (ControlFlow 0 12) 10) $generated@@651) (=> (= (ControlFlow 0 12) 11) $generated@@650))))
(let (($generated@@653 true))
(let (($generated@@654  (=> (= $generated@@641 ($generated@@178 $generated@@148 $generated@@642 $generated@@60 false)) (=> (and (= ($generated@@295 ($generated@@94 ($generated@@92 $generated@@642 $generated@@640) $generated@@244)) ($generated@@271 1)) (= ($generated@@295 ($generated@@94 ($generated@@92 $generated@@642 $generated@@640) $generated@@244)) ($generated@@295 $generated@@637))) (=> (and (and ($generated@@254 $generated@@639) ($generated@@643 $generated@@639)) (and (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@88) (=> (and (not (= $generated@@655 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@642 $generated@@655) $generated@@60))) (= ($generated@@92 $generated@@639 $generated@@655) ($generated@@92 $generated@@642 $generated@@655))))
 :pattern ( ($generated@@92 $generated@@639 $generated@@655))
)) ($generated@@143 $generated@@642 $generated@@639))) (and (=> (= (ControlFlow 0 13) 12) $generated@@652) (=> (= (ControlFlow 0 13) 1) $generated@@653)))))))
(let (($generated@@656  (=> (and (and (and ($generated@@254 $generated@@642) ($generated@@643 $generated@@642)) (and (not (= $generated@@640 $generated@@148)) (and ($generated@@151 $generated@@640 $generated@@233) ($generated@@85 $generated@@640 $generated@@233 $generated@@642)))) (and (and ($generated@@151 $generated@@637 ($generated@@255 $generated@@45)) ($generated@@85 $generated@@637 ($generated@@255 $generated@@45) $generated@@642)) (and (= 1 $generated@@644) (= (ControlFlow 0 14) 13)))) $generated@@654)))
$generated@@656))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@249 (T@T T@U T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (Int) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 () T@T)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U T@U) Bool)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@86 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 16) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@70)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@70) (= (type $generated@@159) $generated@@70)) (= (type $generated@@160) $generated@@155)) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 17) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@70)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@70)) ($generated@@151 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@151 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@88) (= ($generated@@151 $generated@@176 $generated@@147)  (or (= $generated@@176 $generated@@148) (= ($generated@@174 $generated@@176) $generated@@147))))
 :pattern ( ($generated@@151 $generated@@176 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 18)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@88 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@73 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@88) (= (type $generated@@227) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@228) ($generated@@72 $generated@@4))) (= (type $generated@@230) $generated@@88)) (= (type $generated@@231) ($generated@@72 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (= (type $generated@@233) $generated@@70))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@88) (= (type $generated@@235) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@234 $generated@@233 $generated@@235) ($generated@@85 $generated@@234 $generated@@147 $generated@@235)))
 :pattern ( ($generated@@85 $generated@@234 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@155)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@70) (= (type $generated@@241) $generated@@70)) (= (type $generated@@242) $generated@@164)) (= (type $generated@@243) $generated@@164)) (= ($generated@@151 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@151 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241)))
)))
(assert  (and (and (forall (($generated@@247 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@247)) 19)) (forall (($generated@@248 T@T) ) (! (= ($generated@@246 ($generated@@245 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
))) (= (type $generated@@244) ($generated@@72 ($generated@@245 $generated@@164)))))
(assert (= ($generated@@80 $generated@@244) 0))
(assert (forall (($generated@@250 T@T) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@72 $generated@@250))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251 $generated@@252))
)))
(assert (= ($generated@@249 ($generated@@245 $generated@@164) $generated@@64 $generated@@69) $generated@@244))
(assert  (not ($generated@@253 $generated@@244)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@258) $generated@@88)) (and ($generated@@254 $generated@@257) (and (not (= $generated@@258 $generated@@148)) (= ($generated@@174 $generated@@258) $generated@@147)))) ($generated@@151 ($generated@@94 ($generated@@92 $generated@@257 $generated@@258) $generated@@244) ($generated@@255 $generated@@45)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@257 $generated@@258) $generated@@244))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@155) (= (type $generated@@260) $generated@@155)) (= ($generated@@161 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@161 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@151 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@164) ($generated@@0 ($generated@@92 $generated@@263 $generated@@265))) ($generated@@237 $generated@@265 $generated@@264))
 :pattern ( ($generated@@92 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@151 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@151 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@164) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@237 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@151 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (= ($generated@@1 $generated@@279) 20) (forall (($generated@@280 Int) ) (! (= (type ($generated@@277 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@281 Int) ) (!  (=> (and (<= 0 $generated@@281) (< $generated@@281 65536)) (= ($generated@@278 ($generated@@277 $generated@@281)) $generated@@281))
 :pattern ( ($generated@@277 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@70) (= (type $generated@@284) $generated@@70)) (= (type $generated@@285) $generated@@164)) (= (type $generated@@286) $generated@@164)) (= (type $generated@@287) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@254 $generated@@287)) (= ($generated@@85 ($generated@@236 $generated@@285 $generated@@286) ($generated@@154 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@85 ($generated@@236 $generated@@285 $generated@@286) ($generated@@154 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@75)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@155) (= ($generated@@153 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@155) ($generated@@153 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@164) (= (type $generated@@293) $generated@@164)) (= $generated@@291 ($generated@@236 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@153 $generated@@291))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@294 $generated@@296)) ($generated@@245 $generated@@296))
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) 0)
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert ($generated@@253 $generated@@60))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@279) (and (and (= ($generated@@277 ($generated@@278 $generated@@298)) $generated@@298) (<= 0 ($generated@@278 $generated@@298))) (< ($generated@@278 $generated@@298) 65536)))
 :pattern ( ($generated@@278 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@164)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@70) (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@282 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@85 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@282 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@306) $generated@@164)) (= (type $generated@@307) $generated@@70)) ($generated@@143 $generated@@304 $generated@@305)) ($generated@@282 $generated@@306 $generated@@307 $generated@@304)) ($generated@@282 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@143 $generated@@304 $generated@@305) ($generated@@282 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@309) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@311) $generated@@70)) ($generated@@143 $generated@@308 $generated@@309)) ($generated@@85 $generated@@310 $generated@@311 $generated@@308)) ($generated@@85 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@143 $generated@@308 $generated@@309) ($generated@@85 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@87 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@90 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@87 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@92 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 21)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@87 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@92 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@92 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 22)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@87 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@92 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@92 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@356) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@354 $generated@@355 $generated@@356)) (and ($generated@@143 $generated@@355 $generated@@356) (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@73 (type $generated@@358))))
 (=> (and (and (= (type $generated@@357) $generated@@88) (= (type $generated@@358) ($generated@@72 $generated@@359))) (not ($generated@@253 $generated@@358))) (= ($generated@@94 ($generated@@92 $generated@@355 $generated@@357) $generated@@358) ($generated@@94 ($generated@@92 $generated@@356 $generated@@357) $generated@@358))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@356 $generated@@357) $generated@@358))
))))
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@90 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@87 $generated@@361 $generated@@2)) (= ($generated@@170 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@92 $generated@@360 $generated@@362))) (<= ($generated ($generated@@92 $generated@@360 $generated@@362)) ($generated@@312 $generated@@360))))
 :pattern ( ($generated@@92 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@170 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@164) ($generated@@237 $generated@@366 $generated@@147)) (and (= ($generated@@299 ($generated@@363 $generated@@88 $generated@@366)) $generated@@366) ($generated@@151 ($generated@@363 $generated@@88 $generated@@366) $generated@@147)))
 :pattern ( ($generated@@237 $generated@@366 $generated@@147))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@164) ($generated@@237 $generated@@367 $generated@@233)) (and (= ($generated@@299 ($generated@@363 $generated@@88 $generated@@367)) $generated@@367) ($generated@@151 ($generated@@363 $generated@@88 $generated@@367) $generated@@233)))
 :pattern ( ($generated@@237 $generated@@367 $generated@@233))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@88) (= ($generated@@151 $generated@@368 $generated@@233)  (and ($generated@@151 $generated@@368 $generated@@147) (not (= $generated@@368 $generated@@148)))))
 :pattern ( ($generated@@151 $generated@@368 $generated@@233))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@370) $generated@@88)) (=> (and (and ($generated@@254 $generated@@369) (and (not (= $generated@@370 $generated@@148)) (= ($generated@@174 $generated@@370) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@369 $generated@@370) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@369 $generated@@370) $generated@@244) ($generated@@255 $generated@@45) $generated@@369)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@369 $generated@@370) $generated@@244))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@322 (type $generated@@371))))
(let (($generated@@373 ($generated@@321 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@320 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@319 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@318 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@322 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@87 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@322 (type $generated@@378))))
(let (($generated@@380 ($generated@@321 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@320 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@319 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@92 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@340 (type $generated@@382))))
(let (($generated@@384 ($generated@@339 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@338 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@337 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@336 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@340 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@87 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@340 (type $generated@@389))))
(let (($generated@@391 ($generated@@339 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@338 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@337 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@92 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@394) $generated@@70)) (= ($generated@@151 $generated@@393 ($generated@@169 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@164) (< 0 ($generated ($generated@@92 $generated@@393 $generated@@395)))) ($generated@@237 $generated@@395 $generated@@394))
 :pattern ( ($generated@@92 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@151 $generated@@393 ($generated@@169 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@396 ($generated@@261 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@164) ($generated@@0 ($generated@@92 $generated@@396 $generated@@399))) ($generated@@282 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@92 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@85 $generated@@396 ($generated@@261 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@401) $generated@@70)) (= (type $generated@@402) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@400 ($generated@@266 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@164) ($generated@@0 ($generated@@92 $generated@@400 $generated@@403))) ($generated@@282 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@92 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@85 $generated@@400 ($generated@@266 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@92 ($generated@@313 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@92 ($generated@@313 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@322 (type $generated@@409))))
(let (($generated@@411 ($generated@@321 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@87 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@320 $generated@@164 $generated@@164)) (= (type $generated@@413) $generated@@164)) (= ($generated@@0 ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@92 ($generated@@318 $generated@@412) ($generated@@162 ($generated@@363 $generated@@155 $generated@@413)))) (= ($generated@@92 ($generated@@407 $generated@@412) ($generated@@162 ($generated@@363 $generated@@155 $generated@@413))) ($generated@@163 ($generated@@363 $generated@@155 $generated@@413))))))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@340 (type $generated@@417))))
(let (($generated@@419 ($generated@@339 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@87 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@338 $generated@@164 $generated@@164)) (= (type $generated@@421) $generated@@164)) (= ($generated@@0 ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@92 ($generated@@336 $generated@@420) ($generated@@162 ($generated@@363 $generated@@155 $generated@@421)))) (= ($generated@@92 ($generated@@415 $generated@@420) ($generated@@162 ($generated@@363 $generated@@155 $generated@@421))) ($generated@@163 ($generated@@363 $generated@@155 $generated@@421))))))
 :pattern ( ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@321 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@320 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@92 ($generated@@375 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@92 ($generated@@318 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@92 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@422) $generated@@426))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@92 ($generated@@375 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@339 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@338 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@92 ($generated@@386 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@92 ($generated@@336 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@427) $generated@@431))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@92 ($generated@@386 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@320 $generated@@164 $generated@@164)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@435) $generated@@439))) (and ($generated@@282 ($generated@@92 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@282 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@338 $generated@@164 $generated@@164)) (= (type $generated@@444) $generated@@70)) (= (type $generated@@445) $generated@@70)) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@443) $generated@@447))) (and ($generated@@282 ($generated@@92 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@282 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@448) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@449) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@448 $generated@@450))) (and ($generated@@143 $generated@@448 $generated@@449) ($generated@@143 $generated@@449 $generated@@450))) ($generated@@143 $generated@@448 $generated@@450))
 :pattern ( ($generated@@143 $generated@@448 $generated@@449) ($generated@@143 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@87 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@340 (type $generated@@453))))
(let (($generated@@455 ($generated@@339 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@338 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@337 $generated@@455 $generated@@454)) (= ($generated@@336 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@336 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@340 (type $generated@@456))))
(let (($generated@@458 ($generated@@339 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@338 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@337 $generated@@458 $generated@@457)) (= ($generated@@386 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@386 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@340 (type $generated@@459))))
(let (($generated@@461 ($generated@@339 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@338 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@337 $generated@@461 $generated@@460)) (= ($generated@@414 $generated@@459) ($generated@@451 $generated@@164))))))
 :pattern ( ($generated@@414 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@322 (type $generated@@462))))
(let (($generated@@464 ($generated@@321 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@320 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@319 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@164) (= (type $generated@@466) $generated@@164)) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@462) ($generated@@299 ($generated@@236 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@406 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@340 (type $generated@@467))))
(let (($generated@@469 ($generated@@339 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@338 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@337 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@164) (= (type $generated@@471) $generated@@164)) ($generated@@0 ($generated@@92 ($generated@@414 $generated@@467) ($generated@@299 ($generated@@236 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@414 $generated@@467))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@76)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@T) ) (!  (=> (and (= (type $generated@@474) $generated@@76) (= (type $generated@@475) $generated@@74)) (and (= ($generated@@472 ($generated@@249 $generated@@476 $generated@@474 $generated@@475)) $generated@@474) (= ($generated@@83 ($generated@@249 $generated@@476 $generated@@474 $generated@@475)) $generated@@475)))
 :pattern ( ($generated@@249 $generated@@476 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@164) ($generated@@237 $generated@@477 $generated@@46)) (and (= ($generated@@299 ($generated@@363 $generated@@2 $generated@@477)) $generated@@477) ($generated@@151 ($generated@@363 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@164) ($generated@@237 $generated@@478 $generated@@47)) (and (= ($generated@@299 ($generated@@363 $generated@@3 $generated@@478)) $generated@@478) ($generated@@151 ($generated@@363 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@164) ($generated@@237 $generated@@479 $generated@@44)) (and (= ($generated@@299 ($generated@@363 $generated@@4 $generated@@479)) $generated@@479) ($generated@@151 ($generated@@363 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@479 $generated@@44))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@164) ($generated@@237 $generated@@480 $generated@@45)) (and (= ($generated@@299 ($generated@@363 $generated@@279 $generated@@480)) $generated@@480) ($generated@@151 ($generated@@363 $generated@@279 $generated@@480) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@480 $generated@@45))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@237 ($generated@@299 $generated@@481) $generated@@482) ($generated@@151 $generated@@481 $generated@@482)))
 :pattern ( ($generated@@237 ($generated@@299 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@90 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@87 $generated@@484 $generated@@2)) (<= 0 ($generated@@312 $generated@@483))))
 :pattern ( ($generated@@312 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@246 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@245 $generated@@486)) (<= 0 ($generated@@295 $generated@@485))))
 :pattern ( ($generated@@295 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@432 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@81 ($generated@@432 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@497 ($generated@@440 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@440 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@440 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@440 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@81 ($generated@@440 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@164) (= (type $generated@@508) $generated@@164)) (= ($generated@@288 ($generated@@236 $generated@@507 $generated@@508)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@154 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@154 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@154 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@154 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@164) (= (type $generated@@518) $generated@@164)) (= ($generated@@162 ($generated@@236 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@236 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@164) (= (type $generated@@520) $generated@@164)) (= ($generated@@163 ($generated@@236 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@236 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@246 (type $generated@@522))))
(= (type ($generated@@521 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@521 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@245 $generated@@164)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@525 ($generated@@255 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@295 $generated@@525))) ($generated@@282 ($generated@@521 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@521 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@85 $generated@@525 ($generated@@255 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@86 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@86 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@261 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@261 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@81 ($generated@@261 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@266 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@266 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@81 ($generated@@266 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@169 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@169 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@81 ($generated@@169 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@543 ($generated@@255 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@255 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@255 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@363 $generated@@548 ($generated@@299 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@299 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@320 $generated@@164 $generated@@164)) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@70)) (= ($generated@@151 $generated@@549 ($generated@@432 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@549) $generated@@552))) (and ($generated@@237 ($generated@@92 ($generated@@407 $generated@@549) $generated@@552) $generated@@551) ($generated@@237 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@549) $generated@@552))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@151 $generated@@549 ($generated@@432 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@338 $generated@@164 $generated@@164)) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@70)) (= ($generated@@151 $generated@@553 ($generated@@440 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@553) $generated@@556))) (and ($generated@@237 ($generated@@92 ($generated@@415 $generated@@553) $generated@@556) $generated@@555) ($generated@@237 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@553) $generated@@556))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@151 $generated@@553 ($generated@@440 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@164) (= (type $generated@@560) $generated@@164)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@236 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@236 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@164) (= (type $generated@@562) $generated@@164)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@236 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@236 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@164) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@237 $generated@@563 ($generated@@432 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@363 ($generated@@320 $generated@@164 $generated@@164) $generated@@563)) $generated@@563) ($generated@@151 ($generated@@363 ($generated@@320 $generated@@164 $generated@@164) $generated@@563) ($generated@@432 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@237 $generated@@563 ($generated@@432 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@164) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@70)) ($generated@@237 $generated@@566 ($generated@@440 $generated@@567 $generated@@568))) (and (= ($generated@@299 ($generated@@363 ($generated@@338 $generated@@164 $generated@@164) $generated@@566)) $generated@@566) ($generated@@151 ($generated@@363 ($generated@@338 $generated@@164 $generated@@164) $generated@@566) ($generated@@440 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@237 $generated@@566 ($generated@@440 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) $generated@@164)) ($generated@@237 $generated@@571 ($generated@@154 $generated@@569 $generated@@570))) (and (= ($generated@@299 ($generated@@363 $generated@@155 $generated@@571)) $generated@@571) ($generated@@151 ($generated@@363 $generated@@155 $generated@@571) ($generated@@154 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@237 $generated@@571 ($generated@@154 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@92 ($generated@@451 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@92 ($generated@@451 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@77)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@70) (= (type $generated@@577) $generated@@70)) (and (= ($generated@@81 ($generated@@154 $generated@@576 $generated@@577)) $generated@@63) (= ($generated@@574 ($generated@@154 $generated@@576 $generated@@577)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@155) (= ($generated@@557 ($generated@@299 $generated@@578)) ($generated@@558 $generated@@578)))
 :pattern ( ($generated@@557 ($generated@@299 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@164) ($generated@@237 $generated@@579 ($generated@@86 0))) (and (= ($generated@@299 ($generated@@363 $generated@@2 $generated@@579)) $generated@@579) ($generated@@151 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@579) ($generated@@86 0))))
 :pattern ( ($generated@@237 $generated@@579 ($generated@@86 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@164) (= (type $generated@@581) $generated@@70)) ($generated@@237 $generated@@580 ($generated@@261 $generated@@581))) (and (= ($generated@@299 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@580)) $generated@@580) ($generated@@151 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@580) ($generated@@261 $generated@@581))))
 :pattern ( ($generated@@237 $generated@@580 ($generated@@261 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@164) (= (type $generated@@583) $generated@@70)) ($generated@@237 $generated@@582 ($generated@@266 $generated@@583))) (and (= ($generated@@299 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@582)) $generated@@582) ($generated@@151 ($generated@@363 ($generated@@87 $generated@@164 $generated@@4) $generated@@582) ($generated@@266 $generated@@583))))
 :pattern ( ($generated@@237 $generated@@582 ($generated@@266 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@164) (= (type $generated@@585) $generated@@70)) ($generated@@237 $generated@@584 ($generated@@169 $generated@@585))) (and (= ($generated@@299 ($generated@@363 ($generated@@87 $generated@@164 $generated@@2) $generated@@584)) $generated@@584) ($generated@@151 ($generated@@363 ($generated@@87 $generated@@164 $generated@@2) $generated@@584) ($generated@@169 $generated@@585))))
 :pattern ( ($generated@@237 $generated@@584 ($generated@@169 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@164) (= (type $generated@@587) $generated@@70)) ($generated@@237 $generated@@586 ($generated@@255 $generated@@587))) (and (= ($generated@@299 ($generated@@363 ($generated@@245 $generated@@164) $generated@@586)) $generated@@586) ($generated@@151 ($generated@@363 ($generated@@245 $generated@@164) $generated@@586) ($generated@@255 $generated@@587))))
 :pattern ( ($generated@@237 $generated@@586 ($generated@@255 $generated@@587)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@574 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@233) $generated@@66))
(assert (= ($generated@@574 $generated@@233) $generated@@68))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@588 ($generated@@169 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@164) (< 0 ($generated ($generated@@92 $generated@@588 $generated@@591)))) ($generated@@282 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@85 $generated@@588 ($generated@@169 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@155) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@254 $generated@@594) (and ($generated@@153 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@70) ($generated@@85 $generated@@592 ($generated@@154 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@85 $generated@@592 ($generated@@154 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@282 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@282 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@155) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@254 $generated@@598) (and ($generated@@153 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@70) ($generated@@85 $generated@@596 ($generated@@154 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 ($generated@@154 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@282 ($generated@@163 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@282 ($generated@@163 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@164)) (= ($generated@@236 ($generated@@273 $generated@@600) ($generated@@273 $generated@@601)) ($generated@@273 ($generated@@236 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@236 ($generated@@273 $generated@@600) ($generated@@273 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@271 $generated@@602))) ($generated@@273 ($generated@@299 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@271 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@299 ($generated@@273 $generated@@603)) ($generated@@273 ($generated@@299 $generated@@603)))
 :pattern ( ($generated@@299 ($generated@@273 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@246 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@245 $generated@@605)) (= ($generated@@295 $generated@@604) 0)) (= $generated@@604 ($generated@@294 $generated@@605))))
 :pattern ( ($generated@@295 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@87 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@312 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@312 $generated@@606) ($generated ($generated@@92 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@312 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@2)) ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@613) $generated@@3)) ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@4)) ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@279)) ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@619) $generated@@164)) ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@245 $generated@@164)) (= (type $generated@@621) $generated@@70)) (= ($generated@@151 $generated@@620 ($generated@@255 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@295 $generated@@620))) ($generated@@237 ($generated@@521 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@521 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@151 $generated@@620 ($generated@@255 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@245 $generated@@164)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@295 $generated@@624))) (< ($generated@@558 ($generated@@363 $generated@@155 ($generated@@521 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@558 ($generated@@363 $generated@@155 ($generated@@521 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@320 $generated@@164 $generated@@164)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@151 $generated@@626 ($generated@@432 $generated@@627 $generated@@628))) (and (and ($generated@@151 ($generated@@318 $generated@@626) ($generated@@261 $generated@@627)) ($generated@@151 ($generated@@375 $generated@@626) ($generated@@261 $generated@@628))) ($generated@@151 ($generated@@406 $generated@@626) ($generated@@261 ($generated@@154 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@151 $generated@@626 ($generated@@432 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@338 $generated@@164 $generated@@164)) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) $generated@@70)) ($generated@@151 $generated@@629 ($generated@@440 $generated@@630 $generated@@631))) (and (and ($generated@@151 ($generated@@336 $generated@@629) ($generated@@266 $generated@@630)) ($generated@@151 ($generated@@386 $generated@@629) ($generated@@266 $generated@@631))) ($generated@@151 ($generated@@414 $generated@@629) ($generated@@266 ($generated@@154 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@151 $generated@@629 ($generated@@440 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@151 $generated@@632 $generated@@46))
 :pattern ( ($generated@@151 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@151 $generated@@633 $generated@@47))
 :pattern ( ($generated@@151 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@151 $generated@@634 $generated@@44))
 :pattern ( ($generated@@151 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@279) ($generated@@151 $generated@@635 $generated@@45))
 :pattern ( ($generated@@151 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@164) ($generated@@151 $generated@@636 $generated@@48))
 :pattern ( ($generated@@151 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Bool)
(declare-fun $generated@@643 () Bool)
(declare-fun $generated@@644 () Bool)
(declare-fun $generated@@645 () Bool)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 (T@U) Bool)
(declare-fun $generated@@652 () Int)
(assert  (and (and (and (= (type $generated@@637) ($generated@@245 $generated@@164)) (= (type $generated@@639) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@640) $generated@@88)) (= (type $generated@@648) ($generated@@179 $generated@@88 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@653 true))
(let (($generated@@654  (=> (and (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@638)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@638))) (= (ControlFlow 0 20) 16)) $generated@@653)))
(let (($generated@@655  (=> (not (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@638)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@638)))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244))))) (=> (= (ControlFlow 0 18) 16) $generated@@653)))))
(let (($generated@@656  (=> (and (<= ($generated@@271 0) $generated@@638) (< $generated@@638 $generated@@641)) (and (=> (= (ControlFlow 0 21) (- 0 23)) (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 $generated@@637)))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244))))) (and (=> (= (ControlFlow 0 21) 18) $generated@@655) (=> (= (ControlFlow 0 21) 20) $generated@@654)))))))
(let (($generated@@657  (=> (and (not (and (<= ($generated@@271 0) $generated@@638) (< $generated@@638 $generated@@641))) (= (ControlFlow 0 17) 16)) $generated@@653)))
(let (($generated@@658  (=> (< $generated@@638 ($generated@@271 0)) (and (=> (= (ControlFlow 0 25) 21) $generated@@656) (=> (= (ControlFlow 0 25) 17) $generated@@657)))))
(let (($generated@@659  (=> (<= ($generated@@271 0) $generated@@638) (and (=> (= (ControlFlow 0 24) 21) $generated@@656) (=> (= (ControlFlow 0 24) 17) $generated@@657)))))
(let (($generated@@660  (and (=> (= (ControlFlow 0 26) 24) $generated@@659) (=> (= (ControlFlow 0 26) 25) $generated@@658))))
(let (($generated@@661 true))
(let (($generated@@662  (=> (and (not $generated@@642) (<= $generated@@641 ($generated@@295 $generated@@637))) (and (=> (= (ControlFlow 0 27) 26) $generated@@660) (=> (= (ControlFlow 0 27) 15) $generated@@661)))))
(let (($generated@@663  (=> (= (ControlFlow 0 8) (- 0 7)) (= $generated@@643 (forall (($generated@@664 Int) ) (!  (=> true (=> (and (<= ($generated@@271 0) $generated@@664) (< $generated@@664 ($generated@@295 $generated@@637))) (or (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@664)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@664))) (= ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@664)) ($generated@@273 ($generated@@277 63))))))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@664)))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@664)))
))))))
(let (($generated@@665  (=> (and (and (not (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@641)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@641)))) (= $generated@@644 ($generated@@0 ($generated@@273 ($generated@@11 false))))) (and (= $generated@@643 $generated@@644) (= (ControlFlow 0 10) 8))) $generated@@663)))
(let (($generated@@666  (=> (and (and (<= ($generated@@295 $generated@@637) $generated@@641) (= $generated@@645 ($generated@@0 ($generated@@273 ($generated@@11 true))))) (and (= $generated@@643 $generated@@645) (= (ControlFlow 0 9) 8))) $generated@@663)))
(let (($generated@@667  (=> (and (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@641)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@641))) (= $generated@@646 (+ $generated@@641 1))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (<= 0 $generated@@647) (= (- ($generated@@295 $generated@@637) $generated@@646) $generated@@647))) (=> (or (<= 0 $generated@@647) (= (- ($generated@@295 $generated@@637) $generated@@646) $generated@@647)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (< (- ($generated@@295 $generated@@637) $generated@@646) $generated@@647)) (=> (< (- ($generated@@295 $generated@@637) $generated@@646) $generated@@647) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@642 (<= $generated@@646 ($generated@@295 $generated@@637)))) (=> (=> $generated@@642 (<= $generated@@646 ($generated@@295 $generated@@637))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@642 (forall (($generated@@668 Int) ) (!  (=> true (=> (and (<= ($generated@@271 0) $generated@@668) (< $generated@@668 $generated@@646)) (or (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@668)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@668))) (= ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@668)) ($generated@@273 ($generated@@277 63))))))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@668)))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@668)))
)))))))))))))
(let (($generated@@669  (=> (and (< $generated@@641 ($generated@@295 $generated@@637)) (= $generated@@647 (- ($generated@@295 $generated@@637) $generated@@641))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@295 $generated@@637)))) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@295 $generated@@637))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244))))) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244)))) (and (=> (= (ControlFlow 0 11) 10) $generated@@665) (=> (= (ControlFlow 0 11) 3) $generated@@667)))))))))
(let (($generated@@670  (=> $generated@@642 (and (=> (= (ControlFlow 0 14) 9) $generated@@666) (=> (= (ControlFlow 0 14) 11) $generated@@669)))))
(let (($generated@@671  (and (=> (= (ControlFlow 0 28) 27) $generated@@662) (=> (= (ControlFlow 0 28) 14) $generated@@670))))
(let (($generated@@672 true))
(let (($generated@@673  (=> (and (and (not false) (<= 0 $generated@@641)) (=> $generated@@642 true)) (=> (and (and (and (=> $generated@@642 (<= $generated@@641 ($generated@@295 $generated@@637))) (=> $generated@@642 true)) (and (=> $generated@@642 (forall (($generated@@674 Int) ) (!  (=> true (=> (and (<= ($generated@@271 0) $generated@@674) (< $generated@@674 $generated@@641)) (or (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@674)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@674))) (= ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@674)) ($generated@@273 ($generated@@277 63))))))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@674)))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@674)))
))) (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@88) (=> (and (not (= $generated@@675 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@639 $generated@@675) $generated@@60))) (= ($generated@@92 $generated@@639 $generated@@675) ($generated@@92 $generated@@639 $generated@@675))))
 :pattern ( ($generated@@92 $generated@@639 $generated@@675))
)))) (and (and ($generated@@143 $generated@@639 $generated@@639) (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (! (let (($generated@@678 ($generated@@73 (type $generated@@677))))
 (=> (and (and (= (type $generated@@676) $generated@@88) (= (type $generated@@677) ($generated@@72 $generated@@678))) (and (not (= $generated@@676 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@639 $generated@@676) $generated@@60)))) (or (= ($generated@@94 ($generated@@92 $generated@@639 $generated@@676) $generated@@677) ($generated@@94 ($generated@@92 $generated@@639 $generated@@676) $generated@@677)) ($generated@@0 ($generated@@177 $generated@@648 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@639 $generated@@676) $generated@@677))
))) (and (<= (- ($generated@@295 $generated@@637) $generated@@641) $generated@@649) (=> (= (- ($generated@@295 $generated@@637) $generated@@641) $generated@@649) true)))) (and (=> (= (ControlFlow 0 29) 1) $generated@@672) (=> (= (ControlFlow 0 29) 28) $generated@@671))))))
(let (($generated@@679  (=> (= $generated@@648 ($generated@@178 $generated@@148 $generated@@639 $generated@@60 false)) (=> (and (= $generated@@650 ($generated@@271 0)) (= $generated@@649 (- ($generated@@295 $generated@@637) $generated@@650))) (and (=> (= (ControlFlow 0 30) (- 0 32)) (=> $generated@@642 (<= $generated@@650 ($generated@@295 $generated@@637)))) (=> (=> $generated@@642 (<= $generated@@650 ($generated@@295 $generated@@637))) (and (=> (= (ControlFlow 0 30) (- 0 31)) (=> $generated@@642 (forall (($generated@@680 Int) ) (!  (=> true (=> (and (<= ($generated@@271 0) $generated@@680) (< $generated@@680 $generated@@650)) (or (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@680)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@680))) (= ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@680)) ($generated@@273 ($generated@@277 63))))))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@680)))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@680)))
)))) (=> (=> $generated@@642 (forall (($generated@@681 Int) ) (!  (=> true (=> (and (<= ($generated@@271 0) $generated@@681) (< $generated@@681 $generated@@650)) (or (= ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@681)) ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@681))) (= ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@681)) ($generated@@273 ($generated@@277 63))))))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244) $generated@@681)))
 :pattern ( ($generated@@363 $generated@@279 ($generated@@521 $generated@@637 $generated@@681)))
))) (=> (= (ControlFlow 0 30) 29) $generated@@673)))))))))
(let (($generated@@682  (=> (and ($generated@@254 $generated@@639) ($generated@@651 $generated@@639)) (=> (and (and (and (not (= $generated@@640 $generated@@148)) (and ($generated@@151 $generated@@640 $generated@@233) ($generated@@85 $generated@@640 $generated@@233 $generated@@639))) (and ($generated@@151 $generated@@637 ($generated@@255 $generated@@45)) ($generated@@85 $generated@@637 ($generated@@255 $generated@@45) $generated@@639))) (and (and (= 1 $generated@@652) (= ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244)) ($generated@@271 1))) (and (= ($generated@@295 ($generated@@94 ($generated@@92 $generated@@639 $generated@@640) $generated@@244)) ($generated@@295 $generated@@637)) (= (ControlFlow 0 33) 30)))) $generated@@679))))
$generated@@682))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
