(set-logic UFNIRABV)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(= (type ($generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@157 $generated@@160) $generated@@160)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 11) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@162 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= ($generated@@162 $generated@@168 ($generated@@161 $generated@@167)) $generated@@167))
 :pattern ( ($generated@@161 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@161 ($generated@@157 $generated@@169)) ($generated@@157 ($generated@@161 $generated@@169)))
 :pattern ( ($generated@@161 ($generated@@157 $generated@@169)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () Int)
(assert  (and (and (and (= (type $generated@@170) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@171) $generated@@47)) (= (type $generated@@172) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@173) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@177  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@157 ($generated@@11 (< 0 1)))))))
(let (($generated@@178 true))
(let (($generated@@179  (=> (= $generated@@170 ($generated@@45 $generated@@171 $generated@@172 $generated@@173 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@178) (=> (= (ControlFlow 0 4) 3) $generated@@177)))))
(let (($generated@@180  (=> (and (and ($generated@@174 $generated@@172) ($generated@@175 $generated@@172)) (and (= 0 $generated@@176) (= (ControlFlow 0 5) 4))) $generated@@179)))
$generated@@180)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 11)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 11))
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@242 (Int) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U Int) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 11)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 11)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 11) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 11) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@132) ($generated@@140 $generated@@142 ($generated@@75 11)))
 :pattern ( ($generated@@140 $generated@@142 ($generated@@75 11)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@140 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@67 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@77) (= (type $generated@@226) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@227) ($generated@@66 $generated@@4))) (= (type $generated@@229) $generated@@77)) (= (type $generated@@230) ($generated@@66 $generated@@231))) (= ($generated@@0 ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@145)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@64) (= (type $generated@@237) $generated@@64)) (= (type $generated@@238) $generated@@154)) (= (type $generated@@239) $generated@@154)) (= ($generated@@140 ($generated@@232 $generated@@238 $generated@@239) ($generated@@144 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@140 ($generated@@232 $generated@@238 $generated@@239) ($generated@@144 $generated@@236 $generated@@237)))
)))
(assert  (=> (<= 1 $generated@@240) (forall (($generated@@243 Int) ) (!  (=> (or ($generated@@242 $generated@@243) (and (not (= 1 $generated@@240)) (< 0 $generated@@243))) true)
 :pattern ( ($generated@@241 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@145) (= (type $generated@@245) $generated@@145)) (= ($generated@@151 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@151 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@154) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@233 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@254) $generated@@64)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@154) ($generated@@0 ($generated@@81 $generated@@253 $generated@@255))) ($generated@@233 $generated@@255 $generated@@254))
 :pattern ( ($generated@@81 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@256 $generated@@257) $generated@@257)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) $generated@@64)) (= (type $generated@@266) $generated@@154)) (= (type $generated@@267) $generated@@154)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@262 $generated@@268)) (= ($generated@@74 ($generated@@232 $generated@@266 $generated@@267) ($generated@@144 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@74 ($generated@@232 $generated@@266 $generated@@267) ($generated@@144 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@145) (= ($generated@@143 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@145) ($generated@@143 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@154) (= (type $generated@@274) $generated@@154)) (= $generated@@272 ($generated@@232 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@143 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 18)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@154)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@74 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@76 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@76 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@81 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@2)) (= ($generated@@160 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@81 $generated@@330 $generated@@332))) (<= ($generated ($generated@@81 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@160 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@298 (type $generated@@333))))
(let (($generated@@335 ($generated@@297 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@296 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@295 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@294 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@298 (type $generated@@340))))
(let (($generated@@342 ($generated@@297 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@296 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@295 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@316 (type $generated@@344))))
(let (($generated@@346 ($generated@@315 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@314 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@313 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@312 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@316 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@316 (type $generated@@351))))
(let (($generated@@353 ($generated@@315 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@314 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@313 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@356) $generated@@64)) (= ($generated@@140 $generated@@355 ($generated@@159 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@355 $generated@@357)))) ($generated@@233 $generated@@357 $generated@@356))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@140 $generated@@355 ($generated@@159 $generated@@356)))
)))
(assert  (=> (<= 1 $generated@@240) (forall (($generated@@358 Int) ) (!  (=> (or ($generated@@242 $generated@@358) (and (not (= 1 $generated@@240)) (< 0 $generated@@358))) (= ($generated@@241 $generated@@358) (+ $generated@@358 3)))
 :pattern ( ($generated@@241 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@246 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@263 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@246 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@364) $generated@@64)) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@363 ($generated@@251 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@154) ($generated@@0 ($generated@@81 $generated@@363 $generated@@366))) ($generated@@263 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@81 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@74 $generated@@363 ($generated@@251 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@81 ($generated@@289 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@81 ($generated@@289 $generated@@368) $generated@@367)))
)))
(assert  (and (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@369 $generated@@372)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@369 $generated@@372))
)) (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@370 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@370 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@298 (type $generated@@375))))
(let (($generated@@377 ($generated@@297 (type $generated@@375))))
(= (type ($generated@@371 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@371 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@296 $generated@@154 $generated@@154)) (= (type $generated@@379) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@378) ($generated@@152 ($generated@@370 $generated@@145 $generated@@379)))) (= ($generated@@81 ($generated@@371 $generated@@378) ($generated@@152 ($generated@@370 $generated@@145 $generated@@379))) ($generated@@153 ($generated@@370 $generated@@145 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@316 (type $generated@@383))))
(let (($generated@@385 ($generated@@315 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@314 $generated@@154 $generated@@154)) (= (type $generated@@387) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@386) ($generated@@152 ($generated@@370 $generated@@145 $generated@@387)))) (= ($generated@@81 ($generated@@381 $generated@@386) ($generated@@152 ($generated@@370 $generated@@145 $generated@@387))) ($generated@@153 ($generated@@370 $generated@@145 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@297 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@296 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@315 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@314 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@296 $generated@@154 $generated@@154)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@401) $generated@@405))) (and ($generated@@263 ($generated@@81 ($generated@@371 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@263 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@314 $generated@@154 $generated@@154)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@409) $generated@@413))) (and ($generated@@263 ($generated@@81 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@263 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@76 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@316 (type $generated@@416))))
(let (($generated@@418 ($generated@@315 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@314 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@313 $generated@@418 $generated@@417)) (= ($generated@@312 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@312 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@316 (type $generated@@419))))
(let (($generated@@421 ($generated@@315 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@314 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@313 $generated@@421 $generated@@420)) (= ($generated@@348 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@348 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@316 (type $generated@@422))))
(let (($generated@@424 ($generated@@315 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@314 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@313 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@154))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@298 (type $generated@@425))))
(let (($generated@@427 ($generated@@297 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@296 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@295 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@154) (= (type $generated@@429) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@425) ($generated@@283 ($generated@@232 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@369 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@316 (type $generated@@430))))
(let (($generated@@432 ($generated@@315 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@314 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@313 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@154) (= (type $generated@@434) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@430) ($generated@@283 ($generated@@232 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@233 $generated@@435 $generated@@46)) (and (= ($generated@@283 ($generated@@370 $generated@@2 $generated@@435)) $generated@@435) ($generated@@140 ($generated@@370 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@154) ($generated@@233 $generated@@436 $generated@@47)) (and (= ($generated@@283 ($generated@@370 $generated@@3 $generated@@436)) $generated@@436) ($generated@@140 ($generated@@370 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@154) ($generated@@233 $generated@@437 $generated@@44)) (and (= ($generated@@283 ($generated@@370 $generated@@4 $generated@@437)) $generated@@437) ($generated@@140 ($generated@@370 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 21))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@233 $generated@@439 $generated@@45)) (and (= ($generated@@283 ($generated@@370 $generated@@438 $generated@@439)) $generated@@439) ($generated@@140 ($generated@@370 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@64) (= ($generated@@233 ($generated@@283 $generated@@440) $generated@@441) ($generated@@140 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@233 ($generated@@283 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@79 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@76 $generated@@443 $generated@@2)) (<= 0 ($generated@@288 $generated@@442))))
 :pattern ( ($generated@@288 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@278 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@277 $generated@@445)) (<= 0 ($generated@@276 $generated@@444))))
 :pattern ( ($generated@@276 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@154) (= (type $generated@@467) $generated@@154)) (= ($generated@@269 ($generated@@232 $generated@@466 $generated@@467)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@144 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@144 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@154) (= (type $generated@@477) $generated@@154)) (= ($generated@@152 ($generated@@232 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@232 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@154) (= (type $generated@@479) $generated@@154)) (= ($generated@@153 ($generated@@232 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@232 $generated@@478 $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ($generated@@484 Int) ) (! (let (($generated@@485 ($generated@@278 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483 $generated@@484)) $generated@@485))
 :pattern ( ($generated@@481 $generated@@483 $generated@@484))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@277 $generated@@154)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@480 $generated@@487) $generated@@488) (forall (($generated@@489 Int) ) (!  (=> (and (<= 0 $generated@@489) (< $generated@@489 ($generated@@276 $generated@@486))) ($generated@@263 ($generated@@481 $generated@@486 $generated@@489) $generated@@487 $generated@@488))
 :pattern ( ($generated@@481 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@480 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@75 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@75 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@246 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@246 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@251 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@251 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@251 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@159 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@159 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@480 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@480 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@480 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@480 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@370 $generated@@509 ($generated@@283 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@283 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@296 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) (= ($generated@@140 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@510) $generated@@513))) (and ($generated@@233 ($generated@@81 ($generated@@371 $generated@@510) $generated@@513) $generated@@512) ($generated@@233 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@510) $generated@@513))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@140 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@314 $generated@@154 $generated@@154)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@140 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@514) $generated@@517))) (and ($generated@@233 ($generated@@81 ($generated@@381 $generated@@514) $generated@@517) $generated@@516) ($generated@@233 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@140 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@154)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@232 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@232 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@154)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@232 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@232 $generated@@522 $generated@@523))
)))
(assert  (=> (<= 1 $generated@@240) (forall (($generated@@524 Int) ) (!  (=> (or ($generated@@242 ($generated@@256 $generated@@524)) (and (not (= 1 $generated@@240)) (< 0 $generated@@524))) (= ($generated@@241 ($generated@@256 $generated@@524)) ($generated@@256 (+ $generated@@524 3))))
 :weight 3
 :pattern ( ($generated@@241 ($generated@@256 $generated@@524)))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@233 $generated@@525 ($generated@@398 $generated@@526 $generated@@527))) (and (= ($generated@@283 ($generated@@370 ($generated@@296 $generated@@154 $generated@@154) $generated@@525)) $generated@@525) ($generated@@140 ($generated@@370 ($generated@@296 $generated@@154 $generated@@154) $generated@@525) ($generated@@398 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@233 $generated@@525 ($generated@@398 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@154) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@233 $generated@@528 ($generated@@406 $generated@@529 $generated@@530))) (and (= ($generated@@283 ($generated@@370 ($generated@@314 $generated@@154 $generated@@154) $generated@@528)) $generated@@528) ($generated@@140 ($generated@@370 ($generated@@314 $generated@@154 $generated@@154) $generated@@528) ($generated@@406 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@233 $generated@@528 ($generated@@406 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@154)) ($generated@@233 $generated@@533 ($generated@@144 $generated@@531 $generated@@532))) (and (= ($generated@@283 ($generated@@370 $generated@@145 $generated@@533)) $generated@@533) ($generated@@140 ($generated@@370 $generated@@145 $generated@@533) ($generated@@144 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@233 $generated@@533 ($generated@@144 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@81 ($generated@@414 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@81 ($generated@@414 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@69)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@144 $generated@@538 $generated@@539)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@145) (= ($generated@@518 ($generated@@283 $generated@@540)) ($generated@@519 $generated@@540)))
 :pattern ( ($generated@@518 ($generated@@283 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@154) ($generated@@233 $generated@@541 ($generated@@75 0))) (and (= ($generated@@283 ($generated@@370 $generated@@2 $generated@@541)) $generated@@541) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@541) ($generated@@75 0))))
 :pattern ( ($generated@@233 $generated@@541 ($generated@@75 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@64)) ($generated@@233 $generated@@542 ($generated@@246 $generated@@543))) (and (= ($generated@@283 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@542) ($generated@@246 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@542 ($generated@@246 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@64)) ($generated@@233 $generated@@544 ($generated@@251 $generated@@545))) (and (= ($generated@@283 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@544)) $generated@@544) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@544) ($generated@@251 $generated@@545))))
 :pattern ( ($generated@@233 $generated@@544 ($generated@@251 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@64)) ($generated@@233 $generated@@546 ($generated@@159 $generated@@547))) (and (= ($generated@@283 ($generated@@370 ($generated@@76 $generated@@154 $generated@@2) $generated@@546)) $generated@@546) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@154 $generated@@2) $generated@@546) ($generated@@159 $generated@@547))))
 :pattern ( ($generated@@233 $generated@@546 ($generated@@159 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@154) (= (type $generated@@549) $generated@@64)) ($generated@@233 $generated@@548 ($generated@@480 $generated@@549))) (and (= ($generated@@283 ($generated@@370 ($generated@@277 $generated@@154) $generated@@548)) $generated@@548) ($generated@@140 ($generated@@370 ($generated@@277 $generated@@154) $generated@@548) ($generated@@480 $generated@@549))))
 :pattern ( ($generated@@233 $generated@@548 ($generated@@480 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@154) ($generated@@233 $generated@@550 ($generated@@75 11))) (and (= ($generated@@283 ($generated@@370 $generated@@132 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@370 $generated@@132 $generated@@550) ($generated@@75 11))))
 :pattern ( ($generated@@233 $generated@@550 ($generated@@75 11)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@551 ($generated@@159 $generated@@552) $generated@@553) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@551 $generated@@554)))) ($generated@@263 $generated@@554 $generated@@552 $generated@@553))
 :pattern ( ($generated@@81 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@159 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@557) (and ($generated@@143 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@74 $generated@@555 ($generated@@144 $generated@@556 $generated@@558) $generated@@557))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@144 $generated@@556 $generated@@558) $generated@@557))
))))) ($generated@@263 ($generated@@152 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@263 ($generated@@152 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@561) (and ($generated@@143 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@144 $generated@@562 $generated@@560) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@144 $generated@@562 $generated@@560) $generated@@561))
))))) ($generated@@263 ($generated@@153 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@263 ($generated@@153 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (= ($generated@@232 ($generated@@258 $generated@@563) ($generated@@258 $generated@@564)) ($generated@@258 ($generated@@232 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@232 ($generated@@258 $generated@@563) ($generated@@258 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@256 $generated@@565))) ($generated@@258 ($generated@@283 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@256 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@283 ($generated@@258 $generated@@566)) ($generated@@258 ($generated@@283 $generated@@566)))
 :pattern ( ($generated@@283 ($generated@@258 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@278 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@277 $generated@@568)) (= ($generated@@276 $generated@@567) 0)) (= $generated@@567 ($generated@@275 $generated@@568))))
 :pattern ( ($generated@@276 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@76 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@288 ($generated@@82 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@288 $generated@@569) ($generated ($generated@@81 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@288 ($generated@@82 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@2)) ($generated@@74 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@3)) ($generated@@74 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@4)) ($generated@@74 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@438)) ($generated@@74 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@154)) ($generated@@74 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@277 $generated@@154)) (= (type $generated@@584) $generated@@64)) (= ($generated@@140 $generated@@583 ($generated@@480 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@276 $generated@@583))) ($generated@@233 ($generated@@481 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@481 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@140 $generated@@583 ($generated@@480 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@277 $generated@@154)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@276 $generated@@587))) (< ($generated@@519 ($generated@@370 $generated@@145 ($generated@@481 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@519 ($generated@@370 $generated@@145 ($generated@@481 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@296 $generated@@154 $generated@@154)) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) $generated@@64)) ($generated@@140 $generated@@589 ($generated@@398 $generated@@590 $generated@@591))) (and (and ($generated@@140 ($generated@@294 $generated@@589) ($generated@@246 $generated@@590)) ($generated@@140 ($generated@@337 $generated@@589) ($generated@@246 $generated@@591))) ($generated@@140 ($generated@@369 $generated@@589) ($generated@@246 ($generated@@144 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@140 $generated@@589 ($generated@@398 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@314 $generated@@154 $generated@@154)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@140 $generated@@592 ($generated@@406 $generated@@593 $generated@@594))) (and (and ($generated@@140 ($generated@@312 $generated@@592) ($generated@@251 $generated@@593)) ($generated@@140 ($generated@@348 $generated@@592) ($generated@@251 $generated@@594))) ($generated@@140 ($generated@@380 $generated@@592) ($generated@@251 ($generated@@144 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@140 $generated@@592 ($generated@@406 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@140 $generated@@595 $generated@@46))
 :pattern ( ($generated@@140 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@140 $generated@@596 $generated@@47))
 :pattern ( ($generated@@140 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@140 $generated@@597 $generated@@44))
 :pattern ( ($generated@@140 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@438) ($generated@@140 $generated@@598 $generated@@45))
 :pattern ( ($generated@@140 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@154) ($generated@@140 $generated@@599 $generated@@48))
 :pattern ( ($generated@@140 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@600) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@601) $generated@@77)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@606) ($generated@@166 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@608  (=> (and (= $generated@@600 ($generated@@220 $generated@@601 $generated@@602 $generated@@60 false)) (= $generated@@603 ($generated@@256 3))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< 0 $generated@@603)) (=> (< 0 $generated@@603) (=> (and (= $generated@@604 (+ $generated@@605 3)) (= (ControlFlow 0 3) (- 0 2))) (< 0 $generated@@604)))))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@606 ($generated@@165 $generated@@601 $generated@@602 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@609) (=> (= (ControlFlow 0 5) 3) $generated@@608)))))
(let (($generated@@611  (=> (and (and (and ($generated@@262 $generated@@602) ($generated@@607 $generated@@602)) (< 0 $generated@@605)) (and (= 1 $generated@@240) (= (ControlFlow 0 6) 5))) $generated@@610)))
$generated@@611)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 11)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 11))
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@242 (Int) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U Int) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 11)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 11)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 11) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 11) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@132) ($generated@@140 $generated@@142 ($generated@@75 11)))
 :pattern ( ($generated@@140 $generated@@142 ($generated@@75 11)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@140 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@67 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@77) (= (type $generated@@226) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@227) ($generated@@66 $generated@@4))) (= (type $generated@@229) $generated@@77)) (= (type $generated@@230) ($generated@@66 $generated@@231))) (= ($generated@@0 ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@145)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@64) (= (type $generated@@237) $generated@@64)) (= (type $generated@@238) $generated@@154)) (= (type $generated@@239) $generated@@154)) (= ($generated@@140 ($generated@@232 $generated@@238 $generated@@239) ($generated@@144 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@140 ($generated@@232 $generated@@238 $generated@@239) ($generated@@144 $generated@@236 $generated@@237)))
)))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@243 Int) ) (!  (=> (or ($generated@@242 $generated@@243) (and (not (= 0 $generated@@240)) (< 0 $generated@@243))) true)
 :pattern ( ($generated@@241 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@145) (= (type $generated@@245) $generated@@145)) (= ($generated@@151 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@151 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@154) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@233 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@254) $generated@@64)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@154) ($generated@@0 ($generated@@81 $generated@@253 $generated@@255))) ($generated@@233 $generated@@255 $generated@@254))
 :pattern ( ($generated@@81 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@256 $generated@@257) $generated@@257)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) $generated@@64)) (= (type $generated@@266) $generated@@154)) (= (type $generated@@267) $generated@@154)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@262 $generated@@268)) (= ($generated@@74 ($generated@@232 $generated@@266 $generated@@267) ($generated@@144 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@74 ($generated@@232 $generated@@266 $generated@@267) ($generated@@144 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@145) (= ($generated@@143 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@145) ($generated@@143 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@154) (= (type $generated@@274) $generated@@154)) (= $generated@@272 ($generated@@232 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@143 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 18)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@154)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@74 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@76 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@76 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@81 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@2)) (= ($generated@@160 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@81 $generated@@330 $generated@@332))) (<= ($generated ($generated@@81 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@160 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@298 (type $generated@@333))))
(let (($generated@@335 ($generated@@297 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@296 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@295 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@294 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@298 (type $generated@@340))))
(let (($generated@@342 ($generated@@297 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@296 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@295 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@316 (type $generated@@344))))
(let (($generated@@346 ($generated@@315 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@314 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@313 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@312 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@316 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@316 (type $generated@@351))))
(let (($generated@@353 ($generated@@315 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@314 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@313 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@356) $generated@@64)) (= ($generated@@140 $generated@@355 ($generated@@159 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@355 $generated@@357)))) ($generated@@233 $generated@@357 $generated@@356))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@140 $generated@@355 ($generated@@159 $generated@@356)))
)))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@358 Int) ) (!  (=> (or ($generated@@242 $generated@@358) (and (not (= 0 $generated@@240)) (< 0 $generated@@358))) (= ($generated@@241 $generated@@358) (+ $generated@@358 2)))
 :pattern ( ($generated@@241 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@246 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@263 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@246 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@364) $generated@@64)) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@363 ($generated@@251 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@154) ($generated@@0 ($generated@@81 $generated@@363 $generated@@366))) ($generated@@263 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@81 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@74 $generated@@363 ($generated@@251 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@81 ($generated@@289 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@81 ($generated@@289 $generated@@368) $generated@@367)))
)))
(assert  (and (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@369 $generated@@372)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@369 $generated@@372))
)) (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@370 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@370 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@298 (type $generated@@375))))
(let (($generated@@377 ($generated@@297 (type $generated@@375))))
(= (type ($generated@@371 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@371 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@296 $generated@@154 $generated@@154)) (= (type $generated@@379) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@378) ($generated@@152 ($generated@@370 $generated@@145 $generated@@379)))) (= ($generated@@81 ($generated@@371 $generated@@378) ($generated@@152 ($generated@@370 $generated@@145 $generated@@379))) ($generated@@153 ($generated@@370 $generated@@145 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@316 (type $generated@@383))))
(let (($generated@@385 ($generated@@315 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@314 $generated@@154 $generated@@154)) (= (type $generated@@387) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@386) ($generated@@152 ($generated@@370 $generated@@145 $generated@@387)))) (= ($generated@@81 ($generated@@381 $generated@@386) ($generated@@152 ($generated@@370 $generated@@145 $generated@@387))) ($generated@@153 ($generated@@370 $generated@@145 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@297 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@296 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@315 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@314 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@296 $generated@@154 $generated@@154)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@401) $generated@@405))) (and ($generated@@263 ($generated@@81 ($generated@@371 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@263 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@314 $generated@@154 $generated@@154)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@409) $generated@@413))) (and ($generated@@263 ($generated@@81 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@263 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@76 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@316 (type $generated@@416))))
(let (($generated@@418 ($generated@@315 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@314 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@313 $generated@@418 $generated@@417)) (= ($generated@@312 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@312 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@316 (type $generated@@419))))
(let (($generated@@421 ($generated@@315 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@314 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@313 $generated@@421 $generated@@420)) (= ($generated@@348 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@348 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@316 (type $generated@@422))))
(let (($generated@@424 ($generated@@315 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@314 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@313 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@154))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@298 (type $generated@@425))))
(let (($generated@@427 ($generated@@297 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@296 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@295 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@154) (= (type $generated@@429) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@425) ($generated@@283 ($generated@@232 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@369 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@316 (type $generated@@430))))
(let (($generated@@432 ($generated@@315 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@314 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@313 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@154) (= (type $generated@@434) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@430) ($generated@@283 ($generated@@232 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@233 $generated@@435 $generated@@46)) (and (= ($generated@@283 ($generated@@370 $generated@@2 $generated@@435)) $generated@@435) ($generated@@140 ($generated@@370 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@154) ($generated@@233 $generated@@436 $generated@@47)) (and (= ($generated@@283 ($generated@@370 $generated@@3 $generated@@436)) $generated@@436) ($generated@@140 ($generated@@370 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@154) ($generated@@233 $generated@@437 $generated@@44)) (and (= ($generated@@283 ($generated@@370 $generated@@4 $generated@@437)) $generated@@437) ($generated@@140 ($generated@@370 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 21))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@233 $generated@@439 $generated@@45)) (and (= ($generated@@283 ($generated@@370 $generated@@438 $generated@@439)) $generated@@439) ($generated@@140 ($generated@@370 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@64) (= ($generated@@233 ($generated@@283 $generated@@440) $generated@@441) ($generated@@140 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@233 ($generated@@283 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@79 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@76 $generated@@443 $generated@@2)) (<= 0 ($generated@@288 $generated@@442))))
 :pattern ( ($generated@@288 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@278 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@277 $generated@@445)) (<= 0 ($generated@@276 $generated@@444))))
 :pattern ( ($generated@@276 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@154) (= (type $generated@@467) $generated@@154)) (= ($generated@@269 ($generated@@232 $generated@@466 $generated@@467)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@144 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@144 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@154) (= (type $generated@@477) $generated@@154)) (= ($generated@@152 ($generated@@232 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@232 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@154) (= (type $generated@@479) $generated@@154)) (= ($generated@@153 ($generated@@232 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@232 $generated@@478 $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ($generated@@484 Int) ) (! (let (($generated@@485 ($generated@@278 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483 $generated@@484)) $generated@@485))
 :pattern ( ($generated@@481 $generated@@483 $generated@@484))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@277 $generated@@154)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@480 $generated@@487) $generated@@488) (forall (($generated@@489 Int) ) (!  (=> (and (<= 0 $generated@@489) (< $generated@@489 ($generated@@276 $generated@@486))) ($generated@@263 ($generated@@481 $generated@@486 $generated@@489) $generated@@487 $generated@@488))
 :pattern ( ($generated@@481 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@480 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@75 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@75 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@246 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@246 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@251 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@251 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@251 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@159 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@159 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@480 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@480 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@480 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@480 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@370 $generated@@509 ($generated@@283 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@283 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@296 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) (= ($generated@@140 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@510) $generated@@513))) (and ($generated@@233 ($generated@@81 ($generated@@371 $generated@@510) $generated@@513) $generated@@512) ($generated@@233 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@510) $generated@@513))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@140 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@314 $generated@@154 $generated@@154)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@140 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@514) $generated@@517))) (and ($generated@@233 ($generated@@81 ($generated@@381 $generated@@514) $generated@@517) $generated@@516) ($generated@@233 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@140 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@154)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@232 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@232 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@154)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@232 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@232 $generated@@522 $generated@@523))
)))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@524 Int) ) (!  (=> (or ($generated@@242 ($generated@@256 $generated@@524)) (and (not (= 0 $generated@@240)) (< 0 $generated@@524))) (= ($generated@@241 ($generated@@256 $generated@@524)) ($generated@@256 (+ $generated@@524 2))))
 :weight 3
 :pattern ( ($generated@@241 ($generated@@256 $generated@@524)))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@233 $generated@@525 ($generated@@398 $generated@@526 $generated@@527))) (and (= ($generated@@283 ($generated@@370 ($generated@@296 $generated@@154 $generated@@154) $generated@@525)) $generated@@525) ($generated@@140 ($generated@@370 ($generated@@296 $generated@@154 $generated@@154) $generated@@525) ($generated@@398 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@233 $generated@@525 ($generated@@398 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@154) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@233 $generated@@528 ($generated@@406 $generated@@529 $generated@@530))) (and (= ($generated@@283 ($generated@@370 ($generated@@314 $generated@@154 $generated@@154) $generated@@528)) $generated@@528) ($generated@@140 ($generated@@370 ($generated@@314 $generated@@154 $generated@@154) $generated@@528) ($generated@@406 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@233 $generated@@528 ($generated@@406 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@154)) ($generated@@233 $generated@@533 ($generated@@144 $generated@@531 $generated@@532))) (and (= ($generated@@283 ($generated@@370 $generated@@145 $generated@@533)) $generated@@533) ($generated@@140 ($generated@@370 $generated@@145 $generated@@533) ($generated@@144 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@233 $generated@@533 ($generated@@144 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@81 ($generated@@414 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@81 ($generated@@414 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@69)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@144 $generated@@538 $generated@@539)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@145) (= ($generated@@518 ($generated@@283 $generated@@540)) ($generated@@519 $generated@@540)))
 :pattern ( ($generated@@518 ($generated@@283 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@154) ($generated@@233 $generated@@541 ($generated@@75 0))) (and (= ($generated@@283 ($generated@@370 $generated@@2 $generated@@541)) $generated@@541) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@541) ($generated@@75 0))))
 :pattern ( ($generated@@233 $generated@@541 ($generated@@75 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@64)) ($generated@@233 $generated@@542 ($generated@@246 $generated@@543))) (and (= ($generated@@283 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@542) ($generated@@246 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@542 ($generated@@246 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@64)) ($generated@@233 $generated@@544 ($generated@@251 $generated@@545))) (and (= ($generated@@283 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@544)) $generated@@544) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@154 $generated@@4) $generated@@544) ($generated@@251 $generated@@545))))
 :pattern ( ($generated@@233 $generated@@544 ($generated@@251 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@64)) ($generated@@233 $generated@@546 ($generated@@159 $generated@@547))) (and (= ($generated@@283 ($generated@@370 ($generated@@76 $generated@@154 $generated@@2) $generated@@546)) $generated@@546) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@154 $generated@@2) $generated@@546) ($generated@@159 $generated@@547))))
 :pattern ( ($generated@@233 $generated@@546 ($generated@@159 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@154) (= (type $generated@@549) $generated@@64)) ($generated@@233 $generated@@548 ($generated@@480 $generated@@549))) (and (= ($generated@@283 ($generated@@370 ($generated@@277 $generated@@154) $generated@@548)) $generated@@548) ($generated@@140 ($generated@@370 ($generated@@277 $generated@@154) $generated@@548) ($generated@@480 $generated@@549))))
 :pattern ( ($generated@@233 $generated@@548 ($generated@@480 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@154) ($generated@@233 $generated@@550 ($generated@@75 11))) (and (= ($generated@@283 ($generated@@370 $generated@@132 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@370 $generated@@132 $generated@@550) ($generated@@75 11))))
 :pattern ( ($generated@@233 $generated@@550 ($generated@@75 11)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@551 ($generated@@159 $generated@@552) $generated@@553) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@551 $generated@@554)))) ($generated@@263 $generated@@554 $generated@@552 $generated@@553))
 :pattern ( ($generated@@81 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@159 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@557) (and ($generated@@143 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@74 $generated@@555 ($generated@@144 $generated@@556 $generated@@558) $generated@@557))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@144 $generated@@556 $generated@@558) $generated@@557))
))))) ($generated@@263 ($generated@@152 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@263 ($generated@@152 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@561) (and ($generated@@143 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@144 $generated@@562 $generated@@560) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@144 $generated@@562 $generated@@560) $generated@@561))
))))) ($generated@@263 ($generated@@153 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@263 ($generated@@153 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (= ($generated@@232 ($generated@@258 $generated@@563) ($generated@@258 $generated@@564)) ($generated@@258 ($generated@@232 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@232 ($generated@@258 $generated@@563) ($generated@@258 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@256 $generated@@565))) ($generated@@258 ($generated@@283 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@256 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@283 ($generated@@258 $generated@@566)) ($generated@@258 ($generated@@283 $generated@@566)))
 :pattern ( ($generated@@283 ($generated@@258 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@278 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@277 $generated@@568)) (= ($generated@@276 $generated@@567) 0)) (= $generated@@567 ($generated@@275 $generated@@568))))
 :pattern ( ($generated@@276 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@76 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@288 ($generated@@82 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@288 $generated@@569) ($generated ($generated@@81 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@288 ($generated@@82 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@2)) ($generated@@74 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@3)) ($generated@@74 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@4)) ($generated@@74 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@438)) ($generated@@74 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@154)) ($generated@@74 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@277 $generated@@154)) (= (type $generated@@584) $generated@@64)) (= ($generated@@140 $generated@@583 ($generated@@480 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@276 $generated@@583))) ($generated@@233 ($generated@@481 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@481 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@140 $generated@@583 ($generated@@480 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@277 $generated@@154)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@276 $generated@@587))) (< ($generated@@519 ($generated@@370 $generated@@145 ($generated@@481 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@519 ($generated@@370 $generated@@145 ($generated@@481 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@296 $generated@@154 $generated@@154)) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) $generated@@64)) ($generated@@140 $generated@@589 ($generated@@398 $generated@@590 $generated@@591))) (and (and ($generated@@140 ($generated@@294 $generated@@589) ($generated@@246 $generated@@590)) ($generated@@140 ($generated@@337 $generated@@589) ($generated@@246 $generated@@591))) ($generated@@140 ($generated@@369 $generated@@589) ($generated@@246 ($generated@@144 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@140 $generated@@589 ($generated@@398 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@314 $generated@@154 $generated@@154)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@140 $generated@@592 ($generated@@406 $generated@@593 $generated@@594))) (and (and ($generated@@140 ($generated@@312 $generated@@592) ($generated@@251 $generated@@593)) ($generated@@140 ($generated@@348 $generated@@592) ($generated@@251 $generated@@594))) ($generated@@140 ($generated@@380 $generated@@592) ($generated@@251 ($generated@@144 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@140 $generated@@592 ($generated@@406 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@140 $generated@@595 $generated@@46))
 :pattern ( ($generated@@140 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@140 $generated@@596 $generated@@47))
 :pattern ( ($generated@@140 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@140 $generated@@597 $generated@@44))
 :pattern ( ($generated@@140 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@438) ($generated@@140 $generated@@598 $generated@@45))
 :pattern ( ($generated@@140 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@154) ($generated@@140 $generated@@599 $generated@@48))
 :pattern ( ($generated@@140 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@600) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@601) $generated@@77)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@606) ($generated@@166 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@608  (=> (and (= $generated@@600 ($generated@@220 $generated@@601 $generated@@602 $generated@@60 false)) (= $generated@@603 ($generated@@256 2))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< 0 $generated@@603)) (=> (< 0 $generated@@603) (=> (and (= $generated@@604 (+ $generated@@605 2)) (= (ControlFlow 0 3) (- 0 2))) (< 0 $generated@@604)))))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@606 ($generated@@165 $generated@@601 $generated@@602 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@609) (=> (= (ControlFlow 0 5) 3) $generated@@608)))))
(let (($generated@@611  (=> (and (and (and ($generated@@262 $generated@@602) ($generated@@607 $generated@@602)) (< 0 $generated@@605)) (and (= 0 $generated@@240) (= (ControlFlow 0 6) 5))) $generated@@610)))
$generated@@611)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(assert  (and (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@191  (=> (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (=> (and (and (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@46) (=> (and (not (= $generated@@192 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@183 $generated@@192) $generated@@50))) (= ($generated@@49 $generated@@185 $generated@@192) ($generated@@49 $generated@@183 $generated@@192))))
 :pattern ( ($generated@@49 $generated@@185 $generated@@192))
))) (and ($generated@@44 $generated@@183 $generated@@185) (= $generated@@187 ($generated@@162 3)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< 0 $generated@@187)) (=> (< 0 $generated@@187) (=> (and (= $generated@@188 (+ $generated@@189 3)) (= (ControlFlow 0 2) (- 0 1))) (< 0 $generated@@188))))))))
(let (($generated@@193  (=> (and (and (and ($generated@@184 $generated@@183) ($generated@@186 $generated@@183)) (< 0 $generated@@189)) (and (= 1 $generated@@190) (= (ControlFlow 0 4) 2))) $generated@@191)))
$generated@@193)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@184  (=> (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= $generated@@177 ($generated@@157 3))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< 0 $generated@@177)) (=> (< 0 $generated@@177) (=> (= $generated@@178 (+ $generated@@179 3)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< 0 $generated@@178)) (=> (< 0 $generated@@178) (=> (and (= $generated@@180 (+ $generated@@179 3)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@180 (+ $generated@@179 3)))))))))))
(let (($generated@@185  (=> (and (and (and ($generated@@181 $generated@@175) ($generated@@182 $generated@@175)) (< 0 $generated@@179)) (and (= 1 $generated@@183) (= (ControlFlow 0 5) 2))) $generated@@184)))
$generated@@185)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(assert  (and (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@191  (=> (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (=> (and (and (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@46) (=> (and (not (= $generated@@192 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@183 $generated@@192) $generated@@50))) (= ($generated@@49 $generated@@185 $generated@@192) ($generated@@49 $generated@@183 $generated@@192))))
 :pattern ( ($generated@@49 $generated@@185 $generated@@192))
))) (and ($generated@@44 $generated@@183 $generated@@185) (= $generated@@187 ($generated@@162 2)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< 0 $generated@@187)) (=> (< 0 $generated@@187) (=> (and (= $generated@@188 (+ $generated@@189 2)) (= (ControlFlow 0 2) (- 0 1))) (< 0 $generated@@188))))))))
(let (($generated@@193  (=> (and (and (and ($generated@@184 $generated@@183) ($generated@@186 $generated@@183)) (< 0 $generated@@189)) (and (= 0 $generated@@190) (= (ControlFlow 0 4) 2))) $generated@@191)))
$generated@@193)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@184  (=> (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= $generated@@177 ($generated@@157 2))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< 0 $generated@@177)) (=> (< 0 $generated@@177) (=> (= $generated@@178 (+ $generated@@179 2)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< 0 $generated@@178)) (=> (< 0 $generated@@178) (=> (and (= $generated@@180 (+ $generated@@179 2)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@180 (+ $generated@@179 2)))))))))))
(let (($generated@@185  (=> (and (and (and ($generated@@181 $generated@@175) ($generated@@182 $generated@@175)) (< 0 $generated@@179)) (and (= 0 $generated@@183) (= (ControlFlow 0 5) 2))) $generated@@184)))
$generated@@185)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 ((_ BitVec 11)) T@U)
(declare-fun $generated@@139 (T@U) (_ BitVec 11))
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@U) Real)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@258 (Bool T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (Real) Int)
(declare-fun $generated@@281 (Int) Int)
(declare-fun $generated@@283 (Real) Real)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@292 (T@U) Bool)
(declare-fun $generated@@293 (T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@323 (Real) T@U)
(declare-fun $generated@@327 () Int)
(declare-fun $generated@@328 (T@U T@U Int) Int)
(declare-fun $generated@@329 (T@U T@U Int) Bool)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@T T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@480 (T@T) T@U)
(declare-fun $generated@@504 () T@T)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 (T@U Int) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@680 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (and (forall (($generated@@140 (_ BitVec 11)) ) (! (= ($generated@@139 ($generated@@138 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@138 $generated@@140))
)) (= ($generated@@1 $generated@@137) 14)) (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@137) (= ($generated@@138 ($generated@@139 $generated@@141)) $generated@@141))
 :pattern ( ($generated@@139 $generated@@141))
))) (forall (($generated@@142 (_ BitVec 11)) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@137)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@137) (= (type $generated@@144) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@143 ($generated@@80 11) $generated@@144))
 :pattern ( ($generated@@79 $generated@@143 ($generated@@80 11) $generated@@144))
)))
(assert (= ($generated@@1 $generated@@147) 15))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@147) (= (type $generated@@150) $generated@@147)) (and ($generated@@146 $generated@@149) ($generated@@146 $generated@@150))) (= ($generated@@145 $generated@@149 $generated@@150) (= ($generated@@148 $generated@@149) ($generated@@148 $generated@@150))))
 :pattern ( ($generated@@145 $generated@@149 $generated@@150) ($generated@@146 $generated@@149))
 :pattern ( ($generated@@145 $generated@@149 $generated@@150) ($generated@@146 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@80 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@80 0)))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@137) ($generated@@151 $generated@@153 ($generated@@80 11)))
 :pattern ( ($generated@@151 $generated@@153 ($generated@@80 11)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@156 $generated@@157)) $generated@@69)
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@69) (= (type $generated@@159) $generated@@69)) (= (type $generated@@160) $generated@@147)) ($generated@@151 $generated@@160 ($generated@@155 $generated@@158 $generated@@159))) ($generated@@154 $generated@@160))
 :pattern ( ($generated@@154 $generated@@160) ($generated@@151 $generated@@160 ($generated@@155 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 16) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@147) (= (type $generated@@168) $generated@@147)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert  (and (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@73)
 :pattern ( ($generated@@169 $generated@@171))
)) (= (type $generated@@170) $generated@@147)))
(assert (= ($generated@@169 $generated@@170) $generated@@63))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@69)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@81 $generated@@164 $generated@@2)) (= (type $generated@@176) $generated@@69)) ($generated@@151 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@151 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@82 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@72 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@82) (= (type $generated@@227) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@228) ($generated@@71 $generated@@4))) (= (type $generated@@230) $generated@@82)) (= (type $generated@@231) ($generated@@71 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@179 $generated@@82 $generated@@4))
 :pattern ( ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@72 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@82) (= (type $generated@@239) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@240) ($generated@@71 $generated@@4))) (= (type $generated@@242) $generated@@82)) (= (type $generated@@243) ($generated@@71 $generated@@244))) (= ($generated@@0 ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@247)) $generated@@69)
 :pattern ( ($generated@@245 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@69) (= (type $generated@@249) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@246 $generated@@249)) ($generated@@79 $generated@@170 ($generated@@245 $generated@@248) $generated@@249))
 :pattern ( ($generated@@79 $generated@@170 ($generated@@245 $generated@@248) $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@147)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@69) (= (type $generated@@255) $generated@@69)) (= (type $generated@@256) $generated@@164)) (= (type $generated@@257) $generated@@164)) (= ($generated@@151 ($generated@@250 $generated@@256 $generated@@257) ($generated@@155 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@151 ($generated@@250 $generated@@256 $generated@@257) ($generated@@155 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@259 Bool) ($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@259 $generated@@260)) $generated@@147)
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@69) (= (type $generated@@263) $generated@@164)) (= ($generated@@151 ($generated@@258 $generated@@262 $generated@@263) ($generated@@245 $generated@@261))  (and ($generated@@151 ($generated@@11 $generated@@262) $generated@@44) ($generated@@251 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@151 ($generated@@258 $generated@@262 $generated@@263) ($generated@@245 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@69) ($generated@@151 $generated@@170 ($generated@@245 $generated@@264)))
 :pattern ( ($generated@@151 $generated@@170 ($generated@@245 $generated@@264)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@147) (= (type $generated@@266) $generated@@147)) (= ($generated@@161 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@161 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@147) (= (type $generated@@268) $generated@@147)) (= ($generated@@145 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@145 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@69)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@81 $generated@@164 $generated@@4)) (= (type $generated@@272) $generated@@69)) (= ($generated@@151 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@164) ($generated@@0 ($generated@@86 $generated@@271 $generated@@273))) ($generated@@251 $generated@@273 $generated@@272))
 :pattern ( ($generated@@86 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@151 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@69)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@81 $generated@@164 $generated@@4)) (= (type $generated@@277) $generated@@69)) (= ($generated@@151 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@164) ($generated@@0 ($generated@@86 $generated@@276 $generated@@278))) ($generated@@251 $generated@@278 $generated@@277))
 :pattern ( ($generated@@86 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@151 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 Real) ) (! (= ($generated@@279 $generated@@280) (to_int $generated@@280))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 Int) ) (! (= ($generated@@281 $generated@@282) $generated@@282)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 Real) ) (! (= ($generated@@283 $generated@@284) $generated@@284)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@147) (= (type $generated@@291) $generated@@147)) (and ($generated@@289 $generated@@290) ($generated@@289 $generated@@291))) (= ($generated@@145 $generated@@290 $generated@@291) true))
 :pattern ( ($generated@@145 $generated@@290 $generated@@291) ($generated@@289 $generated@@290))
 :pattern ( ($generated@@145 $generated@@290 $generated@@291) ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@164)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@147) (= (type $generated@@297) $generated@@147)) (and ($generated@@292 $generated@@296) ($generated@@292 $generated@@297))) (= ($generated@@145 $generated@@296 $generated@@297)  (and (= ($generated@@293 $generated@@296) ($generated@@293 $generated@@297)) (= ($generated@@294 $generated@@296) ($generated@@294 $generated@@297)))))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@292 $generated@@296))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@292 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@69) (= (type $generated@@300) $generated@@69)) (= (type $generated@@301) $generated@@164)) (= (type $generated@@302) $generated@@164)) (= (type $generated@@303) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@246 $generated@@303)) (= ($generated@@79 ($generated@@250 $generated@@301 $generated@@302) ($generated@@155 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@298 $generated@@301 $generated@@299 $generated@@303) ($generated@@298 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@79 ($generated@@250 $generated@@301 $generated@@302) ($generated@@155 $generated@@299 $generated@@300) $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@147) (= ($generated@@154 $generated@@304) (= ($generated@@169 $generated@@304) $generated@@61)))
 :pattern ( ($generated@@154 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@147) (= ($generated@@289 $generated@@305) (= ($generated@@169 $generated@@305) $generated@@63)))
 :pattern ( ($generated@@289 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@147) (= ($generated@@146 $generated@@306) (= ($generated@@169 $generated@@306) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@147) (= ($generated@@292 $generated@@307) (= ($generated@@169 $generated@@307) $generated@@66)))
 :pattern ( ($generated@@292 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@147) ($generated@@154 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@164) (= (type $generated@@310) $generated@@164)) (= $generated@@308 ($generated@@250 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@154 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@147) ($generated@@292 $generated@@311)) (exists (($generated@@312 Bool) ($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@164) (= $generated@@311 ($generated@@258 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@292 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@147) ($generated@@289 $generated@@322)) (= $generated@@322 $generated@@170))
 :pattern ( ($generated@@289 $generated@@322))
)))
(assert (forall (($generated@@324 Real) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@147)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@147) ($generated@@146 $generated@@325)) (exists (($generated@@326 Real) ) (= $generated@@325 ($generated@@323 $generated@@326))))
 :pattern ( ($generated@@146 $generated@@325))
)))
(assert  (=> (<= 0 $generated@@327) (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 Int) ) (!  (=> (and (and (= (type $generated@@330) $generated@@69) (= (type $generated@@331) $generated@@147)) (or ($generated@@329 $generated@@330 $generated@@331 $generated@@332) (and (not (= 0 $generated@@327)) ($generated@@151 $generated@@331 ($generated@@245 $generated@@330))))) true)
 :pattern ( ($generated@@328 $generated@@330 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@164)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@69) (= (type $generated@@337) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@298 ($generated@@333 $generated@@335) $generated@@336 $generated@@337) ($generated@@79 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@298 ($generated@@333 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@81 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@84 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@81 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@86 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@74)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@69) (and (= ($generated@@77 ($generated@@245 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@245 $generated@@346)) $generated@@68)))
 :pattern ( ($generated@@245 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@81 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@86 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@86 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 20)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@81 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@86 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@86 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@84 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@81 $generated@@384 $generated@@2)) (= ($generated@@173 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@86 $generated@@383 $generated@@385))) (<= ($generated ($generated@@86 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@86 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@173 $generated@@383))
)))
(assert  (=> (<= 0 $generated@@327) (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 Int) ) (!  (=> (and (and (= (type $generated@@386) $generated@@69) (= (type $generated@@387) $generated@@147)) (or ($generated@@329 $generated@@386 ($generated@@285 $generated@@387) ($generated@@281 $generated@@388)) (and (not (= 0 $generated@@327)) ($generated@@151 $generated@@387 ($generated@@245 $generated@@386))))) (= ($generated@@328 $generated@@386 ($generated@@285 $generated@@387) ($generated@@281 $generated@@388)) (+ $generated@@388 (ite ($generated@@146 ($generated@@285 $generated@@387)) ($generated@@279 ($generated@@283 ($generated@@148 ($generated@@285 $generated@@387)))) 25))))
 :weight 3
 :pattern ( ($generated@@328 $generated@@386 ($generated@@285 $generated@@387) ($generated@@281 $generated@@388)))
))))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@351 (type $generated@@389))))
(let (($generated@@391 ($generated@@350 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@349 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@348 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@86 ($generated@@347 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@347 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@351 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@81 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@351 (type $generated@@396))))
(let (($generated@@398 ($generated@@350 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@349 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@348 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@86 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@369 (type $generated@@400))))
(let (($generated@@402 ($generated@@368 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@367 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@366 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@86 ($generated@@365 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@365 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@369 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@81 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@369 (type $generated@@407))))
(let (($generated@@409 ($generated@@368 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@367 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@366 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@86 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@411) $generated@@147) (= (type $generated@@412) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@246 $generated@@412) (and ($generated@@146 $generated@@411) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@69) ($generated@@79 $generated@@411 ($generated@@245 $generated@@413) $generated@@412))
 :pattern ( ($generated@@79 $generated@@411 ($generated@@245 $generated@@413) $generated@@412))
))))) ($generated@@79 ($generated@@9 ($generated@@148 $generated@@411)) $generated@@47 $generated@@412))
 :pattern ( ($generated@@79 ($generated@@9 ($generated@@148 $generated@@411)) $generated@@47 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@147) (= (type $generated@@415) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@246 $generated@@415) (and ($generated@@292 $generated@@414) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@69) ($generated@@79 $generated@@414 ($generated@@245 $generated@@416) $generated@@415))
 :pattern ( ($generated@@79 $generated@@414 ($generated@@245 $generated@@416) $generated@@415))
))))) ($generated@@79 ($generated@@11 ($generated@@293 $generated@@414)) $generated@@44 $generated@@415))
 :pattern ( ($generated@@79 ($generated@@11 ($generated@@293 $generated@@414)) $generated@@44 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@81 $generated@@164 $generated@@2)) (= (type $generated@@418) $generated@@69)) (= ($generated@@151 $generated@@417 ($generated@@172 $generated@@418)) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@164) (< 0 ($generated ($generated@@86 $generated@@417 $generated@@419)))) ($generated@@251 $generated@@419 $generated@@418))
 :pattern ( ($generated@@86 $generated@@417 $generated@@419))
))))
 :pattern ( ($generated@@151 $generated@@417 ($generated@@172 $generated@@418)))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 Real) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) $generated@@69) (= (type $generated@@422) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@246 $generated@@422)) (= ($generated@@79 ($generated@@323 $generated@@421) ($generated@@245 $generated@@420) $generated@@422) ($generated@@79 ($generated@@9 $generated@@421) $generated@@47 $generated@@422)))
 :pattern ( ($generated@@79 ($generated@@323 $generated@@421) ($generated@@245 $generated@@420) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@81 $generated@@164 $generated@@4)) (= (type $generated@@424) $generated@@69)) (= (type $generated@@425) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@423 ($generated@@269 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@164) ($generated@@0 ($generated@@86 $generated@@423 $generated@@426))) ($generated@@298 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@86 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@79 $generated@@423 ($generated@@269 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@81 $generated@@164 $generated@@4)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@427 ($generated@@274 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@164) ($generated@@0 ($generated@@86 $generated@@427 $generated@@430))) ($generated@@298 $generated@@430 $generated@@428 $generated@@429))
 :pattern ( ($generated@@86 $generated@@427 $generated@@430))
))))
 :pattern ( ($generated@@79 $generated@@427 ($generated@@274 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(= ($generated ($generated@@86 ($generated@@339 $generated@@432) $generated@@431)) 0))
 :pattern ( (let (($generated@@432 (type $generated@@431)))
($generated@@86 ($generated@@339 $generated@@432) $generated@@431)))
)))
(assert  (and (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@433 $generated@@436)) ($generated@@81 $generated@@164 $generated@@4))
 :pattern ( ($generated@@433 $generated@@436))
)) (forall (($generated@@437 T@T) ($generated@@438 T@U) ) (! (= (type ($generated@@434 $generated@@437 $generated@@438)) $generated@@437)
 :pattern ( ($generated@@434 $generated@@437 $generated@@438))
))) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@351 (type $generated@@439))))
(let (($generated@@441 ($generated@@350 (type $generated@@439))))
(= (type ($generated@@435 $generated@@439)) ($generated@@81 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@435 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@349 $generated@@164 $generated@@164)) (= (type $generated@@443) $generated@@164)) (= ($generated@@0 ($generated@@86 ($generated@@433 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@86 ($generated@@347 $generated@@442) ($generated@@162 ($generated@@434 $generated@@147 $generated@@443)))) (= ($generated@@86 ($generated@@435 $generated@@442) ($generated@@162 ($generated@@434 $generated@@147 $generated@@443))) ($generated@@163 ($generated@@434 $generated@@147 $generated@@443))))))
 :pattern ( ($generated@@86 ($generated@@433 $generated@@442) $generated@@443))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) ($generated@@81 $generated@@164 $generated@@4))
 :pattern ( ($generated@@444 $generated@@446))
)) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@369 (type $generated@@447))))
(let (($generated@@449 ($generated@@368 (type $generated@@447))))
(= (type ($generated@@445 $generated@@447)) ($generated@@81 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@445 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@367 $generated@@164 $generated@@164)) (= (type $generated@@451) $generated@@164)) (= ($generated@@0 ($generated@@86 ($generated@@444 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@86 ($generated@@365 $generated@@450) ($generated@@162 ($generated@@434 $generated@@147 $generated@@451)))) (= ($generated@@86 ($generated@@445 $generated@@450) ($generated@@162 ($generated@@434 $generated@@147 $generated@@451))) ($generated@@163 ($generated@@434 $generated@@147 $generated@@451))))))
 :pattern ( ($generated@@86 ($generated@@444 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@350 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@349 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@86 ($generated@@393 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@86 ($generated@@347 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@86 ($generated@@435 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@86 ($generated@@347 $generated@@452) $generated@@456))
 :pattern ( ($generated@@86 ($generated@@435 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@86 ($generated@@393 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@368 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@367 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@86 ($generated@@404 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@86 ($generated@@365 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@86 ($generated@@445 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@86 ($generated@@365 $generated@@457) $generated@@461))
 :pattern ( ($generated@@86 ($generated@@445 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@69)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@349 $generated@@164 $generated@@164)) (= (type $generated@@466) $generated@@69)) (= (type $generated@@467) $generated@@69)) (= (type $generated@@468) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@164) ($generated@@0 ($generated@@86 ($generated@@347 $generated@@465) $generated@@469))) (and ($generated@@298 ($generated@@86 ($generated@@435 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@298 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@86 ($generated@@435 $generated@@465) $generated@@469))
 :pattern ( ($generated@@86 ($generated@@347 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@79 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@367 $generated@@164 $generated@@164)) (= (type $generated@@474) $generated@@69)) (= (type $generated@@475) $generated@@69)) (= (type $generated@@476) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@164) ($generated@@0 ($generated@@86 ($generated@@365 $generated@@473) $generated@@477))) (and ($generated@@298 ($generated@@86 ($generated@@445 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@298 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@86 ($generated@@445 $generated@@473) $generated@@477))
 :pattern ( ($generated@@86 ($generated@@365 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@79 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 Bool) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@164) (= ($generated@@293 ($generated@@258 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@258 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@T) ) (! (= (type ($generated@@480 $generated@@481)) ($generated@@81 $generated@@481 $generated@@4))
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@369 (type $generated@@482))))
(let (($generated@@484 ($generated@@368 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@367 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@366 $generated@@484 $generated@@483)) (= ($generated@@365 $generated@@482) ($generated@@480 $generated@@484))))))
 :pattern ( ($generated@@365 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@369 (type $generated@@485))))
(let (($generated@@487 ($generated@@368 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@367 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@366 $generated@@487 $generated@@486)) (= ($generated@@404 $generated@@485) ($generated@@480 $generated@@486))))))
 :pattern ( ($generated@@404 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@369 (type $generated@@488))))
(let (($generated@@490 ($generated@@368 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@367 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@366 $generated@@490 $generated@@489)) (= ($generated@@444 $generated@@488) ($generated@@480 $generated@@164))))))
 :pattern ( ($generated@@444 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@351 (type $generated@@491))))
(let (($generated@@493 ($generated@@350 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@349 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@348 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@164) (= (type $generated@@495) $generated@@164)) ($generated@@0 ($generated@@86 ($generated@@433 $generated@@491) ($generated@@333 ($generated@@250 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@433 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@369 (type $generated@@496))))
(let (($generated@@498 ($generated@@368 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@367 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@366 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@164) (= (type $generated@@500) $generated@@164)) ($generated@@0 ($generated@@86 ($generated@@444 $generated@@496) ($generated@@333 ($generated@@250 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@444 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@164) ($generated@@251 $generated@@501 $generated@@46)) (and (= ($generated@@333 ($generated@@434 $generated@@2 $generated@@501)) $generated@@501) ($generated@@151 ($generated@@434 $generated@@2 $generated@@501) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@501 $generated@@46))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@164) ($generated@@251 $generated@@502 $generated@@47)) (and (= ($generated@@333 ($generated@@434 $generated@@3 $generated@@502)) $generated@@502) ($generated@@151 ($generated@@434 $generated@@3 $generated@@502) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@502 $generated@@47))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@164) ($generated@@251 $generated@@503 $generated@@44)) (and (= ($generated@@333 ($generated@@434 $generated@@4 $generated@@503)) $generated@@503) ($generated@@151 ($generated@@434 $generated@@4 $generated@@503) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@503 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@504) 21))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@164) ($generated@@251 $generated@@505 $generated@@45)) (and (= ($generated@@333 ($generated@@434 $generated@@504 $generated@@505)) $generated@@505) ($generated@@151 ($generated@@434 $generated@@504 $generated@@505) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@505 $generated@@45))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@69) (= ($generated@@251 ($generated@@333 $generated@@506) $generated@@507) ($generated@@151 $generated@@506 $generated@@507)))
 :pattern ( ($generated@@251 ($generated@@333 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@84 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@81 $generated@@509 $generated@@2)) (<= 0 ($generated@@338 $generated@@508))))
 :pattern ( ($generated@@338 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@317 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@316 $generated@@511)) (<= 0 ($generated@@315 $generated@@510))))
 :pattern ( ($generated@@315 $generated@@510))
)))
(assert  (=> (<= 0 $generated@@327) (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 Int) ) (!  (=> (and (and (= (type $generated@@512) $generated@@69) (= (type $generated@@513) $generated@@147)) (or ($generated@@329 $generated@@512 $generated@@513 $generated@@514) (and (not (= 0 $generated@@327)) ($generated@@151 $generated@@513 ($generated@@245 $generated@@512))))) (= ($generated@@328 $generated@@512 $generated@@513 $generated@@514) (+ $generated@@514 (ite ($generated@@146 $generated@@513) ($generated@@279 ($generated@@148 $generated@@513)) 25))))
 :pattern ( ($generated@@328 $generated@@512 $generated@@513 $generated@@514))
))))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@69) (= (type $generated@@518) $generated@@69)) (= ($generated@@515 ($generated@@462 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@462 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@69) (= (type $generated@@522) $generated@@69)) (= ($generated@@519 ($generated@@462 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@462 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@69) (= (type $generated@@524) $generated@@69)) (= ($generated@@77 ($generated@@462 $generated@@523 $generated@@524)) $generated@@58))
 :pattern ( ($generated@@462 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@69) (= (type $generated@@528) $generated@@69)) (= ($generated@@525 ($generated@@470 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@470 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@69) (= (type $generated@@532) $generated@@69)) (= ($generated@@529 ($generated@@470 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@470 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@69) (= (type $generated@@534) $generated@@69)) (= ($generated@@77 ($generated@@470 $generated@@533 $generated@@534)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@164) (= (type $generated@@536) $generated@@164)) (= ($generated@@169 ($generated@@250 $generated@@535 $generated@@536)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@69)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@69) (= (type $generated@@540) $generated@@69)) (= ($generated@@537 ($generated@@155 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@155 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@69) (= (type $generated@@544) $generated@@69)) (= ($generated@@541 ($generated@@155 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@155 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@164) (= (type $generated@@546) $generated@@164)) (= ($generated@@162 ($generated@@250 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@250 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@164) (= (type $generated@@548) $generated@@164)) (= ($generated@@163 ($generated@@250 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@250 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 Bool) ($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@164) (= ($generated@@169 ($generated@@258 $generated@@549 $generated@@550)) $generated@@66))
 :pattern ( ($generated@@258 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 Bool) ($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@164) (= ($generated@@294 ($generated@@258 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@258 $generated@@551 $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@555))
)) (forall (($generated@@556 T@U) ($generated@@557 Int) ) (! (let (($generated@@558 ($generated@@317 (type $generated@@556))))
(= (type ($generated@@554 $generated@@556 $generated@@557)) $generated@@558))
 :pattern ( ($generated@@554 $generated@@556 $generated@@557))
))))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@316 $generated@@164)) (= (type $generated@@560) $generated@@69)) (= (type $generated@@561) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@559 ($generated@@553 $generated@@560) $generated@@561) (forall (($generated@@562 Int) ) (!  (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@315 $generated@@559))) ($generated@@298 ($generated@@554 $generated@@559 $generated@@562) $generated@@560 $generated@@561))
 :pattern ( ($generated@@554 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@79 $generated@@559 ($generated@@553 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@563 ($generated@@80 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@80 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@69)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@69) (= ($generated@@565 ($generated@@269 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@269 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@69) (= ($generated@@77 ($generated@@269 $generated@@568)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@69)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@69) (= ($generated@@569 ($generated@@274 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@274 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@69) (= ($generated@@77 ($generated@@274 $generated@@572)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@69)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@69) (= ($generated@@573 ($generated@@172 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@172 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@69) (= ($generated@@77 ($generated@@172 $generated@@576)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@69)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@69) (= ($generated@@577 ($generated@@553 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@553 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@69) (= ($generated@@77 ($generated@@553 $generated@@580)) $generated@@57))
 :pattern ( ($generated@@553 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@69)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@69) (= ($generated@@581 ($generated@@245 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@245 $generated@@583))
)))
(assert (forall (($generated@@584 Real) ) (! (= ($generated@@169 ($generated@@323 $generated@@584)) $generated@@65)
 :pattern ( ($generated@@323 $generated@@584))
)))
(assert (forall (($generated@@585 Real) ) (! (= ($generated@@148 ($generated@@323 $generated@@585)) $generated@@585)
 :pattern ( ($generated@@323 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@434 $generated@@587 ($generated@@333 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@333 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@349 $generated@@164 $generated@@164)) (= (type $generated@@589) $generated@@69)) (= (type $generated@@590) $generated@@69)) (= ($generated@@151 $generated@@588 ($generated@@462 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@164) ($generated@@0 ($generated@@86 ($generated@@347 $generated@@588) $generated@@591))) (and ($generated@@251 ($generated@@86 ($generated@@435 $generated@@588) $generated@@591) $generated@@590) ($generated@@251 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@86 ($generated@@435 $generated@@588) $generated@@591))
 :pattern ( ($generated@@86 ($generated@@347 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@151 $generated@@588 ($generated@@462 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@367 $generated@@164 $generated@@164)) (= (type $generated@@593) $generated@@69)) (= (type $generated@@594) $generated@@69)) (= ($generated@@151 $generated@@592 ($generated@@470 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@164) ($generated@@0 ($generated@@86 ($generated@@365 $generated@@592) $generated@@595))) (and ($generated@@251 ($generated@@86 ($generated@@445 $generated@@592) $generated@@595) $generated@@594) ($generated@@251 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@86 ($generated@@445 $generated@@592) $generated@@595))
 :pattern ( ($generated@@86 ($generated@@365 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@151 $generated@@592 ($generated@@470 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Real) ) (!  (=> (= (type $generated@@596) $generated@@69) (= ($generated@@151 ($generated@@323 $generated@@597) ($generated@@245 $generated@@596)) ($generated@@151 ($generated@@9 $generated@@597) $generated@@47)))
 :pattern ( ($generated@@151 ($generated@@323 $generated@@597) ($generated@@245 $generated@@596)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@164)) (< ($generated@@598 $generated@@600) ($generated@@599 ($generated@@250 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@250 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@164) (= (type $generated@@603) $generated@@164)) (< ($generated@@598 $generated@@603) ($generated@@599 ($generated@@250 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@250 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 Bool) ($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@164) (< ($generated@@598 $generated@@605) ($generated@@599 ($generated@@258 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@258 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@164) (= (type $generated@@607) $generated@@69)) (= (type $generated@@608) $generated@@69)) ($generated@@251 $generated@@606 ($generated@@462 $generated@@607 $generated@@608))) (and (= ($generated@@333 ($generated@@434 ($generated@@349 $generated@@164 $generated@@164) $generated@@606)) $generated@@606) ($generated@@151 ($generated@@434 ($generated@@349 $generated@@164 $generated@@164) $generated@@606) ($generated@@462 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@251 $generated@@606 ($generated@@462 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@164) (= (type $generated@@610) $generated@@69)) (= (type $generated@@611) $generated@@69)) ($generated@@251 $generated@@609 ($generated@@470 $generated@@610 $generated@@611))) (and (= ($generated@@333 ($generated@@434 ($generated@@367 $generated@@164 $generated@@164) $generated@@609)) $generated@@609) ($generated@@151 ($generated@@434 ($generated@@367 $generated@@164 $generated@@164) $generated@@609) ($generated@@470 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@251 $generated@@609 ($generated@@470 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@69) (= (type $generated@@613) $generated@@69)) (= (type $generated@@614) $generated@@164)) ($generated@@251 $generated@@614 ($generated@@155 $generated@@612 $generated@@613))) (and (= ($generated@@333 ($generated@@434 $generated@@147 $generated@@614)) $generated@@614) ($generated@@151 ($generated@@434 $generated@@147 $generated@@614) ($generated@@155 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@251 $generated@@614 ($generated@@155 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@69) (= (type $generated@@616) $generated@@147)) ($generated@@151 $generated@@616 ($generated@@245 $generated@@615))) (or (or ($generated@@289 $generated@@616) ($generated@@146 $generated@@616)) ($generated@@292 $generated@@616)))
 :pattern ( ($generated@@292 $generated@@616) ($generated@@151 $generated@@616 ($generated@@245 $generated@@615)))
 :pattern ( ($generated@@146 $generated@@616) ($generated@@151 $generated@@616 ($generated@@245 $generated@@615)))
 :pattern ( ($generated@@289 $generated@@616) ($generated@@151 $generated@@616 ($generated@@245 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@147) (= (type $generated@@618) $generated@@69)) (= (type $generated@@619) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@246 $generated@@619) (and ($generated@@292 $generated@@617) ($generated@@79 $generated@@617 ($generated@@245 $generated@@618) $generated@@619)))) ($generated@@298 ($generated@@294 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@298 ($generated@@294 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
 (not ($generated@@0 ($generated@@86 ($generated@@480 $generated@@621) $generated@@620))))
 :pattern ( (let (($generated@@621 (type $generated@@620)))
($generated@@86 ($generated@@480 $generated@@621) $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@69) (= (type $generated@@623) $generated@@69)) (and (= ($generated@@77 ($generated@@155 $generated@@622 $generated@@623)) $generated@@62) (= ($generated@@344 ($generated@@155 $generated@@622 $generated@@623)) $generated@@67)))
 :pattern ( ($generated@@155 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@147) (= ($generated@@598 ($generated@@333 $generated@@624)) ($generated@@599 $generated@@624)))
 :pattern ( ($generated@@598 ($generated@@333 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@164) ($generated@@251 $generated@@625 ($generated@@80 0))) (and (= ($generated@@333 ($generated@@434 $generated@@2 $generated@@625)) $generated@@625) ($generated@@151 ($generated@@434 ($generated@@81 $generated@@164 $generated@@4) $generated@@625) ($generated@@80 0))))
 :pattern ( ($generated@@251 $generated@@625 ($generated@@80 0)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@164) (= (type $generated@@627) $generated@@69)) ($generated@@251 $generated@@626 ($generated@@269 $generated@@627))) (and (= ($generated@@333 ($generated@@434 ($generated@@81 $generated@@164 $generated@@4) $generated@@626)) $generated@@626) ($generated@@151 ($generated@@434 ($generated@@81 $generated@@164 $generated@@4) $generated@@626) ($generated@@269 $generated@@627))))
 :pattern ( ($generated@@251 $generated@@626 ($generated@@269 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@164) (= (type $generated@@629) $generated@@69)) ($generated@@251 $generated@@628 ($generated@@274 $generated@@629))) (and (= ($generated@@333 ($generated@@434 ($generated@@81 $generated@@164 $generated@@4) $generated@@628)) $generated@@628) ($generated@@151 ($generated@@434 ($generated@@81 $generated@@164 $generated@@4) $generated@@628) ($generated@@274 $generated@@629))))
 :pattern ( ($generated@@251 $generated@@628 ($generated@@274 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@164) (= (type $generated@@631) $generated@@69)) ($generated@@251 $generated@@630 ($generated@@172 $generated@@631))) (and (= ($generated@@333 ($generated@@434 ($generated@@81 $generated@@164 $generated@@2) $generated@@630)) $generated@@630) ($generated@@151 ($generated@@434 ($generated@@81 $generated@@164 $generated@@2) $generated@@630) ($generated@@172 $generated@@631))))
 :pattern ( ($generated@@251 $generated@@630 ($generated@@172 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@164) (= (type $generated@@633) $generated@@69)) ($generated@@251 $generated@@632 ($generated@@553 $generated@@633))) (and (= ($generated@@333 ($generated@@434 ($generated@@316 $generated@@164) $generated@@632)) $generated@@632) ($generated@@151 ($generated@@434 ($generated@@316 $generated@@164) $generated@@632) ($generated@@553 $generated@@633))))
 :pattern ( ($generated@@251 $generated@@632 ($generated@@553 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@69) (= (type $generated@@635) $generated@@164)) ($generated@@251 $generated@@635 ($generated@@245 $generated@@634))) (and (= ($generated@@333 ($generated@@434 $generated@@147 $generated@@635)) $generated@@635) ($generated@@151 ($generated@@434 $generated@@147 $generated@@635) ($generated@@245 $generated@@634))))
 :pattern ( ($generated@@251 $generated@@635 ($generated@@245 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@164) ($generated@@251 $generated@@636 ($generated@@80 11))) (and (= ($generated@@333 ($generated@@434 $generated@@137 $generated@@636)) $generated@@636) ($generated@@151 ($generated@@434 $generated@@137 $generated@@636) ($generated@@80 11))))
 :pattern ( ($generated@@251 $generated@@636 ($generated@@80 11)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@81 $generated@@164 $generated@@2)) (= (type $generated@@638) $generated@@69)) (= (type $generated@@639) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@637 ($generated@@172 $generated@@638) $generated@@639) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@164) (< 0 ($generated ($generated@@86 $generated@@637 $generated@@640)))) ($generated@@298 $generated@@640 $generated@@638 $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 $generated@@640))
))))
 :pattern ( ($generated@@79 $generated@@637 ($generated@@172 $generated@@638) $generated@@639))
)))
(assert (= $generated@@170 ($generated@@285 $generated@@170)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@147) (= (type $generated@@642) $generated@@69)) (= (type $generated@@643) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@246 $generated@@643) (and ($generated@@154 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@69) ($generated@@79 $generated@@641 ($generated@@155 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@79 $generated@@641 ($generated@@155 $generated@@642 $generated@@644) $generated@@643))
))))) ($generated@@298 ($generated@@162 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@298 ($generated@@162 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) $generated@@147) (= (type $generated@@646) $generated@@69)) (= (type $generated@@647) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@246 $generated@@647) (and ($generated@@154 $generated@@645) (exists (($generated@@648 T@U) ) (!  (and (= (type $generated@@648) $generated@@69) ($generated@@79 $generated@@645 ($generated@@155 $generated@@648 $generated@@646) $generated@@647))
 :pattern ( ($generated@@79 $generated@@645 ($generated@@155 $generated@@648 $generated@@646) $generated@@647))
))))) ($generated@@298 ($generated@@163 $generated@@645) $generated@@646 $generated@@647))
 :pattern ( ($generated@@298 ($generated@@163 $generated@@645) $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 Bool) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@69) (= (type $generated@@651) $generated@@164)) (= (type $generated@@652) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@246 $generated@@652)) (= ($generated@@79 ($generated@@258 $generated@@650 $generated@@651) ($generated@@245 $generated@@649) $generated@@652)  (and ($generated@@79 ($generated@@11 $generated@@650) $generated@@44 $generated@@652) ($generated@@298 $generated@@651 $generated@@649 $generated@@652))))
 :pattern ( ($generated@@79 ($generated@@258 $generated@@650 $generated@@651) ($generated@@245 $generated@@649) $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@164) (= (type $generated@@654) $generated@@164)) (= ($generated@@250 ($generated@@285 $generated@@653) ($generated@@285 $generated@@654)) ($generated@@285 ($generated@@250 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@250 ($generated@@285 $generated@@653) ($generated@@285 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@4) (= (type $generated@@656) $generated@@164)) (= ($generated@@258 ($generated@@0 ($generated@@285 $generated@@655)) ($generated@@285 $generated@@656)) ($generated@@285 ($generated@@258 ($generated@@0 $generated@@655) $generated@@656))))
 :pattern ( ($generated@@258 ($generated@@0 ($generated@@285 $generated@@655)) ($generated@@285 $generated@@656)))
)))
(assert (forall (($generated@@657 Int) ) (! (= ($generated@@333 ($generated@@8 ($generated@@281 $generated@@657))) ($generated@@285 ($generated@@333 ($generated@@8 $generated@@657))))
 :pattern ( ($generated@@333 ($generated@@8 ($generated@@281 $generated@@657))))
)))
(assert (forall (($generated@@658 Real) ) (! (= ($generated@@333 ($generated@@9 ($generated@@283 $generated@@658))) ($generated@@285 ($generated@@333 ($generated@@9 $generated@@658))))
 :pattern ( ($generated@@333 ($generated@@9 ($generated@@283 $generated@@658))))
)))
(assert (forall (($generated@@659 Real) ) (! (= ($generated@@323 ($generated@@283 $generated@@659)) ($generated@@285 ($generated@@323 $generated@@659)))
 :pattern ( ($generated@@323 ($generated@@283 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (! (= ($generated@@333 ($generated@@285 $generated@@660)) ($generated@@285 ($generated@@333 $generated@@660)))
 :pattern ( ($generated@@333 ($generated@@285 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@317 (type $generated@@661))))
 (=> (and (= (type $generated@@661) ($generated@@316 $generated@@662)) (= ($generated@@315 $generated@@661) 0)) (= $generated@@661 ($generated@@314 $generated@@662))))
 :pattern ( ($generated@@315 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 (type $generated@@664)))
 (=> (and (and (= (type $generated@@663) ($generated@@81 $generated@@666 $generated@@2)) (= (type $generated@@665) $generated@@2)) (<= 0 ($generated $generated@@665))) (= ($generated@@338 ($generated@@87 $generated@@663 $generated@@664 $generated@@665)) (+ (- ($generated@@338 $generated@@663) ($generated ($generated@@86 $generated@@663 $generated@@664))) ($generated $generated@@665)))))
 :pattern ( ($generated@@338 ($generated@@87 $generated@@663 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@668) $generated@@2)) ($generated@@79 $generated@@668 $generated@@46 $generated@@667))
 :pattern ( ($generated@@79 $generated@@668 $generated@@46 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@670) $generated@@3)) ($generated@@79 $generated@@670 $generated@@47 $generated@@669))
 :pattern ( ($generated@@79 $generated@@670 $generated@@47 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@672) $generated@@4)) ($generated@@79 $generated@@672 $generated@@44 $generated@@671))
 :pattern ( ($generated@@79 $generated@@672 $generated@@44 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@674) $generated@@504)) ($generated@@79 $generated@@674 $generated@@45 $generated@@673))
 :pattern ( ($generated@@79 $generated@@674 $generated@@45 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@676) $generated@@164)) ($generated@@79 $generated@@676 $generated@@48 $generated@@675))
 :pattern ( ($generated@@79 $generated@@676 $generated@@48 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@316 $generated@@164)) (= (type $generated@@678) $generated@@69)) (= ($generated@@151 $generated@@677 ($generated@@553 $generated@@678)) (forall (($generated@@679 Int) ) (!  (=> (and (<= 0 $generated@@679) (< $generated@@679 ($generated@@315 $generated@@677))) ($generated@@251 ($generated@@554 $generated@@677 $generated@@679) $generated@@678))
 :pattern ( ($generated@@554 $generated@@677 $generated@@679))
))))
 :pattern ( ($generated@@151 $generated@@677 ($generated@@553 $generated@@678)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (!  (=> (= (type $generated@@681) ($generated@@316 $generated@@164)) (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@315 $generated@@681))) (< ($generated@@599 ($generated@@434 $generated@@147 ($generated@@554 $generated@@681 $generated@@682))) ($generated@@680 $generated@@681))))
 :pattern ( ($generated@@599 ($generated@@434 $generated@@147 ($generated@@554 $generated@@681 $generated@@682))))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@349 $generated@@164 $generated@@164)) (= (type $generated@@684) $generated@@69)) (= (type $generated@@685) $generated@@69)) ($generated@@151 $generated@@683 ($generated@@462 $generated@@684 $generated@@685))) (and (and ($generated@@151 ($generated@@347 $generated@@683) ($generated@@269 $generated@@684)) ($generated@@151 ($generated@@393 $generated@@683) ($generated@@269 $generated@@685))) ($generated@@151 ($generated@@433 $generated@@683) ($generated@@269 ($generated@@155 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@151 $generated@@683 ($generated@@462 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@367 $generated@@164 $generated@@164)) (= (type $generated@@687) $generated@@69)) (= (type $generated@@688) $generated@@69)) ($generated@@151 $generated@@686 ($generated@@470 $generated@@687 $generated@@688))) (and (and ($generated@@151 ($generated@@365 $generated@@686) ($generated@@274 $generated@@687)) ($generated@@151 ($generated@@404 $generated@@686) ($generated@@274 $generated@@688))) ($generated@@151 ($generated@@444 $generated@@686) ($generated@@274 ($generated@@155 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@151 $generated@@686 ($generated@@470 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@2) ($generated@@151 $generated@@689 $generated@@46))
 :pattern ( ($generated@@151 $generated@@689 $generated@@46))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@3) ($generated@@151 $generated@@690 $generated@@47))
 :pattern ( ($generated@@151 $generated@@690 $generated@@47))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@4) ($generated@@151 $generated@@691 $generated@@44))
 :pattern ( ($generated@@151 $generated@@691 $generated@@44))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@504) ($generated@@151 $generated@@692 $generated@@45))
 :pattern ( ($generated@@151 $generated@@692 $generated@@45))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@164) ($generated@@151 $generated@@693 $generated@@48))
 :pattern ( ($generated@@151 $generated@@693 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 (T@U) Bool)
(declare-fun $generated@@700 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@694) $generated@@147) (= (type $generated@@695) ($generated@@179 $generated@@82 $generated@@4))) (= (type $generated@@696) $generated@@82)) (= (type $generated@@697) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@698) ($generated@@179 $generated@@82 $generated@@4))) (= (type $generated@@700) $generated@@69)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@701 true))
(let (($generated@@702  (=> (and (not ($generated@@146 $generated@@694)) (= (ControlFlow 0 5) 2)) $generated@@701)))
(let (($generated@@703  (=> ($generated@@146 $generated@@694) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@146 $generated@@694)) (=> ($generated@@146 $generated@@694) (=> (= (ControlFlow 0 3) 2) $generated@@701))))))
(let (($generated@@704  (=> (= $generated@@695 ($generated@@233 $generated@@696 $generated@@697 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@703) (=> (= (ControlFlow 0 6) 5) $generated@@702)))))
(let (($generated@@705 true))
(let (($generated@@706  (=> (= $generated@@698 ($generated@@178 $generated@@696 $generated@@697 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@705) (=> (= (ControlFlow 0 7) 6) $generated@@704)))))
(let (($generated@@707  (=> (and ($generated@@246 $generated@@697) ($generated@@699 $generated@@697)) (=> (and (and ($generated@@151 $generated@@694 ($generated@@245 $generated@@700)) ($generated@@79 $generated@@694 ($generated@@245 $generated@@700) $generated@@697)) (and (= 0 $generated@@327) (= (ControlFlow 0 8) 7))) $generated@@706))))
$generated@@707))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 ((_ BitVec 11)) T@U)
(declare-fun $generated@@139 (T@U) (_ BitVec 11))
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 (T@U) Real)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@250 (Bool T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (Real) Real)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@313 (Real) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U Int) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Bool)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (and (forall (($generated@@140 (_ BitVec 11)) ) (! (= ($generated@@139 ($generated@@138 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@138 $generated@@140))
)) (= ($generated@@1 $generated@@137) 14)) (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@137) (= ($generated@@138 ($generated@@139 $generated@@141)) $generated@@141))
 :pattern ( ($generated@@139 $generated@@141))
))) (forall (($generated@@142 (_ BitVec 11)) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@137)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@137) (= (type $generated@@144) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@143 ($generated@@80 11) $generated@@144))
 :pattern ( ($generated@@79 $generated@@143 ($generated@@80 11) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (= ($generated@@1 $generated@@151) 15))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@151) (= (type $generated@@154) $generated@@151)) (and ($generated@@150 $generated@@153) ($generated@@150 $generated@@154))) (= ($generated@@149 $generated@@153 $generated@@154) (= ($generated@@152 $generated@@153) ($generated@@152 $generated@@154))))
 :pattern ( ($generated@@149 $generated@@153 $generated@@154) ($generated@@150 $generated@@153))
 :pattern ( ($generated@@149 $generated@@153 $generated@@154) ($generated@@150 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@80 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@80 0)))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@137) ($generated@@155 $generated@@157 ($generated@@80 11)))
 :pattern ( ($generated@@155 $generated@@157 ($generated@@80 11)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@69)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@69) (= (type $generated@@163) $generated@@69)) (= (type $generated@@164) $generated@@151)) ($generated@@155 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@155 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@151) (= (type $generated@@172) $generated@@151)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@73)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@151)))
(assert (= ($generated@@173 $generated@@174) $generated@@63))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@69)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@81 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@69)) ($generated@@155 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@155 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@82 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@72 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@82) (= (type $generated@@231) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@232) ($generated@@71 $generated@@4))) (= (type $generated@@234) $generated@@82)) (= (type $generated@@235) ($generated@@71 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@237 $generated@@239)) $generated@@69)
 :pattern ( ($generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@240) $generated@@69) (= (type $generated@@241) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@238 $generated@@241)) ($generated@@79 $generated@@174 ($generated@@237 $generated@@240) $generated@@241))
 :pattern ( ($generated@@79 $generated@@174 ($generated@@237 $generated@@240) $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@151)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@69) (= (type $generated@@247) $generated@@69)) (= (type $generated@@248) $generated@@168)) (= (type $generated@@249) $generated@@168)) (= ($generated@@155 ($generated@@242 $generated@@248 $generated@@249) ($generated@@159 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@155 ($generated@@242 $generated@@248 $generated@@249) ($generated@@159 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@251 Bool) ($generated@@252 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252)) $generated@@151)
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@69) (= (type $generated@@255) $generated@@168)) (= ($generated@@155 ($generated@@250 $generated@@254 $generated@@255) ($generated@@237 $generated@@253))  (and ($generated@@155 ($generated@@11 $generated@@254) $generated@@44) ($generated@@243 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@155 ($generated@@250 $generated@@254 $generated@@255) ($generated@@237 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@69) ($generated@@155 $generated@@174 ($generated@@237 $generated@@256)))
 :pattern ( ($generated@@155 $generated@@174 ($generated@@237 $generated@@256)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@151) (= (type $generated@@258) $generated@@151)) (= ($generated@@165 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@165 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@151) (= (type $generated@@260) $generated@@151)) (= ($generated@@149 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@149 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@69)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@81 $generated@@168 $generated@@4)) (= (type $generated@@264) $generated@@69)) (= ($generated@@155 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@168) ($generated@@0 ($generated@@86 $generated@@263 $generated@@265))) ($generated@@243 $generated@@265 $generated@@264))
 :pattern ( ($generated@@86 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@155 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@69)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@81 $generated@@168 $generated@@4)) (= (type $generated@@269) $generated@@69)) (= ($generated@@155 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@168) ($generated@@0 ($generated@@86 $generated@@268 $generated@@270))) ($generated@@243 $generated@@270 $generated@@269))
 :pattern ( ($generated@@86 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@155 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 Real) ) (! (= ($generated@@273 $generated@@274) $generated@@274)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@151) (= (type $generated@@281) $generated@@151)) (and ($generated@@279 $generated@@280) ($generated@@279 $generated@@281))) (= ($generated@@149 $generated@@280 $generated@@281) true))
 :pattern ( ($generated@@149 $generated@@280 $generated@@281) ($generated@@279 $generated@@280))
 :pattern ( ($generated@@149 $generated@@280 $generated@@281) ($generated@@279 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@168)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@151) (= (type $generated@@287) $generated@@151)) (and ($generated@@282 $generated@@286) ($generated@@282 $generated@@287))) (= ($generated@@149 $generated@@286 $generated@@287)  (and (= ($generated@@283 $generated@@286) ($generated@@283 $generated@@287)) (= ($generated@@284 $generated@@286) ($generated@@284 $generated@@287)))))
 :pattern ( ($generated@@149 $generated@@286 $generated@@287) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@149 $generated@@286 $generated@@287) ($generated@@282 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@69) (= (type $generated@@290) $generated@@69)) (= (type $generated@@291) $generated@@168)) (= (type $generated@@292) $generated@@168)) (= (type $generated@@293) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@238 $generated@@293)) (= ($generated@@79 ($generated@@242 $generated@@291 $generated@@292) ($generated@@159 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@79 ($generated@@242 $generated@@291 $generated@@292) ($generated@@159 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@151) (= ($generated@@158 $generated@@294) (= ($generated@@173 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@151) (= ($generated@@279 $generated@@295) (= ($generated@@173 $generated@@295) $generated@@63)))
 :pattern ( ($generated@@279 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@151) (= ($generated@@150 $generated@@296) (= ($generated@@173 $generated@@296) $generated@@65)))
 :pattern ( ($generated@@150 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@151) (= ($generated@@282 $generated@@297) (= ($generated@@173 $generated@@297) $generated@@66)))
 :pattern ( ($generated@@282 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@151) ($generated@@158 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@168) (= (type $generated@@300) $generated@@168)) (= $generated@@298 ($generated@@242 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@158 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@151) ($generated@@282 $generated@@301)) (exists (($generated@@302 Bool) ($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@168) (= $generated@@301 ($generated@@250 $generated@@302 $generated@@303)))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@282 $generated@@301))
)))
(assert  (and (and (forall (($generated@@308 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@308)) 18)) (forall (($generated@@309 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@306 $generated@@309))
))) (forall (($generated@@310 T@T) ) (! (= (type ($generated@@304 $generated@@310)) ($generated@@306 $generated@@310))
 :pattern ( ($generated@@304 $generated@@310))
))))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@311)) 0)
 :pattern ( ($generated@@304 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@151) ($generated@@279 $generated@@312)) (= $generated@@312 $generated@@174))
 :pattern ( ($generated@@279 $generated@@312))
)))
(assert (forall (($generated@@314 Real) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@151)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@151) ($generated@@150 $generated@@315)) (exists (($generated@@316 Real) ) (= $generated@@315 ($generated@@313 $generated@@316))))
 :pattern ( ($generated@@150 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@168)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@69) (= (type $generated@@321) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@288 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@79 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@288 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@323) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@324) $generated@@168)) (= (type $generated@@325) $generated@@69)) ($generated@@145 $generated@@322 $generated@@323)) ($generated@@288 $generated@@324 $generated@@325 $generated@@322)) ($generated@@288 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@145 $generated@@322 $generated@@323) ($generated@@288 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@327) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@329) $generated@@69)) ($generated@@145 $generated@@326 $generated@@327)) ($generated@@79 $generated@@328 $generated@@329 $generated@@326)) ($generated@@79 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@145 $generated@@326 $generated@@327) ($generated@@79 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@81 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@84 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@81 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@86 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@74)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@69) (and (= ($generated@@77 ($generated@@237 $generated@@338)) $generated@@64) (= ($generated@@336 ($generated@@237 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@237 $generated@@338))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@81 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@86 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@86 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 20)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@81 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@86 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@86 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@84 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@81 $generated@@376 $generated@@2)) (= ($generated@@177 $generated@@375) (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@376) (and (<= 0 ($generated ($generated@@86 $generated@@375 $generated@@377))) (<= ($generated ($generated@@86 $generated@@375 $generated@@377)) ($generated@@330 $generated@@375))))
 :pattern ( ($generated@@86 $generated@@375 $generated@@377))
)))))
 :pattern ( ($generated@@177 $generated@@375))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@343 (type $generated@@378))))
(let (($generated@@380 ($generated@@342 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@341 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@340 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@86 ($generated@@339 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@339 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@343 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@81 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@343 (type $generated@@385))))
(let (($generated@@387 ($generated@@342 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@341 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@340 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@86 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@361 (type $generated@@389))))
(let (($generated@@391 ($generated@@360 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@359 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@358 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@86 ($generated@@357 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@357 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@361 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@81 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@361 (type $generated@@396))))
(let (($generated@@398 ($generated@@360 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@359 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@358 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@86 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@400) $generated@@151) (= (type $generated@@401) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@238 $generated@@401) (and ($generated@@150 $generated@@400) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@69) ($generated@@79 $generated@@400 ($generated@@237 $generated@@402) $generated@@401))
 :pattern ( ($generated@@79 $generated@@400 ($generated@@237 $generated@@402) $generated@@401))
))))) ($generated@@79 ($generated@@9 ($generated@@152 $generated@@400)) $generated@@47 $generated@@401))
 :pattern ( ($generated@@79 ($generated@@9 ($generated@@152 $generated@@400)) $generated@@47 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@403) $generated@@151) (= (type $generated@@404) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@238 $generated@@404) (and ($generated@@282 $generated@@403) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@69) ($generated@@79 $generated@@403 ($generated@@237 $generated@@405) $generated@@404))
 :pattern ( ($generated@@79 $generated@@403 ($generated@@237 $generated@@405) $generated@@404))
))))) ($generated@@79 ($generated@@11 ($generated@@283 $generated@@403)) $generated@@44 $generated@@404))
 :pattern ( ($generated@@79 ($generated@@11 ($generated@@283 $generated@@403)) $generated@@44 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@81 $generated@@168 $generated@@2)) (= (type $generated@@407) $generated@@69)) (= ($generated@@155 $generated@@406 ($generated@@176 $generated@@407)) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@168) (< 0 ($generated ($generated@@86 $generated@@406 $generated@@408)))) ($generated@@243 $generated@@408 $generated@@407))
 :pattern ( ($generated@@86 $generated@@406 $generated@@408))
))))
 :pattern ( ($generated@@155 $generated@@406 ($generated@@176 $generated@@407)))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 Real) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@409) $generated@@69) (= (type $generated@@411) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@238 $generated@@411)) (= ($generated@@79 ($generated@@313 $generated@@410) ($generated@@237 $generated@@409) $generated@@411) ($generated@@79 ($generated@@9 $generated@@410) $generated@@47 $generated@@411)))
 :pattern ( ($generated@@79 ($generated@@313 $generated@@410) ($generated@@237 $generated@@409) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@81 $generated@@168 $generated@@4)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@412 ($generated@@261 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@168) ($generated@@0 ($generated@@86 $generated@@412 $generated@@415))) ($generated@@288 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@86 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@79 $generated@@412 ($generated@@261 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@81 $generated@@168 $generated@@4)) (= (type $generated@@417) $generated@@69)) (= (type $generated@@418) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@416 ($generated@@266 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@168) ($generated@@0 ($generated@@86 $generated@@416 $generated@@419))) ($generated@@288 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@86 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@79 $generated@@416 ($generated@@266 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@86 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@86 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@81 $generated@@168 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@343 (type $generated@@428))))
(let (($generated@@430 ($generated@@342 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@81 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@432) $generated@@168)) (= ($generated@@0 ($generated@@86 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@86 ($generated@@339 $generated@@431) ($generated@@166 ($generated@@423 $generated@@151 $generated@@432)))) (= ($generated@@86 ($generated@@424 $generated@@431) ($generated@@166 ($generated@@423 $generated@@151 $generated@@432))) ($generated@@167 ($generated@@423 $generated@@151 $generated@@432))))))
 :pattern ( ($generated@@86 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@81 $generated@@168 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@361 (type $generated@@436))))
(let (($generated@@438 ($generated@@360 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@81 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@359 $generated@@168 $generated@@168)) (= (type $generated@@440) $generated@@168)) (= ($generated@@0 ($generated@@86 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@86 ($generated@@357 $generated@@439) ($generated@@166 ($generated@@423 $generated@@151 $generated@@440)))) (= ($generated@@86 ($generated@@434 $generated@@439) ($generated@@166 ($generated@@423 $generated@@151 $generated@@440))) ($generated@@167 ($generated@@423 $generated@@151 $generated@@440))))))
 :pattern ( ($generated@@86 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@342 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@341 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@86 ($generated@@382 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@86 ($generated@@339 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@86 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@86 ($generated@@339 $generated@@441) $generated@@445))
 :pattern ( ($generated@@86 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@86 ($generated@@382 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@360 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@359 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@86 ($generated@@393 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@86 ($generated@@357 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@86 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@86 ($generated@@357 $generated@@446) $generated@@450))
 :pattern ( ($generated@@86 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@86 ($generated@@393 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@69)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@455) $generated@@69)) (= (type $generated@@456) $generated@@69)) (= (type $generated@@457) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@168) ($generated@@0 ($generated@@86 ($generated@@339 $generated@@454) $generated@@458))) (and ($generated@@288 ($generated@@86 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@288 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@86 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@86 ($generated@@339 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@79 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@69)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@359 $generated@@168 $generated@@168)) (= (type $generated@@463) $generated@@69)) (= (type $generated@@464) $generated@@69)) (= (type $generated@@465) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@168) ($generated@@0 ($generated@@86 ($generated@@357 $generated@@462) $generated@@466))) (and ($generated@@288 ($generated@@86 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@288 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@86 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@86 ($generated@@357 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@79 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 Bool) ($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@168) (= ($generated@@283 ($generated@@250 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@250 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@469) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@470) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@471) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@469 $generated@@471))) (and ($generated@@145 $generated@@469 $generated@@470) ($generated@@145 $generated@@470 $generated@@471))) ($generated@@145 $generated@@469 $generated@@471))
 :pattern ( ($generated@@145 $generated@@469 $generated@@470) ($generated@@145 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@81 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@361 (type $generated@@474))))
(let (($generated@@476 ($generated@@360 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@359 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@358 $generated@@476 $generated@@475)) (= ($generated@@357 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@357 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@361 (type $generated@@477))))
(let (($generated@@479 ($generated@@360 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@359 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@358 $generated@@479 $generated@@478)) (= ($generated@@393 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@393 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@361 (type $generated@@480))))
(let (($generated@@482 ($generated@@360 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@359 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@358 $generated@@482 $generated@@481)) (= ($generated@@433 $generated@@480) ($generated@@472 $generated@@168))))))
 :pattern ( ($generated@@433 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@343 (type $generated@@483))))
(let (($generated@@485 ($generated@@342 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@341 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@340 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@168) (= (type $generated@@487) $generated@@168)) ($generated@@0 ($generated@@86 ($generated@@422 $generated@@483) ($generated@@317 ($generated@@242 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@422 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@361 (type $generated@@488))))
(let (($generated@@490 ($generated@@360 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@359 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@358 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@168) (= (type $generated@@492) $generated@@168)) ($generated@@0 ($generated@@86 ($generated@@433 $generated@@488) ($generated@@317 ($generated@@242 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@433 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@168) ($generated@@243 $generated@@493 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@493)) $generated@@493) ($generated@@155 ($generated@@423 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@168) ($generated@@243 $generated@@494 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@494)) $generated@@494) ($generated@@155 ($generated@@423 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@168) ($generated@@243 $generated@@495 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@495)) $generated@@495) ($generated@@155 ($generated@@423 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@168) ($generated@@243 $generated@@497 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@496 $generated@@497)) $generated@@497) ($generated@@155 ($generated@@423 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@69) (= ($generated@@243 ($generated@@317 $generated@@498) $generated@@499) ($generated@@155 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@243 ($generated@@317 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@84 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@81 $generated@@501 $generated@@2)) (<= 0 ($generated@@330 $generated@@500))))
 :pattern ( ($generated@@330 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@307 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@306 $generated@@503)) (<= 0 ($generated@@305 $generated@@502))))
 :pattern ( ($generated@@305 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@69)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@69) (= (type $generated@@507) $generated@@69)) (= ($generated@@504 ($generated@@451 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@451 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@69)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@69) (= (type $generated@@511) $generated@@69)) (= ($generated@@508 ($generated@@451 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@451 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@69) (= (type $generated@@513) $generated@@69)) (= ($generated@@77 ($generated@@451 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@69) (= (type $generated@@517) $generated@@69)) (= ($generated@@514 ($generated@@459 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@459 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@69) (= (type $generated@@521) $generated@@69)) (= ($generated@@518 ($generated@@459 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@459 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@69) (= (type $generated@@523) $generated@@69)) (= ($generated@@77 ($generated@@459 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@168) (= (type $generated@@525) $generated@@168)) (= ($generated@@173 ($generated@@242 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@69) (= (type $generated@@529) $generated@@69)) (= ($generated@@526 ($generated@@159 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@159 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@69) (= (type $generated@@533) $generated@@69)) (= ($generated@@530 ($generated@@159 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@159 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@168) (= (type $generated@@535) $generated@@168)) (= ($generated@@166 ($generated@@242 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@242 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@168) (= (type $generated@@537) $generated@@168)) (= ($generated@@167 ($generated@@242 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@242 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 Bool) ($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@168) (= ($generated@@173 ($generated@@250 $generated@@538 $generated@@539)) $generated@@66))
 :pattern ( ($generated@@250 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 Bool) ($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@168) (= ($generated@@284 ($generated@@250 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@250 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@544)) $generated@@69)
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@545 T@U) ($generated@@546 Int) ) (! (let (($generated@@547 ($generated@@307 (type $generated@@545))))
(= (type ($generated@@543 $generated@@545 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@545 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@306 $generated@@168)) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@548 ($generated@@542 $generated@@549) $generated@@550) (forall (($generated@@551 Int) ) (!  (=> (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@305 $generated@@548))) ($generated@@288 ($generated@@543 $generated@@548 $generated@@551) $generated@@549 $generated@@550))
 :pattern ( ($generated@@543 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@79 $generated@@548 ($generated@@542 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@552 ($generated@@80 $generated@@553)) $generated@@553)
 :pattern ( ($generated@@80 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@69) (= ($generated@@554 ($generated@@261 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@261 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@69) (= ($generated@@77 ($generated@@261 $generated@@557)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@69)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@69) (= ($generated@@558 ($generated@@266 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@266 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@69) (= ($generated@@77 ($generated@@266 $generated@@561)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@69)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@69) (= ($generated@@562 ($generated@@176 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@176 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@69) (= ($generated@@77 ($generated@@176 $generated@@565)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@69)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@69) (= ($generated@@566 ($generated@@542 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@542 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@69) (= ($generated@@77 ($generated@@542 $generated@@569)) $generated@@57))
 :pattern ( ($generated@@542 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@69)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@69) (= ($generated@@570 ($generated@@237 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@237 $generated@@572))
)))
(assert (forall (($generated@@573 Real) ) (! (= ($generated@@173 ($generated@@313 $generated@@573)) $generated@@65)
 :pattern ( ($generated@@313 $generated@@573))
)))
(assert (forall (($generated@@574 Real) ) (! (= ($generated@@152 ($generated@@313 $generated@@574)) $generated@@574)
 :pattern ( ($generated@@313 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@578) $generated@@69)) (= (type $generated@@579) $generated@@69)) (= ($generated@@155 $generated@@577 ($generated@@451 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@168) ($generated@@0 ($generated@@86 ($generated@@339 $generated@@577) $generated@@580))) (and ($generated@@243 ($generated@@86 ($generated@@424 $generated@@577) $generated@@580) $generated@@579) ($generated@@243 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@86 ($generated@@424 $generated@@577) $generated@@580))
 :pattern ( ($generated@@86 ($generated@@339 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@155 $generated@@577 ($generated@@451 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@359 $generated@@168 $generated@@168)) (= (type $generated@@582) $generated@@69)) (= (type $generated@@583) $generated@@69)) (= ($generated@@155 $generated@@581 ($generated@@459 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@168) ($generated@@0 ($generated@@86 ($generated@@357 $generated@@581) $generated@@584))) (and ($generated@@243 ($generated@@86 ($generated@@434 $generated@@581) $generated@@584) $generated@@583) ($generated@@243 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@86 ($generated@@434 $generated@@581) $generated@@584))
 :pattern ( ($generated@@86 ($generated@@357 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@155 $generated@@581 ($generated@@459 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@151) ($generated@@585 $generated@@586)) (or (or ($generated@@279 $generated@@586) ($generated@@150 $generated@@586)) ($generated@@282 $generated@@586)))
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Real) ) (!  (=> (= (type $generated@@587) $generated@@69) (= ($generated@@155 ($generated@@313 $generated@@588) ($generated@@237 $generated@@587)) ($generated@@155 ($generated@@9 $generated@@588) $generated@@47)))
 :pattern ( ($generated@@155 ($generated@@313 $generated@@588) ($generated@@237 $generated@@587)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@168) (= (type $generated@@592) $generated@@168)) (< ($generated@@589 $generated@@591) ($generated@@590 ($generated@@242 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@242 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@168)) (< ($generated@@589 $generated@@594) ($generated@@590 ($generated@@242 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@242 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 Bool) ($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@168) (< ($generated@@589 $generated@@596) ($generated@@590 ($generated@@250 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@250 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) $generated@@69)) ($generated@@243 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@341 $generated@@168 $generated@@168) $generated@@597)) $generated@@597) ($generated@@155 ($generated@@423 ($generated@@341 $generated@@168 $generated@@168) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@243 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@168) (= (type $generated@@601) $generated@@69)) (= (type $generated@@602) $generated@@69)) ($generated@@243 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@359 $generated@@168 $generated@@168) $generated@@600)) $generated@@600) ($generated@@155 ($generated@@423 ($generated@@359 $generated@@168 $generated@@168) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@243 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@69) (= (type $generated@@604) $generated@@69)) (= (type $generated@@605) $generated@@168)) ($generated@@243 $generated@@605 ($generated@@159 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@151 $generated@@605)) $generated@@605) ($generated@@155 ($generated@@423 $generated@@151 $generated@@605) ($generated@@159 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@243 $generated@@605 ($generated@@159 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@69) (= (type $generated@@607) $generated@@151)) ($generated@@155 $generated@@607 ($generated@@237 $generated@@606))) (or (or ($generated@@279 $generated@@607) ($generated@@150 $generated@@607)) ($generated@@282 $generated@@607)))
 :pattern ( ($generated@@282 $generated@@607) ($generated@@155 $generated@@607 ($generated@@237 $generated@@606)))
 :pattern ( ($generated@@150 $generated@@607) ($generated@@155 $generated@@607 ($generated@@237 $generated@@606)))
 :pattern ( ($generated@@279 $generated@@607) ($generated@@155 $generated@@607 ($generated@@237 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@151) (= (type $generated@@609) $generated@@69)) (= (type $generated@@610) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@238 $generated@@610) (and ($generated@@282 $generated@@608) ($generated@@79 $generated@@608 ($generated@@237 $generated@@609) $generated@@610)))) ($generated@@288 ($generated@@284 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@288 ($generated@@284 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@86 ($generated@@472 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@86 ($generated@@472 $generated@@612) $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@69) (= (type $generated@@614) $generated@@69)) (and (= ($generated@@77 ($generated@@159 $generated@@613 $generated@@614)) $generated@@62) (= ($generated@@336 ($generated@@159 $generated@@613 $generated@@614)) $generated@@67)))
 :pattern ( ($generated@@159 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@151) (= ($generated@@589 ($generated@@317 $generated@@615)) ($generated@@590 $generated@@615)))
 :pattern ( ($generated@@589 ($generated@@317 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@168) ($generated@@243 $generated@@616 ($generated@@80 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@616)) $generated@@616) ($generated@@155 ($generated@@423 ($generated@@81 $generated@@168 $generated@@4) $generated@@616) ($generated@@80 0))))
 :pattern ( ($generated@@243 $generated@@616 ($generated@@80 0)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@168) (= (type $generated@@618) $generated@@69)) ($generated@@243 $generated@@617 ($generated@@261 $generated@@618))) (and (= ($generated@@317 ($generated@@423 ($generated@@81 $generated@@168 $generated@@4) $generated@@617)) $generated@@617) ($generated@@155 ($generated@@423 ($generated@@81 $generated@@168 $generated@@4) $generated@@617) ($generated@@261 $generated@@618))))
 :pattern ( ($generated@@243 $generated@@617 ($generated@@261 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@168) (= (type $generated@@620) $generated@@69)) ($generated@@243 $generated@@619 ($generated@@266 $generated@@620))) (and (= ($generated@@317 ($generated@@423 ($generated@@81 $generated@@168 $generated@@4) $generated@@619)) $generated@@619) ($generated@@155 ($generated@@423 ($generated@@81 $generated@@168 $generated@@4) $generated@@619) ($generated@@266 $generated@@620))))
 :pattern ( ($generated@@243 $generated@@619 ($generated@@266 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@168) (= (type $generated@@622) $generated@@69)) ($generated@@243 $generated@@621 ($generated@@176 $generated@@622))) (and (= ($generated@@317 ($generated@@423 ($generated@@81 $generated@@168 $generated@@2) $generated@@621)) $generated@@621) ($generated@@155 ($generated@@423 ($generated@@81 $generated@@168 $generated@@2) $generated@@621) ($generated@@176 $generated@@622))))
 :pattern ( ($generated@@243 $generated@@621 ($generated@@176 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@168) (= (type $generated@@624) $generated@@69)) ($generated@@243 $generated@@623 ($generated@@542 $generated@@624))) (and (= ($generated@@317 ($generated@@423 ($generated@@306 $generated@@168) $generated@@623)) $generated@@623) ($generated@@155 ($generated@@423 ($generated@@306 $generated@@168) $generated@@623) ($generated@@542 $generated@@624))))
 :pattern ( ($generated@@243 $generated@@623 ($generated@@542 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@69) (= (type $generated@@626) $generated@@168)) ($generated@@243 $generated@@626 ($generated@@237 $generated@@625))) (and (= ($generated@@317 ($generated@@423 $generated@@151 $generated@@626)) $generated@@626) ($generated@@155 ($generated@@423 $generated@@151 $generated@@626) ($generated@@237 $generated@@625))))
 :pattern ( ($generated@@243 $generated@@626 ($generated@@237 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@168) ($generated@@243 $generated@@627 ($generated@@80 11))) (and (= ($generated@@317 ($generated@@423 $generated@@137 $generated@@627)) $generated@@627) ($generated@@155 ($generated@@423 $generated@@137 $generated@@627) ($generated@@80 11))))
 :pattern ( ($generated@@243 $generated@@627 ($generated@@80 11)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@628) ($generated@@81 $generated@@168 $generated@@2)) (= (type $generated@@629) $generated@@69)) (= (type $generated@@630) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@628 ($generated@@176 $generated@@629) $generated@@630) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@168) (< 0 ($generated ($generated@@86 $generated@@628 $generated@@631)))) ($generated@@288 $generated@@631 $generated@@629 $generated@@630))
 :pattern ( ($generated@@86 $generated@@628 $generated@@631))
))))
 :pattern ( ($generated@@79 $generated@@628 ($generated@@176 $generated@@629) $generated@@630))
)))
(assert (= $generated@@174 ($generated@@275 $generated@@174)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@151) (= (type $generated@@633) $generated@@69)) (= (type $generated@@634) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@238 $generated@@634) (and ($generated@@158 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@69) ($generated@@79 $generated@@632 ($generated@@159 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@79 $generated@@632 ($generated@@159 $generated@@633 $generated@@635) $generated@@634))
))))) ($generated@@288 ($generated@@166 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@288 ($generated@@166 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@151) (= (type $generated@@637) $generated@@69)) (= (type $generated@@638) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@238 $generated@@638) (and ($generated@@158 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@69) ($generated@@79 $generated@@636 ($generated@@159 $generated@@639 $generated@@637) $generated@@638))
 :pattern ( ($generated@@79 $generated@@636 ($generated@@159 $generated@@639 $generated@@637) $generated@@638))
))))) ($generated@@288 ($generated@@167 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@288 ($generated@@167 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 Bool) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@69) (= (type $generated@@642) $generated@@168)) (= (type $generated@@643) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@238 $generated@@643)) (= ($generated@@79 ($generated@@250 $generated@@641 $generated@@642) ($generated@@237 $generated@@640) $generated@@643)  (and ($generated@@79 ($generated@@11 $generated@@641) $generated@@44 $generated@@643) ($generated@@288 $generated@@642 $generated@@640 $generated@@643))))
 :pattern ( ($generated@@79 ($generated@@250 $generated@@641 $generated@@642) ($generated@@237 $generated@@640) $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@168) (= (type $generated@@645) $generated@@168)) (= ($generated@@242 ($generated@@275 $generated@@644) ($generated@@275 $generated@@645)) ($generated@@275 ($generated@@242 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@242 ($generated@@275 $generated@@644) ($generated@@275 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@4) (= (type $generated@@647) $generated@@168)) (= ($generated@@250 ($generated@@0 ($generated@@275 $generated@@646)) ($generated@@275 $generated@@647)) ($generated@@275 ($generated@@250 ($generated@@0 $generated@@646) $generated@@647))))
 :pattern ( ($generated@@250 ($generated@@0 ($generated@@275 $generated@@646)) ($generated@@275 $generated@@647)))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@317 ($generated@@8 ($generated@@271 $generated@@648))) ($generated@@275 ($generated@@317 ($generated@@8 $generated@@648))))
 :pattern ( ($generated@@317 ($generated@@8 ($generated@@271 $generated@@648))))
)))
(assert (forall (($generated@@649 Real) ) (! (= ($generated@@317 ($generated@@9 ($generated@@273 $generated@@649))) ($generated@@275 ($generated@@317 ($generated@@9 $generated@@649))))
 :pattern ( ($generated@@317 ($generated@@9 ($generated@@273 $generated@@649))))
)))
(assert (forall (($generated@@650 Real) ) (! (= ($generated@@313 ($generated@@273 $generated@@650)) ($generated@@275 ($generated@@313 $generated@@650)))
 :pattern ( ($generated@@313 ($generated@@273 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (! (= ($generated@@317 ($generated@@275 $generated@@651)) ($generated@@275 ($generated@@317 $generated@@651)))
 :pattern ( ($generated@@317 ($generated@@275 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@307 (type $generated@@652))))
 (=> (and (= (type $generated@@652) ($generated@@306 $generated@@653)) (= ($generated@@305 $generated@@652) 0)) (= $generated@@652 ($generated@@304 $generated@@653))))
 :pattern ( ($generated@@305 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 (type $generated@@655)))
 (=> (and (and (= (type $generated@@654) ($generated@@81 $generated@@657 $generated@@2)) (= (type $generated@@656) $generated@@2)) (<= 0 ($generated $generated@@656))) (= ($generated@@330 ($generated@@87 $generated@@654 $generated@@655 $generated@@656)) (+ (- ($generated@@330 $generated@@654) ($generated ($generated@@86 $generated@@654 $generated@@655))) ($generated $generated@@656)))))
 :pattern ( ($generated@@330 ($generated@@87 $generated@@654 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@659) $generated@@2)) ($generated@@79 $generated@@659 $generated@@46 $generated@@658))
 :pattern ( ($generated@@79 $generated@@659 $generated@@46 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@661) $generated@@3)) ($generated@@79 $generated@@661 $generated@@47 $generated@@660))
 :pattern ( ($generated@@79 $generated@@661 $generated@@47 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@663) $generated@@4)) ($generated@@79 $generated@@663 $generated@@44 $generated@@662))
 :pattern ( ($generated@@79 $generated@@663 $generated@@44 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@665) $generated@@496)) ($generated@@79 $generated@@665 $generated@@45 $generated@@664))
 :pattern ( ($generated@@79 $generated@@665 $generated@@45 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@667) $generated@@168)) ($generated@@79 $generated@@667 $generated@@48 $generated@@666))
 :pattern ( ($generated@@79 $generated@@667 $generated@@48 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@306 $generated@@168)) (= (type $generated@@669) $generated@@69)) (= ($generated@@155 $generated@@668 ($generated@@542 $generated@@669)) (forall (($generated@@670 Int) ) (!  (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@305 $generated@@668))) ($generated@@243 ($generated@@543 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@543 $generated@@668 $generated@@670))
))))
 :pattern ( ($generated@@155 $generated@@668 ($generated@@542 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@306 $generated@@168)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@305 $generated@@672))) (< ($generated@@590 ($generated@@423 $generated@@151 ($generated@@543 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@590 ($generated@@423 $generated@@151 ($generated@@543 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@341 $generated@@168 $generated@@168)) (= (type $generated@@675) $generated@@69)) (= (type $generated@@676) $generated@@69)) ($generated@@155 $generated@@674 ($generated@@451 $generated@@675 $generated@@676))) (and (and ($generated@@155 ($generated@@339 $generated@@674) ($generated@@261 $generated@@675)) ($generated@@155 ($generated@@382 $generated@@674) ($generated@@261 $generated@@676))) ($generated@@155 ($generated@@422 $generated@@674) ($generated@@261 ($generated@@159 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@155 $generated@@674 ($generated@@451 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@359 $generated@@168 $generated@@168)) (= (type $generated@@678) $generated@@69)) (= (type $generated@@679) $generated@@69)) ($generated@@155 $generated@@677 ($generated@@459 $generated@@678 $generated@@679))) (and (and ($generated@@155 ($generated@@357 $generated@@677) ($generated@@266 $generated@@678)) ($generated@@155 ($generated@@393 $generated@@677) ($generated@@266 $generated@@679))) ($generated@@155 ($generated@@433 $generated@@677) ($generated@@266 ($generated@@159 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@155 $generated@@677 ($generated@@459 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@155 $generated@@680 $generated@@46))
 :pattern ( ($generated@@155 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@155 $generated@@681 $generated@@47))
 :pattern ( ($generated@@155 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@155 $generated@@682 $generated@@44))
 :pattern ( ($generated@@155 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@496) ($generated@@155 $generated@@683 $generated@@45))
 :pattern ( ($generated@@155 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@168) ($generated@@155 $generated@@684 $generated@@48))
 :pattern ( ($generated@@155 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Bool)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () Bool)
(declare-fun $generated@@693 () Bool)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () Bool)
(declare-fun $generated@@697 () Bool)
(declare-fun $generated@@698 () Real)
(declare-fun $generated@@699 () Real)
(declare-fun $generated@@700 () Real)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 (T@U) Bool)
(declare-fun $generated@@708 () Int)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () Int)
(declare-fun $generated@@713 () Int)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () Int)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@685) $generated@@151) (= (type $generated@@701) $generated@@151)) (= (type $generated@@688) $generated@@69)) (= (type $generated@@689) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@702) $generated@@151)) (= (type $generated@@687) $generated@@168)) (= (type $generated@@690) $generated@@168)) (= (type $generated@@691) $generated@@168)) (= (type $generated@@694) $generated@@151)) (= (type $generated@@695) $generated@@151)) (= (type $generated@@706) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@709) $generated@@82)) (= (type $generated@@710) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@716) ($generated@@183 $generated@@82 $generated@@4))) (= (type $generated@@717) $generated@@151)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@719 true))
(let (($generated@@720  (=> (= $generated@@685 ($generated@@250 $generated@@686 $generated@@687)) (=> (and ($generated@@243 $generated@@687 $generated@@688) ($generated@@288 $generated@@687 $generated@@688 $generated@@689)) (=> (and (and (and ($generated@@243 $generated@@690 $generated@@688) ($generated@@288 $generated@@690 $generated@@688 $generated@@689)) (and (= $generated@@691 $generated@@687) ($generated@@243 $generated@@691 $generated@@688))) (and (and (= $generated@@690 $generated@@691) (= $generated@@692 $generated@@686)) (and ($generated@@155 ($generated@@11 $generated@@692) $generated@@44) (= $generated@@693 $generated@@692)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@282 $generated@@685)) (=> ($generated@@282 $generated@@685) (=> (and (and (and (and ($generated@@155 $generated@@694 ($generated@@237 $generated@@688)) ($generated@@79 $generated@@694 ($generated@@237 $generated@@688) $generated@@689)) (= $generated@@695 $generated@@685)) (and ($generated@@155 $generated@@695 ($generated@@237 $generated@@688)) (= $generated@@694 $generated@@695))) (and (and (= $generated@@696  (not $generated@@693)) ($generated@@155 ($generated@@11 $generated@@696) $generated@@44)) (and (= $generated@@697 $generated@@696) (= (ControlFlow 0 7) (- 0 6))))) ($generated@@282 $generated@@694)))))))))
(let (($generated@@721  (=> (not (= $generated@@685 ($generated@@313 $generated@@698))) (and (=> (= (ControlFlow 0 10) 7) $generated@@720) (=> (= (ControlFlow 0 10) 9) $generated@@719)))))
(let (($generated@@722  (=> (and (and (= $generated@@685 ($generated@@313 $generated@@698)) (= $generated@@699 $generated@@698)) (and ($generated@@155 ($generated@@9 $generated@@699) $generated@@47) (= $generated@@700 $generated@@699))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@150 $generated@@685)) (=> ($generated@@150 $generated@@685) (=> (and ($generated@@155 $generated@@701 ($generated@@237 $generated@@688)) ($generated@@79 $generated@@701 ($generated@@237 $generated@@688) $generated@@689)) (=> (and (and (= $generated@@702 $generated@@685) ($generated@@155 $generated@@702 ($generated@@237 $generated@@688))) (and (= $generated@@701 $generated@@702) (= (ControlFlow 0 4) (- 0 3)))) ($generated@@150 $generated@@685))))))))
(let (($generated@@723  (=> (not (= $generated@@685 $generated@@174)) (and (=> (= (ControlFlow 0 11) 4) $generated@@722) (=> (= (ControlFlow 0 11) 10) $generated@@721)))))
(let (($generated@@724  (=> (and (= $generated@@685 $generated@@174) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@703 $generated@@704))))
(let (($generated@@725  (=> (= $generated@@705 ($generated@@271 3)) (=> (and (and (and (and ($generated@@238 $generated@@706) ($generated@@707 $generated@@706)) (= $generated@@708 ($generated@@271 0))) (and (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@82) (=> (and (not (= $generated@@726 $generated@@709)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@710 $generated@@726) $generated@@60))) (= ($generated@@86 $generated@@706 $generated@@726) ($generated@@86 $generated@@710 $generated@@726))))
 :pattern ( ($generated@@86 $generated@@706 $generated@@726))
)) ($generated@@145 $generated@@710 $generated@@706))) (and (and (and (= $generated@@711 (+ $generated@@712 $generated@@708)) (= $generated@@713 ($generated@@271 3))) (and ($generated@@238 $generated@@689) ($generated@@707 $generated@@689))) (and (and (= $generated@@714 ($generated@@271 0)) (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@82) (=> (and (not (= $generated@@727 $generated@@709)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@706 $generated@@727) $generated@@60))) (= ($generated@@86 $generated@@689 $generated@@727) ($generated@@86 $generated@@706 $generated@@727))))
 :pattern ( ($generated@@86 $generated@@689 $generated@@727))
))) (and ($generated@@145 $generated@@706 $generated@@689) (= $generated@@703 (+ $generated@@711 $generated@@714)))))) (and (=> (= (ControlFlow 0 12) 2) $generated@@724) (=> (= (ControlFlow 0 12) 11) $generated@@723))))))
(let (($generated@@728  (=> (and (and (not ($generated@@149 $generated@@685 $generated@@174)) (= $generated@@715 ($generated@@271 9))) (and (= $generated@@712 $generated@@715) (= (ControlFlow 0 14) 12))) $generated@@725)))
(let (($generated@@729  (=> ($generated@@149 $generated@@685 $generated@@174) (=> (and (= $generated@@712 $generated@@704) (= (ControlFlow 0 13) 12)) $generated@@725))))
(let (($generated@@730  (=> (and (= $generated@@716 ($generated@@182 $generated@@709 $generated@@710 $generated@@60 false)) ($generated@@585 $generated@@685)) (and (=> (= (ControlFlow 0 15) 13) $generated@@729) (=> (= (ControlFlow 0 15) 14) $generated@@728)))))
(let (($generated@@731  (=> (and (and (and ($generated@@238 $generated@@710) ($generated@@707 $generated@@710)) (and ($generated@@155 $generated@@685 ($generated@@237 $generated@@688)) ($generated@@79 $generated@@685 ($generated@@237 $generated@@688) $generated@@710))) (and (and ($generated@@155 $generated@@717 ($generated@@237 $generated@@688)) ($generated@@79 $generated@@717 ($generated@@237 $generated@@688) $generated@@710)) (and (= 1 $generated@@718) (= (ControlFlow 0 16) 15)))) $generated@@730)))
$generated@@731))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 ((_ BitVec 11)) T@U)
(declare-fun $generated@@136 (T@U) (_ BitVec 11))
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (Int) Int)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@593 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (forall (($generated@@137 (_ BitVec 11)) ) (! (= ($generated@@136 ($generated@@135 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@135 $generated@@137))
)) (= ($generated@@1 $generated@@134) 14)) (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@134) (= ($generated@@135 ($generated@@136 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@136 $generated@@138))
))) (forall (($generated@@139 (_ BitVec 11)) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@134)
 :pattern ( ($generated@@135 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@140 ($generated@@77 11) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140 ($generated@@77 11) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@142 $generated@@143 $generated@@144)) (forall (($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@143 $generated@@145) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@144 $generated@@145) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@144 $generated@@145) $generated@@60))
)))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@77 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@77 0)))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@134) ($generated@@146 $generated@@148 ($generated@@77 11)))
 :pattern ( ($generated@@146 $generated@@148 ($generated@@77 11)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@66) (= (type $generated@@155) $generated@@66)) (= (type $generated@@156) $generated@@151)) ($generated@@146 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@146 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 16) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@66)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@78 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@66)) ($generated@@146 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@146 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 17)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@79 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@69 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@79) (= (type $generated@@220) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@221) ($generated@@68 $generated@@4))) (= (type $generated@@223) $generated@@79)) (= (type $generated@@224) ($generated@@68 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@151)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@66) (= (type $generated@@231) $generated@@66)) (= (type $generated@@232) $generated@@160)) (= (type $generated@@233) $generated@@160)) (= ($generated@@146 ($generated@@226 $generated@@232 $generated@@233) ($generated@@150 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@146 ($generated@@226 $generated@@232 $generated@@233) ($generated@@150 $generated@@230 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@151) (= (type $generated@@235) $generated@@151)) (= ($generated@@157 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@157 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@66)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@78 $generated@@160 $generated@@4)) (= (type $generated@@239) $generated@@66)) (= ($generated@@146 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@160) ($generated@@0 ($generated@@83 $generated@@238 $generated@@240))) ($generated@@227 $generated@@240 $generated@@239))
 :pattern ( ($generated@@83 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@146 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@66)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@78 $generated@@160 $generated@@4)) (= (type $generated@@244) $generated@@66)) (= ($generated@@146 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@160) ($generated@@0 ($generated@@83 $generated@@243 $generated@@245))) ($generated@@227 $generated@@245 $generated@@244))
 :pattern ( ($generated@@83 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@146 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 Int) ) (! (= ($generated@@246 $generated@@247) $generated@@247)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@66) (= (type $generated@@255) $generated@@66)) (= (type $generated@@256) $generated@@160)) (= (type $generated@@257) $generated@@160)) (= (type $generated@@258) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@252 $generated@@258)) (= ($generated@@76 ($generated@@226 $generated@@256 $generated@@257) ($generated@@150 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@256 $generated@@257) ($generated@@150 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@151) (= ($generated@@149 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@149 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@151) ($generated@@149 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@160) (= (type $generated@@264) $generated@@160)) (= $generated@@262 ($generated@@226 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@149 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 18)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@160)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@66) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@76 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@279) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@160)) (= (type $generated@@281) $generated@@66)) ($generated@@142 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@142 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@283) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@285) $generated@@66)) ($generated@@142 $generated@@282 $generated@@283)) ($generated@@76 $generated@@284 $generated@@285 $generated@@282)) ($generated@@76 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@142 $generated@@282 $generated@@283) ($generated@@76 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@78 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@81 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@78 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@83 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (forall (($generated@@294 T@U) ) (! (= (type ($generated@@292 $generated@@294)) $generated@@66)
 :pattern ( ($generated@@292 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (= (type ($generated@@293 $generated@@295)) $generated@@71)
 :pattern ( ($generated@@293 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@66) (and (= ($generated@@74 ($generated@@292 $generated@@296)) $generated@@63) (= ($generated@@293 ($generated@@292 $generated@@296)) $generated@@65)))
 :pattern ( ($generated@@292 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@78 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@81 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@78 $generated@@334 $generated@@2)) (= ($generated@@166 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@83 $generated@@333 $generated@@335))) (<= ($generated ($generated@@83 $generated@@333 $generated@@335)) ($generated@@286 $generated@@333))))
 :pattern ( ($generated@@83 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@166 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@78 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@83 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@78 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@83 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@78 $generated@@160 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@146 $generated@@358 ($generated@@165 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@160) (< 0 ($generated ($generated@@83 $generated@@358 $generated@@360)))) ($generated@@227 $generated@@360 $generated@@359))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@146 $generated@@358 ($generated@@165 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@160 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@236 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@160) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@253 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@236 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@160 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@241 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@160) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@253 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@241 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@83 ($generated@@287 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@83 ($generated@@287 $generated@@370) $generated@@369)))
)))
(assert  (and (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@371 $generated@@374)) ($generated@@78 $generated@@160 $generated@@4))
 :pattern ( ($generated@@371 $generated@@374))
)) (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@372 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@301 (type $generated@@377))))
(let (($generated@@379 ($generated@@300 (type $generated@@377))))
(= (type ($generated@@373 $generated@@377)) ($generated@@78 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@373 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@299 $generated@@160 $generated@@160)) (= (type $generated@@381) $generated@@160)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@380) ($generated@@158 ($generated@@372 $generated@@151 $generated@@381)))) (= ($generated@@83 ($generated@@373 $generated@@380) ($generated@@158 ($generated@@372 $generated@@151 $generated@@381))) ($generated@@159 ($generated@@372 $generated@@151 $generated@@381))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@78 $generated@@160 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@319 (type $generated@@385))))
(let (($generated@@387 ($generated@@318 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@317 $generated@@160 $generated@@160)) (= (type $generated@@389) $generated@@160)) (= ($generated@@0 ($generated@@83 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@388) ($generated@@158 ($generated@@372 $generated@@151 $generated@@389)))) (= ($generated@@83 ($generated@@383 $generated@@388) ($generated@@158 ($generated@@372 $generated@@151 $generated@@389))) ($generated@@159 ($generated@@372 $generated@@151 $generated@@389))))))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@300 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@299 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@83 ($generated@@340 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@83 ($generated@@373 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@390) $generated@@394))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@83 ($generated@@340 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@318 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@317 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@83 ($generated@@351 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@83 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@395) $generated@@399))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@83 ($generated@@351 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@66)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@299 $generated@@160 $generated@@160)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@160) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@403) $generated@@407))) (and ($generated@@253 ($generated@@83 ($generated@@373 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@253 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@403) $generated@@407))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@76 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@66)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@317 $generated@@160 $generated@@160)) (= (type $generated@@412) $generated@@66)) (= (type $generated@@413) $generated@@66)) (= (type $generated@@414) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@160) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@411) $generated@@415))) (and ($generated@@253 ($generated@@83 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@253 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@76 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@417) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@418) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@416 $generated@@418))) (and ($generated@@142 $generated@@416 $generated@@417) ($generated@@142 $generated@@417 $generated@@418))) ($generated@@142 $generated@@416 $generated@@418))
 :pattern ( ($generated@@142 $generated@@416 $generated@@417) ($generated@@142 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@78 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@319 (type $generated@@421))))
(let (($generated@@423 ($generated@@318 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@317 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@316 $generated@@423 $generated@@422)) (= ($generated@@315 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@315 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@351 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@351 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@319 (type $generated@@427))))
(let (($generated@@429 ($generated@@318 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@317 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@316 $generated@@429 $generated@@428)) (= ($generated@@382 $generated@@427) ($generated@@419 $generated@@160))))))
 :pattern ( ($generated@@382 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@301 (type $generated@@430))))
(let (($generated@@432 ($generated@@300 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@299 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@298 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@160) (= (type $generated@@434) $generated@@160)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@430) ($generated@@273 ($generated@@226 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@371 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@319 (type $generated@@435))))
(let (($generated@@437 ($generated@@318 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@317 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@316 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@160) (= (type $generated@@439) $generated@@160)) ($generated@@0 ($generated@@83 ($generated@@382 $generated@@435) ($generated@@273 ($generated@@226 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@160) ($generated@@227 $generated@@440 $generated@@46)) (and (= ($generated@@273 ($generated@@372 $generated@@2 $generated@@440)) $generated@@440) ($generated@@146 ($generated@@372 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@160) ($generated@@227 $generated@@441 $generated@@47)) (and (= ($generated@@273 ($generated@@372 $generated@@3 $generated@@441)) $generated@@441) ($generated@@146 ($generated@@372 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@160) ($generated@@227 $generated@@442 $generated@@44)) (and (= ($generated@@273 ($generated@@372 $generated@@4 $generated@@442)) $generated@@442) ($generated@@146 ($generated@@372 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 21))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@160) ($generated@@227 $generated@@444 $generated@@45)) (and (= ($generated@@273 ($generated@@372 $generated@@443 $generated@@444)) $generated@@444) ($generated@@146 ($generated@@372 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@66) (= ($generated@@227 ($generated@@273 $generated@@445) $generated@@446) ($generated@@146 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@227 ($generated@@273 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@81 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@78 $generated@@448 $generated@@2)) (<= 0 ($generated@@286 $generated@@447))))
 :pattern ( ($generated@@286 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@268 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@267 $generated@@450)) (<= 0 ($generated@@266 $generated@@449))))
 :pattern ( ($generated@@266 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@400 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@400 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@400 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@400 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@408 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@408 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@408 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@74 ($generated@@408 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@160) (= (type $generated@@472) $generated@@160)) (= ($generated@@259 ($generated@@226 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@226 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@150 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@150 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@150 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@150 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@160) (= (type $generated@@482) $generated@@160)) (= ($generated@@158 ($generated@@226 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@226 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@160) (= (type $generated@@484) $generated@@160)) (= ($generated@@159 ($generated@@226 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@226 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@268 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@267 $generated@@160)) (= (type $generated@@492) $generated@@66)) (= (type $generated@@493) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@266 $generated@@491))) ($generated@@253 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@76 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@77 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@77 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@236 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@236 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@236 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@241 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@241 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@241 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@165 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@165 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@165 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@292 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@292 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@372 $generated@@517 ($generated@@273 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@273 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@160 $generated@@160)) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) $generated@@66)) (= ($generated@@146 $generated@@518 ($generated@@400 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@160) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@518) $generated@@521))) (and ($generated@@227 ($generated@@83 ($generated@@373 $generated@@518) $generated@@521) $generated@@520) ($generated@@227 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@518) $generated@@521))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@146 $generated@@518 ($generated@@400 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@317 $generated@@160 $generated@@160)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) (= ($generated@@146 $generated@@522 ($generated@@408 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@160) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@522) $generated@@525))) (and ($generated@@227 ($generated@@83 ($generated@@383 $generated@@522) $generated@@525) $generated@@524) ($generated@@227 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@522) $generated@@525))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@146 $generated@@522 ($generated@@408 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@160) (= (type $generated@@529) $generated@@160)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@226 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@226 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@160) (= (type $generated@@531) $generated@@160)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@226 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@160) (= (type $generated@@533) $generated@@66)) (= (type $generated@@534) $generated@@66)) ($generated@@227 $generated@@532 ($generated@@400 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@372 ($generated@@299 $generated@@160 $generated@@160) $generated@@532)) $generated@@532) ($generated@@146 ($generated@@372 ($generated@@299 $generated@@160 $generated@@160) $generated@@532) ($generated@@400 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@227 $generated@@532 ($generated@@400 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@160) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) ($generated@@227 $generated@@535 ($generated@@408 $generated@@536 $generated@@537))) (and (= ($generated@@273 ($generated@@372 ($generated@@317 $generated@@160 $generated@@160) $generated@@535)) $generated@@535) ($generated@@146 ($generated@@372 ($generated@@317 $generated@@160 $generated@@160) $generated@@535) ($generated@@408 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@227 $generated@@535 ($generated@@408 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@160)) ($generated@@227 $generated@@540 ($generated@@150 $generated@@538 $generated@@539))) (and (= ($generated@@273 ($generated@@372 $generated@@151 $generated@@540)) $generated@@540) ($generated@@146 ($generated@@372 $generated@@151 $generated@@540) ($generated@@150 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@227 $generated@@540 ($generated@@150 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@83 ($generated@@419 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@83 ($generated@@419 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (and (= ($generated@@74 ($generated@@150 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@293 ($generated@@150 $generated@@543 $generated@@544)) $generated@@64)))
 :pattern ( ($generated@@150 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@151) (= ($generated@@526 ($generated@@273 $generated@@545)) ($generated@@527 $generated@@545)))
 :pattern ( ($generated@@526 ($generated@@273 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@160) ($generated@@227 $generated@@546 ($generated@@77 0))) (and (= ($generated@@273 ($generated@@372 $generated@@2 $generated@@546)) $generated@@546) ($generated@@146 ($generated@@372 ($generated@@78 $generated@@160 $generated@@4) $generated@@546) ($generated@@77 0))))
 :pattern ( ($generated@@227 $generated@@546 ($generated@@77 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@160) (= (type $generated@@548) $generated@@66)) ($generated@@227 $generated@@547 ($generated@@236 $generated@@548))) (and (= ($generated@@273 ($generated@@372 ($generated@@78 $generated@@160 $generated@@4) $generated@@547)) $generated@@547) ($generated@@146 ($generated@@372 ($generated@@78 $generated@@160 $generated@@4) $generated@@547) ($generated@@236 $generated@@548))))
 :pattern ( ($generated@@227 $generated@@547 ($generated@@236 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@160) (= (type $generated@@550) $generated@@66)) ($generated@@227 $generated@@549 ($generated@@241 $generated@@550))) (and (= ($generated@@273 ($generated@@372 ($generated@@78 $generated@@160 $generated@@4) $generated@@549)) $generated@@549) ($generated@@146 ($generated@@372 ($generated@@78 $generated@@160 $generated@@4) $generated@@549) ($generated@@241 $generated@@550))))
 :pattern ( ($generated@@227 $generated@@549 ($generated@@241 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@160) (= (type $generated@@552) $generated@@66)) ($generated@@227 $generated@@551 ($generated@@165 $generated@@552))) (and (= ($generated@@273 ($generated@@372 ($generated@@78 $generated@@160 $generated@@2) $generated@@551)) $generated@@551) ($generated@@146 ($generated@@372 ($generated@@78 $generated@@160 $generated@@2) $generated@@551) ($generated@@165 $generated@@552))))
 :pattern ( ($generated@@227 $generated@@551 ($generated@@165 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@160) (= (type $generated@@554) $generated@@66)) ($generated@@227 $generated@@553 ($generated@@485 $generated@@554))) (and (= ($generated@@273 ($generated@@372 ($generated@@267 $generated@@160) $generated@@553)) $generated@@553) ($generated@@146 ($generated@@372 ($generated@@267 $generated@@160) $generated@@553) ($generated@@485 $generated@@554))))
 :pattern ( ($generated@@227 $generated@@553 ($generated@@485 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@66) (= (type $generated@@556) $generated@@160)) ($generated@@227 $generated@@556 ($generated@@292 $generated@@555))) (and (= ($generated@@273 ($generated@@372 $generated@@151 $generated@@556)) $generated@@556) ($generated@@146 ($generated@@372 $generated@@151 $generated@@556) ($generated@@292 $generated@@555))))
 :pattern ( ($generated@@227 $generated@@556 ($generated@@292 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@160) ($generated@@227 $generated@@557 ($generated@@77 11))) (and (= ($generated@@273 ($generated@@372 $generated@@134 $generated@@557)) $generated@@557) ($generated@@146 ($generated@@372 $generated@@134 $generated@@557) ($generated@@77 11))))
 :pattern ( ($generated@@227 $generated@@557 ($generated@@77 11)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@78 $generated@@160 $generated@@2)) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@558 ($generated@@165 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@160) (< 0 ($generated ($generated@@83 $generated@@558 $generated@@561)))) ($generated@@253 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@83 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@76 $generated@@558 ($generated@@165 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@151) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@252 $generated@@564) (and ($generated@@149 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@66) ($generated@@76 $generated@@562 ($generated@@150 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@76 $generated@@562 ($generated@@150 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@253 ($generated@@158 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@253 ($generated@@158 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@151) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@252 $generated@@568) (and ($generated@@149 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@66) ($generated@@76 $generated@@566 ($generated@@150 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@76 $generated@@566 ($generated@@150 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@253 ($generated@@159 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@253 ($generated@@159 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@160) (= (type $generated@@571) $generated@@160)) (= ($generated@@226 ($generated@@248 $generated@@570) ($generated@@248 $generated@@571)) ($generated@@248 ($generated@@226 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@226 ($generated@@248 $generated@@570) ($generated@@248 $generated@@571)))
)))
(assert (forall (($generated@@572 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@246 $generated@@572))) ($generated@@248 ($generated@@273 ($generated@@8 $generated@@572))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@246 $generated@@572))))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@573)) ($generated@@248 ($generated@@273 $generated@@573)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@268 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@267 $generated@@575)) (= ($generated@@266 $generated@@574) 0)) (= $generated@@574 ($generated@@265 $generated@@575))))
 :pattern ( ($generated@@266 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@78 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@286 ($generated@@84 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@286 $generated@@576) ($generated ($generated@@83 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@286 ($generated@@84 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@2)) ($generated@@76 $generated@@581 $generated@@46 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@46 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@3)) ($generated@@76 $generated@@583 $generated@@47 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@47 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@4)) ($generated@@76 $generated@@585 $generated@@44 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@44 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@443)) ($generated@@76 $generated@@587 $generated@@45 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@45 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@160)) ($generated@@76 $generated@@589 $generated@@48 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@48 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@267 $generated@@160)) (= (type $generated@@591) $generated@@66)) (= ($generated@@146 $generated@@590 ($generated@@485 $generated@@591)) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@266 $generated@@590))) ($generated@@227 ($generated@@486 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@486 $generated@@590 $generated@@592))
))))
 :pattern ( ($generated@@146 $generated@@590 ($generated@@485 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) ($generated@@267 $generated@@160)) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@266 $generated@@594))) (< ($generated@@527 ($generated@@372 $generated@@151 ($generated@@486 $generated@@594 $generated@@595))) ($generated@@593 $generated@@594))))
 :pattern ( ($generated@@527 ($generated@@372 $generated@@151 ($generated@@486 $generated@@594 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@299 $generated@@160 $generated@@160)) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) $generated@@66)) ($generated@@146 $generated@@596 ($generated@@400 $generated@@597 $generated@@598))) (and (and ($generated@@146 ($generated@@297 $generated@@596) ($generated@@236 $generated@@597)) ($generated@@146 ($generated@@340 $generated@@596) ($generated@@236 $generated@@598))) ($generated@@146 ($generated@@371 $generated@@596) ($generated@@236 ($generated@@150 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@146 $generated@@596 ($generated@@400 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@317 $generated@@160 $generated@@160)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) ($generated@@146 $generated@@599 ($generated@@408 $generated@@600 $generated@@601))) (and (and ($generated@@146 ($generated@@315 $generated@@599) ($generated@@241 $generated@@600)) ($generated@@146 ($generated@@351 $generated@@599) ($generated@@241 $generated@@601))) ($generated@@146 ($generated@@382 $generated@@599) ($generated@@241 ($generated@@150 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@146 $generated@@599 ($generated@@408 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) ($generated@@146 $generated@@602 $generated@@46))
 :pattern ( ($generated@@146 $generated@@602 $generated@@46))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@3) ($generated@@146 $generated@@603 $generated@@47))
 :pattern ( ($generated@@146 $generated@@603 $generated@@47))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@4) ($generated@@146 $generated@@604 $generated@@44))
 :pattern ( ($generated@@146 $generated@@604 $generated@@44))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@443) ($generated@@146 $generated@@605 $generated@@45))
 :pattern ( ($generated@@146 $generated@@605 $generated@@45))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@160) ($generated@@146 $generated@@606 $generated@@48))
 :pattern ( ($generated@@146 $generated@@606 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(assert  (and (and (and (and (and (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@613) $generated@@79)) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@616) ($generated@@172 $generated@@79 $generated@@4))) (= (type $generated@@617) $generated@@151)) (= (type $generated@@618) $generated@@66)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@620  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@607 ($generated@@246 0)))))
(let (($generated@@621  (=> (and (not (= $generated@@608 ($generated@@246 0))) (= $generated@@609 ($generated@@246 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (= $generated@@609 0) (not (= $generated@@608 0)))) (=> (and (= $generated@@609 0) (not (= $generated@@608 0))) (=> (and (and (and ($generated@@252 $generated@@610) ($generated@@611 $generated@@610)) (= $generated@@612 ($generated@@246 0))) (and (and (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@79) (=> (and (not (= $generated@@622 $generated@@613)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@614 $generated@@622) $generated@@60))) (= ($generated@@83 $generated@@610 $generated@@622) ($generated@@83 $generated@@614 $generated@@622))))
 :pattern ( ($generated@@83 $generated@@610 $generated@@622))
)) ($generated@@142 $generated@@614 $generated@@610)) (and (= $generated@@607 $generated@@612) (= (ControlFlow 0 4) 2)))) $generated@@620))))))
(let (($generated@@623  (=> (and (and (= $generated@@608 ($generated@@246 0)) (= $generated@@615 ($generated@@246 0))) (and (= $generated@@607 $generated@@615) (= (ControlFlow 0 3) 2))) $generated@@620)))
(let (($generated@@624  (=> (= $generated@@616 ($generated@@171 $generated@@613 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@623) (=> (= (ControlFlow 0 6) 4) $generated@@621)))))
(let (($generated@@625  (=> (and ($generated@@252 $generated@@614) ($generated@@611 $generated@@614)) (=> (and (and ($generated@@146 $generated@@617 ($generated@@292 $generated@@618)) ($generated@@76 $generated@@617 ($generated@@292 $generated@@618) $generated@@614)) (and (= 0 $generated@@619) (= (ControlFlow 0 7) 6))) $generated@@624))))
$generated@@625))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(assert  (and (and (and (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@188) $generated@@46)) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@191) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@193  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@181 ($generated@@162 0)))))
(let (($generated@@194  (=> (and (not (= $generated@@182 ($generated@@162 0))) (= $generated@@183 ($generated@@162 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (= $generated@@183 0) (not (= $generated@@182 0)))) (=> (and (= $generated@@183 0) (not (= $generated@@182 0))) (=> (and (and (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (= $generated@@187 ($generated@@162 0))) (and (and (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@46) (=> (and (not (= $generated@@195 $generated@@188)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@195) $generated@@50))) (= ($generated@@49 $generated@@185 $generated@@195) ($generated@@49 $generated@@189 $generated@@195))))
 :pattern ( ($generated@@49 $generated@@185 $generated@@195))
)) ($generated@@44 $generated@@189 $generated@@185)) (and (= $generated@@181 $generated@@187) (= (ControlFlow 0 4) 2)))) $generated@@193))))))
(let (($generated@@196  (=> (and (and (= $generated@@182 ($generated@@162 0)) (= $generated@@190 ($generated@@162 0))) (and (= $generated@@181 $generated@@190) (= (ControlFlow 0 3) 2))) $generated@@193)))
(let (($generated@@197  (=> (= $generated@@191 ($generated@@107 $generated@@188 $generated@@189 $generated@@50 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@196) (=> (= (ControlFlow 0 6) 4) $generated@@194)))))
(let (($generated@@198  (=> (and (and ($generated@@184 $generated@@189) ($generated@@186 $generated@@189)) (and (= 0 $generated@@192) (= (ControlFlow 0 7) 6))) $generated@@197)))
$generated@@198))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 ((_ BitVec 11)) T@U)
(declare-fun $generated@@138 (T@U) (_ BitVec 11))
(declare-fun $generated@@144 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (Int) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@198 (T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@200 (T@T T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (Int) Int)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@U) Bool)
(declare-fun $generated@@307 (T@U) Bool)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@383 (T@U) Bool)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@415 (T@U) Bool)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@T T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@558 (T@U Int) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(declare-fun $generated@@603 (T@U) Int)
(declare-fun $generated@@706 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (forall (($generated@@139 (_ BitVec 11)) ) (! (= ($generated@@138 ($generated@@137 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@137 $generated@@139))
)) (= ($generated@@1 $generated@@136) 14)) (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@136) (= ($generated@@137 ($generated@@138 $generated@@140)) $generated@@140))
 :pattern ( ($generated@@138 $generated@@140))
))) (forall (($generated@@141 (_ BitVec 11)) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@137 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (= (type $generated@@143) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@142 ($generated@@79 11) $generated@@143))
 :pattern ( ($generated@@78 $generated@@142 ($generated@@79 11) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@146) 15) (= ($generated@@1 $generated@@147) 16)) (= ($generated@@1 $generated@@148) 17)) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@145 $generated@@150)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@150))
))) (forall (($generated@@151 Int) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@146)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@152) $generated@@68) (= (type $generated@@153) $generated@@68)) (= (type $generated@@154) $generated@@146)) (= (type $generated@@155) $generated@@147)) (= (type $generated@@156) $generated@@148)) (= (type $generated@@157) $generated@@148)) (not (= $generated@@154 ($generated@@149 0)))) (= ($generated@@144 $generated@@152 $generated@@153 $generated@@154 ($generated@@145 $generated@@155) $generated@@156 $generated@@157) ($generated@@144 $generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@144 $generated@@152 $generated@@153 $generated@@154 ($generated@@145 $generated@@155) $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@160) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@158 $generated@@159 $generated@@160)) (forall (($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@159 $generated@@161) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60))
)))
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@146) (= (type $generated@@164) $generated@@146)) (= (type $generated@@165) $generated@@146)) (and ($generated@@162 $generated@@163 $generated@@164) ($generated@@162 $generated@@164 $generated@@165))) ($generated@@162 $generated@@163 $generated@@165))
 :pattern ( ($generated@@162 $generated@@163 $generated@@164) ($generated@@162 $generated@@164 $generated@@165))
 :pattern ( ($generated@@162 $generated@@163 $generated@@164) ($generated@@162 $generated@@163 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@166 $generated@@167 ($generated@@79 0)))
 :pattern ( ($generated@@166 $generated@@167 ($generated@@79 0)))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@136) ($generated@@166 $generated@@168 ($generated@@79 11)))
 :pattern ( ($generated@@166 $generated@@168 ($generated@@79 11)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@146)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 Int) ($generated@@175 Int) ) (!  (=> (= (type $generated@@173) $generated@@146) (=> (and (and (<= 0 $generated@@174) (<= 0 $generated@@175)) (<= (+ $generated@@174 $generated@@175) ($generated@@170 $generated@@173))) (= ($generated@@169 ($generated@@169 $generated@@173 ($generated@@149 $generated@@174)) ($generated@@149 $generated@@175)) ($generated@@169 $generated@@173 ($generated@@149 (+ $generated@@174 $generated@@175))))))
 :pattern ( ($generated@@169 ($generated@@169 $generated@@173 ($generated@@149 $generated@@174)) ($generated@@149 $generated@@175)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@178 $generated@@179)) $generated@@68)
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@68) (= (type $generated@@181) $generated@@68)) (= (type $generated@@182) $generated@@148)) ($generated@@166 $generated@@182 ($generated@@177 $generated@@180 $generated@@181))) ($generated@@176 $generated@@182))
 :pattern ( ($generated@@176 $generated@@182) ($generated@@166 $generated@@182 ($generated@@177 $generated@@180 $generated@@181)))
)))
(assert  (and (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@146)
 :pattern ( ($generated@@184 $generated@@186))
)) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@146)
 :pattern ( ($generated@@185 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@148) (= (type $generated@@189) $generated@@148)) true) (= ($generated@@183 $generated@@188 $generated@@189)  (and (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (= ($generated@@185 $generated@@188) ($generated@@185 $generated@@189)))))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@72)
 :pattern ( ($generated@@190 $generated@@192))
)) (= (type $generated@@191) $generated@@148)))
(assert (= ($generated@@190 $generated@@191) $generated@@63))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@68)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@80 $generated@@146 $generated@@2)) (= (type $generated@@197) $generated@@68)) ($generated@@166 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@166 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (= ($generated@@1 ($generated@@200 $generated@@204 $generated@@205)) 18)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@206 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@200 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@202 ($generated@@200 $generated@@208 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@200 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@202 (type $generated@@210))))
(= (type ($generated@@198 $generated@@210 $generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@198 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(let (($generated@@219 (type $generated@@215)))
(= (type ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@200 $generated@@219 $generated@@218))))
 :pattern ( ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@202 (type $generated@@220))))
 (=> (= (type $generated@@223) $generated@@224) (= ($generated@@198 ($generated@@203 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@221 $generated@@222) $generated@@223)))
 :weight 0
))) (and (and (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@198 ($generated@@203 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@198 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@198 ($generated@@203 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@198 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or true (= ($generated@@198 ($generated@@203 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@198 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@200 $generated@@81 $generated@@4))
 :pattern ( ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@71 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@81) (= (type $generated@@248) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@249) ($generated@@70 $generated@@4))) (= (type $generated@@251) $generated@@81)) (= (type $generated@@252) ($generated@@70 $generated@@253))) (= ($generated@@0 ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@254) $generated@@68) (= (type $generated@@255) $generated@@68)) (= (type $generated@@256) $generated@@146)) (= (type $generated@@257) $generated@@147)) (= (type $generated@@258) $generated@@148)) (= (type $generated@@259) $generated@@148)) (= $generated@@258 $generated@@259)) ($generated@@144 $generated@@254 $generated@@255 $generated@@256 ($generated@@145 $generated@@257) $generated@@258 $generated@@259))
 :pattern ( ($generated@@144 $generated@@254 $generated@@255 $generated@@256 ($generated@@145 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@261 $generated@@264)) ($generated@@78 $generated@@191 ($generated@@260 $generated@@263) $generated@@264))
 :pattern ( ($generated@@78 $generated@@191 ($generated@@260 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@148)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@68)) (= (type $generated@@271) $generated@@146)) (= (type $generated@@272) $generated@@146)) (= ($generated@@166 ($generated@@265 $generated@@271 $generated@@272) ($generated@@177 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@166 ($generated@@265 $generated@@271 $generated@@272) ($generated@@177 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) $generated@@68)) (= (type $generated@@276) $generated@@147)) (= (type $generated@@277) $generated@@148)) (= (type $generated@@278) $generated@@148)) (= ($generated@@273 $generated@@274 $generated@@275 ($generated@@145 $generated@@276) $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@273 $generated@@274 $generated@@275 ($generated@@145 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@68) ($generated@@166 $generated@@191 ($generated@@260 $generated@@279)))
 :pattern ( ($generated@@166 $generated@@191 ($generated@@260 $generated@@279)))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@148) (= (type $generated@@281) $generated@@148)) (= ($generated@@183 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@183 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@68)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@80 $generated@@146 $generated@@4)) (= (type $generated@@285) $generated@@68)) (= ($generated@@166 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@146) ($generated@@0 ($generated@@85 $generated@@284 $generated@@286))) ($generated@@266 $generated@@286 $generated@@285))
 :pattern ( ($generated@@85 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@166 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@68)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@80 $generated@@146 $generated@@4)) (= (type $generated@@290) $generated@@68)) (= ($generated@@166 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@146) ($generated@@0 ($generated@@85 $generated@@289 $generated@@291))) ($generated@@266 $generated@@291 $generated@@290))
 :pattern ( ($generated@@85 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@166 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@293 Int) ) (! (= ($generated@@292 $generated@@293) $generated@@293)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
(= (type ($generated@@294 $generated@@295)) $generated@@296))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= ($generated@@294 $generated@@297) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) $generated@@68)) (= (type $generated@@301) $generated@@146)) (= (type $generated@@302) $generated@@146)) (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@261 $generated@@303)) (= ($generated@@78 ($generated@@265 $generated@@301 $generated@@302) ($generated@@177 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@298 $generated@@301 $generated@@299 $generated@@303) ($generated@@298 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@78 ($generated@@265 $generated@@301 $generated@@302) ($generated@@177 $generated@@299 $generated@@300) $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@148) (= ($generated@@176 $generated@@304) (= ($generated@@190 $generated@@304) $generated@@61)))
 :pattern ( ($generated@@176 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@148) (= ($generated@@305 $generated@@306) (= ($generated@@190 $generated@@306) $generated@@63)))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@148) (= ($generated@@307 $generated@@308) (= ($generated@@190 $generated@@308) $generated@@65)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@148) ($generated@@176 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@146) (= (type $generated@@311) $generated@@146)) (= $generated@@309 ($generated@@265 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@176 $generated@@309))
)))
(assert  (and (and (forall (($generated@@316 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@316)) 19)) (forall (($generated@@317 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
))) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@312 $generated@@318)) ($generated@@314 $generated@@318))
 :pattern ( ($generated@@312 $generated@@318))
))))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@319)) 0)
 :pattern ( ($generated@@312 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@148) ($generated@@305 $generated@@320)) (= $generated@@320 $generated@@191))
 :pattern ( ($generated@@305 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@148)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@148) ($generated@@307 $generated@@323)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@148) (= $generated@@323 ($generated@@321 $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
)))
 :pattern ( ($generated@@307 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@146)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@68) (= (type $generated@@329) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@298 ($generated@@325 $generated@@327) $generated@@328 $generated@@329) ($generated@@78 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@298 ($generated@@325 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@330) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@331) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@332) $generated@@146)) (= (type $generated@@333) $generated@@68)) ($generated@@158 $generated@@330 $generated@@331)) ($generated@@298 $generated@@332 $generated@@333 $generated@@330)) ($generated@@298 $generated@@332 $generated@@333 $generated@@331))
 :pattern ( ($generated@@158 $generated@@330 $generated@@331) ($generated@@298 $generated@@332 $generated@@333 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@334) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@335) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@337) $generated@@68)) ($generated@@158 $generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@337 $generated@@334)) ($generated@@78 $generated@@336 $generated@@337 $generated@@335))
 :pattern ( ($generated@@158 $generated@@334 $generated@@335) ($generated@@78 $generated@@336 $generated@@337 $generated@@334))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@80 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@83 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@85 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@73)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@68) (and (= ($generated@@76 ($generated@@260 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@260 $generated@@346)) $generated@@67)))
 :pattern ( ($generated@@260 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 20)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 21)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@85 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@85 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@384) $generated@@146) (= (type $generated@@385) $generated@@146)) (and ($generated@@383 $generated@@385) (<= ($generated@@170 $generated@@385) ($generated@@170 $generated@@384)))) (and (= ($generated@@383 ($generated@@169 $generated@@384 $generated@@385)) ($generated@@383 $generated@@384)) (= ($generated@@170 ($generated@@169 $generated@@384 $generated@@385)) (- ($generated@@170 $generated@@384) ($generated@@170 $generated@@385)))))
 :pattern ( ($generated@@169 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 Int) ) (!  (=> (<= 0 $generated@@386) (and ($generated@@383 ($generated@@149 $generated@@386)) (= ($generated@@170 ($generated@@149 $generated@@386)) $generated@@386)))
 :pattern ( ($generated@@149 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@83 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@80 $generated@@388 $generated@@2)) (= ($generated@@194 $generated@@387) (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@388) (and (<= 0 ($generated ($generated@@85 $generated@@387 $generated@@389))) (<= ($generated ($generated@@85 $generated@@387 $generated@@389)) ($generated@@338 $generated@@387))))
 :pattern ( ($generated@@85 $generated@@387 $generated@@389))
)))))
 :pattern ( ($generated@@194 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@351 (type $generated@@390))))
(let (($generated@@392 ($generated@@350 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@349 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@348 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@347 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@351 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@80 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@351 (type $generated@@397))))
(let (($generated@@399 ($generated@@350 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@349 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@348 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@369 (type $generated@@401))))
(let (($generated@@403 ($generated@@368 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@367 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@366 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@365 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@369 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@80 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@369 (type $generated@@408))))
(let (($generated@@410 ($generated@@368 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@367 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@366 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@85 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@80 $generated@@146 $generated@@2)) (= (type $generated@@413) $generated@@68)) (= ($generated@@166 $generated@@412 ($generated@@193 $generated@@413)) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@146) (< 0 ($generated ($generated@@85 $generated@@412 $generated@@414)))) ($generated@@266 $generated@@414 $generated@@413))
 :pattern ( ($generated@@85 $generated@@412 $generated@@414))
))))
 :pattern ( ($generated@@166 $generated@@412 ($generated@@193 $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@148) ($generated@@415 $generated@@416)) (or ($generated@@305 $generated@@416) ($generated@@307 $generated@@416)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@146) (= (type $generated@@418) $generated@@146)) (or (or ($generated@@162 $generated@@417 $generated@@418) (= $generated@@417 $generated@@418)) ($generated@@162 $generated@@418 $generated@@417)))
 :pattern ( ($generated@@162 $generated@@417 $generated@@418) ($generated@@162 $generated@@418 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) $generated@@68) (= (type $generated@@420) $generated@@148)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@261 $generated@@421)) (= ($generated@@78 ($generated@@321 $generated@@420) ($generated@@260 $generated@@419) $generated@@421) ($generated@@78 $generated@@420 ($generated@@260 $generated@@419) $generated@@421)))
 :pattern ( ($generated@@78 ($generated@@321 $generated@@420) ($generated@@260 $generated@@419) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@80 $generated@@146 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@282 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@146) ($generated@@0 ($generated@@85 $generated@@422 $generated@@425))) ($generated@@298 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@85 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@282 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@80 $generated@@146 $generated@@4)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@287 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@146) ($generated@@0 ($generated@@85 $generated@@426 $generated@@429))) ($generated@@298 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@85 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@287 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(= ($generated ($generated@@85 ($generated@@339 $generated@@431) $generated@@430)) 0))
 :pattern ( (let (($generated@@431 (type $generated@@430)))
($generated@@85 ($generated@@339 $generated@@431) $generated@@430)))
)))
(assert  (and (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@432 $generated@@435)) ($generated@@80 $generated@@146 $generated@@4))
 :pattern ( ($generated@@432 $generated@@435))
)) (forall (($generated@@436 T@T) ($generated@@437 T@U) ) (! (= (type ($generated@@433 $generated@@436 $generated@@437)) $generated@@436)
 :pattern ( ($generated@@433 $generated@@436 $generated@@437))
))) (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@351 (type $generated@@438))))
(let (($generated@@440 ($generated@@350 (type $generated@@438))))
(= (type ($generated@@434 $generated@@438)) ($generated@@80 $generated@@440 $generated@@439))))
 :pattern ( ($generated@@434 $generated@@438))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@349 $generated@@146 $generated@@146)) (= (type $generated@@442) $generated@@146)) (= ($generated@@0 ($generated@@85 ($generated@@432 $generated@@441) $generated@@442))  (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@441) ($generated@@184 ($generated@@433 $generated@@148 $generated@@442)))) (= ($generated@@85 ($generated@@434 $generated@@441) ($generated@@184 ($generated@@433 $generated@@148 $generated@@442))) ($generated@@185 ($generated@@433 $generated@@148 $generated@@442))))))
 :pattern ( ($generated@@85 ($generated@@432 $generated@@441) $generated@@442))
)))
(assert  (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@445)) ($generated@@80 $generated@@146 $generated@@4))
 :pattern ( ($generated@@443 $generated@@445))
)) (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@369 (type $generated@@446))))
(let (($generated@@448 ($generated@@368 (type $generated@@446))))
(= (type ($generated@@444 $generated@@446)) ($generated@@80 $generated@@448 $generated@@447))))
 :pattern ( ($generated@@444 $generated@@446))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@367 $generated@@146 $generated@@146)) (= (type $generated@@450) $generated@@146)) (= ($generated@@0 ($generated@@85 ($generated@@443 $generated@@449) $generated@@450))  (and ($generated@@0 ($generated@@85 ($generated@@365 $generated@@449) ($generated@@184 ($generated@@433 $generated@@148 $generated@@450)))) (= ($generated@@85 ($generated@@444 $generated@@449) ($generated@@184 ($generated@@433 $generated@@148 $generated@@450))) ($generated@@185 ($generated@@433 $generated@@148 $generated@@450))))))
 :pattern ( ($generated@@85 ($generated@@443 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(let (($generated@@454 ($generated@@350 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@349 $generated@@454 $generated@@453)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@451) $generated@@452)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@454) (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@451) $generated@@455)) (= $generated@@452 ($generated@@85 ($generated@@434 $generated@@451) $generated@@455))))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@451) $generated@@455))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@451) $generated@@455))
))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(let (($generated@@459 ($generated@@368 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@367 $generated@@459 $generated@@458)) (= ($generated@@0 ($generated@@85 ($generated@@405 $generated@@456) $generated@@457)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) (and ($generated@@0 ($generated@@85 ($generated@@365 $generated@@456) $generated@@460)) (= $generated@@457 ($generated@@85 ($generated@@444 $generated@@456) $generated@@460))))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@456) $generated@@460))
 :pattern ( ($generated@@85 ($generated@@444 $generated@@456) $generated@@460))
))))))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) ($generated@@349 $generated@@146 $generated@@146)) (= (type $generated@@465) $generated@@68)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@146) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@464) $generated@@468))) (and ($generated@@298 ($generated@@85 ($generated@@434 $generated@@464) $generated@@468) $generated@@466 $generated@@467) ($generated@@298 $generated@@468 $generated@@465 $generated@@467)))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@464) $generated@@468))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@464) $generated@@468))
))))
 :pattern ( ($generated@@78 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (= (type $generated@@472) ($generated@@367 $generated@@146 $generated@@146)) (= (type $generated@@473) $generated@@68)) (= (type $generated@@474) $generated@@68)) (= (type $generated@@475) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@146) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@472) $generated@@476))) (and ($generated@@298 ($generated@@85 ($generated@@444 $generated@@472) $generated@@476) $generated@@474 $generated@@475) ($generated@@298 $generated@@476 $generated@@473 $generated@@475)))
 :pattern ( ($generated@@85 ($generated@@444 $generated@@472) $generated@@476))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@472) $generated@@476))
))))
 :pattern ( ($generated@@78 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@148)) ($generated@@166 $generated@@478 ($generated@@260 $generated@@477))) (or ($generated@@305 $generated@@478) ($generated@@307 $generated@@478)))
 :pattern ( ($generated@@307 $generated@@478) ($generated@@166 $generated@@478 ($generated@@260 $generated@@477)))
 :pattern ( ($generated@@305 $generated@@478) ($generated@@166 $generated@@478 ($generated@@260 $generated@@477)))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@148)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= (type $generated@@483) $generated@@146)) (= (type $generated@@484) $generated@@147)) (= (type $generated@@485) $generated@@148)) (= (type $generated@@486) $generated@@148)) (and ($generated@@166 $generated@@485 ($generated@@260 $generated@@481)) ($generated@@166 $generated@@486 ($generated@@260 $generated@@482)))) (= ($generated@@144 $generated@@481 $generated@@482 $generated@@483 ($generated@@145 $generated@@484) $generated@@485 $generated@@486)  (and (=> (< 0 ($generated@@170 $generated@@483)) (or (and ($generated@@305 $generated@@485) ($generated@@305 $generated@@486)) (and (and ($generated@@307 $generated@@485) ($generated@@307 $generated@@486)) (=> (and ($generated@@307 $generated@@485) ($generated@@307 $generated@@486)) ($generated@@144 $generated@@481 $generated@@482 ($generated@@169 $generated@@483 ($generated@@149 1)) $generated@@484 ($generated@@479 $generated@@485) ($generated@@479 $generated@@486)))))) (=> (and (not (= $generated@@483 ($generated@@149 0))) (= ($generated@@170 $generated@@483) 0)) ($generated@@273 $generated@@481 $generated@@482 $generated@@484 $generated@@485 $generated@@486)))))
 :pattern ( ($generated@@144 $generated@@481 $generated@@482 $generated@@483 ($generated@@145 $generated@@484) $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@487) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@488) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@489) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@487 $generated@@489))) (and ($generated@@158 $generated@@487 $generated@@488) ($generated@@158 $generated@@488 $generated@@489))) ($generated@@158 $generated@@487 $generated@@489))
 :pattern ( ($generated@@158 $generated@@487 $generated@@488) ($generated@@158 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@80 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@369 (type $generated@@492))))
(let (($generated@@494 ($generated@@368 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@367 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@366 $generated@@494 $generated@@493)) (= ($generated@@365 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@365 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@369 (type $generated@@495))))
(let (($generated@@497 ($generated@@368 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@367 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@366 $generated@@497 $generated@@496)) (= ($generated@@405 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@405 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@369 (type $generated@@498))))
(let (($generated@@500 ($generated@@368 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@367 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@366 $generated@@500 $generated@@499)) (= ($generated@@443 $generated@@498) ($generated@@490 $generated@@146))))))
 :pattern ( ($generated@@443 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@351 (type $generated@@501))))
(let (($generated@@503 ($generated@@350 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@349 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@348 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@146) (= (type $generated@@505) $generated@@146)) ($generated@@0 ($generated@@85 ($generated@@432 $generated@@501) ($generated@@325 ($generated@@265 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@432 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@369 (type $generated@@506))))
(let (($generated@@508 ($generated@@368 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@367 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@366 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@146) (= (type $generated@@510) $generated@@146)) ($generated@@0 ($generated@@85 ($generated@@443 $generated@@506) ($generated@@325 ($generated@@265 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@443 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@146) ($generated@@266 $generated@@511 $generated@@46)) (and (= ($generated@@325 ($generated@@433 $generated@@2 $generated@@511)) $generated@@511) ($generated@@166 ($generated@@433 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@146) ($generated@@266 $generated@@512 $generated@@47)) (and (= ($generated@@325 ($generated@@433 $generated@@3 $generated@@512)) $generated@@512) ($generated@@166 ($generated@@433 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@146) ($generated@@266 $generated@@513 $generated@@44)) (and (= ($generated@@325 ($generated@@433 $generated@@4 $generated@@513)) $generated@@513) ($generated@@166 ($generated@@433 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 22))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@146) ($generated@@266 $generated@@515 $generated@@45)) (and (= ($generated@@325 ($generated@@433 $generated@@514 $generated@@515)) $generated@@515) ($generated@@166 ($generated@@433 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@266 ($generated@@325 $generated@@516) $generated@@517) ($generated@@166 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@266 ($generated@@325 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@146) (<= 0 ($generated@@170 $generated@@518)))
 :pattern ( ($generated@@170 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@83 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@80 $generated@@520 $generated@@2)) (<= 0 ($generated@@338 $generated@@519))))
 :pattern ( ($generated@@338 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@315 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@314 $generated@@522)) (<= 0 ($generated@@313 $generated@@521))))
 :pattern ( ($generated@@313 $generated@@521))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@523 ($generated@@461 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@461 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@461 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@461 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@76 ($generated@@461 $generated@@531 $generated@@532)) $generated@@58))
 :pattern ( ($generated@@461 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@533 ($generated@@469 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@469 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@537 ($generated@@469 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@469 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@68)) (= ($generated@@76 ($generated@@469 $generated@@541 $generated@@542)) $generated@@59))
 :pattern ( ($generated@@469 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@146) (= (type $generated@@544) $generated@@146)) (= ($generated@@190 ($generated@@265 $generated@@543 $generated@@544)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (= ($generated@@545 ($generated@@177 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@177 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (= ($generated@@549 ($generated@@177 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@177 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@146) (= (type $generated@@554) $generated@@146)) (= ($generated@@184 ($generated@@265 $generated@@553 $generated@@554)) $generated@@553))
 :pattern ( ($generated@@265 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@146) (= (type $generated@@556) $generated@@146)) (= ($generated@@185 ($generated@@265 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@265 $generated@@555 $generated@@556))
)))
(assert  (and (forall (($generated@@559 T@U) ) (! (= (type ($generated@@557 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@559))
)) (forall (($generated@@560 T@U) ($generated@@561 Int) ) (! (let (($generated@@562 ($generated@@315 (type $generated@@560))))
(= (type ($generated@@558 $generated@@560 $generated@@561)) $generated@@562))
 :pattern ( ($generated@@558 $generated@@560 $generated@@561))
))))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@314 $generated@@146)) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@563 ($generated@@557 $generated@@564) $generated@@565) (forall (($generated@@566 Int) ) (!  (=> (and (<= 0 $generated@@566) (< $generated@@566 ($generated@@313 $generated@@563))) ($generated@@298 ($generated@@558 $generated@@563 $generated@@566) $generated@@564 $generated@@565))
 :pattern ( ($generated@@558 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@78 $generated@@563 ($generated@@557 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@567 ($generated@@79 $generated@@568)) $generated@@568)
 :pattern ( ($generated@@79 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@68)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@569 ($generated@@282 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@282 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@76 ($generated@@282 $generated@@572)) $generated@@54))
 :pattern ( ($generated@@282 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@573 ($generated@@287 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@287 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@76 ($generated@@287 $generated@@576)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@68)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@68) (= ($generated@@577 ($generated@@193 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@193 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@76 ($generated@@193 $generated@@580)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@68)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@68) (= ($generated@@581 ($generated@@557 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@557 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@76 ($generated@@557 $generated@@584)) $generated@@57))
 :pattern ( ($generated@@557 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@68)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@68) (= ($generated@@585 ($generated@@260 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@260 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@148) (= ($generated@@190 ($generated@@321 $generated@@588)) $generated@@65))
 :pattern ( ($generated@@321 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@148) (= ($generated@@479 ($generated@@321 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@321 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
(= ($generated@@433 $generated@@591 ($generated@@325 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@325 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@349 $generated@@146 $generated@@146)) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) $generated@@68)) (= ($generated@@166 $generated@@592 ($generated@@461 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@146) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@592) $generated@@595))) (and ($generated@@266 ($generated@@85 ($generated@@434 $generated@@592) $generated@@595) $generated@@594) ($generated@@266 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@592) $generated@@595))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@166 $generated@@592 ($generated@@461 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@367 $generated@@146 $generated@@146)) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) (= ($generated@@166 $generated@@596 ($generated@@469 $generated@@597 $generated@@598)) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@146) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@596) $generated@@599))) (and ($generated@@266 ($generated@@85 ($generated@@444 $generated@@596) $generated@@599) $generated@@598) ($generated@@266 $generated@@599 $generated@@597)))
 :pattern ( ($generated@@85 ($generated@@444 $generated@@596) $generated@@599))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@596) $generated@@599))
))))
 :pattern ( ($generated@@166 $generated@@596 ($generated@@469 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@146) (= (type $generated@@601) $generated@@146)) (and (and (and (=> ($generated@@162 $generated@@600 $generated@@601) (not (= $generated@@600 $generated@@601))) (=> (and ($generated@@383 $generated@@600) (not ($generated@@383 $generated@@601))) ($generated@@162 $generated@@600 $generated@@601))) (=> (and ($generated@@383 $generated@@600) ($generated@@383 $generated@@601)) (= ($generated@@162 $generated@@600 $generated@@601) (< ($generated@@170 $generated@@600) ($generated@@170 $generated@@601))))) (=> (and ($generated@@162 $generated@@600 $generated@@601) ($generated@@383 $generated@@601)) ($generated@@383 $generated@@600))))
 :pattern ( ($generated@@162 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@146) (= (type $generated@@605) $generated@@146)) (< ($generated@@602 $generated@@604) ($generated@@603 ($generated@@265 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@265 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@146) (= (type $generated@@607) $generated@@146)) (< ($generated@@602 $generated@@607) ($generated@@603 ($generated@@265 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@265 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@146) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@68)) ($generated@@266 $generated@@608 ($generated@@461 $generated@@609 $generated@@610))) (and (= ($generated@@325 ($generated@@433 ($generated@@349 $generated@@146 $generated@@146) $generated@@608)) $generated@@608) ($generated@@166 ($generated@@433 ($generated@@349 $generated@@146 $generated@@146) $generated@@608) ($generated@@461 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@266 $generated@@608 ($generated@@461 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@146) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) $generated@@68)) ($generated@@266 $generated@@611 ($generated@@469 $generated@@612 $generated@@613))) (and (= ($generated@@325 ($generated@@433 ($generated@@367 $generated@@146 $generated@@146) $generated@@611)) $generated@@611) ($generated@@166 ($generated@@433 ($generated@@367 $generated@@146 $generated@@146) $generated@@611) ($generated@@469 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@266 $generated@@611 ($generated@@469 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@68) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) $generated@@146)) ($generated@@266 $generated@@616 ($generated@@177 $generated@@614 $generated@@615))) (and (= ($generated@@325 ($generated@@433 $generated@@148 $generated@@616)) $generated@@616) ($generated@@166 ($generated@@433 $generated@@148 $generated@@616) ($generated@@177 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@266 $generated@@616 ($generated@@177 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@617) $generated@@68) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) $generated@@147)) (= (type $generated@@620) $generated@@148)) (= (type $generated@@621) $generated@@148)) (= ($generated@@273 $generated@@617 $generated@@618 ($generated@@145 $generated@@619) $generated@@620 $generated@@621) (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@146) ($generated@@144 $generated@@617 $generated@@618 $generated@@622 ($generated@@145 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@144 $generated@@617 $generated@@618 $generated@@622 ($generated@@145 $generated@@619) $generated@@620 $generated@@621))
))))
 :pattern ( ($generated@@273 $generated@@617 $generated@@618 ($generated@@145 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
 (not ($generated@@0 ($generated@@85 ($generated@@490 $generated@@624) $generated@@623))))
 :pattern ( (let (($generated@@624 (type $generated@@623)))
($generated@@85 ($generated@@490 $generated@@624) $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@68) (= (type $generated@@626) $generated@@68)) (and (= ($generated@@76 ($generated@@177 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@344 ($generated@@177 $generated@@625 $generated@@626)) $generated@@66)))
 :pattern ( ($generated@@177 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@627) $generated@@68) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) $generated@@147)) (= (type $generated@@630) $generated@@148)) (= (type $generated@@631) $generated@@148)) (and ($generated@@166 $generated@@630 ($generated@@260 $generated@@627)) ($generated@@166 $generated@@631 ($generated@@260 $generated@@628)))) (= ($generated@@273 $generated@@627 $generated@@628 ($generated@@145 $generated@@629) $generated@@630 $generated@@631)  (or (and ($generated@@305 $generated@@630) ($generated@@305 $generated@@631)) (and (and ($generated@@307 $generated@@630) ($generated@@307 $generated@@631)) (=> (and ($generated@@307 $generated@@630) ($generated@@307 $generated@@631)) ($generated@@273 $generated@@627 $generated@@628 $generated@@629 ($generated@@479 $generated@@630) ($generated@@479 $generated@@631)))))))
 :pattern ( ($generated@@273 $generated@@627 $generated@@628 ($generated@@145 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@148) (= ($generated@@602 ($generated@@325 $generated@@632)) ($generated@@603 $generated@@632)))
 :pattern ( ($generated@@602 ($generated@@325 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@146) ($generated@@266 $generated@@633 ($generated@@79 0))) (and (= ($generated@@325 ($generated@@433 $generated@@2 $generated@@633)) $generated@@633) ($generated@@166 ($generated@@433 ($generated@@80 $generated@@146 $generated@@4) $generated@@633) ($generated@@79 0))))
 :pattern ( ($generated@@266 $generated@@633 ($generated@@79 0)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@146) (= (type $generated@@635) $generated@@68)) ($generated@@266 $generated@@634 ($generated@@282 $generated@@635))) (and (= ($generated@@325 ($generated@@433 ($generated@@80 $generated@@146 $generated@@4) $generated@@634)) $generated@@634) ($generated@@166 ($generated@@433 ($generated@@80 $generated@@146 $generated@@4) $generated@@634) ($generated@@282 $generated@@635))))
 :pattern ( ($generated@@266 $generated@@634 ($generated@@282 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@146) (= (type $generated@@637) $generated@@68)) ($generated@@266 $generated@@636 ($generated@@287 $generated@@637))) (and (= ($generated@@325 ($generated@@433 ($generated@@80 $generated@@146 $generated@@4) $generated@@636)) $generated@@636) ($generated@@166 ($generated@@433 ($generated@@80 $generated@@146 $generated@@4) $generated@@636) ($generated@@287 $generated@@637))))
 :pattern ( ($generated@@266 $generated@@636 ($generated@@287 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@146) (= (type $generated@@639) $generated@@68)) ($generated@@266 $generated@@638 ($generated@@193 $generated@@639))) (and (= ($generated@@325 ($generated@@433 ($generated@@80 $generated@@146 $generated@@2) $generated@@638)) $generated@@638) ($generated@@166 ($generated@@433 ($generated@@80 $generated@@146 $generated@@2) $generated@@638) ($generated@@193 $generated@@639))))
 :pattern ( ($generated@@266 $generated@@638 ($generated@@193 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@146) (= (type $generated@@641) $generated@@68)) ($generated@@266 $generated@@640 ($generated@@557 $generated@@641))) (and (= ($generated@@325 ($generated@@433 ($generated@@314 $generated@@146) $generated@@640)) $generated@@640) ($generated@@166 ($generated@@433 ($generated@@314 $generated@@146) $generated@@640) ($generated@@557 $generated@@641))))
 :pattern ( ($generated@@266 $generated@@640 ($generated@@557 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) $generated@@68) (= (type $generated@@643) $generated@@146)) ($generated@@266 $generated@@643 ($generated@@260 $generated@@642))) (and (= ($generated@@325 ($generated@@433 $generated@@148 $generated@@643)) $generated@@643) ($generated@@166 ($generated@@433 $generated@@148 $generated@@643) ($generated@@260 $generated@@642))))
 :pattern ( ($generated@@266 $generated@@643 ($generated@@260 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@146) ($generated@@266 $generated@@644 ($generated@@79 11))) (and (= ($generated@@325 ($generated@@433 $generated@@136 $generated@@644)) $generated@@644) ($generated@@166 ($generated@@433 $generated@@136 $generated@@644) ($generated@@79 11))))
 :pattern ( ($generated@@266 $generated@@644 ($generated@@79 11)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@68) (= (type $generated@@646) $generated@@148)) (= ($generated@@166 ($generated@@321 $generated@@646) ($generated@@260 $generated@@645)) ($generated@@166 $generated@@646 ($generated@@260 $generated@@645))))
 :pattern ( ($generated@@166 ($generated@@321 $generated@@646) ($generated@@260 $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@146) ($generated@@383 $generated@@647)) (= $generated@@647 ($generated@@149 ($generated@@170 $generated@@647))))
 :pattern ( ($generated@@170 $generated@@647))
 :pattern ( ($generated@@383 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@148) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@650) (and ($generated@@307 $generated@@648) ($generated@@78 $generated@@648 ($generated@@260 $generated@@649) $generated@@650)))) ($generated@@78 ($generated@@479 $generated@@648) ($generated@@260 $generated@@649) $generated@@650))
 :pattern ( ($generated@@78 ($generated@@479 $generated@@648) ($generated@@260 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@651) ($generated@@80 $generated@@146 $generated@@2)) (= (type $generated@@652) $generated@@68)) (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@651 ($generated@@193 $generated@@652) $generated@@653) (forall (($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@146) (< 0 ($generated ($generated@@85 $generated@@651 $generated@@654)))) ($generated@@298 $generated@@654 $generated@@652 $generated@@653))
 :pattern ( ($generated@@85 $generated@@651 $generated@@654))
))))
 :pattern ( ($generated@@78 $generated@@651 ($generated@@193 $generated@@652) $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@146) (= (type $generated@@656) $generated@@146)) (and ($generated@@383 $generated@@656) (<= ($generated@@170 $generated@@656) ($generated@@170 $generated@@655)))) (or (and (= $generated@@656 ($generated@@149 0)) (= ($generated@@169 $generated@@655 $generated@@656) $generated@@655)) (and (not (= $generated@@656 ($generated@@149 0))) ($generated@@162 ($generated@@169 $generated@@655 $generated@@656) $generated@@655))))
 :pattern ( ($generated@@169 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@657) $generated@@68) (= (type $generated@@658) $generated@@68)) (= (type $generated@@659) $generated@@146)) (= (type $generated@@660) $generated@@147)) (= (type $generated@@661) $generated@@148)) (= (type $generated@@662) $generated@@148)) (= (type $generated@@663) $generated@@146)) (and ($generated@@162 $generated@@659 $generated@@663) ($generated@@144 $generated@@657 $generated@@658 $generated@@663 ($generated@@145 $generated@@660) $generated@@661 $generated@@662))) ($generated@@144 $generated@@657 $generated@@658 $generated@@659 ($generated@@145 $generated@@660) $generated@@661 $generated@@662))
 :pattern ( ($generated@@144 $generated@@657 $generated@@658 $generated@@659 ($generated@@145 $generated@@660) $generated@@661 $generated@@662) ($generated@@144 $generated@@657 $generated@@658 $generated@@663 ($generated@@145 $generated@@660) $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@664) $generated@@68) (= (type $generated@@665) $generated@@68)) (= (type $generated@@666) $generated@@147)) (= (type $generated@@667) $generated@@148)) (= (type $generated@@668) $generated@@148)) (= ($generated@@273 $generated@@664 $generated@@665 ($generated@@145 $generated@@666) $generated@@667 $generated@@668) ($generated@@273 $generated@@664 $generated@@665 $generated@@666 $generated@@667 $generated@@668)))
 :pattern ( ($generated@@273 $generated@@664 $generated@@665 ($generated@@145 $generated@@666) $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@148) (= (type $generated@@670) $generated@@68)) (= (type $generated@@671) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@671) (and ($generated@@176 $generated@@669) (exists (($generated@@672 T@U) ) (!  (and (= (type $generated@@672) $generated@@68) ($generated@@78 $generated@@669 ($generated@@177 $generated@@670 $generated@@672) $generated@@671))
 :pattern ( ($generated@@78 $generated@@669 ($generated@@177 $generated@@670 $generated@@672) $generated@@671))
))))) ($generated@@298 ($generated@@184 $generated@@669) $generated@@670 $generated@@671))
 :pattern ( ($generated@@298 ($generated@@184 $generated@@669) $generated@@670 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@148) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@675) (and ($generated@@176 $generated@@673) (exists (($generated@@676 T@U) ) (!  (and (= (type $generated@@676) $generated@@68) ($generated@@78 $generated@@673 ($generated@@177 $generated@@676 $generated@@674) $generated@@675))
 :pattern ( ($generated@@78 $generated@@673 ($generated@@177 $generated@@676 $generated@@674) $generated@@675))
))))) ($generated@@298 ($generated@@185 $generated@@673) $generated@@674 $generated@@675))
 :pattern ( ($generated@@298 ($generated@@185 $generated@@673) $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@146) (= (type $generated@@678) $generated@@146)) (= ($generated@@265 ($generated@@294 $generated@@677) ($generated@@294 $generated@@678)) ($generated@@294 ($generated@@265 $generated@@677 $generated@@678))))
 :pattern ( ($generated@@265 ($generated@@294 $generated@@677) ($generated@@294 $generated@@678)))
)))
(assert (forall (($generated@@679 Int) ) (! (= ($generated@@325 ($generated@@8 ($generated@@292 $generated@@679))) ($generated@@294 ($generated@@325 ($generated@@8 $generated@@679))))
 :pattern ( ($generated@@325 ($generated@@8 ($generated@@292 $generated@@679))))
)))
(assert (forall (($generated@@680 T@U) ) (! (= ($generated@@325 ($generated@@294 $generated@@680)) ($generated@@294 ($generated@@325 $generated@@680)))
 :pattern ( ($generated@@325 ($generated@@294 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ) (! (let (($generated@@682 ($generated@@315 (type $generated@@681))))
 (=> (and (= (type $generated@@681) ($generated@@314 $generated@@682)) (= ($generated@@313 $generated@@681) 0)) (= $generated@@681 ($generated@@312 $generated@@682))))
 :pattern ( ($generated@@313 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (! (let (($generated@@686 (type $generated@@684)))
 (=> (and (and (= (type $generated@@683) ($generated@@80 $generated@@686 $generated@@2)) (= (type $generated@@685) $generated@@2)) (<= 0 ($generated $generated@@685))) (= ($generated@@338 ($generated@@86 $generated@@683 $generated@@684 $generated@@685)) (+ (- ($generated@@338 $generated@@683) ($generated ($generated@@85 $generated@@683 $generated@@684))) ($generated $generated@@685)))))
 :pattern ( ($generated@@338 ($generated@@86 $generated@@683 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@687) $generated@@68) (= (type $generated@@688) $generated@@68)) (= (type $generated@@689) $generated@@147)) (= (type $generated@@690) $generated@@148)) (= (type $generated@@691) $generated@@148)) (forall (($generated@@692 Int) ) (!  (=> (<= 0 $generated@@692) ($generated@@144 $generated@@687 $generated@@688 ($generated@@149 $generated@@692) ($generated@@145 $generated@@689) $generated@@690 $generated@@691))
 :pattern ( ($generated@@144 $generated@@687 $generated@@688 ($generated@@149 $generated@@692) ($generated@@145 $generated@@689) $generated@@690 $generated@@691))
))) ($generated@@273 $generated@@687 $generated@@688 ($generated@@145 $generated@@689) $generated@@690 $generated@@691))
 :pattern ( ($generated@@273 $generated@@687 $generated@@688 ($generated@@145 $generated@@689) $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@694) $generated@@2)) ($generated@@78 $generated@@694 $generated@@46 $generated@@693))
 :pattern ( ($generated@@78 $generated@@694 $generated@@46 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@696) $generated@@3)) ($generated@@78 $generated@@696 $generated@@47 $generated@@695))
 :pattern ( ($generated@@78 $generated@@696 $generated@@47 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@698) $generated@@4)) ($generated@@78 $generated@@698 $generated@@44 $generated@@697))
 :pattern ( ($generated@@78 $generated@@698 $generated@@44 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@700) $generated@@514)) ($generated@@78 $generated@@700 $generated@@45 $generated@@699))
 :pattern ( ($generated@@78 $generated@@700 $generated@@45 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@702) $generated@@146)) ($generated@@78 $generated@@702 $generated@@48 $generated@@701))
 :pattern ( ($generated@@78 $generated@@702 $generated@@48 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@314 $generated@@146)) (= (type $generated@@704) $generated@@68)) (= ($generated@@166 $generated@@703 ($generated@@557 $generated@@704)) (forall (($generated@@705 Int) ) (!  (=> (and (<= 0 $generated@@705) (< $generated@@705 ($generated@@313 $generated@@703))) ($generated@@266 ($generated@@558 $generated@@703 $generated@@705) $generated@@704))
 :pattern ( ($generated@@558 $generated@@703 $generated@@705))
))))
 :pattern ( ($generated@@166 $generated@@703 ($generated@@557 $generated@@704)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 Int) ) (!  (=> (= (type $generated@@707) ($generated@@314 $generated@@146)) (=> (and (<= 0 $generated@@708) (< $generated@@708 ($generated@@313 $generated@@707))) (< ($generated@@603 ($generated@@433 $generated@@148 ($generated@@558 $generated@@707 $generated@@708))) ($generated@@706 $generated@@707))))
 :pattern ( ($generated@@603 ($generated@@433 $generated@@148 ($generated@@558 $generated@@707 $generated@@708))))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) ($generated@@349 $generated@@146 $generated@@146)) (= (type $generated@@710) $generated@@68)) (= (type $generated@@711) $generated@@68)) ($generated@@166 $generated@@709 ($generated@@461 $generated@@710 $generated@@711))) (and (and ($generated@@166 ($generated@@347 $generated@@709) ($generated@@282 $generated@@710)) ($generated@@166 ($generated@@394 $generated@@709) ($generated@@282 $generated@@711))) ($generated@@166 ($generated@@432 $generated@@709) ($generated@@282 ($generated@@177 $generated@@710 $generated@@711)))))
 :pattern ( ($generated@@166 $generated@@709 ($generated@@461 $generated@@710 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (and (= (type $generated@@712) ($generated@@367 $generated@@146 $generated@@146)) (= (type $generated@@713) $generated@@68)) (= (type $generated@@714) $generated@@68)) ($generated@@166 $generated@@712 ($generated@@469 $generated@@713 $generated@@714))) (and (and ($generated@@166 ($generated@@365 $generated@@712) ($generated@@287 $generated@@713)) ($generated@@166 ($generated@@405 $generated@@712) ($generated@@287 $generated@@714))) ($generated@@166 ($generated@@443 $generated@@712) ($generated@@287 ($generated@@177 $generated@@713 $generated@@714)))))
 :pattern ( ($generated@@166 $generated@@712 ($generated@@469 $generated@@713 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@2) ($generated@@166 $generated@@715 $generated@@46))
 :pattern ( ($generated@@166 $generated@@715 $generated@@46))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@3) ($generated@@166 $generated@@716 $generated@@47))
 :pattern ( ($generated@@166 $generated@@716 $generated@@47))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@4) ($generated@@166 $generated@@717 $generated@@44))
 :pattern ( ($generated@@166 $generated@@717 $generated@@44))
)))
(assert (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@514) ($generated@@166 $generated@@718 $generated@@45))
 :pattern ( ($generated@@166 $generated@@718 $generated@@45))
)))
(assert (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) $generated@@146) ($generated@@166 $generated@@719 $generated@@48))
 :pattern ( ($generated@@166 $generated@@719 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (Int Int) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@U) T@U)
(declare-fun $generated@@168 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 Int) ) (! (= ($generated@@163 $generated@@164 $generated@@165) (div $generated@@164 $generated@@165))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= ($generated@@167 $generated@@173 ($generated@@166 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@166 $generated@@172))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@166 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@166 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@166 $generated@@175)))
 :pattern ( ($generated@@166 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@183  (=> (and (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@157 2) 0)))))
(let (($generated@@184  (=> (and (and ($generated@@180 $generated@@178) ($generated@@181 $generated@@178)) (and (= 0 $generated@@182) (= (ControlFlow 0 3) 2))) $generated@@183)))
$generated@@184)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 ((_ BitVec 11)) T@U)
(declare-fun $generated@@138 (T@U) (_ BitVec 11))
(declare-fun $generated@@144 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (Int) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@198 (T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@200 (T@T T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (Int) Int)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@U) Bool)
(declare-fun $generated@@307 (T@U) Bool)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@383 (T@U) Bool)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 (T@T T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@488 (T@T) T@U)
(declare-fun $generated@@512 () T@T)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@556 (T@U Int) T@U)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(declare-fun $generated@@601 (T@U) Int)
(declare-fun $generated@@704 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (forall (($generated@@139 (_ BitVec 11)) ) (! (= ($generated@@138 ($generated@@137 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@137 $generated@@139))
)) (= ($generated@@1 $generated@@136) 14)) (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@136) (= ($generated@@137 ($generated@@138 $generated@@140)) $generated@@140))
 :pattern ( ($generated@@138 $generated@@140))
))) (forall (($generated@@141 (_ BitVec 11)) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@137 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (= (type $generated@@143) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@142 ($generated@@79 11) $generated@@143))
 :pattern ( ($generated@@78 $generated@@142 ($generated@@79 11) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@146) 15) (= ($generated@@1 $generated@@147) 16)) (= ($generated@@1 $generated@@148) 17)) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@145 $generated@@150)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@150))
))) (forall (($generated@@151 Int) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@146)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@152) $generated@@68) (= (type $generated@@153) $generated@@68)) (= (type $generated@@154) $generated@@146)) (= (type $generated@@155) $generated@@147)) (= (type $generated@@156) $generated@@148)) (= (type $generated@@157) $generated@@148)) (not (= $generated@@154 ($generated@@149 0)))) (= ($generated@@144 $generated@@152 $generated@@153 $generated@@154 ($generated@@145 $generated@@155) $generated@@156 $generated@@157) ($generated@@144 $generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@144 $generated@@152 $generated@@153 $generated@@154 ($generated@@145 $generated@@155) $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@160) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@158 $generated@@159 $generated@@160)) (forall (($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@159 $generated@@161) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60))
)))
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@146) (= (type $generated@@164) $generated@@146)) (= (type $generated@@165) $generated@@146)) (and ($generated@@162 $generated@@163 $generated@@164) ($generated@@162 $generated@@164 $generated@@165))) ($generated@@162 $generated@@163 $generated@@165))
 :pattern ( ($generated@@162 $generated@@163 $generated@@164) ($generated@@162 $generated@@164 $generated@@165))
 :pattern ( ($generated@@162 $generated@@163 $generated@@164) ($generated@@162 $generated@@163 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@166 $generated@@167 ($generated@@79 0)))
 :pattern ( ($generated@@166 $generated@@167 ($generated@@79 0)))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@136) ($generated@@166 $generated@@168 ($generated@@79 11)))
 :pattern ( ($generated@@166 $generated@@168 ($generated@@79 11)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@146)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 Int) ($generated@@175 Int) ) (!  (=> (= (type $generated@@173) $generated@@146) (=> (and (and (<= 0 $generated@@174) (<= 0 $generated@@175)) (<= (+ $generated@@174 $generated@@175) ($generated@@170 $generated@@173))) (= ($generated@@169 ($generated@@169 $generated@@173 ($generated@@149 $generated@@174)) ($generated@@149 $generated@@175)) ($generated@@169 $generated@@173 ($generated@@149 (+ $generated@@174 $generated@@175))))))
 :pattern ( ($generated@@169 ($generated@@169 $generated@@173 ($generated@@149 $generated@@174)) ($generated@@149 $generated@@175)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@178 $generated@@179)) $generated@@68)
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@68) (= (type $generated@@181) $generated@@68)) (= (type $generated@@182) $generated@@148)) ($generated@@166 $generated@@182 ($generated@@177 $generated@@180 $generated@@181))) ($generated@@176 $generated@@182))
 :pattern ( ($generated@@176 $generated@@182) ($generated@@166 $generated@@182 ($generated@@177 $generated@@180 $generated@@181)))
)))
(assert  (and (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@146)
 :pattern ( ($generated@@184 $generated@@186))
)) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@146)
 :pattern ( ($generated@@185 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@148) (= (type $generated@@189) $generated@@148)) true) (= ($generated@@183 $generated@@188 $generated@@189)  (and (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (= ($generated@@185 $generated@@188) ($generated@@185 $generated@@189)))))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@72)
 :pattern ( ($generated@@190 $generated@@192))
)) (= (type $generated@@191) $generated@@148)))
(assert (= ($generated@@190 $generated@@191) $generated@@63))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@68)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@80 $generated@@146 $generated@@2)) (= (type $generated@@197) $generated@@68)) ($generated@@166 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@166 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (= ($generated@@1 ($generated@@200 $generated@@204 $generated@@205)) 18)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@206 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@200 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@202 ($generated@@200 $generated@@208 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@200 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@202 (type $generated@@210))))
(= (type ($generated@@198 $generated@@210 $generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@198 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(let (($generated@@219 (type $generated@@215)))
(= (type ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@200 $generated@@219 $generated@@218))))
 :pattern ( ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@202 (type $generated@@220))))
 (=> (= (type $generated@@223) $generated@@224) (= ($generated@@198 ($generated@@203 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@221 $generated@@222) $generated@@223)))
 :weight 0
))) (and (and (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@198 ($generated@@203 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@198 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@198 ($generated@@203 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@198 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or true (= ($generated@@198 ($generated@@203 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@198 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@200 $generated@@81 $generated@@4))
 :pattern ( ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@71 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@81) (= (type $generated@@248) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@249) ($generated@@70 $generated@@4))) (= (type $generated@@251) $generated@@81)) (= (type $generated@@252) ($generated@@70 $generated@@253))) (= ($generated@@0 ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@254) $generated@@68) (= (type $generated@@255) $generated@@68)) (= (type $generated@@256) $generated@@146)) (= (type $generated@@257) $generated@@147)) (= (type $generated@@258) $generated@@148)) (= (type $generated@@259) $generated@@148)) (= $generated@@258 $generated@@259)) ($generated@@144 $generated@@254 $generated@@255 $generated@@256 ($generated@@145 $generated@@257) $generated@@258 $generated@@259))
 :pattern ( ($generated@@144 $generated@@254 $generated@@255 $generated@@256 ($generated@@145 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@261 $generated@@264)) ($generated@@78 $generated@@191 ($generated@@260 $generated@@263) $generated@@264))
 :pattern ( ($generated@@78 $generated@@191 ($generated@@260 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@148)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@68)) (= (type $generated@@271) $generated@@146)) (= (type $generated@@272) $generated@@146)) (= ($generated@@166 ($generated@@265 $generated@@271 $generated@@272) ($generated@@177 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@166 ($generated@@265 $generated@@271 $generated@@272) ($generated@@177 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) $generated@@68)) (= (type $generated@@276) $generated@@147)) (= (type $generated@@277) $generated@@148)) (= (type $generated@@278) $generated@@148)) (= ($generated@@273 $generated@@274 $generated@@275 ($generated@@145 $generated@@276) $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@273 $generated@@274 $generated@@275 ($generated@@145 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@68) ($generated@@166 $generated@@191 ($generated@@260 $generated@@279)))
 :pattern ( ($generated@@166 $generated@@191 ($generated@@260 $generated@@279)))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@148) (= (type $generated@@281) $generated@@148)) (= ($generated@@183 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@183 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@68)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@80 $generated@@146 $generated@@4)) (= (type $generated@@285) $generated@@68)) (= ($generated@@166 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@146) ($generated@@0 ($generated@@85 $generated@@284 $generated@@286))) ($generated@@266 $generated@@286 $generated@@285))
 :pattern ( ($generated@@85 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@166 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@68)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@80 $generated@@146 $generated@@4)) (= (type $generated@@290) $generated@@68)) (= ($generated@@166 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@146) ($generated@@0 ($generated@@85 $generated@@289 $generated@@291))) ($generated@@266 $generated@@291 $generated@@290))
 :pattern ( ($generated@@85 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@166 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@293 Int) ) (! (= ($generated@@292 $generated@@293) $generated@@293)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
(= (type ($generated@@294 $generated@@295)) $generated@@296))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= ($generated@@294 $generated@@297) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) $generated@@68)) (= (type $generated@@301) $generated@@146)) (= (type $generated@@302) $generated@@146)) (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@261 $generated@@303)) (= ($generated@@78 ($generated@@265 $generated@@301 $generated@@302) ($generated@@177 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@298 $generated@@301 $generated@@299 $generated@@303) ($generated@@298 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@78 ($generated@@265 $generated@@301 $generated@@302) ($generated@@177 $generated@@299 $generated@@300) $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@148) (= ($generated@@176 $generated@@304) (= ($generated@@190 $generated@@304) $generated@@61)))
 :pattern ( ($generated@@176 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@148) (= ($generated@@305 $generated@@306) (= ($generated@@190 $generated@@306) $generated@@63)))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@148) (= ($generated@@307 $generated@@308) (= ($generated@@190 $generated@@308) $generated@@65)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@148) ($generated@@176 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@146) (= (type $generated@@311) $generated@@146)) (= $generated@@309 ($generated@@265 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@176 $generated@@309))
)))
(assert  (and (and (forall (($generated@@316 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@316)) 19)) (forall (($generated@@317 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
))) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@312 $generated@@318)) ($generated@@314 $generated@@318))
 :pattern ( ($generated@@312 $generated@@318))
))))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@319)) 0)
 :pattern ( ($generated@@312 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@148) ($generated@@305 $generated@@320)) (= $generated@@320 $generated@@191))
 :pattern ( ($generated@@305 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@148)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@148) ($generated@@307 $generated@@323)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@148) (= $generated@@323 ($generated@@321 $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
)))
 :pattern ( ($generated@@307 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@146)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@68) (= (type $generated@@329) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@298 ($generated@@325 $generated@@327) $generated@@328 $generated@@329) ($generated@@78 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@298 ($generated@@325 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@330) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@331) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@332) $generated@@146)) (= (type $generated@@333) $generated@@68)) ($generated@@158 $generated@@330 $generated@@331)) ($generated@@298 $generated@@332 $generated@@333 $generated@@330)) ($generated@@298 $generated@@332 $generated@@333 $generated@@331))
 :pattern ( ($generated@@158 $generated@@330 $generated@@331) ($generated@@298 $generated@@332 $generated@@333 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@334) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@335) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@337) $generated@@68)) ($generated@@158 $generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@337 $generated@@334)) ($generated@@78 $generated@@336 $generated@@337 $generated@@335))
 :pattern ( ($generated@@158 $generated@@334 $generated@@335) ($generated@@78 $generated@@336 $generated@@337 $generated@@334))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@80 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@83 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@85 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@73)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@68) (and (= ($generated@@76 ($generated@@260 $generated@@346)) $generated@@64) (= ($generated@@344 ($generated@@260 $generated@@346)) $generated@@67)))
 :pattern ( ($generated@@260 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 20)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 21)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@85 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@85 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@384) $generated@@146) (= (type $generated@@385) $generated@@146)) (and ($generated@@383 $generated@@385) (<= ($generated@@170 $generated@@385) ($generated@@170 $generated@@384)))) (and (= ($generated@@383 ($generated@@169 $generated@@384 $generated@@385)) ($generated@@383 $generated@@384)) (= ($generated@@170 ($generated@@169 $generated@@384 $generated@@385)) (- ($generated@@170 $generated@@384) ($generated@@170 $generated@@385)))))
 :pattern ( ($generated@@169 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 Int) ) (!  (=> (<= 0 $generated@@386) (and ($generated@@383 ($generated@@149 $generated@@386)) (= ($generated@@170 ($generated@@149 $generated@@386)) $generated@@386)))
 :pattern ( ($generated@@149 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@83 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@80 $generated@@388 $generated@@2)) (= ($generated@@194 $generated@@387) (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@388) (and (<= 0 ($generated ($generated@@85 $generated@@387 $generated@@389))) (<= ($generated ($generated@@85 $generated@@387 $generated@@389)) ($generated@@338 $generated@@387))))
 :pattern ( ($generated@@85 $generated@@387 $generated@@389))
)))))
 :pattern ( ($generated@@194 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@351 (type $generated@@390))))
(let (($generated@@392 ($generated@@350 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@349 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@348 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@347 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@351 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@80 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@351 (type $generated@@397))))
(let (($generated@@399 ($generated@@350 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@349 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@348 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@369 (type $generated@@401))))
(let (($generated@@403 ($generated@@368 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@367 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@366 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@365 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@369 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@80 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@369 (type $generated@@408))))
(let (($generated@@410 ($generated@@368 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@367 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@366 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@85 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@80 $generated@@146 $generated@@2)) (= (type $generated@@413) $generated@@68)) (= ($generated@@166 $generated@@412 ($generated@@193 $generated@@413)) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@146) (< 0 ($generated ($generated@@85 $generated@@412 $generated@@414)))) ($generated@@266 $generated@@414 $generated@@413))
 :pattern ( ($generated@@85 $generated@@412 $generated@@414))
))))
 :pattern ( ($generated@@166 $generated@@412 ($generated@@193 $generated@@413)))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@146) (= (type $generated@@416) $generated@@146)) (or (or ($generated@@162 $generated@@415 $generated@@416) (= $generated@@415 $generated@@416)) ($generated@@162 $generated@@416 $generated@@415)))
 :pattern ( ($generated@@162 $generated@@415 $generated@@416) ($generated@@162 $generated@@416 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) $generated@@68) (= (type $generated@@418) $generated@@148)) (= (type $generated@@419) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@261 $generated@@419)) (= ($generated@@78 ($generated@@321 $generated@@418) ($generated@@260 $generated@@417) $generated@@419) ($generated@@78 $generated@@418 ($generated@@260 $generated@@417) $generated@@419)))
 :pattern ( ($generated@@78 ($generated@@321 $generated@@418) ($generated@@260 $generated@@417) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) ($generated@@80 $generated@@146 $generated@@4)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@282 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@146) ($generated@@0 ($generated@@85 $generated@@420 $generated@@423))) ($generated@@298 $generated@@423 $generated@@421 $generated@@422))
 :pattern ( ($generated@@85 $generated@@420 $generated@@423))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@282 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@424) ($generated@@80 $generated@@146 $generated@@4)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@424 ($generated@@287 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@146) ($generated@@0 ($generated@@85 $generated@@424 $generated@@427))) ($generated@@298 $generated@@427 $generated@@425 $generated@@426))
 :pattern ( ($generated@@85 $generated@@424 $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@424 ($generated@@287 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(= ($generated ($generated@@85 ($generated@@339 $generated@@429) $generated@@428)) 0))
 :pattern ( (let (($generated@@429 (type $generated@@428)))
($generated@@85 ($generated@@339 $generated@@429) $generated@@428)))
)))
(assert  (and (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@430 $generated@@433)) ($generated@@80 $generated@@146 $generated@@4))
 :pattern ( ($generated@@430 $generated@@433))
)) (forall (($generated@@434 T@T) ($generated@@435 T@U) ) (! (= (type ($generated@@431 $generated@@434 $generated@@435)) $generated@@434)
 :pattern ( ($generated@@431 $generated@@434 $generated@@435))
))) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@351 (type $generated@@436))))
(let (($generated@@438 ($generated@@350 (type $generated@@436))))
(= (type ($generated@@432 $generated@@436)) ($generated@@80 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@432 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@349 $generated@@146 $generated@@146)) (= (type $generated@@440) $generated@@146)) (= ($generated@@0 ($generated@@85 ($generated@@430 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@439) ($generated@@184 ($generated@@431 $generated@@148 $generated@@440)))) (= ($generated@@85 ($generated@@432 $generated@@439) ($generated@@184 ($generated@@431 $generated@@148 $generated@@440))) ($generated@@185 ($generated@@431 $generated@@148 $generated@@440))))))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@80 $generated@@146 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@369 (type $generated@@444))))
(let (($generated@@446 ($generated@@368 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@80 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@367 $generated@@146 $generated@@146)) (= (type $generated@@448) $generated@@146)) (= ($generated@@0 ($generated@@85 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@85 ($generated@@365 $generated@@447) ($generated@@184 ($generated@@431 $generated@@148 $generated@@448)))) (= ($generated@@85 ($generated@@442 $generated@@447) ($generated@@184 ($generated@@431 $generated@@148 $generated@@448))) ($generated@@185 ($generated@@431 $generated@@148 $generated@@448))))))
 :pattern ( ($generated@@85 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@350 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@349 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@85 ($generated@@432 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@432 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@368 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@367 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@85 ($generated@@405 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@85 ($generated@@365 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@85 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@454) $generated@@458))
 :pattern ( ($generated@@85 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@349 $generated@@146 $generated@@146)) (= (type $generated@@463) $generated@@68)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@146) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@462) $generated@@466))) (and ($generated@@298 ($generated@@85 ($generated@@432 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@298 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@85 ($generated@@432 $generated@@462) $generated@@466))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@78 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@367 $generated@@146 $generated@@146)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@146) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@470) $generated@@474))) (and ($generated@@298 ($generated@@85 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@298 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@85 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@78 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@148)) ($generated@@166 $generated@@476 ($generated@@260 $generated@@475))) (or ($generated@@305 $generated@@476) ($generated@@307 $generated@@476)))
 :pattern ( ($generated@@307 $generated@@476) ($generated@@166 $generated@@476 ($generated@@260 $generated@@475)))
 :pattern ( ($generated@@305 $generated@@476) ($generated@@166 $generated@@476 ($generated@@260 $generated@@475)))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@148)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) $generated@@146)) (= (type $generated@@482) $generated@@147)) (= (type $generated@@483) $generated@@148)) (= (type $generated@@484) $generated@@148)) (and ($generated@@166 $generated@@483 ($generated@@260 $generated@@479)) ($generated@@166 $generated@@484 ($generated@@260 $generated@@480)))) (= ($generated@@144 $generated@@479 $generated@@480 $generated@@481 ($generated@@145 $generated@@482) $generated@@483 $generated@@484)  (and (=> (< 0 ($generated@@170 $generated@@481)) (or (and ($generated@@305 $generated@@483) ($generated@@305 $generated@@484)) (and (and ($generated@@307 $generated@@483) ($generated@@307 $generated@@484)) (=> (and ($generated@@307 $generated@@483) ($generated@@307 $generated@@484)) ($generated@@144 $generated@@479 $generated@@480 ($generated@@169 $generated@@481 ($generated@@149 1)) $generated@@482 ($generated@@477 $generated@@483) ($generated@@477 $generated@@484)))))) (=> (and (not (= $generated@@481 ($generated@@149 0))) (= ($generated@@170 $generated@@481) 0)) ($generated@@273 $generated@@479 $generated@@480 $generated@@482 $generated@@483 $generated@@484)))))
 :pattern ( ($generated@@144 $generated@@479 $generated@@480 $generated@@481 ($generated@@145 $generated@@482) $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@485) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@486) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@487) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@485 $generated@@487))) (and ($generated@@158 $generated@@485 $generated@@486) ($generated@@158 $generated@@486 $generated@@487))) ($generated@@158 $generated@@485 $generated@@487))
 :pattern ( ($generated@@158 $generated@@485 $generated@@486) ($generated@@158 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@T) ) (! (= (type ($generated@@488 $generated@@489)) ($generated@@80 $generated@@489 $generated@@4))
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@369 (type $generated@@490))))
(let (($generated@@492 ($generated@@368 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@367 $generated@@492 $generated@@491)) (= (= $generated@@490 ($generated@@366 $generated@@492 $generated@@491)) (= ($generated@@365 $generated@@490) ($generated@@488 $generated@@492))))))
 :pattern ( ($generated@@365 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@369 (type $generated@@493))))
(let (($generated@@495 ($generated@@368 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@367 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@366 $generated@@495 $generated@@494)) (= ($generated@@405 $generated@@493) ($generated@@488 $generated@@494))))))
 :pattern ( ($generated@@405 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@369 (type $generated@@496))))
(let (($generated@@498 ($generated@@368 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@367 $generated@@498 $generated@@497)) (= (= $generated@@496 ($generated@@366 $generated@@498 $generated@@497)) (= ($generated@@441 $generated@@496) ($generated@@488 $generated@@146))))))
 :pattern ( ($generated@@441 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@351 (type $generated@@499))))
(let (($generated@@501 ($generated@@350 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@349 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@348 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@146) (= (type $generated@@503) $generated@@146)) ($generated@@0 ($generated@@85 ($generated@@430 $generated@@499) ($generated@@325 ($generated@@265 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@430 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@369 (type $generated@@504))))
(let (($generated@@506 ($generated@@368 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@367 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@366 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@146) (= (type $generated@@508) $generated@@146)) ($generated@@0 ($generated@@85 ($generated@@441 $generated@@504) ($generated@@325 ($generated@@265 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@441 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@146) ($generated@@266 $generated@@509 $generated@@46)) (and (= ($generated@@325 ($generated@@431 $generated@@2 $generated@@509)) $generated@@509) ($generated@@166 ($generated@@431 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@146) ($generated@@266 $generated@@510 $generated@@47)) (and (= ($generated@@325 ($generated@@431 $generated@@3 $generated@@510)) $generated@@510) ($generated@@166 ($generated@@431 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@146) ($generated@@266 $generated@@511 $generated@@44)) (and (= ($generated@@325 ($generated@@431 $generated@@4 $generated@@511)) $generated@@511) ($generated@@166 ($generated@@431 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@511 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@512) 22))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@146) ($generated@@266 $generated@@513 $generated@@45)) (and (= ($generated@@325 ($generated@@431 $generated@@512 $generated@@513)) $generated@@513) ($generated@@166 ($generated@@431 $generated@@512 $generated@@513) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@513 $generated@@45))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@266 ($generated@@325 $generated@@514) $generated@@515) ($generated@@166 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@266 ($generated@@325 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@146) (<= 0 ($generated@@170 $generated@@516)))
 :pattern ( ($generated@@170 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@83 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@80 $generated@@518 $generated@@2)) (<= 0 ($generated@@338 $generated@@517))))
 :pattern ( ($generated@@338 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@315 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@314 $generated@@520)) (<= 0 ($generated@@313 $generated@@519))))
 :pattern ( ($generated@@313 $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@459 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@459 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@76 ($generated@@459 $generated@@529 $generated@@530)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@467 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@467 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@467 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@467 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@76 ($generated@@467 $generated@@539 $generated@@540)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@146) (= (type $generated@@542) $generated@@146)) (= ($generated@@190 ($generated@@265 $generated@@541 $generated@@542)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@68)) (= ($generated@@543 ($generated@@177 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@177 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@68) (= (type $generated@@550) $generated@@68)) (= ($generated@@547 ($generated@@177 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@177 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@146) (= (type $generated@@552) $generated@@146)) (= ($generated@@184 ($generated@@265 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@265 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@146) (= (type $generated@@554) $generated@@146)) (= ($generated@@185 ($generated@@265 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@265 $generated@@553 $generated@@554))
)))
(assert  (and (forall (($generated@@557 T@U) ) (! (= (type ($generated@@555 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@557))
)) (forall (($generated@@558 T@U) ($generated@@559 Int) ) (! (let (($generated@@560 ($generated@@315 (type $generated@@558))))
(= (type ($generated@@556 $generated@@558 $generated@@559)) $generated@@560))
 :pattern ( ($generated@@556 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@314 $generated@@146)) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@561 ($generated@@555 $generated@@562) $generated@@563) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@313 $generated@@561))) ($generated@@298 ($generated@@556 $generated@@561 $generated@@564) $generated@@562 $generated@@563))
 :pattern ( ($generated@@556 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@78 $generated@@561 ($generated@@555 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@565 ($generated@@79 $generated@@566)) $generated@@566)
 :pattern ( ($generated@@79 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@282 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@282 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@76 ($generated@@282 $generated@@570)) $generated@@54))
 :pattern ( ($generated@@282 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@68)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@571 ($generated@@287 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@287 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@76 ($generated@@287 $generated@@574)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@575 ($generated@@193 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@193 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@68) (= ($generated@@76 ($generated@@193 $generated@@578)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@579 ($generated@@555 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@555 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@68) (= ($generated@@76 ($generated@@555 $generated@@582)) $generated@@57))
 :pattern ( ($generated@@555 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@68)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@583 ($generated@@260 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@260 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@148) (= ($generated@@190 ($generated@@321 $generated@@586)) $generated@@65))
 :pattern ( ($generated@@321 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@148) (= ($generated@@477 ($generated@@321 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@321 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
(= ($generated@@431 $generated@@589 ($generated@@325 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@325 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@349 $generated@@146 $generated@@146)) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) (= ($generated@@166 $generated@@590 ($generated@@459 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@146) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@590) $generated@@593))) (and ($generated@@266 ($generated@@85 ($generated@@432 $generated@@590) $generated@@593) $generated@@592) ($generated@@266 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@85 ($generated@@432 $generated@@590) $generated@@593))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@166 $generated@@590 ($generated@@459 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@367 $generated@@146 $generated@@146)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) $generated@@68)) (= ($generated@@166 $generated@@594 ($generated@@467 $generated@@595 $generated@@596)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@146) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@594) $generated@@597))) (and ($generated@@266 ($generated@@85 ($generated@@442 $generated@@594) $generated@@597) $generated@@596) ($generated@@266 $generated@@597 $generated@@595)))
 :pattern ( ($generated@@85 ($generated@@442 $generated@@594) $generated@@597))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@594) $generated@@597))
))))
 :pattern ( ($generated@@166 $generated@@594 ($generated@@467 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@146) (= (type $generated@@599) $generated@@146)) (and (and (and (=> ($generated@@162 $generated@@598 $generated@@599) (not (= $generated@@598 $generated@@599))) (=> (and ($generated@@383 $generated@@598) (not ($generated@@383 $generated@@599))) ($generated@@162 $generated@@598 $generated@@599))) (=> (and ($generated@@383 $generated@@598) ($generated@@383 $generated@@599)) (= ($generated@@162 $generated@@598 $generated@@599) (< ($generated@@170 $generated@@598) ($generated@@170 $generated@@599))))) (=> (and ($generated@@162 $generated@@598 $generated@@599) ($generated@@383 $generated@@599)) ($generated@@383 $generated@@598))))
 :pattern ( ($generated@@162 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@146) (= (type $generated@@603) $generated@@146)) (< ($generated@@600 $generated@@602) ($generated@@601 ($generated@@265 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@265 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@146) (= (type $generated@@605) $generated@@146)) (< ($generated@@600 $generated@@605) ($generated@@601 ($generated@@265 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@265 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@146) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) $generated@@68)) ($generated@@266 $generated@@606 ($generated@@459 $generated@@607 $generated@@608))) (and (= ($generated@@325 ($generated@@431 ($generated@@349 $generated@@146 $generated@@146) $generated@@606)) $generated@@606) ($generated@@166 ($generated@@431 ($generated@@349 $generated@@146 $generated@@146) $generated@@606) ($generated@@459 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@266 $generated@@606 ($generated@@459 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@146) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) $generated@@68)) ($generated@@266 $generated@@609 ($generated@@467 $generated@@610 $generated@@611))) (and (= ($generated@@325 ($generated@@431 ($generated@@367 $generated@@146 $generated@@146) $generated@@609)) $generated@@609) ($generated@@166 ($generated@@431 ($generated@@367 $generated@@146 $generated@@146) $generated@@609) ($generated@@467 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@266 $generated@@609 ($generated@@467 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@68) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) $generated@@146)) ($generated@@266 $generated@@614 ($generated@@177 $generated@@612 $generated@@613))) (and (= ($generated@@325 ($generated@@431 $generated@@148 $generated@@614)) $generated@@614) ($generated@@166 ($generated@@431 $generated@@148 $generated@@614) ($generated@@177 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@266 $generated@@614 ($generated@@177 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@615) $generated@@68) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@147)) (= (type $generated@@618) $generated@@148)) (= (type $generated@@619) $generated@@148)) (= ($generated@@273 $generated@@615 $generated@@616 ($generated@@145 $generated@@617) $generated@@618 $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@146) ($generated@@144 $generated@@615 $generated@@616 $generated@@620 ($generated@@145 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@144 $generated@@615 $generated@@616 $generated@@620 ($generated@@145 $generated@@617) $generated@@618 $generated@@619))
))))
 :pattern ( ($generated@@273 $generated@@615 $generated@@616 ($generated@@145 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@85 ($generated@@488 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@85 ($generated@@488 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@68) (= (type $generated@@624) $generated@@68)) (and (= ($generated@@76 ($generated@@177 $generated@@623 $generated@@624)) $generated@@62) (= ($generated@@344 ($generated@@177 $generated@@623 $generated@@624)) $generated@@66)))
 :pattern ( ($generated@@177 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@625) $generated@@68) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) $generated@@147)) (= (type $generated@@628) $generated@@148)) (= (type $generated@@629) $generated@@148)) (and ($generated@@166 $generated@@628 ($generated@@260 $generated@@625)) ($generated@@166 $generated@@629 ($generated@@260 $generated@@626)))) (= ($generated@@273 $generated@@625 $generated@@626 ($generated@@145 $generated@@627) $generated@@628 $generated@@629)  (or (and ($generated@@305 $generated@@628) ($generated@@305 $generated@@629)) (and (and ($generated@@307 $generated@@628) ($generated@@307 $generated@@629)) (=> (and ($generated@@307 $generated@@628) ($generated@@307 $generated@@629)) ($generated@@273 $generated@@625 $generated@@626 $generated@@627 ($generated@@477 $generated@@628) ($generated@@477 $generated@@629)))))))
 :pattern ( ($generated@@273 $generated@@625 $generated@@626 ($generated@@145 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@148) (= ($generated@@600 ($generated@@325 $generated@@630)) ($generated@@601 $generated@@630)))
 :pattern ( ($generated@@600 ($generated@@325 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@146) ($generated@@266 $generated@@631 ($generated@@79 0))) (and (= ($generated@@325 ($generated@@431 $generated@@2 $generated@@631)) $generated@@631) ($generated@@166 ($generated@@431 ($generated@@80 $generated@@146 $generated@@4) $generated@@631) ($generated@@79 0))))
 :pattern ( ($generated@@266 $generated@@631 ($generated@@79 0)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@146) (= (type $generated@@633) $generated@@68)) ($generated@@266 $generated@@632 ($generated@@282 $generated@@633))) (and (= ($generated@@325 ($generated@@431 ($generated@@80 $generated@@146 $generated@@4) $generated@@632)) $generated@@632) ($generated@@166 ($generated@@431 ($generated@@80 $generated@@146 $generated@@4) $generated@@632) ($generated@@282 $generated@@633))))
 :pattern ( ($generated@@266 $generated@@632 ($generated@@282 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@146) (= (type $generated@@635) $generated@@68)) ($generated@@266 $generated@@634 ($generated@@287 $generated@@635))) (and (= ($generated@@325 ($generated@@431 ($generated@@80 $generated@@146 $generated@@4) $generated@@634)) $generated@@634) ($generated@@166 ($generated@@431 ($generated@@80 $generated@@146 $generated@@4) $generated@@634) ($generated@@287 $generated@@635))))
 :pattern ( ($generated@@266 $generated@@634 ($generated@@287 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@146) (= (type $generated@@637) $generated@@68)) ($generated@@266 $generated@@636 ($generated@@193 $generated@@637))) (and (= ($generated@@325 ($generated@@431 ($generated@@80 $generated@@146 $generated@@2) $generated@@636)) $generated@@636) ($generated@@166 ($generated@@431 ($generated@@80 $generated@@146 $generated@@2) $generated@@636) ($generated@@193 $generated@@637))))
 :pattern ( ($generated@@266 $generated@@636 ($generated@@193 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@146) (= (type $generated@@639) $generated@@68)) ($generated@@266 $generated@@638 ($generated@@555 $generated@@639))) (and (= ($generated@@325 ($generated@@431 ($generated@@314 $generated@@146) $generated@@638)) $generated@@638) ($generated@@166 ($generated@@431 ($generated@@314 $generated@@146) $generated@@638) ($generated@@555 $generated@@639))))
 :pattern ( ($generated@@266 $generated@@638 ($generated@@555 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@68) (= (type $generated@@641) $generated@@146)) ($generated@@266 $generated@@641 ($generated@@260 $generated@@640))) (and (= ($generated@@325 ($generated@@431 $generated@@148 $generated@@641)) $generated@@641) ($generated@@166 ($generated@@431 $generated@@148 $generated@@641) ($generated@@260 $generated@@640))))
 :pattern ( ($generated@@266 $generated@@641 ($generated@@260 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@146) ($generated@@266 $generated@@642 ($generated@@79 11))) (and (= ($generated@@325 ($generated@@431 $generated@@136 $generated@@642)) $generated@@642) ($generated@@166 ($generated@@431 $generated@@136 $generated@@642) ($generated@@79 11))))
 :pattern ( ($generated@@266 $generated@@642 ($generated@@79 11)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@68) (= (type $generated@@644) $generated@@148)) (= ($generated@@166 ($generated@@321 $generated@@644) ($generated@@260 $generated@@643)) ($generated@@166 $generated@@644 ($generated@@260 $generated@@643))))
 :pattern ( ($generated@@166 ($generated@@321 $generated@@644) ($generated@@260 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@146) ($generated@@383 $generated@@645)) (= $generated@@645 ($generated@@149 ($generated@@170 $generated@@645))))
 :pattern ( ($generated@@170 $generated@@645))
 :pattern ( ($generated@@383 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@148) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@648) (and ($generated@@307 $generated@@646) ($generated@@78 $generated@@646 ($generated@@260 $generated@@647) $generated@@648)))) ($generated@@78 ($generated@@477 $generated@@646) ($generated@@260 $generated@@647) $generated@@648))
 :pattern ( ($generated@@78 ($generated@@477 $generated@@646) ($generated@@260 $generated@@647) $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@649) ($generated@@80 $generated@@146 $generated@@2)) (= (type $generated@@650) $generated@@68)) (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@649 ($generated@@193 $generated@@650) $generated@@651) (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@146) (< 0 ($generated ($generated@@85 $generated@@649 $generated@@652)))) ($generated@@298 $generated@@652 $generated@@650 $generated@@651))
 :pattern ( ($generated@@85 $generated@@649 $generated@@652))
))))
 :pattern ( ($generated@@78 $generated@@649 ($generated@@193 $generated@@650) $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@146) (= (type $generated@@654) $generated@@146)) (and ($generated@@383 $generated@@654) (<= ($generated@@170 $generated@@654) ($generated@@170 $generated@@653)))) (or (and (= $generated@@654 ($generated@@149 0)) (= ($generated@@169 $generated@@653 $generated@@654) $generated@@653)) (and (not (= $generated@@654 ($generated@@149 0))) ($generated@@162 ($generated@@169 $generated@@653 $generated@@654) $generated@@653))))
 :pattern ( ($generated@@169 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@655) $generated@@68) (= (type $generated@@656) $generated@@68)) (= (type $generated@@657) $generated@@146)) (= (type $generated@@658) $generated@@147)) (= (type $generated@@659) $generated@@148)) (= (type $generated@@660) $generated@@148)) (= (type $generated@@661) $generated@@146)) (and ($generated@@162 $generated@@657 $generated@@661) ($generated@@144 $generated@@655 $generated@@656 $generated@@661 ($generated@@145 $generated@@658) $generated@@659 $generated@@660))) ($generated@@144 $generated@@655 $generated@@656 $generated@@657 ($generated@@145 $generated@@658) $generated@@659 $generated@@660))
 :pattern ( ($generated@@144 $generated@@655 $generated@@656 $generated@@657 ($generated@@145 $generated@@658) $generated@@659 $generated@@660) ($generated@@144 $generated@@655 $generated@@656 $generated@@661 ($generated@@145 $generated@@658) $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@662) $generated@@68) (= (type $generated@@663) $generated@@68)) (= (type $generated@@664) $generated@@147)) (= (type $generated@@665) $generated@@148)) (= (type $generated@@666) $generated@@148)) (= ($generated@@273 $generated@@662 $generated@@663 ($generated@@145 $generated@@664) $generated@@665 $generated@@666) ($generated@@273 $generated@@662 $generated@@663 $generated@@664 $generated@@665 $generated@@666)))
 :pattern ( ($generated@@273 $generated@@662 $generated@@663 ($generated@@145 $generated@@664) $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@148) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@669) (and ($generated@@176 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@68) ($generated@@78 $generated@@667 ($generated@@177 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@78 $generated@@667 ($generated@@177 $generated@@668 $generated@@670) $generated@@669))
))))) ($generated@@298 ($generated@@184 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@298 ($generated@@184 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@148) (= (type $generated@@672) $generated@@68)) (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@673) (and ($generated@@176 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@68) ($generated@@78 $generated@@671 ($generated@@177 $generated@@674 $generated@@672) $generated@@673))
 :pattern ( ($generated@@78 $generated@@671 ($generated@@177 $generated@@674 $generated@@672) $generated@@673))
))))) ($generated@@298 ($generated@@185 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@298 ($generated@@185 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@146) (= (type $generated@@676) $generated@@146)) (= ($generated@@265 ($generated@@294 $generated@@675) ($generated@@294 $generated@@676)) ($generated@@294 ($generated@@265 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@265 ($generated@@294 $generated@@675) ($generated@@294 $generated@@676)))
)))
(assert (forall (($generated@@677 Int) ) (! (= ($generated@@325 ($generated@@8 ($generated@@292 $generated@@677))) ($generated@@294 ($generated@@325 ($generated@@8 $generated@@677))))
 :pattern ( ($generated@@325 ($generated@@8 ($generated@@292 $generated@@677))))
)))
(assert (forall (($generated@@678 T@U) ) (! (= ($generated@@325 ($generated@@294 $generated@@678)) ($generated@@294 ($generated@@325 $generated@@678)))
 :pattern ( ($generated@@325 ($generated@@294 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@315 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@314 $generated@@680)) (= ($generated@@313 $generated@@679) 0)) (= $generated@@679 ($generated@@312 $generated@@680))))
 :pattern ( ($generated@@313 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 (type $generated@@682)))
 (=> (and (and (= (type $generated@@681) ($generated@@80 $generated@@684 $generated@@2)) (= (type $generated@@683) $generated@@2)) (<= 0 ($generated $generated@@683))) (= ($generated@@338 ($generated@@86 $generated@@681 $generated@@682 $generated@@683)) (+ (- ($generated@@338 $generated@@681) ($generated ($generated@@85 $generated@@681 $generated@@682))) ($generated $generated@@683)))))
 :pattern ( ($generated@@338 ($generated@@86 $generated@@681 $generated@@682 $generated@@683)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@685) $generated@@68) (= (type $generated@@686) $generated@@68)) (= (type $generated@@687) $generated@@147)) (= (type $generated@@688) $generated@@148)) (= (type $generated@@689) $generated@@148)) (forall (($generated@@690 Int) ) (!  (=> (<= 0 $generated@@690) ($generated@@144 $generated@@685 $generated@@686 ($generated@@149 $generated@@690) ($generated@@145 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@144 $generated@@685 $generated@@686 ($generated@@149 $generated@@690) ($generated@@145 $generated@@687) $generated@@688 $generated@@689))
))) ($generated@@273 $generated@@685 $generated@@686 ($generated@@145 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@273 $generated@@685 $generated@@686 ($generated@@145 $generated@@687) $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@692) $generated@@2)) ($generated@@78 $generated@@692 $generated@@46 $generated@@691))
 :pattern ( ($generated@@78 $generated@@692 $generated@@46 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@694) $generated@@3)) ($generated@@78 $generated@@694 $generated@@47 $generated@@693))
 :pattern ( ($generated@@78 $generated@@694 $generated@@47 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@696) $generated@@4)) ($generated@@78 $generated@@696 $generated@@44 $generated@@695))
 :pattern ( ($generated@@78 $generated@@696 $generated@@44 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@698) $generated@@512)) ($generated@@78 $generated@@698 $generated@@45 $generated@@697))
 :pattern ( ($generated@@78 $generated@@698 $generated@@45 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@700) $generated@@146)) ($generated@@78 $generated@@700 $generated@@48 $generated@@699))
 :pattern ( ($generated@@78 $generated@@700 $generated@@48 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@314 $generated@@146)) (= (type $generated@@702) $generated@@68)) (= ($generated@@166 $generated@@701 ($generated@@555 $generated@@702)) (forall (($generated@@703 Int) ) (!  (=> (and (<= 0 $generated@@703) (< $generated@@703 ($generated@@313 $generated@@701))) ($generated@@266 ($generated@@556 $generated@@701 $generated@@703) $generated@@702))
 :pattern ( ($generated@@556 $generated@@701 $generated@@703))
))))
 :pattern ( ($generated@@166 $generated@@701 ($generated@@555 $generated@@702)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 Int) ) (!  (=> (= (type $generated@@705) ($generated@@314 $generated@@146)) (=> (and (<= 0 $generated@@706) (< $generated@@706 ($generated@@313 $generated@@705))) (< ($generated@@601 ($generated@@431 $generated@@148 ($generated@@556 $generated@@705 $generated@@706))) ($generated@@704 $generated@@705))))
 :pattern ( ($generated@@601 ($generated@@431 $generated@@148 ($generated@@556 $generated@@705 $generated@@706))))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (= (type $generated@@707) ($generated@@349 $generated@@146 $generated@@146)) (= (type $generated@@708) $generated@@68)) (= (type $generated@@709) $generated@@68)) ($generated@@166 $generated@@707 ($generated@@459 $generated@@708 $generated@@709))) (and (and ($generated@@166 ($generated@@347 $generated@@707) ($generated@@282 $generated@@708)) ($generated@@166 ($generated@@394 $generated@@707) ($generated@@282 $generated@@709))) ($generated@@166 ($generated@@430 $generated@@707) ($generated@@282 ($generated@@177 $generated@@708 $generated@@709)))))
 :pattern ( ($generated@@166 $generated@@707 ($generated@@459 $generated@@708 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (and (= (type $generated@@710) ($generated@@367 $generated@@146 $generated@@146)) (= (type $generated@@711) $generated@@68)) (= (type $generated@@712) $generated@@68)) ($generated@@166 $generated@@710 ($generated@@467 $generated@@711 $generated@@712))) (and (and ($generated@@166 ($generated@@365 $generated@@710) ($generated@@287 $generated@@711)) ($generated@@166 ($generated@@405 $generated@@710) ($generated@@287 $generated@@712))) ($generated@@166 ($generated@@441 $generated@@710) ($generated@@287 ($generated@@177 $generated@@711 $generated@@712)))))
 :pattern ( ($generated@@166 $generated@@710 ($generated@@467 $generated@@711 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@2) ($generated@@166 $generated@@713 $generated@@46))
 :pattern ( ($generated@@166 $generated@@713 $generated@@46))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@3) ($generated@@166 $generated@@714 $generated@@47))
 :pattern ( ($generated@@166 $generated@@714 $generated@@47))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@4) ($generated@@166 $generated@@715 $generated@@44))
 :pattern ( ($generated@@166 $generated@@715 $generated@@44))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@512) ($generated@@166 $generated@@716 $generated@@45))
 :pattern ( ($generated@@166 $generated@@716 $generated@@45))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@146) ($generated@@166 $generated@@717 $generated@@48))
 :pattern ( ($generated@@166 $generated@@717 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@718 () Int)
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 (T@U) Bool)
(declare-fun $generated@@723 () Int)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 () Int)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () Int)
(assert  (and (and (and (and (and (= (type $generated@@721) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@724) $generated@@81)) (= (type $generated@@725) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@727) ($generated@@200 $generated@@81 $generated@@4))) (= (type $generated@@728) $generated@@148)) (= (type $generated@@729) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@731  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@718 ($generated@@292 0)))))
(let (($generated@@732  (=> (and (not (= $generated@@719 ($generated@@292 0))) (= $generated@@720 ($generated@@292 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (= $generated@@720 0) (not (= $generated@@719 0)))) (=> (and (= $generated@@720 0) (not (= $generated@@719 0))) (=> (and (and (and ($generated@@261 $generated@@721) ($generated@@722 $generated@@721)) (= $generated@@723 ($generated@@292 0))) (and (and (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@81) (=> (and (not (= $generated@@733 $generated@@724)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@725 $generated@@733) $generated@@60))) (= ($generated@@85 $generated@@721 $generated@@733) ($generated@@85 $generated@@725 $generated@@733))))
 :pattern ( ($generated@@85 $generated@@721 $generated@@733))
)) ($generated@@158 $generated@@725 $generated@@721)) (and (= $generated@@718 $generated@@723) (= (ControlFlow 0 4) 2)))) $generated@@731))))))
(let (($generated@@734  (=> (and (and (= $generated@@719 ($generated@@292 0)) (= $generated@@726 ($generated@@292 0))) (and (= $generated@@718 $generated@@726) (= (ControlFlow 0 3) 2))) $generated@@731)))
(let (($generated@@735  (=> (= $generated@@727 ($generated@@199 $generated@@724 $generated@@725 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@734) (=> (= (ControlFlow 0 6) 4) $generated@@732)))))
(let (($generated@@736  (=> (and ($generated@@261 $generated@@725) ($generated@@722 $generated@@725)) (=> (and (and ($generated@@166 $generated@@728 ($generated@@260 $generated@@729)) ($generated@@78 $generated@@728 ($generated@@260 $generated@@729) $generated@@725)) (and (= 0 $generated@@730) (= (ControlFlow 0 7) 6))) $generated@@735))))
$generated@@736))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(assert  (and (and (and (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@188) $generated@@46)) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@191) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@193  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@181 ($generated@@162 0)))))
(let (($generated@@194  (=> (and (not (= $generated@@182 ($generated@@162 0))) (= $generated@@183 ($generated@@162 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (= $generated@@183 0) (not (= $generated@@182 0)))) (=> (and (= $generated@@183 0) (not (= $generated@@182 0))) (=> (and (and (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (= $generated@@187 ($generated@@162 0))) (and (and (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@46) (=> (and (not (= $generated@@195 $generated@@188)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@195) $generated@@50))) (= ($generated@@49 $generated@@185 $generated@@195) ($generated@@49 $generated@@189 $generated@@195))))
 :pattern ( ($generated@@49 $generated@@185 $generated@@195))
)) ($generated@@44 $generated@@189 $generated@@185)) (and (= $generated@@181 $generated@@187) (= (ControlFlow 0 4) 2)))) $generated@@193))))))
(let (($generated@@196  (=> (and (and (= $generated@@182 ($generated@@162 0)) (= $generated@@190 ($generated@@162 0))) (and (= $generated@@181 $generated@@190) (= (ControlFlow 0 3) 2))) $generated@@193)))
(let (($generated@@197  (=> (= $generated@@191 ($generated@@107 $generated@@188 $generated@@189 $generated@@50 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@196) (=> (= (ControlFlow 0 6) 4) $generated@@194)))))
(let (($generated@@198  (=> (and (and ($generated@@184 $generated@@189) ($generated@@186 $generated@@189)) (and (= 0 $generated@@192) (= (ControlFlow 0 7) 6))) $generated@@197)))
$generated@@198))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () Int)
(assert  (and (and (and (= (type $generated@@178) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@179) $generated@@47)) (= (type $generated@@180) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@181) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@185 true))
(let (($generated@@186  (=> (and (=> (and (<= ($generated@@157 2) $generated@@176) (< $generated@@176 $generated@@177)) (not (= ($generated@@171 $generated@@177 $generated@@176) 0))) (= (ControlFlow 0 7) 4)) $generated@@185)))
(let (($generated@@187  (=> (and (<= ($generated@@157 2) $generated@@176) (< $generated@@176 $generated@@177)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@176 0))) (=> (not (= $generated@@176 0)) (=> (and (not (= ($generated@@171 $generated@@177 $generated@@176) 0)) (= (ControlFlow 0 5) 4)) $generated@@185))))))
(let (($generated@@188  (=> (<= ($generated@@157 2) $generated@@177) (and (=> (= (ControlFlow 0 8) 5) $generated@@187) (=> (= (ControlFlow 0 8) 7) $generated@@186)))))
(let (($generated@@189  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 2) ($generated@@157 2))) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@190 Int) )  (=> true (=> (and (<= ($generated@@157 2) $generated@@190) (< $generated@@190 2)) (not (= ($generated@@171 2 $generated@@190) 0)))))))))
(let (($generated@@191  (=> (= $generated@@178 ($generated@@45 $generated@@179 $generated@@180 $generated@@181 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@188) (=> (= (ControlFlow 0 9) 2) $generated@@189)))))
(let (($generated@@192  (=> (and (and ($generated@@182 $generated@@180) ($generated@@183 $generated@@180)) (and (= 0 $generated@@184) (= (ControlFlow 0 10) 9))) $generated@@191)))
$generated@@192))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (* $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(assert  (and (and (and (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@191) $generated@@46)) (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@194) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@197  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@184 ($generated@@162 0)))))
(let (($generated@@198  (=> (and (not (= $generated@@185 ($generated@@162 0))) (= $generated@@186 ($generated@@162 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (= $generated@@186 0) (not (= $generated@@185 0)))) (=> (and (= $generated@@186 0) (not (= $generated@@185 0))) (=> (and (and (and ($generated@@187 $generated@@188) ($generated@@189 $generated@@188)) (= $generated@@190 ($generated@@162 0))) (and (and (forall (($generated@@199 T@U) ) (!  (=> (= (type $generated@@199) $generated@@46) (=> (and (not (= $generated@@199 $generated@@191)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@199) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@199) ($generated@@49 $generated@@192 $generated@@199))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@199))
)) ($generated@@44 $generated@@192 $generated@@188)) (and (= $generated@@184 $generated@@190) (= (ControlFlow 0 4) 2)))) $generated@@197))))))
(let (($generated@@200  (=> (and (and (= $generated@@185 ($generated@@162 0)) (= $generated@@193 ($generated@@162 0))) (and (= $generated@@184 $generated@@193) (= (ControlFlow 0 3) 2))) $generated@@197)))
(let (($generated@@201  (=> (= $generated@@194 ($generated@@107 $generated@@191 $generated@@192 $generated@@50 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@200) (=> (= (ControlFlow 0 6) 4) $generated@@198)))))
(let (($generated@@202  (=> (and ($generated@@187 $generated@@192) ($generated@@189 $generated@@192)) (=> (and (and (<= ($generated@@162 2) $generated@@195) (forall (($generated@@203 Int) )  (=> true (=> (and (<= ($generated@@162 2) $generated@@203) (< $generated@@203 $generated@@195)) (not (= ($generated@@179 $generated@@195 $generated@@203) 0)))))) (and (= 0 $generated@@196) (= (ControlFlow 0 7) 6))) $generated@@201))))
$generated@@202))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(assert  (and (and (and (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@188) $generated@@46)) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@191) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@193  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@181 ($generated@@162 0)))))
(let (($generated@@194  (=> (and (not (= $generated@@182 ($generated@@162 0))) (= $generated@@183 ($generated@@162 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (= $generated@@183 0) (not (= $generated@@182 0)))) (=> (and (= $generated@@183 0) (not (= $generated@@182 0))) (=> (and (and (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (= $generated@@187 ($generated@@162 0))) (and (and (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@46) (=> (and (not (= $generated@@195 $generated@@188)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@195) $generated@@50))) (= ($generated@@49 $generated@@185 $generated@@195) ($generated@@49 $generated@@189 $generated@@195))))
 :pattern ( ($generated@@49 $generated@@185 $generated@@195))
)) ($generated@@44 $generated@@189 $generated@@185)) (and (= $generated@@181 $generated@@187) (= (ControlFlow 0 4) 2)))) $generated@@193))))))
(let (($generated@@196  (=> (and (and (= $generated@@182 ($generated@@162 0)) (= $generated@@190 ($generated@@162 0))) (and (= $generated@@181 $generated@@190) (= (ControlFlow 0 3) 2))) $generated@@193)))
(let (($generated@@197  (=> (= $generated@@191 ($generated@@107 $generated@@188 $generated@@189 $generated@@50 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@196) (=> (= (ControlFlow 0 6) 4) $generated@@194)))))
(let (($generated@@198  (=> (and (and ($generated@@184 $generated@@189) ($generated@@186 $generated@@189)) (and (= 0 $generated@@192) (= (ControlFlow 0 7) 6))) $generated@@197)))
$generated@@198))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 25))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@157 4) 0)))))
(let (($generated@@182  (=> (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (=> (and (and (<= ($generated@@157 0) $generated@@179) (< $generated@@179 25)) (and (= 0 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181))))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (* $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(assert  (and (and (and (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@188) $generated@@46)) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@191) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@194  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@181 ($generated@@162 0)))))
(let (($generated@@195  (=> (and (not (= $generated@@182 ($generated@@162 0))) (= $generated@@183 ($generated@@162 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (= $generated@@183 0) (not (= $generated@@182 0)))) (=> (and (= $generated@@183 0) (not (= $generated@@182 0))) (=> (and (and (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (= $generated@@187 ($generated@@162 0))) (and (and (forall (($generated@@196 T@U) ) (!  (=> (= (type $generated@@196) $generated@@46) (=> (and (not (= $generated@@196 $generated@@188)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@196) $generated@@50))) (= ($generated@@49 $generated@@185 $generated@@196) ($generated@@49 $generated@@189 $generated@@196))))
 :pattern ( ($generated@@49 $generated@@185 $generated@@196))
)) ($generated@@44 $generated@@189 $generated@@185)) (and (= $generated@@181 $generated@@187) (= (ControlFlow 0 4) 2)))) $generated@@194))))))
(let (($generated@@197  (=> (and (and (= $generated@@182 ($generated@@162 0)) (= $generated@@190 ($generated@@162 0))) (and (= $generated@@181 $generated@@190) (= (ControlFlow 0 3) 2))) $generated@@194)))
(let (($generated@@198  (=> (= $generated@@191 ($generated@@107 $generated@@188 $generated@@189 $generated@@50 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@197) (=> (= (ControlFlow 0 6) 4) $generated@@195)))))
(let (($generated@@199  (=> (and ($generated@@184 $generated@@189) ($generated@@186 $generated@@189)) (=> (and (and (<= ($generated@@162 0) $generated@@192) (< $generated@@192 25)) (and (= 0 $generated@@193) (= (ControlFlow 0 7) 6))) $generated@@198))))
$generated@@199))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(assert  (and (and (and (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@188) $generated@@46)) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@191) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@193  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@181 ($generated@@162 0)))))
(let (($generated@@194  (=> (and (not (= $generated@@182 ($generated@@162 0))) (= $generated@@183 ($generated@@162 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (= $generated@@183 0) (not (= $generated@@182 0)))) (=> (and (= $generated@@183 0) (not (= $generated@@182 0))) (=> (and (and (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (= $generated@@187 ($generated@@162 0))) (and (and (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@46) (=> (and (not (= $generated@@195 $generated@@188)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@195) $generated@@50))) (= ($generated@@49 $generated@@185 $generated@@195) ($generated@@49 $generated@@189 $generated@@195))))
 :pattern ( ($generated@@49 $generated@@185 $generated@@195))
)) ($generated@@44 $generated@@189 $generated@@185)) (and (= $generated@@181 $generated@@187) (= (ControlFlow 0 4) 2)))) $generated@@193))))))
(let (($generated@@196  (=> (and (and (= $generated@@182 ($generated@@162 0)) (= $generated@@190 ($generated@@162 0))) (and (= $generated@@181 $generated@@190) (= (ControlFlow 0 3) 2))) $generated@@193)))
(let (($generated@@197  (=> (= $generated@@191 ($generated@@107 $generated@@188 $generated@@189 $generated@@50 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@196) (=> (= (ControlFlow 0 6) 4) $generated@@194)))))
(let (($generated@@198  (=> (and (and ($generated@@184 $generated@@189) ($generated@@186 $generated@@189)) (and (= 0 $generated@@192) (= (ControlFlow 0 7) 6))) $generated@@197)))
$generated@@198))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (Int) Int)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 11)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 11))
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@256 (Int) Bool)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@259 (Int) Bool)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@385 () Bool)
(declare-fun $generated@@386 () Int)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (= ($generated@@1 $generated@@82) 11) (forall (($generated@@87 T@U) ) (! (let (($generated@@88 (type $generated@@87)))
(= (type ($generated@@81 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@81 $generated@@87))
))) (= (type $generated@@85) $generated@@69)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@89 T@U) ) (!  (=> (and (= (type $generated@@89) $generated@@82) (or ($generated@@83 ($generated@@81 $generated@@89)) (and (not (= 0 $generated@@79)) ($generated@@84 $generated@@89 $generated@@85)))) (= ($generated@@80 ($generated@@81 $generated@@89)) ($generated@@86 10)))
 :weight 3
 :pattern ( ($generated@@80 ($generated@@81 $generated@@89)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 12)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@72 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@72 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@69)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 11)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 15)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 11)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@154 ($generated@@91 11) $generated@@155))
 :pattern ( ($generated@@90 $generated@@154 ($generated@@91 11) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@158) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@156 $generated@@157 $generated@@158)) (forall (($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@93) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@157 $generated@@159) $generated@@60))) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@158 $generated@@159) $generated@@60)))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@158 $generated@@159) $generated@@60))
)))
 :pattern ( ($generated@@156 $generated@@157 $generated@@158))
)))
(assert (= (type $generated@@160) $generated@@69))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@2) (= (type $generated@@162) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@161 $generated@@160 $generated@@162))
 :pattern ( ($generated@@90 $generated@@161 $generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@2) ($generated@@84 $generated@@163 ($generated@@91 0)))
 :pattern ( ($generated@@84 $generated@@163 ($generated@@91 0)))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@148) ($generated@@84 $generated@@164 ($generated@@91 11)))
 :pattern ( ($generated@@84 $generated@@164 ($generated@@91 11)))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@82) (or ($generated@@83 $generated@@165) (and (not (= 0 $generated@@79)) ($generated@@84 $generated@@165 $generated@@85)))) true)
 :pattern ( ($generated@@80 $generated@@165))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@69)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@69) (= (type $generated@@171) $generated@@69)) (= (type $generated@@172) $generated@@82)) ($generated@@84 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@84 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 16) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@82) (= (type $generated@@180) $generated@@82)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert  (and (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@181 $generated@@183))
)) (= (type $generated@@182) $generated@@82)))
(assert (= ($generated@@181 $generated@@182) $generated@@63))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@69)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@92 $generated@@176 $generated@@2)) (= (type $generated@@188) $generated@@69)) ($generated@@84 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@84 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 17)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@93 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@72 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@93) (= (type $generated@@239) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@240) ($generated@@71 $generated@@4))) (= (type $generated@@242) $generated@@93)) (= (type $generated@@243) ($generated@@71 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@82)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@69) (= (type $generated@@250) $generated@@69)) (= (type $generated@@251) $generated@@176)) (= (type $generated@@252) $generated@@176)) (= ($generated@@84 ($generated@@245 $generated@@251 $generated@@252) ($generated@@167 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@84 ($generated@@245 $generated@@251 $generated@@252) ($generated@@167 $generated@@249 $generated@@250)))
)))
(assert ($generated@@84 $generated@@182 $generated@@85))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@92 $generated@@93 $generated@@94)) ($generated@@253 $generated@@254)) ($generated@@90 $generated@@182 $generated@@85 $generated@@254))
 :pattern ( ($generated@@90 $generated@@182 $generated@@85 $generated@@254))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@257 Int) ) (!  (=> (or ($generated@@256 $generated@@257) (and (not (= 0 $generated@@79)) (< 0 $generated@@257))) true)
 :pattern ( ($generated@@255 $generated@@257))
))))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@260 Int) ) (!  (=> (or ($generated@@259 $generated@@260) (and (not (= 1 $generated@@79)) (< 0 $generated@@260))) true)
 :pattern ( ($generated@@258 $generated@@260))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@82) (= (type $generated@@262) $generated@@82)) (= ($generated@@173 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@173 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@82) (= (type $generated@@265) $generated@@82)) (= ($generated@@263 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@69)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@92 $generated@@176 $generated@@4)) (= (type $generated@@269) $generated@@69)) (= ($generated@@84 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@176) ($generated@@0 ($generated@@97 $generated@@268 $generated@@270))) ($generated@@246 $generated@@270 $generated@@269))
 :pattern ( ($generated@@97 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@84 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@69)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@92 $generated@@176 $generated@@4)) (= (type $generated@@274) $generated@@69)) (= ($generated@@84 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@176) ($generated@@0 ($generated@@97 $generated@@273 $generated@@275))) ($generated@@246 $generated@@275 $generated@@274))
 :pattern ( ($generated@@97 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@84 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@84 $generated@@276 $generated@@160) (< 0 ($generated $generated@@276))))
 :pattern ( ($generated@@84 $generated@@276 $generated@@160))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@86 $generated@@277) $generated@@277)
 :pattern ( ($generated@@86 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@81 $generated@@278) $generated@@278)
 :pattern ( ($generated@@81 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@69) (= (type $generated@@281) $generated@@69)) (= (type $generated@@282) $generated@@176)) (= (type $generated@@283) $generated@@176)) (= (type $generated@@284) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@253 $generated@@284)) (= ($generated@@90 ($generated@@245 $generated@@282 $generated@@283) ($generated@@167 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@90 ($generated@@245 $generated@@282 $generated@@283) ($generated@@167 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@82) (= ($generated@@166 $generated@@285) (= ($generated@@181 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@82) ($generated@@166 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@176) (= (type $generated@@288) $generated@@176)) (= $generated@@286 ($generated@@245 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@166 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 18)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@176)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@69) (= (type $generated@@301) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@279 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@90 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@279 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@303) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@304) $generated@@176)) (= (type $generated@@305) $generated@@69)) ($generated@@156 $generated@@302 $generated@@303)) ($generated@@279 $generated@@304 $generated@@305 $generated@@302)) ($generated@@279 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@156 $generated@@302 $generated@@303) ($generated@@279 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@307) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@309) $generated@@69)) ($generated@@156 $generated@@306 $generated@@307)) ($generated@@90 $generated@@308 $generated@@309 $generated@@306)) ($generated@@90 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@156 $generated@@306 $generated@@307) ($generated@@90 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@92 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@95 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@92 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@97 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@92 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@97 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@97 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 20)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@92 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@97 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@97 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@95 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@92 $generated@@353 $generated@@2)) (= ($generated@@185 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@97 $generated@@352 $generated@@354))) (<= ($generated ($generated@@97 $generated@@352 $generated@@354)) ($generated@@310 $generated@@352))))
 :pattern ( ($generated@@97 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@185 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@176) ($generated@@246 $generated@@358 $generated@@85)) (and (= ($generated@@297 ($generated@@355 $generated@@82 $generated@@358)) $generated@@358) ($generated@@84 ($generated@@355 $generated@@82 $generated@@358) $generated@@85)))
 :pattern ( ($generated@@246 $generated@@358 $generated@@85))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@176) ($generated@@246 $generated@@359 $generated@@160)) (and (= ($generated@@297 ($generated@@355 $generated@@2 $generated@@359)) $generated@@359) ($generated@@84 ($generated@@355 $generated@@2 $generated@@359) $generated@@160)))
 :pattern ( ($generated@@246 $generated@@359 $generated@@160))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@320 (type $generated@@360))))
(let (($generated@@362 ($generated@@319 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@318 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@317 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@97 ($generated@@316 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@316 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@320 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@92 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(let (($generated@@369 ($generated@@319 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@318 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@317 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@97 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@338 (type $generated@@371))))
(let (($generated@@373 ($generated@@337 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@336 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@335 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@97 ($generated@@334 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@334 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@338 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@92 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(let (($generated@@380 ($generated@@337 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@336 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@335 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@97 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@92 $generated@@176 $generated@@2)) (= (type $generated@@383) $generated@@69)) (= ($generated@@84 $generated@@382 ($generated@@184 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@176) (< 0 ($generated ($generated@@97 $generated@@382 $generated@@384)))) ($generated@@246 $generated@@384 $generated@@383))
 :pattern ( ($generated@@97 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@84 $generated@@382 ($generated@@184 $generated@@383)))
)))
(assert  (=> (<= 0 $generated@@79) (=> (or $generated@@385 (not (= 0 $generated@@79))) (= $generated@@386 ($generated@@86 13)))))
(assert  (=> (<= 0 $generated@@79) (=> (or $generated@@385 (not (= 0 $generated@@79))) (= $generated@@386 ($generated@@86 13)))))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@387 Int) ) (!  (=> (or ($generated@@256 $generated@@387) (and (not (= 0 $generated@@79)) (< 0 $generated@@387))) (= ($generated@@255 $generated@@387) (+ $generated@@387 2)))
 :pattern ( ($generated@@255 $generated@@387))
))))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@388 Int) ) (!  (=> (or ($generated@@259 $generated@@388) (and (not (= 1 $generated@@79)) (< 0 $generated@@388))) (= ($generated@@258 $generated@@388) (+ $generated@@388 3)))
 :pattern ( ($generated@@258 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@82) (= (type $generated@@390) $generated@@82)) true) (= ($generated@@263 $generated@@389 $generated@@390) true))
 :pattern ( ($generated@@263 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@92 $generated@@176 $generated@@4)) (= (type $generated@@392) $generated@@69)) (= (type $generated@@393) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@391 ($generated@@266 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@176) ($generated@@0 ($generated@@97 $generated@@391 $generated@@394))) ($generated@@279 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@97 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@90 $generated@@391 ($generated@@266 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@92 $generated@@176 $generated@@4)) (= (type $generated@@396) $generated@@69)) (= (type $generated@@397) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@395 ($generated@@271 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@176) ($generated@@0 ($generated@@97 $generated@@395 $generated@@398))) ($generated@@279 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@97 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@90 $generated@@395 ($generated@@271 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@97 ($generated@@311 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@97 ($generated@@311 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@92 $generated@@176 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@320 (type $generated@@404))))
(let (($generated@@406 ($generated@@319 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@92 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@318 $generated@@176 $generated@@176)) (= (type $generated@@408) $generated@@176)) (= ($generated@@0 ($generated@@97 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@97 ($generated@@316 $generated@@407) ($generated@@174 ($generated@@355 $generated@@82 $generated@@408)))) (= ($generated@@97 ($generated@@402 $generated@@407) ($generated@@174 ($generated@@355 $generated@@82 $generated@@408))) ($generated@@175 ($generated@@355 $generated@@82 $generated@@408))))))
 :pattern ( ($generated@@97 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@92 $generated@@176 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@338 (type $generated@@412))))
(let (($generated@@414 ($generated@@337 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@92 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@416) $generated@@176)) (= ($generated@@0 ($generated@@97 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@97 ($generated@@334 $generated@@415) ($generated@@174 ($generated@@355 $generated@@82 $generated@@416)))) (= ($generated@@97 ($generated@@410 $generated@@415) ($generated@@174 ($generated@@355 $generated@@82 $generated@@416))) ($generated@@175 ($generated@@355 $generated@@82 $generated@@416))))))
 :pattern ( ($generated@@97 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@319 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@318 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@97 ($generated@@364 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@97 ($generated@@316 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@97 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@97 ($generated@@316 $generated@@417) $generated@@421))
 :pattern ( ($generated@@97 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@97 ($generated@@364 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@337 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@336 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@97 ($generated@@375 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@97 ($generated@@334 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@97 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@97 ($generated@@334 $generated@@422) $generated@@426))
 :pattern ( ($generated@@97 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@97 ($generated@@375 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@69)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@318 $generated@@176 $generated@@176)) (= (type $generated@@431) $generated@@69)) (= (type $generated@@432) $generated@@69)) (= (type $generated@@433) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@176) ($generated@@0 ($generated@@97 ($generated@@316 $generated@@430) $generated@@434))) (and ($generated@@279 ($generated@@97 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@279 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@97 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@97 ($generated@@316 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@90 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@69)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@439) $generated@@69)) (= (type $generated@@440) $generated@@69)) (= (type $generated@@441) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@176) ($generated@@0 ($generated@@97 ($generated@@334 $generated@@438) $generated@@442))) (and ($generated@@279 ($generated@@97 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@279 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@97 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@97 ($generated@@334 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@90 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@443) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@444) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@445) ($generated@@92 $generated@@93 $generated@@94))) (not (= $generated@@443 $generated@@445))) (and ($generated@@156 $generated@@443 $generated@@444) ($generated@@156 $generated@@444 $generated@@445))) ($generated@@156 $generated@@443 $generated@@445))
 :pattern ( ($generated@@156 $generated@@443 $generated@@444) ($generated@@156 $generated@@444 $generated@@445))
)))
(assert  (=> (<= 0 $generated@@79) (=> (or $generated@@385 (not (= 0 $generated@@79))) true)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@92 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@338 (type $generated@@448))))
(let (($generated@@450 ($generated@@337 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@336 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@335 $generated@@450 $generated@@449)) (= ($generated@@334 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@334 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@338 (type $generated@@451))))
(let (($generated@@453 ($generated@@337 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@336 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@335 $generated@@453 $generated@@452)) (= ($generated@@375 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@375 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@338 (type $generated@@454))))
(let (($generated@@456 ($generated@@337 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@336 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@335 $generated@@456 $generated@@455)) (= ($generated@@409 $generated@@454) ($generated@@446 $generated@@176))))))
 :pattern ( ($generated@@409 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@320 (type $generated@@457))))
(let (($generated@@459 ($generated@@319 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@318 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@317 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@176) (= (type $generated@@461) $generated@@176)) ($generated@@0 ($generated@@97 ($generated@@401 $generated@@457) ($generated@@297 ($generated@@245 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@401 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@338 (type $generated@@462))))
(let (($generated@@464 ($generated@@337 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@336 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@335 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@176) (= (type $generated@@466) $generated@@176)) ($generated@@0 ($generated@@97 ($generated@@409 $generated@@462) ($generated@@297 ($generated@@245 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@176) ($generated@@246 $generated@@467 $generated@@46)) (and (= ($generated@@297 ($generated@@355 $generated@@2 $generated@@467)) $generated@@467) ($generated@@84 ($generated@@355 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@176) ($generated@@246 $generated@@468 $generated@@47)) (and (= ($generated@@297 ($generated@@355 $generated@@3 $generated@@468)) $generated@@468) ($generated@@84 ($generated@@355 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@176) ($generated@@246 $generated@@469 $generated@@44)) (and (= ($generated@@297 ($generated@@355 $generated@@4 $generated@@469)) $generated@@469) ($generated@@84 ($generated@@355 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 21))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@176) ($generated@@246 $generated@@471 $generated@@45)) (and (= ($generated@@297 ($generated@@355 $generated@@470 $generated@@471)) $generated@@471) ($generated@@84 ($generated@@355 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@69) (= ($generated@@246 ($generated@@297 $generated@@472) $generated@@473) ($generated@@84 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@246 ($generated@@297 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@95 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@92 $generated@@475 $generated@@2)) (<= 0 ($generated@@310 $generated@@474))))
 :pattern ( ($generated@@310 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@292 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@291 $generated@@477)) (<= 0 ($generated@@290 $generated@@476))))
 :pattern ( ($generated@@290 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@427 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@427 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@427 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@427 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@77 ($generated@@427 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@435 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@435 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@435 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@435 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@69) (= (type $generated@@497) $generated@@69)) (= ($generated@@77 ($generated@@435 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@176) (= (type $generated@@499) $generated@@176)) (= ($generated@@181 ($generated@@245 $generated@@498 $generated@@499)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@69) (= (type $generated@@503) $generated@@69)) (= ($generated@@500 ($generated@@167 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@167 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@69)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@69) (= (type $generated@@507) $generated@@69)) (= ($generated@@504 ($generated@@167 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@167 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@176) (= (type $generated@@509) $generated@@176)) (= ($generated@@174 ($generated@@245 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@245 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@176) (= (type $generated@@511) $generated@@176)) (= ($generated@@175 ($generated@@245 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@245 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@292 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@291 $generated@@176)) (= (type $generated@@519) $generated@@69)) (= (type $generated@@520) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@290 $generated@@518))) ($generated@@279 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@90 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@91 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@91 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@266 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@266 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@266 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@69)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@69) (= ($generated@@528 ($generated@@271 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@271 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@77 ($generated@@271 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@69) (= ($generated@@532 ($generated@@184 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@184 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@69) (= ($generated@@77 ($generated@@184 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@69)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@69) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@69) (= ($generated@@77 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@355 $generated@@541 ($generated@@297 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@297 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@318 $generated@@176 $generated@@176)) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) (= ($generated@@84 $generated@@542 ($generated@@427 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@176) ($generated@@0 ($generated@@97 ($generated@@316 $generated@@542) $generated@@545))) (and ($generated@@246 ($generated@@97 ($generated@@402 $generated@@542) $generated@@545) $generated@@544) ($generated@@246 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@97 ($generated@@402 $generated@@542) $generated@@545))
 :pattern ( ($generated@@97 ($generated@@316 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@84 $generated@@542 ($generated@@427 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) (= ($generated@@84 $generated@@546 ($generated@@435 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@176) ($generated@@0 ($generated@@97 ($generated@@334 $generated@@546) $generated@@549))) (and ($generated@@246 ($generated@@97 ($generated@@410 $generated@@546) $generated@@549) $generated@@548) ($generated@@246 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@97 ($generated@@410 $generated@@546) $generated@@549))
 :pattern ( ($generated@@97 ($generated@@334 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@84 $generated@@546 ($generated@@435 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@176) (= (type $generated@@553) $generated@@176)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@245 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@245 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@176) (= (type $generated@@555) $generated@@176)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@245 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@245 $generated@@554 $generated@@555))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@556 Int) ) (!  (=> (or ($generated@@256 ($generated@@86 $generated@@556)) (and (not (= 0 $generated@@79)) (< 0 $generated@@556))) (= ($generated@@255 ($generated@@86 $generated@@556)) ($generated@@86 (+ $generated@@556 2))))
 :weight 3
 :pattern ( ($generated@@255 ($generated@@86 $generated@@556)))
))))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@557 Int) ) (!  (=> (or ($generated@@259 ($generated@@86 $generated@@557)) (and (not (= 1 $generated@@79)) (< 0 $generated@@557))) (= ($generated@@258 ($generated@@86 $generated@@557)) ($generated@@86 (+ $generated@@557 3))))
 :weight 3
 :pattern ( ($generated@@258 ($generated@@86 $generated@@557)))
))))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@176) (= (type $generated@@559) $generated@@69)) (= (type $generated@@560) $generated@@69)) ($generated@@246 $generated@@558 ($generated@@427 $generated@@559 $generated@@560))) (and (= ($generated@@297 ($generated@@355 ($generated@@318 $generated@@176 $generated@@176) $generated@@558)) $generated@@558) ($generated@@84 ($generated@@355 ($generated@@318 $generated@@176 $generated@@176) $generated@@558) ($generated@@427 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@246 $generated@@558 ($generated@@427 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@176) (= (type $generated@@562) $generated@@69)) (= (type $generated@@563) $generated@@69)) ($generated@@246 $generated@@561 ($generated@@435 $generated@@562 $generated@@563))) (and (= ($generated@@297 ($generated@@355 ($generated@@336 $generated@@176 $generated@@176) $generated@@561)) $generated@@561) ($generated@@84 ($generated@@355 ($generated@@336 $generated@@176 $generated@@176) $generated@@561) ($generated@@435 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@246 $generated@@561 ($generated@@435 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@69) (= (type $generated@@565) $generated@@69)) (= (type $generated@@566) $generated@@176)) ($generated@@246 $generated@@566 ($generated@@167 $generated@@564 $generated@@565))) (and (= ($generated@@297 ($generated@@355 $generated@@82 $generated@@566)) $generated@@566) ($generated@@84 ($generated@@355 $generated@@82 $generated@@566) ($generated@@167 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@246 $generated@@566 ($generated@@167 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@97 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@97 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@74)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@69) (= (type $generated@@572) $generated@@69)) (and (= ($generated@@77 ($generated@@167 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@167 $generated@@571 $generated@@572)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@82) (= ($generated@@550 ($generated@@297 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@297 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@176) ($generated@@246 $generated@@574 ($generated@@91 0))) (and (= ($generated@@297 ($generated@@355 $generated@@2 $generated@@574)) $generated@@574) ($generated@@84 ($generated@@355 ($generated@@92 $generated@@176 $generated@@4) $generated@@574) ($generated@@91 0))))
 :pattern ( ($generated@@246 $generated@@574 ($generated@@91 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@176) (= (type $generated@@576) $generated@@69)) ($generated@@246 $generated@@575 ($generated@@266 $generated@@576))) (and (= ($generated@@297 ($generated@@355 ($generated@@92 $generated@@176 $generated@@4) $generated@@575)) $generated@@575) ($generated@@84 ($generated@@355 ($generated@@92 $generated@@176 $generated@@4) $generated@@575) ($generated@@266 $generated@@576))))
 :pattern ( ($generated@@246 $generated@@575 ($generated@@266 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@176) (= (type $generated@@578) $generated@@69)) ($generated@@246 $generated@@577 ($generated@@271 $generated@@578))) (and (= ($generated@@297 ($generated@@355 ($generated@@92 $generated@@176 $generated@@4) $generated@@577)) $generated@@577) ($generated@@84 ($generated@@355 ($generated@@92 $generated@@176 $generated@@4) $generated@@577) ($generated@@271 $generated@@578))))
 :pattern ( ($generated@@246 $generated@@577 ($generated@@271 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@176) (= (type $generated@@580) $generated@@69)) ($generated@@246 $generated@@579 ($generated@@184 $generated@@580))) (and (= ($generated@@297 ($generated@@355 ($generated@@92 $generated@@176 $generated@@2) $generated@@579)) $generated@@579) ($generated@@84 ($generated@@355 ($generated@@92 $generated@@176 $generated@@2) $generated@@579) ($generated@@184 $generated@@580))))
 :pattern ( ($generated@@246 $generated@@579 ($generated@@184 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@176) (= (type $generated@@582) $generated@@69)) ($generated@@246 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@297 ($generated@@355 ($generated@@291 $generated@@176) $generated@@581)) $generated@@581) ($generated@@84 ($generated@@355 ($generated@@291 $generated@@176) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@246 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@176) ($generated@@246 $generated@@583 ($generated@@91 11))) (and (= ($generated@@297 ($generated@@355 $generated@@148 $generated@@583)) $generated@@583) ($generated@@84 ($generated@@355 $generated@@148 $generated@@583) ($generated@@91 11))))
 :pattern ( ($generated@@246 $generated@@583 ($generated@@91 11)))
)))
(assert (= ($generated@@77 $generated@@85) $generated@@64))
(assert (= ($generated@@569 $generated@@85) $generated@@67))
(assert (= ($generated@@77 $generated@@160) $generated@@65))
(assert (= ($generated@@569 $generated@@160) $generated@@68))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@92 $generated@@176 $generated@@2)) (= (type $generated@@585) $generated@@69)) (= (type $generated@@586) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@584 ($generated@@184 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@176) (< 0 ($generated ($generated@@97 $generated@@584 $generated@@587)))) ($generated@@279 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@97 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@90 $generated@@584 ($generated@@184 $generated@@585) $generated@@586))
)))
(assert (= $generated@@182 ($generated@@81 $generated@@182)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@82) (= (type $generated@@589) $generated@@69)) (= (type $generated@@590) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@253 $generated@@590) (and ($generated@@166 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@69) ($generated@@90 $generated@@588 ($generated@@167 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@90 $generated@@588 ($generated@@167 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@279 ($generated@@174 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@279 ($generated@@174 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@82) (= (type $generated@@593) $generated@@69)) (= (type $generated@@594) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@253 $generated@@594) (and ($generated@@166 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@69) ($generated@@90 $generated@@592 ($generated@@167 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@90 $generated@@592 ($generated@@167 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@279 ($generated@@175 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@279 ($generated@@175 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@176) (= (type $generated@@597) $generated@@176)) (= ($generated@@245 ($generated@@81 $generated@@596) ($generated@@81 $generated@@597)) ($generated@@81 ($generated@@245 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@245 ($generated@@81 $generated@@596) ($generated@@81 $generated@@597)))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@86 $generated@@598))) ($generated@@81 ($generated@@297 ($generated@@8 $generated@@598))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@86 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ) (! (= ($generated@@297 ($generated@@81 $generated@@599)) ($generated@@81 ($generated@@297 $generated@@599)))
 :pattern ( ($generated@@297 ($generated@@81 $generated@@599)))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@82) (or ($generated@@83 $generated@@600) (and (not (= 0 $generated@@79)) ($generated@@84 $generated@@600 $generated@@85)))) (= ($generated@@80 $generated@@600) ($generated@@86 10)))
 :pattern ( ($generated@@80 $generated@@600))
))))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@292 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@291 $generated@@602)) (= ($generated@@290 $generated@@601) 0)) (= $generated@@601 ($generated@@289 $generated@@602))))
 :pattern ( ($generated@@290 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@92 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@310 ($generated@@98 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@310 $generated@@603) ($generated ($generated@@97 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@310 ($generated@@98 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@608) $generated@@2)) ($generated@@90 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@90 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@610) $generated@@3)) ($generated@@90 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@90 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@612) $generated@@4)) ($generated@@90 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@90 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@614) $generated@@470)) ($generated@@90 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@90 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@616) $generated@@176)) ($generated@@90 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@90 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@291 $generated@@176)) (= (type $generated@@618) $generated@@69)) (= ($generated@@84 $generated@@617 ($generated@@512 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@290 $generated@@617))) ($generated@@246 ($generated@@513 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@513 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@84 $generated@@617 ($generated@@512 $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@291 $generated@@176)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@290 $generated@@621))) (< ($generated@@551 ($generated@@355 $generated@@82 ($generated@@513 $generated@@621 $generated@@622))) ($generated@@620 $generated@@621))))
 :pattern ( ($generated@@551 ($generated@@355 $generated@@82 ($generated@@513 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@318 $generated@@176 $generated@@176)) (= (type $generated@@624) $generated@@69)) (= (type $generated@@625) $generated@@69)) ($generated@@84 $generated@@623 ($generated@@427 $generated@@624 $generated@@625))) (and (and ($generated@@84 ($generated@@316 $generated@@623) ($generated@@266 $generated@@624)) ($generated@@84 ($generated@@364 $generated@@623) ($generated@@266 $generated@@625))) ($generated@@84 ($generated@@401 $generated@@623) ($generated@@266 ($generated@@167 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@84 $generated@@623 ($generated@@427 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@627) $generated@@69)) (= (type $generated@@628) $generated@@69)) ($generated@@84 $generated@@626 ($generated@@435 $generated@@627 $generated@@628))) (and (and ($generated@@84 ($generated@@334 $generated@@626) ($generated@@271 $generated@@627)) ($generated@@84 ($generated@@375 $generated@@626) ($generated@@271 $generated@@628))) ($generated@@84 ($generated@@409 $generated@@626) ($generated@@271 ($generated@@167 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@84 $generated@@626 ($generated@@435 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@84 $generated@@629 $generated@@46))
 :pattern ( ($generated@@84 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@84 $generated@@630 $generated@@47))
 :pattern ( ($generated@@84 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@84 $generated@@631 $generated@@44))
 :pattern ( ($generated@@84 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@470) ($generated@@84 $generated@@632 $generated@@45))
 :pattern ( ($generated@@84 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@176) ($generated@@84 $generated@@633 $generated@@48))
 :pattern ( ($generated@@84 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@634) ($generated@@191 $generated@@93 $generated@@4)) (= (type $generated@@635) $generated@@93)) (= (type $generated@@636) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@637) $generated@@82)) (= (type $generated@@644) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@647) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@649) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@651  (=> (and (and (= $generated@@634 ($generated@@190 $generated@@635 $generated@@636 $generated@@60 false)) (= $generated@@637 ($generated@@81 $generated@@182))) (and ($generated@@90 $generated@@637 $generated@@85 $generated@@636) ($generated@@83 $generated@@637))) (=> (and (and (and ($generated@@83 $generated@@637) (= $generated@@638 ($generated@@80 $generated@@637))) (and $generated@@385 $generated@@385)) (and (and $generated@@385 $generated@@385) (and (= $generated@@639 ($generated@@86 (+ $generated@@386 $generated@@386))) (= $generated@@640 ($generated@@86 8))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (< 0 $generated@@640)) (=> (< 0 $generated@@640) (=> (= $generated@@641 ($generated@@86 8)) (=> (and (and ($generated@@90 ($generated@@8 $generated@@641) $generated@@160 $generated@@636) ($generated@@259 $generated@@641)) (and ($generated@@259 $generated@@641) (= $generated@@642 ($generated@@258 $generated@@641)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= $generated@@642 ($generated@@86 11))) (=> (= $generated@@642 ($generated@@86 11)) (=> (and (and ($generated@@90 ($generated@@8 $generated@@641) $generated@@160 $generated@@636) ($generated@@256 $generated@@641)) (and ($generated@@256 $generated@@641) (= $generated@@643 ($generated@@255 $generated@@641)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= $generated@@643 ($generated@@86 10))) (=> (= $generated@@643 ($generated@@86 10)) (=> (and (and (and ($generated@@253 $generated@@644) ($generated@@645 $generated@@644)) (= $generated@@646 (+ $generated@@641 3))) (and (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@93) (=> (and (not (= $generated@@652 $generated@@635)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@636 $generated@@652) $generated@@60))) (= ($generated@@97 $generated@@644 $generated@@652) ($generated@@97 $generated@@636 $generated@@652))))
 :pattern ( ($generated@@97 $generated@@644 $generated@@652))
)) ($generated@@156 $generated@@636 $generated@@644))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@646 ($generated@@86 11))) (=> (= $generated@@646 ($generated@@86 11)) (=> (and ($generated@@253 $generated@@647) ($generated@@645 $generated@@647)) (=> (and (and (= $generated@@648 (+ $generated@@641 2)) (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@93) (=> (and (not (= $generated@@653 $generated@@635)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@644 $generated@@653) $generated@@60))) (= ($generated@@97 $generated@@647 $generated@@653) ($generated@@97 $generated@@644 $generated@@653))))
 :pattern ( ($generated@@97 $generated@@647 $generated@@653))
))) (and ($generated@@156 $generated@@644 $generated@@647) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@648 ($generated@@86 10))))))))))))))))))))
(let (($generated@@654  (=> (and ($generated@@253 $generated@@636) ($generated@@645 $generated@@636)) (=> (and (and (and ($generated@@84 $generated@@649 $generated@@85) ($generated@@90 $generated@@649 $generated@@85 $generated@@636)) true) (and (and (< 0 $generated@@650) true) (and (= 2 $generated@@79) (= (ControlFlow 0 7) 2)))) $generated@@651))))
$generated@@654)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 ((_ BitVec 11)) T@U)
(declare-fun $generated@@147 (T@U) (_ BitVec 11))
(declare-fun $generated@@153 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (Int) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U) Real)
(declare-fun $generated@@186 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@190 (T@U) Int)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 (T@U T@U) T@U)
(declare-fun $generated@@203 (T@U T@U) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@219 (T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) Bool)
(declare-fun $generated@@298 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@304 (Bool T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@326 (Int) Int)
(declare-fun $generated@@328 (Real) Real)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@334 (T@U) Bool)
(declare-fun $generated@@337 (T@U) Bool)
(declare-fun $generated@@338 (T@U) Bool)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U T@U T@U) Bool)
(declare-fun $generated@@353 (T@U) Bool)
(declare-fun $generated@@355 (T@U) Bool)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@364 (T@U) Int)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@373 (Real) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@394 (T@U) Int)
(declare-fun $generated@@395 (T@T) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@T T@T) T@U)
(declare-fun $generated@@406 (T@T T@T) T@T)
(declare-fun $generated@@407 (T@T) T@T)
(declare-fun $generated@@408 (T@T) T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@T) T@U)
(declare-fun $generated@@424 (T@T T@T) T@T)
(declare-fun $generated@@425 (T@T) T@T)
(declare-fun $generated@@426 (T@T) T@T)
(declare-fun $generated@@440 (T@U) Bool)
(declare-fun $generated@@447 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@474 () Int)
(declare-fun $generated@@475 (T@U Int) Int)
(declare-fun $generated@@476 (T@U Int) Bool)
(declare-fun $generated@@477 (Int Int) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@533 (T@U T@U) T@U)
(declare-fun $generated@@541 (T@U T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@561 (Int Int) Int)
(declare-fun $generated@@569 (T@T) T@U)
(declare-fun $generated@@593 () T@T)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@641 (T@U Int) T@U)
(declare-fun $generated@@650 (T@U) Int)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@660 (T@U) T@U)
(declare-fun $generated@@664 (T@U) T@U)
(declare-fun $generated@@668 (T@U) T@U)
(declare-fun $generated@@673 (T@U) T@U)
(declare-fun $generated@@692 (T@U) Int)
(declare-fun $generated@@693 (T@U) Int)
(declare-fun $generated@@820 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 6) (= (type $generated@@44) $generated@@77)) (= (type $generated@@45) $generated@@77)) (= (type $generated@@46) $generated@@77)) (= (type $generated@@47) $generated@@77)) (= (type $generated@@48) $generated@@77)) (= ($generated@@1 $generated@@78) 7)) (= (type $generated@@49) $generated@@78)) (= (type $generated@@50) $generated@@78)) (= (type $generated@@51) $generated@@78)) (= (type $generated@@52) $generated@@78)) (= (type $generated@@53) $generated@@78)) (= (type $generated@@54) $generated@@78)) (= (type $generated@@55) $generated@@78)) (= (type $generated@@56) $generated@@78)) (= (type $generated@@57) $generated@@78)) (= (type $generated@@58) $generated@@78)) (= (type $generated@@59) $generated@@78)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@79 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@79 $generated@@84))
))) (= (type $generated@@60) ($generated@@79 $generated@@4))) (= ($generated@@1 $generated@@81) 9)) (= (type $generated@@61) $generated@@81)) (= (type $generated@@62) $generated@@78)) (= (type $generated@@63) $generated@@81)) (= (type $generated@@64) $generated@@78)) (= (type $generated@@65) $generated@@81)) (= (type $generated@@66) $generated@@81)) (= (type $generated@@67) $generated@@81)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@81)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= ($generated@@1 $generated@@82) 10)) (= (type $generated@@72) $generated@@82)) (= (type $generated@@73) $generated@@82)) (= (type $generated@@74) $generated@@82)) (= (type $generated@@75) $generated@@82)) (= (type $generated@@76) $generated@@82)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76)
)
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@78)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@44) $generated@@49))
(assert (= ($generated@@85 $generated@@45) $generated@@50))
(assert (= ($generated@@85 $generated@@46) $generated@@51))
(assert (= ($generated@@85 $generated@@47) $generated@@52))
(assert (= ($generated@@85 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 11)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 12)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@80 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@80 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@77)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert  (and (and (and (forall (($generated@@148 (_ BitVec 11)) ) (! (= ($generated@@147 ($generated@@146 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@148))
)) (= ($generated@@1 $generated@@145) 14)) (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@145) (= ($generated@@146 ($generated@@147 $generated@@149)) $generated@@149))
 :pattern ( ($generated@@147 $generated@@149))
))) (forall (($generated@@150 (_ BitVec 11)) ) (! (= (type ($generated@@146 $generated@@150)) $generated@@145)
 :pattern ( ($generated@@146 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@145) (= (type $generated@@152) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@151 ($generated@@88 11) $generated@@152))
 :pattern ( ($generated@@87 $generated@@151 ($generated@@88 11) $generated@@152))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@155) 15) (= ($generated@@1 $generated@@156) 16)) (= ($generated@@1 $generated@@157) 17)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@154 $generated@@159)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@159))
))) (forall (($generated@@160 Int) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@155)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@161) $generated@@77) (= (type $generated@@162) $generated@@77)) (= (type $generated@@163) $generated@@155)) (= (type $generated@@164) $generated@@156)) (= (type $generated@@165) $generated@@157)) (= (type $generated@@166) $generated@@157)) (not (= $generated@@163 ($generated@@158 0)))) (= ($generated@@153 $generated@@161 $generated@@162 $generated@@163 ($generated@@154 $generated@@164) $generated@@165 $generated@@166) ($generated@@153 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@153 $generated@@161 $generated@@162 $generated@@163 ($generated@@154 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@169) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@167 $generated@@168 $generated@@169)) (forall (($generated@@170 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@168 $generated@@170) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@169 $generated@@170) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@169 $generated@@170) $generated@@60))
)))
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@155) (= (type $generated@@173) $generated@@155)) (= (type $generated@@174) $generated@@155)) (and ($generated@@171 $generated@@172 $generated@@173) ($generated@@171 $generated@@173 $generated@@174))) ($generated@@171 $generated@@172 $generated@@174))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173) ($generated@@171 $generated@@173 $generated@@174))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173) ($generated@@171 $generated@@172 $generated@@174))
)))
(assert (= (type $generated@@175) $generated@@77))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@2) (= (type $generated@@177) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@176 $generated@@175 $generated@@177))
 :pattern ( ($generated@@87 $generated@@176 $generated@@175 $generated@@177))
)))
(assert (= (type $generated@@178) $generated@@77))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@2) (= (type $generated@@180) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@179 $generated@@178 $generated@@180))
 :pattern ( ($generated@@87 $generated@@179 $generated@@178 $generated@@180))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@157) (= (type $generated@@185) $generated@@157)) (and ($generated@@182 $generated@@184) ($generated@@182 $generated@@185))) (= ($generated@@181 $generated@@184 $generated@@185) (= ($generated@@183 $generated@@184) ($generated@@183 $generated@@185))))
 :pattern ( ($generated@@181 $generated@@184 $generated@@185) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@181 $generated@@184 $generated@@185) ($generated@@182 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@2) ($generated@@186 $generated@@187 ($generated@@88 0)))
 :pattern ( ($generated@@186 $generated@@187 ($generated@@88 0)))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@145) ($generated@@186 $generated@@188 ($generated@@88 11)))
 :pattern ( ($generated@@186 $generated@@188 ($generated@@88 11)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@191 $generated@@192)) $generated@@155)
 :pattern ( ($generated@@189 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 Int) ($generated@@195 Int) ) (!  (=> (= (type $generated@@193) $generated@@155) (=> (and (and (<= 0 $generated@@194) (<= 0 $generated@@195)) (<= (+ $generated@@194 $generated@@195) ($generated@@190 $generated@@193))) (= ($generated@@189 ($generated@@189 $generated@@193 ($generated@@158 $generated@@194)) ($generated@@158 $generated@@195)) ($generated@@189 $generated@@193 ($generated@@158 (+ $generated@@194 $generated@@195))))))
 :pattern ( ($generated@@189 ($generated@@189 $generated@@193 ($generated@@158 $generated@@194)) ($generated@@158 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@198 $generated@@199)) $generated@@77)
 :pattern ( ($generated@@197 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (and (= (type $generated@@200) $generated@@77) (= (type $generated@@201) $generated@@77)) (= (type $generated@@202) $generated@@157)) ($generated@@186 $generated@@202 ($generated@@197 $generated@@200 $generated@@201))) ($generated@@196 $generated@@202))
 :pattern ( ($generated@@196 $generated@@202) ($generated@@186 $generated@@202 ($generated@@197 $generated@@200 $generated@@201)))
)))
(assert  (and (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@155)
 :pattern ( ($generated@@204 $generated@@206))
)) (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@155)
 :pattern ( ($generated@@205 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) $generated@@157) (= (type $generated@@209) $generated@@157)) true) (= ($generated@@203 $generated@@208 $generated@@209)  (and (= ($generated@@204 $generated@@208) ($generated@@204 $generated@@209)) (= ($generated@@205 $generated@@208) ($generated@@205 $generated@@209)))))
 :pattern ( ($generated@@203 $generated@@208 $generated@@209))
)))
(assert  (and (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@81)
 :pattern ( ($generated@@210 $generated@@212))
)) (= (type $generated@@211) $generated@@157)))
(assert (= ($generated@@210 $generated@@211) $generated@@63))
(assert (= (type $generated@@213) $generated@@157))
(assert (= ($generated@@210 $generated@@213) $generated@@67))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@77)
 :pattern ( ($generated@@214 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@217) ($generated@@89 $generated@@155 $generated@@2)) (= (type $generated@@218) $generated@@77)) ($generated@@186 $generated@@217 ($generated@@214 $generated@@218))) ($generated@@215 $generated@@217))
 :pattern ( ($generated@@186 $generated@@217 ($generated@@214 $generated@@218)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@225 $generated@@226)) 18)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@221 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@219 $generated@@231 $generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232 $generated@@233))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(let (($generated@@240 (type $generated@@236)))
(= (type ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@221 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@223 (type $generated@@241))))
 (=> (= (type $generated@@244) $generated@@245) (= ($generated@@219 ($generated@@224 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@242 $generated@@243) $generated@@244)))
 :weight 0
))) (and (and (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@219 ($generated@@224 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@219 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@219 ($generated@@224 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@219 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or true (= ($generated@@219 ($generated@@224 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@219 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
)))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ) (! (= (type ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267)) ($generated@@221 $generated@@90 $generated@@4))
 :pattern ( ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@80 (type $generated@@273))))
 (=> (and (and (and (and (= (type $generated@@268) $generated@@90) (= (type $generated@@269) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@270) ($generated@@79 $generated@@4))) (= (type $generated@@272) $generated@@90)) (= (type $generated@@273) ($generated@@79 $generated@@274))) (= ($generated@@0 ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))  (=> (and (not (= $generated@@272 $generated@@268)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@269 $generated@@272) $generated@@270))) $generated@@271))))
 :pattern ( ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@275) $generated@@77) (= (type $generated@@276) $generated@@77)) (= (type $generated@@277) $generated@@155)) (= (type $generated@@278) $generated@@156)) (= (type $generated@@279) $generated@@157)) (= (type $generated@@280) $generated@@157)) (= $generated@@279 $generated@@280)) ($generated@@153 $generated@@275 $generated@@276 $generated@@277 ($generated@@154 $generated@@278) $generated@@279 $generated@@280))
 :pattern ( ($generated@@153 $generated@@275 $generated@@276 $generated@@277 ($generated@@154 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@281 $generated@@283)) $generated@@77)
 :pattern ( ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@284) $generated@@77) (= (type $generated@@285) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@282 $generated@@285)) ($generated@@87 $generated@@211 ($generated@@281 $generated@@284) $generated@@285))
 :pattern ( ($generated@@87 $generated@@211 ($generated@@281 $generated@@284) $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@77)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@77) (= (type $generated@@289) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@282 $generated@@289)) ($generated@@87 $generated@@213 ($generated@@286 $generated@@288) $generated@@289))
 :pattern ( ($generated@@87 $generated@@213 ($generated@@286 $generated@@288) $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (! (= (type ($generated@@290 $generated@@292 $generated@@293)) $generated@@157)
 :pattern ( ($generated@@290 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (= (type $generated@@294) $generated@@77) (= (type $generated@@295) $generated@@77)) (= (type $generated@@296) $generated@@155)) (= (type $generated@@297) $generated@@155)) (= ($generated@@186 ($generated@@290 $generated@@296 $generated@@297) ($generated@@197 $generated@@294 $generated@@295))  (and ($generated@@291 $generated@@296 $generated@@294) ($generated@@291 $generated@@297 $generated@@295))))
 :pattern ( ($generated@@186 ($generated@@290 $generated@@296 $generated@@297) ($generated@@197 $generated@@294 $generated@@295)))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) $generated@@77) (= (type $generated@@300) $generated@@77)) (= (type $generated@@301) $generated@@156)) (= (type $generated@@302) $generated@@157)) (= (type $generated@@303) $generated@@157)) (= ($generated@@298 $generated@@299 $generated@@300 ($generated@@154 $generated@@301) $generated@@302 $generated@@303) (= $generated@@302 $generated@@303)))
 :pattern ( ($generated@@298 $generated@@299 $generated@@300 ($generated@@154 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 Bool) ($generated@@306 T@U) ) (! (= (type ($generated@@304 $generated@@305 $generated@@306)) $generated@@157)
 :pattern ( ($generated@@304 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 Bool) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@77) (= (type $generated@@309) $generated@@155)) (= ($generated@@186 ($generated@@304 $generated@@308 $generated@@309) ($generated@@281 $generated@@307))  (and ($generated@@186 ($generated@@11 $generated@@308) $generated@@44) ($generated@@291 $generated@@309 $generated@@307))))
 :pattern ( ($generated@@186 ($generated@@304 $generated@@308 $generated@@309) ($generated@@281 $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@77) ($generated@@186 $generated@@211 ($generated@@281 $generated@@310)))
 :pattern ( ($generated@@186 $generated@@211 ($generated@@281 $generated@@310)))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@77) ($generated@@186 $generated@@213 ($generated@@286 $generated@@311)))
 :pattern ( ($generated@@186 $generated@@213 ($generated@@286 $generated@@311)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@157) (= (type $generated@@313) $generated@@157)) (= ($generated@@203 $generated@@312 $generated@@313) (= $generated@@312 $generated@@313)))
 :pattern ( ($generated@@203 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@157) (= (type $generated@@315) $generated@@157)) (= ($generated@@181 $generated@@314 $generated@@315) (= $generated@@314 $generated@@315)))
 :pattern ( ($generated@@181 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@77)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) ($generated@@89 $generated@@155 $generated@@4)) (= (type $generated@@319) $generated@@77)) (= ($generated@@186 $generated@@318 ($generated@@316 $generated@@319)) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@155) ($generated@@0 ($generated@@94 $generated@@318 $generated@@320))) ($generated@@291 $generated@@320 $generated@@319))
 :pattern ( ($generated@@94 $generated@@318 $generated@@320))
))))
 :pattern ( ($generated@@186 $generated@@318 ($generated@@316 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@77)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) ($generated@@89 $generated@@155 $generated@@4)) (= (type $generated@@324) $generated@@77)) (= ($generated@@186 $generated@@323 ($generated@@321 $generated@@324)) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@155) ($generated@@0 ($generated@@94 $generated@@323 $generated@@325))) ($generated@@291 $generated@@325 $generated@@324))
 :pattern ( ($generated@@94 $generated@@323 $generated@@325))
))))
 :pattern ( ($generated@@186 $generated@@323 ($generated@@321 $generated@@324)))
)))
(assert (forall (($generated@@327 Int) ) (! (= ($generated@@326 $generated@@327) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 Real) ) (! (= ($generated@@328 $generated@@329) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 (type $generated@@331)))
(= (type ($generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= ($generated@@330 $generated@@333) $generated@@333)
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@335) $generated@@157) (= (type $generated@@336) $generated@@157)) (and ($generated@@334 $generated@@335) ($generated@@334 $generated@@336))) (= ($generated@@181 $generated@@335 $generated@@336) true))
 :pattern ( ($generated@@181 $generated@@335 $generated@@336) ($generated@@334 $generated@@335))
 :pattern ( ($generated@@181 $generated@@335 $generated@@336) ($generated@@334 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@155)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@341) $generated@@157) (= (type $generated@@342) $generated@@157)) (and ($generated@@337 $generated@@341) ($generated@@337 $generated@@342))) (= ($generated@@181 $generated@@341 $generated@@342)  (and (= ($generated@@338 $generated@@341) ($generated@@338 $generated@@342)) (= ($generated@@339 $generated@@341) ($generated@@339 $generated@@342)))))
 :pattern ( ($generated@@181 $generated@@341 $generated@@342) ($generated@@337 $generated@@341))
 :pattern ( ($generated@@181 $generated@@341 $generated@@342) ($generated@@337 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@344) $generated@@77) (= (type $generated@@345) $generated@@77)) (= (type $generated@@346) $generated@@155)) (= (type $generated@@347) $generated@@155)) (= (type $generated@@348) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@282 $generated@@348)) (= ($generated@@87 ($generated@@290 $generated@@346 $generated@@347) ($generated@@197 $generated@@344 $generated@@345) $generated@@348)  (and ($generated@@343 $generated@@346 $generated@@344 $generated@@348) ($generated@@343 $generated@@347 $generated@@345 $generated@@348))))
 :pattern ( ($generated@@87 ($generated@@290 $generated@@346 $generated@@347) ($generated@@197 $generated@@344 $generated@@345) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@157) (= ($generated@@196 $generated@@349) (= ($generated@@210 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@196 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@157) (= ($generated@@334 $generated@@350) (= ($generated@@210 $generated@@350) $generated@@63)))
 :pattern ( ($generated@@334 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@157) (= ($generated@@182 $generated@@351) (= ($generated@@210 $generated@@351) $generated@@65)))
 :pattern ( ($generated@@182 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@157) (= ($generated@@337 $generated@@352) (= ($generated@@210 $generated@@352) $generated@@66)))
 :pattern ( ($generated@@337 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@157) (= ($generated@@353 $generated@@354) (= ($generated@@210 $generated@@354) $generated@@67)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@157) (= ($generated@@355 $generated@@356) (= ($generated@@210 $generated@@356) $generated@@69)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@157) ($generated@@196 $generated@@357)) (exists (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (and (and (= (type $generated@@358) $generated@@155) (= (type $generated@@359) $generated@@155)) (= $generated@@357 ($generated@@290 $generated@@358 $generated@@359)))
 :no-pattern (type $generated@@358)
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
)))
 :pattern ( ($generated@@196 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@157) ($generated@@337 $generated@@360)) (exists (($generated@@361 Bool) ($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@155) (= $generated@@360 ($generated@@304 $generated@@361 $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
)))
 :pattern ( ($generated@@337 $generated@@360))
)))
(assert  (and (and (forall (($generated@@367 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@367)) 19)) (forall (($generated@@368 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368))
))) (forall (($generated@@369 T@T) ) (! (= (type ($generated@@363 $generated@@369)) ($generated@@365 $generated@@369))
 :pattern ( ($generated@@363 $generated@@369))
))))
(assert (forall (($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@370)) 0)
 :pattern ( ($generated@@363 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@157) ($generated@@334 $generated@@371)) (= $generated@@371 $generated@@211))
 :pattern ( ($generated@@334 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@157) ($generated@@353 $generated@@372)) (= $generated@@372 $generated@@213))
 :pattern ( ($generated@@353 $generated@@372))
)))
(assert (forall (($generated@@374 Real) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@157)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@157) ($generated@@182 $generated@@375)) (exists (($generated@@376 Real) ) (= $generated@@375 ($generated@@373 $generated@@376))))
 :pattern ( ($generated@@182 $generated@@375))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@157)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@157) ($generated@@355 $generated@@379)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@157) (= $generated@@379 ($generated@@377 $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
)))
 :pattern ( ($generated@@355 $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@155)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@77) (= (type $generated@@385) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@343 ($generated@@381 $generated@@383) $generated@@384 $generated@@385) ($generated@@87 $generated@@383 $generated@@384 $generated@@385)))
 :pattern ( ($generated@@343 ($generated@@381 $generated@@383) $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@386) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@387) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@388) $generated@@155)) (= (type $generated@@389) $generated@@77)) ($generated@@167 $generated@@386 $generated@@387)) ($generated@@343 $generated@@388 $generated@@389 $generated@@386)) ($generated@@343 $generated@@388 $generated@@389 $generated@@387))
 :pattern ( ($generated@@167 $generated@@386 $generated@@387) ($generated@@343 $generated@@388 $generated@@389 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@390) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@391) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@393) $generated@@77)) ($generated@@167 $generated@@390 $generated@@391)) ($generated@@87 $generated@@392 $generated@@393 $generated@@390)) ($generated@@87 $generated@@392 $generated@@393 $generated@@391))
 :pattern ( ($generated@@167 $generated@@390 $generated@@391) ($generated@@87 $generated@@392 $generated@@393 $generated@@390))
)))
(assert (forall (($generated@@396 T@T) ) (! (= (type ($generated@@395 $generated@@396)) ($generated@@89 $generated@@396 $generated@@2))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@92 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@89 $generated@@398 $generated@@2)) (and (= (= ($generated@@394 $generated@@397) 0) (= $generated@@397 ($generated@@395 $generated@@398))) (=> (not (= ($generated@@394 $generated@@397) 0)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (< 0 ($generated ($generated@@94 $generated@@397 $generated@@399))))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (! (= (type ($generated@@400 $generated@@401)) $generated@@82)
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@77) (and (= ($generated@@85 ($generated@@281 $generated@@402)) $generated@@64) (= ($generated@@400 ($generated@@281 $generated@@402)) $generated@@73)))
 :pattern ( ($generated@@281 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@77) (and (= ($generated@@85 ($generated@@286 $generated@@403)) $generated@@68) (= ($generated@@400 ($generated@@286 $generated@@403)) $generated@@74)))
 :pattern ( ($generated@@286 $generated@@403))
)))
(assert  (and (and (and (and (forall (($generated@@409 T@T) ($generated@@410 T@T) ) (= ($generated@@1 ($generated@@406 $generated@@409 $generated@@410)) 20)) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= ($generated@@407 ($generated@@406 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@406 $generated@@411 $generated@@412))
))) (forall (($generated@@413 T@T) ($generated@@414 T@T) ) (! (= ($generated@@408 ($generated@@406 $generated@@413 $generated@@414)) $generated@@414)
 :pattern ( ($generated@@406 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@407 (type $generated@@415))))
(= (type ($generated@@404 $generated@@415)) ($generated@@89 $generated@@416 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@415))
))) (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (! (= (type ($generated@@405 $generated@@417 $generated@@418)) ($generated@@406 $generated@@417 $generated@@418))
 :pattern ( ($generated@@405 $generated@@417 $generated@@418))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@T) ) (! (let (($generated@@421 (type $generated@@419)))
 (not ($generated@@0 ($generated@@94 ($generated@@404 ($generated@@405 $generated@@421 $generated@@420)) $generated@@419))))
 :pattern ( (let (($generated@@421 (type $generated@@419)))
($generated@@94 ($generated@@404 ($generated@@405 $generated@@421 $generated@@420)) $generated@@419)))
)))
(assert  (and (and (and (and (forall (($generated@@427 T@T) ($generated@@428 T@T) ) (= ($generated@@1 ($generated@@424 $generated@@427 $generated@@428)) 21)) (forall (($generated@@429 T@T) ($generated@@430 T@T) ) (! (= ($generated@@425 ($generated@@424 $generated@@429 $generated@@430)) $generated@@429)
 :pattern ( ($generated@@424 $generated@@429 $generated@@430))
))) (forall (($generated@@431 T@T) ($generated@@432 T@T) ) (! (= ($generated@@426 ($generated@@424 $generated@@431 $generated@@432)) $generated@@432)
 :pattern ( ($generated@@424 $generated@@431 $generated@@432))
))) (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@425 (type $generated@@433))))
(= (type ($generated@@422 $generated@@433)) ($generated@@89 $generated@@434 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@433))
))) (forall (($generated@@435 T@T) ($generated@@436 T@T) ) (! (= (type ($generated@@423 $generated@@435 $generated@@436)) ($generated@@424 $generated@@435 $generated@@436))
 :pattern ( ($generated@@423 $generated@@435 $generated@@436))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@T) ) (! (let (($generated@@439 (type $generated@@437)))
 (not ($generated@@0 ($generated@@94 ($generated@@422 ($generated@@423 $generated@@439 $generated@@438)) $generated@@437))))
 :pattern ( (let (($generated@@439 (type $generated@@437)))
($generated@@94 ($generated@@422 ($generated@@423 $generated@@439 $generated@@438)) $generated@@437)))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@441) $generated@@155) (= (type $generated@@442) $generated@@155)) (and ($generated@@440 $generated@@442) (<= ($generated@@190 $generated@@442) ($generated@@190 $generated@@441)))) (and (= ($generated@@440 ($generated@@189 $generated@@441 $generated@@442)) ($generated@@440 $generated@@441)) (= ($generated@@190 ($generated@@189 $generated@@441 $generated@@442)) (- ($generated@@190 $generated@@441) ($generated@@190 $generated@@442)))))
 :pattern ( ($generated@@189 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 Int) ) (!  (=> (<= 0 $generated@@443) (and ($generated@@440 ($generated@@158 $generated@@443)) (= ($generated@@190 ($generated@@158 $generated@@443)) $generated@@443)))
 :pattern ( ($generated@@158 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@92 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@89 $generated@@445 $generated@@2)) (= ($generated@@215 $generated@@444) (forall (($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@445) (and (<= 0 ($generated ($generated@@94 $generated@@444 $generated@@446))) (<= ($generated ($generated@@94 $generated@@444 $generated@@446)) ($generated@@394 $generated@@444))))
 :pattern ( ($generated@@94 $generated@@444 $generated@@446))
)))))
 :pattern ( ($generated@@215 $generated@@444))
)))
(assert (forall (($generated@@448 T@T) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@448)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@155) ($generated@@291 $generated@@450 $generated@@175)) (and (= ($generated@@381 ($generated@@447 $generated@@2 $generated@@450)) $generated@@450) ($generated@@186 ($generated@@447 $generated@@2 $generated@@450) $generated@@175)))
 :pattern ( ($generated@@291 $generated@@450 $generated@@175))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@155) ($generated@@291 $generated@@451 $generated@@178)) (and (= ($generated@@381 ($generated@@447 $generated@@2 $generated@@451)) $generated@@451) ($generated@@186 ($generated@@447 $generated@@2 $generated@@451) $generated@@178)))
 :pattern ( ($generated@@291 $generated@@451 $generated@@178))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@408 (type $generated@@452))))
(let (($generated@@454 ($generated@@407 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@406 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@405 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@454) ($generated@@0 ($generated@@94 ($generated@@404 $generated@@452) $generated@@455)))
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@404 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@408 (type $generated@@457))))
(= (type ($generated@@456 $generated@@457)) ($generated@@89 $generated@@458 $generated@@4)))
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@408 (type $generated@@459))))
(let (($generated@@461 ($generated@@407 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@406 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@405 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@460) ($generated@@0 ($generated@@94 ($generated@@456 $generated@@459) $generated@@462)))
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@456 $generated@@459))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@426 (type $generated@@463))))
(let (($generated@@465 ($generated@@425 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@424 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@423 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) ($generated@@0 ($generated@@94 ($generated@@422 $generated@@463) $generated@@466)))
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@422 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@426 (type $generated@@468))))
(= (type ($generated@@467 $generated@@468)) ($generated@@89 $generated@@469 $generated@@4)))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@426 (type $generated@@470))))
(let (($generated@@472 ($generated@@425 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@424 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@423 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@471) ($generated@@0 ($generated@@94 ($generated@@467 $generated@@470) $generated@@473)))
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@467 $generated@@470))
)))
(assert  (=> (<= 0 $generated@@474) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (!  (=> (and (= (type $generated@@478) $generated@@77) (or ($generated@@476 $generated@@478 $generated@@479) (not (= 0 $generated@@474)))) (= ($generated@@475 $generated@@478 $generated@@479) ($generated@@477 ($generated@@326 2) $generated@@479)))
 :pattern ( ($generated@@475 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@480) $generated@@157) (= (type $generated@@481) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@282 $generated@@481) (and ($generated@@182 $generated@@480) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@77) ($generated@@87 $generated@@480 ($generated@@281 $generated@@482) $generated@@481))
 :pattern ( ($generated@@87 $generated@@480 ($generated@@281 $generated@@482) $generated@@481))
))))) ($generated@@87 ($generated@@9 ($generated@@183 $generated@@480)) $generated@@47 $generated@@481))
 :pattern ( ($generated@@87 ($generated@@9 ($generated@@183 $generated@@480)) $generated@@47 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@483) $generated@@157) (= (type $generated@@484) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@282 $generated@@484) (and ($generated@@337 $generated@@483) (exists (($generated@@485 T@U) ) (!  (and (= (type $generated@@485) $generated@@77) ($generated@@87 $generated@@483 ($generated@@281 $generated@@485) $generated@@484))
 :pattern ( ($generated@@87 $generated@@483 ($generated@@281 $generated@@485) $generated@@484))
))))) ($generated@@87 ($generated@@11 ($generated@@338 $generated@@483)) $generated@@44 $generated@@484))
 :pattern ( ($generated@@87 ($generated@@11 ($generated@@338 $generated@@483)) $generated@@44 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) ($generated@@89 $generated@@155 $generated@@2)) (= (type $generated@@487) $generated@@77)) (= ($generated@@186 $generated@@486 ($generated@@214 $generated@@487)) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@155) (< 0 ($generated ($generated@@94 $generated@@486 $generated@@488)))) ($generated@@291 $generated@@488 $generated@@487))
 :pattern ( ($generated@@94 $generated@@486 $generated@@488))
))))
 :pattern ( ($generated@@186 $generated@@486 ($generated@@214 $generated@@487)))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 Real) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) $generated@@77) (= (type $generated@@491) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@282 $generated@@491)) (= ($generated@@87 ($generated@@373 $generated@@490) ($generated@@281 $generated@@489) $generated@@491) ($generated@@87 ($generated@@9 $generated@@490) $generated@@47 $generated@@491)))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@490) ($generated@@281 $generated@@489) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@155) (= (type $generated@@493) $generated@@155)) (or (or ($generated@@171 $generated@@492 $generated@@493) (= $generated@@492 $generated@@493)) ($generated@@171 $generated@@493 $generated@@492)))
 :pattern ( ($generated@@171 $generated@@492 $generated@@493) ($generated@@171 $generated@@493 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) $generated@@77) (= (type $generated@@495) $generated@@157)) (= (type $generated@@496) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@282 $generated@@496)) (= ($generated@@87 ($generated@@377 $generated@@495) ($generated@@286 $generated@@494) $generated@@496) ($generated@@87 $generated@@495 ($generated@@286 $generated@@494) $generated@@496)))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@495) ($generated@@286 $generated@@494) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@89 $generated@@155 $generated@@4)) (= (type $generated@@498) $generated@@77)) (= (type $generated@@499) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@497 ($generated@@316 $generated@@498) $generated@@499) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@155) ($generated@@0 ($generated@@94 $generated@@497 $generated@@500))) ($generated@@343 $generated@@500 $generated@@498 $generated@@499))
 :pattern ( ($generated@@94 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@87 $generated@@497 ($generated@@316 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@89 $generated@@155 $generated@@4)) (= (type $generated@@502) $generated@@77)) (= (type $generated@@503) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@501 ($generated@@321 $generated@@502) $generated@@503) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@155) ($generated@@0 ($generated@@94 $generated@@501 $generated@@504))) ($generated@@343 $generated@@504 $generated@@502 $generated@@503))
 :pattern ( ($generated@@94 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@87 $generated@@501 ($generated@@321 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated ($generated@@94 ($generated@@395 $generated@@506) $generated@@505)) 0))
 :pattern ( (let (($generated@@506 (type $generated@@505)))
($generated@@94 ($generated@@395 $generated@@506) $generated@@505)))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) ($generated@@89 $generated@@155 $generated@@4))
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@408 (type $generated@@510))))
(let (($generated@@512 ($generated@@407 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510)) ($generated@@89 $generated@@512 $generated@@511))))
 :pattern ( ($generated@@508 $generated@@510))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) ($generated@@406 $generated@@155 $generated@@155)) (= (type $generated@@514) $generated@@155)) (= ($generated@@0 ($generated@@94 ($generated@@507 $generated@@513) $generated@@514))  (and ($generated@@0 ($generated@@94 ($generated@@404 $generated@@513) ($generated@@204 ($generated@@447 $generated@@157 $generated@@514)))) (= ($generated@@94 ($generated@@508 $generated@@513) ($generated@@204 ($generated@@447 $generated@@157 $generated@@514))) ($generated@@205 ($generated@@447 $generated@@157 $generated@@514))))))
 :pattern ( ($generated@@94 ($generated@@507 $generated@@513) $generated@@514))
)))
(assert  (and (forall (($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@517)) ($generated@@89 $generated@@155 $generated@@4))
 :pattern ( ($generated@@515 $generated@@517))
)) (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@426 (type $generated@@518))))
(let (($generated@@520 ($generated@@425 (type $generated@@518))))
(= (type ($generated@@516 $generated@@518)) ($generated@@89 $generated@@520 $generated@@519))))
 :pattern ( ($generated@@516 $generated@@518))
))))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) ($generated@@424 $generated@@155 $generated@@155)) (= (type $generated@@522) $generated@@155)) (= ($generated@@0 ($generated@@94 ($generated@@515 $generated@@521) $generated@@522))  (and ($generated@@0 ($generated@@94 ($generated@@422 $generated@@521) ($generated@@204 ($generated@@447 $generated@@157 $generated@@522)))) (= ($generated@@94 ($generated@@516 $generated@@521) ($generated@@204 ($generated@@447 $generated@@157 $generated@@522))) ($generated@@205 ($generated@@447 $generated@@157 $generated@@522))))))
 :pattern ( ($generated@@94 ($generated@@515 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(let (($generated@@526 ($generated@@407 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@406 $generated@@526 $generated@@525)) (= ($generated@@0 ($generated@@94 ($generated@@456 $generated@@523) $generated@@524)) (exists (($generated@@527 T@U) ) (!  (and (= (type $generated@@527) $generated@@526) (and ($generated@@0 ($generated@@94 ($generated@@404 $generated@@523) $generated@@527)) (= $generated@@524 ($generated@@94 ($generated@@508 $generated@@523) $generated@@527))))
 :pattern ( ($generated@@94 ($generated@@404 $generated@@523) $generated@@527))
 :pattern ( ($generated@@94 ($generated@@508 $generated@@523) $generated@@527))
))))))
 :pattern ( ($generated@@94 ($generated@@456 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(let (($generated@@531 ($generated@@425 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@424 $generated@@531 $generated@@530)) (= ($generated@@0 ($generated@@94 ($generated@@467 $generated@@528) $generated@@529)) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@531) (and ($generated@@0 ($generated@@94 ($generated@@422 $generated@@528) $generated@@532)) (= $generated@@529 ($generated@@94 ($generated@@516 $generated@@528) $generated@@532))))
 :pattern ( ($generated@@94 ($generated@@422 $generated@@528) $generated@@532))
 :pattern ( ($generated@@94 ($generated@@516 $generated@@528) $generated@@532))
))))))
 :pattern ( ($generated@@94 ($generated@@467 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@534 $generated@@535)) $generated@@77)
 :pattern ( ($generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) ($generated@@406 $generated@@155 $generated@@155)) (= (type $generated@@537) $generated@@77)) (= (type $generated@@538) $generated@@77)) (= (type $generated@@539) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@536 ($generated@@533 $generated@@537 $generated@@538) $generated@@539) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@155) ($generated@@0 ($generated@@94 ($generated@@404 $generated@@536) $generated@@540))) (and ($generated@@343 ($generated@@94 ($generated@@508 $generated@@536) $generated@@540) $generated@@538 $generated@@539) ($generated@@343 $generated@@540 $generated@@537 $generated@@539)))
 :pattern ( ($generated@@94 ($generated@@508 $generated@@536) $generated@@540))
 :pattern ( ($generated@@94 ($generated@@404 $generated@@536) $generated@@540))
))))
 :pattern ( ($generated@@87 $generated@@536 ($generated@@533 $generated@@537 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@542 $generated@@543)) $generated@@77)
 :pattern ( ($generated@@541 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) ($generated@@424 $generated@@155 $generated@@155)) (= (type $generated@@545) $generated@@77)) (= (type $generated@@546) $generated@@77)) (= (type $generated@@547) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@544 ($generated@@541 $generated@@545 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@155) ($generated@@0 ($generated@@94 ($generated@@422 $generated@@544) $generated@@548))) (and ($generated@@343 ($generated@@94 ($generated@@516 $generated@@544) $generated@@548) $generated@@546 $generated@@547) ($generated@@343 $generated@@548 $generated@@545 $generated@@547)))
 :pattern ( ($generated@@94 ($generated@@516 $generated@@544) $generated@@548))
 :pattern ( ($generated@@94 ($generated@@422 $generated@@544) $generated@@548))
))))
 :pattern ( ($generated@@87 $generated@@544 ($generated@@541 $generated@@545 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@77) (= (type $generated@@550) $generated@@157)) ($generated@@186 $generated@@550 ($generated@@286 $generated@@549))) (or ($generated@@353 $generated@@550) ($generated@@355 $generated@@550)))
 :pattern ( ($generated@@355 $generated@@550) ($generated@@186 $generated@@550 ($generated@@286 $generated@@549)))
 :pattern ( ($generated@@353 $generated@@550) ($generated@@186 $generated@@550 ($generated@@286 $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@157)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@553) $generated@@77) (= (type $generated@@554) $generated@@77)) (= (type $generated@@555) $generated@@155)) (= (type $generated@@556) $generated@@156)) (= (type $generated@@557) $generated@@157)) (= (type $generated@@558) $generated@@157)) (and ($generated@@186 $generated@@557 ($generated@@286 $generated@@553)) ($generated@@186 $generated@@558 ($generated@@286 $generated@@554)))) (= ($generated@@153 $generated@@553 $generated@@554 $generated@@555 ($generated@@154 $generated@@556) $generated@@557 $generated@@558)  (and (=> (< 0 ($generated@@190 $generated@@555)) (or (and ($generated@@353 $generated@@557) ($generated@@353 $generated@@558)) (and (and ($generated@@355 $generated@@557) ($generated@@355 $generated@@558)) (=> (and ($generated@@355 $generated@@557) ($generated@@355 $generated@@558)) ($generated@@153 $generated@@553 $generated@@554 ($generated@@189 $generated@@555 ($generated@@158 1)) $generated@@556 ($generated@@551 $generated@@557) ($generated@@551 $generated@@558)))))) (=> (and (not (= $generated@@555 ($generated@@158 0))) (= ($generated@@190 $generated@@555) 0)) ($generated@@298 $generated@@553 $generated@@554 $generated@@556 $generated@@557 $generated@@558)))))
 :pattern ( ($generated@@153 $generated@@553 $generated@@554 $generated@@555 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 Bool) ($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@155) (= ($generated@@338 ($generated@@304 $generated@@559 $generated@@560)) $generated@@559))
 :pattern ( ($generated@@304 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@2) (= ($generated@@186 $generated@@562 $generated@@175)  (and (<= ($generated@@326 2) ($generated $generated@@562)) (forall (($generated@@563 Int) )  (=> true (=> (and (<= ($generated@@326 2) $generated@@563) (< $generated@@563 ($generated $generated@@562))) (not (= ($generated@@561 ($generated $generated@@562) $generated@@563) 0))))))))
 :pattern ( ($generated@@186 $generated@@562 $generated@@175))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@564) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@565) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@566) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@564 $generated@@566))) (and ($generated@@167 $generated@@564 $generated@@565) ($generated@@167 $generated@@565 $generated@@566))) ($generated@@167 $generated@@564 $generated@@566))
 :pattern ( ($generated@@167 $generated@@564 $generated@@565) ($generated@@167 $generated@@565 $generated@@566))
)))
(assert  (=> (<= 0 $generated@@474) (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (and (= (type $generated@@567) $generated@@77) (or ($generated@@476 $generated@@567 $generated@@568) (not (= 0 $generated@@474)))) true)
 :pattern ( ($generated@@475 $generated@@567 $generated@@568))
))))
(assert (forall (($generated@@570 T@T) ) (! (= (type ($generated@@569 $generated@@570)) ($generated@@89 $generated@@570 $generated@@4))
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@426 (type $generated@@571))))
(let (($generated@@573 ($generated@@425 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@424 $generated@@573 $generated@@572)) (= (= $generated@@571 ($generated@@423 $generated@@573 $generated@@572)) (= ($generated@@422 $generated@@571) ($generated@@569 $generated@@573))))))
 :pattern ( ($generated@@422 $generated@@571))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@426 (type $generated@@574))))
(let (($generated@@576 ($generated@@425 (type $generated@@574))))
 (=> (= (type $generated@@574) ($generated@@424 $generated@@576 $generated@@575)) (= (= $generated@@574 ($generated@@423 $generated@@576 $generated@@575)) (= ($generated@@467 $generated@@574) ($generated@@569 $generated@@575))))))
 :pattern ( ($generated@@467 $generated@@574))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@426 (type $generated@@577))))
(let (($generated@@579 ($generated@@425 (type $generated@@577))))
 (=> (= (type $generated@@577) ($generated@@424 $generated@@579 $generated@@578)) (= (= $generated@@577 ($generated@@423 $generated@@579 $generated@@578)) (= ($generated@@515 $generated@@577) ($generated@@569 $generated@@155))))))
 :pattern ( ($generated@@515 $generated@@577))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@408 (type $generated@@580))))
(let (($generated@@582 ($generated@@407 (type $generated@@580))))
 (=> (= (type $generated@@580) ($generated@@406 $generated@@582 $generated@@581)) (or (= $generated@@580 ($generated@@405 $generated@@582 $generated@@581)) (exists (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (and (and (= (type $generated@@583) $generated@@155) (= (type $generated@@584) $generated@@155)) ($generated@@0 ($generated@@94 ($generated@@507 $generated@@580) ($generated@@381 ($generated@@290 $generated@@583 $generated@@584)))))
 :no-pattern (type $generated@@583)
 :no-pattern (type $generated@@584)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
 :no-pattern ($generated $generated@@584)
 :no-pattern ($generated@@0 $generated@@584)
))))))
 :pattern ( ($generated@@507 $generated@@580))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@426 (type $generated@@585))))
(let (($generated@@587 ($generated@@425 (type $generated@@585))))
 (=> (= (type $generated@@585) ($generated@@424 $generated@@587 $generated@@586)) (or (= $generated@@585 ($generated@@423 $generated@@587 $generated@@586)) (exists (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (and (and (= (type $generated@@588) $generated@@155) (= (type $generated@@589) $generated@@155)) ($generated@@0 ($generated@@94 ($generated@@515 $generated@@585) ($generated@@381 ($generated@@290 $generated@@588 $generated@@589)))))
 :no-pattern (type $generated@@588)
 :no-pattern (type $generated@@589)
 :no-pattern ($generated $generated@@588)
 :no-pattern ($generated@@0 $generated@@588)
 :no-pattern ($generated $generated@@589)
 :no-pattern ($generated@@0 $generated@@589)
))))))
 :pattern ( ($generated@@515 $generated@@585))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@155) ($generated@@291 $generated@@590 $generated@@46)) (and (= ($generated@@381 ($generated@@447 $generated@@2 $generated@@590)) $generated@@590) ($generated@@186 ($generated@@447 $generated@@2 $generated@@590) $generated@@46)))
 :pattern ( ($generated@@291 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@155) ($generated@@291 $generated@@591 $generated@@47)) (and (= ($generated@@381 ($generated@@447 $generated@@3 $generated@@591)) $generated@@591) ($generated@@186 ($generated@@447 $generated@@3 $generated@@591) $generated@@47)))
 :pattern ( ($generated@@291 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@155) ($generated@@291 $generated@@592 $generated@@44)) (and (= ($generated@@381 ($generated@@447 $generated@@4 $generated@@592)) $generated@@592) ($generated@@186 ($generated@@447 $generated@@4 $generated@@592) $generated@@44)))
 :pattern ( ($generated@@291 $generated@@592 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@593) 22))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@155) ($generated@@291 $generated@@594 $generated@@45)) (and (= ($generated@@381 ($generated@@447 $generated@@593 $generated@@594)) $generated@@594) ($generated@@186 ($generated@@447 $generated@@593 $generated@@594) $generated@@45)))
 :pattern ( ($generated@@291 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@77) (= ($generated@@291 ($generated@@381 $generated@@595) $generated@@596) ($generated@@186 $generated@@595 $generated@@596)))
 :pattern ( ($generated@@291 ($generated@@381 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@155) (<= 0 ($generated@@190 $generated@@597)))
 :pattern ( ($generated@@190 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@92 (type $generated@@598))))
 (=> (= (type $generated@@598) ($generated@@89 $generated@@599 $generated@@2)) (<= 0 ($generated@@394 $generated@@598))))
 :pattern ( ($generated@@394 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@366 (type $generated@@600))))
 (=> (= (type $generated@@600) ($generated@@365 $generated@@601)) (<= 0 ($generated@@364 $generated@@600))))
 :pattern ( ($generated@@364 $generated@@600))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@77)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@77) (= (type $generated@@605) $generated@@77)) (= ($generated@@602 ($generated@@533 $generated@@604 $generated@@605)) $generated@@604))
 :pattern ( ($generated@@533 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@77)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@77) (= (type $generated@@609) $generated@@77)) (= ($generated@@606 ($generated@@533 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@533 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@77) (= (type $generated@@611) $generated@@77)) (= ($generated@@85 ($generated@@533 $generated@@610 $generated@@611)) $generated@@58))
 :pattern ( ($generated@@533 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@77)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@77) (= (type $generated@@615) $generated@@77)) (= ($generated@@612 ($generated@@541 $generated@@614 $generated@@615)) $generated@@614))
 :pattern ( ($generated@@541 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@77)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@77) (= (type $generated@@619) $generated@@77)) (= ($generated@@616 ($generated@@541 $generated@@618 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@541 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@77) (= (type $generated@@621) $generated@@77)) (= ($generated@@85 ($generated@@541 $generated@@620 $generated@@621)) $generated@@59))
 :pattern ( ($generated@@541 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@155) (= (type $generated@@623) $generated@@155)) (= ($generated@@210 ($generated@@290 $generated@@622 $generated@@623)) $generated@@61))
 :pattern ( ($generated@@290 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@77)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@77) (= (type $generated@@627) $generated@@77)) (= ($generated@@624 ($generated@@197 $generated@@626 $generated@@627)) $generated@@626))
 :pattern ( ($generated@@197 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@77)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@77) (= (type $generated@@631) $generated@@77)) (= ($generated@@628 ($generated@@197 $generated@@630 $generated@@631)) $generated@@631))
 :pattern ( ($generated@@197 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@155) (= (type $generated@@633) $generated@@155)) (= ($generated@@204 ($generated@@290 $generated@@632 $generated@@633)) $generated@@632))
 :pattern ( ($generated@@290 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@155) (= (type $generated@@635) $generated@@155)) (= ($generated@@205 ($generated@@290 $generated@@634 $generated@@635)) $generated@@635))
 :pattern ( ($generated@@290 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 Bool) ($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@155) (= ($generated@@210 ($generated@@304 $generated@@636 $generated@@637)) $generated@@66))
 :pattern ( ($generated@@304 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 Bool) ($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@155) (= ($generated@@339 ($generated@@304 $generated@@638 $generated@@639)) $generated@@639))
 :pattern ( ($generated@@304 $generated@@638 $generated@@639))
)))
(assert  (and (forall (($generated@@642 T@U) ) (! (= (type ($generated@@640 $generated@@642)) $generated@@77)
 :pattern ( ($generated@@640 $generated@@642))
)) (forall (($generated@@643 T@U) ($generated@@644 Int) ) (! (let (($generated@@645 ($generated@@366 (type $generated@@643))))
(= (type ($generated@@641 $generated@@643 $generated@@644)) $generated@@645))
 :pattern ( ($generated@@641 $generated@@643 $generated@@644))
))))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@365 $generated@@155)) (= (type $generated@@647) $generated@@77)) (= (type $generated@@648) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@646 ($generated@@640 $generated@@647) $generated@@648) (forall (($generated@@649 Int) ) (!  (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@364 $generated@@646))) ($generated@@343 ($generated@@641 $generated@@646 $generated@@649) $generated@@647 $generated@@648))
 :pattern ( ($generated@@641 $generated@@646 $generated@@649))
))))
 :pattern ( ($generated@@87 $generated@@646 ($generated@@640 $generated@@647) $generated@@648))
)))
(assert (forall (($generated@@651 Int) ) (! (= ($generated@@650 ($generated@@88 $generated@@651)) $generated@@651)
 :pattern ( ($generated@@88 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@77)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@77) (= ($generated@@652 ($generated@@316 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@316 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@77) (= ($generated@@85 ($generated@@316 $generated@@655)) $generated@@54))
 :pattern ( ($generated@@316 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@77)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@77) (= ($generated@@656 ($generated@@321 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@321 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@77) (= ($generated@@85 ($generated@@321 $generated@@659)) $generated@@55))
 :pattern ( ($generated@@321 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ) (! (= (type ($generated@@660 $generated@@661)) $generated@@77)
 :pattern ( ($generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@77) (= ($generated@@660 ($generated@@214 $generated@@662)) $generated@@662))
 :pattern ( ($generated@@214 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@77) (= ($generated@@85 ($generated@@214 $generated@@663)) $generated@@56))
 :pattern ( ($generated@@214 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ) (! (= (type ($generated@@664 $generated@@665)) $generated@@77)
 :pattern ( ($generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@77) (= ($generated@@664 ($generated@@640 $generated@@666)) $generated@@666))
 :pattern ( ($generated@@640 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@77) (= ($generated@@85 ($generated@@640 $generated@@667)) $generated@@57))
 :pattern ( ($generated@@640 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ) (! (= (type ($generated@@668 $generated@@669)) $generated@@77)
 :pattern ( ($generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@77) (= ($generated@@668 ($generated@@281 $generated@@670)) $generated@@670))
 :pattern ( ($generated@@281 $generated@@670))
)))
(assert (forall (($generated@@671 Real) ) (! (= ($generated@@210 ($generated@@373 $generated@@671)) $generated@@65)
 :pattern ( ($generated@@373 $generated@@671))
)))
(assert (forall (($generated@@672 Real) ) (! (= ($generated@@183 ($generated@@373 $generated@@672)) $generated@@672)
 :pattern ( ($generated@@373 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ) (! (= (type ($generated@@673 $generated@@674)) $generated@@77)
 :pattern ( ($generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@77) (= ($generated@@673 ($generated@@286 $generated@@675)) $generated@@675))
 :pattern ( ($generated@@286 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@157) (= ($generated@@210 ($generated@@377 $generated@@676)) $generated@@69))
 :pattern ( ($generated@@377 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@157) (= ($generated@@551 ($generated@@377 $generated@@677)) $generated@@677))
 :pattern ( ($generated@@377 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ) (! (let (($generated@@679 (type $generated@@678)))
(= ($generated@@447 $generated@@679 ($generated@@381 $generated@@678)) $generated@@678))
 :pattern ( ($generated@@381 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@680) ($generated@@406 $generated@@155 $generated@@155)) (= (type $generated@@681) $generated@@77)) (= (type $generated@@682) $generated@@77)) (= ($generated@@186 $generated@@680 ($generated@@533 $generated@@681 $generated@@682)) (forall (($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@155) ($generated@@0 ($generated@@94 ($generated@@404 $generated@@680) $generated@@683))) (and ($generated@@291 ($generated@@94 ($generated@@508 $generated@@680) $generated@@683) $generated@@682) ($generated@@291 $generated@@683 $generated@@681)))
 :pattern ( ($generated@@94 ($generated@@508 $generated@@680) $generated@@683))
 :pattern ( ($generated@@94 ($generated@@404 $generated@@680) $generated@@683))
))))
 :pattern ( ($generated@@186 $generated@@680 ($generated@@533 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@684) ($generated@@424 $generated@@155 $generated@@155)) (= (type $generated@@685) $generated@@77)) (= (type $generated@@686) $generated@@77)) (= ($generated@@186 $generated@@684 ($generated@@541 $generated@@685 $generated@@686)) (forall (($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@155) ($generated@@0 ($generated@@94 ($generated@@422 $generated@@684) $generated@@687))) (and ($generated@@291 ($generated@@94 ($generated@@516 $generated@@684) $generated@@687) $generated@@686) ($generated@@291 $generated@@687 $generated@@685)))
 :pattern ( ($generated@@94 ($generated@@516 $generated@@684) $generated@@687))
 :pattern ( ($generated@@94 ($generated@@422 $generated@@684) $generated@@687))
))))
 :pattern ( ($generated@@186 $generated@@684 ($generated@@541 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@155) (= (type $generated@@689) $generated@@155)) (and (and (and (=> ($generated@@171 $generated@@688 $generated@@689) (not (= $generated@@688 $generated@@689))) (=> (and ($generated@@440 $generated@@688) (not ($generated@@440 $generated@@689))) ($generated@@171 $generated@@688 $generated@@689))) (=> (and ($generated@@440 $generated@@688) ($generated@@440 $generated@@689)) (= ($generated@@171 $generated@@688 $generated@@689) (< ($generated@@190 $generated@@688) ($generated@@190 $generated@@689))))) (=> (and ($generated@@171 $generated@@688 $generated@@689) ($generated@@440 $generated@@689)) ($generated@@440 $generated@@688))))
 :pattern ( ($generated@@171 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 Real) ) (!  (=> (= (type $generated@@690) $generated@@77) (= ($generated@@186 ($generated@@373 $generated@@691) ($generated@@281 $generated@@690)) ($generated@@186 ($generated@@9 $generated@@691) $generated@@47)))
 :pattern ( ($generated@@186 ($generated@@373 $generated@@691) ($generated@@281 $generated@@690)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) $generated@@155) (= (type $generated@@695) $generated@@155)) (< ($generated@@692 $generated@@694) ($generated@@693 ($generated@@290 $generated@@694 $generated@@695))))
 :pattern ( ($generated@@290 $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@155) (= (type $generated@@697) $generated@@155)) (< ($generated@@692 $generated@@697) ($generated@@693 ($generated@@290 $generated@@696 $generated@@697))))
 :pattern ( ($generated@@290 $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@698 Bool) ($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@155) (< ($generated@@692 $generated@@699) ($generated@@693 ($generated@@304 $generated@@698 $generated@@699))))
 :pattern ( ($generated@@304 $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (and (= (type $generated@@700) $generated@@155) (= (type $generated@@701) $generated@@77)) (= (type $generated@@702) $generated@@77)) ($generated@@291 $generated@@700 ($generated@@533 $generated@@701 $generated@@702))) (and (= ($generated@@381 ($generated@@447 ($generated@@406 $generated@@155 $generated@@155) $generated@@700)) $generated@@700) ($generated@@186 ($generated@@447 ($generated@@406 $generated@@155 $generated@@155) $generated@@700) ($generated@@533 $generated@@701 $generated@@702))))
 :pattern ( ($generated@@291 $generated@@700 ($generated@@533 $generated@@701 $generated@@702)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (and (= (type $generated@@703) $generated@@155) (= (type $generated@@704) $generated@@77)) (= (type $generated@@705) $generated@@77)) ($generated@@291 $generated@@703 ($generated@@541 $generated@@704 $generated@@705))) (and (= ($generated@@381 ($generated@@447 ($generated@@424 $generated@@155 $generated@@155) $generated@@703)) $generated@@703) ($generated@@186 ($generated@@447 ($generated@@424 $generated@@155 $generated@@155) $generated@@703) ($generated@@541 $generated@@704 $generated@@705))))
 :pattern ( ($generated@@291 $generated@@703 ($generated@@541 $generated@@704 $generated@@705)))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) $generated@@77) (= (type $generated@@707) $generated@@77)) (= (type $generated@@708) $generated@@155)) ($generated@@291 $generated@@708 ($generated@@197 $generated@@706 $generated@@707))) (and (= ($generated@@381 ($generated@@447 $generated@@157 $generated@@708)) $generated@@708) ($generated@@186 ($generated@@447 $generated@@157 $generated@@708) ($generated@@197 $generated@@706 $generated@@707))))
 :pattern ( ($generated@@291 $generated@@708 ($generated@@197 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@709) $generated@@77) (= (type $generated@@710) $generated@@77)) (= (type $generated@@711) $generated@@156)) (= (type $generated@@712) $generated@@157)) (= (type $generated@@713) $generated@@157)) (= ($generated@@298 $generated@@709 $generated@@710 ($generated@@154 $generated@@711) $generated@@712 $generated@@713) (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@155) ($generated@@153 $generated@@709 $generated@@710 $generated@@714 ($generated@@154 $generated@@711) $generated@@712 $generated@@713))
 :pattern ( ($generated@@153 $generated@@709 $generated@@710 $generated@@714 ($generated@@154 $generated@@711) $generated@@712 $generated@@713))
))))
 :pattern ( ($generated@@298 $generated@@709 $generated@@710 ($generated@@154 $generated@@711) $generated@@712 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@77) (= (type $generated@@716) $generated@@157)) ($generated@@186 $generated@@716 ($generated@@281 $generated@@715))) (or (or ($generated@@334 $generated@@716) ($generated@@182 $generated@@716)) ($generated@@337 $generated@@716)))
 :pattern ( ($generated@@337 $generated@@716) ($generated@@186 $generated@@716 ($generated@@281 $generated@@715)))
 :pattern ( ($generated@@182 $generated@@716) ($generated@@186 $generated@@716 ($generated@@281 $generated@@715)))
 :pattern ( ($generated@@334 $generated@@716) ($generated@@186 $generated@@716 ($generated@@281 $generated@@715)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (= (type $generated@@717) $generated@@157) (= (type $generated@@718) $generated@@77)) (= (type $generated@@719) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@282 $generated@@719) (and ($generated@@337 $generated@@717) ($generated@@87 $generated@@717 ($generated@@281 $generated@@718) $generated@@719)))) ($generated@@343 ($generated@@339 $generated@@717) $generated@@718 $generated@@719))
 :pattern ( ($generated@@343 ($generated@@339 $generated@@717) $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ) (! (let (($generated@@721 (type $generated@@720)))
 (not ($generated@@0 ($generated@@94 ($generated@@569 $generated@@721) $generated@@720))))
 :pattern ( (let (($generated@@721 (type $generated@@720)))
($generated@@94 ($generated@@569 $generated@@721) $generated@@720)))
)))
(assert (forall (($generated@@722 Int) ($generated@@723 Int) ) (! (= ($generated@@561 $generated@@722 $generated@@723) (mod $generated@@722 $generated@@723))
 :pattern ( ($generated@@561 $generated@@722 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@77) (= (type $generated@@725) $generated@@77)) (and (= ($generated@@85 ($generated@@197 $generated@@724 $generated@@725)) $generated@@62) (= ($generated@@400 ($generated@@197 $generated@@724 $generated@@725)) $generated@@72)))
 :pattern ( ($generated@@197 $generated@@724 $generated@@725))
)))
(assert  (=> (<= 0 $generated@@474) (forall (($generated@@726 T@U) ($generated@@727 Int) ) (!  (=> (and (= (type $generated@@726) $generated@@77) (or ($generated@@476 $generated@@726 ($generated@@326 $generated@@727)) (not (= 0 $generated@@474)))) (= ($generated@@475 $generated@@726 ($generated@@326 $generated@@727)) ($generated@@326 ($generated@@477 ($generated@@326 2) ($generated@@326 $generated@@727)))))
 :weight 3
 :pattern ( ($generated@@475 $generated@@726 ($generated@@326 $generated@@727)))
))))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@728) $generated@@77) (= (type $generated@@729) $generated@@77)) (= (type $generated@@730) $generated@@156)) (= (type $generated@@731) $generated@@157)) (= (type $generated@@732) $generated@@157)) (and ($generated@@186 $generated@@731 ($generated@@286 $generated@@728)) ($generated@@186 $generated@@732 ($generated@@286 $generated@@729)))) (= ($generated@@298 $generated@@728 $generated@@729 ($generated@@154 $generated@@730) $generated@@731 $generated@@732)  (or (and ($generated@@353 $generated@@731) ($generated@@353 $generated@@732)) (and (and ($generated@@355 $generated@@731) ($generated@@355 $generated@@732)) (=> (and ($generated@@355 $generated@@731) ($generated@@355 $generated@@732)) ($generated@@298 $generated@@728 $generated@@729 $generated@@730 ($generated@@551 $generated@@731) ($generated@@551 $generated@@732)))))))
 :pattern ( ($generated@@298 $generated@@728 $generated@@729 ($generated@@154 $generated@@730) $generated@@731 $generated@@732))
)))
(assert (forall (($generated@@733 Int) ($generated@@734 Int) ) (! (= ($generated@@477 $generated@@733 $generated@@734) (* $generated@@733 $generated@@734))
 :pattern ( ($generated@@477 $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@157) (= ($generated@@692 ($generated@@381 $generated@@735)) ($generated@@693 $generated@@735)))
 :pattern ( ($generated@@692 ($generated@@381 $generated@@735)))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@736) $generated@@155) ($generated@@291 $generated@@736 ($generated@@88 0))) (and (= ($generated@@381 ($generated@@447 $generated@@2 $generated@@736)) $generated@@736) ($generated@@186 ($generated@@447 ($generated@@89 $generated@@155 $generated@@4) $generated@@736) ($generated@@88 0))))
 :pattern ( ($generated@@291 $generated@@736 ($generated@@88 0)))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (= (type $generated@@737) $generated@@155) (= (type $generated@@738) $generated@@77)) ($generated@@291 $generated@@737 ($generated@@316 $generated@@738))) (and (= ($generated@@381 ($generated@@447 ($generated@@89 $generated@@155 $generated@@4) $generated@@737)) $generated@@737) ($generated@@186 ($generated@@447 ($generated@@89 $generated@@155 $generated@@4) $generated@@737) ($generated@@316 $generated@@738))))
 :pattern ( ($generated@@291 $generated@@737 ($generated@@316 $generated@@738)))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (and (= (type $generated@@739) $generated@@155) (= (type $generated@@740) $generated@@77)) ($generated@@291 $generated@@739 ($generated@@321 $generated@@740))) (and (= ($generated@@381 ($generated@@447 ($generated@@89 $generated@@155 $generated@@4) $generated@@739)) $generated@@739) ($generated@@186 ($generated@@447 ($generated@@89 $generated@@155 $generated@@4) $generated@@739) ($generated@@321 $generated@@740))))
 :pattern ( ($generated@@291 $generated@@739 ($generated@@321 $generated@@740)))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (= (type $generated@@741) $generated@@155) (= (type $generated@@742) $generated@@77)) ($generated@@291 $generated@@741 ($generated@@214 $generated@@742))) (and (= ($generated@@381 ($generated@@447 ($generated@@89 $generated@@155 $generated@@2) $generated@@741)) $generated@@741) ($generated@@186 ($generated@@447 ($generated@@89 $generated@@155 $generated@@2) $generated@@741) ($generated@@214 $generated@@742))))
 :pattern ( ($generated@@291 $generated@@741 ($generated@@214 $generated@@742)))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (and (= (type $generated@@743) $generated@@155) (= (type $generated@@744) $generated@@77)) ($generated@@291 $generated@@743 ($generated@@640 $generated@@744))) (and (= ($generated@@381 ($generated@@447 ($generated@@365 $generated@@155) $generated@@743)) $generated@@743) ($generated@@186 ($generated@@447 ($generated@@365 $generated@@155) $generated@@743) ($generated@@640 $generated@@744))))
 :pattern ( ($generated@@291 $generated@@743 ($generated@@640 $generated@@744)))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (and (= (type $generated@@745) $generated@@77) (= (type $generated@@746) $generated@@155)) ($generated@@291 $generated@@746 ($generated@@281 $generated@@745))) (and (= ($generated@@381 ($generated@@447 $generated@@157 $generated@@746)) $generated@@746) ($generated@@186 ($generated@@447 $generated@@157 $generated@@746) ($generated@@281 $generated@@745))))
 :pattern ( ($generated@@291 $generated@@746 ($generated@@281 $generated@@745)))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (= (type $generated@@747) $generated@@77) (= (type $generated@@748) $generated@@155)) ($generated@@291 $generated@@748 ($generated@@286 $generated@@747))) (and (= ($generated@@381 ($generated@@447 $generated@@157 $generated@@748)) $generated@@748) ($generated@@186 ($generated@@447 $generated@@157 $generated@@748) ($generated@@286 $generated@@747))))
 :pattern ( ($generated@@291 $generated@@748 ($generated@@286 $generated@@747)))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@749) $generated@@155) ($generated@@291 $generated@@749 ($generated@@88 11))) (and (= ($generated@@381 ($generated@@447 $generated@@145 $generated@@749)) $generated@@749) ($generated@@186 ($generated@@447 $generated@@145 $generated@@749) ($generated@@88 11))))
 :pattern ( ($generated@@291 $generated@@749 ($generated@@88 11)))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@750) $generated@@77) (= (type $generated@@751) $generated@@157)) (= ($generated@@186 ($generated@@377 $generated@@751) ($generated@@286 $generated@@750)) ($generated@@186 $generated@@751 ($generated@@286 $generated@@750))))
 :pattern ( ($generated@@186 ($generated@@377 $generated@@751) ($generated@@286 $generated@@750)))
)))
(assert (forall (($generated@@752 T@U) ) (!  (=> (and (= (type $generated@@752) $generated@@155) ($generated@@440 $generated@@752)) (= $generated@@752 ($generated@@158 ($generated@@190 $generated@@752))))
 :pattern ( ($generated@@190 $generated@@752))
 :pattern ( ($generated@@440 $generated@@752))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (and (and (= (type $generated@@753) $generated@@157) (= (type $generated@@754) $generated@@77)) (= (type $generated@@755) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@282 $generated@@755) (and ($generated@@355 $generated@@753) ($generated@@87 $generated@@753 ($generated@@286 $generated@@754) $generated@@755)))) ($generated@@87 ($generated@@551 $generated@@753) ($generated@@286 $generated@@754) $generated@@755))
 :pattern ( ($generated@@87 ($generated@@551 $generated@@753) ($generated@@286 $generated@@754) $generated@@755))
)))
(assert (= ($generated@@85 $generated@@175) $generated@@70))
(assert (= ($generated@@400 $generated@@175) $generated@@75))
(assert (= ($generated@@85 $generated@@178) $generated@@71))
(assert (= ($generated@@400 $generated@@178) $generated@@76))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@756) ($generated@@89 $generated@@155 $generated@@2)) (= (type $generated@@757) $generated@@77)) (= (type $generated@@758) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@756 ($generated@@214 $generated@@757) $generated@@758) (forall (($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@759) $generated@@155) (< 0 ($generated ($generated@@94 $generated@@756 $generated@@759)))) ($generated@@343 $generated@@759 $generated@@757 $generated@@758))
 :pattern ( ($generated@@94 $generated@@756 $generated@@759))
))))
 :pattern ( ($generated@@87 $generated@@756 ($generated@@214 $generated@@757) $generated@@758))
)))
(assert (= $generated@@211 ($generated@@330 $generated@@211)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (and (= (type $generated@@760) $generated@@155) (= (type $generated@@761) $generated@@155)) (and ($generated@@440 $generated@@761) (<= ($generated@@190 $generated@@761) ($generated@@190 $generated@@760)))) (or (and (= $generated@@761 ($generated@@158 0)) (= ($generated@@189 $generated@@760 $generated@@761) $generated@@760)) (and (not (= $generated@@761 ($generated@@158 0))) ($generated@@171 ($generated@@189 $generated@@760 $generated@@761) $generated@@760))))
 :pattern ( ($generated@@189 $generated@@760 $generated@@761))
)))
(assert (forall (($generated@@762 T@U) ($generated@@763 T@U) ($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@762) $generated@@77) (= (type $generated@@763) $generated@@77)) (= (type $generated@@764) $generated@@155)) (= (type $generated@@765) $generated@@156)) (= (type $generated@@766) $generated@@157)) (= (type $generated@@767) $generated@@157)) (= (type $generated@@768) $generated@@155)) (and ($generated@@171 $generated@@764 $generated@@768) ($generated@@153 $generated@@762 $generated@@763 $generated@@768 ($generated@@154 $generated@@765) $generated@@766 $generated@@767))) ($generated@@153 $generated@@762 $generated@@763 $generated@@764 ($generated@@154 $generated@@765) $generated@@766 $generated@@767))
 :pattern ( ($generated@@153 $generated@@762 $generated@@763 $generated@@764 ($generated@@154 $generated@@765) $generated@@766 $generated@@767) ($generated@@153 $generated@@762 $generated@@763 $generated@@768 ($generated@@154 $generated@@765) $generated@@766 $generated@@767))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@769) $generated@@77) (= (type $generated@@770) $generated@@77)) (= (type $generated@@771) $generated@@156)) (= (type $generated@@772) $generated@@157)) (= (type $generated@@773) $generated@@157)) (= ($generated@@298 $generated@@769 $generated@@770 ($generated@@154 $generated@@771) $generated@@772 $generated@@773) ($generated@@298 $generated@@769 $generated@@770 $generated@@771 $generated@@772 $generated@@773)))
 :pattern ( ($generated@@298 $generated@@769 $generated@@770 ($generated@@154 $generated@@771) $generated@@772 $generated@@773))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (and (and (= (type $generated@@774) $generated@@157) (= (type $generated@@775) $generated@@77)) (= (type $generated@@776) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@282 $generated@@776) (and ($generated@@196 $generated@@774) (exists (($generated@@777 T@U) ) (!  (and (= (type $generated@@777) $generated@@77) ($generated@@87 $generated@@774 ($generated@@197 $generated@@775 $generated@@777) $generated@@776))
 :pattern ( ($generated@@87 $generated@@774 ($generated@@197 $generated@@775 $generated@@777) $generated@@776))
))))) ($generated@@343 ($generated@@204 $generated@@774) $generated@@775 $generated@@776))
 :pattern ( ($generated@@343 ($generated@@204 $generated@@774) $generated@@775 $generated@@776))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (and (and (= (type $generated@@778) $generated@@157) (= (type $generated@@779) $generated@@77)) (= (type $generated@@780) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@282 $generated@@780) (and ($generated@@196 $generated@@778) (exists (($generated@@781 T@U) ) (!  (and (= (type $generated@@781) $generated@@77) ($generated@@87 $generated@@778 ($generated@@197 $generated@@781 $generated@@779) $generated@@780))
 :pattern ( ($generated@@87 $generated@@778 ($generated@@197 $generated@@781 $generated@@779) $generated@@780))
))))) ($generated@@343 ($generated@@205 $generated@@778) $generated@@779 $generated@@780))
 :pattern ( ($generated@@343 ($generated@@205 $generated@@778) $generated@@779 $generated@@780))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 Bool) ($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (and (and (= (type $generated@@782) $generated@@77) (= (type $generated@@784) $generated@@155)) (= (type $generated@@785) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@282 $generated@@785)) (= ($generated@@87 ($generated@@304 $generated@@783 $generated@@784) ($generated@@281 $generated@@782) $generated@@785)  (and ($generated@@87 ($generated@@11 $generated@@783) $generated@@44 $generated@@785) ($generated@@343 $generated@@784 $generated@@782 $generated@@785))))
 :pattern ( ($generated@@87 ($generated@@304 $generated@@783 $generated@@784) ($generated@@281 $generated@@782) $generated@@785))
)))
(assert (forall (($generated@@786 T@U) ) (!  (=> (= (type $generated@@786) $generated@@2) (= ($generated@@186 $generated@@786 $generated@@178)  (and (<= ($generated@@326 0) ($generated $generated@@786)) (< ($generated $generated@@786) 25))))
 :pattern ( ($generated@@186 $generated@@786 $generated@@178))
)))
(assert (forall (($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (= (type $generated@@787) $generated@@155) (= (type $generated@@788) $generated@@155)) (= ($generated@@290 ($generated@@330 $generated@@787) ($generated@@330 $generated@@788)) ($generated@@330 ($generated@@290 $generated@@787 $generated@@788))))
 :pattern ( ($generated@@290 ($generated@@330 $generated@@787) ($generated@@330 $generated@@788)))
)))
(assert (forall (($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (= (type $generated@@789) $generated@@4) (= (type $generated@@790) $generated@@155)) (= ($generated@@304 ($generated@@0 ($generated@@330 $generated@@789)) ($generated@@330 $generated@@790)) ($generated@@330 ($generated@@304 ($generated@@0 $generated@@789) $generated@@790))))
 :pattern ( ($generated@@304 ($generated@@0 ($generated@@330 $generated@@789)) ($generated@@330 $generated@@790)))
)))
(assert (forall (($generated@@791 Int) ) (! (= ($generated@@381 ($generated@@8 ($generated@@326 $generated@@791))) ($generated@@330 ($generated@@381 ($generated@@8 $generated@@791))))
 :pattern ( ($generated@@381 ($generated@@8 ($generated@@326 $generated@@791))))
)))
(assert (forall (($generated@@792 Real) ) (! (= ($generated@@381 ($generated@@9 ($generated@@328 $generated@@792))) ($generated@@330 ($generated@@381 ($generated@@9 $generated@@792))))
 :pattern ( ($generated@@381 ($generated@@9 ($generated@@328 $generated@@792))))
)))
(assert (forall (($generated@@793 Real) ) (! (= ($generated@@373 ($generated@@328 $generated@@793)) ($generated@@330 ($generated@@373 $generated@@793)))
 :pattern ( ($generated@@373 ($generated@@328 $generated@@793)))
)))
(assert (forall (($generated@@794 T@U) ) (! (= ($generated@@381 ($generated@@330 $generated@@794)) ($generated@@330 ($generated@@381 $generated@@794)))
 :pattern ( ($generated@@381 ($generated@@330 $generated@@794)))
)))
(assert (forall (($generated@@795 T@U) ) (! (let (($generated@@796 ($generated@@366 (type $generated@@795))))
 (=> (and (= (type $generated@@795) ($generated@@365 $generated@@796)) (= ($generated@@364 $generated@@795) 0)) (= $generated@@795 ($generated@@363 $generated@@796))))
 :pattern ( ($generated@@364 $generated@@795))
)))
(assert (forall (($generated@@797 T@U) ($generated@@798 T@U) ($generated@@799 T@U) ) (! (let (($generated@@800 (type $generated@@798)))
 (=> (and (and (= (type $generated@@797) ($generated@@89 $generated@@800 $generated@@2)) (= (type $generated@@799) $generated@@2)) (<= 0 ($generated $generated@@799))) (= ($generated@@394 ($generated@@95 $generated@@797 $generated@@798 $generated@@799)) (+ (- ($generated@@394 $generated@@797) ($generated ($generated@@94 $generated@@797 $generated@@798))) ($generated $generated@@799)))))
 :pattern ( ($generated@@394 ($generated@@95 $generated@@797 $generated@@798 $generated@@799)))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ($generated@@805 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@801) $generated@@77) (= (type $generated@@802) $generated@@77)) (= (type $generated@@803) $generated@@156)) (= (type $generated@@804) $generated@@157)) (= (type $generated@@805) $generated@@157)) (forall (($generated@@806 Int) ) (!  (=> (<= 0 $generated@@806) ($generated@@153 $generated@@801 $generated@@802 ($generated@@158 $generated@@806) ($generated@@154 $generated@@803) $generated@@804 $generated@@805))
 :pattern ( ($generated@@153 $generated@@801 $generated@@802 ($generated@@158 $generated@@806) ($generated@@154 $generated@@803) $generated@@804 $generated@@805))
))) ($generated@@298 $generated@@801 $generated@@802 ($generated@@154 $generated@@803) $generated@@804 $generated@@805))
 :pattern ( ($generated@@298 $generated@@801 $generated@@802 ($generated@@154 $generated@@803) $generated@@804 $generated@@805))
)))
(assert (forall (($generated@@807 T@U) ($generated@@808 T@U) ) (!  (=> (and (= (type $generated@@807) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@808) $generated@@2)) ($generated@@87 $generated@@808 $generated@@46 $generated@@807))
 :pattern ( ($generated@@87 $generated@@808 $generated@@46 $generated@@807))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (= (type $generated@@809) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@810) $generated@@3)) ($generated@@87 $generated@@810 $generated@@47 $generated@@809))
 :pattern ( ($generated@@87 $generated@@810 $generated@@47 $generated@@809))
)))
(assert (forall (($generated@@811 T@U) ($generated@@812 T@U) ) (!  (=> (and (= (type $generated@@811) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@812) $generated@@4)) ($generated@@87 $generated@@812 $generated@@44 $generated@@811))
 :pattern ( ($generated@@87 $generated@@812 $generated@@44 $generated@@811))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@813) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@814) $generated@@593)) ($generated@@87 $generated@@814 $generated@@45 $generated@@813))
 :pattern ( ($generated@@87 $generated@@814 $generated@@45 $generated@@813))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (= (type $generated@@815) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@816) $generated@@155)) ($generated@@87 $generated@@816 $generated@@48 $generated@@815))
 :pattern ( ($generated@@87 $generated@@816 $generated@@48 $generated@@815))
)))
(assert (forall (($generated@@817 T@U) ($generated@@818 T@U) ) (!  (=> (and (= (type $generated@@817) ($generated@@365 $generated@@155)) (= (type $generated@@818) $generated@@77)) (= ($generated@@186 $generated@@817 ($generated@@640 $generated@@818)) (forall (($generated@@819 Int) ) (!  (=> (and (<= 0 $generated@@819) (< $generated@@819 ($generated@@364 $generated@@817))) ($generated@@291 ($generated@@641 $generated@@817 $generated@@819) $generated@@818))
 :pattern ( ($generated@@641 $generated@@817 $generated@@819))
))))
 :pattern ( ($generated@@186 $generated@@817 ($generated@@640 $generated@@818)))
)))
(assert (forall (($generated@@821 T@U) ($generated@@822 Int) ) (!  (=> (= (type $generated@@821) ($generated@@365 $generated@@155)) (=> (and (<= 0 $generated@@822) (< $generated@@822 ($generated@@364 $generated@@821))) (< ($generated@@693 ($generated@@447 $generated@@157 ($generated@@641 $generated@@821 $generated@@822))) ($generated@@820 $generated@@821))))
 :pattern ( ($generated@@693 ($generated@@447 $generated@@157 ($generated@@641 $generated@@821 $generated@@822))))
)))
(assert (forall (($generated@@823 T@U) ($generated@@824 T@U) ($generated@@825 T@U) ) (!  (=> (and (and (and (= (type $generated@@823) ($generated@@406 $generated@@155 $generated@@155)) (= (type $generated@@824) $generated@@77)) (= (type $generated@@825) $generated@@77)) ($generated@@186 $generated@@823 ($generated@@533 $generated@@824 $generated@@825))) (and (and ($generated@@186 ($generated@@404 $generated@@823) ($generated@@316 $generated@@824)) ($generated@@186 ($generated@@456 $generated@@823) ($generated@@316 $generated@@825))) ($generated@@186 ($generated@@507 $generated@@823) ($generated@@316 ($generated@@197 $generated@@824 $generated@@825)))))
 :pattern ( ($generated@@186 $generated@@823 ($generated@@533 $generated@@824 $generated@@825)))
)))
(assert (forall (($generated@@826 T@U) ($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (and (and (= (type $generated@@826) ($generated@@424 $generated@@155 $generated@@155)) (= (type $generated@@827) $generated@@77)) (= (type $generated@@828) $generated@@77)) ($generated@@186 $generated@@826 ($generated@@541 $generated@@827 $generated@@828))) (and (and ($generated@@186 ($generated@@422 $generated@@826) ($generated@@321 $generated@@827)) ($generated@@186 ($generated@@467 $generated@@826) ($generated@@321 $generated@@828))) ($generated@@186 ($generated@@515 $generated@@826) ($generated@@321 ($generated@@197 $generated@@827 $generated@@828)))))
 :pattern ( ($generated@@186 $generated@@826 ($generated@@541 $generated@@827 $generated@@828)))
)))
(assert (forall (($generated@@829 T@U) ) (!  (=> (= (type $generated@@829) $generated@@2) ($generated@@186 $generated@@829 $generated@@46))
 :pattern ( ($generated@@186 $generated@@829 $generated@@46))
)))
(assert (forall (($generated@@830 T@U) ) (!  (=> (= (type $generated@@830) $generated@@3) ($generated@@186 $generated@@830 $generated@@47))
 :pattern ( ($generated@@186 $generated@@830 $generated@@47))
)))
(assert (forall (($generated@@831 T@U) ) (!  (=> (= (type $generated@@831) $generated@@4) ($generated@@186 $generated@@831 $generated@@44))
 :pattern ( ($generated@@186 $generated@@831 $generated@@44))
)))
(assert (forall (($generated@@832 T@U) ) (!  (=> (= (type $generated@@832) $generated@@593) ($generated@@186 $generated@@832 $generated@@45))
 :pattern ( ($generated@@186 $generated@@832 $generated@@45))
)))
(assert (forall (($generated@@833 T@U) ) (!  (=> (= (type $generated@@833) $generated@@155) ($generated@@186 $generated@@833 $generated@@48))
 :pattern ( ($generated@@186 $generated@@833 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@834 () T@U)
(declare-fun $generated@@835 () T@U)
(declare-fun $generated@@836 () T@U)
(declare-fun $generated@@837 () T@U)
(declare-fun $generated@@838 () Int)
(declare-fun $generated@@839 () Int)
(declare-fun $generated@@840 () Int)
(declare-fun $generated@@841 () Int)
(declare-fun $generated@@842 () Int)
(declare-fun $generated@@843 (T@U T@U Int) Bool)
(declare-fun $generated@@844 () Int)
(declare-fun $generated@@845 () T@U)
(declare-fun $generated@@846 () T@U)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 (T@U) Bool)
(declare-fun $generated@@849 () T@U)
(declare-fun $generated@@850 () Int)
(declare-fun $generated@@851 () T@U)
(declare-fun $generated@@852 () Int)
(declare-fun $generated@@853 () T@U)
(declare-fun $generated@@854 () T@U)
(declare-fun $generated@@855 () Int)
(declare-fun $generated@@856 (T@U T@U Int) Bool)
(declare-fun $generated@@857 () Int)
(declare-fun $generated@@858 (T@U Int) Bool)
(declare-fun $generated@@859 () Int)
(declare-fun $generated@@860 () T@U)
(declare-fun $generated@@861 () Int)
(declare-fun $generated@@862 () T@U)
(declare-fun $generated@@863 () T@U)
(declare-fun $generated@@864 () T@U)
(declare-fun $generated@@865 () Int)
(declare-fun $generated@@866 () T@U)
(declare-fun $generated@@867 () Int)
(declare-fun $generated@@868 () T@U)
(declare-fun $generated@@869 () Int)
(declare-fun $generated@@870 () Int)
(declare-fun $generated@@871 () Int)
(declare-fun $generated@@872 (Int Int) Bool)
(declare-fun $generated@@873 () Int)
(declare-fun $generated@@874 (Int) Bool)
(declare-fun $generated@@875 () Int)
(declare-fun $generated@@876 () Int)
(declare-fun $generated@@877 () Int)
(declare-fun $generated@@878 () T@U)
(declare-fun $generated@@879 () Int)
(declare-fun $generated@@880 () Int)
(declare-fun $generated@@881 () T@U)
(declare-fun $generated@@882 () Int)
(declare-fun $generated@@883 () T@U)
(declare-fun $generated@@884 () Int)
(declare-fun $generated@@885 () T@U)
(declare-fun $generated@@886 () T@U)
(declare-fun $generated@@887 () T@U)
(declare-fun $generated@@888 () T@U)
(declare-fun $generated@@889 () Int)
(declare-fun $generated@@890 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@834) ($generated@@221 $generated@@90 $generated@@4)) (= (type $generated@@835) $generated@@90)) (= (type $generated@@836) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@837) $generated@@157)) (= (type $generated@@845) $generated@@157)) (= (type $generated@@846) $generated@@77)) (= (type $generated@@847) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@849) $generated@@157)) (= (type $generated@@851) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@853) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@854) $generated@@157)) (= (type $generated@@860) $generated@@157)) (= (type $generated@@862) $generated@@157)) (= (type $generated@@863) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@864) $generated@@157)) (= (type $generated@@866) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@868) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@878) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@881) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@883) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@885) $generated@@157)) (= (type $generated@@886) $generated@@157)) (= (type $generated@@887) $generated@@157)) (= (type $generated@@888) $generated@@157)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@891  (=> (and (= $generated@@834 ($generated@@220 $generated@@835 $generated@@836 $generated@@60 false)) (= $generated@@837 ($generated@@330 ($generated@@304 ($generated@@0 ($generated@@330 ($generated@@11 true))) ($generated@@381 ($generated@@8 ($generated@@326 5))))))) (=> (and (and (= $generated@@838 ($generated@@326 5)) ($generated@@87 ($generated@@8 $generated@@838) $generated@@46 $generated@@836)) (and ($generated@@476 $generated@@46 ($generated@@326 5)) ($generated@@476 $generated@@46 ($generated@@326 5)))) (=> (and (and (and (and (= $generated@@839 ($generated@@326 ($generated@@475 $generated@@46 ($generated@@326 5)))) (= $generated@@840 ($generated@@326 7))) (and ($generated@@87 ($generated@@8 $generated@@840) $generated@@46 $generated@@836) ($generated@@476 $generated@@46 ($generated@@326 7)))) (and (and ($generated@@476 $generated@@46 ($generated@@326 7)) (= $generated@@841 ($generated@@326 ($generated@@475 $generated@@46 ($generated@@326 7))))) (and ($generated@@87 $generated@@837 ($generated@@281 $generated@@46) $generated@@836) (= $generated@@842 ($generated@@326 10))))) (and (and (and ($generated@@87 ($generated@@8 $generated@@842) $generated@@46 $generated@@836) ($generated@@843 $generated@@46 $generated@@837 ($generated@@326 10))) (and ($generated@@843 $generated@@46 $generated@@837 ($generated@@326 10)) (= $generated@@844 ($generated@@326 93)))) (and (and ($generated@@186 $generated@@845 ($generated@@281 $generated@@846)) ($generated@@87 $generated@@845 ($generated@@281 $generated@@846) $generated@@836)) (and ($generated@@282 $generated@@847) ($generated@@848 $generated@@847))))) (=> (and (and (and (and (and (and ($generated@@186 $generated@@849 ($generated@@281 $generated@@46)) ($generated@@87 $generated@@849 ($generated@@281 $generated@@46) $generated@@847)) (forall (($generated@@892 T@U) ) (!  (=> (= (type $generated@@892) $generated@@90) (=> (and (not (= $generated@@892 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@836 $generated@@892) $generated@@60))) (= ($generated@@94 $generated@@847 $generated@@892) ($generated@@94 $generated@@836 $generated@@892))))
 :pattern ( ($generated@@94 $generated@@847 $generated@@892))
))) (and ($generated@@167 $generated@@836 $generated@@847) (= $generated@@850 ($generated@@326 54)))) (and (and (and ($generated@@282 $generated@@851) ($generated@@848 $generated@@851)) (forall (($generated@@893 T@U) ) (!  (=> (= (type $generated@@893) $generated@@90) (=> (and (not (= $generated@@893 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@847 $generated@@893) $generated@@60))) (= ($generated@@94 $generated@@851 $generated@@893) ($generated@@94 $generated@@847 $generated@@893))))
 :pattern ( ($generated@@94 $generated@@851 $generated@@893))
))) (and (and ($generated@@167 $generated@@847 $generated@@851) (= $generated@@852 ($generated@@326 55))) (and ($generated@@282 $generated@@853) ($generated@@848 $generated@@853))))) (and (and (and (and (forall (($generated@@894 T@U) ) (!  (=> (= (type $generated@@894) $generated@@90) (=> (and (not (= $generated@@894 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@851 $generated@@894) $generated@@60))) (= ($generated@@94 $generated@@853 $generated@@894) ($generated@@94 $generated@@851 $generated@@894))))
 :pattern ( ($generated@@94 $generated@@853 $generated@@894))
)) ($generated@@167 $generated@@851 $generated@@853)) (and (= $generated@@854 ($generated@@330 $generated@@213)) ($generated@@87 $generated@@854 ($generated@@286 $generated@@47) $generated@@853))) (and (and (= $generated@@855 ($generated@@326 2)) ($generated@@87 ($generated@@8 $generated@@855) $generated@@46 $generated@@853)) (and ($generated@@856 $generated@@47 $generated@@854 ($generated@@326 2)) ($generated@@856 $generated@@47 $generated@@854 ($generated@@326 2))))) (and (and (and (= $generated@@857 ($generated@@326 70)) ($generated@@87 ($generated@@8 $generated@@857) $generated@@46 $generated@@853)) (and ($generated@@858 ($generated@@88 11) ($generated@@326 70)) ($generated@@858 ($generated@@88 11) ($generated@@326 70)))) (and (and (= $generated@@859 ($generated@@326 71)) ($generated@@87 ($generated@@8 $generated@@859) $generated@@46 $generated@@853)) (and ($generated@@858 $generated@@47 ($generated@@326 71)) ($generated@@858 $generated@@47 ($generated@@326 71))))))) (and (and (and (and (and ($generated@@186 $generated@@860 ($generated@@286 $generated@@46)) ($generated@@87 $generated@@860 ($generated@@286 $generated@@46) $generated@@853)) (= $generated@@861 ($generated@@326 93))) (and (and ($generated@@186 $generated@@862 ($generated@@286 $generated@@46)) ($generated@@87 $generated@@862 ($generated@@286 $generated@@46) $generated@@836)) (and ($generated@@282 $generated@@863) ($generated@@848 $generated@@863)))) (and (and (and ($generated@@186 $generated@@864 ($generated@@286 $generated@@46)) ($generated@@87 $generated@@864 ($generated@@286 $generated@@46) $generated@@863)) (forall (($generated@@895 T@U) ) (!  (=> (= (type $generated@@895) $generated@@90) (=> (and (not (= $generated@@895 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@853 $generated@@895) $generated@@60))) (= ($generated@@94 $generated@@863 $generated@@895) ($generated@@94 $generated@@853 $generated@@895))))
 :pattern ( ($generated@@94 $generated@@863 $generated@@895))
))) (and ($generated@@167 $generated@@853 $generated@@863) (= $generated@@865 ($generated@@326 54))))) (and (and (and (and ($generated@@282 $generated@@866) ($generated@@848 $generated@@866)) (forall (($generated@@896 T@U) ) (!  (=> (= (type $generated@@896) $generated@@90) (=> (and (not (= $generated@@896 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@863 $generated@@896) $generated@@60))) (= ($generated@@94 $generated@@866 $generated@@896) ($generated@@94 $generated@@863 $generated@@896))))
 :pattern ( ($generated@@94 $generated@@866 $generated@@896))
))) (and ($generated@@167 $generated@@863 $generated@@866) (= $generated@@867 ($generated@@326 55)))) (and (and (and ($generated@@282 $generated@@868) ($generated@@848 $generated@@868)) (forall (($generated@@897 T@U) ) (!  (=> (= (type $generated@@897) $generated@@90) (=> (and (not (= $generated@@897 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@866 $generated@@897) $generated@@60))) (= ($generated@@94 $generated@@868 $generated@@897) ($generated@@94 $generated@@866 $generated@@897))))
 :pattern ( ($generated@@94 $generated@@868 $generated@@897))
))) (and ($generated@@167 $generated@@866 $generated@@868) (= $generated@@869 ($generated@@326 11))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@326 2) $generated@@869) (forall (($generated@@898 Int) )  (=> true (=> (and (<= ($generated@@326 2) $generated@@898) (< $generated@@898 $generated@@869)) (not (= ($generated@@561 $generated@@869 $generated@@898) 0))))))) (=> (and (<= ($generated@@326 2) $generated@@869) (forall (($generated@@899 Int) )  (=> true (=> (and (<= ($generated@@326 2) $generated@@899) (< $generated@@899 $generated@@869)) (not (= ($generated@@561 $generated@@869 $generated@@899) 0)))))) (=> (= $generated@@870 ($generated@@326 11)) (=> (and ($generated@@87 ($generated@@8 $generated@@870) $generated@@175 $generated@@868) (= $generated@@871 ($generated@@326 2))) (=> (and (and (and (and ($generated@@87 ($generated@@8 $generated@@871) $generated@@46 $generated@@868) ($generated@@872 $generated@@870 ($generated@@326 2))) (and ($generated@@872 $generated@@870 ($generated@@326 2)) (= $generated@@873 ($generated@@326 70)))) (and (and ($generated@@87 ($generated@@8 $generated@@873) $generated@@46 $generated@@868) ($generated@@874 ($generated@@326 70))) (and ($generated@@874 ($generated@@326 70)) (= $generated@@875 ($generated@@326 71))))) (and (and (and ($generated@@87 ($generated@@8 $generated@@875) $generated@@46 $generated@@868) ($generated@@874 ($generated@@326 71))) (and ($generated@@874 ($generated@@326 71)) (= $generated@@876 ($generated@@326 95)))) (and (and (<= ($generated@@326 2) $generated@@877) (forall (($generated@@900 Int) )  (=> true (=> (and (<= ($generated@@326 2) $generated@@900) (< $generated@@900 $generated@@877)) (not (= ($generated@@561 $generated@@877 $generated@@900) 0)))))) (and ($generated@@282 $generated@@878) ($generated@@848 $generated@@878))))) (=> (and (and (and (and (and (<= ($generated@@326 2) $generated@@879) (forall (($generated@@901 Int) )  (=> true (=> (and (<= ($generated@@326 2) $generated@@901) (< $generated@@901 $generated@@879)) (not (= ($generated@@561 $generated@@879 $generated@@901) 0)))))) (forall (($generated@@902 T@U) ) (!  (=> (= (type $generated@@902) $generated@@90) (=> (and (not (= $generated@@902 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@868 $generated@@902) $generated@@60))) (= ($generated@@94 $generated@@878 $generated@@902) ($generated@@94 $generated@@868 $generated@@902))))
 :pattern ( ($generated@@94 $generated@@878 $generated@@902))
))) (and ($generated@@167 $generated@@868 $generated@@878) (= $generated@@880 ($generated@@326 54)))) (and (and ($generated@@282 $generated@@881) ($generated@@848 $generated@@881)) (forall (($generated@@903 T@U) ) (!  (=> (= (type $generated@@903) $generated@@90) (=> (and (not (= $generated@@903 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@878 $generated@@903) $generated@@60))) (= ($generated@@94 $generated@@881 $generated@@903) ($generated@@94 $generated@@878 $generated@@903))))
 :pattern ( ($generated@@94 $generated@@881 $generated@@903))
)))) (and (and (and ($generated@@167 $generated@@878 $generated@@881) (= $generated@@882 ($generated@@326 55))) (and ($generated@@282 $generated@@883) ($generated@@848 $generated@@883))) (and (and (forall (($generated@@904 T@U) ) (!  (=> (= (type $generated@@904) $generated@@90) (=> (and (not (= $generated@@904 $generated@@835)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@881 $generated@@904) $generated@@60))) (= ($generated@@94 $generated@@883 $generated@@904) ($generated@@94 $generated@@881 $generated@@904))))
 :pattern ( ($generated@@94 $generated@@883 $generated@@904))
)) ($generated@@167 $generated@@881 $generated@@883)) (and (= $generated@@884 ($generated@@326 11)) (= (ControlFlow 0 2) (- 0 1)))))) (and (<= ($generated@@326 0) $generated@@884) (< $generated@@884 25))))))))))))))
(let (($generated@@905  (=> (and ($generated@@282 $generated@@836) ($generated@@848 $generated@@836)) (=> (and (and ($generated@@186 $generated@@885 ($generated@@281 $generated@@46)) ($generated@@87 $generated@@885 ($generated@@281 $generated@@46) $generated@@836)) true) (=> (and (and (and ($generated@@186 $generated@@886 ($generated@@281 $generated@@46)) ($generated@@87 $generated@@886 ($generated@@281 $generated@@46) $generated@@836)) true) (and (and ($generated@@186 $generated@@887 ($generated@@286 $generated@@47)) ($generated@@87 $generated@@887 ($generated@@286 $generated@@47) $generated@@836)) true)) (=> (and (and (and (and ($generated@@186 $generated@@888 ($generated@@286 $generated@@46)) ($generated@@87 $generated@@888 ($generated@@286 $generated@@46) $generated@@836)) true) (and (and (<= ($generated@@326 2) $generated@@889) (forall (($generated@@906 Int) )  (=> true (=> (and (<= ($generated@@326 2) $generated@@906) (< $generated@@906 $generated@@889)) (not (= ($generated@@561 $generated@@889 $generated@@906) 0)))))) true)) (and (and (and (<= ($generated@@326 0) $generated@@890) (< $generated@@890 25)) true) (and (= 2 $generated@@474) (= (ControlFlow 0 4) 2)))) $generated@@891))))))
$generated@@905)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
