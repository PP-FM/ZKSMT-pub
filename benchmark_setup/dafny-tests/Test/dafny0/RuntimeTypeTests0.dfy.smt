(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@314 (T@T T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@379 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@529 (T@T) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@2) (= ($generated@@137 $generated@@263 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@263))))
 :pattern ( ($generated@@137 $generated@@263 $generated@@134))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@150)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268) ($generated@@76 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@T) ) (! (= (type ($generated@@270 $generated@@271)) ($generated@@78 $generated@@271 $generated@@2))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@81 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@78 $generated@@273 $generated@@2)) (and (= (= ($generated@@269 $generated@@272) 0) (= $generated@@272 ($generated@@270 $generated@@273))) (=> (not (= ($generated@@269 $generated@@272) 0)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) (< 0 ($generated ($generated@@83 $generated@@272 $generated@@274))))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 18)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@78 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@81 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@78 $generated@@312 $generated@@2)) (= ($generated@@156 $generated@@311) (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@312) (and (<= 0 ($generated ($generated@@83 $generated@@311 $generated@@313))) (<= ($generated ($generated@@83 $generated@@311 $generated@@313)) ($generated@@269 $generated@@311))))
 :pattern ( ($generated@@83 $generated@@311 $generated@@313))
)))))
 :pattern ( ($generated@@156 $generated@@311))
)))
(assert (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@314 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@150) ($generated@@217 $generated@@317 $generated@@134)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@317)) $generated@@317) ($generated@@137 ($generated@@314 $generated@@2 $generated@@317) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@317 $generated@@134))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@279 (type $generated@@318))))
(let (($generated@@320 ($generated@@278 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@277 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@276 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@275 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@279 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@279 (type $generated@@325))))
(let (($generated@@327 ($generated@@278 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@277 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@276 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@297 (type $generated@@329))))
(let (($generated@@331 ($generated@@296 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@295 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@294 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@293 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@297 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@341) $generated@@66)) (= ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@340 $generated@@342)))) ($generated@@217 $generated@@342 $generated@@341))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@150) ($generated@@0 ($generated@@83 $generated@@343 $generated@@346))) ($generated@@243 $generated@@346 $generated@@344 $generated@@345))
 :pattern ( ($generated@@83 $generated@@343 $generated@@346))
))))
 :pattern ( ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@348) $generated@@66)) (= (type $generated@@349) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) ($generated@@0 ($generated@@83 $generated@@347 $generated@@350))) ($generated@@243 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= ($generated ($generated@@83 ($generated@@270 $generated@@352) $generated@@351)) 0))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@83 ($generated@@270 $generated@@352) $generated@@351)))
)))
(assert  (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@355)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@353 $generated@@355))
)) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@279 (type $generated@@356))))
(let (($generated@@358 ($generated@@278 (type $generated@@356))))
(= (type ($generated@@354 $generated@@356)) ($generated@@78 $generated@@358 $generated@@357))))
 :pattern ( ($generated@@354 $generated@@356))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@360) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@353 $generated@@359) $generated@@360))  (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@359) ($generated@@148 ($generated@@314 $generated@@141 $generated@@360)))) (= ($generated@@83 ($generated@@354 $generated@@359) ($generated@@148 ($generated@@314 $generated@@141 $generated@@360))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@360))))))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@359) $generated@@360))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@297 (type $generated@@364))))
(let (($generated@@366 ($generated@@296 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@78 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@368) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@367) ($generated@@148 ($generated@@314 $generated@@141 $generated@@368)))) (= ($generated@@83 ($generated@@362 $generated@@367) ($generated@@148 ($generated@@314 $generated@@141 $generated@@368))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@368))))))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@278 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@277 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@83 ($generated@@322 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@83 ($generated@@354 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@369) $generated@@373))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@296 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@295 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@83 ($generated@@362 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@374) $generated@@378))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@380 $generated@@381)) $generated@@66)
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (= (type $generated@@382) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) $generated@@66)) (= (type $generated@@385) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@382) $generated@@386))) (and ($generated@@243 ($generated@@83 ($generated@@354 $generated@@382) $generated@@386) $generated@@384 $generated@@385) ($generated@@243 $generated@@386 $generated@@383 $generated@@385)))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@382) $generated@@386))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@382) $generated@@386))
))))
 :pattern ( ($generated@@76 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@66)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) $generated@@66)) (= (type $generated@@393) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@390) $generated@@394))) (and ($generated@@243 ($generated@@83 ($generated@@362 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@243 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@390) $generated@@394))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@76 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= (type ($generated@@395 $generated@@396 $generated@@397)) ($generated@@78 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@400)))
 (=> (and (and (= (type $generated@@399) ($generated@@78 $generated@@402 $generated@@4)) (= (type $generated@@401) $generated@@402)) ($generated@@0 ($generated@@83 $generated@@399 $generated@@401))) ($generated@@0 ($generated@@83 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))))
 :pattern ( ($generated@@395 $generated@@399 $generated@@400) ($generated@@83 $generated@@399 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@404)))
 (=> (and (= (type $generated@@403) ($generated@@78 $generated@@406 $generated@@4)) (= (type $generated@@405) $generated@@406)) (= ($generated@@0 ($generated@@83 ($generated@@395 $generated@@403 $generated@@404) $generated@@405))  (or (= $generated@@405 $generated@@404) ($generated@@0 ($generated@@83 $generated@@403 $generated@@405))))))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@78 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@297 (type $generated@@409))))
(let (($generated@@411 ($generated@@296 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@295 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@294 $generated@@411 $generated@@410)) (= ($generated@@293 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@293 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@297 (type $generated@@412))))
(let (($generated@@414 ($generated@@296 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@295 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@294 $generated@@414 $generated@@413)) (= ($generated@@333 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@333 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@297 (type $generated@@415))))
(let (($generated@@417 ($generated@@296 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@295 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@294 $generated@@417 $generated@@416)) (= ($generated@@361 $generated@@415) ($generated@@407 $generated@@150))))))
 :pattern ( ($generated@@361 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@279 (type $generated@@418))))
(let (($generated@@420 ($generated@@278 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@277 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@276 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@150) (= (type $generated@@422) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@353 $generated@@418) ($generated@@264 ($generated@@216 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@353 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@297 (type $generated@@423))))
(let (($generated@@425 ($generated@@296 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@295 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@294 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@150) (= (type $generated@@427) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@361 $generated@@423) ($generated@@264 ($generated@@216 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@361 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@46)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@314 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@150) ($generated@@217 $generated@@429 $generated@@47)) (and (= ($generated@@264 ($generated@@314 $generated@@3 $generated@@429)) $generated@@429) ($generated@@137 ($generated@@314 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@44)) (and (= ($generated@@264 ($generated@@314 $generated@@4 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@314 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@217 $generated@@432 $generated@@45)) (and (= ($generated@@264 ($generated@@314 $generated@@431 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@314 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@66) (= ($generated@@217 ($generated@@264 $generated@@433) $generated@@434) ($generated@@137 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@217 ($generated@@264 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@81 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@78 $generated@@436 $generated@@2)) (<= 0 ($generated@@269 $generated@@435))))
 :pattern ( ($generated@@269 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@258 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@257 $generated@@438)) (<= 0 ($generated@@256 $generated@@437))))
 :pattern ( ($generated@@256 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@66) (= (type $generated@@442) $generated@@66)) (= ($generated@@439 ($generated@@379 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@379 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@66)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@443 ($generated@@379 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@379 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@74 ($generated@@379 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@379 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@449 ($generated@@387 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@387 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@387 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@387 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@74 ($generated@@387 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@387 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@150) (= (type $generated@@460) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@459 $generated@@460)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@140 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@140 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@140 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@140 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@216 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@216 $generated@@471 $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@258 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@474 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@257 $generated@@150)) (= (type $generated@@480) $generated@@66)) (= (type $generated@@481) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@479 ($generated@@473 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@256 $generated@@479))) ($generated@@243 ($generated@@474 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@474 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@76 $generated@@479 ($generated@@473 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
 (=> (= (type $generated@@483) ($generated@@78 $generated@@485 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@395 $generated@@483 $generated@@484) $generated@@484))))
 :pattern ( ($generated@@395 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@226 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@231 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@155 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@473 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@473 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@473 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@473 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@314 $generated@@505 ($generated@@264 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@264 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@137 $generated@@506 ($generated@@379 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@506) $generated@@509))) (and ($generated@@217 ($generated@@83 ($generated@@354 $generated@@506) $generated@@509) $generated@@508) ($generated@@217 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@137 $generated@@506 ($generated@@379 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@137 $generated@@510 ($generated@@387 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@510) $generated@@513))) (and ($generated@@217 ($generated@@83 ($generated@@362 $generated@@510) $generated@@513) $generated@@512) ($generated@@217 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@137 $generated@@510 ($generated@@387 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) (= (type $generated@@517) $generated@@150)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@216 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@216 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@150) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@217 $generated@@520 ($generated@@379 $generated@@521 $generated@@522))) (and (= ($generated@@264 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@520)) $generated@@520) ($generated@@137 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@520) ($generated@@379 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@217 $generated@@520 ($generated@@379 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@150) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@217 $generated@@523 ($generated@@387 $generated@@524 $generated@@525))) (and (= ($generated@@264 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@523)) $generated@@523) ($generated@@137 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@523) ($generated@@387 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@217 $generated@@523 ($generated@@387 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@150)) ($generated@@217 $generated@@528 ($generated@@140 $generated@@526 $generated@@527))) (and (= ($generated@@264 ($generated@@314 $generated@@141 $generated@@528)) $generated@@528) ($generated@@137 ($generated@@314 $generated@@141 $generated@@528) ($generated@@140 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@528 ($generated@@140 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@530 T@T) ) (! (= (type ($generated@@529 $generated@@530)) ($generated@@78 $generated@@530 $generated@@4))
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@529 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@529 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
 (not ($generated@@0 ($generated@@83 ($generated@@407 $generated@@534) $generated@@533))))
 :pattern ( (let (($generated@@534 (type $generated@@533)))
($generated@@83 ($generated@@407 $generated@@534) $generated@@533)))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@71)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@537 $generated@@538)) $generated@@63) (= ($generated@@535 ($generated@@140 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@141) (= ($generated@@514 ($generated@@264 $generated@@539)) ($generated@@515 $generated@@539)))
 :pattern ( ($generated@@514 ($generated@@264 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@150) ($generated@@217 $generated@@540 ($generated@@77 0))) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@540)) $generated@@540) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@540) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@540 ($generated@@77 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@150) (= (type $generated@@542) $generated@@66)) ($generated@@217 $generated@@541 ($generated@@226 $generated@@542))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@226 $generated@@542))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@226 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@150) (= (type $generated@@544) $generated@@66)) ($generated@@217 $generated@@543 ($generated@@231 $generated@@544))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@543) ($generated@@231 $generated@@544))))
 :pattern ( ($generated@@217 $generated@@543 ($generated@@231 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@150) (= (type $generated@@546) $generated@@66)) ($generated@@217 $generated@@545 ($generated@@155 $generated@@546))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@545) ($generated@@155 $generated@@546))))
 :pattern ( ($generated@@217 $generated@@545 ($generated@@155 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@150) (= (type $generated@@548) $generated@@66)) ($generated@@217 $generated@@547 ($generated@@473 $generated@@548))) (and (= ($generated@@264 ($generated@@314 ($generated@@257 $generated@@150) $generated@@547)) $generated@@547) ($generated@@137 ($generated@@314 ($generated@@257 $generated@@150) $generated@@547) ($generated@@473 $generated@@548))))
 :pattern ( ($generated@@217 $generated@@547 ($generated@@473 $generated@@548)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@535 $generated@@134) $generated@@64))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@549 ($generated@@155 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@549 $generated@@552)))) ($generated@@243 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@83 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@155 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@141) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@555) (and ($generated@@139 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@140 $generated@@554 $generated@@556) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@140 $generated@@554 $generated@@556) $generated@@555))
))))) ($generated@@243 ($generated@@148 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@141) (= (type $generated@@558) $generated@@66)) (= (type $generated@@559) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@559) (and ($generated@@139 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@66) ($generated@@76 $generated@@557 ($generated@@140 $generated@@560 $generated@@558) $generated@@559))
 :pattern ( ($generated@@76 $generated@@557 ($generated@@140 $generated@@560 $generated@@558) $generated@@559))
))))) ($generated@@243 ($generated@@149 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@561) ($generated@@238 $generated@@562)) ($generated@@238 ($generated@@216 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@561) ($generated@@238 $generated@@562)))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@264 ($generated@@8 ($generated@@236 $generated@@563))) ($generated@@238 ($generated@@264 ($generated@@8 $generated@@563))))
 :pattern ( ($generated@@264 ($generated@@8 ($generated@@236 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@264 ($generated@@238 $generated@@564)) ($generated@@238 ($generated@@264 $generated@@564)))
 :pattern ( ($generated@@264 ($generated@@238 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@258 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@257 $generated@@566)) (= ($generated@@256 $generated@@565) 0)) (= $generated@@565 ($generated@@255 $generated@@566))))
 :pattern ( ($generated@@256 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@78 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@269 $generated@@567) ($generated ($generated@@83 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@2)) ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@3)) ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@4)) ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@431)) ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@150)) ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@257 $generated@@150)) (= (type $generated@@582) $generated@@66)) (= ($generated@@137 $generated@@581 ($generated@@473 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@256 $generated@@581))) ($generated@@217 ($generated@@474 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@474 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@137 $generated@@581 ($generated@@473 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@585))) (< ($generated@@515 ($generated@@314 $generated@@141 ($generated@@474 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@515 ($generated@@314 $generated@@141 ($generated@@474 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) $generated@@66)) ($generated@@137 $generated@@587 ($generated@@379 $generated@@588 $generated@@589))) (and (and ($generated@@137 ($generated@@275 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@137 ($generated@@322 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@137 ($generated@@353 $generated@@587) ($generated@@226 ($generated@@140 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@137 $generated@@587 ($generated@@379 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@387 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@293 $generated@@590) ($generated@@231 $generated@@591)) ($generated@@137 ($generated@@333 $generated@@590) ($generated@@231 $generated@@592))) ($generated@@137 ($generated@@361 $generated@@590) ($generated@@231 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@387 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@137 $generated@@593 $generated@@46))
 :pattern ( ($generated@@137 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@137 $generated@@594 $generated@@47))
 :pattern ( ($generated@@137 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@137 $generated@@595 $generated@@44))
 :pattern ( ($generated@@137 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@431) ($generated@@137 $generated@@596 $generated@@45))
 :pattern ( ($generated@@137 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@150) ($generated@@137 $generated@@597 $generated@@48))
 :pattern ( ($generated@@137 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@598) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@599) $generated@@79)) (= (type $generated@@600) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@601) ($generated@@78 $generated@@150 $generated@@4))) (= (type $generated@@602) ($generated@@78 $generated@@150 $generated@@4))) (= (type $generated@@603) ($generated@@78 $generated@@150 $generated@@4))) (= (type $generated@@605) ($generated@@78 $generated@@150 $generated@@4))) (= (type $generated@@606) ($generated@@78 $generated@@150 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@608  (=> (= $generated@@598 ($generated@@161 $generated@@599 $generated@@600 $generated@@60 false)) (=> (and ($generated@@137 $generated@@601 ($generated@@226 $generated@@46)) ($generated@@76 $generated@@601 ($generated@@226 $generated@@46) $generated@@600)) (=> (and (and ($generated@@137 $generated@@602 ($generated@@226 $generated@@134)) ($generated@@76 $generated@@602 ($generated@@226 $generated@@134) $generated@@600)) (and (= $generated@@603 ($generated@@238 ($generated@@395 ($generated@@395 ($generated@@529 $generated@@150) ($generated@@264 ($generated@@8 ($generated@@236 5)))) ($generated@@264 ($generated@@8 ($generated@@236 7)))))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@137 $generated@@603 ($generated@@226 $generated@@134)))))))
(let (($generated@@609  (=> (and ($generated@@242 $generated@@600) ($generated@@604 $generated@@600)) (=> (and (and ($generated@@137 $generated@@605 ($generated@@226 $generated@@46)) ($generated@@76 $generated@@605 ($generated@@226 $generated@@46) $generated@@600)) true) (=> (and (and (and ($generated@@137 $generated@@606 ($generated@@226 $generated@@134)) ($generated@@76 $generated@@606 ($generated@@226 $generated@@134) $generated@@600)) true) (and (= 1 $generated@@607) (= (ControlFlow 0 3) 2))) $generated@@608)))))
$generated@@609)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@374 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@493 () T@T)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@537 (T@U Int) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@659 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@82 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@82)) 8))) (forall (($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@78 $generated@@83))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@77)) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@63) $generated@@80)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@77)) (= (type $generated@@66) $generated@@77)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@81)) (= (type $generated@@73) $generated@@81)) (= (type $generated@@74) $generated@@81)) (= (type $generated@@75) $generated@@81)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@77)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 11)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@79 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@79 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@76)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@146) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (and (= (type $generated@@148) $generated@@76) (= (type $generated@@149) $generated@@89)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@89) (= (type $generated@@151) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@150 $generated@@148 $generated@@151))
)))
(assert (= (type $generated@@152) $generated@@76))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@89) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@153 $generated@@152 $generated@@154)  (or (= $generated@@153 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@153 $generated@@152 $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@76))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@89) (= (type $generated@@157) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@158 $generated@@159 ($generated@@87 0)))
 :pattern ( ($generated@@158 $generated@@159 ($generated@@87 0)))
)))
(assert ($generated@@160 $generated@@155))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@76)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@76) (= (type $generated@@167) $generated@@76)) (= (type $generated@@168) $generated@@163)) ($generated@@158 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@158 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (= (type $generated@@177) $generated@@76))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@89) (=> (and (not (= $generated@@178 $generated@@149)) ($generated@@158 $generated@@178 $generated@@155)) ($generated@@158 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@158 $generated@@178 $generated@@155))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@76)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@88 $generated@@172 $generated@@2)) (= (type $generated@@183) $generated@@76)) ($generated@@158 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@158 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@185 $generated@@186)) $generated@@76)
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@76) (= (type $generated@@188) $generated@@163)) ($generated@@158 $generated@@188 ($generated@@185 $generated@@187))) ($generated@@184 $generated@@188))
 :pattern ( ($generated@@184 $generated@@188) ($generated@@158 $generated@@188 ($generated@@185 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@189 $generated@@190)) $generated@@76)
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@89) (= ($generated@@158 $generated@@191 $generated@@155)  (or (= $generated@@191 $generated@@149) (= ($generated@@189 $generated@@191) $generated@@155))))
 :pattern ( ($generated@@158 $generated@@191 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 16)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@194 $generated@@89 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@79 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@89) (= (type $generated@@242) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@243) ($generated@@78 $generated@@4))) (= (type $generated@@245) $generated@@89)) (= (type $generated@@246) ($generated@@78 $generated@@247))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (= (type $generated@@248) $generated@@76))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@89) (= (type $generated@@250) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@249 $generated@@248 $generated@@250) ($generated@@86 $generated@@249 $generated@@148 $generated@@250)))
 :pattern ( ($generated@@86 $generated@@249 $generated@@248 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@89) (= (type $generated@@252) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@251 $generated@@177 $generated@@252) ($generated@@86 $generated@@251 $generated@@152 $generated@@252)))
 :pattern ( ($generated@@86 $generated@@251 $generated@@177 $generated@@252))
)))
(assert (= (type $generated@@253) $generated@@76))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@89) (= (type $generated@@255) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@254 $generated@@253 $generated@@255) ($generated@@86 $generated@@254 $generated@@155 $generated@@255)))
 :pattern ( ($generated@@86 $generated@@254 $generated@@253 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@163)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@76) (= (type $generated@@261) $generated@@76)) (= (type $generated@@262) $generated@@172)) (= (type $generated@@263) $generated@@172)) (= ($generated@@158 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@158 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@163) (= (type $generated@@265) $generated@@163)) (= ($generated@@169 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@169 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@163) (= (type $generated@@268) $generated@@163)) (= ($generated@@266 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@76)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@172 $generated@@4)) (= (type $generated@@272) $generated@@76)) (= ($generated@@158 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@172) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@257 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@158 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@76)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@88 $generated@@172 $generated@@4)) (= (type $generated@@277) $generated@@76)) (= ($generated@@158 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@172) ($generated@@0 ($generated@@93 $generated@@276 $generated@@278))) ($generated@@257 $generated@@278 $generated@@277))
 :pattern ( ($generated@@93 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@158 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@76) (= (type $generated@@286) $generated@@76)) (= (type $generated@@287) $generated@@172)) (= (type $generated@@288) $generated@@172)) (= (type $generated@@289) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@283 $generated@@289)) (= ($generated@@86 ($generated@@256 $generated@@287 $generated@@288) ($generated@@162 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@86 ($generated@@256 $generated@@287 $generated@@288) ($generated@@162 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@80)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@163) (= ($generated@@161 $generated@@292) (= ($generated@@290 $generated@@292) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@163) (= ($generated@@184 $generated@@293) (= ($generated@@290 $generated@@293) $generated@@69)))
 :pattern ( ($generated@@184 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@163) ($generated@@161 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@172) (= (type $generated@@296) $generated@@172)) (= $generated@@294 ($generated@@256 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@161 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@172)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@307) $generated@@163) (= (type $generated@@308) $generated@@163)) true) (= ($generated@@266 $generated@@307 $generated@@308) (= ($generated@@305 $generated@@307) ($generated@@305 $generated@@308))))
 :pattern ( ($generated@@266 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@163)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@163) ($generated@@184 $generated@@311)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@172) (= $generated@@311 ($generated@@309 $generated@@312)))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@184 $generated@@311))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@172)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@76) (= (type $generated@@317) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@284 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@86 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@284 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@318) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@319) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@320) $generated@@172)) (= (type $generated@@321) $generated@@76)) ($generated@@144 $generated@@318 $generated@@319)) ($generated@@284 $generated@@320 $generated@@321 $generated@@318)) ($generated@@284 $generated@@320 $generated@@321 $generated@@319))
 :pattern ( ($generated@@144 $generated@@318 $generated@@319) ($generated@@284 $generated@@320 $generated@@321 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@325) $generated@@76)) ($generated@@144 $generated@@322 $generated@@323)) ($generated@@86 $generated@@324 $generated@@325 $generated@@322)) ($generated@@86 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@144 $generated@@322 $generated@@323) ($generated@@86 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@88 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@91 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@88 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@93 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@81)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@76) (and (= ($generated@@84 ($generated@@185 $generated@@334)) $generated@@70) (= ($generated@@332 ($generated@@185 $generated@@334)) $generated@@75)))
 :pattern ( ($generated@@185 $generated@@334))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 18)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@88 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@93 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@93 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 19)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@88 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@93 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@93 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@91 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@88 $generated@@372 $generated@@2)) (= ($generated@@180 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (and (<= 0 ($generated ($generated@@93 $generated@@371 $generated@@373))) (<= ($generated ($generated@@93 $generated@@371 $generated@@373)) ($generated@@326 $generated@@371))))
 :pattern ( ($generated@@93 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@180 $generated@@371))
)))
(assert (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@172) ($generated@@257 $generated@@377 $generated@@148)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@377)) $generated@@377) ($generated@@158 ($generated@@374 $generated@@89 $generated@@377) $generated@@148)))
 :pattern ( ($generated@@257 $generated@@377 $generated@@148))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@257 $generated@@378 $generated@@248)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@378)) $generated@@378) ($generated@@158 ($generated@@374 $generated@@89 $generated@@378) $generated@@248)))
 :pattern ( ($generated@@257 $generated@@378 $generated@@248))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@172) ($generated@@257 $generated@@379 $generated@@152)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@379)) $generated@@379) ($generated@@158 ($generated@@374 $generated@@89 $generated@@379) $generated@@152)))
 :pattern ( ($generated@@257 $generated@@379 $generated@@152))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@172) ($generated@@257 $generated@@380 $generated@@177)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@380)) $generated@@380) ($generated@@158 ($generated@@374 $generated@@89 $generated@@380) $generated@@177)))
 :pattern ( ($generated@@257 $generated@@380 $generated@@177))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@172) ($generated@@257 $generated@@381 $generated@@155)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@381)) $generated@@381) ($generated@@158 ($generated@@374 $generated@@89 $generated@@381) $generated@@155)))
 :pattern ( ($generated@@257 $generated@@381 $generated@@155))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@257 $generated@@382 $generated@@253)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@382)) $generated@@382) ($generated@@158 ($generated@@374 $generated@@89 $generated@@382) $generated@@253)))
 :pattern ( ($generated@@257 $generated@@382 $generated@@253))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@89) (= ($generated@@158 $generated@@383 $generated@@248)  (and ($generated@@158 $generated@@383 $generated@@148) (not (= $generated@@383 $generated@@149)))))
 :pattern ( ($generated@@158 $generated@@383 $generated@@248))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@89) (= ($generated@@158 $generated@@384 $generated@@177)  (and ($generated@@158 $generated@@384 $generated@@152) (not (= $generated@@384 $generated@@149)))))
 :pattern ( ($generated@@158 $generated@@384 $generated@@177))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@89) (= ($generated@@158 $generated@@385 $generated@@253)  (and ($generated@@158 $generated@@385 $generated@@155) (not (= $generated@@385 $generated@@149)))))
 :pattern ( ($generated@@158 $generated@@385 $generated@@253))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@339 (type $generated@@386))))
(let (($generated@@388 ($generated@@338 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@337 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@336 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@93 ($generated@@335 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@335 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@339 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@88 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@339 (type $generated@@393))))
(let (($generated@@395 ($generated@@338 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@337 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@336 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@93 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@357 (type $generated@@397))))
(let (($generated@@399 ($generated@@356 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@355 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@354 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@93 ($generated@@353 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@353 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@357 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@88 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@357 (type $generated@@404))))
(let (($generated@@406 ($generated@@356 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@355 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@354 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@93 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@88 $generated@@172 $generated@@2)) (= (type $generated@@409) $generated@@76)) (= ($generated@@158 $generated@@408 ($generated@@179 $generated@@409)) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@172) (< 0 ($generated ($generated@@93 $generated@@408 $generated@@410)))) ($generated@@257 $generated@@410 $generated@@409))
 :pattern ( ($generated@@93 $generated@@408 $generated@@410))
))))
 :pattern ( ($generated@@158 $generated@@408 ($generated@@179 $generated@@409)))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) $generated@@76) (= (type $generated@@412) $generated@@172)) (= (type $generated@@413) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@283 $generated@@413)) (= ($generated@@86 ($generated@@309 $generated@@412) ($generated@@185 $generated@@411) $generated@@413) ($generated@@284 $generated@@412 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@412) ($generated@@185 $generated@@411) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@88 $generated@@172 $generated@@4)) (= (type $generated@@415) $generated@@76)) (= (type $generated@@416) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@414 ($generated@@269 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@172) ($generated@@0 ($generated@@93 $generated@@414 $generated@@417))) ($generated@@284 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@93 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@86 $generated@@414 ($generated@@269 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@88 $generated@@172 $generated@@4)) (= (type $generated@@419) $generated@@76)) (= (type $generated@@420) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@418 ($generated@@274 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@93 $generated@@418 $generated@@421))) ($generated@@284 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@93 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@86 $generated@@418 ($generated@@274 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@93 ($generated@@327 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@93 ($generated@@327 $generated@@423) $generated@@422)))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@88 $generated@@172 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@339 (type $generated@@427))))
(let (($generated@@429 ($generated@@338 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@88 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@337 $generated@@172 $generated@@172)) (= (type $generated@@431) $generated@@172)) (= ($generated@@0 ($generated@@93 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@93 ($generated@@335 $generated@@430) ($generated@@170 ($generated@@374 $generated@@163 $generated@@431)))) (= ($generated@@93 ($generated@@425 $generated@@430) ($generated@@170 ($generated@@374 $generated@@163 $generated@@431))) ($generated@@171 ($generated@@374 $generated@@163 $generated@@431))))))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@88 $generated@@172 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@357 (type $generated@@435))))
(let (($generated@@437 ($generated@@356 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@439) $generated@@172)) (= ($generated@@0 ($generated@@93 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@93 ($generated@@353 $generated@@438) ($generated@@170 ($generated@@374 $generated@@163 $generated@@439)))) (= ($generated@@93 ($generated@@433 $generated@@438) ($generated@@170 ($generated@@374 $generated@@163 $generated@@439))) ($generated@@171 ($generated@@374 $generated@@163 $generated@@439))))))
 :pattern ( ($generated@@93 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@338 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@337 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@93 ($generated@@390 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@93 ($generated@@335 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@93 ($generated@@425 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@93 ($generated@@335 $generated@@440) $generated@@444))
 :pattern ( ($generated@@93 ($generated@@425 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@93 ($generated@@390 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@356 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@355 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@93 ($generated@@401 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@93 ($generated@@353 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@93 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@445) $generated@@449))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@93 ($generated@@401 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@76)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@337 $generated@@172 $generated@@172)) (= (type $generated@@454) $generated@@76)) (= (type $generated@@455) $generated@@76)) (= (type $generated@@456) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@172) ($generated@@0 ($generated@@93 ($generated@@335 $generated@@453) $generated@@457))) (and ($generated@@284 ($generated@@93 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@284 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@93 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@93 ($generated@@335 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@86 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@76)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@462) $generated@@76)) (= (type $generated@@463) $generated@@76)) (= (type $generated@@464) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@172) ($generated@@0 ($generated@@93 ($generated@@353 $generated@@461) $generated@@465))) (and ($generated@@284 ($generated@@93 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@284 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@86 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@466 $generated@@468))) (and ($generated@@144 $generated@@466 $generated@@467) ($generated@@144 $generated@@467 $generated@@468))) ($generated@@144 $generated@@466 $generated@@468))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467) ($generated@@144 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@88 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@357 (type $generated@@471))))
(let (($generated@@473 ($generated@@356 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@355 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@354 $generated@@473 $generated@@472)) (= ($generated@@353 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@353 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@357 (type $generated@@474))))
(let (($generated@@476 ($generated@@356 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@355 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@354 $generated@@476 $generated@@475)) (= ($generated@@401 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@401 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@357 (type $generated@@477))))
(let (($generated@@479 ($generated@@356 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@355 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@354 $generated@@479 $generated@@478)) (= ($generated@@432 $generated@@477) ($generated@@469 $generated@@172))))))
 :pattern ( ($generated@@432 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@339 (type $generated@@480))))
(let (($generated@@482 ($generated@@338 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@337 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@336 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@172) (= (type $generated@@484) $generated@@172)) ($generated@@0 ($generated@@93 ($generated@@424 $generated@@480) ($generated@@313 ($generated@@256 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@424 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@357 (type $generated@@485))))
(let (($generated@@487 ($generated@@356 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@355 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@354 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) ($generated@@0 ($generated@@93 ($generated@@432 $generated@@485) ($generated@@313 ($generated@@256 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@432 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) ($generated@@257 $generated@@490 $generated@@46)) (and (= ($generated@@313 ($generated@@374 $generated@@2 $generated@@490)) $generated@@490) ($generated@@158 ($generated@@374 $generated@@2 $generated@@490) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@490 $generated@@46))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@172) ($generated@@257 $generated@@491 $generated@@47)) (and (= ($generated@@313 ($generated@@374 $generated@@3 $generated@@491)) $generated@@491) ($generated@@158 ($generated@@374 $generated@@3 $generated@@491) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@491 $generated@@47))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@172) ($generated@@257 $generated@@492 $generated@@44)) (and (= ($generated@@313 ($generated@@374 $generated@@4 $generated@@492)) $generated@@492) ($generated@@158 ($generated@@374 $generated@@4 $generated@@492) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@492 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@493) 20))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@172) ($generated@@257 $generated@@494 $generated@@45)) (and (= ($generated@@313 ($generated@@374 $generated@@493 $generated@@494)) $generated@@494) ($generated@@158 ($generated@@374 $generated@@493 $generated@@494) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@494 $generated@@45))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@76) (= ($generated@@257 ($generated@@313 $generated@@495) $generated@@496) ($generated@@158 $generated@@495 $generated@@496)))
 :pattern ( ($generated@@257 ($generated@@313 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@91 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@88 $generated@@498 $generated@@2)) (<= 0 ($generated@@326 $generated@@497))))
 :pattern ( ($generated@@326 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@300 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@299 $generated@@500)) (<= 0 ($generated@@298 $generated@@499))))
 :pattern ( ($generated@@298 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@76)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@76) (= (type $generated@@504) $generated@@76)) (= ($generated@@501 ($generated@@450 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@450 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@76)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@76) (= (type $generated@@508) $generated@@76)) (= ($generated@@505 ($generated@@450 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@450 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@76) (= (type $generated@@510) $generated@@76)) (= ($generated@@84 ($generated@@450 $generated@@509 $generated@@510)) $generated@@58))
 :pattern ( ($generated@@450 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@76)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@76) (= (type $generated@@514) $generated@@76)) (= ($generated@@511 ($generated@@458 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@458 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@76)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@76) (= (type $generated@@518) $generated@@76)) (= ($generated@@515 ($generated@@458 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@458 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@76) (= (type $generated@@520) $generated@@76)) (= ($generated@@84 ($generated@@458 $generated@@519 $generated@@520)) $generated@@59))
 :pattern ( ($generated@@458 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@172) (= (type $generated@@522) $generated@@172)) (= ($generated@@290 ($generated@@256 $generated@@521 $generated@@522)) $generated@@63))
 :pattern ( ($generated@@256 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@76)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@76) (= (type $generated@@526) $generated@@76)) (= ($generated@@523 ($generated@@162 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@162 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@76)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@76) (= (type $generated@@530) $generated@@76)) (= ($generated@@527 ($generated@@162 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@162 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@172) (= (type $generated@@532) $generated@@172)) (= ($generated@@170 ($generated@@256 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@256 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@172) (= (type $generated@@534) $generated@@172)) (= ($generated@@171 ($generated@@256 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@256 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@89) ($generated@@158 $generated@@535 $generated@@148))
 :pattern ( ($generated@@158 $generated@@535 $generated@@148))
)))
(assert  (and (forall (($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@538)) $generated@@76)
 :pattern ( ($generated@@536 $generated@@538))
)) (forall (($generated@@539 T@U) ($generated@@540 Int) ) (! (let (($generated@@541 ($generated@@300 (type $generated@@539))))
(= (type ($generated@@537 $generated@@539 $generated@@540)) $generated@@541))
 :pattern ( ($generated@@537 $generated@@539 $generated@@540))
))))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@299 $generated@@172)) (= (type $generated@@543) $generated@@76)) (= (type $generated@@544) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@542 ($generated@@536 $generated@@543) $generated@@544) (forall (($generated@@545 Int) ) (!  (=> (and (<= 0 $generated@@545) (< $generated@@545 ($generated@@298 $generated@@542))) ($generated@@284 ($generated@@537 $generated@@542 $generated@@545) $generated@@543 $generated@@544))
 :pattern ( ($generated@@537 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@86 $generated@@542 ($generated@@536 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@546 ($generated@@87 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@87 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@76)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@76) (= ($generated@@548 ($generated@@269 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@269 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@76) (= ($generated@@84 ($generated@@269 $generated@@551)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@76)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@76) (= ($generated@@552 ($generated@@274 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@274 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@76) (= ($generated@@84 ($generated@@274 $generated@@555)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@76)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@76) (= ($generated@@556 ($generated@@179 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@179 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@76) (= ($generated@@84 ($generated@@179 $generated@@559)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@76)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@76) (= ($generated@@560 ($generated@@536 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@536 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@76) (= ($generated@@84 ($generated@@536 $generated@@563)) $generated@@57))
 :pattern ( ($generated@@536 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@172) (= ($generated@@290 ($generated@@309 $generated@@564)) $generated@@69))
 :pattern ( ($generated@@309 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@76)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@76) (= ($generated@@565 ($generated@@185 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@185 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@172) (= ($generated@@305 ($generated@@309 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@309 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
(= ($generated@@374 $generated@@570 ($generated@@313 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@313 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@337 $generated@@172 $generated@@172)) (= (type $generated@@572) $generated@@76)) (= (type $generated@@573) $generated@@76)) (= ($generated@@158 $generated@@571 ($generated@@450 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@172) ($generated@@0 ($generated@@93 ($generated@@335 $generated@@571) $generated@@574))) (and ($generated@@257 ($generated@@93 ($generated@@425 $generated@@571) $generated@@574) $generated@@573) ($generated@@257 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@93 ($generated@@425 $generated@@571) $generated@@574))
 :pattern ( ($generated@@93 ($generated@@335 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@158 $generated@@571 ($generated@@450 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@576) $generated@@76)) (= (type $generated@@577) $generated@@76)) (= ($generated@@158 $generated@@575 ($generated@@458 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) ($generated@@0 ($generated@@93 ($generated@@353 $generated@@575) $generated@@578))) (and ($generated@@257 ($generated@@93 ($generated@@433 $generated@@575) $generated@@578) $generated@@577) ($generated@@257 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@575) $generated@@578))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@158 $generated@@575 ($generated@@458 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@76) (= (type $generated@@580) $generated@@172)) (= ($generated@@158 ($generated@@309 $generated@@580) ($generated@@185 $generated@@579)) ($generated@@257 $generated@@580 $generated@@579)))
 :pattern ( ($generated@@158 ($generated@@309 $generated@@580) ($generated@@185 $generated@@579)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@172) (= (type $generated@@584) $generated@@172)) (< ($generated@@581 $generated@@583) ($generated@@582 ($generated@@256 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@256 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@172) (= (type $generated@@586) $generated@@172)) (< ($generated@@581 $generated@@586) ($generated@@582 ($generated@@256 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@256 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@76)) (= (type $generated@@589) $generated@@76)) ($generated@@257 $generated@@587 ($generated@@450 $generated@@588 $generated@@589))) (and (= ($generated@@313 ($generated@@374 ($generated@@337 $generated@@172 $generated@@172) $generated@@587)) $generated@@587) ($generated@@158 ($generated@@374 ($generated@@337 $generated@@172 $generated@@172) $generated@@587) ($generated@@450 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@257 $generated@@587 ($generated@@450 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@172) (= (type $generated@@591) $generated@@76)) (= (type $generated@@592) $generated@@76)) ($generated@@257 $generated@@590 ($generated@@458 $generated@@591 $generated@@592))) (and (= ($generated@@313 ($generated@@374 ($generated@@355 $generated@@172 $generated@@172) $generated@@590)) $generated@@590) ($generated@@158 ($generated@@374 ($generated@@355 $generated@@172 $generated@@172) $generated@@590) ($generated@@458 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@257 $generated@@590 ($generated@@458 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@76) (= (type $generated@@594) $generated@@76)) (= (type $generated@@595) $generated@@172)) ($generated@@257 $generated@@595 ($generated@@162 $generated@@593 $generated@@594))) (and (= ($generated@@313 ($generated@@374 $generated@@163 $generated@@595)) $generated@@595) ($generated@@158 ($generated@@374 $generated@@163 $generated@@595) ($generated@@162 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@257 $generated@@595 ($generated@@162 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@172) (< ($generated@@581 $generated@@596) ($generated@@582 ($generated@@309 $generated@@596))))
 :pattern ( ($generated@@309 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@163) (= (type $generated@@598) $generated@@76)) (= (type $generated@@599) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@283 $generated@@599) (and ($generated@@184 $generated@@597) ($generated@@86 $generated@@597 ($generated@@185 $generated@@598) $generated@@599)))) ($generated@@284 ($generated@@305 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@284 ($generated@@305 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (not ($generated@@0 ($generated@@93 ($generated@@469 $generated@@601) $generated@@600))))
 :pattern ( (let (($generated@@601 (type $generated@@600)))
($generated@@93 ($generated@@469 $generated@@601) $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@76) (= (type $generated@@603) $generated@@76)) (and (= ($generated@@84 ($generated@@162 $generated@@602 $generated@@603)) $generated@@64) (= ($generated@@332 ($generated@@162 $generated@@602 $generated@@603)) $generated@@72)))
 :pattern ( ($generated@@162 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@163) (= ($generated@@581 ($generated@@313 $generated@@604)) ($generated@@582 $generated@@604)))
 :pattern ( ($generated@@581 ($generated@@313 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@172) ($generated@@257 $generated@@605 ($generated@@87 0))) (and (= ($generated@@313 ($generated@@374 $generated@@2 $generated@@605)) $generated@@605) ($generated@@158 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@605) ($generated@@87 0))))
 :pattern ( ($generated@@257 $generated@@605 ($generated@@87 0)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@172) (= (type $generated@@607) $generated@@76)) ($generated@@257 $generated@@606 ($generated@@269 $generated@@607))) (and (= ($generated@@313 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@606)) $generated@@606) ($generated@@158 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@606) ($generated@@269 $generated@@607))))
 :pattern ( ($generated@@257 $generated@@606 ($generated@@269 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@172) (= (type $generated@@609) $generated@@76)) ($generated@@257 $generated@@608 ($generated@@274 $generated@@609))) (and (= ($generated@@313 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@608)) $generated@@608) ($generated@@158 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@608) ($generated@@274 $generated@@609))))
 :pattern ( ($generated@@257 $generated@@608 ($generated@@274 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@172) (= (type $generated@@611) $generated@@76)) ($generated@@257 $generated@@610 ($generated@@179 $generated@@611))) (and (= ($generated@@313 ($generated@@374 ($generated@@88 $generated@@172 $generated@@2) $generated@@610)) $generated@@610) ($generated@@158 ($generated@@374 ($generated@@88 $generated@@172 $generated@@2) $generated@@610) ($generated@@179 $generated@@611))))
 :pattern ( ($generated@@257 $generated@@610 ($generated@@179 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@172) (= (type $generated@@613) $generated@@76)) ($generated@@257 $generated@@612 ($generated@@536 $generated@@613))) (and (= ($generated@@313 ($generated@@374 ($generated@@299 $generated@@172) $generated@@612)) $generated@@612) ($generated@@158 ($generated@@374 ($generated@@299 $generated@@172) $generated@@612) ($generated@@536 $generated@@613))))
 :pattern ( ($generated@@257 $generated@@612 ($generated@@536 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@76) (= (type $generated@@615) $generated@@172)) ($generated@@257 $generated@@615 ($generated@@185 $generated@@614))) (and (= ($generated@@313 ($generated@@374 $generated@@163 $generated@@615)) $generated@@615) ($generated@@158 ($generated@@374 $generated@@163 $generated@@615) ($generated@@185 $generated@@614))))
 :pattern ( ($generated@@257 $generated@@615 ($generated@@185 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@89) (= (type $generated@@617) ($generated@@88 $generated@@89 $generated@@90))) (and (not (= $generated@@616 $generated@@149)) ($generated@@86 $generated@@616 $generated@@155 $generated@@617))) ($generated@@86 $generated@@616 $generated@@177 $generated@@617))
 :pattern ( ($generated@@86 $generated@@616 $generated@@155 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (=> (and (and (and (= (type $generated@@618) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@619) $generated@@89)) (= (type $generated@@620) ($generated@@78 $generated@@622))) ($generated@@283 ($generated@@94 $generated@@618 $generated@@619 ($generated@@96 ($generated@@93 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))) ($generated@@144 $generated@@618 ($generated@@94 $generated@@618 $generated@@619 ($generated@@96 ($generated@@93 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@94 $generated@@618 $generated@@619 ($generated@@96 ($generated@@93 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))
)))
(assert (= ($generated@@84 $generated@@148) $generated@@61))
(assert (= ($generated@@332 $generated@@148) $generated@@71))
(assert (= ($generated@@84 $generated@@248) $generated@@62))
(assert (= ($generated@@332 $generated@@248) $generated@@71))
(assert (= ($generated@@84 $generated@@152) $generated@@65))
(assert (= ($generated@@332 $generated@@152) $generated@@73))
(assert (= ($generated@@84 $generated@@177) $generated@@66))
(assert (= ($generated@@332 $generated@@177) $generated@@73))
(assert (= ($generated@@84 $generated@@155) $generated@@67))
(assert (= ($generated@@332 $generated@@155) $generated@@74))
(assert (= ($generated@@84 $generated@@253) $generated@@68))
(assert (= ($generated@@332 $generated@@253) $generated@@74))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@88 $generated@@172 $generated@@2)) (= (type $generated@@624) $generated@@76)) (= (type $generated@@625) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@623 ($generated@@179 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@172) (< 0 ($generated ($generated@@93 $generated@@623 $generated@@626)))) ($generated@@284 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@93 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@86 $generated@@623 ($generated@@179 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@89) (= ($generated@@158 $generated@@627 $generated@@152)  (or (= $generated@@627 $generated@@149) ($generated@@160 ($generated@@189 $generated@@627)))))
 :pattern ( ($generated@@158 $generated@@627 $generated@@152))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@163) (= (type $generated@@629) $generated@@76)) (= (type $generated@@630) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@283 $generated@@630) (and ($generated@@161 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@76) ($generated@@86 $generated@@628 ($generated@@162 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@86 $generated@@628 ($generated@@162 $generated@@629 $generated@@631) $generated@@630))
))))) ($generated@@284 ($generated@@170 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@163) (= (type $generated@@633) $generated@@76)) (= (type $generated@@634) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@283 $generated@@634) (and ($generated@@161 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@76) ($generated@@86 $generated@@632 ($generated@@162 $generated@@635 $generated@@633) $generated@@634))
 :pattern ( ($generated@@86 $generated@@632 ($generated@@162 $generated@@635 $generated@@633) $generated@@634))
))))) ($generated@@284 ($generated@@171 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@284 ($generated@@171 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@172) (= (type $generated@@637) $generated@@172)) (= ($generated@@256 ($generated@@279 $generated@@636) ($generated@@279 $generated@@637)) ($generated@@279 ($generated@@256 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@256 ($generated@@279 $generated@@636) ($generated@@279 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@172) (= ($generated@@309 ($generated@@279 $generated@@638)) ($generated@@279 ($generated@@309 $generated@@638))))
 :pattern ( ($generated@@309 ($generated@@279 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (= ($generated@@313 ($generated@@279 $generated@@639)) ($generated@@279 ($generated@@313 $generated@@639)))
 :pattern ( ($generated@@313 ($generated@@279 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@300 (type $generated@@640))))
 (=> (and (= (type $generated@@640) ($generated@@299 $generated@@641)) (= ($generated@@298 $generated@@640) 0)) (= $generated@@640 ($generated@@297 $generated@@641))))
 :pattern ( ($generated@@298 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@643)))
 (=> (and (and (= (type $generated@@642) ($generated@@88 $generated@@645 $generated@@2)) (= (type $generated@@644) $generated@@2)) (<= 0 ($generated $generated@@644))) (= ($generated@@326 ($generated@@94 $generated@@642 $generated@@643 $generated@@644)) (+ (- ($generated@@326 $generated@@642) ($generated ($generated@@93 $generated@@642 $generated@@643))) ($generated $generated@@644)))))
 :pattern ( ($generated@@326 ($generated@@94 $generated@@642 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@647) $generated@@2)) ($generated@@86 $generated@@647 $generated@@46 $generated@@646))
 :pattern ( ($generated@@86 $generated@@647 $generated@@46 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@649) $generated@@3)) ($generated@@86 $generated@@649 $generated@@47 $generated@@648))
 :pattern ( ($generated@@86 $generated@@649 $generated@@47 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@4)) ($generated@@86 $generated@@651 $generated@@44 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@44 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@493)) ($generated@@86 $generated@@653 $generated@@45 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@45 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@172)) ($generated@@86 $generated@@655 $generated@@48 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@48 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@299 $generated@@172)) (= (type $generated@@657) $generated@@76)) (= ($generated@@158 $generated@@656 ($generated@@536 $generated@@657)) (forall (($generated@@658 Int) ) (!  (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@298 $generated@@656))) ($generated@@257 ($generated@@537 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@537 $generated@@656 $generated@@658))
))))
 :pattern ( ($generated@@158 $generated@@656 ($generated@@536 $generated@@657)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 Int) ) (!  (=> (= (type $generated@@660) ($generated@@299 $generated@@172)) (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@298 $generated@@660))) (< ($generated@@582 ($generated@@374 $generated@@163 ($generated@@537 $generated@@660 $generated@@661))) ($generated@@659 $generated@@660))))
 :pattern ( ($generated@@582 ($generated@@374 $generated@@163 ($generated@@537 $generated@@660 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@337 $generated@@172 $generated@@172)) (= (type $generated@@663) $generated@@76)) (= (type $generated@@664) $generated@@76)) ($generated@@158 $generated@@662 ($generated@@450 $generated@@663 $generated@@664))) (and (and ($generated@@158 ($generated@@335 $generated@@662) ($generated@@269 $generated@@663)) ($generated@@158 ($generated@@390 $generated@@662) ($generated@@269 $generated@@664))) ($generated@@158 ($generated@@424 $generated@@662) ($generated@@269 ($generated@@162 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@158 $generated@@662 ($generated@@450 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@666) $generated@@76)) (= (type $generated@@667) $generated@@76)) ($generated@@158 $generated@@665 ($generated@@458 $generated@@666 $generated@@667))) (and (and ($generated@@158 ($generated@@353 $generated@@665) ($generated@@274 $generated@@666)) ($generated@@158 ($generated@@401 $generated@@665) ($generated@@274 $generated@@667))) ($generated@@158 ($generated@@432 $generated@@665) ($generated@@274 ($generated@@162 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@158 $generated@@665 ($generated@@458 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@2) ($generated@@158 $generated@@668 $generated@@46))
 :pattern ( ($generated@@158 $generated@@668 $generated@@46))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@3) ($generated@@158 $generated@@669 $generated@@47))
 :pattern ( ($generated@@158 $generated@@669 $generated@@47))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@4) ($generated@@158 $generated@@670 $generated@@44))
 :pattern ( ($generated@@158 $generated@@670 $generated@@44))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@493) ($generated@@158 $generated@@671 $generated@@45))
 :pattern ( ($generated@@158 $generated@@671 $generated@@45))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@172) ($generated@@158 $generated@@672 $generated@@48))
 :pattern ( ($generated@@158 $generated@@672 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Bool)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Bool)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@673) ($generated@@194 $generated@@89 $generated@@4)) (= (type $generated@@674) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@675) $generated@@89)) (= (type $generated@@676) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@678) $generated@@163)) (= (type $generated@@680) $generated@@163)) (= (type $generated@@682) $generated@@89)) (= (type $generated@@684) $generated@@163)) (= (type $generated@@685) $generated@@163)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@687  (=> (= $generated@@673 ($generated@@193 $generated@@149 $generated@@674 $generated@@60 false)) (=> (and (not (= $generated@@675 $generated@@149)) (= ($generated@@189 $generated@@675) $generated@@155)) (=> (and (and (not ($generated@@0 ($generated@@95 ($generated@@93 $generated@@674 $generated@@675) $generated@@60))) (= $generated@@676 ($generated@@94 $generated@@674 $generated@@675 ($generated@@96 ($generated@@93 $generated@@674 $generated@@675) $generated@@60 ($generated@@11 true))))) (and ($generated@@283 $generated@@676) ($generated@@677 $generated@@676))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (=> (and (= $generated@@678 ($generated@@309 ($generated@@313 $generated@@675))) (=> $generated@@679 (and ($generated@@158 $generated@@680 ($generated@@185 $generated@@248)) ($generated@@86 $generated@@680 ($generated@@185 $generated@@248) $generated@@676)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))
(let (($generated@@688  (=> (and ($generated@@283 $generated@@674) ($generated@@677 $generated@@674)) (=> (and (and (and (=> $generated@@681 (and ($generated@@158 $generated@@682 $generated@@253) ($generated@@86 $generated@@682 $generated@@253 $generated@@674))) true) (and (=> $generated@@683 (and ($generated@@158 $generated@@684 ($generated@@185 $generated@@253)) ($generated@@86 $generated@@684 ($generated@@185 $generated@@253) $generated@@674))) true)) (and (and (=> $generated@@679 (and ($generated@@158 $generated@@685 ($generated@@185 $generated@@248)) ($generated@@86 $generated@@685 ($generated@@185 $generated@@248) $generated@@674))) true) (and (= 1 $generated@@686) (= (ControlFlow 0 6) 2)))) $generated@@687))))
$generated@@688)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@374 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@493 () T@T)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@537 (T@U Int) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@659 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@82 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@82)) 8))) (forall (($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@78 $generated@@83))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@77)) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@63) $generated@@80)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@77)) (= (type $generated@@66) $generated@@77)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@81)) (= (type $generated@@73) $generated@@81)) (= (type $generated@@74) $generated@@81)) (= (type $generated@@75) $generated@@81)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@77)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 11)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@79 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@79 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@76)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@146) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (and (= (type $generated@@148) $generated@@76) (= (type $generated@@149) $generated@@89)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@89) (= (type $generated@@151) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@150 $generated@@148 $generated@@151))
)))
(assert (= (type $generated@@152) $generated@@76))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@89) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@153 $generated@@152 $generated@@154)  (or (= $generated@@153 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@153 $generated@@152 $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@76))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@89) (= (type $generated@@157) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@158 $generated@@159 ($generated@@87 0)))
 :pattern ( ($generated@@158 $generated@@159 ($generated@@87 0)))
)))
(assert ($generated@@160 $generated@@155))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@76)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@76) (= (type $generated@@167) $generated@@76)) (= (type $generated@@168) $generated@@163)) ($generated@@158 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@158 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (= (type $generated@@177) $generated@@76))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@89) (=> (and (not (= $generated@@178 $generated@@149)) ($generated@@158 $generated@@178 $generated@@155)) ($generated@@158 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@158 $generated@@178 $generated@@155))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@76)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@88 $generated@@172 $generated@@2)) (= (type $generated@@183) $generated@@76)) ($generated@@158 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@158 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@185 $generated@@186)) $generated@@76)
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@76) (= (type $generated@@188) $generated@@163)) ($generated@@158 $generated@@188 ($generated@@185 $generated@@187))) ($generated@@184 $generated@@188))
 :pattern ( ($generated@@184 $generated@@188) ($generated@@158 $generated@@188 ($generated@@185 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@189 $generated@@190)) $generated@@76)
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@89) (= ($generated@@158 $generated@@191 $generated@@155)  (or (= $generated@@191 $generated@@149) (= ($generated@@189 $generated@@191) $generated@@155))))
 :pattern ( ($generated@@158 $generated@@191 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 16)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@194 $generated@@89 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@79 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@89) (= (type $generated@@242) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@243) ($generated@@78 $generated@@4))) (= (type $generated@@245) $generated@@89)) (= (type $generated@@246) ($generated@@78 $generated@@247))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (= (type $generated@@248) $generated@@76))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@89) (= (type $generated@@250) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@249 $generated@@248 $generated@@250) ($generated@@86 $generated@@249 $generated@@148 $generated@@250)))
 :pattern ( ($generated@@86 $generated@@249 $generated@@248 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@89) (= (type $generated@@252) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@251 $generated@@177 $generated@@252) ($generated@@86 $generated@@251 $generated@@152 $generated@@252)))
 :pattern ( ($generated@@86 $generated@@251 $generated@@177 $generated@@252))
)))
(assert (= (type $generated@@253) $generated@@76))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@89) (= (type $generated@@255) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@254 $generated@@253 $generated@@255) ($generated@@86 $generated@@254 $generated@@155 $generated@@255)))
 :pattern ( ($generated@@86 $generated@@254 $generated@@253 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@163)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@76) (= (type $generated@@261) $generated@@76)) (= (type $generated@@262) $generated@@172)) (= (type $generated@@263) $generated@@172)) (= ($generated@@158 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@158 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@163) (= (type $generated@@265) $generated@@163)) (= ($generated@@169 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@169 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@163) (= (type $generated@@268) $generated@@163)) (= ($generated@@266 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@76)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@172 $generated@@4)) (= (type $generated@@272) $generated@@76)) (= ($generated@@158 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@172) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@257 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@158 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@76)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@88 $generated@@172 $generated@@4)) (= (type $generated@@277) $generated@@76)) (= ($generated@@158 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@172) ($generated@@0 ($generated@@93 $generated@@276 $generated@@278))) ($generated@@257 $generated@@278 $generated@@277))
 :pattern ( ($generated@@93 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@158 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@76) (= (type $generated@@286) $generated@@76)) (= (type $generated@@287) $generated@@172)) (= (type $generated@@288) $generated@@172)) (= (type $generated@@289) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@283 $generated@@289)) (= ($generated@@86 ($generated@@256 $generated@@287 $generated@@288) ($generated@@162 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@86 ($generated@@256 $generated@@287 $generated@@288) ($generated@@162 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@80)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@163) (= ($generated@@161 $generated@@292) (= ($generated@@290 $generated@@292) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@163) (= ($generated@@184 $generated@@293) (= ($generated@@290 $generated@@293) $generated@@69)))
 :pattern ( ($generated@@184 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@163) ($generated@@161 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@172) (= (type $generated@@296) $generated@@172)) (= $generated@@294 ($generated@@256 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@161 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@172)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@307) $generated@@163) (= (type $generated@@308) $generated@@163)) true) (= ($generated@@266 $generated@@307 $generated@@308) (= ($generated@@305 $generated@@307) ($generated@@305 $generated@@308))))
 :pattern ( ($generated@@266 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@163)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@163) ($generated@@184 $generated@@311)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@172) (= $generated@@311 ($generated@@309 $generated@@312)))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@184 $generated@@311))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@172)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@76) (= (type $generated@@317) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@284 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@86 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@284 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@318) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@319) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@320) $generated@@172)) (= (type $generated@@321) $generated@@76)) ($generated@@144 $generated@@318 $generated@@319)) ($generated@@284 $generated@@320 $generated@@321 $generated@@318)) ($generated@@284 $generated@@320 $generated@@321 $generated@@319))
 :pattern ( ($generated@@144 $generated@@318 $generated@@319) ($generated@@284 $generated@@320 $generated@@321 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@325) $generated@@76)) ($generated@@144 $generated@@322 $generated@@323)) ($generated@@86 $generated@@324 $generated@@325 $generated@@322)) ($generated@@86 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@144 $generated@@322 $generated@@323) ($generated@@86 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@88 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@91 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@88 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@93 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@81)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@76) (and (= ($generated@@84 ($generated@@185 $generated@@334)) $generated@@70) (= ($generated@@332 ($generated@@185 $generated@@334)) $generated@@75)))
 :pattern ( ($generated@@185 $generated@@334))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 18)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@88 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@93 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@93 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 19)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@88 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@93 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@93 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@91 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@88 $generated@@372 $generated@@2)) (= ($generated@@180 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (and (<= 0 ($generated ($generated@@93 $generated@@371 $generated@@373))) (<= ($generated ($generated@@93 $generated@@371 $generated@@373)) ($generated@@326 $generated@@371))))
 :pattern ( ($generated@@93 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@180 $generated@@371))
)))
(assert (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@172) ($generated@@257 $generated@@377 $generated@@148)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@377)) $generated@@377) ($generated@@158 ($generated@@374 $generated@@89 $generated@@377) $generated@@148)))
 :pattern ( ($generated@@257 $generated@@377 $generated@@148))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@257 $generated@@378 $generated@@248)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@378)) $generated@@378) ($generated@@158 ($generated@@374 $generated@@89 $generated@@378) $generated@@248)))
 :pattern ( ($generated@@257 $generated@@378 $generated@@248))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@172) ($generated@@257 $generated@@379 $generated@@152)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@379)) $generated@@379) ($generated@@158 ($generated@@374 $generated@@89 $generated@@379) $generated@@152)))
 :pattern ( ($generated@@257 $generated@@379 $generated@@152))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@172) ($generated@@257 $generated@@380 $generated@@177)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@380)) $generated@@380) ($generated@@158 ($generated@@374 $generated@@89 $generated@@380) $generated@@177)))
 :pattern ( ($generated@@257 $generated@@380 $generated@@177))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@172) ($generated@@257 $generated@@381 $generated@@155)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@381)) $generated@@381) ($generated@@158 ($generated@@374 $generated@@89 $generated@@381) $generated@@155)))
 :pattern ( ($generated@@257 $generated@@381 $generated@@155))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@257 $generated@@382 $generated@@253)) (and (= ($generated@@313 ($generated@@374 $generated@@89 $generated@@382)) $generated@@382) ($generated@@158 ($generated@@374 $generated@@89 $generated@@382) $generated@@253)))
 :pattern ( ($generated@@257 $generated@@382 $generated@@253))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@89) (= ($generated@@158 $generated@@383 $generated@@248)  (and ($generated@@158 $generated@@383 $generated@@148) (not (= $generated@@383 $generated@@149)))))
 :pattern ( ($generated@@158 $generated@@383 $generated@@248))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@89) (= ($generated@@158 $generated@@384 $generated@@177)  (and ($generated@@158 $generated@@384 $generated@@152) (not (= $generated@@384 $generated@@149)))))
 :pattern ( ($generated@@158 $generated@@384 $generated@@177))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@89) (= ($generated@@158 $generated@@385 $generated@@253)  (and ($generated@@158 $generated@@385 $generated@@155) (not (= $generated@@385 $generated@@149)))))
 :pattern ( ($generated@@158 $generated@@385 $generated@@253))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@339 (type $generated@@386))))
(let (($generated@@388 ($generated@@338 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@337 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@336 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@93 ($generated@@335 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@335 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@339 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@88 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@339 (type $generated@@393))))
(let (($generated@@395 ($generated@@338 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@337 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@336 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@93 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@357 (type $generated@@397))))
(let (($generated@@399 ($generated@@356 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@355 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@354 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@93 ($generated@@353 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@353 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@357 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@88 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@357 (type $generated@@404))))
(let (($generated@@406 ($generated@@356 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@355 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@354 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@93 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@88 $generated@@172 $generated@@2)) (= (type $generated@@409) $generated@@76)) (= ($generated@@158 $generated@@408 ($generated@@179 $generated@@409)) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@172) (< 0 ($generated ($generated@@93 $generated@@408 $generated@@410)))) ($generated@@257 $generated@@410 $generated@@409))
 :pattern ( ($generated@@93 $generated@@408 $generated@@410))
))))
 :pattern ( ($generated@@158 $generated@@408 ($generated@@179 $generated@@409)))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) $generated@@76) (= (type $generated@@412) $generated@@172)) (= (type $generated@@413) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@283 $generated@@413)) (= ($generated@@86 ($generated@@309 $generated@@412) ($generated@@185 $generated@@411) $generated@@413) ($generated@@284 $generated@@412 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@412) ($generated@@185 $generated@@411) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@88 $generated@@172 $generated@@4)) (= (type $generated@@415) $generated@@76)) (= (type $generated@@416) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@414 ($generated@@269 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@172) ($generated@@0 ($generated@@93 $generated@@414 $generated@@417))) ($generated@@284 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@93 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@86 $generated@@414 ($generated@@269 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@88 $generated@@172 $generated@@4)) (= (type $generated@@419) $generated@@76)) (= (type $generated@@420) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@418 ($generated@@274 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@93 $generated@@418 $generated@@421))) ($generated@@284 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@93 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@86 $generated@@418 ($generated@@274 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@93 ($generated@@327 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@93 ($generated@@327 $generated@@423) $generated@@422)))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@88 $generated@@172 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@339 (type $generated@@427))))
(let (($generated@@429 ($generated@@338 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@88 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@337 $generated@@172 $generated@@172)) (= (type $generated@@431) $generated@@172)) (= ($generated@@0 ($generated@@93 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@93 ($generated@@335 $generated@@430) ($generated@@170 ($generated@@374 $generated@@163 $generated@@431)))) (= ($generated@@93 ($generated@@425 $generated@@430) ($generated@@170 ($generated@@374 $generated@@163 $generated@@431))) ($generated@@171 ($generated@@374 $generated@@163 $generated@@431))))))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@88 $generated@@172 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@357 (type $generated@@435))))
(let (($generated@@437 ($generated@@356 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@439) $generated@@172)) (= ($generated@@0 ($generated@@93 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@93 ($generated@@353 $generated@@438) ($generated@@170 ($generated@@374 $generated@@163 $generated@@439)))) (= ($generated@@93 ($generated@@433 $generated@@438) ($generated@@170 ($generated@@374 $generated@@163 $generated@@439))) ($generated@@171 ($generated@@374 $generated@@163 $generated@@439))))))
 :pattern ( ($generated@@93 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@338 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@337 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@93 ($generated@@390 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@93 ($generated@@335 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@93 ($generated@@425 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@93 ($generated@@335 $generated@@440) $generated@@444))
 :pattern ( ($generated@@93 ($generated@@425 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@93 ($generated@@390 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@356 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@355 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@93 ($generated@@401 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@93 ($generated@@353 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@93 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@445) $generated@@449))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@93 ($generated@@401 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@76)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@337 $generated@@172 $generated@@172)) (= (type $generated@@454) $generated@@76)) (= (type $generated@@455) $generated@@76)) (= (type $generated@@456) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@172) ($generated@@0 ($generated@@93 ($generated@@335 $generated@@453) $generated@@457))) (and ($generated@@284 ($generated@@93 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@284 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@93 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@93 ($generated@@335 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@86 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@76)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@462) $generated@@76)) (= (type $generated@@463) $generated@@76)) (= (type $generated@@464) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@172) ($generated@@0 ($generated@@93 ($generated@@353 $generated@@461) $generated@@465))) (and ($generated@@284 ($generated@@93 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@284 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@86 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@466 $generated@@468))) (and ($generated@@144 $generated@@466 $generated@@467) ($generated@@144 $generated@@467 $generated@@468))) ($generated@@144 $generated@@466 $generated@@468))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467) ($generated@@144 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@88 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@357 (type $generated@@471))))
(let (($generated@@473 ($generated@@356 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@355 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@354 $generated@@473 $generated@@472)) (= ($generated@@353 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@353 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@357 (type $generated@@474))))
(let (($generated@@476 ($generated@@356 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@355 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@354 $generated@@476 $generated@@475)) (= ($generated@@401 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@401 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@357 (type $generated@@477))))
(let (($generated@@479 ($generated@@356 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@355 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@354 $generated@@479 $generated@@478)) (= ($generated@@432 $generated@@477) ($generated@@469 $generated@@172))))))
 :pattern ( ($generated@@432 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@339 (type $generated@@480))))
(let (($generated@@482 ($generated@@338 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@337 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@336 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@172) (= (type $generated@@484) $generated@@172)) ($generated@@0 ($generated@@93 ($generated@@424 $generated@@480) ($generated@@313 ($generated@@256 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@424 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@357 (type $generated@@485))))
(let (($generated@@487 ($generated@@356 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@355 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@354 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) ($generated@@0 ($generated@@93 ($generated@@432 $generated@@485) ($generated@@313 ($generated@@256 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@432 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) ($generated@@257 $generated@@490 $generated@@46)) (and (= ($generated@@313 ($generated@@374 $generated@@2 $generated@@490)) $generated@@490) ($generated@@158 ($generated@@374 $generated@@2 $generated@@490) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@490 $generated@@46))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@172) ($generated@@257 $generated@@491 $generated@@47)) (and (= ($generated@@313 ($generated@@374 $generated@@3 $generated@@491)) $generated@@491) ($generated@@158 ($generated@@374 $generated@@3 $generated@@491) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@491 $generated@@47))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@172) ($generated@@257 $generated@@492 $generated@@44)) (and (= ($generated@@313 ($generated@@374 $generated@@4 $generated@@492)) $generated@@492) ($generated@@158 ($generated@@374 $generated@@4 $generated@@492) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@492 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@493) 20))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@172) ($generated@@257 $generated@@494 $generated@@45)) (and (= ($generated@@313 ($generated@@374 $generated@@493 $generated@@494)) $generated@@494) ($generated@@158 ($generated@@374 $generated@@493 $generated@@494) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@494 $generated@@45))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@76) (= ($generated@@257 ($generated@@313 $generated@@495) $generated@@496) ($generated@@158 $generated@@495 $generated@@496)))
 :pattern ( ($generated@@257 ($generated@@313 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@91 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@88 $generated@@498 $generated@@2)) (<= 0 ($generated@@326 $generated@@497))))
 :pattern ( ($generated@@326 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@300 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@299 $generated@@500)) (<= 0 ($generated@@298 $generated@@499))))
 :pattern ( ($generated@@298 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@76)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@76) (= (type $generated@@504) $generated@@76)) (= ($generated@@501 ($generated@@450 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@450 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@76)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@76) (= (type $generated@@508) $generated@@76)) (= ($generated@@505 ($generated@@450 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@450 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@76) (= (type $generated@@510) $generated@@76)) (= ($generated@@84 ($generated@@450 $generated@@509 $generated@@510)) $generated@@58))
 :pattern ( ($generated@@450 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@76)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@76) (= (type $generated@@514) $generated@@76)) (= ($generated@@511 ($generated@@458 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@458 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@76)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@76) (= (type $generated@@518) $generated@@76)) (= ($generated@@515 ($generated@@458 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@458 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@76) (= (type $generated@@520) $generated@@76)) (= ($generated@@84 ($generated@@458 $generated@@519 $generated@@520)) $generated@@59))
 :pattern ( ($generated@@458 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@172) (= (type $generated@@522) $generated@@172)) (= ($generated@@290 ($generated@@256 $generated@@521 $generated@@522)) $generated@@63))
 :pattern ( ($generated@@256 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@76)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@76) (= (type $generated@@526) $generated@@76)) (= ($generated@@523 ($generated@@162 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@162 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@76)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@76) (= (type $generated@@530) $generated@@76)) (= ($generated@@527 ($generated@@162 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@162 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@172) (= (type $generated@@532) $generated@@172)) (= ($generated@@170 ($generated@@256 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@256 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@172) (= (type $generated@@534) $generated@@172)) (= ($generated@@171 ($generated@@256 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@256 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@89) ($generated@@158 $generated@@535 $generated@@148))
 :pattern ( ($generated@@158 $generated@@535 $generated@@148))
)))
(assert  (and (forall (($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@538)) $generated@@76)
 :pattern ( ($generated@@536 $generated@@538))
)) (forall (($generated@@539 T@U) ($generated@@540 Int) ) (! (let (($generated@@541 ($generated@@300 (type $generated@@539))))
(= (type ($generated@@537 $generated@@539 $generated@@540)) $generated@@541))
 :pattern ( ($generated@@537 $generated@@539 $generated@@540))
))))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@299 $generated@@172)) (= (type $generated@@543) $generated@@76)) (= (type $generated@@544) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@542 ($generated@@536 $generated@@543) $generated@@544) (forall (($generated@@545 Int) ) (!  (=> (and (<= 0 $generated@@545) (< $generated@@545 ($generated@@298 $generated@@542))) ($generated@@284 ($generated@@537 $generated@@542 $generated@@545) $generated@@543 $generated@@544))
 :pattern ( ($generated@@537 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@86 $generated@@542 ($generated@@536 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@546 ($generated@@87 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@87 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@76)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@76) (= ($generated@@548 ($generated@@269 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@269 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@76) (= ($generated@@84 ($generated@@269 $generated@@551)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@76)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@76) (= ($generated@@552 ($generated@@274 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@274 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@76) (= ($generated@@84 ($generated@@274 $generated@@555)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@76)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@76) (= ($generated@@556 ($generated@@179 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@179 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@76) (= ($generated@@84 ($generated@@179 $generated@@559)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@76)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@76) (= ($generated@@560 ($generated@@536 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@536 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@76) (= ($generated@@84 ($generated@@536 $generated@@563)) $generated@@57))
 :pattern ( ($generated@@536 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@172) (= ($generated@@290 ($generated@@309 $generated@@564)) $generated@@69))
 :pattern ( ($generated@@309 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@76)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@76) (= ($generated@@565 ($generated@@185 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@185 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@172) (= ($generated@@305 ($generated@@309 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@309 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
(= ($generated@@374 $generated@@570 ($generated@@313 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@313 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@337 $generated@@172 $generated@@172)) (= (type $generated@@572) $generated@@76)) (= (type $generated@@573) $generated@@76)) (= ($generated@@158 $generated@@571 ($generated@@450 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@172) ($generated@@0 ($generated@@93 ($generated@@335 $generated@@571) $generated@@574))) (and ($generated@@257 ($generated@@93 ($generated@@425 $generated@@571) $generated@@574) $generated@@573) ($generated@@257 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@93 ($generated@@425 $generated@@571) $generated@@574))
 :pattern ( ($generated@@93 ($generated@@335 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@158 $generated@@571 ($generated@@450 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@576) $generated@@76)) (= (type $generated@@577) $generated@@76)) (= ($generated@@158 $generated@@575 ($generated@@458 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) ($generated@@0 ($generated@@93 ($generated@@353 $generated@@575) $generated@@578))) (and ($generated@@257 ($generated@@93 ($generated@@433 $generated@@575) $generated@@578) $generated@@577) ($generated@@257 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@575) $generated@@578))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@158 $generated@@575 ($generated@@458 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@76) (= (type $generated@@580) $generated@@172)) (= ($generated@@158 ($generated@@309 $generated@@580) ($generated@@185 $generated@@579)) ($generated@@257 $generated@@580 $generated@@579)))
 :pattern ( ($generated@@158 ($generated@@309 $generated@@580) ($generated@@185 $generated@@579)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@172) (= (type $generated@@584) $generated@@172)) (< ($generated@@581 $generated@@583) ($generated@@582 ($generated@@256 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@256 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@172) (= (type $generated@@586) $generated@@172)) (< ($generated@@581 $generated@@586) ($generated@@582 ($generated@@256 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@256 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@76)) (= (type $generated@@589) $generated@@76)) ($generated@@257 $generated@@587 ($generated@@450 $generated@@588 $generated@@589))) (and (= ($generated@@313 ($generated@@374 ($generated@@337 $generated@@172 $generated@@172) $generated@@587)) $generated@@587) ($generated@@158 ($generated@@374 ($generated@@337 $generated@@172 $generated@@172) $generated@@587) ($generated@@450 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@257 $generated@@587 ($generated@@450 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@172) (= (type $generated@@591) $generated@@76)) (= (type $generated@@592) $generated@@76)) ($generated@@257 $generated@@590 ($generated@@458 $generated@@591 $generated@@592))) (and (= ($generated@@313 ($generated@@374 ($generated@@355 $generated@@172 $generated@@172) $generated@@590)) $generated@@590) ($generated@@158 ($generated@@374 ($generated@@355 $generated@@172 $generated@@172) $generated@@590) ($generated@@458 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@257 $generated@@590 ($generated@@458 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@76) (= (type $generated@@594) $generated@@76)) (= (type $generated@@595) $generated@@172)) ($generated@@257 $generated@@595 ($generated@@162 $generated@@593 $generated@@594))) (and (= ($generated@@313 ($generated@@374 $generated@@163 $generated@@595)) $generated@@595) ($generated@@158 ($generated@@374 $generated@@163 $generated@@595) ($generated@@162 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@257 $generated@@595 ($generated@@162 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@172) (< ($generated@@581 $generated@@596) ($generated@@582 ($generated@@309 $generated@@596))))
 :pattern ( ($generated@@309 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@163) (= (type $generated@@598) $generated@@76)) (= (type $generated@@599) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@283 $generated@@599) (and ($generated@@184 $generated@@597) ($generated@@86 $generated@@597 ($generated@@185 $generated@@598) $generated@@599)))) ($generated@@284 ($generated@@305 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@284 ($generated@@305 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (not ($generated@@0 ($generated@@93 ($generated@@469 $generated@@601) $generated@@600))))
 :pattern ( (let (($generated@@601 (type $generated@@600)))
($generated@@93 ($generated@@469 $generated@@601) $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@76) (= (type $generated@@603) $generated@@76)) (and (= ($generated@@84 ($generated@@162 $generated@@602 $generated@@603)) $generated@@64) (= ($generated@@332 ($generated@@162 $generated@@602 $generated@@603)) $generated@@72)))
 :pattern ( ($generated@@162 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@163) (= ($generated@@581 ($generated@@313 $generated@@604)) ($generated@@582 $generated@@604)))
 :pattern ( ($generated@@581 ($generated@@313 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@172) ($generated@@257 $generated@@605 ($generated@@87 0))) (and (= ($generated@@313 ($generated@@374 $generated@@2 $generated@@605)) $generated@@605) ($generated@@158 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@605) ($generated@@87 0))))
 :pattern ( ($generated@@257 $generated@@605 ($generated@@87 0)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@172) (= (type $generated@@607) $generated@@76)) ($generated@@257 $generated@@606 ($generated@@269 $generated@@607))) (and (= ($generated@@313 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@606)) $generated@@606) ($generated@@158 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@606) ($generated@@269 $generated@@607))))
 :pattern ( ($generated@@257 $generated@@606 ($generated@@269 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@172) (= (type $generated@@609) $generated@@76)) ($generated@@257 $generated@@608 ($generated@@274 $generated@@609))) (and (= ($generated@@313 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@608)) $generated@@608) ($generated@@158 ($generated@@374 ($generated@@88 $generated@@172 $generated@@4) $generated@@608) ($generated@@274 $generated@@609))))
 :pattern ( ($generated@@257 $generated@@608 ($generated@@274 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@172) (= (type $generated@@611) $generated@@76)) ($generated@@257 $generated@@610 ($generated@@179 $generated@@611))) (and (= ($generated@@313 ($generated@@374 ($generated@@88 $generated@@172 $generated@@2) $generated@@610)) $generated@@610) ($generated@@158 ($generated@@374 ($generated@@88 $generated@@172 $generated@@2) $generated@@610) ($generated@@179 $generated@@611))))
 :pattern ( ($generated@@257 $generated@@610 ($generated@@179 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@172) (= (type $generated@@613) $generated@@76)) ($generated@@257 $generated@@612 ($generated@@536 $generated@@613))) (and (= ($generated@@313 ($generated@@374 ($generated@@299 $generated@@172) $generated@@612)) $generated@@612) ($generated@@158 ($generated@@374 ($generated@@299 $generated@@172) $generated@@612) ($generated@@536 $generated@@613))))
 :pattern ( ($generated@@257 $generated@@612 ($generated@@536 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@76) (= (type $generated@@615) $generated@@172)) ($generated@@257 $generated@@615 ($generated@@185 $generated@@614))) (and (= ($generated@@313 ($generated@@374 $generated@@163 $generated@@615)) $generated@@615) ($generated@@158 ($generated@@374 $generated@@163 $generated@@615) ($generated@@185 $generated@@614))))
 :pattern ( ($generated@@257 $generated@@615 ($generated@@185 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@89) (= (type $generated@@617) ($generated@@88 $generated@@89 $generated@@90))) (and (not (= $generated@@616 $generated@@149)) ($generated@@86 $generated@@616 $generated@@155 $generated@@617))) ($generated@@86 $generated@@616 $generated@@177 $generated@@617))
 :pattern ( ($generated@@86 $generated@@616 $generated@@155 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (=> (and (and (and (= (type $generated@@618) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@619) $generated@@89)) (= (type $generated@@620) ($generated@@78 $generated@@622))) ($generated@@283 ($generated@@94 $generated@@618 $generated@@619 ($generated@@96 ($generated@@93 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))) ($generated@@144 $generated@@618 ($generated@@94 $generated@@618 $generated@@619 ($generated@@96 ($generated@@93 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@94 $generated@@618 $generated@@619 ($generated@@96 ($generated@@93 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))
)))
(assert (= ($generated@@84 $generated@@148) $generated@@61))
(assert (= ($generated@@332 $generated@@148) $generated@@71))
(assert (= ($generated@@84 $generated@@248) $generated@@62))
(assert (= ($generated@@332 $generated@@248) $generated@@71))
(assert (= ($generated@@84 $generated@@152) $generated@@65))
(assert (= ($generated@@332 $generated@@152) $generated@@73))
(assert (= ($generated@@84 $generated@@177) $generated@@66))
(assert (= ($generated@@332 $generated@@177) $generated@@73))
(assert (= ($generated@@84 $generated@@155) $generated@@67))
(assert (= ($generated@@332 $generated@@155) $generated@@74))
(assert (= ($generated@@84 $generated@@253) $generated@@68))
(assert (= ($generated@@332 $generated@@253) $generated@@74))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@88 $generated@@172 $generated@@2)) (= (type $generated@@624) $generated@@76)) (= (type $generated@@625) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@623 ($generated@@179 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@172) (< 0 ($generated ($generated@@93 $generated@@623 $generated@@626)))) ($generated@@284 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@93 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@86 $generated@@623 ($generated@@179 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@89) (= ($generated@@158 $generated@@627 $generated@@152)  (or (= $generated@@627 $generated@@149) ($generated@@160 ($generated@@189 $generated@@627)))))
 :pattern ( ($generated@@158 $generated@@627 $generated@@152))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@163) (= (type $generated@@629) $generated@@76)) (= (type $generated@@630) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@283 $generated@@630) (and ($generated@@161 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@76) ($generated@@86 $generated@@628 ($generated@@162 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@86 $generated@@628 ($generated@@162 $generated@@629 $generated@@631) $generated@@630))
))))) ($generated@@284 ($generated@@170 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@163) (= (type $generated@@633) $generated@@76)) (= (type $generated@@634) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@283 $generated@@634) (and ($generated@@161 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@76) ($generated@@86 $generated@@632 ($generated@@162 $generated@@635 $generated@@633) $generated@@634))
 :pattern ( ($generated@@86 $generated@@632 ($generated@@162 $generated@@635 $generated@@633) $generated@@634))
))))) ($generated@@284 ($generated@@171 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@284 ($generated@@171 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@172) (= (type $generated@@637) $generated@@172)) (= ($generated@@256 ($generated@@279 $generated@@636) ($generated@@279 $generated@@637)) ($generated@@279 ($generated@@256 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@256 ($generated@@279 $generated@@636) ($generated@@279 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@172) (= ($generated@@309 ($generated@@279 $generated@@638)) ($generated@@279 ($generated@@309 $generated@@638))))
 :pattern ( ($generated@@309 ($generated@@279 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (= ($generated@@313 ($generated@@279 $generated@@639)) ($generated@@279 ($generated@@313 $generated@@639)))
 :pattern ( ($generated@@313 ($generated@@279 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@300 (type $generated@@640))))
 (=> (and (= (type $generated@@640) ($generated@@299 $generated@@641)) (= ($generated@@298 $generated@@640) 0)) (= $generated@@640 ($generated@@297 $generated@@641))))
 :pattern ( ($generated@@298 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@643)))
 (=> (and (and (= (type $generated@@642) ($generated@@88 $generated@@645 $generated@@2)) (= (type $generated@@644) $generated@@2)) (<= 0 ($generated $generated@@644))) (= ($generated@@326 ($generated@@94 $generated@@642 $generated@@643 $generated@@644)) (+ (- ($generated@@326 $generated@@642) ($generated ($generated@@93 $generated@@642 $generated@@643))) ($generated $generated@@644)))))
 :pattern ( ($generated@@326 ($generated@@94 $generated@@642 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@647) $generated@@2)) ($generated@@86 $generated@@647 $generated@@46 $generated@@646))
 :pattern ( ($generated@@86 $generated@@647 $generated@@46 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@649) $generated@@3)) ($generated@@86 $generated@@649 $generated@@47 $generated@@648))
 :pattern ( ($generated@@86 $generated@@649 $generated@@47 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@4)) ($generated@@86 $generated@@651 $generated@@44 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@44 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@493)) ($generated@@86 $generated@@653 $generated@@45 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@45 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@172)) ($generated@@86 $generated@@655 $generated@@48 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@48 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@299 $generated@@172)) (= (type $generated@@657) $generated@@76)) (= ($generated@@158 $generated@@656 ($generated@@536 $generated@@657)) (forall (($generated@@658 Int) ) (!  (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@298 $generated@@656))) ($generated@@257 ($generated@@537 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@537 $generated@@656 $generated@@658))
))))
 :pattern ( ($generated@@158 $generated@@656 ($generated@@536 $generated@@657)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 Int) ) (!  (=> (= (type $generated@@660) ($generated@@299 $generated@@172)) (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@298 $generated@@660))) (< ($generated@@582 ($generated@@374 $generated@@163 ($generated@@537 $generated@@660 $generated@@661))) ($generated@@659 $generated@@660))))
 :pattern ( ($generated@@582 ($generated@@374 $generated@@163 ($generated@@537 $generated@@660 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@337 $generated@@172 $generated@@172)) (= (type $generated@@663) $generated@@76)) (= (type $generated@@664) $generated@@76)) ($generated@@158 $generated@@662 ($generated@@450 $generated@@663 $generated@@664))) (and (and ($generated@@158 ($generated@@335 $generated@@662) ($generated@@269 $generated@@663)) ($generated@@158 ($generated@@390 $generated@@662) ($generated@@269 $generated@@664))) ($generated@@158 ($generated@@424 $generated@@662) ($generated@@269 ($generated@@162 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@158 $generated@@662 ($generated@@450 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@355 $generated@@172 $generated@@172)) (= (type $generated@@666) $generated@@76)) (= (type $generated@@667) $generated@@76)) ($generated@@158 $generated@@665 ($generated@@458 $generated@@666 $generated@@667))) (and (and ($generated@@158 ($generated@@353 $generated@@665) ($generated@@274 $generated@@666)) ($generated@@158 ($generated@@401 $generated@@665) ($generated@@274 $generated@@667))) ($generated@@158 ($generated@@432 $generated@@665) ($generated@@274 ($generated@@162 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@158 $generated@@665 ($generated@@458 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@2) ($generated@@158 $generated@@668 $generated@@46))
 :pattern ( ($generated@@158 $generated@@668 $generated@@46))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@3) ($generated@@158 $generated@@669 $generated@@47))
 :pattern ( ($generated@@158 $generated@@669 $generated@@47))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@4) ($generated@@158 $generated@@670 $generated@@44))
 :pattern ( ($generated@@158 $generated@@670 $generated@@44))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@493) ($generated@@158 $generated@@671 $generated@@45))
 :pattern ( ($generated@@158 $generated@@671 $generated@@45))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@172) ($generated@@158 $generated@@672 $generated@@48))
 :pattern ( ($generated@@158 $generated@@672 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Bool)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Bool)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@673) ($generated@@194 $generated@@89 $generated@@4)) (= (type $generated@@674) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@675) $generated@@89)) (= (type $generated@@676) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@678) $generated@@163)) (= (type $generated@@680) $generated@@163)) (= (type $generated@@682) $generated@@89)) (= (type $generated@@684) $generated@@163)) (= (type $generated@@685) $generated@@163)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@687  (=> (= $generated@@673 ($generated@@193 $generated@@149 $generated@@674 $generated@@60 false)) (=> (and (not (= $generated@@675 $generated@@149)) (= ($generated@@189 $generated@@675) $generated@@155)) (=> (and (and (not ($generated@@0 ($generated@@95 ($generated@@93 $generated@@674 $generated@@675) $generated@@60))) (= $generated@@676 ($generated@@94 $generated@@674 $generated@@675 ($generated@@96 ($generated@@93 $generated@@674 $generated@@675) $generated@@60 ($generated@@11 true))))) (and ($generated@@283 $generated@@676) ($generated@@677 $generated@@676))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (=> (and (= $generated@@678 ($generated@@309 ($generated@@313 $generated@@675))) (=> $generated@@679 (and ($generated@@158 $generated@@680 ($generated@@185 $generated@@248)) ($generated@@86 $generated@@680 ($generated@@185 $generated@@248) $generated@@676)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))
(let (($generated@@688  (=> (and ($generated@@283 $generated@@674) ($generated@@677 $generated@@674)) (=> (and (and (and (=> $generated@@681 (and ($generated@@158 $generated@@682 $generated@@253) ($generated@@86 $generated@@682 $generated@@253 $generated@@674))) true) (and (=> $generated@@683 (and ($generated@@158 $generated@@684 ($generated@@185 $generated@@253)) ($generated@@86 $generated@@684 ($generated@@185 $generated@@253) $generated@@674))) true)) (and (and (=> $generated@@679 (and ($generated@@158 $generated@@685 ($generated@@185 $generated@@248)) ($generated@@86 $generated@@685 ($generated@@185 $generated@@248) $generated@@674))) true) (and (= 1 $generated@@686) (= (ControlFlow 0 6) 2)))) $generated@@687))))
$generated@@688)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@T) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U Int) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@579 (T@T) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert  (and (= (type $generated@@145) $generated@@73) (= (type $generated@@146) $generated@@86)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@86) (= (type $generated@@148) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@147 $generated@@145 $generated@@148)  (or (= $generated@@147 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@147 $generated@@145 $generated@@148))
)))
(assert (= (type $generated@@149) $generated@@73))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@86) (= (type $generated@@151) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@150 $generated@@149 $generated@@151)  (or (= $generated@@150 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@150 $generated@@149 $generated@@151))
)))
(assert (= (type $generated@@152) $generated@@73))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@86) (= (type $generated@@154) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@153 $generated@@152 $generated@@154)  (or (= $generated@@153 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@153 $generated@@152 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@84 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@84 0)))
)))
(assert ($generated@@157 $generated@@149))
(assert ($generated@@157 $generated@@152))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@73) (= (type $generated@@164) $generated@@73)) (= (type $generated@@165) $generated@@160)) ($generated@@155 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@155 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (= (type $generated@@174) $generated@@73))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@86) (=> (and (not (= $generated@@175 $generated@@146)) ($generated@@155 $generated@@175 $generated@@149)) ($generated@@155 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@155 $generated@@175 $generated@@149))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@86) (=> (and (not (= $generated@@176 $generated@@146)) ($generated@@155 $generated@@176 $generated@@152)) ($generated@@155 $generated@@176 $generated@@174)))
 :pattern ( ($generated@@155 $generated@@176 $generated@@152))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@181) $generated@@73)) ($generated@@155 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@155 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@86) (= ($generated@@155 $generated@@184 $generated@@149)  (or (= $generated@@184 $generated@@146) (= ($generated@@182 $generated@@184) $generated@@149))))
 :pattern ( ($generated@@155 $generated@@184 $generated@@149))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@86) (= ($generated@@155 $generated@@185 $generated@@152)  (or (= $generated@@185 $generated@@146) (= ($generated@@182 $generated@@185) $generated@@152))))
 :pattern ( ($generated@@155 $generated@@185 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@86 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@76 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@86) (= (type $generated@@236) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@237) ($generated@@75 $generated@@4))) (= (type $generated@@239) $generated@@86)) (= (type $generated@@240) ($generated@@75 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@86) (= (type $generated@@243) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@242 $generated@@174 $generated@@243) ($generated@@83 $generated@@242 $generated@@145 $generated@@243)))
 :pattern ( ($generated@@83 $generated@@242 $generated@@174 $generated@@243))
)))
(assert (= (type $generated@@244) $generated@@73))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@86) (= (type $generated@@246) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@245 $generated@@244 $generated@@246) ($generated@@83 $generated@@245 $generated@@149 $generated@@246)))
 :pattern ( ($generated@@83 $generated@@245 $generated@@244 $generated@@246))
)))
(assert (= (type $generated@@247) $generated@@73))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@86) (= (type $generated@@249) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@248 $generated@@247 $generated@@249) ($generated@@83 $generated@@248 $generated@@152 $generated@@249)))
 :pattern ( ($generated@@83 $generated@@248 $generated@@247 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@160)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@73) (= (type $generated@@255) $generated@@73)) (= (type $generated@@256) $generated@@169)) (= (type $generated@@257) $generated@@169)) (= ($generated@@155 ($generated@@250 $generated@@256 $generated@@257) ($generated@@159 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@155 ($generated@@250 $generated@@256 $generated@@257) ($generated@@159 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@160) (= (type $generated@@259) $generated@@160)) (= ($generated@@166 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@166 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@73)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@263) $generated@@73)) (= ($generated@@155 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@169) ($generated@@0 ($generated@@90 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@90 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@155 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@73)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@268) $generated@@73)) (= ($generated@@155 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@169) ($generated@@0 ($generated@@90 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@90 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@155 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@73) (= (type $generated@@277) $generated@@73)) (= (type $generated@@278) $generated@@169)) (= (type $generated@@279) $generated@@169)) (= (type $generated@@280) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@274 $generated@@280)) (= ($generated@@83 ($generated@@250 $generated@@278 $generated@@279) ($generated@@159 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@83 ($generated@@250 $generated@@278 $generated@@279) ($generated@@159 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@77)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@160) (= ($generated@@158 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@160) ($generated@@158 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@169) (= (type $generated@@286) $generated@@169)) (= $generated@@284 ($generated@@250 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@158 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@169)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@73) (= (type $generated@@299) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@83 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@301) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@302) $generated@@169)) (= (type $generated@@303) $generated@@73)) ($generated@@141 $generated@@300 $generated@@301)) ($generated@@275 $generated@@302 $generated@@303 $generated@@300)) ($generated@@275 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@141 $generated@@300 $generated@@301) ($generated@@275 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@305) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@307) $generated@@73)) ($generated@@141 $generated@@304 $generated@@305)) ($generated@@83 $generated@@306 $generated@@307 $generated@@304)) ($generated@@83 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@141 $generated@@304 $generated@@305) ($generated@@83 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@85 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@88 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@85 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@90 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@85 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@90 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@90 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@85 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@90 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@90 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@88 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@85 $generated@@351 $generated@@2)) (= ($generated@@178 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@90 $generated@@350 $generated@@352))) (<= ($generated ($generated@@90 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@90 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@178 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@169) ($generated@@251 $generated@@356 $generated@@145)) (and (= ($generated@@295 ($generated@@353 $generated@@86 $generated@@356)) $generated@@356) ($generated@@155 ($generated@@353 $generated@@86 $generated@@356) $generated@@145)))
 :pattern ( ($generated@@251 $generated@@356 $generated@@145))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@169) ($generated@@251 $generated@@357 $generated@@174)) (and (= ($generated@@295 ($generated@@353 $generated@@86 $generated@@357)) $generated@@357) ($generated@@155 ($generated@@353 $generated@@86 $generated@@357) $generated@@174)))
 :pattern ( ($generated@@251 $generated@@357 $generated@@174))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@169) ($generated@@251 $generated@@358 $generated@@149)) (and (= ($generated@@295 ($generated@@353 $generated@@86 $generated@@358)) $generated@@358) ($generated@@155 ($generated@@353 $generated@@86 $generated@@358) $generated@@149)))
 :pattern ( ($generated@@251 $generated@@358 $generated@@149))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@169) ($generated@@251 $generated@@359 $generated@@244)) (and (= ($generated@@295 ($generated@@353 $generated@@86 $generated@@359)) $generated@@359) ($generated@@155 ($generated@@353 $generated@@86 $generated@@359) $generated@@244)))
 :pattern ( ($generated@@251 $generated@@359 $generated@@244))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@169) ($generated@@251 $generated@@360 $generated@@152)) (and (= ($generated@@295 ($generated@@353 $generated@@86 $generated@@360)) $generated@@360) ($generated@@155 ($generated@@353 $generated@@86 $generated@@360) $generated@@152)))
 :pattern ( ($generated@@251 $generated@@360 $generated@@152))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@169) ($generated@@251 $generated@@361 $generated@@247)) (and (= ($generated@@295 ($generated@@353 $generated@@86 $generated@@361)) $generated@@361) ($generated@@155 ($generated@@353 $generated@@86 $generated@@361) $generated@@247)))
 :pattern ( ($generated@@251 $generated@@361 $generated@@247))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@86) (= ($generated@@155 $generated@@362 $generated@@174)  (and ($generated@@155 $generated@@362 $generated@@145) (not (= $generated@@362 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@362 $generated@@174))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@86) (= ($generated@@155 $generated@@363 $generated@@244)  (and ($generated@@155 $generated@@363 $generated@@149) (not (= $generated@@363 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@363 $generated@@244))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@86) (= ($generated@@155 $generated@@364 $generated@@247)  (and ($generated@@155 $generated@@364 $generated@@152) (not (= $generated@@364 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@364 $generated@@247))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@318 (type $generated@@365))))
(let (($generated@@367 ($generated@@317 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@316 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@315 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@314 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@318 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@85 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@318 (type $generated@@372))))
(let (($generated@@374 ($generated@@317 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@316 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@315 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@90 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@336 (type $generated@@376))))
(let (($generated@@378 ($generated@@335 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@334 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@333 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@90 ($generated@@332 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@332 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@336 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@85 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@336 (type $generated@@383))))
(let (($generated@@385 ($generated@@335 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@334 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@333 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@90 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@388) $generated@@73)) (= ($generated@@155 $generated@@387 ($generated@@177 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@169) (< 0 ($generated ($generated@@90 $generated@@387 $generated@@389)))) ($generated@@251 $generated@@389 $generated@@388))
 :pattern ( ($generated@@90 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@155 $generated@@387 ($generated@@177 $generated@@388)))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@391) $generated@@73)) (= (type $generated@@392) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@390 ($generated@@260 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@169) ($generated@@0 ($generated@@90 $generated@@390 $generated@@393))) ($generated@@275 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@90 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@83 $generated@@390 ($generated@@260 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@395) $generated@@73)) (= (type $generated@@396) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@394 ($generated@@265 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@169) ($generated@@0 ($generated@@90 $generated@@394 $generated@@397))) ($generated@@275 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@90 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@83 $generated@@394 ($generated@@265 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@90 ($generated@@309 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@90 ($generated@@309 $generated@@399) $generated@@398)))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@85 $generated@@169 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@318 (type $generated@@403))))
(let (($generated@@405 ($generated@@317 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@85 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@316 $generated@@169 $generated@@169)) (= (type $generated@@407) $generated@@169)) (= ($generated@@0 ($generated@@90 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@90 ($generated@@314 $generated@@406) ($generated@@167 ($generated@@353 $generated@@160 $generated@@407)))) (= ($generated@@90 ($generated@@401 $generated@@406) ($generated@@167 ($generated@@353 $generated@@160 $generated@@407))) ($generated@@168 ($generated@@353 $generated@@160 $generated@@407))))))
 :pattern ( ($generated@@90 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@85 $generated@@169 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@336 (type $generated@@411))))
(let (($generated@@413 ($generated@@335 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@85 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@334 $generated@@169 $generated@@169)) (= (type $generated@@415) $generated@@169)) (= ($generated@@0 ($generated@@90 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@90 ($generated@@332 $generated@@414) ($generated@@167 ($generated@@353 $generated@@160 $generated@@415)))) (= ($generated@@90 ($generated@@409 $generated@@414) ($generated@@167 ($generated@@353 $generated@@160 $generated@@415))) ($generated@@168 ($generated@@353 $generated@@160 $generated@@415))))))
 :pattern ( ($generated@@90 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@317 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@316 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@90 ($generated@@369 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@90 ($generated@@314 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@90 ($generated@@401 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@416) $generated@@420))
 :pattern ( ($generated@@90 ($generated@@401 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@90 ($generated@@369 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@335 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@334 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@90 ($generated@@380 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@90 ($generated@@332 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@90 ($generated@@409 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@90 ($generated@@332 $generated@@421) $generated@@425))
 :pattern ( ($generated@@90 ($generated@@409 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@90 ($generated@@380 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@73)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@316 $generated@@169 $generated@@169)) (= (type $generated@@430) $generated@@73)) (= (type $generated@@431) $generated@@73)) (= (type $generated@@432) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@429) $generated@@433))) (and ($generated@@275 ($generated@@90 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@275 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@90 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@83 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@73)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@334 $generated@@169 $generated@@169)) (= (type $generated@@438) $generated@@73)) (= (type $generated@@439) $generated@@73)) (= (type $generated@@440) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@332 $generated@@437) $generated@@441))) (and ($generated@@275 ($generated@@90 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@275 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@90 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@90 ($generated@@332 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@83 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
(= (type ($generated@@442 $generated@@443 $generated@@444)) ($generated@@85 $generated@@445 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@447)))
 (=> (and (and (= (type $generated@@446) ($generated@@85 $generated@@449 $generated@@4)) (= (type $generated@@448) $generated@@449)) ($generated@@0 ($generated@@90 $generated@@446 $generated@@448))) ($generated@@0 ($generated@@90 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))))
 :pattern ( ($generated@@442 $generated@@446 $generated@@447) ($generated@@90 $generated@@446 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@451)))
 (=> (and (= (type $generated@@450) ($generated@@85 $generated@@453 $generated@@4)) (= (type $generated@@452) $generated@@453)) (= ($generated@@0 ($generated@@90 ($generated@@442 $generated@@450 $generated@@451) $generated@@452))  (or (= $generated@@452 $generated@@451) ($generated@@0 ($generated@@90 $generated@@450 $generated@@452))))))
 :pattern ( ($generated@@90 ($generated@@442 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@454) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@455) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@456) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@454 $generated@@456))) (and ($generated@@141 $generated@@454 $generated@@455) ($generated@@141 $generated@@455 $generated@@456))) ($generated@@141 $generated@@454 $generated@@456))
 :pattern ( ($generated@@141 $generated@@454 $generated@@455) ($generated@@141 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@T) ) (! (= (type ($generated@@457 $generated@@458)) ($generated@@85 $generated@@458 $generated@@4))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@336 (type $generated@@459))))
(let (($generated@@461 ($generated@@335 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@334 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@333 $generated@@461 $generated@@460)) (= ($generated@@332 $generated@@459) ($generated@@457 $generated@@461))))))
 :pattern ( ($generated@@332 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@336 (type $generated@@462))))
(let (($generated@@464 ($generated@@335 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@334 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@333 $generated@@464 $generated@@463)) (= ($generated@@380 $generated@@462) ($generated@@457 $generated@@463))))))
 :pattern ( ($generated@@380 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@336 (type $generated@@465))))
(let (($generated@@467 ($generated@@335 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@334 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@333 $generated@@467 $generated@@466)) (= ($generated@@408 $generated@@465) ($generated@@457 $generated@@169))))))
 :pattern ( ($generated@@408 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@318 (type $generated@@468))))
(let (($generated@@470 ($generated@@317 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@316 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@315 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@169) (= (type $generated@@472) $generated@@169)) ($generated@@0 ($generated@@90 ($generated@@400 $generated@@468) ($generated@@295 ($generated@@250 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@400 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@336 (type $generated@@473))))
(let (($generated@@475 ($generated@@335 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@334 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@333 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@169) (= (type $generated@@477) $generated@@169)) ($generated@@0 ($generated@@90 ($generated@@408 $generated@@473) ($generated@@295 ($generated@@250 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@408 $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@169) ($generated@@251 $generated@@478 $generated@@46)) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@478)) $generated@@478) ($generated@@155 ($generated@@353 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@169) ($generated@@251 $generated@@479 $generated@@47)) (and (= ($generated@@295 ($generated@@353 $generated@@3 $generated@@479)) $generated@@479) ($generated@@155 ($generated@@353 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@169) ($generated@@251 $generated@@480 $generated@@44)) (and (= ($generated@@295 ($generated@@353 $generated@@4 $generated@@480)) $generated@@480) ($generated@@155 ($generated@@353 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 20))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@169) ($generated@@251 $generated@@482 $generated@@45)) (and (= ($generated@@295 ($generated@@353 $generated@@481 $generated@@482)) $generated@@482) ($generated@@155 ($generated@@353 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@73) (= ($generated@@251 ($generated@@295 $generated@@483) $generated@@484) ($generated@@155 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@251 ($generated@@295 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@88 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@85 $generated@@486 $generated@@2)) (<= 0 ($generated@@308 $generated@@485))))
 :pattern ( ($generated@@308 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@290 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@289 $generated@@488)) (<= 0 ($generated@@288 $generated@@487))))
 :pattern ( ($generated@@288 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@73)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@73) (= (type $generated@@492) $generated@@73)) (= ($generated@@489 ($generated@@426 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@426 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@73)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@73) (= (type $generated@@496) $generated@@73)) (= ($generated@@493 ($generated@@426 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@426 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@73) (= (type $generated@@498) $generated@@73)) (= ($generated@@81 ($generated@@426 $generated@@497 $generated@@498)) $generated@@58))
 :pattern ( ($generated@@426 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@73)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@73) (= (type $generated@@502) $generated@@73)) (= ($generated@@499 ($generated@@434 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@434 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@73)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@73) (= (type $generated@@506) $generated@@73)) (= ($generated@@503 ($generated@@434 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@434 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@73) (= (type $generated@@508) $generated@@73)) (= ($generated@@81 ($generated@@434 $generated@@507 $generated@@508)) $generated@@59))
 :pattern ( ($generated@@434 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@169) (= (type $generated@@510) $generated@@169)) (= ($generated@@281 ($generated@@250 $generated@@509 $generated@@510)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@73)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@73) (= (type $generated@@514) $generated@@73)) (= ($generated@@511 ($generated@@159 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@159 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@73)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@73) (= (type $generated@@518) $generated@@73)) (= ($generated@@515 ($generated@@159 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@159 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@169) (= (type $generated@@520) $generated@@169)) (= ($generated@@167 ($generated@@250 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@250 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@169) (= (type $generated@@522) $generated@@169)) (= ($generated@@168 ($generated@@250 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@250 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@73)
 :pattern ( ($generated@@523 $generated@@525))
)) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (! (let (($generated@@528 ($generated@@290 (type $generated@@526))))
(= (type ($generated@@524 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@524 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@289 $generated@@169)) (= (type $generated@@530) $generated@@73)) (= (type $generated@@531) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@529 ($generated@@523 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@288 $generated@@529))) ($generated@@275 ($generated@@524 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@524 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@83 $generated@@529 ($generated@@523 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (=> (= (type $generated@@533) ($generated@@85 $generated@@535 $generated@@4)) ($generated@@0 ($generated@@90 ($generated@@442 $generated@@533 $generated@@534) $generated@@534))))
 :pattern ( ($generated@@442 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@84 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@84 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@73)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@73) (= ($generated@@538 ($generated@@260 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@260 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@73) (= ($generated@@81 ($generated@@260 $generated@@541)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@73)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@73) (= ($generated@@542 ($generated@@265 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@265 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@73) (= ($generated@@81 ($generated@@265 $generated@@545)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@73)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@73) (= ($generated@@546 ($generated@@177 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@177 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@73) (= ($generated@@81 ($generated@@177 $generated@@549)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@73)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@73) (= ($generated@@550 ($generated@@523 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@523 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@73) (= ($generated@@81 ($generated@@523 $generated@@553)) $generated@@57))
 :pattern ( ($generated@@523 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
(= ($generated@@353 $generated@@555 ($generated@@295 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@295 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@316 $generated@@169 $generated@@169)) (= (type $generated@@557) $generated@@73)) (= (type $generated@@558) $generated@@73)) (= ($generated@@155 $generated@@556 ($generated@@426 $generated@@557 $generated@@558)) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@556) $generated@@559))) (and ($generated@@251 ($generated@@90 ($generated@@401 $generated@@556) $generated@@559) $generated@@558) ($generated@@251 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@90 ($generated@@401 $generated@@556) $generated@@559))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@556) $generated@@559))
))))
 :pattern ( ($generated@@155 $generated@@556 ($generated@@426 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@334 $generated@@169 $generated@@169)) (= (type $generated@@561) $generated@@73)) (= (type $generated@@562) $generated@@73)) (= ($generated@@155 $generated@@560 ($generated@@434 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@332 $generated@@560) $generated@@563))) (and ($generated@@251 ($generated@@90 ($generated@@409 $generated@@560) $generated@@563) $generated@@562) ($generated@@251 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@90 ($generated@@409 $generated@@560) $generated@@563))
 :pattern ( ($generated@@90 ($generated@@332 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@155 $generated@@560 ($generated@@434 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@169) (= (type $generated@@567) $generated@@169)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@250 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@250 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@169) (= (type $generated@@569) $generated@@169)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@250 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@250 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@169) (= (type $generated@@571) $generated@@73)) (= (type $generated@@572) $generated@@73)) ($generated@@251 $generated@@570 ($generated@@426 $generated@@571 $generated@@572))) (and (= ($generated@@295 ($generated@@353 ($generated@@316 $generated@@169 $generated@@169) $generated@@570)) $generated@@570) ($generated@@155 ($generated@@353 ($generated@@316 $generated@@169 $generated@@169) $generated@@570) ($generated@@426 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@251 $generated@@570 ($generated@@426 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@169) (= (type $generated@@574) $generated@@73)) (= (type $generated@@575) $generated@@73)) ($generated@@251 $generated@@573 ($generated@@434 $generated@@574 $generated@@575))) (and (= ($generated@@295 ($generated@@353 ($generated@@334 $generated@@169 $generated@@169) $generated@@573)) $generated@@573) ($generated@@155 ($generated@@353 ($generated@@334 $generated@@169 $generated@@169) $generated@@573) ($generated@@434 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@251 $generated@@573 ($generated@@434 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@73) (= (type $generated@@577) $generated@@73)) (= (type $generated@@578) $generated@@169)) ($generated@@251 $generated@@578 ($generated@@159 $generated@@576 $generated@@577))) (and (= ($generated@@295 ($generated@@353 $generated@@160 $generated@@578)) $generated@@578) ($generated@@155 ($generated@@353 $generated@@160 $generated@@578) ($generated@@159 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@251 $generated@@578 ($generated@@159 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@580 T@T) ) (! (= (type ($generated@@579 $generated@@580)) ($generated@@85 $generated@@580 $generated@@4))
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@90 ($generated@@579 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@90 ($generated@@579 $generated@@582) $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (not ($generated@@0 ($generated@@90 ($generated@@457 $generated@@584) $generated@@583))))
 :pattern ( (let (($generated@@584 (type $generated@@583)))
($generated@@90 ($generated@@457 $generated@@584) $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@78)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@73) (= (type $generated@@588) $generated@@73)) (and (= ($generated@@81 ($generated@@159 $generated@@587 $generated@@588)) $generated@@62) (= ($generated@@585 ($generated@@159 $generated@@587 $generated@@588)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@160) (= ($generated@@564 ($generated@@295 $generated@@589)) ($generated@@565 $generated@@589)))
 :pattern ( ($generated@@564 ($generated@@295 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@169) ($generated@@251 $generated@@590 ($generated@@84 0))) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@590)) $generated@@590) ($generated@@155 ($generated@@353 ($generated@@85 $generated@@169 $generated@@4) $generated@@590) ($generated@@84 0))))
 :pattern ( ($generated@@251 $generated@@590 ($generated@@84 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@169) (= (type $generated@@592) $generated@@73)) ($generated@@251 $generated@@591 ($generated@@260 $generated@@592))) (and (= ($generated@@295 ($generated@@353 ($generated@@85 $generated@@169 $generated@@4) $generated@@591)) $generated@@591) ($generated@@155 ($generated@@353 ($generated@@85 $generated@@169 $generated@@4) $generated@@591) ($generated@@260 $generated@@592))))
 :pattern ( ($generated@@251 $generated@@591 ($generated@@260 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@169) (= (type $generated@@594) $generated@@73)) ($generated@@251 $generated@@593 ($generated@@265 $generated@@594))) (and (= ($generated@@295 ($generated@@353 ($generated@@85 $generated@@169 $generated@@4) $generated@@593)) $generated@@593) ($generated@@155 ($generated@@353 ($generated@@85 $generated@@169 $generated@@4) $generated@@593) ($generated@@265 $generated@@594))))
 :pattern ( ($generated@@251 $generated@@593 ($generated@@265 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@169) (= (type $generated@@596) $generated@@73)) ($generated@@251 $generated@@595 ($generated@@177 $generated@@596))) (and (= ($generated@@295 ($generated@@353 ($generated@@85 $generated@@169 $generated@@2) $generated@@595)) $generated@@595) ($generated@@155 ($generated@@353 ($generated@@85 $generated@@169 $generated@@2) $generated@@595) ($generated@@177 $generated@@596))))
 :pattern ( ($generated@@251 $generated@@595 ($generated@@177 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@169) (= (type $generated@@598) $generated@@73)) ($generated@@251 $generated@@597 ($generated@@523 $generated@@598))) (and (= ($generated@@295 ($generated@@353 ($generated@@289 $generated@@169) $generated@@597)) $generated@@597) ($generated@@155 ($generated@@353 ($generated@@289 $generated@@169) $generated@@597) ($generated@@523 $generated@@598))))
 :pattern ( ($generated@@251 $generated@@597 ($generated@@523 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@86) (= (type $generated@@600) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@599 $generated@@146)) ($generated@@83 $generated@@599 $generated@@149 $generated@@600))) ($generated@@83 $generated@@599 $generated@@174 $generated@@600))
 :pattern ( ($generated@@83 $generated@@599 $generated@@149 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@86) (= (type $generated@@602) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@601 $generated@@146)) ($generated@@83 $generated@@601 $generated@@152 $generated@@602))) ($generated@@83 $generated@@601 $generated@@174 $generated@@602))
 :pattern ( ($generated@@83 $generated@@601 $generated@@152 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (=> (and (and (and (= (type $generated@@603) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@604) $generated@@86)) (= (type $generated@@605) ($generated@@75 $generated@@607))) ($generated@@274 ($generated@@91 $generated@@603 $generated@@604 ($generated@@93 ($generated@@90 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))) ($generated@@141 $generated@@603 ($generated@@91 $generated@@603 $generated@@604 ($generated@@93 ($generated@@90 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@91 $generated@@603 $generated@@604 ($generated@@93 ($generated@@90 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))
)))
(assert (= ($generated@@81 $generated@@145) $generated@@63))
(assert (= ($generated@@585 $generated@@145) $generated@@70))
(assert (= ($generated@@81 $generated@@174) $generated@@64))
(assert (= ($generated@@585 $generated@@174) $generated@@70))
(assert (= ($generated@@81 $generated@@149) $generated@@65))
(assert (= ($generated@@585 $generated@@149) $generated@@71))
(assert (= ($generated@@81 $generated@@244) $generated@@66))
(assert (= ($generated@@585 $generated@@244) $generated@@71))
(assert (= ($generated@@81 $generated@@152) $generated@@67))
(assert (= ($generated@@585 $generated@@152) $generated@@72))
(assert (= ($generated@@81 $generated@@247) $generated@@68))
(assert (= ($generated@@585 $generated@@247) $generated@@72))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@609) $generated@@73)) (= (type $generated@@610) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@608 ($generated@@177 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@169) (< 0 ($generated ($generated@@90 $generated@@608 $generated@@611)))) ($generated@@275 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@90 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@83 $generated@@608 ($generated@@177 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@86) (= ($generated@@155 $generated@@612 $generated@@145)  (or (= $generated@@612 $generated@@146) ($generated@@157 ($generated@@182 $generated@@612)))))
 :pattern ( ($generated@@155 $generated@@612 $generated@@145))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@160) (= (type $generated@@614) $generated@@73)) (= (type $generated@@615) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@274 $generated@@615) (and ($generated@@158 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@73) ($generated@@83 $generated@@613 ($generated@@159 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@83 $generated@@613 ($generated@@159 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@275 ($generated@@167 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@275 ($generated@@167 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@160) (= (type $generated@@618) $generated@@73)) (= (type $generated@@619) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@274 $generated@@619) (and ($generated@@158 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@73) ($generated@@83 $generated@@617 ($generated@@159 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@83 $generated@@617 ($generated@@159 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@275 ($generated@@168 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@275 ($generated@@168 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@169) (= (type $generated@@622) $generated@@169)) (= ($generated@@250 ($generated@@270 $generated@@621) ($generated@@270 $generated@@622)) ($generated@@270 ($generated@@250 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@621) ($generated@@270 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@295 ($generated@@270 $generated@@623)) ($generated@@270 ($generated@@295 $generated@@623)))
 :pattern ( ($generated@@295 ($generated@@270 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@290 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@289 $generated@@625)) (= ($generated@@288 $generated@@624) 0)) (= $generated@@624 ($generated@@287 $generated@@625))))
 :pattern ( ($generated@@288 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@85 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@308 ($generated@@91 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@308 $generated@@626) ($generated ($generated@@90 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@308 ($generated@@91 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@631) $generated@@2)) ($generated@@83 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@83 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@633) $generated@@3)) ($generated@@83 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@83 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@635) $generated@@4)) ($generated@@83 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@83 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@637) $generated@@481)) ($generated@@83 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@83 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@639) $generated@@169)) ($generated@@83 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@83 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@289 $generated@@169)) (= (type $generated@@641) $generated@@73)) (= ($generated@@155 $generated@@640 ($generated@@523 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@288 $generated@@640))) ($generated@@251 ($generated@@524 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@524 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@155 $generated@@640 ($generated@@523 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@289 $generated@@169)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@288 $generated@@644))) (< ($generated@@565 ($generated@@353 $generated@@160 ($generated@@524 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@565 ($generated@@353 $generated@@160 ($generated@@524 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@316 $generated@@169 $generated@@169)) (= (type $generated@@647) $generated@@73)) (= (type $generated@@648) $generated@@73)) ($generated@@155 $generated@@646 ($generated@@426 $generated@@647 $generated@@648))) (and (and ($generated@@155 ($generated@@314 $generated@@646) ($generated@@260 $generated@@647)) ($generated@@155 ($generated@@369 $generated@@646) ($generated@@260 $generated@@648))) ($generated@@155 ($generated@@400 $generated@@646) ($generated@@260 ($generated@@159 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@155 $generated@@646 ($generated@@426 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@334 $generated@@169 $generated@@169)) (= (type $generated@@650) $generated@@73)) (= (type $generated@@651) $generated@@73)) ($generated@@155 $generated@@649 ($generated@@434 $generated@@650 $generated@@651))) (and (and ($generated@@155 ($generated@@332 $generated@@649) ($generated@@265 $generated@@650)) ($generated@@155 ($generated@@380 $generated@@649) ($generated@@265 $generated@@651))) ($generated@@155 ($generated@@408 $generated@@649) ($generated@@265 ($generated@@159 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@155 $generated@@649 ($generated@@434 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@155 $generated@@652 $generated@@46))
 :pattern ( ($generated@@155 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@155 $generated@@653 $generated@@47))
 :pattern ( ($generated@@155 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@155 $generated@@654 $generated@@44))
 :pattern ( ($generated@@155 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@481) ($generated@@155 $generated@@655 $generated@@45))
 :pattern ( ($generated@@155 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@169) ($generated@@155 $generated@@656 $generated@@48))
 :pattern ( ($generated@@155 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Bool)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Bool)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@657) ($generated@@188 $generated@@86 $generated@@4)) (= (type $generated@@658) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@659) $generated@@86)) (= (type $generated@@660) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@662) $generated@@86)) (= (type $generated@@663) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@664) ($generated@@85 $generated@@169 $generated@@4))) (= (type $generated@@666) $generated@@86)) (= (type $generated@@668) $generated@@86)) (= (type $generated@@669) ($generated@@85 $generated@@169 $generated@@4))) (= (type $generated@@670) ($generated@@85 $generated@@169 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@672  (=> (= $generated@@657 ($generated@@187 $generated@@146 $generated@@658 $generated@@60 false)) (=> (and (and (not (= $generated@@659 $generated@@146)) (= ($generated@@182 $generated@@659) $generated@@149)) (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@658 $generated@@659) $generated@@60))) (= $generated@@660 ($generated@@91 $generated@@658 $generated@@659 ($generated@@93 ($generated@@90 $generated@@658 $generated@@659) $generated@@60 ($generated@@11 true)))))) (=> (and (and (and ($generated@@274 $generated@@660) ($generated@@661 $generated@@660)) (and (not (= $generated@@662 $generated@@146)) (= ($generated@@182 $generated@@662) $generated@@152))) (and (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@660 $generated@@662) $generated@@60))) (= $generated@@663 ($generated@@91 $generated@@660 $generated@@662 ($generated@@93 ($generated@@90 $generated@@660 $generated@@662) $generated@@60 ($generated@@11 true))))) (and ($generated@@274 $generated@@663) ($generated@@661 $generated@@663)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@664 ($generated@@442 ($generated@@442 ($generated@@579 $generated@@169) ($generated@@295 $generated@@659)) ($generated@@295 $generated@@662))) (= (ControlFlow 0 2) (- 0 1))) true))))))))
(let (($generated@@673  (=> (and ($generated@@274 $generated@@658) ($generated@@661 $generated@@658)) (=> (and (and (and (and (=> $generated@@665 (and ($generated@@155 $generated@@666 $generated@@244) ($generated@@83 $generated@@666 $generated@@244 $generated@@658))) true) (and (=> $generated@@667 (and ($generated@@155 $generated@@668 $generated@@247) ($generated@@83 $generated@@668 $generated@@247 $generated@@658))) true)) (and (and ($generated@@155 $generated@@669 ($generated@@260 $generated@@174)) ($generated@@83 $generated@@669 ($generated@@260 $generated@@174) $generated@@658)) true)) (and (and (and ($generated@@155 $generated@@670 ($generated@@260 $generated@@244)) ($generated@@83 $generated@@670 ($generated@@260 $generated@@244) $generated@@658)) true) (and (= 1 $generated@@671) (= (ControlFlow 0 5) 2)))) $generated@@672))))
$generated@@673)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@377 (T@U Int) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@T) T@U)
(declare-fun $generated@@489 () T@T)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@647 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert  (and (= (type $generated@@145) $generated@@73) (= (type $generated@@146) $generated@@86)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@86) (= (type $generated@@148) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@147 $generated@@145 $generated@@148)  (or (= $generated@@147 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@147 $generated@@145 $generated@@148))
)))
(assert (= (type $generated@@149) $generated@@73))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@86) (= (type $generated@@151) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@150 $generated@@149 $generated@@151)  (or (= $generated@@150 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@150 $generated@@149 $generated@@151))
)))
(assert (= (type $generated@@152) $generated@@73))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@86) (= (type $generated@@154) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@153 $generated@@152 $generated@@154)  (or (= $generated@@153 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@153 $generated@@152 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@84 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@84 0)))
)))
(assert ($generated@@157 $generated@@149))
(assert ($generated@@157 $generated@@152))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@73) (= (type $generated@@164) $generated@@73)) (= (type $generated@@165) $generated@@160)) ($generated@@155 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@155 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (= (type $generated@@174) $generated@@73))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@86) (=> (and (not (= $generated@@175 $generated@@146)) ($generated@@155 $generated@@175 $generated@@149)) ($generated@@155 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@155 $generated@@175 $generated@@149))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@86) (=> (and (not (= $generated@@176 $generated@@146)) ($generated@@155 $generated@@176 $generated@@152)) ($generated@@155 $generated@@176 $generated@@174)))
 :pattern ( ($generated@@155 $generated@@176 $generated@@152))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@181) $generated@@73)) ($generated@@155 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@155 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@86) (= ($generated@@155 $generated@@184 $generated@@149)  (or (= $generated@@184 $generated@@146) (= ($generated@@182 $generated@@184) $generated@@149))))
 :pattern ( ($generated@@155 $generated@@184 $generated@@149))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@86) (= ($generated@@155 $generated@@185 $generated@@152)  (or (= $generated@@185 $generated@@146) (= ($generated@@182 $generated@@185) $generated@@152))))
 :pattern ( ($generated@@155 $generated@@185 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@86 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@76 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@86) (= (type $generated@@236) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@237) ($generated@@75 $generated@@4))) (= (type $generated@@239) $generated@@86)) (= (type $generated@@240) ($generated@@75 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@86) (= (type $generated@@243) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@242 $generated@@174 $generated@@243) ($generated@@83 $generated@@242 $generated@@145 $generated@@243)))
 :pattern ( ($generated@@83 $generated@@242 $generated@@174 $generated@@243))
)))
(assert (= (type $generated@@244) $generated@@73))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@86) (= (type $generated@@246) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@245 $generated@@244 $generated@@246) ($generated@@83 $generated@@245 $generated@@149 $generated@@246)))
 :pattern ( ($generated@@83 $generated@@245 $generated@@244 $generated@@246))
)))
(assert (= (type $generated@@247) $generated@@73))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@86) (= (type $generated@@249) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@248 $generated@@247 $generated@@249) ($generated@@83 $generated@@248 $generated@@152 $generated@@249)))
 :pattern ( ($generated@@83 $generated@@248 $generated@@247 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@160)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@73) (= (type $generated@@255) $generated@@73)) (= (type $generated@@256) $generated@@169)) (= (type $generated@@257) $generated@@169)) (= ($generated@@155 ($generated@@250 $generated@@256 $generated@@257) ($generated@@159 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@155 ($generated@@250 $generated@@256 $generated@@257) ($generated@@159 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@160) (= (type $generated@@259) $generated@@160)) (= ($generated@@166 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@166 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@73)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@263) $generated@@73)) (= ($generated@@155 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@169) ($generated@@0 ($generated@@90 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@90 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@155 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@73)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@268) $generated@@73)) (= ($generated@@155 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@169) ($generated@@0 ($generated@@90 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@90 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@155 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 (type $generated@@281)))
(= (type ($generated@@274 $generated@@280 $generated@@281)) ($generated@@276 $generated@@282)))
 :pattern ( ($generated@@274 $generated@@280 $generated@@281))
))) (forall (($generated@@283 T@U) ) (! (= (type ($generated@@275 $generated@@283)) $generated@@73)
 :pattern ( ($generated@@275 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) ($generated@@276 $generated@@169)) (= (type $generated@@285) $generated@@169)) (= (type $generated@@286) $generated@@73)) (and ($generated@@155 $generated@@284 ($generated@@275 $generated@@286)) ($generated@@251 $generated@@285 $generated@@286))) ($generated@@155 ($generated@@274 $generated@@284 $generated@@285) ($generated@@275 $generated@@286)))
 :pattern ( ($generated@@155 ($generated@@274 $generated@@284 $generated@@285) ($generated@@275 $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@73) (= (type $generated@@290) $generated@@73)) (= (type $generated@@291) $generated@@169)) (= (type $generated@@292) $generated@@169)) (= (type $generated@@293) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@287 $generated@@293)) (= ($generated@@83 ($generated@@250 $generated@@291 $generated@@292) ($generated@@159 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@83 ($generated@@250 $generated@@291 $generated@@292) ($generated@@159 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@77)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@160) (= ($generated@@158 $generated@@296) (= ($generated@@294 $generated@@296) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@160) ($generated@@158 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@169) (= (type $generated@@299) $generated@@169)) (= $generated@@297 ($generated@@250 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@158 $generated@@297))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@300 $generated@@302)) ($generated@@276 $generated@@302))
 :pattern ( ($generated@@300 $generated@@302))
)))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) 0)
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 (type $generated@@305)))
 (=> (= (type $generated@@304) ($generated@@276 $generated@@306)) (= ($generated@@301 ($generated@@274 $generated@@304 $generated@@305)) (+ 1 ($generated@@301 $generated@@304)))))
 :pattern ( ($generated@@274 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@169)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@73) (= (type $generated@@311) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@288 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@83 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@288 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@313) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@314) $generated@@169)) (= (type $generated@@315) $generated@@73)) ($generated@@141 $generated@@312 $generated@@313)) ($generated@@288 $generated@@314 $generated@@315 $generated@@312)) ($generated@@288 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@141 $generated@@312 $generated@@313) ($generated@@288 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@316) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@317) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@319) $generated@@73)) ($generated@@141 $generated@@316 $generated@@317)) ($generated@@83 $generated@@318 $generated@@319 $generated@@316)) ($generated@@83 $generated@@318 $generated@@319 $generated@@317))
 :pattern ( ($generated@@141 $generated@@316 $generated@@317) ($generated@@83 $generated@@318 $generated@@319 $generated@@316))
)))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@85 $generated@@322 $generated@@2))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@88 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@85 $generated@@324 $generated@@2)) (and (= (= ($generated@@320 $generated@@323) 0) (= $generated@@323 ($generated@@321 $generated@@324))) (=> (not (= ($generated@@320 $generated@@323) 0)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) (< 0 ($generated ($generated@@90 $generated@@323 $generated@@325))))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 18)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@85 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@90 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@90 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@85 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@90 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@90 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@88 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@85 $generated@@363 $generated@@2)) (= ($generated@@178 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@90 $generated@@362 $generated@@364))) (<= ($generated ($generated@@90 $generated@@362 $generated@@364)) ($generated@@320 $generated@@362))))
 :pattern ( ($generated@@90 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@178 $generated@@362))
)))
(assert (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@365 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@169) ($generated@@251 $generated@@368 $generated@@145)) (and (= ($generated@@307 ($generated@@365 $generated@@86 $generated@@368)) $generated@@368) ($generated@@155 ($generated@@365 $generated@@86 $generated@@368) $generated@@145)))
 :pattern ( ($generated@@251 $generated@@368 $generated@@145))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@169) ($generated@@251 $generated@@369 $generated@@174)) (and (= ($generated@@307 ($generated@@365 $generated@@86 $generated@@369)) $generated@@369) ($generated@@155 ($generated@@365 $generated@@86 $generated@@369) $generated@@174)))
 :pattern ( ($generated@@251 $generated@@369 $generated@@174))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@169) ($generated@@251 $generated@@370 $generated@@149)) (and (= ($generated@@307 ($generated@@365 $generated@@86 $generated@@370)) $generated@@370) ($generated@@155 ($generated@@365 $generated@@86 $generated@@370) $generated@@149)))
 :pattern ( ($generated@@251 $generated@@370 $generated@@149))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@169) ($generated@@251 $generated@@371 $generated@@244)) (and (= ($generated@@307 ($generated@@365 $generated@@86 $generated@@371)) $generated@@371) ($generated@@155 ($generated@@365 $generated@@86 $generated@@371) $generated@@244)))
 :pattern ( ($generated@@251 $generated@@371 $generated@@244))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@169) ($generated@@251 $generated@@372 $generated@@152)) (and (= ($generated@@307 ($generated@@365 $generated@@86 $generated@@372)) $generated@@372) ($generated@@155 ($generated@@365 $generated@@86 $generated@@372) $generated@@152)))
 :pattern ( ($generated@@251 $generated@@372 $generated@@152))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@169) ($generated@@251 $generated@@373 $generated@@247)) (and (= ($generated@@307 ($generated@@365 $generated@@86 $generated@@373)) $generated@@373) ($generated@@155 ($generated@@365 $generated@@86 $generated@@373) $generated@@247)))
 :pattern ( ($generated@@251 $generated@@373 $generated@@247))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@86) (= ($generated@@155 $generated@@374 $generated@@174)  (and ($generated@@155 $generated@@374 $generated@@145) (not (= $generated@@374 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@374 $generated@@174))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@86) (= ($generated@@155 $generated@@375 $generated@@244)  (and ($generated@@155 $generated@@375 $generated@@149) (not (= $generated@@375 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@375 $generated@@244))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@86) (= ($generated@@155 $generated@@376 $generated@@247)  (and ($generated@@155 $generated@@376 $generated@@152) (not (= $generated@@376 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@376 $generated@@247))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 Int) ) (! (let (($generated@@380 ($generated@@277 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@380))
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 Int) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
 (=> (= (type $generated@@381) ($generated@@276 $generated@@384)) (and (=> (= $generated@@382 ($generated@@301 $generated@@381)) (= ($generated@@377 ($generated@@274 $generated@@381 $generated@@383) $generated@@382) $generated@@383)) (=> (not (= $generated@@382 ($generated@@301 $generated@@381))) (= ($generated@@377 ($generated@@274 $generated@@381 $generated@@383) $generated@@382) ($generated@@377 $generated@@381 $generated@@382))))))
 :pattern ( ($generated@@377 ($generated@@274 $generated@@381 $generated@@383) $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@330 (type $generated@@385))))
(let (($generated@@387 ($generated@@329 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@328 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@327 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@90 ($generated@@326 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@326 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@330 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@85 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@330 (type $generated@@392))))
(let (($generated@@394 ($generated@@329 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@328 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@327 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@90 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@348 (type $generated@@396))))
(let (($generated@@398 ($generated@@347 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@346 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@345 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) ($generated@@0 ($generated@@90 ($generated@@344 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@344 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@348 (type $generated@@401))))
(= (type ($generated@@400 $generated@@401)) ($generated@@85 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@348 (type $generated@@403))))
(let (($generated@@405 ($generated@@347 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@346 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@345 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@404) ($generated@@0 ($generated@@90 ($generated@@400 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@400 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@408) $generated@@73)) (= ($generated@@155 $generated@@407 ($generated@@177 $generated@@408)) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@169) (< 0 ($generated ($generated@@90 $generated@@407 $generated@@409)))) ($generated@@251 $generated@@409 $generated@@408))
 :pattern ( ($generated@@90 $generated@@407 $generated@@409))
))))
 :pattern ( ($generated@@155 $generated@@407 ($generated@@177 $generated@@408)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@411) $generated@@73)) (= (type $generated@@412) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@410 ($generated@@260 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@169) ($generated@@0 ($generated@@90 $generated@@410 $generated@@413))) ($generated@@288 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@90 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@83 $generated@@410 ($generated@@260 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@415) $generated@@73)) (= (type $generated@@416) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@414 ($generated@@265 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@169) ($generated@@0 ($generated@@90 $generated@@414 $generated@@417))) ($generated@@288 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@90 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@83 $generated@@414 ($generated@@265 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(= ($generated ($generated@@90 ($generated@@321 $generated@@419) $generated@@418)) 0))
 :pattern ( (let (($generated@@419 (type $generated@@418)))
($generated@@90 ($generated@@321 $generated@@419) $generated@@418)))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@85 $generated@@169 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@330 (type $generated@@423))))
(let (($generated@@425 ($generated@@329 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@85 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@328 $generated@@169 $generated@@169)) (= (type $generated@@427) $generated@@169)) (= ($generated@@0 ($generated@@90 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@90 ($generated@@326 $generated@@426) ($generated@@167 ($generated@@365 $generated@@160 $generated@@427)))) (= ($generated@@90 ($generated@@421 $generated@@426) ($generated@@167 ($generated@@365 $generated@@160 $generated@@427))) ($generated@@168 ($generated@@365 $generated@@160 $generated@@427))))))
 :pattern ( ($generated@@90 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@85 $generated@@169 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@348 (type $generated@@431))))
(let (($generated@@433 ($generated@@347 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@85 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@346 $generated@@169 $generated@@169)) (= (type $generated@@435) $generated@@169)) (= ($generated@@0 ($generated@@90 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@90 ($generated@@344 $generated@@434) ($generated@@167 ($generated@@365 $generated@@160 $generated@@435)))) (= ($generated@@90 ($generated@@429 $generated@@434) ($generated@@167 ($generated@@365 $generated@@160 $generated@@435))) ($generated@@168 ($generated@@365 $generated@@160 $generated@@435))))))
 :pattern ( ($generated@@90 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@329 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@328 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@90 ($generated@@389 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@90 ($generated@@326 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@90 ($generated@@421 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@90 ($generated@@326 $generated@@436) $generated@@440))
 :pattern ( ($generated@@90 ($generated@@421 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@347 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@346 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@90 ($generated@@400 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@90 ($generated@@344 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@90 ($generated@@429 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@90 ($generated@@344 $generated@@441) $generated@@445))
 :pattern ( ($generated@@90 ($generated@@429 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@90 ($generated@@400 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@73)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@328 $generated@@169 $generated@@169)) (= (type $generated@@450) $generated@@73)) (= (type $generated@@451) $generated@@73)) (= (type $generated@@452) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@326 $generated@@449) $generated@@453))) (and ($generated@@288 ($generated@@90 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@288 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@90 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@90 ($generated@@326 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@83 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@73)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@346 $generated@@169 $generated@@169)) (= (type $generated@@458) $generated@@73)) (= (type $generated@@459) $generated@@73)) (= (type $generated@@460) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@344 $generated@@457) $generated@@461))) (and ($generated@@288 ($generated@@90 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@288 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@90 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@90 ($generated@@344 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@83 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@462) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@463) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@464) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@462 $generated@@464))) (and ($generated@@141 $generated@@462 $generated@@463) ($generated@@141 $generated@@463 $generated@@464))) ($generated@@141 $generated@@462 $generated@@464))
 :pattern ( ($generated@@141 $generated@@462 $generated@@463) ($generated@@141 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@T) ) (! (= (type ($generated@@465 $generated@@466)) ($generated@@85 $generated@@466 $generated@@4))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@348 (type $generated@@467))))
(let (($generated@@469 ($generated@@347 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@346 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@345 $generated@@469 $generated@@468)) (= ($generated@@344 $generated@@467) ($generated@@465 $generated@@469))))))
 :pattern ( ($generated@@344 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@348 (type $generated@@470))))
(let (($generated@@472 ($generated@@347 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@346 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@345 $generated@@472 $generated@@471)) (= ($generated@@400 $generated@@470) ($generated@@465 $generated@@471))))))
 :pattern ( ($generated@@400 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@348 (type $generated@@473))))
(let (($generated@@475 ($generated@@347 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@346 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@345 $generated@@475 $generated@@474)) (= ($generated@@428 $generated@@473) ($generated@@465 $generated@@169))))))
 :pattern ( ($generated@@428 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@330 (type $generated@@476))))
(let (($generated@@478 ($generated@@329 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@328 $generated@@478 $generated@@477)) (or (= $generated@@476 ($generated@@327 $generated@@478 $generated@@477)) (exists (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (and (and (= (type $generated@@479) $generated@@169) (= (type $generated@@480) $generated@@169)) ($generated@@0 ($generated@@90 ($generated@@420 $generated@@476) ($generated@@307 ($generated@@250 $generated@@479 $generated@@480)))))
 :no-pattern (type $generated@@479)
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@420 $generated@@476))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@348 (type $generated@@481))))
(let (($generated@@483 ($generated@@347 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@346 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@345 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@169) (= (type $generated@@485) $generated@@169)) ($generated@@0 ($generated@@90 ($generated@@428 $generated@@481) ($generated@@307 ($generated@@250 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@428 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@169) ($generated@@251 $generated@@486 $generated@@46)) (and (= ($generated@@307 ($generated@@365 $generated@@2 $generated@@486)) $generated@@486) ($generated@@155 ($generated@@365 $generated@@2 $generated@@486) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@486 $generated@@46))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@169) ($generated@@251 $generated@@487 $generated@@47)) (and (= ($generated@@307 ($generated@@365 $generated@@3 $generated@@487)) $generated@@487) ($generated@@155 ($generated@@365 $generated@@3 $generated@@487) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@487 $generated@@47))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@169) ($generated@@251 $generated@@488 $generated@@44)) (and (= ($generated@@307 ($generated@@365 $generated@@4 $generated@@488)) $generated@@488) ($generated@@155 ($generated@@365 $generated@@4 $generated@@488) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@488 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@489) 20))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@169) ($generated@@251 $generated@@490 $generated@@45)) (and (= ($generated@@307 ($generated@@365 $generated@@489 $generated@@490)) $generated@@490) ($generated@@155 ($generated@@365 $generated@@489 $generated@@490) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@490 $generated@@45))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@73) (= ($generated@@251 ($generated@@307 $generated@@491) $generated@@492) ($generated@@155 $generated@@491 $generated@@492)))
 :pattern ( ($generated@@251 ($generated@@307 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@88 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@85 $generated@@494 $generated@@2)) (<= 0 ($generated@@320 $generated@@493))))
 :pattern ( ($generated@@320 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@277 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@276 $generated@@496)) (<= 0 ($generated@@301 $generated@@495))))
 :pattern ( ($generated@@301 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@73)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@73) (= (type $generated@@500) $generated@@73)) (= ($generated@@497 ($generated@@446 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@446 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@73)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@73) (= (type $generated@@504) $generated@@73)) (= ($generated@@501 ($generated@@446 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@446 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@73) (= (type $generated@@506) $generated@@73)) (= ($generated@@81 ($generated@@446 $generated@@505 $generated@@506)) $generated@@58))
 :pattern ( ($generated@@446 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@73)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@73) (= (type $generated@@510) $generated@@73)) (= ($generated@@507 ($generated@@454 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@454 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@73)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@73) (= (type $generated@@514) $generated@@73)) (= ($generated@@511 ($generated@@454 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@454 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@73) (= (type $generated@@516) $generated@@73)) (= ($generated@@81 ($generated@@454 $generated@@515 $generated@@516)) $generated@@59))
 :pattern ( ($generated@@454 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@169) (= (type $generated@@518) $generated@@169)) (= ($generated@@294 ($generated@@250 $generated@@517 $generated@@518)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@73)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@73) (= (type $generated@@522) $generated@@73)) (= ($generated@@519 ($generated@@159 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@159 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@73)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@73) (= (type $generated@@526) $generated@@73)) (= ($generated@@523 ($generated@@159 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@159 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@169) (= (type $generated@@528) $generated@@169)) (= ($generated@@167 ($generated@@250 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@250 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@169) (= (type $generated@@530) $generated@@169)) (= ($generated@@168 ($generated@@250 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@250 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@276 $generated@@169)) (= (type $generated@@532) $generated@@73)) (= (type $generated@@533) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@531 ($generated@@275 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@301 $generated@@531))) ($generated@@288 ($generated@@377 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@377 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@83 $generated@@531 ($generated@@275 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@84 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@84 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@73)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@73) (= ($generated@@537 ($generated@@260 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@260 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@73) (= ($generated@@81 ($generated@@260 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@73)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@73) (= ($generated@@541 ($generated@@265 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@265 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@73) (= ($generated@@81 ($generated@@265 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@73) (= ($generated@@545 ($generated@@177 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@177 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@73) (= ($generated@@81 ($generated@@177 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@73)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@73) (= ($generated@@549 ($generated@@275 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@275 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@73) (= ($generated@@81 ($generated@@275 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@275 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@365 $generated@@554 ($generated@@307 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@307 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@328 $generated@@169 $generated@@169)) (= (type $generated@@556) $generated@@73)) (= (type $generated@@557) $generated@@73)) (= ($generated@@155 $generated@@555 ($generated@@446 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@326 $generated@@555) $generated@@558))) (and ($generated@@251 ($generated@@90 ($generated@@421 $generated@@555) $generated@@558) $generated@@557) ($generated@@251 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@90 ($generated@@421 $generated@@555) $generated@@558))
 :pattern ( ($generated@@90 ($generated@@326 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@155 $generated@@555 ($generated@@446 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@346 $generated@@169 $generated@@169)) (= (type $generated@@560) $generated@@73)) (= (type $generated@@561) $generated@@73)) (= ($generated@@155 $generated@@559 ($generated@@454 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@344 $generated@@559) $generated@@562))) (and ($generated@@251 ($generated@@90 ($generated@@429 $generated@@559) $generated@@562) $generated@@561) ($generated@@251 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@90 ($generated@@429 $generated@@559) $generated@@562))
 :pattern ( ($generated@@90 ($generated@@344 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@155 $generated@@559 ($generated@@454 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@169) (= (type $generated@@566) $generated@@169)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@250 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@250 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@169) (= (type $generated@@568) $generated@@169)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@250 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@250 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@169) (= (type $generated@@570) $generated@@73)) (= (type $generated@@571) $generated@@73)) ($generated@@251 $generated@@569 ($generated@@446 $generated@@570 $generated@@571))) (and (= ($generated@@307 ($generated@@365 ($generated@@328 $generated@@169 $generated@@169) $generated@@569)) $generated@@569) ($generated@@155 ($generated@@365 ($generated@@328 $generated@@169 $generated@@169) $generated@@569) ($generated@@446 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@251 $generated@@569 ($generated@@446 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@169) (= (type $generated@@573) $generated@@73)) (= (type $generated@@574) $generated@@73)) ($generated@@251 $generated@@572 ($generated@@454 $generated@@573 $generated@@574))) (and (= ($generated@@307 ($generated@@365 ($generated@@346 $generated@@169 $generated@@169) $generated@@572)) $generated@@572) ($generated@@155 ($generated@@365 ($generated@@346 $generated@@169 $generated@@169) $generated@@572) ($generated@@454 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@251 $generated@@572 ($generated@@454 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@73) (= (type $generated@@576) $generated@@73)) (= (type $generated@@577) $generated@@169)) ($generated@@251 $generated@@577 ($generated@@159 $generated@@575 $generated@@576))) (and (= ($generated@@307 ($generated@@365 $generated@@160 $generated@@577)) $generated@@577) ($generated@@155 ($generated@@365 $generated@@160 $generated@@577) ($generated@@159 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@251 $generated@@577 ($generated@@159 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@90 ($generated@@465 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@90 ($generated@@465 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@78)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@73) (= (type $generated@@583) $generated@@73)) (and (= ($generated@@81 ($generated@@159 $generated@@582 $generated@@583)) $generated@@62) (= ($generated@@580 ($generated@@159 $generated@@582 $generated@@583)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@582 $generated@@583))
)))
(assert  (and (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@277 (type $generated@@586))))
(= (type ($generated@@584 $generated@@586)) ($generated@@276 $generated@@587)))
 :pattern ( ($generated@@584 $generated@@586))
)) (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@277 (type $generated@@588))))
(= (type ($generated@@585 $generated@@588)) $generated@@589))
 :pattern ( ($generated@@585 $generated@@588))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (=> (= (type $generated@@590) ($generated@@276 $generated@@592)) (and (= ($generated@@584 ($generated@@274 $generated@@590 $generated@@591)) $generated@@590) (= ($generated@@585 ($generated@@274 $generated@@590 $generated@@591)) $generated@@591))))
 :pattern ( ($generated@@274 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@160) (= ($generated@@563 ($generated@@307 $generated@@593)) ($generated@@564 $generated@@593)))
 :pattern ( ($generated@@563 ($generated@@307 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@169) ($generated@@251 $generated@@594 ($generated@@84 0))) (and (= ($generated@@307 ($generated@@365 $generated@@2 $generated@@594)) $generated@@594) ($generated@@155 ($generated@@365 ($generated@@85 $generated@@169 $generated@@4) $generated@@594) ($generated@@84 0))))
 :pattern ( ($generated@@251 $generated@@594 ($generated@@84 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@169) (= (type $generated@@596) $generated@@73)) ($generated@@251 $generated@@595 ($generated@@260 $generated@@596))) (and (= ($generated@@307 ($generated@@365 ($generated@@85 $generated@@169 $generated@@4) $generated@@595)) $generated@@595) ($generated@@155 ($generated@@365 ($generated@@85 $generated@@169 $generated@@4) $generated@@595) ($generated@@260 $generated@@596))))
 :pattern ( ($generated@@251 $generated@@595 ($generated@@260 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@169) (= (type $generated@@598) $generated@@73)) ($generated@@251 $generated@@597 ($generated@@265 $generated@@598))) (and (= ($generated@@307 ($generated@@365 ($generated@@85 $generated@@169 $generated@@4) $generated@@597)) $generated@@597) ($generated@@155 ($generated@@365 ($generated@@85 $generated@@169 $generated@@4) $generated@@597) ($generated@@265 $generated@@598))))
 :pattern ( ($generated@@251 $generated@@597 ($generated@@265 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@169) (= (type $generated@@600) $generated@@73)) ($generated@@251 $generated@@599 ($generated@@177 $generated@@600))) (and (= ($generated@@307 ($generated@@365 ($generated@@85 $generated@@169 $generated@@2) $generated@@599)) $generated@@599) ($generated@@155 ($generated@@365 ($generated@@85 $generated@@169 $generated@@2) $generated@@599) ($generated@@177 $generated@@600))))
 :pattern ( ($generated@@251 $generated@@599 ($generated@@177 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@169) (= (type $generated@@602) $generated@@73)) ($generated@@251 $generated@@601 ($generated@@275 $generated@@602))) (and (= ($generated@@307 ($generated@@365 ($generated@@276 $generated@@169) $generated@@601)) $generated@@601) ($generated@@155 ($generated@@365 ($generated@@276 $generated@@169) $generated@@601) ($generated@@275 $generated@@602))))
 :pattern ( ($generated@@251 $generated@@601 ($generated@@275 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@86) (= (type $generated@@604) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@603 $generated@@146)) ($generated@@83 $generated@@603 $generated@@149 $generated@@604))) ($generated@@83 $generated@@603 $generated@@174 $generated@@604))
 :pattern ( ($generated@@83 $generated@@603 $generated@@149 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@86) (= (type $generated@@606) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@605 $generated@@146)) ($generated@@83 $generated@@605 $generated@@152 $generated@@606))) ($generated@@83 $generated@@605 $generated@@174 $generated@@606))
 :pattern ( ($generated@@83 $generated@@605 $generated@@152 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
 (=> (and (and (and (= (type $generated@@607) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@608) $generated@@86)) (= (type $generated@@609) ($generated@@75 $generated@@611))) ($generated@@287 ($generated@@91 $generated@@607 $generated@@608 ($generated@@93 ($generated@@90 $generated@@607 $generated@@608) $generated@@609 $generated@@610)))) ($generated@@141 $generated@@607 ($generated@@91 $generated@@607 $generated@@608 ($generated@@93 ($generated@@90 $generated@@607 $generated@@608) $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@91 $generated@@607 $generated@@608 ($generated@@93 ($generated@@90 $generated@@607 $generated@@608) $generated@@609 $generated@@610)))
)))
(assert (= ($generated@@81 $generated@@145) $generated@@63))
(assert (= ($generated@@580 $generated@@145) $generated@@70))
(assert (= ($generated@@81 $generated@@174) $generated@@64))
(assert (= ($generated@@580 $generated@@174) $generated@@70))
(assert (= ($generated@@81 $generated@@149) $generated@@65))
(assert (= ($generated@@580 $generated@@149) $generated@@71))
(assert (= ($generated@@81 $generated@@244) $generated@@66))
(assert (= ($generated@@580 $generated@@244) $generated@@71))
(assert (= ($generated@@81 $generated@@152) $generated@@67))
(assert (= ($generated@@580 $generated@@152) $generated@@72))
(assert (= ($generated@@81 $generated@@247) $generated@@68))
(assert (= ($generated@@580 $generated@@247) $generated@@72))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@613) $generated@@73)) (= (type $generated@@614) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@612 ($generated@@177 $generated@@613) $generated@@614) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@169) (< 0 ($generated ($generated@@90 $generated@@612 $generated@@615)))) ($generated@@288 $generated@@615 $generated@@613 $generated@@614))
 :pattern ( ($generated@@90 $generated@@612 $generated@@615))
))))
 :pattern ( ($generated@@83 $generated@@612 ($generated@@177 $generated@@613) $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@86) (= ($generated@@155 $generated@@616 $generated@@145)  (or (= $generated@@616 $generated@@146) ($generated@@157 ($generated@@182 $generated@@616)))))
 :pattern ( ($generated@@155 $generated@@616 $generated@@145))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@160) (= (type $generated@@618) $generated@@73)) (= (type $generated@@619) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@287 $generated@@619) (and ($generated@@158 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@73) ($generated@@83 $generated@@617 ($generated@@159 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@83 $generated@@617 ($generated@@159 $generated@@618 $generated@@620) $generated@@619))
))))) ($generated@@288 ($generated@@167 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@288 ($generated@@167 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@160) (= (type $generated@@622) $generated@@73)) (= (type $generated@@623) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@287 $generated@@623) (and ($generated@@158 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@73) ($generated@@83 $generated@@621 ($generated@@159 $generated@@624 $generated@@622) $generated@@623))
 :pattern ( ($generated@@83 $generated@@621 ($generated@@159 $generated@@624 $generated@@622) $generated@@623))
))))) ($generated@@288 ($generated@@168 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@288 ($generated@@168 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@169) (= (type $generated@@626) $generated@@169)) (= ($generated@@250 ($generated@@270 $generated@@625) ($generated@@270 $generated@@626)) ($generated@@270 ($generated@@250 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@625) ($generated@@270 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@307 ($generated@@270 $generated@@627)) ($generated@@270 ($generated@@307 $generated@@627)))
 :pattern ( ($generated@@307 ($generated@@270 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@277 (type $generated@@628))))
 (=> (and (= (type $generated@@628) ($generated@@276 $generated@@629)) (= ($generated@@301 $generated@@628) 0)) (= $generated@@628 ($generated@@300 $generated@@629))))
 :pattern ( ($generated@@301 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@631)))
 (=> (and (and (= (type $generated@@630) ($generated@@85 $generated@@633 $generated@@2)) (= (type $generated@@632) $generated@@2)) (<= 0 ($generated $generated@@632))) (= ($generated@@320 ($generated@@91 $generated@@630 $generated@@631 $generated@@632)) (+ (- ($generated@@320 $generated@@630) ($generated ($generated@@90 $generated@@630 $generated@@631))) ($generated $generated@@632)))))
 :pattern ( ($generated@@320 ($generated@@91 $generated@@630 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@635) $generated@@2)) ($generated@@83 $generated@@635 $generated@@46 $generated@@634))
 :pattern ( ($generated@@83 $generated@@635 $generated@@46 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@637) $generated@@3)) ($generated@@83 $generated@@637 $generated@@47 $generated@@636))
 :pattern ( ($generated@@83 $generated@@637 $generated@@47 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@639) $generated@@4)) ($generated@@83 $generated@@639 $generated@@44 $generated@@638))
 :pattern ( ($generated@@83 $generated@@639 $generated@@44 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@641) $generated@@489)) ($generated@@83 $generated@@641 $generated@@45 $generated@@640))
 :pattern ( ($generated@@83 $generated@@641 $generated@@45 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@643) $generated@@169)) ($generated@@83 $generated@@643 $generated@@48 $generated@@642))
 :pattern ( ($generated@@83 $generated@@643 $generated@@48 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@276 $generated@@169)) (= (type $generated@@645) $generated@@73)) (= ($generated@@155 $generated@@644 ($generated@@275 $generated@@645)) (forall (($generated@@646 Int) ) (!  (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@301 $generated@@644))) ($generated@@251 ($generated@@377 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@377 $generated@@644 $generated@@646))
))))
 :pattern ( ($generated@@155 $generated@@644 ($generated@@275 $generated@@645)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 Int) ) (!  (=> (= (type $generated@@648) ($generated@@276 $generated@@169)) (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@301 $generated@@648))) (< ($generated@@564 ($generated@@365 $generated@@160 ($generated@@377 $generated@@648 $generated@@649))) ($generated@@647 $generated@@648))))
 :pattern ( ($generated@@564 ($generated@@365 $generated@@160 ($generated@@377 $generated@@648 $generated@@649))))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@328 $generated@@169 $generated@@169)) (= (type $generated@@651) $generated@@73)) (= (type $generated@@652) $generated@@73)) ($generated@@155 $generated@@650 ($generated@@446 $generated@@651 $generated@@652))) (and (and ($generated@@155 ($generated@@326 $generated@@650) ($generated@@260 $generated@@651)) ($generated@@155 ($generated@@389 $generated@@650) ($generated@@260 $generated@@652))) ($generated@@155 ($generated@@420 $generated@@650) ($generated@@260 ($generated@@159 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@155 $generated@@650 ($generated@@446 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) ($generated@@346 $generated@@169 $generated@@169)) (= (type $generated@@654) $generated@@73)) (= (type $generated@@655) $generated@@73)) ($generated@@155 $generated@@653 ($generated@@454 $generated@@654 $generated@@655))) (and (and ($generated@@155 ($generated@@344 $generated@@653) ($generated@@265 $generated@@654)) ($generated@@155 ($generated@@400 $generated@@653) ($generated@@265 $generated@@655))) ($generated@@155 ($generated@@428 $generated@@653) ($generated@@265 ($generated@@159 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@155 $generated@@653 ($generated@@454 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@2) ($generated@@155 $generated@@656 $generated@@46))
 :pattern ( ($generated@@155 $generated@@656 $generated@@46))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@3) ($generated@@155 $generated@@657 $generated@@47))
 :pattern ( ($generated@@155 $generated@@657 $generated@@47))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@4) ($generated@@155 $generated@@658 $generated@@44))
 :pattern ( ($generated@@155 $generated@@658 $generated@@44))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@489) ($generated@@155 $generated@@659 $generated@@45))
 :pattern ( ($generated@@155 $generated@@659 $generated@@45))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@169) ($generated@@155 $generated@@660 $generated@@48))
 :pattern ( ($generated@@155 $generated@@660 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Bool)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Bool)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@661) ($generated@@188 $generated@@86 $generated@@4)) (= (type $generated@@662) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@663) $generated@@86)) (= (type $generated@@664) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@666) $generated@@86)) (= (type $generated@@667) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@668) ($generated@@276 $generated@@169))) (= (type $generated@@670) $generated@@86)) (= (type $generated@@672) $generated@@86)) (= (type $generated@@673) ($generated@@276 $generated@@169))) (= (type $generated@@674) ($generated@@276 $generated@@169))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@676  (=> (= $generated@@661 ($generated@@187 $generated@@146 $generated@@662 $generated@@60 false)) (=> (and (and (not (= $generated@@663 $generated@@146)) (= ($generated@@182 $generated@@663) $generated@@149)) (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@662 $generated@@663) $generated@@60))) (= $generated@@664 ($generated@@91 $generated@@662 $generated@@663 ($generated@@93 ($generated@@90 $generated@@662 $generated@@663) $generated@@60 ($generated@@11 true)))))) (=> (and (and (and ($generated@@287 $generated@@664) ($generated@@665 $generated@@664)) (and (not (= $generated@@666 $generated@@146)) (= ($generated@@182 $generated@@666) $generated@@152))) (and (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@664 $generated@@666) $generated@@60))) (= $generated@@667 ($generated@@91 $generated@@664 $generated@@666 ($generated@@93 ($generated@@90 $generated@@664 $generated@@666) $generated@@60 ($generated@@11 true))))) (and ($generated@@287 $generated@@667) ($generated@@665 $generated@@667)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@668 ($generated@@274 ($generated@@274 ($generated@@300 $generated@@169) ($generated@@307 $generated@@663)) ($generated@@307 $generated@@666))) (= (ControlFlow 0 2) (- 0 1))) true))))))))
(let (($generated@@677  (=> (and ($generated@@287 $generated@@662) ($generated@@665 $generated@@662)) (=> (and (and (and (and (=> $generated@@669 (and ($generated@@155 $generated@@670 $generated@@244) ($generated@@83 $generated@@670 $generated@@244 $generated@@662))) true) (and (=> $generated@@671 (and ($generated@@155 $generated@@672 $generated@@247) ($generated@@83 $generated@@672 $generated@@247 $generated@@662))) true)) (and (and ($generated@@155 $generated@@673 ($generated@@275 $generated@@174)) ($generated@@83 $generated@@673 ($generated@@275 $generated@@174) $generated@@662)) true)) (and (and (and ($generated@@155 $generated@@674 ($generated@@275 $generated@@244)) ($generated@@83 $generated@@674 ($generated@@275 $generated@@244) $generated@@662)) true) (and (= 1 $generated@@675) (= (ControlFlow 0 5) 2)))) $generated@@676))))
$generated@@677)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@530 (T@U Int) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert  (and (= (type $generated@@145) $generated@@73) (= (type $generated@@146) $generated@@86)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@86) (= (type $generated@@148) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@147 $generated@@145 $generated@@148)  (or (= $generated@@147 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@147 $generated@@145 $generated@@148))
)))
(assert (= (type $generated@@149) $generated@@73))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@86) (= (type $generated@@151) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@150 $generated@@149 $generated@@151)  (or (= $generated@@150 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@150 $generated@@149 $generated@@151))
)))
(assert (= (type $generated@@152) $generated@@73))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@86) (= (type $generated@@154) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@153 $generated@@152 $generated@@154)  (or (= $generated@@153 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@153 $generated@@152 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@84 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@84 0)))
)))
(assert ($generated@@157 $generated@@149))
(assert ($generated@@157 $generated@@152))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@73) (= (type $generated@@164) $generated@@73)) (= (type $generated@@165) $generated@@160)) ($generated@@155 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@155 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (= (type $generated@@174) $generated@@73))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@86) (=> (and (not (= $generated@@175 $generated@@146)) ($generated@@155 $generated@@175 $generated@@149)) ($generated@@155 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@155 $generated@@175 $generated@@149))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@86) (=> (and (not (= $generated@@176 $generated@@146)) ($generated@@155 $generated@@176 $generated@@152)) ($generated@@155 $generated@@176 $generated@@174)))
 :pattern ( ($generated@@155 $generated@@176 $generated@@152))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@181) $generated@@73)) ($generated@@155 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@155 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@86) (= ($generated@@155 $generated@@184 $generated@@149)  (or (= $generated@@184 $generated@@146) (= ($generated@@182 $generated@@184) $generated@@149))))
 :pattern ( ($generated@@155 $generated@@184 $generated@@149))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@86) (= ($generated@@155 $generated@@185 $generated@@152)  (or (= $generated@@185 $generated@@146) (= ($generated@@182 $generated@@185) $generated@@152))))
 :pattern ( ($generated@@155 $generated@@185 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@86 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@76 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@86) (= (type $generated@@236) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@237) ($generated@@75 $generated@@4))) (= (type $generated@@239) $generated@@86)) (= (type $generated@@240) ($generated@@75 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@86) (= (type $generated@@243) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@242 $generated@@174 $generated@@243) ($generated@@83 $generated@@242 $generated@@145 $generated@@243)))
 :pattern ( ($generated@@83 $generated@@242 $generated@@174 $generated@@243))
)))
(assert (= (type $generated@@244) $generated@@73))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@86) (= (type $generated@@246) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@245 $generated@@244 $generated@@246) ($generated@@83 $generated@@245 $generated@@149 $generated@@246)))
 :pattern ( ($generated@@83 $generated@@245 $generated@@244 $generated@@246))
)))
(assert (= (type $generated@@247) $generated@@73))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@86) (= (type $generated@@249) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@248 $generated@@247 $generated@@249) ($generated@@83 $generated@@248 $generated@@152 $generated@@249)))
 :pattern ( ($generated@@83 $generated@@248 $generated@@247 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@160)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@73) (= (type $generated@@255) $generated@@73)) (= (type $generated@@256) $generated@@169)) (= (type $generated@@257) $generated@@169)) (= ($generated@@155 ($generated@@250 $generated@@256 $generated@@257) ($generated@@159 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@155 ($generated@@250 $generated@@256 $generated@@257) ($generated@@159 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@160) (= (type $generated@@259) $generated@@160)) (= ($generated@@166 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@166 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@73)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@263) $generated@@73)) (= ($generated@@155 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@169) ($generated@@0 ($generated@@90 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@90 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@155 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@73)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@268) $generated@@73)) (= ($generated@@155 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@169) ($generated@@0 ($generated@@90 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@90 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@155 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@73) (= (type $generated@@277) $generated@@73)) (= (type $generated@@278) $generated@@169)) (= (type $generated@@279) $generated@@169)) (= (type $generated@@280) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@274 $generated@@280)) (= ($generated@@83 ($generated@@250 $generated@@278 $generated@@279) ($generated@@159 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@83 ($generated@@250 $generated@@278 $generated@@279) ($generated@@159 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@77)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@160) (= ($generated@@158 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@160) ($generated@@158 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@169) (= (type $generated@@286) $generated@@169)) (= $generated@@284 ($generated@@250 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@158 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@296 $generated@@297 $generated@@298)) ($generated@@85 $generated@@299 $generated@@2)))
 :pattern ( ($generated@@296 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
 (=> (= (type $generated@@300) ($generated@@85 $generated@@302 $generated@@2)) (= ($generated@@295 ($generated@@296 $generated@@300 $generated@@301)) (+ ($generated@@295 $generated@@300) 1))))
 :pattern ( ($generated@@295 ($generated@@296 $generated@@300 $generated@@301)))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@169)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@73) (= (type $generated@@307) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@275 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@83 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@275 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@309) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@310) $generated@@169)) (= (type $generated@@311) $generated@@73)) ($generated@@141 $generated@@308 $generated@@309)) ($generated@@275 $generated@@310 $generated@@311 $generated@@308)) ($generated@@275 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@141 $generated@@308 $generated@@309) ($generated@@275 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@312) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@313) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@315) $generated@@73)) ($generated@@141 $generated@@312 $generated@@313)) ($generated@@83 $generated@@314 $generated@@315 $generated@@312)) ($generated@@83 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@141 $generated@@312 $generated@@313) ($generated@@83 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@85 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@88 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@85 $generated@@319 $generated@@2)) (and (= (= ($generated@@295 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@295 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@90 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@295 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 18)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@85 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@90 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@90 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@85 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@90 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@90 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@88 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@85 $generated@@358 $generated@@2)) (= ($generated@@178 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@90 $generated@@357 $generated@@359))) (<= ($generated ($generated@@90 $generated@@357 $generated@@359)) ($generated@@295 $generated@@357))))
 :pattern ( ($generated@@90 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@178 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@169) ($generated@@251 $generated@@363 $generated@@145)) (and (= ($generated@@303 ($generated@@360 $generated@@86 $generated@@363)) $generated@@363) ($generated@@155 ($generated@@360 $generated@@86 $generated@@363) $generated@@145)))
 :pattern ( ($generated@@251 $generated@@363 $generated@@145))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@169) ($generated@@251 $generated@@364 $generated@@174)) (and (= ($generated@@303 ($generated@@360 $generated@@86 $generated@@364)) $generated@@364) ($generated@@155 ($generated@@360 $generated@@86 $generated@@364) $generated@@174)))
 :pattern ( ($generated@@251 $generated@@364 $generated@@174))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@169) ($generated@@251 $generated@@365 $generated@@149)) (and (= ($generated@@303 ($generated@@360 $generated@@86 $generated@@365)) $generated@@365) ($generated@@155 ($generated@@360 $generated@@86 $generated@@365) $generated@@149)))
 :pattern ( ($generated@@251 $generated@@365 $generated@@149))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@169) ($generated@@251 $generated@@366 $generated@@244)) (and (= ($generated@@303 ($generated@@360 $generated@@86 $generated@@366)) $generated@@366) ($generated@@155 ($generated@@360 $generated@@86 $generated@@366) $generated@@244)))
 :pattern ( ($generated@@251 $generated@@366 $generated@@244))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@169) ($generated@@251 $generated@@367 $generated@@152)) (and (= ($generated@@303 ($generated@@360 $generated@@86 $generated@@367)) $generated@@367) ($generated@@155 ($generated@@360 $generated@@86 $generated@@367) $generated@@152)))
 :pattern ( ($generated@@251 $generated@@367 $generated@@152))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@169) ($generated@@251 $generated@@368 $generated@@247)) (and (= ($generated@@303 ($generated@@360 $generated@@86 $generated@@368)) $generated@@368) ($generated@@155 ($generated@@360 $generated@@86 $generated@@368) $generated@@247)))
 :pattern ( ($generated@@251 $generated@@368 $generated@@247))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
 (=> (= (type $generated@@369) ($generated@@85 $generated@@371 $generated@@2)) (= ($generated ($generated@@90 ($generated@@296 $generated@@369 $generated@@370) $generated@@370)) (+ ($generated ($generated@@90 $generated@@369 $generated@@370)) 1))))
 :pattern ( ($generated@@296 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@86) (= ($generated@@155 $generated@@372 $generated@@174)  (and ($generated@@155 $generated@@372 $generated@@145) (not (= $generated@@372 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@372 $generated@@174))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@86) (= ($generated@@155 $generated@@373 $generated@@244)  (and ($generated@@155 $generated@@373 $generated@@149) (not (= $generated@@373 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@373 $generated@@244))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@86) (= ($generated@@155 $generated@@374 $generated@@247)  (and ($generated@@155 $generated@@374 $generated@@152) (not (= $generated@@374 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@374 $generated@@247))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@376)))
 (=> (and (and (= (type $generated@@375) ($generated@@85 $generated@@378 $generated@@2)) (= (type $generated@@377) $generated@@378)) (< 0 ($generated ($generated@@90 $generated@@375 $generated@@377)))) (< 0 ($generated ($generated@@90 ($generated@@296 $generated@@375 $generated@@376) $generated@@377)))))
 :pattern ( ($generated@@296 $generated@@375 $generated@@376) ($generated@@90 $generated@@375 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@325 (type $generated@@379))))
(let (($generated@@381 ($generated@@324 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@323 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@322 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@90 ($generated@@321 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@321 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@325 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@85 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@325 (type $generated@@386))))
(let (($generated@@388 ($generated@@324 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@323 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@322 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@90 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@343 (type $generated@@390))))
(let (($generated@@392 ($generated@@342 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@341 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@340 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@90 ($generated@@339 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@339 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@343 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@85 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@343 (type $generated@@397))))
(let (($generated@@399 ($generated@@342 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@341 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@340 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@90 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@402)))
 (=> (and (= (type $generated@@401) ($generated@@85 $generated@@404 $generated@@2)) (= (type $generated@@403) $generated@@404)) (= (< 0 ($generated ($generated@@90 ($generated@@296 $generated@@401 $generated@@402) $generated@@403)))  (or (= $generated@@403 $generated@@402) (< 0 ($generated ($generated@@90 $generated@@401 $generated@@403)))))))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@406) $generated@@73)) (= ($generated@@155 $generated@@405 ($generated@@177 $generated@@406)) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@169) (< 0 ($generated ($generated@@90 $generated@@405 $generated@@407)))) ($generated@@251 $generated@@407 $generated@@406))
 :pattern ( ($generated@@90 $generated@@405 $generated@@407))
))))
 :pattern ( ($generated@@155 $generated@@405 ($generated@@177 $generated@@406)))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@409) $generated@@73)) (= (type $generated@@410) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@408 ($generated@@260 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@169) ($generated@@0 ($generated@@90 $generated@@408 $generated@@411))) ($generated@@275 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@90 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@83 $generated@@408 ($generated@@260 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@413) $generated@@73)) (= (type $generated@@414) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@412 ($generated@@265 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@169) ($generated@@0 ($generated@@90 $generated@@412 $generated@@415))) ($generated@@275 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@90 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@83 $generated@@412 ($generated@@265 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(= ($generated ($generated@@90 ($generated@@316 $generated@@417) $generated@@416)) 0))
 :pattern ( (let (($generated@@417 (type $generated@@416)))
($generated@@90 ($generated@@316 $generated@@417) $generated@@416)))
)))
(assert  (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@420)) ($generated@@85 $generated@@169 $generated@@4))
 :pattern ( ($generated@@418 $generated@@420))
)) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@325 (type $generated@@421))))
(let (($generated@@423 ($generated@@324 (type $generated@@421))))
(= (type ($generated@@419 $generated@@421)) ($generated@@85 $generated@@423 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@323 $generated@@169 $generated@@169)) (= (type $generated@@425) $generated@@169)) (= ($generated@@0 ($generated@@90 ($generated@@418 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@90 ($generated@@321 $generated@@424) ($generated@@167 ($generated@@360 $generated@@160 $generated@@425)))) (= ($generated@@90 ($generated@@419 $generated@@424) ($generated@@167 ($generated@@360 $generated@@160 $generated@@425))) ($generated@@168 ($generated@@360 $generated@@160 $generated@@425))))))
 :pattern ( ($generated@@90 ($generated@@418 $generated@@424) $generated@@425))
)))
(assert  (and (forall (($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@428)) ($generated@@85 $generated@@169 $generated@@4))
 :pattern ( ($generated@@426 $generated@@428))
)) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@343 (type $generated@@429))))
(let (($generated@@431 ($generated@@342 (type $generated@@429))))
(= (type ($generated@@427 $generated@@429)) ($generated@@85 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@427 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@341 $generated@@169 $generated@@169)) (= (type $generated@@433) $generated@@169)) (= ($generated@@0 ($generated@@90 ($generated@@426 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@90 ($generated@@339 $generated@@432) ($generated@@167 ($generated@@360 $generated@@160 $generated@@433)))) (= ($generated@@90 ($generated@@427 $generated@@432) ($generated@@167 ($generated@@360 $generated@@160 $generated@@433))) ($generated@@168 ($generated@@360 $generated@@160 $generated@@433))))))
 :pattern ( ($generated@@90 ($generated@@426 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@324 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@323 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@90 ($generated@@383 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@90 ($generated@@321 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@90 ($generated@@419 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@90 ($generated@@321 $generated@@434) $generated@@438))
 :pattern ( ($generated@@90 ($generated@@419 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@90 ($generated@@383 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(let (($generated@@442 ($generated@@342 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@341 $generated@@442 $generated@@441)) (= ($generated@@0 ($generated@@90 ($generated@@394 $generated@@439) $generated@@440)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) (and ($generated@@0 ($generated@@90 ($generated@@339 $generated@@439) $generated@@443)) (= $generated@@440 ($generated@@90 ($generated@@427 $generated@@439) $generated@@443))))
 :pattern ( ($generated@@90 ($generated@@339 $generated@@439) $generated@@443))
 :pattern ( ($generated@@90 ($generated@@427 $generated@@439) $generated@@443))
))))))
 :pattern ( ($generated@@90 ($generated@@394 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@73)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@323 $generated@@169 $generated@@169)) (= (type $generated@@448) $generated@@73)) (= (type $generated@@449) $generated@@73)) (= (type $generated@@450) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@321 $generated@@447) $generated@@451))) (and ($generated@@275 ($generated@@90 ($generated@@419 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@275 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@90 ($generated@@419 $generated@@447) $generated@@451))
 :pattern ( ($generated@@90 ($generated@@321 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@83 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@73)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@341 $generated@@169 $generated@@169)) (= (type $generated@@456) $generated@@73)) (= (type $generated@@457) $generated@@73)) (= (type $generated@@458) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@339 $generated@@455) $generated@@459))) (and ($generated@@275 ($generated@@90 ($generated@@427 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@275 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@90 ($generated@@427 $generated@@455) $generated@@459))
 :pattern ( ($generated@@90 ($generated@@339 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@83 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@460) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@461) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@462) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@460 $generated@@462))) (and ($generated@@141 $generated@@460 $generated@@461) ($generated@@141 $generated@@461 $generated@@462))) ($generated@@141 $generated@@460 $generated@@462))
 :pattern ( ($generated@@141 $generated@@460 $generated@@461) ($generated@@141 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@85 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@343 (type $generated@@465))))
(let (($generated@@467 ($generated@@342 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@341 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@340 $generated@@467 $generated@@466)) (= ($generated@@339 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@339 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@343 (type $generated@@468))))
(let (($generated@@470 ($generated@@342 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@341 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@340 $generated@@470 $generated@@469)) (= ($generated@@394 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@394 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@343 (type $generated@@471))))
(let (($generated@@473 ($generated@@342 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@341 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@340 $generated@@473 $generated@@472)) (= ($generated@@426 $generated@@471) ($generated@@463 $generated@@169))))))
 :pattern ( ($generated@@426 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@325 (type $generated@@474))))
(let (($generated@@476 ($generated@@324 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@323 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@322 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@169) (= (type $generated@@478) $generated@@169)) ($generated@@0 ($generated@@90 ($generated@@418 $generated@@474) ($generated@@303 ($generated@@250 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@418 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@343 (type $generated@@479))))
(let (($generated@@481 ($generated@@342 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@341 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@340 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@169) (= (type $generated@@483) $generated@@169)) ($generated@@0 ($generated@@90 ($generated@@426 $generated@@479) ($generated@@303 ($generated@@250 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@426 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@169) ($generated@@251 $generated@@484 $generated@@46)) (and (= ($generated@@303 ($generated@@360 $generated@@2 $generated@@484)) $generated@@484) ($generated@@155 ($generated@@360 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@169) ($generated@@251 $generated@@485 $generated@@47)) (and (= ($generated@@303 ($generated@@360 $generated@@3 $generated@@485)) $generated@@485) ($generated@@155 ($generated@@360 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@169) ($generated@@251 $generated@@486 $generated@@44)) (and (= ($generated@@303 ($generated@@360 $generated@@4 $generated@@486)) $generated@@486) ($generated@@155 ($generated@@360 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 20))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@169) ($generated@@251 $generated@@488 $generated@@45)) (and (= ($generated@@303 ($generated@@360 $generated@@487 $generated@@488)) $generated@@488) ($generated@@155 ($generated@@360 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@73) (= ($generated@@251 ($generated@@303 $generated@@489) $generated@@490) ($generated@@155 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@251 ($generated@@303 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@88 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@85 $generated@@492 $generated@@2)) (<= 0 ($generated@@295 $generated@@491))))
 :pattern ( ($generated@@295 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@290 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@289 $generated@@494)) (<= 0 ($generated@@288 $generated@@493))))
 :pattern ( ($generated@@288 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@73)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@73) (= (type $generated@@498) $generated@@73)) (= ($generated@@495 ($generated@@444 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@444 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@73)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@73) (= (type $generated@@502) $generated@@73)) (= ($generated@@499 ($generated@@444 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@444 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@73) (= (type $generated@@504) $generated@@73)) (= ($generated@@81 ($generated@@444 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@444 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@73)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@73) (= (type $generated@@508) $generated@@73)) (= ($generated@@505 ($generated@@452 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@452 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@73)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@73) (= (type $generated@@512) $generated@@73)) (= ($generated@@509 ($generated@@452 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@452 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@73) (= (type $generated@@514) $generated@@73)) (= ($generated@@81 ($generated@@452 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@452 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@169) (= (type $generated@@516) $generated@@169)) (= ($generated@@281 ($generated@@250 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@73)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@73) (= (type $generated@@520) $generated@@73)) (= ($generated@@517 ($generated@@159 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@159 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@73)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@73) (= (type $generated@@524) $generated@@73)) (= ($generated@@521 ($generated@@159 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@159 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@169) (= (type $generated@@526) $generated@@169)) (= ($generated@@167 ($generated@@250 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@250 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@169) (= (type $generated@@528) $generated@@169)) (= ($generated@@168 ($generated@@250 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@250 $generated@@527 $generated@@528))
)))
(assert  (and (forall (($generated@@531 T@U) ) (! (= (type ($generated@@529 $generated@@531)) $generated@@73)
 :pattern ( ($generated@@529 $generated@@531))
)) (forall (($generated@@532 T@U) ($generated@@533 Int) ) (! (let (($generated@@534 ($generated@@290 (type $generated@@532))))
(= (type ($generated@@530 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@530 $generated@@532 $generated@@533))
))))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@289 $generated@@169)) (= (type $generated@@536) $generated@@73)) (= (type $generated@@537) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@535 ($generated@@529 $generated@@536) $generated@@537) (forall (($generated@@538 Int) ) (!  (=> (and (<= 0 $generated@@538) (< $generated@@538 ($generated@@288 $generated@@535))) ($generated@@275 ($generated@@530 $generated@@535 $generated@@538) $generated@@536 $generated@@537))
 :pattern ( ($generated@@530 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@83 $generated@@535 ($generated@@529 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@539 ($generated@@84 $generated@@540)) $generated@@540)
 :pattern ( ($generated@@84 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@73)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@73) (= ($generated@@541 ($generated@@260 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@260 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@73) (= ($generated@@81 ($generated@@260 $generated@@544)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@73) (= ($generated@@545 ($generated@@265 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@265 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@73) (= ($generated@@81 ($generated@@265 $generated@@548)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@73)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@73) (= ($generated@@549 ($generated@@177 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@177 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@73) (= ($generated@@81 ($generated@@177 $generated@@552)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@73)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@73) (= ($generated@@553 ($generated@@529 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@529 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@73) (= ($generated@@81 ($generated@@529 $generated@@556)) $generated@@57))
 :pattern ( ($generated@@529 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@360 $generated@@558 ($generated@@303 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@303 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@323 $generated@@169 $generated@@169)) (= (type $generated@@560) $generated@@73)) (= (type $generated@@561) $generated@@73)) (= ($generated@@155 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@321 $generated@@559) $generated@@562))) (and ($generated@@251 ($generated@@90 ($generated@@419 $generated@@559) $generated@@562) $generated@@561) ($generated@@251 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@90 ($generated@@419 $generated@@559) $generated@@562))
 :pattern ( ($generated@@90 ($generated@@321 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@155 $generated@@559 ($generated@@444 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@341 $generated@@169 $generated@@169)) (= (type $generated@@564) $generated@@73)) (= (type $generated@@565) $generated@@73)) (= ($generated@@155 $generated@@563 ($generated@@452 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@339 $generated@@563) $generated@@566))) (and ($generated@@251 ($generated@@90 ($generated@@427 $generated@@563) $generated@@566) $generated@@565) ($generated@@251 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@90 ($generated@@427 $generated@@563) $generated@@566))
 :pattern ( ($generated@@90 ($generated@@339 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@155 $generated@@563 ($generated@@452 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@169) (= (type $generated@@570) $generated@@169)) (< ($generated@@567 $generated@@569) ($generated@@568 ($generated@@250 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@250 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@169) (= (type $generated@@572) $generated@@169)) (< ($generated@@567 $generated@@572) ($generated@@568 ($generated@@250 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@250 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@169) (= (type $generated@@574) $generated@@73)) (= (type $generated@@575) $generated@@73)) ($generated@@251 $generated@@573 ($generated@@444 $generated@@574 $generated@@575))) (and (= ($generated@@303 ($generated@@360 ($generated@@323 $generated@@169 $generated@@169) $generated@@573)) $generated@@573) ($generated@@155 ($generated@@360 ($generated@@323 $generated@@169 $generated@@169) $generated@@573) ($generated@@444 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@251 $generated@@573 ($generated@@444 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@169) (= (type $generated@@577) $generated@@73)) (= (type $generated@@578) $generated@@73)) ($generated@@251 $generated@@576 ($generated@@452 $generated@@577 $generated@@578))) (and (= ($generated@@303 ($generated@@360 ($generated@@341 $generated@@169 $generated@@169) $generated@@576)) $generated@@576) ($generated@@155 ($generated@@360 ($generated@@341 $generated@@169 $generated@@169) $generated@@576) ($generated@@452 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@251 $generated@@576 ($generated@@452 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@73) (= (type $generated@@580) $generated@@73)) (= (type $generated@@581) $generated@@169)) ($generated@@251 $generated@@581 ($generated@@159 $generated@@579 $generated@@580))) (and (= ($generated@@303 ($generated@@360 $generated@@160 $generated@@581)) $generated@@581) ($generated@@155 ($generated@@360 $generated@@160 $generated@@581) ($generated@@159 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@251 $generated@@581 ($generated@@159 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
 (not ($generated@@0 ($generated@@90 ($generated@@463 $generated@@583) $generated@@582))))
 :pattern ( (let (($generated@@583 (type $generated@@582)))
($generated@@90 ($generated@@463 $generated@@583) $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@78)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@73) (= (type $generated@@587) $generated@@73)) (and (= ($generated@@81 ($generated@@159 $generated@@586 $generated@@587)) $generated@@62) (= ($generated@@584 ($generated@@159 $generated@@586 $generated@@587)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@160) (= ($generated@@567 ($generated@@303 $generated@@588)) ($generated@@568 $generated@@588)))
 :pattern ( ($generated@@567 ($generated@@303 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@169) ($generated@@251 $generated@@589 ($generated@@84 0))) (and (= ($generated@@303 ($generated@@360 $generated@@2 $generated@@589)) $generated@@589) ($generated@@155 ($generated@@360 ($generated@@85 $generated@@169 $generated@@4) $generated@@589) ($generated@@84 0))))
 :pattern ( ($generated@@251 $generated@@589 ($generated@@84 0)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@169) (= (type $generated@@591) $generated@@73)) ($generated@@251 $generated@@590 ($generated@@260 $generated@@591))) (and (= ($generated@@303 ($generated@@360 ($generated@@85 $generated@@169 $generated@@4) $generated@@590)) $generated@@590) ($generated@@155 ($generated@@360 ($generated@@85 $generated@@169 $generated@@4) $generated@@590) ($generated@@260 $generated@@591))))
 :pattern ( ($generated@@251 $generated@@590 ($generated@@260 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@169) (= (type $generated@@593) $generated@@73)) ($generated@@251 $generated@@592 ($generated@@265 $generated@@593))) (and (= ($generated@@303 ($generated@@360 ($generated@@85 $generated@@169 $generated@@4) $generated@@592)) $generated@@592) ($generated@@155 ($generated@@360 ($generated@@85 $generated@@169 $generated@@4) $generated@@592) ($generated@@265 $generated@@593))))
 :pattern ( ($generated@@251 $generated@@592 ($generated@@265 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@169) (= (type $generated@@595) $generated@@73)) ($generated@@251 $generated@@594 ($generated@@177 $generated@@595))) (and (= ($generated@@303 ($generated@@360 ($generated@@85 $generated@@169 $generated@@2) $generated@@594)) $generated@@594) ($generated@@155 ($generated@@360 ($generated@@85 $generated@@169 $generated@@2) $generated@@594) ($generated@@177 $generated@@595))))
 :pattern ( ($generated@@251 $generated@@594 ($generated@@177 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@169) (= (type $generated@@597) $generated@@73)) ($generated@@251 $generated@@596 ($generated@@529 $generated@@597))) (and (= ($generated@@303 ($generated@@360 ($generated@@289 $generated@@169) $generated@@596)) $generated@@596) ($generated@@155 ($generated@@360 ($generated@@289 $generated@@169) $generated@@596) ($generated@@529 $generated@@597))))
 :pattern ( ($generated@@251 $generated@@596 ($generated@@529 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@86) (= (type $generated@@599) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@598 $generated@@146)) ($generated@@83 $generated@@598 $generated@@149 $generated@@599))) ($generated@@83 $generated@@598 $generated@@174 $generated@@599))
 :pattern ( ($generated@@83 $generated@@598 $generated@@149 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@86) (= (type $generated@@601) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@600 $generated@@146)) ($generated@@83 $generated@@600 $generated@@152 $generated@@601))) ($generated@@83 $generated@@600 $generated@@174 $generated@@601))
 :pattern ( ($generated@@83 $generated@@600 $generated@@152 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (=> (and (and (and (= (type $generated@@602) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@603) $generated@@86)) (= (type $generated@@604) ($generated@@75 $generated@@606))) ($generated@@274 ($generated@@91 $generated@@602 $generated@@603 ($generated@@93 ($generated@@90 $generated@@602 $generated@@603) $generated@@604 $generated@@605)))) ($generated@@141 $generated@@602 ($generated@@91 $generated@@602 $generated@@603 ($generated@@93 ($generated@@90 $generated@@602 $generated@@603) $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@91 $generated@@602 $generated@@603 ($generated@@93 ($generated@@90 $generated@@602 $generated@@603) $generated@@604 $generated@@605)))
)))
(assert (= ($generated@@81 $generated@@145) $generated@@63))
(assert (= ($generated@@584 $generated@@145) $generated@@70))
(assert (= ($generated@@81 $generated@@174) $generated@@64))
(assert (= ($generated@@584 $generated@@174) $generated@@70))
(assert (= ($generated@@81 $generated@@149) $generated@@65))
(assert (= ($generated@@584 $generated@@149) $generated@@71))
(assert (= ($generated@@81 $generated@@244) $generated@@66))
(assert (= ($generated@@584 $generated@@244) $generated@@71))
(assert (= ($generated@@81 $generated@@152) $generated@@67))
(assert (= ($generated@@584 $generated@@152) $generated@@72))
(assert (= ($generated@@81 $generated@@247) $generated@@68))
(assert (= ($generated@@584 $generated@@247) $generated@@72))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@608) $generated@@73)) (= (type $generated@@609) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@607 ($generated@@177 $generated@@608) $generated@@609) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@169) (< 0 ($generated ($generated@@90 $generated@@607 $generated@@610)))) ($generated@@275 $generated@@610 $generated@@608 $generated@@609))
 :pattern ( ($generated@@90 $generated@@607 $generated@@610))
))))
 :pattern ( ($generated@@83 $generated@@607 ($generated@@177 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@86) (= ($generated@@155 $generated@@611 $generated@@145)  (or (= $generated@@611 $generated@@146) ($generated@@157 ($generated@@182 $generated@@611)))))
 :pattern ( ($generated@@155 $generated@@611 $generated@@145))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@160) (= (type $generated@@613) $generated@@73)) (= (type $generated@@614) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@274 $generated@@614) (and ($generated@@158 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@73) ($generated@@83 $generated@@612 ($generated@@159 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@83 $generated@@612 ($generated@@159 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@275 ($generated@@167 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@275 ($generated@@167 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@160) (= (type $generated@@617) $generated@@73)) (= (type $generated@@618) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@274 $generated@@618) (and ($generated@@158 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@73) ($generated@@83 $generated@@616 ($generated@@159 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@83 $generated@@616 ($generated@@159 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@275 ($generated@@168 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@275 ($generated@@168 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (! (let (($generated@@623 (type $generated@@621)))
 (=> (and (and (= (type $generated@@620) ($generated@@85 $generated@@623 $generated@@2)) (= (type $generated@@622) $generated@@623)) (not (= $generated@@621 $generated@@622))) (= ($generated ($generated@@90 $generated@@620 $generated@@622)) ($generated ($generated@@90 ($generated@@296 $generated@@620 $generated@@621) $generated@@622)))))
 :pattern ( ($generated@@296 $generated@@620 $generated@@621) ($generated@@90 $generated@@620 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@169) (= (type $generated@@625) $generated@@169)) (= ($generated@@250 ($generated@@270 $generated@@624) ($generated@@270 $generated@@625)) ($generated@@270 ($generated@@250 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@624) ($generated@@270 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@303 ($generated@@270 $generated@@626)) ($generated@@270 ($generated@@303 $generated@@626)))
 :pattern ( ($generated@@303 ($generated@@270 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@290 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@289 $generated@@628)) (= ($generated@@288 $generated@@627) 0)) (= $generated@@627 ($generated@@287 $generated@@628))))
 :pattern ( ($generated@@288 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@85 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@295 ($generated@@91 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@295 $generated@@629) ($generated ($generated@@90 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@295 ($generated@@91 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@634) $generated@@2)) ($generated@@83 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@83 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@636) $generated@@3)) ($generated@@83 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@83 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@638) $generated@@4)) ($generated@@83 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@83 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@640) $generated@@487)) ($generated@@83 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@83 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@642) $generated@@169)) ($generated@@83 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@83 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@289 $generated@@169)) (= (type $generated@@644) $generated@@73)) (= ($generated@@155 $generated@@643 ($generated@@529 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@288 $generated@@643))) ($generated@@251 ($generated@@530 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@530 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@155 $generated@@643 ($generated@@529 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@289 $generated@@169)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@288 $generated@@647))) (< ($generated@@568 ($generated@@360 $generated@@160 ($generated@@530 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@568 ($generated@@360 $generated@@160 ($generated@@530 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@323 $generated@@169 $generated@@169)) (= (type $generated@@650) $generated@@73)) (= (type $generated@@651) $generated@@73)) ($generated@@155 $generated@@649 ($generated@@444 $generated@@650 $generated@@651))) (and (and ($generated@@155 ($generated@@321 $generated@@649) ($generated@@260 $generated@@650)) ($generated@@155 ($generated@@383 $generated@@649) ($generated@@260 $generated@@651))) ($generated@@155 ($generated@@418 $generated@@649) ($generated@@260 ($generated@@159 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@155 $generated@@649 ($generated@@444 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@341 $generated@@169 $generated@@169)) (= (type $generated@@653) $generated@@73)) (= (type $generated@@654) $generated@@73)) ($generated@@155 $generated@@652 ($generated@@452 $generated@@653 $generated@@654))) (and (and ($generated@@155 ($generated@@339 $generated@@652) ($generated@@265 $generated@@653)) ($generated@@155 ($generated@@394 $generated@@652) ($generated@@265 $generated@@654))) ($generated@@155 ($generated@@426 $generated@@652) ($generated@@265 ($generated@@159 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@155 $generated@@652 ($generated@@452 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@155 $generated@@655 $generated@@46))
 :pattern ( ($generated@@155 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@155 $generated@@656 $generated@@47))
 :pattern ( ($generated@@155 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@155 $generated@@657 $generated@@44))
 :pattern ( ($generated@@155 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@487) ($generated@@155 $generated@@658 $generated@@45))
 :pattern ( ($generated@@155 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@169) ($generated@@155 $generated@@659 $generated@@48))
 :pattern ( ($generated@@155 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 (T@U) Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Bool)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Bool)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@660) ($generated@@188 $generated@@86 $generated@@4)) (= (type $generated@@661) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@662) $generated@@86)) (= (type $generated@@663) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@665) $generated@@86)) (= (type $generated@@666) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@667) ($generated@@85 $generated@@169 $generated@@2))) (= (type $generated@@669) $generated@@86)) (= (type $generated@@671) $generated@@86)) (= (type $generated@@672) ($generated@@85 $generated@@169 $generated@@2))) (= (type $generated@@673) ($generated@@85 $generated@@169 $generated@@2))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@675  (=> (= $generated@@660 ($generated@@187 $generated@@146 $generated@@661 $generated@@60 false)) (=> (and (and (not (= $generated@@662 $generated@@146)) (= ($generated@@182 $generated@@662) $generated@@149)) (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@661 $generated@@662) $generated@@60))) (= $generated@@663 ($generated@@91 $generated@@661 $generated@@662 ($generated@@93 ($generated@@90 $generated@@661 $generated@@662) $generated@@60 ($generated@@11 true)))))) (=> (and (and (and ($generated@@274 $generated@@663) ($generated@@664 $generated@@663)) (and (not (= $generated@@665 $generated@@146)) (= ($generated@@182 $generated@@665) $generated@@152))) (and (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@663 $generated@@665) $generated@@60))) (= $generated@@666 ($generated@@91 $generated@@663 $generated@@665 ($generated@@93 ($generated@@90 $generated@@663 $generated@@665) $generated@@60 ($generated@@11 true))))) (and ($generated@@274 $generated@@666) ($generated@@664 $generated@@666)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@667 ($generated@@296 ($generated@@296 ($generated@@316 $generated@@169) ($generated@@303 $generated@@662)) ($generated@@303 $generated@@665))) (= (ControlFlow 0 2) (- 0 1))) true))))))))
(let (($generated@@676  (=> (and ($generated@@274 $generated@@661) ($generated@@664 $generated@@661)) (=> (and (and (and (and (=> $generated@@668 (and ($generated@@155 $generated@@669 $generated@@244) ($generated@@83 $generated@@669 $generated@@244 $generated@@661))) true) (and (=> $generated@@670 (and ($generated@@155 $generated@@671 $generated@@247) ($generated@@83 $generated@@671 $generated@@247 $generated@@661))) true)) (and (and ($generated@@155 $generated@@672 ($generated@@177 $generated@@174)) ($generated@@83 $generated@@672 ($generated@@177 $generated@@174) $generated@@661)) true)) (and (and (and ($generated@@155 $generated@@673 ($generated@@177 $generated@@244)) ($generated@@83 $generated@@673 ($generated@@177 $generated@@244) $generated@@661)) true) (and (= 1 $generated@@674) (= (ControlFlow 0 5) 2)))) $generated@@675))))
$generated@@676)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@557 (T@U T@U T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@639 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert  (and (= (type $generated@@145) $generated@@73) (= (type $generated@@146) $generated@@86)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@86) (= (type $generated@@148) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@147 $generated@@145 $generated@@148)  (or (= $generated@@147 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@147 $generated@@145 $generated@@148))
)))
(assert (= (type $generated@@149) $generated@@73))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@86) (= (type $generated@@151) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@150 $generated@@149 $generated@@151)  (or (= $generated@@150 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@150 $generated@@149 $generated@@151))
)))
(assert (= (type $generated@@152) $generated@@73))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@86) (= (type $generated@@154) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@153 $generated@@152 $generated@@154)  (or (= $generated@@153 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@153 $generated@@152 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@84 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@84 0)))
)))
(assert ($generated@@157 $generated@@149))
(assert ($generated@@157 $generated@@152))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@73) (= (type $generated@@164) $generated@@73)) (= (type $generated@@165) $generated@@160)) ($generated@@155 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@155 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (= (type $generated@@174) $generated@@73))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@86) (=> (and (not (= $generated@@175 $generated@@146)) ($generated@@155 $generated@@175 $generated@@149)) ($generated@@155 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@155 $generated@@175 $generated@@149))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@86) (=> (and (not (= $generated@@176 $generated@@146)) ($generated@@155 $generated@@176 $generated@@152)) ($generated@@155 $generated@@176 $generated@@174)))
 :pattern ( ($generated@@155 $generated@@176 $generated@@152))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@181) $generated@@73)) ($generated@@155 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@155 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@86) (= ($generated@@155 $generated@@184 $generated@@149)  (or (= $generated@@184 $generated@@146) (= ($generated@@182 $generated@@184) $generated@@149))))
 :pattern ( ($generated@@155 $generated@@184 $generated@@149))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@86) (= ($generated@@155 $generated@@185 $generated@@152)  (or (= $generated@@185 $generated@@146) (= ($generated@@182 $generated@@185) $generated@@152))))
 :pattern ( ($generated@@155 $generated@@185 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@86 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@76 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@86) (= (type $generated@@236) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@237) ($generated@@75 $generated@@4))) (= (type $generated@@239) $generated@@86)) (= (type $generated@@240) ($generated@@75 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@86) (= (type $generated@@243) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@242 $generated@@174 $generated@@243) ($generated@@83 $generated@@242 $generated@@145 $generated@@243)))
 :pattern ( ($generated@@83 $generated@@242 $generated@@174 $generated@@243))
)))
(assert (= (type $generated@@244) $generated@@73))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@86) (= (type $generated@@246) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@245 $generated@@244 $generated@@246) ($generated@@83 $generated@@245 $generated@@149 $generated@@246)))
 :pattern ( ($generated@@83 $generated@@245 $generated@@244 $generated@@246))
)))
(assert (= (type $generated@@247) $generated@@73))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@86) (= (type $generated@@249) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@248 $generated@@247 $generated@@249) ($generated@@83 $generated@@248 $generated@@152 $generated@@249)))
 :pattern ( ($generated@@83 $generated@@248 $generated@@247 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@160)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@73) (= (type $generated@@255) $generated@@73)) (= (type $generated@@256) $generated@@169)) (= (type $generated@@257) $generated@@169)) (= ($generated@@155 ($generated@@250 $generated@@256 $generated@@257) ($generated@@159 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@155 ($generated@@250 $generated@@256 $generated@@257) ($generated@@159 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@160) (= (type $generated@@259) $generated@@160)) (= ($generated@@166 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@166 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@73)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@263) $generated@@73)) (= ($generated@@155 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@169) ($generated@@0 ($generated@@90 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@90 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@155 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@73)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@268) $generated@@73)) (= ($generated@@155 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@169) ($generated@@0 ($generated@@90 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@90 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@155 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@73) (= (type $generated@@279) $generated@@73)) (= (type $generated@@280) $generated@@169)) (= (type $generated@@281) $generated@@169)) (= (type $generated@@282) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@276 $generated@@282)) (= ($generated@@83 ($generated@@250 $generated@@280 $generated@@281) ($generated@@159 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@83 ($generated@@250 $generated@@280 $generated@@281) ($generated@@159 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@77)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@160) (= ($generated@@158 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@160) ($generated@@158 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@169) (= (type $generated@@288) $generated@@169)) (= $generated@@286 ($generated@@250 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@158 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@169)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@73) (= (type $generated@@301) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@277 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@83 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@277 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@303) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@304) $generated@@169)) (= (type $generated@@305) $generated@@73)) ($generated@@141 $generated@@302 $generated@@303)) ($generated@@277 $generated@@304 $generated@@305 $generated@@302)) ($generated@@277 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@141 $generated@@302 $generated@@303) ($generated@@277 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@307) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@309) $generated@@73)) ($generated@@141 $generated@@306 $generated@@307)) ($generated@@83 $generated@@308 $generated@@309 $generated@@306)) ($generated@@83 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@141 $generated@@306 $generated@@307) ($generated@@83 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@85 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@88 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@85 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@90 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 18)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@85 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@90 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@90 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 19)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@85 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@90 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@90 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@88 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@85 $generated@@353 $generated@@2)) (= ($generated@@178 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@90 $generated@@352 $generated@@354))) (<= ($generated ($generated@@90 $generated@@352 $generated@@354)) ($generated@@310 $generated@@352))))
 :pattern ( ($generated@@90 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@178 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@169) ($generated@@251 $generated@@358 $generated@@145)) (and (= ($generated@@297 ($generated@@355 $generated@@86 $generated@@358)) $generated@@358) ($generated@@155 ($generated@@355 $generated@@86 $generated@@358) $generated@@145)))
 :pattern ( ($generated@@251 $generated@@358 $generated@@145))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@169) ($generated@@251 $generated@@359 $generated@@174)) (and (= ($generated@@297 ($generated@@355 $generated@@86 $generated@@359)) $generated@@359) ($generated@@155 ($generated@@355 $generated@@86 $generated@@359) $generated@@174)))
 :pattern ( ($generated@@251 $generated@@359 $generated@@174))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@169) ($generated@@251 $generated@@360 $generated@@149)) (and (= ($generated@@297 ($generated@@355 $generated@@86 $generated@@360)) $generated@@360) ($generated@@155 ($generated@@355 $generated@@86 $generated@@360) $generated@@149)))
 :pattern ( ($generated@@251 $generated@@360 $generated@@149))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@169) ($generated@@251 $generated@@361 $generated@@244)) (and (= ($generated@@297 ($generated@@355 $generated@@86 $generated@@361)) $generated@@361) ($generated@@155 ($generated@@355 $generated@@86 $generated@@361) $generated@@244)))
 :pattern ( ($generated@@251 $generated@@361 $generated@@244))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@169) ($generated@@251 $generated@@362 $generated@@152)) (and (= ($generated@@297 ($generated@@355 $generated@@86 $generated@@362)) $generated@@362) ($generated@@155 ($generated@@355 $generated@@86 $generated@@362) $generated@@152)))
 :pattern ( ($generated@@251 $generated@@362 $generated@@152))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@169) ($generated@@251 $generated@@363 $generated@@247)) (and (= ($generated@@297 ($generated@@355 $generated@@86 $generated@@363)) $generated@@363) ($generated@@155 ($generated@@355 $generated@@86 $generated@@363) $generated@@247)))
 :pattern ( ($generated@@251 $generated@@363 $generated@@247))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@86) (= ($generated@@155 $generated@@364 $generated@@174)  (and ($generated@@155 $generated@@364 $generated@@145) (not (= $generated@@364 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@364 $generated@@174))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@86) (= ($generated@@155 $generated@@365 $generated@@244)  (and ($generated@@155 $generated@@365 $generated@@149) (not (= $generated@@365 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@365 $generated@@244))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@86) (= ($generated@@155 $generated@@366 $generated@@247)  (and ($generated@@155 $generated@@366 $generated@@152) (not (= $generated@@366 $generated@@146)))))
 :pattern ( ($generated@@155 $generated@@366 $generated@@247))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(let (($generated@@369 ($generated@@319 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@318 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@317 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@90 ($generated@@316 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@316 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@320 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@85 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@320 (type $generated@@374))))
(let (($generated@@376 ($generated@@319 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@318 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@317 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@90 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(let (($generated@@380 ($generated@@337 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@336 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@335 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@90 ($generated@@334 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@334 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@338 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@85 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@338 (type $generated@@385))))
(let (($generated@@387 ($generated@@337 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@336 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@335 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@90 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@390) $generated@@73)) (= ($generated@@155 $generated@@389 ($generated@@177 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@169) (< 0 ($generated ($generated@@90 $generated@@389 $generated@@391)))) ($generated@@251 $generated@@391 $generated@@390))
 :pattern ( ($generated@@90 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@155 $generated@@389 ($generated@@177 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@393) $generated@@73)) (= (type $generated@@394) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@392 ($generated@@260 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@169) ($generated@@0 ($generated@@90 $generated@@392 $generated@@395))) ($generated@@277 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@90 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@83 $generated@@392 ($generated@@260 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@85 $generated@@169 $generated@@4)) (= (type $generated@@397) $generated@@73)) (= (type $generated@@398) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@396 ($generated@@265 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@169) ($generated@@0 ($generated@@90 $generated@@396 $generated@@399))) ($generated@@277 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@90 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@83 $generated@@396 ($generated@@265 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@90 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@90 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@85 $generated@@169 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@320 (type $generated@@405))))
(let (($generated@@407 ($generated@@319 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@85 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@318 $generated@@169 $generated@@169)) (= (type $generated@@409) $generated@@169)) (= ($generated@@0 ($generated@@90 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@90 ($generated@@316 $generated@@408) ($generated@@167 ($generated@@355 $generated@@160 $generated@@409)))) (= ($generated@@90 ($generated@@403 $generated@@408) ($generated@@167 ($generated@@355 $generated@@160 $generated@@409))) ($generated@@168 ($generated@@355 $generated@@160 $generated@@409))))))
 :pattern ( ($generated@@90 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@85 $generated@@169 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@338 (type $generated@@413))))
(let (($generated@@415 ($generated@@337 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@85 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@336 $generated@@169 $generated@@169)) (= (type $generated@@417) $generated@@169)) (= ($generated@@0 ($generated@@90 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@90 ($generated@@334 $generated@@416) ($generated@@167 ($generated@@355 $generated@@160 $generated@@417)))) (= ($generated@@90 ($generated@@411 $generated@@416) ($generated@@167 ($generated@@355 $generated@@160 $generated@@417))) ($generated@@168 ($generated@@355 $generated@@160 $generated@@417))))))
 :pattern ( ($generated@@90 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@319 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@318 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@90 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@90 ($generated@@316 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@90 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@90 ($generated@@316 $generated@@418) $generated@@422))
 :pattern ( ($generated@@90 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@337 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@336 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@90 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@90 ($generated@@334 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@90 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@90 ($generated@@334 $generated@@423) $generated@@427))
 :pattern ( ($generated@@90 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@90 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@73)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@318 $generated@@169 $generated@@169)) (= (type $generated@@432) $generated@@73)) (= (type $generated@@433) $generated@@73)) (= (type $generated@@434) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@316 $generated@@431) $generated@@435))) (and ($generated@@277 ($generated@@90 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@277 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@90 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@90 ($generated@@316 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@83 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@73)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@336 $generated@@169 $generated@@169)) (= (type $generated@@440) $generated@@73)) (= (type $generated@@441) $generated@@73)) (= (type $generated@@442) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@334 $generated@@439) $generated@@443))) (and ($generated@@277 ($generated@@90 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@277 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@90 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@90 ($generated@@334 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@83 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@445) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@446) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@444 $generated@@446))) (and ($generated@@141 $generated@@444 $generated@@445) ($generated@@141 $generated@@445 $generated@@446))) ($generated@@141 $generated@@444 $generated@@446))
 :pattern ( ($generated@@141 $generated@@444 $generated@@445) ($generated@@141 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@85 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@338 (type $generated@@449))))
(let (($generated@@451 ($generated@@337 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@336 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@335 $generated@@451 $generated@@450)) (= ($generated@@334 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@334 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@338 (type $generated@@452))))
(let (($generated@@454 ($generated@@337 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@336 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@335 $generated@@454 $generated@@453)) (= ($generated@@382 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@382 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@338 (type $generated@@455))))
(let (($generated@@457 ($generated@@337 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@336 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@335 $generated@@457 $generated@@456)) (= ($generated@@410 $generated@@455) ($generated@@447 $generated@@169))))))
 :pattern ( ($generated@@410 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@320 (type $generated@@458))))
(let (($generated@@460 ($generated@@319 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@318 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@317 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@169) (= (type $generated@@462) $generated@@169)) ($generated@@0 ($generated@@90 ($generated@@402 $generated@@458) ($generated@@297 ($generated@@250 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@402 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@338 (type $generated@@463))))
(let (($generated@@465 ($generated@@337 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@336 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@335 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@169) (= (type $generated@@467) $generated@@169)) ($generated@@0 ($generated@@90 ($generated@@410 $generated@@463) ($generated@@297 ($generated@@250 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@410 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@169) ($generated@@251 $generated@@468 $generated@@46)) (and (= ($generated@@297 ($generated@@355 $generated@@2 $generated@@468)) $generated@@468) ($generated@@155 ($generated@@355 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@169) ($generated@@251 $generated@@469 $generated@@47)) (and (= ($generated@@297 ($generated@@355 $generated@@3 $generated@@469)) $generated@@469) ($generated@@155 ($generated@@355 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@169) ($generated@@251 $generated@@470 $generated@@44)) (and (= ($generated@@297 ($generated@@355 $generated@@4 $generated@@470)) $generated@@470) ($generated@@155 ($generated@@355 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 20))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@169) ($generated@@251 $generated@@472 $generated@@45)) (and (= ($generated@@297 ($generated@@355 $generated@@471 $generated@@472)) $generated@@472) ($generated@@155 ($generated@@355 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@73) (= ($generated@@251 ($generated@@297 $generated@@473) $generated@@474) ($generated@@155 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@251 ($generated@@297 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@88 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@85 $generated@@476 $generated@@2)) (<= 0 ($generated@@310 $generated@@475))))
 :pattern ( ($generated@@310 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@292 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@291 $generated@@478)) (<= 0 ($generated@@290 $generated@@477))))
 :pattern ( ($generated@@290 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@73)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@73) (= (type $generated@@482) $generated@@73)) (= ($generated@@479 ($generated@@428 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@428 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@73)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@73) (= (type $generated@@486) $generated@@73)) (= ($generated@@483 ($generated@@428 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@428 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@73) (= (type $generated@@488) $generated@@73)) (= ($generated@@81 ($generated@@428 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@73)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@73) (= (type $generated@@492) $generated@@73)) (= ($generated@@489 ($generated@@436 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@436 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@73)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@73) (= (type $generated@@496) $generated@@73)) (= ($generated@@493 ($generated@@436 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@436 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@73) (= (type $generated@@498) $generated@@73)) (= ($generated@@81 ($generated@@436 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@169) (= (type $generated@@500) $generated@@169)) (= ($generated@@283 ($generated@@250 $generated@@499 $generated@@500)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@73)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@73) (= (type $generated@@504) $generated@@73)) (= ($generated@@501 ($generated@@159 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@159 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@73)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@73) (= (type $generated@@508) $generated@@73)) (= ($generated@@505 ($generated@@159 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@159 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@169) (= (type $generated@@510) $generated@@169)) (= ($generated@@167 ($generated@@250 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@250 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@169) (= (type $generated@@512) $generated@@169)) (= ($generated@@168 ($generated@@250 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@250 $generated@@511 $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@73)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@292 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@291 $generated@@169)) (= (type $generated@@520) $generated@@73)) (= (type $generated@@521) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@290 $generated@@519))) ($generated@@277 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@83 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@84 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@84 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@73)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@73) (= ($generated@@525 ($generated@@260 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@260 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@73) (= ($generated@@81 ($generated@@260 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@73)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@73) (= ($generated@@529 ($generated@@265 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@265 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@73) (= ($generated@@81 ($generated@@265 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@73)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@73) (= ($generated@@533 ($generated@@177 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@177 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@73) (= ($generated@@81 ($generated@@177 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@73)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@73) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@73) (= ($generated@@81 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(= ($generated@@355 $generated@@542 ($generated@@297 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@297 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@318 $generated@@169 $generated@@169)) (= (type $generated@@544) $generated@@73)) (= (type $generated@@545) $generated@@73)) (= ($generated@@155 $generated@@543 ($generated@@428 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@316 $generated@@543) $generated@@546))) (and ($generated@@251 ($generated@@90 ($generated@@403 $generated@@543) $generated@@546) $generated@@545) ($generated@@251 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@90 ($generated@@403 $generated@@543) $generated@@546))
 :pattern ( ($generated@@90 ($generated@@316 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@155 $generated@@543 ($generated@@428 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@336 $generated@@169 $generated@@169)) (= (type $generated@@548) $generated@@73)) (= (type $generated@@549) $generated@@73)) (= ($generated@@155 $generated@@547 ($generated@@436 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@169) ($generated@@0 ($generated@@90 ($generated@@334 $generated@@547) $generated@@550))) (and ($generated@@251 ($generated@@90 ($generated@@411 $generated@@547) $generated@@550) $generated@@549) ($generated@@251 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@90 ($generated@@411 $generated@@547) $generated@@550))
 :pattern ( ($generated@@90 ($generated@@334 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@155 $generated@@547 ($generated@@436 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@169) (= (type $generated@@554) $generated@@169)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@250 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@250 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@169) (= (type $generated@@556) $generated@@169)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@250 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@250 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(let (($generated@@562 (type $generated@@559)))
(= (type ($generated@@557 $generated@@558 $generated@@559 $generated@@560)) ($generated@@318 $generated@@562 $generated@@561))))
 :pattern ( ($generated@@557 $generated@@558 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(let (($generated@@568 (type $generated@@564)))
 (=> (and (= (type $generated@@563) ($generated@@318 $generated@@568 $generated@@567)) (= (type $generated@@565) $generated@@568)) (and (=> (= $generated@@565 $generated@@564) (and ($generated@@0 ($generated@@90 ($generated@@316 ($generated@@557 $generated@@563 $generated@@564 $generated@@566)) $generated@@565)) (= ($generated@@90 ($generated@@403 ($generated@@557 $generated@@563 $generated@@564 $generated@@566)) $generated@@565) $generated@@566))) (=> (not (= $generated@@565 $generated@@564)) (and (= ($generated@@0 ($generated@@90 ($generated@@316 ($generated@@557 $generated@@563 $generated@@564 $generated@@566)) $generated@@565)) ($generated@@0 ($generated@@90 ($generated@@316 $generated@@563) $generated@@565))) (= ($generated@@90 ($generated@@403 ($generated@@557 $generated@@563 $generated@@564 $generated@@566)) $generated@@565) ($generated@@90 ($generated@@403 $generated@@563) $generated@@565))))))))
 :pattern ( ($generated@@90 ($generated@@316 ($generated@@557 $generated@@563 $generated@@564 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@90 ($generated@@403 ($generated@@557 $generated@@563 $generated@@564 $generated@@566)) $generated@@565))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@169) (= (type $generated@@570) $generated@@73)) (= (type $generated@@571) $generated@@73)) ($generated@@251 $generated@@569 ($generated@@428 $generated@@570 $generated@@571))) (and (= ($generated@@297 ($generated@@355 ($generated@@318 $generated@@169 $generated@@169) $generated@@569)) $generated@@569) ($generated@@155 ($generated@@355 ($generated@@318 $generated@@169 $generated@@169) $generated@@569) ($generated@@428 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@251 $generated@@569 ($generated@@428 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@169) (= (type $generated@@573) $generated@@73)) (= (type $generated@@574) $generated@@73)) ($generated@@251 $generated@@572 ($generated@@436 $generated@@573 $generated@@574))) (and (= ($generated@@297 ($generated@@355 ($generated@@336 $generated@@169 $generated@@169) $generated@@572)) $generated@@572) ($generated@@155 ($generated@@355 ($generated@@336 $generated@@169 $generated@@169) $generated@@572) ($generated@@436 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@251 $generated@@572 ($generated@@436 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@73) (= (type $generated@@576) $generated@@73)) (= (type $generated@@577) $generated@@169)) ($generated@@251 $generated@@577 ($generated@@159 $generated@@575 $generated@@576))) (and (= ($generated@@297 ($generated@@355 $generated@@160 $generated@@577)) $generated@@577) ($generated@@155 ($generated@@355 $generated@@160 $generated@@577) ($generated@@159 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@251 $generated@@577 ($generated@@159 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@90 ($generated@@447 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@90 ($generated@@447 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@78)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@73) (= (type $generated@@583) $generated@@73)) (and (= ($generated@@81 ($generated@@159 $generated@@582 $generated@@583)) $generated@@62) (= ($generated@@580 ($generated@@159 $generated@@582 $generated@@583)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@160) (= ($generated@@551 ($generated@@297 $generated@@584)) ($generated@@552 $generated@@584)))
 :pattern ( ($generated@@551 ($generated@@297 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@169) ($generated@@251 $generated@@585 ($generated@@84 0))) (and (= ($generated@@297 ($generated@@355 $generated@@2 $generated@@585)) $generated@@585) ($generated@@155 ($generated@@355 ($generated@@85 $generated@@169 $generated@@4) $generated@@585) ($generated@@84 0))))
 :pattern ( ($generated@@251 $generated@@585 ($generated@@84 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@169) (= (type $generated@@587) $generated@@73)) ($generated@@251 $generated@@586 ($generated@@260 $generated@@587))) (and (= ($generated@@297 ($generated@@355 ($generated@@85 $generated@@169 $generated@@4) $generated@@586)) $generated@@586) ($generated@@155 ($generated@@355 ($generated@@85 $generated@@169 $generated@@4) $generated@@586) ($generated@@260 $generated@@587))))
 :pattern ( ($generated@@251 $generated@@586 ($generated@@260 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@169) (= (type $generated@@589) $generated@@73)) ($generated@@251 $generated@@588 ($generated@@265 $generated@@589))) (and (= ($generated@@297 ($generated@@355 ($generated@@85 $generated@@169 $generated@@4) $generated@@588)) $generated@@588) ($generated@@155 ($generated@@355 ($generated@@85 $generated@@169 $generated@@4) $generated@@588) ($generated@@265 $generated@@589))))
 :pattern ( ($generated@@251 $generated@@588 ($generated@@265 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@169) (= (type $generated@@591) $generated@@73)) ($generated@@251 $generated@@590 ($generated@@177 $generated@@591))) (and (= ($generated@@297 ($generated@@355 ($generated@@85 $generated@@169 $generated@@2) $generated@@590)) $generated@@590) ($generated@@155 ($generated@@355 ($generated@@85 $generated@@169 $generated@@2) $generated@@590) ($generated@@177 $generated@@591))))
 :pattern ( ($generated@@251 $generated@@590 ($generated@@177 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@169) (= (type $generated@@593) $generated@@73)) ($generated@@251 $generated@@592 ($generated@@513 $generated@@593))) (and (= ($generated@@297 ($generated@@355 ($generated@@291 $generated@@169) $generated@@592)) $generated@@592) ($generated@@155 ($generated@@355 ($generated@@291 $generated@@169) $generated@@592) ($generated@@513 $generated@@593))))
 :pattern ( ($generated@@251 $generated@@592 ($generated@@513 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@86) (= (type $generated@@595) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@594 $generated@@146)) ($generated@@83 $generated@@594 $generated@@149 $generated@@595))) ($generated@@83 $generated@@594 $generated@@174 $generated@@595))
 :pattern ( ($generated@@83 $generated@@594 $generated@@149 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@86) (= (type $generated@@597) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@596 $generated@@146)) ($generated@@83 $generated@@596 $generated@@152 $generated@@597))) ($generated@@83 $generated@@596 $generated@@174 $generated@@597))
 :pattern ( ($generated@@83 $generated@@596 $generated@@152 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@601)))
 (=> (and (and (and (= (type $generated@@598) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@599) $generated@@86)) (= (type $generated@@600) ($generated@@75 $generated@@602))) ($generated@@276 ($generated@@91 $generated@@598 $generated@@599 ($generated@@93 ($generated@@90 $generated@@598 $generated@@599) $generated@@600 $generated@@601)))) ($generated@@141 $generated@@598 ($generated@@91 $generated@@598 $generated@@599 ($generated@@93 ($generated@@90 $generated@@598 $generated@@599) $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@91 $generated@@598 $generated@@599 ($generated@@93 ($generated@@90 $generated@@598 $generated@@599) $generated@@600 $generated@@601)))
)))
(assert (= ($generated@@81 $generated@@145) $generated@@63))
(assert (= ($generated@@580 $generated@@145) $generated@@70))
(assert (= ($generated@@81 $generated@@174) $generated@@64))
(assert (= ($generated@@580 $generated@@174) $generated@@70))
(assert (= ($generated@@81 $generated@@149) $generated@@65))
(assert (= ($generated@@580 $generated@@149) $generated@@71))
(assert (= ($generated@@81 $generated@@244) $generated@@66))
(assert (= ($generated@@580 $generated@@244) $generated@@71))
(assert (= ($generated@@81 $generated@@152) $generated@@67))
(assert (= ($generated@@580 $generated@@152) $generated@@72))
(assert (= ($generated@@81 $generated@@247) $generated@@68))
(assert (= ($generated@@580 $generated@@247) $generated@@72))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@85 $generated@@169 $generated@@2)) (= (type $generated@@604) $generated@@73)) (= (type $generated@@605) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@603 ($generated@@177 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@169) (< 0 ($generated ($generated@@90 $generated@@603 $generated@@606)))) ($generated@@277 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@90 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@83 $generated@@603 ($generated@@177 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@86) (= ($generated@@155 $generated@@607 $generated@@145)  (or (= $generated@@607 $generated@@146) ($generated@@157 ($generated@@182 $generated@@607)))))
 :pattern ( ($generated@@155 $generated@@607 $generated@@145))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@160) (= (type $generated@@609) $generated@@73)) (= (type $generated@@610) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@276 $generated@@610) (and ($generated@@158 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@73) ($generated@@83 $generated@@608 ($generated@@159 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@83 $generated@@608 ($generated@@159 $generated@@609 $generated@@611) $generated@@610))
))))) ($generated@@277 ($generated@@167 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@277 ($generated@@167 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@160) (= (type $generated@@613) $generated@@73)) (= (type $generated@@614) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@276 $generated@@614) (and ($generated@@158 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@73) ($generated@@83 $generated@@612 ($generated@@159 $generated@@615 $generated@@613) $generated@@614))
 :pattern ( ($generated@@83 $generated@@612 ($generated@@159 $generated@@615 $generated@@613) $generated@@614))
))))) ($generated@@277 ($generated@@168 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@277 ($generated@@168 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@169) (= (type $generated@@617) $generated@@169)) (= ($generated@@250 ($generated@@272 $generated@@616) ($generated@@272 $generated@@617)) ($generated@@272 ($generated@@250 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@616) ($generated@@272 $generated@@617)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@270 $generated@@618))) ($generated@@272 ($generated@@297 ($generated@@8 $generated@@618))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@270 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ) (! (= ($generated@@297 ($generated@@272 $generated@@619)) ($generated@@272 ($generated@@297 $generated@@619)))
 :pattern ( ($generated@@297 ($generated@@272 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@292 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@291 $generated@@621)) (= ($generated@@290 $generated@@620) 0)) (= $generated@@620 ($generated@@289 $generated@@621))))
 :pattern ( ($generated@@290 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@623)))
 (=> (and (and (= (type $generated@@622) ($generated@@85 $generated@@625 $generated@@2)) (= (type $generated@@624) $generated@@2)) (<= 0 ($generated $generated@@624))) (= ($generated@@310 ($generated@@91 $generated@@622 $generated@@623 $generated@@624)) (+ (- ($generated@@310 $generated@@622) ($generated ($generated@@90 $generated@@622 $generated@@623))) ($generated $generated@@624)))))
 :pattern ( ($generated@@310 ($generated@@91 $generated@@622 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@627) $generated@@2)) ($generated@@83 $generated@@627 $generated@@46 $generated@@626))
 :pattern ( ($generated@@83 $generated@@627 $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@629) $generated@@3)) ($generated@@83 $generated@@629 $generated@@47 $generated@@628))
 :pattern ( ($generated@@83 $generated@@629 $generated@@47 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@631) $generated@@4)) ($generated@@83 $generated@@631 $generated@@44 $generated@@630))
 :pattern ( ($generated@@83 $generated@@631 $generated@@44 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@633) $generated@@471)) ($generated@@83 $generated@@633 $generated@@45 $generated@@632))
 :pattern ( ($generated@@83 $generated@@633 $generated@@45 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@635) $generated@@169)) ($generated@@83 $generated@@635 $generated@@48 $generated@@634))
 :pattern ( ($generated@@83 $generated@@635 $generated@@48 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@291 $generated@@169)) (= (type $generated@@637) $generated@@73)) (= ($generated@@155 $generated@@636 ($generated@@513 $generated@@637)) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@290 $generated@@636))) ($generated@@251 ($generated@@514 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@514 $generated@@636 $generated@@638))
))))
 :pattern ( ($generated@@155 $generated@@636 ($generated@@513 $generated@@637)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 Int) ) (!  (=> (= (type $generated@@640) ($generated@@291 $generated@@169)) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@290 $generated@@640))) (< ($generated@@552 ($generated@@355 $generated@@160 ($generated@@514 $generated@@640 $generated@@641))) ($generated@@639 $generated@@640))))
 :pattern ( ($generated@@552 ($generated@@355 $generated@@160 ($generated@@514 $generated@@640 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@318 $generated@@169 $generated@@169)) (= (type $generated@@643) $generated@@73)) (= (type $generated@@644) $generated@@73)) ($generated@@155 $generated@@642 ($generated@@428 $generated@@643 $generated@@644))) (and (and ($generated@@155 ($generated@@316 $generated@@642) ($generated@@260 $generated@@643)) ($generated@@155 ($generated@@371 $generated@@642) ($generated@@260 $generated@@644))) ($generated@@155 ($generated@@402 $generated@@642) ($generated@@260 ($generated@@159 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@155 $generated@@642 ($generated@@428 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@336 $generated@@169 $generated@@169)) (= (type $generated@@646) $generated@@73)) (= (type $generated@@647) $generated@@73)) ($generated@@155 $generated@@645 ($generated@@436 $generated@@646 $generated@@647))) (and (and ($generated@@155 ($generated@@334 $generated@@645) ($generated@@265 $generated@@646)) ($generated@@155 ($generated@@382 $generated@@645) ($generated@@265 $generated@@647))) ($generated@@155 ($generated@@410 $generated@@645) ($generated@@265 ($generated@@159 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@155 $generated@@645 ($generated@@436 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@2) ($generated@@155 $generated@@648 $generated@@46))
 :pattern ( ($generated@@155 $generated@@648 $generated@@46))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@3) ($generated@@155 $generated@@649 $generated@@47))
 :pattern ( ($generated@@155 $generated@@649 $generated@@47))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@4) ($generated@@155 $generated@@650 $generated@@44))
 :pattern ( ($generated@@155 $generated@@650 $generated@@44))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@471) ($generated@@155 $generated@@651 $generated@@45))
 :pattern ( ($generated@@155 $generated@@651 $generated@@45))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@169) ($generated@@155 $generated@@652 $generated@@48))
 :pattern ( ($generated@@155 $generated@@652 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 (T@U) Bool)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Bool)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Bool)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@653) ($generated@@188 $generated@@86 $generated@@4)) (= (type $generated@@654) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@655) $generated@@86)) (= (type $generated@@656) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@658) $generated@@86)) (= (type $generated@@659) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@660) ($generated@@318 $generated@@169 $generated@@169))) (= (type $generated@@662) $generated@@86)) (= (type $generated@@664) $generated@@86)) (= (type $generated@@665) ($generated@@318 $generated@@169 $generated@@169))) (= (type $generated@@666) ($generated@@318 $generated@@169 $generated@@169))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@668  (=> (= $generated@@653 ($generated@@187 $generated@@146 $generated@@654 $generated@@60 false)) (=> (and (and (not (= $generated@@655 $generated@@146)) (= ($generated@@182 $generated@@655) $generated@@149)) (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@654 $generated@@655) $generated@@60))) (= $generated@@656 ($generated@@91 $generated@@654 $generated@@655 ($generated@@93 ($generated@@90 $generated@@654 $generated@@655) $generated@@60 ($generated@@11 true)))))) (=> (and (and (and ($generated@@276 $generated@@656) ($generated@@657 $generated@@656)) (and (not (= $generated@@658 $generated@@146)) (= ($generated@@182 $generated@@658) $generated@@152))) (and (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@656 $generated@@658) $generated@@60))) (= $generated@@659 ($generated@@91 $generated@@656 $generated@@658 ($generated@@93 ($generated@@90 $generated@@656 $generated@@658) $generated@@60 ($generated@@11 true))))) (and ($generated@@276 $generated@@659) ($generated@@657 $generated@@659)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@660 ($generated@@557 ($generated@@557 ($generated@@317 $generated@@169 $generated@@169) ($generated@@297 ($generated@@8 ($generated@@270 8))) ($generated@@297 $generated@@655)) ($generated@@297 ($generated@@8 ($generated@@270 9))) ($generated@@297 $generated@@658))) (= (ControlFlow 0 2) (- 0 1))) true))))))))
(let (($generated@@669  (=> (and ($generated@@276 $generated@@654) ($generated@@657 $generated@@654)) (=> (and (and (and (and (=> $generated@@661 (and ($generated@@155 $generated@@662 $generated@@244) ($generated@@83 $generated@@662 $generated@@244 $generated@@654))) true) (and (=> $generated@@663 (and ($generated@@155 $generated@@664 $generated@@247) ($generated@@83 $generated@@664 $generated@@247 $generated@@654))) true)) (and (and ($generated@@155 $generated@@665 ($generated@@428 $generated@@46 $generated@@174)) ($generated@@83 $generated@@665 ($generated@@428 $generated@@46 $generated@@174) $generated@@654)) true)) (and (and (and ($generated@@155 $generated@@666 ($generated@@428 $generated@@46 $generated@@244)) ($generated@@83 $generated@@666 ($generated@@428 $generated@@46 $generated@@244) $generated@@654)) true) (and (= 1 $generated@@667) (= (ControlFlow 0 5) 2)))) $generated@@668))))
$generated@@669)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U Int) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@475 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert  (and (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@263 $generated@@269 $generated@@270)) ($generated@@265 $generated@@271)))
 :pattern ( ($generated@@263 $generated@@269 $generated@@270))
))) (forall (($generated@@272 T@U) ) (! (= (type ($generated@@264 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) ($generated@@265 $generated@@163)) (= (type $generated@@274) $generated@@163)) (= (type $generated@@275) $generated@@70)) (and ($generated@@149 $generated@@273 ($generated@@264 $generated@@275)) ($generated@@240 $generated@@274 $generated@@275))) ($generated@@149 ($generated@@263 $generated@@273 $generated@@274) ($generated@@264 $generated@@275)))
 :pattern ( ($generated@@149 ($generated@@263 $generated@@273 $generated@@274) ($generated@@264 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@70) (= (type $generated@@279) $generated@@70)) (= (type $generated@@280) $generated@@163)) (= (type $generated@@281) $generated@@163)) (= (type $generated@@282) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@276 $generated@@282)) (= ($generated@@80 ($generated@@239 $generated@@280 $generated@@281) ($generated@@153 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@280 $generated@@281) ($generated@@153 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@74)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@154) (= ($generated@@152 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@154) ($generated@@152 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@163) (= (type $generated@@288) $generated@@163)) (= $generated@@286 ($generated@@239 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@152 $generated@@286))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@289 $generated@@291)) ($generated@@265 $generated@@291))
 :pattern ( ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) 0)
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 (type $generated@@294)))
 (=> (= (type $generated@@293) ($generated@@265 $generated@@295)) (= ($generated@@290 ($generated@@263 $generated@@293 $generated@@294)) (+ 1 ($generated@@290 $generated@@293)))))
 :pattern ( ($generated@@263 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@163)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@70) (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@277 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@80 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@277 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@302) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@303) $generated@@163)) (= (type $generated@@304) $generated@@70)) ($generated@@138 $generated@@301 $generated@@302)) ($generated@@277 $generated@@303 $generated@@304 $generated@@301)) ($generated@@277 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@138 $generated@@301 $generated@@302) ($generated@@277 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@306) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@308) $generated@@70)) ($generated@@138 $generated@@305 $generated@@306)) ($generated@@80 $generated@@307 $generated@@308 $generated@@305)) ($generated@@80 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@138 $generated@@305 $generated@@306) ($generated@@80 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@82 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@85 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@82 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@87 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@82 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@82 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@85 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@82 $generated@@352 $generated@@2)) (= ($generated@@171 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@87 $generated@@351 $generated@@353))) (<= ($generated ($generated@@87 $generated@@351 $generated@@353)) ($generated@@309 $generated@@351))))
 :pattern ( ($generated@@87 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@171 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@163) ($generated@@240 $generated@@357 $generated@@142)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@357)) $generated@@357) ($generated@@149 ($generated@@354 $generated@@83 $generated@@357) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@357 $generated@@142))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@163) ($generated@@240 $generated@@358 $generated@@168)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@358)) $generated@@358) ($generated@@149 ($generated@@354 $generated@@83 $generated@@358) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@358 $generated@@168))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@163) ($generated@@240 $generated@@359 $generated@@146)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@359)) $generated@@359) ($generated@@149 ($generated@@354 $generated@@83 $generated@@359) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@359 $generated@@146))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@163) ($generated@@240 $generated@@360 $generated@@236)) (and (= ($generated@@296 ($generated@@354 $generated@@83 $generated@@360)) $generated@@360) ($generated@@149 ($generated@@354 $generated@@83 $generated@@360) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@360 $generated@@236))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@83) (= ($generated@@149 $generated@@361 $generated@@168)  (and ($generated@@149 $generated@@361 $generated@@142) (not (= $generated@@361 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@361 $generated@@168))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@83) (= ($generated@@149 $generated@@362 $generated@@236)  (and ($generated@@149 $generated@@362 $generated@@146) (not (= $generated@@362 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@362 $generated@@236))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 Int) ) (! (let (($generated@@366 ($generated@@266 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@366))
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 Int) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
 (=> (= (type $generated@@367) ($generated@@265 $generated@@370)) (and (=> (= $generated@@368 ($generated@@290 $generated@@367)) (= ($generated@@363 ($generated@@263 $generated@@367 $generated@@369) $generated@@368) $generated@@369)) (=> (not (= $generated@@368 ($generated@@290 $generated@@367))) (= ($generated@@363 ($generated@@263 $generated@@367 $generated@@369) $generated@@368) ($generated@@363 $generated@@367 $generated@@368))))))
 :pattern ( ($generated@@363 ($generated@@263 $generated@@367 $generated@@369) $generated@@368))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@319 (type $generated@@371))))
(let (($generated@@373 ($generated@@318 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@317 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@316 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@315 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@319 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@82 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@319 (type $generated@@378))))
(let (($generated@@380 ($generated@@318 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@317 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@316 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@87 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@337 (type $generated@@382))))
(let (($generated@@384 ($generated@@336 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@335 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@334 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@333 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@337 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@82 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@337 (type $generated@@389))))
(let (($generated@@391 ($generated@@336 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@335 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@334 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@394) $generated@@70)) (= ($generated@@149 $generated@@393 ($generated@@170 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@393 $generated@@395)))) ($generated@@240 $generated@@395 $generated@@394))
 :pattern ( ($generated@@87 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@149 $generated@@393 ($generated@@170 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@396 ($generated@@249 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@163) ($generated@@0 ($generated@@87 $generated@@396 $generated@@399))) ($generated@@277 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@87 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@80 $generated@@396 ($generated@@249 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@401) $generated@@70)) (= (type $generated@@402) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@400 ($generated@@254 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@163) ($generated@@0 ($generated@@87 $generated@@400 $generated@@403))) ($generated@@277 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@87 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@80 $generated@@400 ($generated@@254 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@87 ($generated@@310 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@87 ($generated@@310 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@319 (type $generated@@409))))
(let (($generated@@411 ($generated@@318 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@82 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@413) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@412) ($generated@@161 ($generated@@354 $generated@@154 $generated@@413)))) (= ($generated@@87 ($generated@@407 $generated@@412) ($generated@@161 ($generated@@354 $generated@@154 $generated@@413))) ($generated@@162 ($generated@@354 $generated@@154 $generated@@413))))))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@337 (type $generated@@417))))
(let (($generated@@419 ($generated@@336 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@82 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@421) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@420) ($generated@@161 ($generated@@354 $generated@@154 $generated@@421)))) (= ($generated@@87 ($generated@@415 $generated@@420) ($generated@@161 ($generated@@354 $generated@@154 $generated@@421))) ($generated@@162 ($generated@@354 $generated@@154 $generated@@421))))))
 :pattern ( ($generated@@87 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@318 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@317 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@87 ($generated@@375 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@87 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@87 ($generated@@375 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@336 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@335 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@87 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@427) $generated@@431))
 :pattern ( ($generated@@87 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@435) $generated@@439))) (and ($generated@@277 ($generated@@87 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@277 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@80 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@444) $generated@@70)) (= (type $generated@@445) $generated@@70)) (= (type $generated@@446) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@443) $generated@@447))) (and ($generated@@277 ($generated@@87 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@277 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@87 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@80 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@448) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@449) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@450) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@448 $generated@@450))) (and ($generated@@138 $generated@@448 $generated@@449) ($generated@@138 $generated@@449 $generated@@450))) ($generated@@138 $generated@@448 $generated@@450))
 :pattern ( ($generated@@138 $generated@@448 $generated@@449) ($generated@@138 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@82 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@337 (type $generated@@453))))
(let (($generated@@455 ($generated@@336 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@335 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@334 $generated@@455 $generated@@454)) (= ($generated@@333 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@333 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@337 (type $generated@@456))))
(let (($generated@@458 ($generated@@336 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@335 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@334 $generated@@458 $generated@@457)) (= ($generated@@386 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@386 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@337 (type $generated@@459))))
(let (($generated@@461 ($generated@@336 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@335 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@334 $generated@@461 $generated@@460)) (= ($generated@@414 $generated@@459) ($generated@@451 $generated@@163))))))
 :pattern ( ($generated@@414 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@319 (type $generated@@462))))
(let (($generated@@464 ($generated@@318 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@317 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@316 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@163) (= (type $generated@@466) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@406 $generated@@462) ($generated@@296 ($generated@@239 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@406 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@337 (type $generated@@467))))
(let (($generated@@469 ($generated@@336 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@335 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@334 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@163) (= (type $generated@@471) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@414 $generated@@467) ($generated@@296 ($generated@@239 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@414 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@163) ($generated@@240 $generated@@472 $generated@@46)) (and (= ($generated@@296 ($generated@@354 $generated@@2 $generated@@472)) $generated@@472) ($generated@@149 ($generated@@354 $generated@@2 $generated@@472) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@472 $generated@@46))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@163) ($generated@@240 $generated@@473 $generated@@47)) (and (= ($generated@@296 ($generated@@354 $generated@@3 $generated@@473)) $generated@@473) ($generated@@149 ($generated@@354 $generated@@3 $generated@@473) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@473 $generated@@47))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@163) ($generated@@240 $generated@@474 $generated@@44)) (and (= ($generated@@296 ($generated@@354 $generated@@4 $generated@@474)) $generated@@474) ($generated@@149 ($generated@@354 $generated@@4 $generated@@474) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@474 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@475) 20))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@163) ($generated@@240 $generated@@476 $generated@@45)) (and (= ($generated@@296 ($generated@@354 $generated@@475 $generated@@476)) $generated@@476) ($generated@@149 ($generated@@354 $generated@@475 $generated@@476) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@476 $generated@@45))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@240 ($generated@@296 $generated@@477) $generated@@478) ($generated@@149 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@240 ($generated@@296 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@85 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@82 $generated@@480 $generated@@2)) (<= 0 ($generated@@309 $generated@@479))))
 :pattern ( ($generated@@309 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@266 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@265 $generated@@482)) (<= 0 ($generated@@290 $generated@@481))))
 :pattern ( ($generated@@290 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@432 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@432 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@78 ($generated@@432 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@493 ($generated@@440 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@440 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@497 ($generated@@440 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@440 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@78 ($generated@@440 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@163) (= (type $generated@@504) $generated@@163)) (= ($generated@@283 ($generated@@239 $generated@@503 $generated@@504)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@505 ($generated@@153 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@153 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@153 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@153 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@163) (= (type $generated@@514) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@239 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@163) (= (type $generated@@516) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@239 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@265 $generated@@163)) (= (type $generated@@518) $generated@@70)) (= (type $generated@@519) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@517 ($generated@@264 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@290 $generated@@517))) ($generated@@277 ($generated@@363 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@363 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@80 $generated@@517 ($generated@@264 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@81 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@81 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@249 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@249 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@527 ($generated@@254 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@254 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@170 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@170 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@264 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@264 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@78 ($generated@@264 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@264 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@354 $generated@@540 ($generated@@296 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@296 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) (= ($generated@@149 $generated@@541 ($generated@@432 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@541) $generated@@544))) (and ($generated@@240 ($generated@@87 ($generated@@407 $generated@@541) $generated@@544) $generated@@543) ($generated@@240 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@541) $generated@@544))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@149 $generated@@541 ($generated@@432 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) (= ($generated@@149 $generated@@545 ($generated@@440 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@545) $generated@@548))) (and ($generated@@240 ($generated@@87 ($generated@@415 $generated@@545) $generated@@548) $generated@@547) ($generated@@240 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@87 ($generated@@415 $generated@@545) $generated@@548))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@149 $generated@@545 ($generated@@440 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@163)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@239 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@239 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@163) (= (type $generated@@554) $generated@@163)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@239 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@239 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@70)) ($generated@@240 $generated@@555 ($generated@@432 $generated@@556 $generated@@557))) (and (= ($generated@@296 ($generated@@354 ($generated@@317 $generated@@163 $generated@@163) $generated@@555)) $generated@@555) ($generated@@149 ($generated@@354 ($generated@@317 $generated@@163 $generated@@163) $generated@@555) ($generated@@432 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@240 $generated@@555 ($generated@@432 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) ($generated@@240 $generated@@558 ($generated@@440 $generated@@559 $generated@@560))) (and (= ($generated@@296 ($generated@@354 ($generated@@335 $generated@@163 $generated@@163) $generated@@558)) $generated@@558) ($generated@@149 ($generated@@354 ($generated@@335 $generated@@163 $generated@@163) $generated@@558) ($generated@@440 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@440 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@70) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@163)) ($generated@@240 $generated@@563 ($generated@@153 $generated@@561 $generated@@562))) (and (= ($generated@@296 ($generated@@354 $generated@@154 $generated@@563)) $generated@@563) ($generated@@149 ($generated@@354 $generated@@154 $generated@@563) ($generated@@153 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@240 $generated@@563 ($generated@@153 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@87 ($generated@@451 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@87 ($generated@@451 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@75)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@70) (= (type $generated@@569) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@568 $generated@@569)) $generated@@62) (= ($generated@@566 ($generated@@153 $generated@@568 $generated@@569)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@568 $generated@@569))
)))
(assert  (and (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@266 (type $generated@@572))))
(= (type ($generated@@570 $generated@@572)) ($generated@@265 $generated@@573)))
 :pattern ( ($generated@@570 $generated@@572))
)) (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@266 (type $generated@@574))))
(= (type ($generated@@571 $generated@@574)) $generated@@575))
 :pattern ( ($generated@@571 $generated@@574))
))))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
 (=> (= (type $generated@@576) ($generated@@265 $generated@@578)) (and (= ($generated@@570 ($generated@@263 $generated@@576 $generated@@577)) $generated@@576) (= ($generated@@571 ($generated@@263 $generated@@576 $generated@@577)) $generated@@577))))
 :pattern ( ($generated@@263 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@154) (= ($generated@@549 ($generated@@296 $generated@@579)) ($generated@@550 $generated@@579)))
 :pattern ( ($generated@@549 ($generated@@296 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@163) ($generated@@240 $generated@@580 ($generated@@81 0))) (and (= ($generated@@296 ($generated@@354 $generated@@2 $generated@@580)) $generated@@580) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@580) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@580 ($generated@@81 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@70)) ($generated@@240 $generated@@581 ($generated@@249 $generated@@582))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@581)) $generated@@581) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@581) ($generated@@249 $generated@@582))))
 :pattern ( ($generated@@240 $generated@@581 ($generated@@249 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@70)) ($generated@@240 $generated@@583 ($generated@@254 $generated@@584))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@583)) $generated@@583) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@4) $generated@@583) ($generated@@254 $generated@@584))))
 :pattern ( ($generated@@240 $generated@@583 ($generated@@254 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@70)) ($generated@@240 $generated@@585 ($generated@@170 $generated@@586))) (and (= ($generated@@296 ($generated@@354 ($generated@@82 $generated@@163 $generated@@2) $generated@@585)) $generated@@585) ($generated@@149 ($generated@@354 ($generated@@82 $generated@@163 $generated@@2) $generated@@585) ($generated@@170 $generated@@586))))
 :pattern ( ($generated@@240 $generated@@585 ($generated@@170 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@163) (= (type $generated@@588) $generated@@70)) ($generated@@240 $generated@@587 ($generated@@264 $generated@@588))) (and (= ($generated@@296 ($generated@@354 ($generated@@265 $generated@@163) $generated@@587)) $generated@@587) ($generated@@149 ($generated@@354 ($generated@@265 $generated@@163) $generated@@587) ($generated@@264 $generated@@588))))
 :pattern ( ($generated@@240 $generated@@587 ($generated@@264 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@83) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@589 $generated@@143)) ($generated@@80 $generated@@589 $generated@@146 $generated@@590))) ($generated@@80 $generated@@589 $generated@@168 $generated@@590))
 :pattern ( ($generated@@80 $generated@@589 $generated@@146 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@83)) (= (type $generated@@593) ($generated@@72 $generated@@595))) ($generated@@276 ($generated@@88 $generated@@591 $generated@@592 ($generated@@90 ($generated@@87 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@138 $generated@@591 ($generated@@88 $generated@@591 $generated@@592 ($generated@@90 ($generated@@87 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@88 $generated@@591 $generated@@592 ($generated@@90 ($generated@@87 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@63))
(assert (= ($generated@@566 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@64))
(assert (= ($generated@@566 $generated@@168) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@566 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@236) $generated@@66))
(assert (= ($generated@@566 $generated@@236) $generated@@69))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@596 ($generated@@170 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@596 $generated@@599)))) ($generated@@277 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@87 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@80 $generated@@596 ($generated@@170 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@83) (= ($generated@@149 $generated@@600 $generated@@142)  (or (= $generated@@600 $generated@@143) ($generated@@151 ($generated@@175 $generated@@600)))))
 :pattern ( ($generated@@149 $generated@@600 $generated@@142))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@154) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@276 $generated@@603) (and ($generated@@152 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@70) ($generated@@80 $generated@@601 ($generated@@153 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@80 $generated@@601 ($generated@@153 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@277 ($generated@@161 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@277 ($generated@@161 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@154) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@276 $generated@@607) (and ($generated@@152 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@70) ($generated@@80 $generated@@605 ($generated@@153 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@80 $generated@@605 ($generated@@153 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@277 ($generated@@162 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@277 ($generated@@162 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@163) (= (type $generated@@610) $generated@@163)) (= ($generated@@239 ($generated@@259 $generated@@609) ($generated@@259 $generated@@610)) ($generated@@259 ($generated@@239 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@239 ($generated@@259 $generated@@609) ($generated@@259 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@296 ($generated@@259 $generated@@611)) ($generated@@259 ($generated@@296 $generated@@611)))
 :pattern ( ($generated@@296 ($generated@@259 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@266 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@265 $generated@@613)) (= ($generated@@290 $generated@@612) 0)) (= $generated@@612 ($generated@@289 $generated@@613))))
 :pattern ( ($generated@@290 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@82 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@309 ($generated@@88 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@309 $generated@@614) ($generated ($generated@@87 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@309 ($generated@@88 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@619) $generated@@2)) ($generated@@80 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@80 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@3)) ($generated@@80 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@80 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@4)) ($generated@@80 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@80 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@625) $generated@@475)) ($generated@@80 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@80 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@627) $generated@@163)) ($generated@@80 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@80 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@265 $generated@@163)) (= (type $generated@@629) $generated@@70)) (= ($generated@@149 $generated@@628 ($generated@@264 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@290 $generated@@628))) ($generated@@240 ($generated@@363 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@363 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@149 $generated@@628 ($generated@@264 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@265 $generated@@163)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@290 $generated@@632))) (< ($generated@@550 ($generated@@354 $generated@@154 ($generated@@363 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@550 ($generated@@354 $generated@@154 ($generated@@363 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@635) $generated@@70)) (= (type $generated@@636) $generated@@70)) ($generated@@149 $generated@@634 ($generated@@432 $generated@@635 $generated@@636))) (and (and ($generated@@149 ($generated@@315 $generated@@634) ($generated@@249 $generated@@635)) ($generated@@149 ($generated@@375 $generated@@634) ($generated@@249 $generated@@636))) ($generated@@149 ($generated@@406 $generated@@634) ($generated@@249 ($generated@@153 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@149 $generated@@634 ($generated@@432 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@70)) ($generated@@149 $generated@@637 ($generated@@440 $generated@@638 $generated@@639))) (and (and ($generated@@149 ($generated@@333 $generated@@637) ($generated@@254 $generated@@638)) ($generated@@149 ($generated@@386 $generated@@637) ($generated@@254 $generated@@639))) ($generated@@149 ($generated@@414 $generated@@637) ($generated@@254 ($generated@@153 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@149 $generated@@637 ($generated@@440 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@149 $generated@@640 $generated@@46))
 :pattern ( ($generated@@149 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@149 $generated@@641 $generated@@47))
 :pattern ( ($generated@@149 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@149 $generated@@642 $generated@@44))
 :pattern ( ($generated@@149 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@475) ($generated@@149 $generated@@643 $generated@@45))
 :pattern ( ($generated@@149 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@163) ($generated@@149 $generated@@644 $generated@@48))
 :pattern ( ($generated@@149 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@645) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@646) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@647) $generated@@83)) (= (type $generated@@648) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@651) $generated@@83)) (= (type $generated@@652) ($generated@@265 $generated@@163))) (= (type $generated@@653) ($generated@@265 $generated@@163))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@655  (=> (= $generated@@645 ($generated@@179 $generated@@143 $generated@@646 $generated@@60 false)) (=> (and (not (= $generated@@647 $generated@@143)) (= ($generated@@175 $generated@@647) $generated@@146)) (=> (and (and (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@646 $generated@@647) $generated@@60))) (= $generated@@648 ($generated@@88 $generated@@646 $generated@@647 ($generated@@90 ($generated@@87 $generated@@646 $generated@@647) $generated@@60 ($generated@@11 true))))) (and ($generated@@276 $generated@@648) ($generated@@649 $generated@@648))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))))
(let (($generated@@656  (=> (and (and (and (and ($generated@@276 $generated@@646) ($generated@@649 $generated@@646)) (and (=> $generated@@650 (and ($generated@@149 $generated@@651 $generated@@236) ($generated@@80 $generated@@651 $generated@@236 $generated@@646))) true)) (and (and ($generated@@149 $generated@@652 ($generated@@264 $generated@@236)) ($generated@@80 $generated@@652 ($generated@@264 $generated@@236) $generated@@646)) true)) (and (and (and ($generated@@149 $generated@@653 ($generated@@264 $generated@@168)) ($generated@@80 $generated@@653 ($generated@@264 $generated@@168) $generated@@646)) true) (and (= 1 $generated@@654) (= (ControlFlow 0 4) 2)))) $generated@@655)))
$generated@@656)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
