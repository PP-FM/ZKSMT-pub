(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@238 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@239 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@238 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@239 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@239 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@239 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@239 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@238 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@253 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@239 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@239 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@239 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@239 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@238 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@239 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@248 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@248 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@253 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@253 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@253 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@239 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@239 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@239 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@264 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@583) (and ($generated@@161 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@587) (and ($generated@@161 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@172) (= (type $generated@@590) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)) ($generated@@260 ($generated@@238 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))) ($generated@@260 ($generated@@286 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@592)) ($generated@@260 ($generated@@286 $generated@@592)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@279 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@278 $generated@@594)) (= ($generated@@277 $generated@@593) 0)) (= $generated@@593 ($generated@@276 $generated@@594))))
 :pattern ( ($generated@@277 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@79 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@299 $generated@@595) ($generated ($generated@@84 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@600) $generated@@2)) ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@3)) ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@4)) ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@457)) ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@172)) ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@278 $generated@@172)) (= (type $generated@@610) $generated@@67)) (= ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@277 $generated@@609))) ($generated@@239 ($generated@@501 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@501 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@277 $generated@@613))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@309 $generated@@615) ($generated@@248 $generated@@616)) ($generated@@139 ($generated@@354 $generated@@615) ($generated@@248 $generated@@617))) ($generated@@139 ($generated@@385 $generated@@615) ($generated@@248 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) $generated@@67)) ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@139 ($generated@@327 $generated@@618) ($generated@@253 $generated@@619)) ($generated@@139 ($generated@@365 $generated@@618) ($generated@@253 $generated@@620))) ($generated@@139 ($generated@@396 $generated@@618) ($generated@@253 ($generated@@162 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@139 $generated@@621 $generated@@46))
 :pattern ( ($generated@@139 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@139 $generated@@622 $generated@@47))
 :pattern ( ($generated@@139 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@139 $generated@@623 $generated@@44))
 :pattern ( ($generated@@139 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@457) ($generated@@139 $generated@@624 $generated@@45))
 :pattern ( ($generated@@139 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@172) ($generated@@139 $generated@@625 $generated@@48))
 :pattern ( ($generated@@139 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (= (type $generated@@628) $generated@@80) (= (type $generated@@629) $generated@@80)) (= (type $generated@@630) ($generated@@184 $generated@@80 $generated@@4))) (= (type $generated@@631) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@634 true))
(let (($generated@@635  (=> (and (not (and (< $generated@@626 $generated@@627) (= $generated@@627 ($generated@@135 $generated@@628)))) (= (ControlFlow 0 5) 1)) $generated@@634)))
(let (($generated@@636  (=> (and (< $generated@@626 $generated@@627) (= $generated@@627 ($generated@@135 $generated@@628))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@628 $generated@@137))) (=> (not (= $generated@@628 $generated@@137)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@629 $generated@@137))) (=> (not (= $generated@@629 $generated@@137)) (=> (= (ControlFlow 0 2) 1) $generated@@634))))))))
(let (($generated@@637  (=> (<= $generated@@627 $generated@@626) (and (=> (= (ControlFlow 0 8) 2) $generated@@636) (=> (= (ControlFlow 0 8) 5) $generated@@635)))))
(let (($generated@@638  (=> (< $generated@@626 $generated@@627) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= $generated@@628 $generated@@137))) (=> (not (= $generated@@628 $generated@@137)) (and (=> (= (ControlFlow 0 6) 2) $generated@@636) (=> (= (ControlFlow 0 6) 5) $generated@@635)))))))
(let (($generated@@639  (=> (= $generated@@630 ($generated@@183 $generated@@137 $generated@@631 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 6) $generated@@638) (=> (= (ControlFlow 0 9) 8) $generated@@637)))))
(let (($generated@@640  (=> (and ($generated@@151 $generated@@631) ($generated@@632 $generated@@631)) (=> (and (and (and ($generated@@139 $generated@@628 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@628 ($generated@@156 $generated@@46) $generated@@631)) (and ($generated@@139 $generated@@629 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@629 ($generated@@156 $generated@@46) $generated@@631))) (and (and (<= ($generated@@258 0) $generated@@627) (<= ($generated@@258 0) $generated@@626)) (and (= 1 $generated@@633) (= (ControlFlow 0 10) 9)))) $generated@@639))))
$generated@@640))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@U Int) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@371 (Int) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147)  (or (= $generated@@146 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@151) $generated@@81)) (and (and ($generated@@148 $generated@@150) (and (not (= $generated@@151 $generated@@138)) (= ($generated@@139 $generated@@151) ($generated@@137 $generated@@149)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@151)) $generated@@46 $generated@@150))
 :pattern ( ($generated@@136 $generated@@151) ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60) ($generated@@137 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@140 $generated@@152 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@152 ($generated@@79 0)))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) $generated@@81)) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157) ($generated@@78 $generated@@156 ($generated@@137 $generated@@155) $generated@@157)))
 :pattern ( ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@140 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@140 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 16)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@81 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@70 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@81) (= (type $generated@@229) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@230) ($generated@@69 $generated@@4))) (= (type $generated@@232) $generated@@81)) (= (type $generated@@233) ($generated@@69 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@160)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@67) (= (type $generated@@240) $generated@@67)) (= (type $generated@@241) $generated@@169)) (= (type $generated@@242) $generated@@169)) (= ($generated@@140 ($generated@@235 $generated@@241 $generated@@242) ($generated@@159 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@140 ($generated@@235 $generated@@241 $generated@@242) ($generated@@159 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@160) (= (type $generated@@244) $generated@@160)) (= ($generated@@166 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@166 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@67)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@248) $generated@@67)) (= ($generated@@140 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@169) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@140 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@253) $generated@@67)) (= ($generated@@140 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@169) ($generated@@0 ($generated@@85 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@85 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@140 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@255 $generated@@256) $generated@@256)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@67) (= (type $generated@@263) $generated@@67)) (= (type $generated@@264) $generated@@169)) (= (type $generated@@265) $generated@@169)) (= (type $generated@@266) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@266)) (= ($generated@@78 ($generated@@235 $generated@@264 $generated@@265) ($generated@@159 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@78 ($generated@@235 $generated@@264 $generated@@265) ($generated@@159 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@71)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@160) (= ($generated@@158 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@269))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@271 ($generated@@272 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@272 $generated@@276))
))) (forall (($generated@@277 T@U) ($generated@@278 Int) ) (! (let (($generated@@279 ($generated@@271 (type $generated@@277))))
(= (type ($generated@@274 $generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@274 $generated@@277 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@271 (type $generated@@280))))
 (=> (and (= (type $generated@@280) ($generated@@272 $generated@@282)) (= (type $generated@@281) ($generated@@272 $generated@@282))) (= ($generated@@270 $generated@@280 $generated@@281)  (and (= ($generated@@273 $generated@@280) ($generated@@273 $generated@@281)) (forall (($generated@@283 Int) ) (!  (=> (and (<= 0 $generated@@283) (< $generated@@283 ($generated@@273 $generated@@280))) (= ($generated@@274 $generated@@280 $generated@@283) ($generated@@274 $generated@@281 $generated@@283)))
 :pattern ( ($generated@@274 $generated@@280 $generated@@283))
 :pattern ( ($generated@@274 $generated@@281 $generated@@283))
))))))
 :pattern ( ($generated@@270 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@160) ($generated@@158 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@169) (= (type $generated@@286) $generated@@169)) (= $generated@@284 ($generated@@235 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@158 $generated@@284))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@272 $generated@@288))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@273 ($generated@@287 $generated@@289)) 0)
 :pattern ( ($generated@@287 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@81)) (= ($generated@@140 $generated@@291 ($generated@@153 $generated@@290))  (and ($generated@@140 $generated@@291 ($generated@@137 $generated@@290)) (not (= $generated@@291 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@291 ($generated@@153 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@169)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@67) (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@261 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@78 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@261 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@80 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@83 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@80 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@85 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@72)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@305)) $generated@@61) (= ($generated@@303 ($generated@@137 $generated@@305)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@67) (and (= ($generated@@76 ($generated@@153 $generated@@306)) $generated@@62) (= ($generated@@303 ($generated@@153 $generated@@306)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@80 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@83 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@80 $generated@@344 $generated@@2)) (= ($generated@@175 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@85 $generated@@343 $generated@@345))) (<= ($generated ($generated@@85 $generated@@343 $generated@@345)) ($generated@@297 $generated@@343))))
 :pattern ( ($generated@@85 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@175 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@81)) (= ($generated@@140 $generated@@347 ($generated@@137 $generated@@346))  (or (= $generated@@347 $generated@@138) (= ($generated@@139 $generated@@347) ($generated@@137 $generated@@346)))))
 :pattern ( ($generated@@140 $generated@@347 ($generated@@137 $generated@@346)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(let (($generated@@350 ($generated@@310 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@309 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@308 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@307 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(let (($generated@@357 ($generated@@310 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@309 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@308 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@329 (type $generated@@359))))
(let (($generated@@361 ($generated@@328 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@327 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@326 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@325 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(let (($generated@@368 ($generated@@328 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@327 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@326 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert  (and (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (= (type ($generated@@370 $generated@@372 $generated@@373)) ($generated@@272 $generated@@169))
 :pattern ( ($generated@@370 $generated@@372 $generated@@373))
)) (forall (($generated@@374 Int) ) (! (= (type ($generated@@371 $generated@@374)) ($generated@@69 $generated@@169))
 :pattern ( ($generated@@371 $generated@@374))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) $generated@@81)) (forall (($generated@@377 Int) ) (!  (=> (and (<= 0 $generated@@377) (< $generated@@377 ($generated@@273 ($generated@@370 $generated@@375 $generated@@376)))) (= ($generated@@274 ($generated@@370 $generated@@375 $generated@@376) $generated@@377) ($generated@@87 ($generated@@85 $generated@@375 $generated@@376) ($generated@@371 $generated@@377))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@375 $generated@@376) ($generated@@371 $generated@@377)))
 :pattern ( ($generated@@274 ($generated@@370 $generated@@375 $generated@@376) $generated@@377))
)))
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@379) $generated@@67)) (= ($generated@@140 $generated@@378 ($generated@@174 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@378 $generated@@380)))) ($generated@@236 $generated@@380 $generated@@379))
 :pattern ( ($generated@@85 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@140 $generated@@378 ($generated@@174 $generated@@379)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@382) $generated@@67)) (= (type $generated@@383) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@381 ($generated@@245 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@169) ($generated@@0 ($generated@@85 $generated@@381 $generated@@384))) ($generated@@261 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@85 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@78 $generated@@381 ($generated@@245 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@386) $generated@@67)) (= (type $generated@@387) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@385 ($generated@@250 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@169) ($generated@@0 ($generated@@85 $generated@@385 $generated@@388))) ($generated@@261 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@85 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@78 $generated@@385 ($generated@@250 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(= ($generated ($generated@@85 ($generated@@298 $generated@@390) $generated@@389)) 0))
 :pattern ( (let (($generated@@390 (type $generated@@389)))
($generated@@85 ($generated@@298 $generated@@390) $generated@@389)))
)))
(assert  (and (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@391 $generated@@394)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@391 $generated@@394))
)) (forall (($generated@@395 T@T) ($generated@@396 T@U) ) (! (= (type ($generated@@392 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@392 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@311 (type $generated@@397))))
(let (($generated@@399 ($generated@@310 (type $generated@@397))))
(= (type ($generated@@393 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@393 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@309 $generated@@169 $generated@@169)) (= (type $generated@@401) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@391 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@400) ($generated@@167 ($generated@@392 $generated@@160 $generated@@401)))) (= ($generated@@85 ($generated@@393 $generated@@400) ($generated@@167 ($generated@@392 $generated@@160 $generated@@401))) ($generated@@168 ($generated@@392 $generated@@160 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@391 $generated@@400) $generated@@401))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@329 (type $generated@@405))))
(let (($generated@@407 ($generated@@328 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@80 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@327 $generated@@169 $generated@@169)) (= (type $generated@@409) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@408) ($generated@@167 ($generated@@392 $generated@@160 $generated@@409)))) (= ($generated@@85 ($generated@@403 $generated@@408) ($generated@@167 ($generated@@392 $generated@@160 $generated@@409))) ($generated@@168 ($generated@@392 $generated@@160 $generated@@409))))))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@310 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@309 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@352 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@393 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@328 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@327 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@85 ($generated@@363 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@85 ($generated@@403 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@309 $generated@@169 $generated@@169)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@423) $generated@@427))) (and ($generated@@261 ($generated@@85 ($generated@@393 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@261 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@327 $generated@@169 $generated@@169)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@431) $generated@@435))) (and ($generated@@261 ($generated@@85 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@261 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@78 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@271 (type $generated@@436))))
 (=> (and (and (= (type $generated@@436) ($generated@@272 $generated@@438)) (= (type $generated@@437) ($generated@@272 $generated@@438))) ($generated@@270 $generated@@436 $generated@@437)) (= $generated@@436 $generated@@437)))
 :pattern ( ($generated@@270 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 Int) ) (!  (=> (and (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@441) $generated@@81)) (=> (and (and (and ($generated@@148 $generated@@440) (and (not (= $generated@@441 $generated@@138)) (= ($generated@@139 $generated@@441) ($generated@@137 $generated@@439)))) (and (<= 0 $generated@@442) (< $generated@@442 ($generated@@136 $generated@@441)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@440 $generated@@441) $generated@@60))) ($generated@@261 ($generated@@87 ($generated@@85 $generated@@440 $generated@@441) ($generated@@371 $generated@@442)) $generated@@439 $generated@@440)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@440 $generated@@441) ($generated@@371 $generated@@442)) ($generated@@137 $generated@@439))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@80 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@329 (type $generated@@445))))
(let (($generated@@447 ($generated@@328 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@327 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@326 $generated@@447 $generated@@446)) (= ($generated@@325 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@325 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@329 (type $generated@@448))))
(let (($generated@@450 ($generated@@328 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@327 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@326 $generated@@450 $generated@@449)) (= ($generated@@363 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@363 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@329 (type $generated@@451))))
(let (($generated@@453 ($generated@@328 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@327 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@326 $generated@@453 $generated@@452)) (= ($generated@@402 $generated@@451) ($generated@@443 $generated@@169))))))
 :pattern ( ($generated@@402 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@311 (type $generated@@454))))
(let (($generated@@456 ($generated@@310 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@309 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@308 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@169) (= (type $generated@@458) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@391 $generated@@454) ($generated@@292 ($generated@@235 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@391 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@329 (type $generated@@459))))
(let (($generated@@461 ($generated@@328 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@327 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@326 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@169) (= (type $generated@@463) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@402 $generated@@459) ($generated@@292 ($generated@@235 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@402 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@169) ($generated@@236 $generated@@464 $generated@@46)) (and (= ($generated@@292 ($generated@@392 $generated@@2 $generated@@464)) $generated@@464) ($generated@@140 ($generated@@392 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@169) ($generated@@236 $generated@@465 $generated@@47)) (and (= ($generated@@292 ($generated@@392 $generated@@3 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@392 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@169) ($generated@@236 $generated@@466 $generated@@44)) (and (= ($generated@@292 ($generated@@392 $generated@@4 $generated@@466)) $generated@@466) ($generated@@140 ($generated@@392 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@169) ($generated@@236 $generated@@468 $generated@@45)) (and (= ($generated@@292 ($generated@@392 $generated@@467 $generated@@468)) $generated@@468) ($generated@@140 ($generated@@392 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@236 ($generated@@292 $generated@@469) $generated@@470) ($generated@@140 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@236 ($generated@@292 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@81) (<= 0 ($generated@@136 $generated@@471)))
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@83 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@80 $generated@@473 $generated@@2)) (<= 0 ($generated@@297 $generated@@472))))
 :pattern ( ($generated@@297 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@271 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@272 $generated@@475)) (<= 0 ($generated@@273 $generated@@474))))
 :pattern ( ($generated@@273 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@420 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@420 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@76 ($generated@@420 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@420 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@428 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@428 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@428 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@76 ($generated@@428 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@428 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@169) (= (type $generated@@497) $generated@@169)) (= ($generated@@267 ($generated@@235 $generated@@496 $generated@@497)) $generated@@63))
 :pattern ( ($generated@@235 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@159 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@159 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@502 ($generated@@159 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@159 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@169) (= (type $generated@@507) $generated@@169)) (= ($generated@@167 ($generated@@235 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@235 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@169) (= (type $generated@@509) $generated@@169)) (= ($generated@@168 ($generated@@235 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@235 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@272 $generated@@169)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@512 ($generated@@510 $generated@@513) $generated@@514) (forall (($generated@@515 Int) ) (!  (=> (and (<= 0 $generated@@515) (< $generated@@515 ($generated@@273 $generated@@512))) ($generated@@261 ($generated@@274 $generated@@512 $generated@@515) $generated@@513 $generated@@514))
 :pattern ( ($generated@@274 $generated@@512 $generated@@515))
))))
 :pattern ( ($generated@@78 $generated@@512 ($generated@@510 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@517 Int) ) (! (= ($generated@@516 ($generated@@79 $generated@@517)) $generated@@517)
 :pattern ( ($generated@@79 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@518 ($generated@@245 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@245 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@76 ($generated@@245 $generated@@521)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@522 ($generated@@250 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@250 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@76 ($generated@@250 $generated@@525)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@526 ($generated@@174 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@174 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@76 ($generated@@174 $generated@@529)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@530 ($generated@@510 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@510 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@76 ($generated@@510 $generated@@533)) $generated@@57))
 :pattern ( ($generated@@510 $generated@@533))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@75 ($generated@@371 $generated@@534)) 1)
 :pattern ( ($generated@@371 $generated@@534))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@371 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@371 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@67)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@537 ($generated@@137 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@137 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@153 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@153 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@392 $generated@@544 ($generated@@292 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@292 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@309 $generated@@169 $generated@@169)) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) $generated@@67)) (= ($generated@@140 $generated@@545 ($generated@@420 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@545) $generated@@548))) (and ($generated@@236 ($generated@@85 ($generated@@393 $generated@@545) $generated@@548) $generated@@547) ($generated@@236 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@545) $generated@@548))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@140 $generated@@545 ($generated@@420 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@327 $generated@@169 $generated@@169)) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) $generated@@67)) (= ($generated@@140 $generated@@549 ($generated@@428 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@549) $generated@@552))) (and ($generated@@236 ($generated@@85 ($generated@@403 $generated@@549) $generated@@552) $generated@@551) ($generated@@236 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@549) $generated@@552))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@140 $generated@@549 ($generated@@428 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 Int) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@67) (= (type $generated@@554) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@555) $generated@@81)) (and (and ($generated@@148 $generated@@554) (and (not (= $generated@@555 $generated@@138)) (= ($generated@@139 $generated@@555) ($generated@@137 $generated@@553)))) (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@136 $generated@@555))))) ($generated@@236 ($generated@@87 ($generated@@85 $generated@@554 $generated@@555) ($generated@@371 $generated@@556)) $generated@@553))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@554 $generated@@555) ($generated@@371 $generated@@556)) ($generated@@137 $generated@@553))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@169) (= (type $generated@@560) $generated@@169)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@235 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@235 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@169) (= (type $generated@@562) $generated@@169)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@235 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@235 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@169) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@67)) ($generated@@236 $generated@@563 ($generated@@420 $generated@@564 $generated@@565))) (and (= ($generated@@292 ($generated@@392 ($generated@@309 $generated@@169 $generated@@169) $generated@@563)) $generated@@563) ($generated@@140 ($generated@@392 ($generated@@309 $generated@@169 $generated@@169) $generated@@563) ($generated@@420 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@236 $generated@@563 ($generated@@420 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@169) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) $generated@@67)) ($generated@@236 $generated@@566 ($generated@@428 $generated@@567 $generated@@568))) (and (= ($generated@@292 ($generated@@392 ($generated@@327 $generated@@169 $generated@@169) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@392 ($generated@@327 $generated@@169 $generated@@169) $generated@@566) ($generated@@428 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@236 $generated@@566 ($generated@@428 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@67) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@169)) ($generated@@236 $generated@@571 ($generated@@159 $generated@@569 $generated@@570))) (and (= ($generated@@292 ($generated@@392 $generated@@160 $generated@@571)) $generated@@571) ($generated@@140 ($generated@@392 $generated@@160 $generated@@571) ($generated@@159 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@236 $generated@@571 ($generated@@159 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@85 ($generated@@443 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@85 ($generated@@443 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@575) $generated@@81)) (= ($generated@@273 ($generated@@370 $generated@@574 $generated@@575)) ($generated@@136 $generated@@575)))
 :pattern ( ($generated@@273 ($generated@@370 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@67) (= (type $generated@@577) $generated@@67)) (and (= ($generated@@76 ($generated@@159 $generated@@576 $generated@@577)) $generated@@64) (= ($generated@@303 ($generated@@159 $generated@@576 $generated@@577)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@160) (= ($generated@@557 ($generated@@292 $generated@@578)) ($generated@@558 $generated@@578)))
 :pattern ( ($generated@@557 ($generated@@292 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@169) ($generated@@236 $generated@@579 ($generated@@79 0))) (and (= ($generated@@292 ($generated@@392 $generated@@2 $generated@@579)) $generated@@579) ($generated@@140 ($generated@@392 ($generated@@80 $generated@@169 $generated@@4) $generated@@579) ($generated@@79 0))))
 :pattern ( ($generated@@236 $generated@@579 ($generated@@79 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@169) (= (type $generated@@581) $generated@@67)) ($generated@@236 $generated@@580 ($generated@@245 $generated@@581))) (and (= ($generated@@292 ($generated@@392 ($generated@@80 $generated@@169 $generated@@4) $generated@@580)) $generated@@580) ($generated@@140 ($generated@@392 ($generated@@80 $generated@@169 $generated@@4) $generated@@580) ($generated@@245 $generated@@581))))
 :pattern ( ($generated@@236 $generated@@580 ($generated@@245 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@169) (= (type $generated@@583) $generated@@67)) ($generated@@236 $generated@@582 ($generated@@250 $generated@@583))) (and (= ($generated@@292 ($generated@@392 ($generated@@80 $generated@@169 $generated@@4) $generated@@582)) $generated@@582) ($generated@@140 ($generated@@392 ($generated@@80 $generated@@169 $generated@@4) $generated@@582) ($generated@@250 $generated@@583))))
 :pattern ( ($generated@@236 $generated@@582 ($generated@@250 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@169) (= (type $generated@@585) $generated@@67)) ($generated@@236 $generated@@584 ($generated@@174 $generated@@585))) (and (= ($generated@@292 ($generated@@392 ($generated@@80 $generated@@169 $generated@@2) $generated@@584)) $generated@@584) ($generated@@140 ($generated@@392 ($generated@@80 $generated@@169 $generated@@2) $generated@@584) ($generated@@174 $generated@@585))))
 :pattern ( ($generated@@236 $generated@@584 ($generated@@174 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@169) (= (type $generated@@587) $generated@@67)) ($generated@@236 $generated@@586 ($generated@@510 $generated@@587))) (and (= ($generated@@292 ($generated@@392 ($generated@@272 $generated@@169) $generated@@586)) $generated@@586) ($generated@@140 ($generated@@392 ($generated@@272 $generated@@169) $generated@@586) ($generated@@510 $generated@@587))))
 :pattern ( ($generated@@236 $generated@@586 ($generated@@510 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@67) (= (type $generated@@589) $generated@@169)) ($generated@@236 $generated@@589 ($generated@@137 $generated@@588))) (and (= ($generated@@292 ($generated@@392 $generated@@81 $generated@@589)) $generated@@589) ($generated@@140 ($generated@@392 $generated@@81 $generated@@589) ($generated@@137 $generated@@588))))
 :pattern ( ($generated@@236 $generated@@589 ($generated@@137 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@67) (= (type $generated@@591) $generated@@169)) ($generated@@236 $generated@@591 ($generated@@153 $generated@@590))) (and (= ($generated@@292 ($generated@@392 $generated@@81 $generated@@591)) $generated@@591) ($generated@@140 ($generated@@392 $generated@@81 $generated@@591) ($generated@@153 $generated@@590))))
 :pattern ( ($generated@@236 $generated@@591 ($generated@@153 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@592 ($generated@@174 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@592 $generated@@595)))) ($generated@@261 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@85 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@174 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@160) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@598) (and ($generated@@158 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@67) ($generated@@78 $generated@@596 ($generated@@159 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@159 $generated@@597 $generated@@599) $generated@@598))
))))) ($generated@@261 ($generated@@167 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@261 ($generated@@167 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@160) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@602) (and ($generated@@158 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@159 $generated@@603 $generated@@601) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@159 $generated@@603 $generated@@601) $generated@@602))
))))) ($generated@@261 ($generated@@168 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@261 ($generated@@168 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@169) (= (type $generated@@605) $generated@@169)) (= ($generated@@235 ($generated@@257 $generated@@604) ($generated@@257 $generated@@605)) ($generated@@257 ($generated@@235 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@235 ($generated@@257 $generated@@604) ($generated@@257 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@255 $generated@@606))) ($generated@@257 ($generated@@292 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@255 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@292 ($generated@@257 $generated@@607)) ($generated@@257 ($generated@@292 $generated@@607)))
 :pattern ( ($generated@@292 ($generated@@257 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@271 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@272 $generated@@609)) (= ($generated@@273 $generated@@608) 0)) (= $generated@@608 ($generated@@287 $generated@@609))))
 :pattern ( ($generated@@273 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@80 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@297 ($generated@@86 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@297 $generated@@610) ($generated ($generated@@85 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@297 ($generated@@86 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@615) $generated@@2)) ($generated@@78 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@3)) ($generated@@78 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@4)) ($generated@@78 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@467)) ($generated@@78 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@169)) ($generated@@78 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@272 $generated@@169)) (= (type $generated@@625) $generated@@67)) (= ($generated@@140 $generated@@624 ($generated@@510 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@273 $generated@@624))) ($generated@@236 ($generated@@274 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@274 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@140 $generated@@624 ($generated@@510 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@272 $generated@@169)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@273 $generated@@628))) (< ($generated@@558 ($generated@@392 $generated@@160 ($generated@@274 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@558 ($generated@@392 $generated@@160 ($generated@@274 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@309 $generated@@169 $generated@@169)) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) $generated@@67)) ($generated@@140 $generated@@630 ($generated@@420 $generated@@631 $generated@@632))) (and (and ($generated@@140 ($generated@@307 $generated@@630) ($generated@@245 $generated@@631)) ($generated@@140 ($generated@@352 $generated@@630) ($generated@@245 $generated@@632))) ($generated@@140 ($generated@@391 $generated@@630) ($generated@@245 ($generated@@159 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@140 $generated@@630 ($generated@@420 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@327 $generated@@169 $generated@@169)) (= (type $generated@@634) $generated@@67)) (= (type $generated@@635) $generated@@67)) ($generated@@140 $generated@@633 ($generated@@428 $generated@@634 $generated@@635))) (and (and ($generated@@140 ($generated@@325 $generated@@633) ($generated@@250 $generated@@634)) ($generated@@140 ($generated@@363 $generated@@633) ($generated@@250 $generated@@635))) ($generated@@140 ($generated@@402 $generated@@633) ($generated@@250 ($generated@@159 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@140 $generated@@633 ($generated@@428 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@140 $generated@@636 $generated@@46))
 :pattern ( ($generated@@140 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@140 $generated@@637 $generated@@47))
 :pattern ( ($generated@@140 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@140 $generated@@638 $generated@@44))
 :pattern ( ($generated@@140 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@467) ($generated@@140 $generated@@639 $generated@@45))
 :pattern ( ($generated@@140 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@169) ($generated@@140 $generated@@640 $generated@@48))
 :pattern ( ($generated@@140 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@642) ($generated@@272 $generated@@169)) (= (type $generated@@641) ($generated@@272 $generated@@169))) (= (type $generated@@647) $generated@@81)) (= (type $generated@@646) $generated@@81)) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@653) ($generated@@181 $generated@@81 $generated@@4))) (= (type $generated@@655) ($generated@@272 $generated@@169))) (= (type $generated@@656) ($generated@@272 $generated@@169))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 74) (let (($generated@@658  (=> (= (ControlFlow 0 62) (- 0 61)) (forall (($generated@@659 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@659) (< $generated@@659 $generated@@643)) (= ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@659))) ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@659))))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@659)))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@659)))
)))))
(let (($generated@@660  (=> (and (not (and (<= ($generated@@255 0) $generated@@644) (< $generated@@644 $generated@@643))) (= (ControlFlow 0 66) 62)) $generated@@658)))
(let (($generated@@661  (=> (and (<= ($generated@@255 0) $generated@@644) (< $generated@@644 $generated@@643)) (and (=> (= (ControlFlow 0 63) (- 0 65)) (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@273 $generated@@642)))) (and (=> (= (ControlFlow 0 63) (- 0 64)) (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@273 $generated@@641)))) (=> (= (ControlFlow 0 63) 62) $generated@@658))))))
(let (($generated@@662  (=> (< $generated@@644 ($generated@@255 0)) (and (=> (= (ControlFlow 0 68) 63) $generated@@661) (=> (= (ControlFlow 0 68) 66) $generated@@660)))))
(let (($generated@@663  (=> (<= ($generated@@255 0) $generated@@644) (and (=> (= (ControlFlow 0 67) 63) $generated@@661) (=> (= (ControlFlow 0 67) 66) $generated@@660)))))
(let (($generated@@664  (and (=> (= (ControlFlow 0 69) 67) $generated@@663) (=> (= (ControlFlow 0 69) 68) $generated@@662))))
(let (($generated@@665 true))
(let (($generated@@666  (=> ($generated@@270 $generated@@642 $generated@@641) (and (=> (= (ControlFlow 0 70) 69) $generated@@664) (=> (= (ControlFlow 0 70) 60) $generated@@665)))))
(let (($generated@@667  (=> (= (ControlFlow 0 49) (- 0 48)) (forall (($generated@@668 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@668) (< $generated@@668 $generated@@643)) (= ($generated ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@647) ($generated@@371 $generated@@668)))) ($generated ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@646) ($generated@@371 $generated@@668)))))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@646) ($generated@@371 $generated@@668))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@647) ($generated@@371 $generated@@668))))
)))))
(let (($generated@@669  (=> (and (not (and (<= ($generated@@255 0) $generated@@648) (< $generated@@648 $generated@@643))) (= (ControlFlow 0 55) 49)) $generated@@667)))
(let (($generated@@670  (=> (and (<= ($generated@@255 0) $generated@@648) (< $generated@@648 $generated@@643)) (and (=> (= (ControlFlow 0 50) (- 0 54)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 50) (- 0 53)) (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@136 $generated@@647)))) (and (=> (= (ControlFlow 0 50) (- 0 52)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (and (=> (= (ControlFlow 0 50) (- 0 51)) (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@136 $generated@@646)))) (=> (= (ControlFlow 0 50) 49) $generated@@667))))))))))
(let (($generated@@671  (=> (< $generated@@648 ($generated@@255 0)) (and (=> (= (ControlFlow 0 57) 50) $generated@@670) (=> (= (ControlFlow 0 57) 55) $generated@@669)))))
(let (($generated@@672  (=> (<= ($generated@@255 0) $generated@@648) (and (=> (= (ControlFlow 0 56) 50) $generated@@670) (=> (= (ControlFlow 0 56) 55) $generated@@669)))))
(let (($generated@@673  (and (=> (= (ControlFlow 0 58) 56) $generated@@672) (=> (= (ControlFlow 0 58) 57) $generated@@671))))
(let (($generated@@674 true))
(let (($generated@@675  (=> ($generated@@270 $generated@@642 $generated@@641) (and (=> (= (ControlFlow 0 59) 58) $generated@@673) (=> (= (ControlFlow 0 59) 47) $generated@@674)))))
(let (($generated@@676  (=> (= (ControlFlow 0 29) (- 0 28)) (forall (($generated@@677 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@677) (< $generated@@677 $generated@@643)) (= ($generated ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@647) ($generated@@371 $generated@@677)))) ($generated ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@646) ($generated@@371 $generated@@677)))))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@646) ($generated@@371 $generated@@677))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@647) ($generated@@371 $generated@@677))))
)))))
(let (($generated@@678  (=> (and (not (and (<= ($generated@@255 0) $generated@@649) (< $generated@@649 $generated@@643))) (= (ControlFlow 0 35) 29)) $generated@@676)))
(let (($generated@@679  (=> (and (<= ($generated@@255 0) $generated@@649) (< $generated@@649 $generated@@643)) (and (=> (= (ControlFlow 0 30) (- 0 34)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 30) (- 0 33)) (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@136 $generated@@647)))) (and (=> (= (ControlFlow 0 30) (- 0 32)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@136 $generated@@646)))) (=> (= (ControlFlow 0 30) 29) $generated@@676))))))))))
(let (($generated@@680  (=> (< $generated@@649 ($generated@@255 0)) (and (=> (= (ControlFlow 0 37) 30) $generated@@679) (=> (= (ControlFlow 0 37) 35) $generated@@678)))))
(let (($generated@@681  (=> (<= ($generated@@255 0) $generated@@649) (and (=> (= (ControlFlow 0 36) 30) $generated@@679) (=> (= (ControlFlow 0 36) 35) $generated@@678)))))
(let (($generated@@682  (and (=> (= (ControlFlow 0 38) 36) $generated@@681) (=> (= (ControlFlow 0 38) 37) $generated@@680))))
(let (($generated@@683 true))
(let (($generated@@684  (=> (forall (($generated@@685 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@685) (< $generated@@685 $generated@@643)) (= ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@685))) ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@685))))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@685)))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@685)))
)) (and (=> (= (ControlFlow 0 39) 38) $generated@@682) (=> (= (ControlFlow 0 39) 27) $generated@@683)))))
(let (($generated@@686  (=> (and (not (and (<= ($generated@@255 0) $generated@@650) (< $generated@@650 $generated@@643))) (= (ControlFlow 0 43) 39)) $generated@@684)))
(let (($generated@@687  (=> (and (<= ($generated@@255 0) $generated@@650) (< $generated@@650 $generated@@643)) (and (=> (= (ControlFlow 0 40) (- 0 42)) (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@273 $generated@@642)))) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@273 $generated@@642))) (and (=> (= (ControlFlow 0 40) (- 0 41)) (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@273 $generated@@641)))) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@273 $generated@@641))) (=> (= (ControlFlow 0 40) 39) $generated@@684))))))))
(let (($generated@@688  (=> (< $generated@@650 ($generated@@255 0)) (and (=> (= (ControlFlow 0 45) 40) $generated@@687) (=> (= (ControlFlow 0 45) 43) $generated@@686)))))
(let (($generated@@689  (=> (<= ($generated@@255 0) $generated@@650) (and (=> (= (ControlFlow 0 44) 40) $generated@@687) (=> (= (ControlFlow 0 44) 43) $generated@@686)))))
(let (($generated@@690  (and (=> (= (ControlFlow 0 46) 44) $generated@@689) (=> (= (ControlFlow 0 46) 45) $generated@@688))))
(let (($generated@@691  (=> (forall (($generated@@692 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@692) (< $generated@@692 $generated@@643)) (= ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@692))) ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@692))))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@692)))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@692)))
)) (and (=> (= (ControlFlow 0 15) (- 0 19)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@647)))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@646)))) (=> (= (ControlFlow 0 15) (- 0 14)) (= ($generated ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@647) ($generated@@371 $generated@@651)))) ($generated ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@646) ($generated@@371 $generated@@651)))))))))))))))
(let (($generated@@693  (=> (and (not (and (<= ($generated@@255 0) $generated@@652) (< $generated@@652 $generated@@643))) (= (ControlFlow 0 23) 15)) $generated@@691)))
(let (($generated@@694  (=> (and (<= ($generated@@255 0) $generated@@652) (< $generated@@652 $generated@@643)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@273 $generated@@642)))) (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@273 $generated@@642))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@273 $generated@@641)))) (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@273 $generated@@641))) (=> (= (ControlFlow 0 20) 15) $generated@@691))))))))
(let (($generated@@695  (=> (< $generated@@652 ($generated@@255 0)) (and (=> (= (ControlFlow 0 25) 20) $generated@@694) (=> (= (ControlFlow 0 25) 23) $generated@@693)))))
(let (($generated@@696  (=> (<= ($generated@@255 0) $generated@@652) (and (=> (= (ControlFlow 0 24) 20) $generated@@694) (=> (= (ControlFlow 0 24) 23) $generated@@693)))))
(let (($generated@@697  (and (=> (= (ControlFlow 0 26) 24) $generated@@696) (=> (= (ControlFlow 0 26) 25) $generated@@695))))
(let (($generated@@698 true))
(let (($generated@@699 true))
(let (($generated@@700  (=> (and (and (and (and (and (and (not (= ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@651))) ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@651))))) (not (forall (($generated@@701 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@701) (< $generated@@701 $generated@@643)) (= ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@701))) ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@701))))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@701)))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@701)))
)))) (not (forall (($generated@@702 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@702) (< $generated@@702 $generated@@643)) (= ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@702))) ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@702))))))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@702)))
 :pattern ( ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@702)))
)))) (not ($generated@@270 $generated@@642 $generated@@641))) (not ($generated@@270 $generated@@642 $generated@@641))) (not ($generated@@0 ($generated@@257 ($generated@@11 true))))) (= (ControlFlow 0 11) (- 0 10))) false)))
(let (($generated@@703 true))
(let (($generated@@704  (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@273 $generated@@642)))) (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@273 $generated@@642))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@273 $generated@@641)))) (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@273 $generated@@641))) (=> (= ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@642 $generated@@651))) ($generated ($generated@@392 $generated@@2 ($generated@@274 $generated@@641 $generated@@651)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@647)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@646)))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@647) ($generated@@371 $generated@@651)))) ($generated ($generated@@392 $generated@@2 ($generated@@87 ($generated@@85 $generated@@645 $generated@@646) ($generated@@371 $generated@@651)))))))))))))))))))
(let (($generated@@705  (=> (= $generated@@653 ($generated@@180 $generated@@138 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 71) (- 0 73)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (=> (= $generated@@642 ($generated@@370 $generated@@645 $generated@@647)) (and (=> (= (ControlFlow 0 71) (- 0 72)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (=> (= $generated@@641 ($generated@@370 $generated@@645 $generated@@646)) (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 71) 2) $generated@@704) (=> (= (ControlFlow 0 71) 70) $generated@@666)) (=> (= (ControlFlow 0 71) 59) $generated@@675)) (=> (= (ControlFlow 0 71) 9) $generated@@703)) (=> (= (ControlFlow 0 71) 11) $generated@@700)) (=> (= (ControlFlow 0 71) 46) $generated@@690)) (=> (= (ControlFlow 0 71) 12) $generated@@699)) (=> (= (ControlFlow 0 71) 26) $generated@@697)) (=> (= (ControlFlow 0 71) 13) $generated@@698)))))))))))
(let (($generated@@706  (=> (and (and ($generated@@148 $generated@@645) ($generated@@654 $generated@@645)) (and ($generated@@140 $generated@@647 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@647 ($generated@@153 $generated@@46) $generated@@645))) (=> (and (and (and ($generated@@140 $generated@@646 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@646 ($generated@@153 $generated@@46) $generated@@645)) (and (<= ($generated@@255 0) $generated@@643) (<= ($generated@@255 0) $generated@@651))) (and (and ($generated@@140 $generated@@655 ($generated@@510 $generated@@46)) ($generated@@78 $generated@@655 ($generated@@510 $generated@@46) $generated@@645)) true)) (=> (and (and (and (and ($generated@@140 $generated@@656 ($generated@@510 $generated@@46)) ($generated@@78 $generated@@656 ($generated@@510 $generated@@46) $generated@@645)) true) (= 1 $generated@@657)) (and (and (< $generated@@651 $generated@@643) (= $generated@@643 ($generated@@136 $generated@@647))) (and (= ($generated@@136 $generated@@647) ($generated@@136 $generated@@646)) (= (ControlFlow 0 74) 71)))) $generated@@705)))))
$generated@@706)))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@238 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@239 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@238 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@239 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@239 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@239 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@239 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@238 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@253 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@239 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@239 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@239 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@239 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@238 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@239 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@248 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@248 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@253 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@253 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@253 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@239 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@239 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@239 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@264 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@583) (and ($generated@@161 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@587) (and ($generated@@161 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@172) (= (type $generated@@590) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)) ($generated@@260 ($generated@@238 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))) ($generated@@260 ($generated@@286 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@592)) ($generated@@260 ($generated@@286 $generated@@592)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@279 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@278 $generated@@594)) (= ($generated@@277 $generated@@593) 0)) (= $generated@@593 ($generated@@276 $generated@@594))))
 :pattern ( ($generated@@277 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@79 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@299 $generated@@595) ($generated ($generated@@84 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@600) $generated@@2)) ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@3)) ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@4)) ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@457)) ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@172)) ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@278 $generated@@172)) (= (type $generated@@610) $generated@@67)) (= ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@277 $generated@@609))) ($generated@@239 ($generated@@501 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@501 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@277 $generated@@613))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@309 $generated@@615) ($generated@@248 $generated@@616)) ($generated@@139 ($generated@@354 $generated@@615) ($generated@@248 $generated@@617))) ($generated@@139 ($generated@@385 $generated@@615) ($generated@@248 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) $generated@@67)) ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@139 ($generated@@327 $generated@@618) ($generated@@253 $generated@@619)) ($generated@@139 ($generated@@365 $generated@@618) ($generated@@253 $generated@@620))) ($generated@@139 ($generated@@396 $generated@@618) ($generated@@253 ($generated@@162 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@139 $generated@@621 $generated@@46))
 :pattern ( ($generated@@139 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@139 $generated@@622 $generated@@47))
 :pattern ( ($generated@@139 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@139 $generated@@623 $generated@@44))
 :pattern ( ($generated@@139 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@457) ($generated@@139 $generated@@624 $generated@@45))
 :pattern ( ($generated@@139 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@172) ($generated@@139 $generated@@625 $generated@@48))
 :pattern ( ($generated@@139 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () Int)
(assert  (and (and (and (= (type $generated@@626) ($generated@@184 $generated@@80 $generated@@4)) (= (type $generated@@627) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@628) $generated@@80)) (= (type $generated@@630) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@633  (=> (= $generated@@626 ($generated@@183 $generated@@137 $generated@@627 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@628 $generated@@137))) (=> (not (= $generated@@628 $generated@@137)) (=> (and (<= $generated@@629 ($generated@@135 $generated@@628)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@630 $generated@@137))))))))
(let (($generated@@634  (=> (and (and ($generated@@151 $generated@@627) ($generated@@631 $generated@@627)) (and ($generated@@139 $generated@@628 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@628 ($generated@@156 $generated@@46) $generated@@627))) (=> (and (and (and ($generated@@139 $generated@@630 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@630 ($generated@@156 $generated@@46) $generated@@627)) (<= ($generated@@258 0) $generated@@629)) (and (= 1 $generated@@632) (= (ControlFlow 0 4) 2))) $generated@@633))))
$generated@@634)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U Int) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (Int) T@U)
(declare-fun $generated@@247 (T@T) T@T)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U Int) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@296 (T@U T@U T@U) Bool)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@305 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@T T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@T) T@U)
(declare-fun $generated@@502 () T@T)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147)  (or (= $generated@@146 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@151) $generated@@81)) (and (and ($generated@@148 $generated@@150) (and (not (= $generated@@151 $generated@@138)) (= ($generated@@139 $generated@@151) ($generated@@137 $generated@@149)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@151)) $generated@@46 $generated@@150))
 :pattern ( ($generated@@136 $generated@@151) ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60) ($generated@@137 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@140 $generated@@152 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@152 ($generated@@79 0)))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) $generated@@81)) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157) ($generated@@78 $generated@@156 ($generated@@137 $generated@@155) $generated@@157)))
 :pattern ( ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@140 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@140 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 16)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@81 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@70 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@81) (= (type $generated@@229) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@230) ($generated@@69 $generated@@4))) (= (type $generated@@232) $generated@@81)) (= (type $generated@@233) ($generated@@69 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@160)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@67) (= (type $generated@@240) $generated@@67)) (= (type $generated@@241) $generated@@169)) (= (type $generated@@242) $generated@@169)) (= ($generated@@140 ($generated@@235 $generated@@241 $generated@@242) ($generated@@159 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@140 ($generated@@235 $generated@@241 $generated@@242) ($generated@@159 $generated@@239 $generated@@240)))
)))
(assert  (and (and (and (and (and (forall (($generated@@249 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@249)) 17)) (forall (($generated@@250 T@T) ) (! (= ($generated@@248 ($generated@@247 $generated@@250)) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
))) (forall (($generated@@251 T@U) ($generated@@252 Int) ) (! (let (($generated@@253 ($generated@@248 (type $generated@@251))))
(= (type ($generated@@243 $generated@@251 $generated@@252)) ($generated@@247 $generated@@253)))
 :pattern ( ($generated@@243 $generated@@251 $generated@@252))
))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@244 $generated@@254 $generated@@255)) ($generated@@247 $generated@@169))
 :pattern ( ($generated@@244 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@245 $generated@@256 $generated@@257)) ($generated@@247 $generated@@258)))
 :pattern ( ($generated@@245 $generated@@256 $generated@@257))
))) (forall (($generated@@259 Int) ) (! (= (type ($generated@@246 $generated@@259)) ($generated@@69 $generated@@169))
 :pattern ( ($generated@@246 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (and (= (type $generated@@260) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@261) $generated@@81)) (=> (and (and (= (+ $generated@@262 1) $generated@@263) (<= 0 $generated@@262)) (<= $generated@@263 ($generated@@136 $generated@@261))) (= ($generated@@243 ($generated@@244 $generated@@260 $generated@@261) $generated@@263) ($generated@@245 ($generated@@243 ($generated@@244 $generated@@260 $generated@@261) $generated@@262) ($generated@@87 ($generated@@85 $generated@@260 $generated@@261) ($generated@@246 $generated@@262))))))
 :pattern ( ($generated@@243 ($generated@@244 $generated@@260 $generated@@261) $generated@@262) ($generated@@243 ($generated@@244 $generated@@260 $generated@@261) $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@160) (= (type $generated@@265) $generated@@160)) (= ($generated@@166 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@166 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@67)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@269) $generated@@67)) (= ($generated@@140 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@169) ($generated@@0 ($generated@@85 $generated@@268 $generated@@270))) ($generated@@236 $generated@@270 $generated@@269))
 :pattern ( ($generated@@85 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@140 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@67)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@274) $generated@@67)) (= ($generated@@140 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@169) ($generated@@0 ($generated@@85 $generated@@273 $generated@@275))) ($generated@@236 $generated@@275 $generated@@274))
 :pattern ( ($generated@@85 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@140 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@67)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) ($generated@@247 $generated@@169)) (= (type $generated@@285) $generated@@169)) (= (type $generated@@286) $generated@@67)) (and ($generated@@140 $generated@@284 ($generated@@282 $generated@@286)) ($generated@@236 $generated@@285 $generated@@286))) ($generated@@140 ($generated@@245 $generated@@284 $generated@@285) ($generated@@282 $generated@@286)))
 :pattern ( ($generated@@140 ($generated@@245 $generated@@284 $generated@@285) ($generated@@282 $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 Int) ) (! (let (($generated@@291 ($generated@@248 (type $generated@@289))))
(= (type ($generated@@287 $generated@@289 $generated@@290)) $generated@@291))
 :pattern ( ($generated@@287 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 Int) ($generated@@294 Int) ) (! (let (($generated@@295 ($generated@@248 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@247 $generated@@295)) (=> (and (and (<= 0 $generated@@294) (< $generated@@294 $generated@@293)) (< $generated@@294 ($generated@@288 $generated@@292))) (= ($generated@@287 ($generated@@243 $generated@@292 $generated@@293) $generated@@294) ($generated@@287 $generated@@292 $generated@@294)))))
 :weight 25
 :pattern ( ($generated@@287 ($generated@@243 $generated@@292 $generated@@293) $generated@@294))
 :pattern ( ($generated@@287 $generated@@292 $generated@@294) ($generated@@243 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) $generated@@67) (= (type $generated@@298) $generated@@67)) (= (type $generated@@299) $generated@@169)) (= (type $generated@@300) $generated@@169)) (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@301)) (= ($generated@@78 ($generated@@235 $generated@@299 $generated@@300) ($generated@@159 $generated@@297 $generated@@298) $generated@@301)  (and ($generated@@296 $generated@@299 $generated@@297 $generated@@301) ($generated@@296 $generated@@300 $generated@@298 $generated@@301))))
 :pattern ( ($generated@@78 ($generated@@235 $generated@@299 $generated@@300) ($generated@@159 $generated@@297 $generated@@298) $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@71)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@160) (= ($generated@@158 $generated@@304) (= ($generated@@302 $generated@@304) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@248 (type $generated@@306))))
 (=> (and (= (type $generated@@306) ($generated@@247 $generated@@308)) (= (type $generated@@307) ($generated@@247 $generated@@308))) (= ($generated@@305 $generated@@306 $generated@@307)  (and (= ($generated@@288 $generated@@306) ($generated@@288 $generated@@307)) (forall (($generated@@309 Int) ) (!  (=> (and (<= 0 $generated@@309) (< $generated@@309 ($generated@@288 $generated@@306))) (= ($generated@@287 $generated@@306 $generated@@309) ($generated@@287 $generated@@307 $generated@@309)))
 :pattern ( ($generated@@287 $generated@@306 $generated@@309))
 :pattern ( ($generated@@287 $generated@@307 $generated@@309))
))))))
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 Int) ) (! (let (($generated@@313 ($generated@@248 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@247 $generated@@313)) (=> (and (<= 0 $generated@@312) (< $generated@@312 ($generated@@288 $generated@@311))) (< ($generated@@310 ($generated@@243 $generated@@311 $generated@@312)) ($generated@@310 $generated@@311)))))
 :pattern ( ($generated@@310 ($generated@@243 $generated@@311 $generated@@312)))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@160) ($generated@@158 $generated@@314)) (exists (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (and (and (= (type $generated@@315) $generated@@169) (= (type $generated@@316) $generated@@169)) (= $generated@@314 ($generated@@235 $generated@@315 $generated@@316)))
 :no-pattern (type $generated@@315)
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@158 $generated@@314))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@247 $generated@@318))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@288 ($generated@@317 $generated@@319)) 0)
 :pattern ( ($generated@@317 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (let (($generated@@322 (type $generated@@321)))
 (=> (= (type $generated@@320) ($generated@@247 $generated@@322)) (= ($generated@@288 ($generated@@245 $generated@@320 $generated@@321)) (+ 1 ($generated@@288 $generated@@320)))))
 :pattern ( ($generated@@245 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@67) (= (type $generated@@324) $generated@@81)) (= ($generated@@140 $generated@@324 ($generated@@153 $generated@@323))  (and ($generated@@140 $generated@@324 ($generated@@137 $generated@@323)) (not (= $generated@@324 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@324 ($generated@@153 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@169)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@67) (= (type $generated@@329) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@296 ($generated@@325 $generated@@327) $generated@@328 $generated@@329) ($generated@@78 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@296 ($generated@@325 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@80 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@83 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@80 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@85 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@72)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@338)) $generated@@61) (= ($generated@@336 ($generated@@137 $generated@@338)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@67) (and (= ($generated@@76 ($generated@@153 $generated@@339)) $generated@@62) (= ($generated@@336 ($generated@@153 $generated@@339)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 18)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 19)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@85 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@85 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@83 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@80 $generated@@377 $generated@@2)) (= ($generated@@175 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (and (<= 0 ($generated ($generated@@85 $generated@@376 $generated@@378))) (<= ($generated ($generated@@85 $generated@@376 $generated@@378)) ($generated@@330 $generated@@376))))
 :pattern ( ($generated@@85 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@175 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@67) (= (type $generated@@380) $generated@@81)) (= ($generated@@140 $generated@@380 ($generated@@137 $generated@@379))  (or (= $generated@@380 $generated@@138) (= ($generated@@139 $generated@@380) ($generated@@137 $generated@@379)))))
 :pattern ( ($generated@@140 $generated@@380 ($generated@@137 $generated@@379)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 Int) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
 (=> (= (type $generated@@381) ($generated@@247 $generated@@384)) (and (=> (= $generated@@382 ($generated@@288 $generated@@381)) (= ($generated@@287 ($generated@@245 $generated@@381 $generated@@383) $generated@@382) $generated@@383)) (=> (not (= $generated@@382 ($generated@@288 $generated@@381))) (= ($generated@@287 ($generated@@245 $generated@@381 $generated@@383) $generated@@382) ($generated@@287 $generated@@381 $generated@@382))))))
 :pattern ( ($generated@@287 ($generated@@245 $generated@@381 $generated@@383) $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@344 (type $generated@@385))))
(let (($generated@@387 ($generated@@343 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@342 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@341 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@340 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@344 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@80 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(let (($generated@@394 ($generated@@343 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@342 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@341 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@85 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@362 (type $generated@@396))))
(let (($generated@@398 ($generated@@361 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@360 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@359 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@358 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@362 (type $generated@@401))))
(= (type ($generated@@400 $generated@@401)) ($generated@@80 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(let (($generated@@405 ($generated@@361 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@360 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@359 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@404) ($generated@@0 ($generated@@85 ($generated@@400 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@400 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@408) $generated@@81)) (forall (($generated@@409 Int) ) (!  (=> (and (<= 0 $generated@@409) (< $generated@@409 ($generated@@288 ($generated@@244 $generated@@407 $generated@@408)))) (= ($generated@@287 ($generated@@244 $generated@@407 $generated@@408) $generated@@409) ($generated@@87 ($generated@@85 $generated@@407 $generated@@408) ($generated@@246 $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@407 $generated@@408) ($generated@@246 $generated@@409)))
 :pattern ( ($generated@@287 ($generated@@244 $generated@@407 $generated@@408) $generated@@409))
)))
 :pattern ( ($generated@@244 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@411) $generated@@67)) (= ($generated@@140 $generated@@410 ($generated@@174 $generated@@411)) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@410 $generated@@412)))) ($generated@@236 $generated@@412 $generated@@411))
 :pattern ( ($generated@@85 $generated@@410 $generated@@412))
))))
 :pattern ( ($generated@@140 $generated@@410 ($generated@@174 $generated@@411)))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@414) $generated@@67)) (= (type $generated@@415) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@413 ($generated@@266 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@169) ($generated@@0 ($generated@@85 $generated@@413 $generated@@416))) ($generated@@296 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@85 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@78 $generated@@413 ($generated@@266 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@417 ($generated@@271 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@169) ($generated@@0 ($generated@@85 $generated@@417 $generated@@420))) ($generated@@296 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@85 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@78 $generated@@417 ($generated@@271 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@85 ($generated@@331 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@85 ($generated@@331 $generated@@422) $generated@@421)))
)))
(assert  (and (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@423 $generated@@426)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@423 $generated@@426))
)) (forall (($generated@@427 T@T) ($generated@@428 T@U) ) (! (= (type ($generated@@424 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@424 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@344 (type $generated@@429))))
(let (($generated@@431 ($generated@@343 (type $generated@@429))))
(= (type ($generated@@425 $generated@@429)) ($generated@@80 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@425 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@342 $generated@@169 $generated@@169)) (= (type $generated@@433) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@423 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@432) ($generated@@167 ($generated@@424 $generated@@160 $generated@@433)))) (= ($generated@@85 ($generated@@425 $generated@@432) ($generated@@167 ($generated@@424 $generated@@160 $generated@@433))) ($generated@@168 ($generated@@424 $generated@@160 $generated@@433))))))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@362 (type $generated@@437))))
(let (($generated@@439 ($generated@@361 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@80 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@360 $generated@@169 $generated@@169)) (= (type $generated@@441) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@85 ($generated@@358 $generated@@440) ($generated@@167 ($generated@@424 $generated@@160 $generated@@441)))) (= ($generated@@85 ($generated@@435 $generated@@440) ($generated@@167 ($generated@@424 $generated@@160 $generated@@441))) ($generated@@168 ($generated@@424 $generated@@160 $generated@@441))))))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@343 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@342 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@85 ($generated@@389 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@85 ($generated@@425 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@361 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@360 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@85 ($generated@@400 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@85 ($generated@@358 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@85 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@447) $generated@@451))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@342 $generated@@169 $generated@@169)) (= (type $generated@@456) $generated@@67)) (= (type $generated@@457) $generated@@67)) (= (type $generated@@458) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@455) $generated@@459))) (and ($generated@@296 ($generated@@85 ($generated@@425 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@296 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@455) $generated@@459))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@78 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@360 $generated@@169 $generated@@169)) (= (type $generated@@464) $generated@@67)) (= (type $generated@@465) $generated@@67)) (= (type $generated@@466) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@463) $generated@@467))) (and ($generated@@296 ($generated@@85 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@296 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@78 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@248 (type $generated@@468))))
 (=> (and (and (= (type $generated@@468) ($generated@@247 $generated@@470)) (= (type $generated@@469) ($generated@@247 $generated@@470))) ($generated@@305 $generated@@468 $generated@@469)) (= $generated@@468 $generated@@469)))
 :pattern ( ($generated@@305 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 Int) ) (! (let (($generated@@473 ($generated@@248 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@247 $generated@@473)) (=> (and (<= 0 $generated@@472) (<= $generated@@472 ($generated@@288 $generated@@471))) (= ($generated@@288 ($generated@@243 $generated@@471 $generated@@472)) $generated@@472))))
 :pattern ( ($generated@@288 ($generated@@243 $generated@@471 $generated@@472)))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 Int) ) (!  (=> (and (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@476) $generated@@81)) (=> (and (and (and ($generated@@148 $generated@@475) (and (not (= $generated@@476 $generated@@138)) (= ($generated@@139 $generated@@476) ($generated@@137 $generated@@474)))) (and (<= 0 $generated@@477) (< $generated@@477 ($generated@@136 $generated@@476)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@475 $generated@@476) $generated@@60))) ($generated@@296 ($generated@@87 ($generated@@85 $generated@@475 $generated@@476) ($generated@@246 $generated@@477)) $generated@@474 $generated@@475)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@475 $generated@@476) ($generated@@246 $generated@@477)) ($generated@@137 $generated@@474))
)))
(assert (forall (($generated@@479 T@T) ) (! (= (type ($generated@@478 $generated@@479)) ($generated@@80 $generated@@479 $generated@@4))
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@362 (type $generated@@480))))
(let (($generated@@482 ($generated@@361 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@360 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@359 $generated@@482 $generated@@481)) (= ($generated@@358 $generated@@480) ($generated@@478 $generated@@482))))))
 :pattern ( ($generated@@358 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@362 (type $generated@@483))))
(let (($generated@@485 ($generated@@361 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@360 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@359 $generated@@485 $generated@@484)) (= ($generated@@400 $generated@@483) ($generated@@478 $generated@@484))))))
 :pattern ( ($generated@@400 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (= ($generated@@434 $generated@@486) ($generated@@478 $generated@@169))))))
 :pattern ( ($generated@@434 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@344 (type $generated@@489))))
(let (($generated@@491 ($generated@@343 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@342 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@341 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@169) (= (type $generated@@493) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@423 $generated@@489) ($generated@@325 ($generated@@235 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@423 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@362 (type $generated@@494))))
(let (($generated@@496 ($generated@@361 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@360 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@359 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@169) (= (type $generated@@498) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@434 $generated@@494) ($generated@@325 ($generated@@235 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@434 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@169) ($generated@@236 $generated@@499 $generated@@46)) (and (= ($generated@@325 ($generated@@424 $generated@@2 $generated@@499)) $generated@@499) ($generated@@140 ($generated@@424 $generated@@2 $generated@@499) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@499 $generated@@46))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@169) ($generated@@236 $generated@@500 $generated@@47)) (and (= ($generated@@325 ($generated@@424 $generated@@3 $generated@@500)) $generated@@500) ($generated@@140 ($generated@@424 $generated@@3 $generated@@500) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@500 $generated@@47))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@169) ($generated@@236 $generated@@501 $generated@@44)) (and (= ($generated@@325 ($generated@@424 $generated@@4 $generated@@501)) $generated@@501) ($generated@@140 ($generated@@424 $generated@@4 $generated@@501) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@501 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@502) 20))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@169) ($generated@@236 $generated@@503 $generated@@45)) (and (= ($generated@@325 ($generated@@424 $generated@@502 $generated@@503)) $generated@@503) ($generated@@140 ($generated@@424 $generated@@502 $generated@@503) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@503 $generated@@45))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@236 ($generated@@325 $generated@@504) $generated@@505) ($generated@@140 $generated@@504 $generated@@505)))
 :pattern ( ($generated@@236 ($generated@@325 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@81) (<= 0 ($generated@@136 $generated@@506)))
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@83 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@80 $generated@@508 $generated@@2)) (<= 0 ($generated@@330 $generated@@507))))
 :pattern ( ($generated@@330 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@248 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@247 $generated@@510)) (<= 0 ($generated@@288 $generated@@509))))
 :pattern ( ($generated@@288 $generated@@509))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@67)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@67) (= (type $generated@@514) $generated@@67)) (= ($generated@@511 ($generated@@452 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@452 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@67) (= (type $generated@@518) $generated@@67)) (= ($generated@@515 ($generated@@452 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@452 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@67) (= (type $generated@@520) $generated@@67)) (= ($generated@@76 ($generated@@452 $generated@@519 $generated@@520)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@67) (= (type $generated@@524) $generated@@67)) (= ($generated@@521 ($generated@@460 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@460 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (= ($generated@@525 ($generated@@460 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@460 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@67) (= (type $generated@@530) $generated@@67)) (= ($generated@@76 ($generated@@460 $generated@@529 $generated@@530)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@169) (= (type $generated@@532) $generated@@169)) (= ($generated@@302 ($generated@@235 $generated@@531 $generated@@532)) $generated@@63))
 :pattern ( ($generated@@235 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= ($generated@@533 ($generated@@159 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@159 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@67)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (= ($generated@@537 ($generated@@159 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@159 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@169) (= (type $generated@@542) $generated@@169)) (= ($generated@@167 ($generated@@235 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@235 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@169) (= (type $generated@@544) $generated@@169)) (= ($generated@@168 ($generated@@235 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@235 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@247 $generated@@169)) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@545 ($generated@@282 $generated@@546) $generated@@547) (forall (($generated@@548 Int) ) (!  (=> (and (<= 0 $generated@@548) (< $generated@@548 ($generated@@288 $generated@@545))) ($generated@@296 ($generated@@287 $generated@@545 $generated@@548) $generated@@546 $generated@@547))
 :pattern ( ($generated@@287 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@78 $generated@@545 ($generated@@282 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@79 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@79 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@551 ($generated@@266 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@266 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@67) (= ($generated@@76 ($generated@@266 $generated@@554)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@67)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@67) (= ($generated@@555 ($generated@@271 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@271 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@76 ($generated@@271 $generated@@558)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@67)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@67) (= ($generated@@559 ($generated@@174 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@174 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@67) (= ($generated@@76 ($generated@@174 $generated@@562)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@67)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@67) (= ($generated@@563 ($generated@@282 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@282 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@67) (= ($generated@@76 ($generated@@282 $generated@@566)) $generated@@57))
 :pattern ( ($generated@@282 $generated@@566))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@75 ($generated@@246 $generated@@567)) 1)
 :pattern ( ($generated@@246 $generated@@567))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@246 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@246 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@67)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@67) (= ($generated@@570 ($generated@@137 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@137 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@67)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@67) (= ($generated@@573 ($generated@@153 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@153 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
(= ($generated@@424 $generated@@577 ($generated@@325 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@325 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@342 $generated@@169 $generated@@169)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) (= ($generated@@140 $generated@@578 ($generated@@452 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@578) $generated@@581))) (and ($generated@@236 ($generated@@85 ($generated@@425 $generated@@578) $generated@@581) $generated@@580) ($generated@@236 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@578) $generated@@581))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@140 $generated@@578 ($generated@@452 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@360 $generated@@169 $generated@@169)) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@67)) (= ($generated@@140 $generated@@582 ($generated@@460 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@582) $generated@@585))) (and ($generated@@236 ($generated@@85 ($generated@@435 $generated@@582) $generated@@585) $generated@@584) ($generated@@236 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@582) $generated@@585))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@140 $generated@@582 ($generated@@460 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@67) (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@588) $generated@@81)) (and (and ($generated@@148 $generated@@587) (and (not (= $generated@@588 $generated@@138)) (= ($generated@@139 $generated@@588) ($generated@@137 $generated@@586)))) (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@136 $generated@@588))))) ($generated@@236 ($generated@@87 ($generated@@85 $generated@@587 $generated@@588) ($generated@@246 $generated@@589)) $generated@@586))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@587 $generated@@588) ($generated@@246 $generated@@589)) ($generated@@137 $generated@@586))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@169) (= (type $generated@@593) $generated@@169)) (< ($generated@@590 $generated@@592) ($generated@@591 ($generated@@235 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@235 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@169) (= (type $generated@@595) $generated@@169)) (< ($generated@@590 $generated@@595) ($generated@@591 ($generated@@235 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@235 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@169) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) ($generated@@236 $generated@@596 ($generated@@452 $generated@@597 $generated@@598))) (and (= ($generated@@325 ($generated@@424 ($generated@@342 $generated@@169 $generated@@169) $generated@@596)) $generated@@596) ($generated@@140 ($generated@@424 ($generated@@342 $generated@@169 $generated@@169) $generated@@596) ($generated@@452 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@236 $generated@@596 ($generated@@452 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@169) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@236 $generated@@599 ($generated@@460 $generated@@600 $generated@@601))) (and (= ($generated@@325 ($generated@@424 ($generated@@360 $generated@@169 $generated@@169) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@424 ($generated@@360 $generated@@169 $generated@@169) $generated@@599) ($generated@@460 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@236 $generated@@599 ($generated@@460 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@67) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) $generated@@169)) ($generated@@236 $generated@@604 ($generated@@159 $generated@@602 $generated@@603))) (and (= ($generated@@325 ($generated@@424 $generated@@160 $generated@@604)) $generated@@604) ($generated@@140 ($generated@@424 $generated@@160 $generated@@604) ($generated@@159 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@236 $generated@@604 ($generated@@159 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (not ($generated@@0 ($generated@@85 ($generated@@478 $generated@@606) $generated@@605))))
 :pattern ( (let (($generated@@606 (type $generated@@605)))
($generated@@85 ($generated@@478 $generated@@606) $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@608) $generated@@81)) (= ($generated@@288 ($generated@@244 $generated@@607 $generated@@608)) ($generated@@136 $generated@@608)))
 :pattern ( ($generated@@288 ($generated@@244 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@67) (= (type $generated@@610) $generated@@67)) (and (= ($generated@@76 ($generated@@159 $generated@@609 $generated@@610)) $generated@@64) (= ($generated@@336 ($generated@@159 $generated@@609 $generated@@610)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@609 $generated@@610))
)))
(assert  (and (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@248 (type $generated@@613))))
(= (type ($generated@@611 $generated@@613)) ($generated@@247 $generated@@614)))
 :pattern ( ($generated@@611 $generated@@613))
)) (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@248 (type $generated@@615))))
(= (type ($generated@@612 $generated@@615)) $generated@@616))
 :pattern ( ($generated@@612 $generated@@615))
))))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@618)))
 (=> (= (type $generated@@617) ($generated@@247 $generated@@619)) (and (= ($generated@@611 ($generated@@245 $generated@@617 $generated@@618)) $generated@@617) (= ($generated@@612 ($generated@@245 $generated@@617 $generated@@618)) $generated@@618))))
 :pattern ( ($generated@@245 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@160) (= ($generated@@590 ($generated@@325 $generated@@620)) ($generated@@591 $generated@@620)))
 :pattern ( ($generated@@590 ($generated@@325 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@169) ($generated@@236 $generated@@621 ($generated@@79 0))) (and (= ($generated@@325 ($generated@@424 $generated@@2 $generated@@621)) $generated@@621) ($generated@@140 ($generated@@424 ($generated@@80 $generated@@169 $generated@@4) $generated@@621) ($generated@@79 0))))
 :pattern ( ($generated@@236 $generated@@621 ($generated@@79 0)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@169) (= (type $generated@@623) $generated@@67)) ($generated@@236 $generated@@622 ($generated@@266 $generated@@623))) (and (= ($generated@@325 ($generated@@424 ($generated@@80 $generated@@169 $generated@@4) $generated@@622)) $generated@@622) ($generated@@140 ($generated@@424 ($generated@@80 $generated@@169 $generated@@4) $generated@@622) ($generated@@266 $generated@@623))))
 :pattern ( ($generated@@236 $generated@@622 ($generated@@266 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@169) (= (type $generated@@625) $generated@@67)) ($generated@@236 $generated@@624 ($generated@@271 $generated@@625))) (and (= ($generated@@325 ($generated@@424 ($generated@@80 $generated@@169 $generated@@4) $generated@@624)) $generated@@624) ($generated@@140 ($generated@@424 ($generated@@80 $generated@@169 $generated@@4) $generated@@624) ($generated@@271 $generated@@625))))
 :pattern ( ($generated@@236 $generated@@624 ($generated@@271 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@169) (= (type $generated@@627) $generated@@67)) ($generated@@236 $generated@@626 ($generated@@174 $generated@@627))) (and (= ($generated@@325 ($generated@@424 ($generated@@80 $generated@@169 $generated@@2) $generated@@626)) $generated@@626) ($generated@@140 ($generated@@424 ($generated@@80 $generated@@169 $generated@@2) $generated@@626) ($generated@@174 $generated@@627))))
 :pattern ( ($generated@@236 $generated@@626 ($generated@@174 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@169) (= (type $generated@@629) $generated@@67)) ($generated@@236 $generated@@628 ($generated@@282 $generated@@629))) (and (= ($generated@@325 ($generated@@424 ($generated@@247 $generated@@169) $generated@@628)) $generated@@628) ($generated@@140 ($generated@@424 ($generated@@247 $generated@@169) $generated@@628) ($generated@@282 $generated@@629))))
 :pattern ( ($generated@@236 $generated@@628 ($generated@@282 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@67) (= (type $generated@@631) $generated@@169)) ($generated@@236 $generated@@631 ($generated@@137 $generated@@630))) (and (= ($generated@@325 ($generated@@424 $generated@@81 $generated@@631)) $generated@@631) ($generated@@140 ($generated@@424 $generated@@81 $generated@@631) ($generated@@137 $generated@@630))))
 :pattern ( ($generated@@236 $generated@@631 ($generated@@137 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@67) (= (type $generated@@633) $generated@@169)) ($generated@@236 $generated@@633 ($generated@@153 $generated@@632))) (and (= ($generated@@325 ($generated@@424 $generated@@81 $generated@@633)) $generated@@633) ($generated@@140 ($generated@@424 $generated@@81 $generated@@633) ($generated@@153 $generated@@632))))
 :pattern ( ($generated@@236 $generated@@633 ($generated@@153 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@634) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@634 ($generated@@174 $generated@@635) $generated@@636) (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@634 $generated@@637)))) ($generated@@296 $generated@@637 $generated@@635 $generated@@636))
 :pattern ( ($generated@@85 $generated@@634 $generated@@637))
))))
 :pattern ( ($generated@@78 $generated@@634 ($generated@@174 $generated@@635) $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@160) (= (type $generated@@639) $generated@@67)) (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@640) (and ($generated@@158 $generated@@638) (exists (($generated@@641 T@U) ) (!  (and (= (type $generated@@641) $generated@@67) ($generated@@78 $generated@@638 ($generated@@159 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@78 $generated@@638 ($generated@@159 $generated@@639 $generated@@641) $generated@@640))
))))) ($generated@@296 ($generated@@167 $generated@@638) $generated@@639 $generated@@640))
 :pattern ( ($generated@@296 ($generated@@167 $generated@@638) $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) $generated@@160) (= (type $generated@@643) $generated@@67)) (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@644) (and ($generated@@158 $generated@@642) (exists (($generated@@645 T@U) ) (!  (and (= (type $generated@@645) $generated@@67) ($generated@@78 $generated@@642 ($generated@@159 $generated@@645 $generated@@643) $generated@@644))
 :pattern ( ($generated@@78 $generated@@642 ($generated@@159 $generated@@645 $generated@@643) $generated@@644))
))))) ($generated@@296 ($generated@@168 $generated@@642) $generated@@643 $generated@@644))
 :pattern ( ($generated@@296 ($generated@@168 $generated@@642) $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@169) (= (type $generated@@647) $generated@@169)) (= ($generated@@235 ($generated@@278 $generated@@646) ($generated@@278 $generated@@647)) ($generated@@278 ($generated@@235 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@235 ($generated@@278 $generated@@646) ($generated@@278 $generated@@647)))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@325 ($generated@@8 ($generated@@276 $generated@@648))) ($generated@@278 ($generated@@325 ($generated@@8 $generated@@648))))
 :pattern ( ($generated@@325 ($generated@@8 ($generated@@276 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ) (! (= ($generated@@325 ($generated@@278 $generated@@649)) ($generated@@278 ($generated@@325 $generated@@649)))
 :pattern ( ($generated@@325 ($generated@@278 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@248 (type $generated@@650))))
 (=> (and (= (type $generated@@650) ($generated@@247 $generated@@651)) (= ($generated@@288 $generated@@650) 0)) (= $generated@@650 ($generated@@317 $generated@@651))))
 :pattern ( ($generated@@288 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 Int) ) (! (let (($generated@@654 ($generated@@248 (type $generated@@652))))
 (=> (and (= (type $generated@@652) ($generated@@247 $generated@@654)) (= $generated@@653 0)) (= ($generated@@243 $generated@@652 $generated@@653) ($generated@@317 $generated@@654))))
 :pattern ( ($generated@@243 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (! (let (($generated@@658 (type $generated@@656)))
 (=> (and (and (= (type $generated@@655) ($generated@@80 $generated@@658 $generated@@2)) (= (type $generated@@657) $generated@@2)) (<= 0 ($generated $generated@@657))) (= ($generated@@330 ($generated@@86 $generated@@655 $generated@@656 $generated@@657)) (+ (- ($generated@@330 $generated@@655) ($generated ($generated@@85 $generated@@655 $generated@@656))) ($generated $generated@@657)))))
 :pattern ( ($generated@@330 ($generated@@86 $generated@@655 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@660) $generated@@2)) ($generated@@78 $generated@@660 $generated@@46 $generated@@659))
 :pattern ( ($generated@@78 $generated@@660 $generated@@46 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@662) $generated@@3)) ($generated@@78 $generated@@662 $generated@@47 $generated@@661))
 :pattern ( ($generated@@78 $generated@@662 $generated@@47 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@664) $generated@@4)) ($generated@@78 $generated@@664 $generated@@44 $generated@@663))
 :pattern ( ($generated@@78 $generated@@664 $generated@@44 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@666) $generated@@502)) ($generated@@78 $generated@@666 $generated@@45 $generated@@665))
 :pattern ( ($generated@@78 $generated@@666 $generated@@45 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@668) $generated@@169)) ($generated@@78 $generated@@668 $generated@@48 $generated@@667))
 :pattern ( ($generated@@78 $generated@@668 $generated@@48 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@247 $generated@@169)) (= (type $generated@@670) $generated@@67)) (= ($generated@@140 $generated@@669 ($generated@@282 $generated@@670)) (forall (($generated@@671 Int) ) (!  (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@288 $generated@@669))) ($generated@@236 ($generated@@287 $generated@@669 $generated@@671) $generated@@670))
 :pattern ( ($generated@@287 $generated@@669 $generated@@671))
))))
 :pattern ( ($generated@@140 $generated@@669 ($generated@@282 $generated@@670)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@247 $generated@@169)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@288 $generated@@672))) (< ($generated@@591 ($generated@@424 $generated@@160 ($generated@@287 $generated@@672 $generated@@673))) ($generated@@310 $generated@@672))))
 :pattern ( ($generated@@591 ($generated@@424 $generated@@160 ($generated@@287 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@342 $generated@@169 $generated@@169)) (= (type $generated@@675) $generated@@67)) (= (type $generated@@676) $generated@@67)) ($generated@@140 $generated@@674 ($generated@@452 $generated@@675 $generated@@676))) (and (and ($generated@@140 ($generated@@340 $generated@@674) ($generated@@266 $generated@@675)) ($generated@@140 ($generated@@389 $generated@@674) ($generated@@266 $generated@@676))) ($generated@@140 ($generated@@423 $generated@@674) ($generated@@266 ($generated@@159 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@140 $generated@@674 ($generated@@452 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@360 $generated@@169 $generated@@169)) (= (type $generated@@678) $generated@@67)) (= (type $generated@@679) $generated@@67)) ($generated@@140 $generated@@677 ($generated@@460 $generated@@678 $generated@@679))) (and (and ($generated@@140 ($generated@@358 $generated@@677) ($generated@@271 $generated@@678)) ($generated@@140 ($generated@@400 $generated@@677) ($generated@@271 $generated@@679))) ($generated@@140 ($generated@@434 $generated@@677) ($generated@@271 ($generated@@159 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@140 $generated@@677 ($generated@@460 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@140 $generated@@680 $generated@@46))
 :pattern ( ($generated@@140 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@140 $generated@@681 $generated@@47))
 :pattern ( ($generated@@140 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@140 $generated@@682 $generated@@44))
 :pattern ( ($generated@@140 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@502) ($generated@@140 $generated@@683 $generated@@45))
 :pattern ( ($generated@@140 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@169) ($generated@@140 $generated@@684 $generated@@48))
 :pattern ( ($generated@@140 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 (T@U) Bool)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@686) ($generated@@247 $generated@@169)) (= (type $generated@@685) ($generated@@247 $generated@@169))) (= (type $generated@@689) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@690) $generated@@81)) (= (type $generated@@691) $generated@@81)) (= (type $generated@@693) ($generated@@181 $generated@@81 $generated@@4))) (= (type $generated@@695) ($generated@@247 $generated@@169))) (= (type $generated@@696) ($generated@@247 $generated@@169))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@698  (=> (= (ControlFlow 0 19) (- 0 18)) (forall (($generated@@699 Int) ) (!  (=> true (=> (and (<= ($generated@@276 0) $generated@@699) (< $generated@@699 $generated@@687)) (= ($generated ($generated@@424 $generated@@2 ($generated@@287 $generated@@686 $generated@@699))) ($generated ($generated@@424 $generated@@2 ($generated@@287 $generated@@685 $generated@@699))))))
 :pattern ( ($generated@@424 $generated@@2 ($generated@@287 $generated@@685 $generated@@699)))
 :pattern ( ($generated@@424 $generated@@2 ($generated@@287 $generated@@686 $generated@@699)))
)))))
(let (($generated@@700  (=> (and (not (and (<= ($generated@@276 0) $generated@@688) (< $generated@@688 $generated@@687))) (= (ControlFlow 0 23) 19)) $generated@@698)))
(let (($generated@@701  (=> (and (<= ($generated@@276 0) $generated@@688) (< $generated@@688 $generated@@687)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@288 $generated@@686)))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@288 $generated@@685)))) (=> (= (ControlFlow 0 20) 19) $generated@@698))))))
(let (($generated@@702  (=> (< $generated@@688 ($generated@@276 0)) (and (=> (= (ControlFlow 0 25) 20) $generated@@701) (=> (= (ControlFlow 0 25) 23) $generated@@700)))))
(let (($generated@@703  (=> (<= ($generated@@276 0) $generated@@688) (and (=> (= (ControlFlow 0 24) 20) $generated@@701) (=> (= (ControlFlow 0 24) 23) $generated@@700)))))
(let (($generated@@704  (and (=> (= (ControlFlow 0 26) 24) $generated@@703) (=> (= (ControlFlow 0 26) 25) $generated@@702))))
(let (($generated@@705 true))
(let (($generated@@706  (=> ($generated@@305 $generated@@686 $generated@@685) (and (=> (= (ControlFlow 0 27) 26) $generated@@704) (=> (= (ControlFlow 0 27) 17) $generated@@705)))))
(let (($generated@@707  (=> (= (ControlFlow 0 6) (- 0 5)) (forall (($generated@@708 Int) ) (!  (=> true (=> (and (<= ($generated@@276 0) $generated@@708) (< $generated@@708 $generated@@687)) (= ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@689 $generated@@691) ($generated@@246 $generated@@708)))) ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@689 $generated@@690) ($generated@@246 $generated@@708)))))))
 :pattern ( ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@689 $generated@@690) ($generated@@246 $generated@@708))))
 :pattern ( ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@689 $generated@@691) ($generated@@246 $generated@@708))))
)))))
(let (($generated@@709  (=> (and (not (and (<= ($generated@@276 0) $generated@@692) (< $generated@@692 $generated@@687))) (= (ControlFlow 0 12) 6)) $generated@@707)))
(let (($generated@@710  (=> (and (<= ($generated@@276 0) $generated@@692) (< $generated@@692 $generated@@687)) (and (=> (= (ControlFlow 0 7) (- 0 11)) (not (= $generated@@691 $generated@@138))) (=> (not (= $generated@@691 $generated@@138)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= 0 $generated@@692) (< $generated@@692 ($generated@@136 $generated@@691)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= $generated@@690 $generated@@138))) (=> (not (= $generated@@690 $generated@@138)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@692) (< $generated@@692 ($generated@@136 $generated@@690)))) (=> (= (ControlFlow 0 7) 6) $generated@@707))))))))))
(let (($generated@@711  (=> (< $generated@@692 ($generated@@276 0)) (and (=> (= (ControlFlow 0 14) 7) $generated@@710) (=> (= (ControlFlow 0 14) 12) $generated@@709)))))
(let (($generated@@712  (=> (<= ($generated@@276 0) $generated@@692) (and (=> (= (ControlFlow 0 13) 7) $generated@@710) (=> (= (ControlFlow 0 13) 12) $generated@@709)))))
(let (($generated@@713  (and (=> (= (ControlFlow 0 15) 13) $generated@@712) (=> (= (ControlFlow 0 15) 14) $generated@@711))))
(let (($generated@@714 true))
(let (($generated@@715  (=> ($generated@@305 $generated@@686 $generated@@685) (and (=> (= (ControlFlow 0 16) 15) $generated@@713) (=> (= (ControlFlow 0 16) 4) $generated@@714)))))
(let (($generated@@716  (=> (and (and (and (not ($generated@@305 $generated@@686 $generated@@685)) (not ($generated@@305 $generated@@686 $generated@@685))) (not ($generated@@0 ($generated@@278 ($generated@@11 true))))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@717 true))
(let (($generated@@718  (=> (= $generated@@693 ($generated@@180 $generated@@138 $generated@@689 $generated@@60 false)) (and (=> (= (ControlFlow 0 28) (- 0 32)) (not (= $generated@@691 $generated@@138))) (=> (not (= $generated@@691 $generated@@138)) (and (=> (= (ControlFlow 0 28) (- 0 31)) (and (<= 0 $generated@@687) (<= $generated@@687 ($generated@@136 $generated@@691)))) (=> (and (<= 0 $generated@@687) (<= $generated@@687 ($generated@@136 $generated@@691))) (=> (= $generated@@686 ($generated@@243 ($generated@@244 $generated@@689 $generated@@691) $generated@@687)) (and (=> (= (ControlFlow 0 28) (- 0 30)) (not (= $generated@@690 $generated@@138))) (=> (not (= $generated@@690 $generated@@138)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= 0 $generated@@687) (<= $generated@@687 ($generated@@136 $generated@@690)))) (=> (and (<= 0 $generated@@687) (<= $generated@@687 ($generated@@136 $generated@@690))) (=> (= $generated@@685 ($generated@@243 ($generated@@244 $generated@@689 $generated@@690) $generated@@687)) (and (and (and (=> (= (ControlFlow 0 28) 27) $generated@@706) (=> (= (ControlFlow 0 28) 16) $generated@@715)) (=> (= (ControlFlow 0 28) 1) $generated@@717)) (=> (= (ControlFlow 0 28) 3) $generated@@716)))))))))))))))
(let (($generated@@719  (=> (and (and ($generated@@148 $generated@@689) ($generated@@694 $generated@@689)) (and ($generated@@140 $generated@@691 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@691 ($generated@@153 $generated@@46) $generated@@689))) (=> (and (and (and (and ($generated@@140 $generated@@690 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@690 ($generated@@153 $generated@@46) $generated@@689)) (<= ($generated@@276 0) $generated@@687)) (and (and ($generated@@140 $generated@@695 ($generated@@282 $generated@@46)) ($generated@@78 $generated@@695 ($generated@@282 $generated@@46) $generated@@689)) true)) (and (and (and ($generated@@140 $generated@@696 ($generated@@282 $generated@@46)) ($generated@@78 $generated@@696 ($generated@@282 $generated@@46) $generated@@689)) true) (and (and (= 1 $generated@@697) (<= $generated@@687 ($generated@@136 $generated@@691))) (and (<= $generated@@687 ($generated@@136 $generated@@690)) (= (ControlFlow 0 33) 28))))) $generated@@718))))
$generated@@719)))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@238 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@239 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@238 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@239 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@239 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@239 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@239 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@238 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@253 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@239 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@239 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@239 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@239 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@238 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@239 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@248 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@248 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@253 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@253 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@253 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@239 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@239 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@239 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@264 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@583) (and ($generated@@161 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@587) (and ($generated@@161 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@172) (= (type $generated@@590) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)) ($generated@@260 ($generated@@238 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))) ($generated@@260 ($generated@@286 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@592)) ($generated@@260 ($generated@@286 $generated@@592)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@279 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@278 $generated@@594)) (= ($generated@@277 $generated@@593) 0)) (= $generated@@593 ($generated@@276 $generated@@594))))
 :pattern ( ($generated@@277 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@79 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@299 $generated@@595) ($generated ($generated@@84 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@600) $generated@@2)) ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@3)) ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@4)) ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@457)) ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@172)) ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@278 $generated@@172)) (= (type $generated@@610) $generated@@67)) (= ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@277 $generated@@609))) ($generated@@239 ($generated@@501 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@501 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@277 $generated@@613))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@309 $generated@@615) ($generated@@248 $generated@@616)) ($generated@@139 ($generated@@354 $generated@@615) ($generated@@248 $generated@@617))) ($generated@@139 ($generated@@385 $generated@@615) ($generated@@248 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) $generated@@67)) ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@139 ($generated@@327 $generated@@618) ($generated@@253 $generated@@619)) ($generated@@139 ($generated@@365 $generated@@618) ($generated@@253 $generated@@620))) ($generated@@139 ($generated@@396 $generated@@618) ($generated@@253 ($generated@@162 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@139 $generated@@621 $generated@@46))
 :pattern ( ($generated@@139 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@139 $generated@@622 $generated@@47))
 :pattern ( ($generated@@139 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@139 $generated@@623 $generated@@44))
 :pattern ( ($generated@@139 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@457) ($generated@@139 $generated@@624 $generated@@45))
 :pattern ( ($generated@@139 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@172) ($generated@@139 $generated@@625 $generated@@48))
 :pattern ( ($generated@@139 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () Int)
(assert  (and (and (and (= (type $generated@@626) $generated@@80) (= (type $generated@@628) $generated@@80)) (= (type $generated@@629) ($generated@@184 $generated@@80 $generated@@4))) (= (type $generated@@630) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@633 true))
(let (($generated@@634  (=> (and (< ($generated@@135 $generated@@626) $generated@@627) (= (ControlFlow 0 5) 1)) $generated@@633)))
(let (($generated@@635  (=> (<= $generated@@627 ($generated@@135 $generated@@626)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@626 $generated@@137))) (=> (not (= $generated@@626 $generated@@137)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@628 $generated@@137))) (=> (not (= $generated@@628 $generated@@137)) (=> (= (ControlFlow 0 2) 1) $generated@@633))))))))
(let (($generated@@636  (=> (= $generated@@629 ($generated@@183 $generated@@137 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= $generated@@626 $generated@@137))) (=> (not (= $generated@@626 $generated@@137)) (and (=> (= (ControlFlow 0 6) 2) $generated@@635) (=> (= (ControlFlow 0 6) 5) $generated@@634)))))))
(let (($generated@@637  (=> (and (and ($generated@@151 $generated@@630) ($generated@@631 $generated@@630)) (and ($generated@@139 $generated@@626 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@626 ($generated@@156 $generated@@46) $generated@@630))) (=> (and (and (and ($generated@@139 $generated@@628 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@628 ($generated@@156 $generated@@46) $generated@@630)) (<= ($generated@@258 0) $generated@@627)) (and (= 1 $generated@@632) (= (ControlFlow 0 8) 6))) $generated@@636))))
$generated@@637))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U Int) T@U)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@286 (T@U Int) T@U)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@389 (Int) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147)  (or (= $generated@@146 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@151) $generated@@81)) (and (and ($generated@@148 $generated@@150) (and (not (= $generated@@151 $generated@@138)) (= ($generated@@139 $generated@@151) ($generated@@137 $generated@@149)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@151)) $generated@@46 $generated@@150))
 :pattern ( ($generated@@136 $generated@@151) ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60) ($generated@@137 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@140 $generated@@152 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@152 ($generated@@79 0)))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) $generated@@81)) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157) ($generated@@78 $generated@@156 ($generated@@137 $generated@@155) $generated@@157)))
 :pattern ( ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@140 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@140 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 16)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@81 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@70 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@81) (= (type $generated@@229) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@230) ($generated@@69 $generated@@4))) (= (type $generated@@232) $generated@@81)) (= (type $generated@@233) ($generated@@69 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@160)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@67) (= (type $generated@@240) $generated@@67)) (= (type $generated@@241) $generated@@169)) (= (type $generated@@242) $generated@@169)) (= ($generated@@140 ($generated@@235 $generated@@241 $generated@@242) ($generated@@159 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@140 ($generated@@235 $generated@@241 $generated@@242) ($generated@@159 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@160) (= (type $generated@@244) $generated@@160)) (= ($generated@@166 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@166 $generated@@243 $generated@@244))
)))
(assert  (and (and (forall (($generated@@248 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@248)) 17)) (forall (($generated@@249 T@T) ) (! (= ($generated@@246 ($generated@@247 $generated@@249)) $generated@@249)
 :pattern ( ($generated@@247 $generated@@249))
))) (forall (($generated@@250 T@U) ($generated@@251 Int) ) (! (let (($generated@@252 ($generated@@246 (type $generated@@250))))
(= (type ($generated@@245 $generated@@250 $generated@@251)) ($generated@@247 $generated@@252)))
 :pattern ( ($generated@@245 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 Int) ) (! (let (($generated@@255 ($generated@@246 (type $generated@@253))))
 (=> (and (= (type $generated@@253) ($generated@@247 $generated@@255)) (= $generated@@254 0)) (= ($generated@@245 $generated@@253 $generated@@254) $generated@@253)))
 :pattern ( ($generated@@245 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@169) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@67)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@264) $generated@@67)) (= ($generated@@140 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@169) ($generated@@0 ($generated@@85 $generated@@263 $generated@@265))) ($generated@@236 $generated@@265 $generated@@264))
 :pattern ( ($generated@@85 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@140 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@67) (= (type $generated@@274) $generated@@67)) (= (type $generated@@275) $generated@@169)) (= (type $generated@@276) $generated@@169)) (= (type $generated@@277) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@277)) (= ($generated@@78 ($generated@@235 $generated@@275 $generated@@276) ($generated@@159 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@78 ($generated@@235 $generated@@275 $generated@@276) ($generated@@159 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 Int) ) (! (let (($generated@@281 ($generated@@246 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@247 $generated@@281)) (=> (and (<= 0 $generated@@280) (<= $generated@@280 ($generated@@278 $generated@@279))) (= ($generated@@278 ($generated@@245 $generated@@279 $generated@@280)) (- ($generated@@278 $generated@@279) $generated@@280)))))
 :pattern ( ($generated@@278 ($generated@@245 $generated@@279 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@71)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@160) (= ($generated@@158 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 Int) ) (! (let (($generated@@289 ($generated@@246 (type $generated@@287))))
(= (type ($generated@@286 $generated@@287 $generated@@288)) $generated@@289))
 :pattern ( ($generated@@286 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@246 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@247 $generated@@292)) (= (type $generated@@291) ($generated@@247 $generated@@292))) (= ($generated@@285 $generated@@290 $generated@@291)  (and (= ($generated@@278 $generated@@290) ($generated@@278 $generated@@291)) (forall (($generated@@293 Int) ) (!  (=> (and (<= 0 $generated@@293) (< $generated@@293 ($generated@@278 $generated@@290))) (= ($generated@@286 $generated@@290 $generated@@293) ($generated@@286 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@286 $generated@@290 $generated@@293))
 :pattern ( ($generated@@286 $generated@@291 $generated@@293))
))))))
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@160) ($generated@@158 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@169) (= (type $generated@@296) $generated@@169)) (= $generated@@294 ($generated@@235 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@158 $generated@@294))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@247 $generated@@298))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@278 ($generated@@297 $generated@@299)) 0)
 :pattern ( ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 Int) ) (! (let (($generated@@303 ($generated@@246 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@247 $generated@@303)) (=> (and (< 0 $generated@@302) (<= $generated@@302 ($generated@@278 $generated@@301))) (< ($generated@@300 ($generated@@245 $generated@@301 $generated@@302)) ($generated@@300 $generated@@301)))))
 :pattern ( ($generated@@300 ($generated@@245 $generated@@301 $generated@@302)))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@67) (= (type $generated@@305) $generated@@81)) (= ($generated@@140 $generated@@305 ($generated@@153 $generated@@304))  (and ($generated@@140 $generated@@305 ($generated@@137 $generated@@304)) (not (= $generated@@305 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@305 ($generated@@153 $generated@@304)))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@169)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@67) (= (type $generated@@310) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@272 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@78 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@272 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 Int) ($generated@@313 Int) ) (! (let (($generated@@314 ($generated@@246 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@247 $generated@@314)) (=> (and (and (<= 0 $generated@@312) (<= 0 $generated@@313)) (< $generated@@313 (- ($generated@@278 $generated@@311) $generated@@312))) (= ($generated@@286 ($generated@@245 $generated@@311 $generated@@312) $generated@@313) ($generated@@286 $generated@@311 (+ $generated@@313 $generated@@312))))))
 :weight 25
 :pattern ( ($generated@@286 ($generated@@245 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@80 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@83 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@80 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@85 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@72)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@323)) $generated@@61) (= ($generated@@321 ($generated@@137 $generated@@323)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@67) (and (= ($generated@@76 ($generated@@153 $generated@@324)) $generated@@62) (= ($generated@@321 ($generated@@153 $generated@@324)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 18)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@83 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@80 $generated@@362 $generated@@2)) (= ($generated@@175 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@85 $generated@@361 $generated@@363))) (<= ($generated ($generated@@85 $generated@@361 $generated@@363)) ($generated@@315 $generated@@361))))
 :pattern ( ($generated@@85 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@175 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@67) (= (type $generated@@365) $generated@@81)) (= ($generated@@140 $generated@@365 ($generated@@137 $generated@@364))  (or (= $generated@@365 $generated@@138) (= ($generated@@139 $generated@@365) ($generated@@137 $generated@@364)))))
 :pattern ( ($generated@@140 $generated@@365 ($generated@@137 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(let (($generated@@368 ($generated@@328 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@327 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@326 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@325 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@329 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@329 (type $generated@@373))))
(let (($generated@@375 ($generated@@328 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@327 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@326 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@347 (type $generated@@377))))
(let (($generated@@379 ($generated@@346 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@345 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@344 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@343 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@347 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@347 (type $generated@@384))))
(let (($generated@@386 ($generated@@346 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@345 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@344 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert  (and (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@390 $generated@@391)) ($generated@@247 $generated@@169))
 :pattern ( ($generated@@388 $generated@@390 $generated@@391))
)) (forall (($generated@@392 Int) ) (! (= (type ($generated@@389 $generated@@392)) ($generated@@69 $generated@@169))
 :pattern ( ($generated@@389 $generated@@392))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@394) $generated@@81)) (forall (($generated@@395 Int) ) (!  (=> (and (<= 0 $generated@@395) (< $generated@@395 ($generated@@278 ($generated@@388 $generated@@393 $generated@@394)))) (= ($generated@@286 ($generated@@388 $generated@@393 $generated@@394) $generated@@395) ($generated@@87 ($generated@@85 $generated@@393 $generated@@394) ($generated@@389 $generated@@395))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@393 $generated@@394) ($generated@@389 $generated@@395)))
 :pattern ( ($generated@@286 ($generated@@388 $generated@@393 $generated@@394) $generated@@395))
)))
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@397) $generated@@67)) (= ($generated@@140 $generated@@396 ($generated@@174 $generated@@397)) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@396 $generated@@398)))) ($generated@@236 $generated@@398 $generated@@397))
 :pattern ( ($generated@@85 $generated@@396 $generated@@398))
))))
 :pattern ( ($generated@@140 $generated@@396 ($generated@@174 $generated@@397)))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@256 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@169) ($generated@@0 ($generated@@85 $generated@@399 $generated@@402))) ($generated@@272 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@85 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@256 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@403 ($generated@@261 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@169) ($generated@@0 ($generated@@85 $generated@@403 $generated@@406))) ($generated@@272 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@85 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@78 $generated@@403 ($generated@@261 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(= ($generated ($generated@@85 ($generated@@316 $generated@@408) $generated@@407)) 0))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@85 ($generated@@316 $generated@@408) $generated@@407)))
)))
(assert  (and (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@409 $generated@@412)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@409 $generated@@412))
)) (forall (($generated@@413 T@T) ($generated@@414 T@U) ) (! (= (type ($generated@@410 $generated@@413 $generated@@414)) $generated@@413)
 :pattern ( ($generated@@410 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@329 (type $generated@@415))))
(let (($generated@@417 ($generated@@328 (type $generated@@415))))
(= (type ($generated@@411 $generated@@415)) ($generated@@80 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@411 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@327 $generated@@169 $generated@@169)) (= (type $generated@@419) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@418) ($generated@@167 ($generated@@410 $generated@@160 $generated@@419)))) (= ($generated@@85 ($generated@@411 $generated@@418) ($generated@@167 ($generated@@410 $generated@@160 $generated@@419))) ($generated@@168 ($generated@@410 $generated@@160 $generated@@419))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@347 (type $generated@@423))))
(let (($generated@@425 ($generated@@346 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@345 $generated@@169 $generated@@169)) (= (type $generated@@427) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@426) ($generated@@167 ($generated@@410 $generated@@160 $generated@@427)))) (= ($generated@@85 ($generated@@421 $generated@@426) ($generated@@167 ($generated@@410 $generated@@160 $generated@@427))) ($generated@@168 ($generated@@410 $generated@@160 $generated@@427))))))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@328 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@327 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@85 ($generated@@411 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@346 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@345 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@327 $generated@@169 $generated@@169)) (= (type $generated@@442) $generated@@67)) (= (type $generated@@443) $generated@@67)) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@441) $generated@@445))) (and ($generated@@272 ($generated@@85 ($generated@@411 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@272 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@441) $generated@@445))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@345 $generated@@169 $generated@@169)) (= (type $generated@@450) $generated@@67)) (= (type $generated@@451) $generated@@67)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@449) $generated@@453))) (and ($generated@@272 ($generated@@85 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@272 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@246 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@247 $generated@@456)) (= (type $generated@@455) ($generated@@247 $generated@@456))) ($generated@@285 $generated@@454 $generated@@455)) (= $generated@@454 $generated@@455)))
 :pattern ( ($generated@@285 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ) (!  (=> (and (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@459) $generated@@81)) (=> (and (and (and ($generated@@148 $generated@@458) (and (not (= $generated@@459 $generated@@138)) (= ($generated@@139 $generated@@459) ($generated@@137 $generated@@457)))) (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@136 $generated@@459)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@458 $generated@@459) $generated@@60))) ($generated@@272 ($generated@@87 ($generated@@85 $generated@@458 $generated@@459) ($generated@@389 $generated@@460)) $generated@@457 $generated@@458)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@458 $generated@@459) ($generated@@389 $generated@@460)) ($generated@@137 $generated@@457))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@80 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@347 (type $generated@@463))))
(let (($generated@@465 ($generated@@346 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@345 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@344 $generated@@465 $generated@@464)) (= ($generated@@343 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@343 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@347 (type $generated@@466))))
(let (($generated@@468 ($generated@@346 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@345 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@344 $generated@@468 $generated@@467)) (= ($generated@@381 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@381 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@347 (type $generated@@469))))
(let (($generated@@471 ($generated@@346 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@345 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@344 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@169))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@329 (type $generated@@472))))
(let (($generated@@474 ($generated@@328 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@327 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@326 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@169) (= (type $generated@@476) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@472) ($generated@@306 ($generated@@235 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@409 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@347 (type $generated@@477))))
(let (($generated@@479 ($generated@@346 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@345 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@344 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@169) (= (type $generated@@481) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@420 $generated@@477) ($generated@@306 ($generated@@235 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@169) ($generated@@236 $generated@@482 $generated@@46)) (and (= ($generated@@306 ($generated@@410 $generated@@2 $generated@@482)) $generated@@482) ($generated@@140 ($generated@@410 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@169) ($generated@@236 $generated@@483 $generated@@47)) (and (= ($generated@@306 ($generated@@410 $generated@@3 $generated@@483)) $generated@@483) ($generated@@140 ($generated@@410 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@169) ($generated@@236 $generated@@484 $generated@@44)) (and (= ($generated@@306 ($generated@@410 $generated@@4 $generated@@484)) $generated@@484) ($generated@@140 ($generated@@410 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@169) ($generated@@236 $generated@@486 $generated@@45)) (and (= ($generated@@306 ($generated@@410 $generated@@485 $generated@@486)) $generated@@486) ($generated@@140 ($generated@@410 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@236 ($generated@@306 $generated@@487) $generated@@488) ($generated@@140 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@236 ($generated@@306 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@81) (<= 0 ($generated@@136 $generated@@489)))
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@83 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@80 $generated@@491 $generated@@2)) (<= 0 ($generated@@315 $generated@@490))))
 :pattern ( ($generated@@315 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@246 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@247 $generated@@493)) (<= 0 ($generated@@278 $generated@@492))))
 :pattern ( ($generated@@278 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@438 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@76 ($generated@@438 $generated@@502 $generated@@503)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@446 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@446 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@76 ($generated@@446 $generated@@512 $generated@@513)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@169) (= (type $generated@@515) $generated@@169)) (= ($generated@@282 ($generated@@235 $generated@@514 $generated@@515)) $generated@@63))
 :pattern ( ($generated@@235 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@516 ($generated@@159 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@159 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= ($generated@@520 ($generated@@159 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@159 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@169) (= (type $generated@@525) $generated@@169)) (= ($generated@@167 ($generated@@235 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@235 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@169) (= (type $generated@@527) $generated@@169)) (= ($generated@@168 ($generated@@235 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@235 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@247 $generated@@169)) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@530 ($generated@@528 $generated@@531) $generated@@532) (forall (($generated@@533 Int) ) (!  (=> (and (<= 0 $generated@@533) (< $generated@@533 ($generated@@278 $generated@@530))) ($generated@@272 ($generated@@286 $generated@@530 $generated@@533) $generated@@531 $generated@@532))
 :pattern ( ($generated@@286 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@78 $generated@@530 ($generated@@528 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@79 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@79 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@256 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@256 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@76 ($generated@@256 $generated@@539)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@261 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@261 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@76 ($generated@@261 $generated@@543)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@174 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@174 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@76 ($generated@@174 $generated@@547)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@528 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@528 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@76 ($generated@@528 $generated@@551)) $generated@@57))
 :pattern ( ($generated@@528 $generated@@551))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@75 ($generated@@389 $generated@@552)) 1)
 :pattern ( ($generated@@389 $generated@@552))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@553 ($generated@@389 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@389 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@67)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@67) (= ($generated@@555 ($generated@@137 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@137 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@67) (= ($generated@@558 ($generated@@153 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@153 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
(= ($generated@@410 $generated@@562 ($generated@@306 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@306 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@327 $generated@@169 $generated@@169)) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@67)) (= ($generated@@140 $generated@@563 ($generated@@438 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@563) $generated@@566))) (and ($generated@@236 ($generated@@85 ($generated@@411 $generated@@563) $generated@@566) $generated@@565) ($generated@@236 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@563) $generated@@566))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@140 $generated@@563 ($generated@@438 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@345 $generated@@169 $generated@@169)) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) (= ($generated@@140 $generated@@567 ($generated@@446 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@567) $generated@@570))) (and ($generated@@236 ($generated@@85 ($generated@@421 $generated@@567) $generated@@570) $generated@@569) ($generated@@236 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@567) $generated@@570))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@140 $generated@@567 ($generated@@446 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@573) $generated@@81)) (and (and ($generated@@148 $generated@@572) (and (not (= $generated@@573 $generated@@138)) (= ($generated@@139 $generated@@573) ($generated@@137 $generated@@571)))) (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@136 $generated@@573))))) ($generated@@236 ($generated@@87 ($generated@@85 $generated@@572 $generated@@573) ($generated@@389 $generated@@574)) $generated@@571))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@572 $generated@@573) ($generated@@389 $generated@@574)) ($generated@@137 $generated@@571))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@169) (= (type $generated@@578) $generated@@169)) (< ($generated@@575 $generated@@577) ($generated@@576 ($generated@@235 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@235 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@169) (= (type $generated@@580) $generated@@169)) (< ($generated@@575 $generated@@580) ($generated@@576 ($generated@@235 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@235 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@169) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) $generated@@67)) ($generated@@236 $generated@@581 ($generated@@438 $generated@@582 $generated@@583))) (and (= ($generated@@306 ($generated@@410 ($generated@@327 $generated@@169 $generated@@169) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@410 ($generated@@327 $generated@@169 $generated@@169) $generated@@581) ($generated@@438 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@236 $generated@@581 ($generated@@438 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@169) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) $generated@@67)) ($generated@@236 $generated@@584 ($generated@@446 $generated@@585 $generated@@586))) (and (= ($generated@@306 ($generated@@410 ($generated@@345 $generated@@169 $generated@@169) $generated@@584)) $generated@@584) ($generated@@140 ($generated@@410 ($generated@@345 $generated@@169 $generated@@169) $generated@@584) ($generated@@446 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@236 $generated@@584 ($generated@@446 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) $generated@@169)) ($generated@@236 $generated@@589 ($generated@@159 $generated@@587 $generated@@588))) (and (= ($generated@@306 ($generated@@410 $generated@@160 $generated@@589)) $generated@@589) ($generated@@140 ($generated@@410 $generated@@160 $generated@@589) ($generated@@159 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@236 $generated@@589 ($generated@@159 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@85 ($generated@@461 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@85 ($generated@@461 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@81)) (= ($generated@@278 ($generated@@388 $generated@@592 $generated@@593)) ($generated@@136 $generated@@593)))
 :pattern ( ($generated@@278 ($generated@@388 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@67) (= (type $generated@@595) $generated@@67)) (and (= ($generated@@76 ($generated@@159 $generated@@594 $generated@@595)) $generated@@64) (= ($generated@@321 ($generated@@159 $generated@@594 $generated@@595)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@160) (= ($generated@@575 ($generated@@306 $generated@@596)) ($generated@@576 $generated@@596)))
 :pattern ( ($generated@@575 ($generated@@306 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@169) ($generated@@236 $generated@@597 ($generated@@79 0))) (and (= ($generated@@306 ($generated@@410 $generated@@2 $generated@@597)) $generated@@597) ($generated@@140 ($generated@@410 ($generated@@80 $generated@@169 $generated@@4) $generated@@597) ($generated@@79 0))))
 :pattern ( ($generated@@236 $generated@@597 ($generated@@79 0)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@169) (= (type $generated@@599) $generated@@67)) ($generated@@236 $generated@@598 ($generated@@256 $generated@@599))) (and (= ($generated@@306 ($generated@@410 ($generated@@80 $generated@@169 $generated@@4) $generated@@598)) $generated@@598) ($generated@@140 ($generated@@410 ($generated@@80 $generated@@169 $generated@@4) $generated@@598) ($generated@@256 $generated@@599))))
 :pattern ( ($generated@@236 $generated@@598 ($generated@@256 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@169) (= (type $generated@@601) $generated@@67)) ($generated@@236 $generated@@600 ($generated@@261 $generated@@601))) (and (= ($generated@@306 ($generated@@410 ($generated@@80 $generated@@169 $generated@@4) $generated@@600)) $generated@@600) ($generated@@140 ($generated@@410 ($generated@@80 $generated@@169 $generated@@4) $generated@@600) ($generated@@261 $generated@@601))))
 :pattern ( ($generated@@236 $generated@@600 ($generated@@261 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@169) (= (type $generated@@603) $generated@@67)) ($generated@@236 $generated@@602 ($generated@@174 $generated@@603))) (and (= ($generated@@306 ($generated@@410 ($generated@@80 $generated@@169 $generated@@2) $generated@@602)) $generated@@602) ($generated@@140 ($generated@@410 ($generated@@80 $generated@@169 $generated@@2) $generated@@602) ($generated@@174 $generated@@603))))
 :pattern ( ($generated@@236 $generated@@602 ($generated@@174 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@169) (= (type $generated@@605) $generated@@67)) ($generated@@236 $generated@@604 ($generated@@528 $generated@@605))) (and (= ($generated@@306 ($generated@@410 ($generated@@247 $generated@@169) $generated@@604)) $generated@@604) ($generated@@140 ($generated@@410 ($generated@@247 $generated@@169) $generated@@604) ($generated@@528 $generated@@605))))
 :pattern ( ($generated@@236 $generated@@604 ($generated@@528 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@67) (= (type $generated@@607) $generated@@169)) ($generated@@236 $generated@@607 ($generated@@137 $generated@@606))) (and (= ($generated@@306 ($generated@@410 $generated@@81 $generated@@607)) $generated@@607) ($generated@@140 ($generated@@410 $generated@@81 $generated@@607) ($generated@@137 $generated@@606))))
 :pattern ( ($generated@@236 $generated@@607 ($generated@@137 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@67) (= (type $generated@@609) $generated@@169)) ($generated@@236 $generated@@609 ($generated@@153 $generated@@608))) (and (= ($generated@@306 ($generated@@410 $generated@@81 $generated@@609)) $generated@@609) ($generated@@140 ($generated@@410 $generated@@81 $generated@@609) ($generated@@153 $generated@@608))))
 :pattern ( ($generated@@236 $generated@@609 ($generated@@153 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ($generated@@612 Int) ) (! (let (($generated@@613 ($generated@@246 (type $generated@@610))))
 (=> (= (type $generated@@610) ($generated@@247 $generated@@613)) (=> (and (and (<= 0 $generated@@611) (<= $generated@@611 $generated@@612)) (< $generated@@612 ($generated@@278 $generated@@610))) (= ($generated@@286 ($generated@@245 $generated@@610 $generated@@611) (- $generated@@612 $generated@@611)) ($generated@@286 $generated@@610 $generated@@612)))))
 :weight 25
 :pattern ( ($generated@@286 $generated@@610 $generated@@612) ($generated@@245 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@614 ($generated@@174 $generated@@615) $generated@@616) (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@614 $generated@@617)))) ($generated@@272 $generated@@617 $generated@@615 $generated@@616))
 :pattern ( ($generated@@85 $generated@@614 $generated@@617))
))))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@174 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ($generated@@620 Int) ) (! (let (($generated@@621 ($generated@@246 (type $generated@@618))))
 (=> (= (type $generated@@618) ($generated@@247 $generated@@621)) (=> (and (and (<= 0 $generated@@619) (<= 0 $generated@@620)) (<= (+ $generated@@619 $generated@@620) ($generated@@278 $generated@@618))) (= ($generated@@245 ($generated@@245 $generated@@618 $generated@@619) $generated@@620) ($generated@@245 $generated@@618 (+ $generated@@619 $generated@@620))))))
 :pattern ( ($generated@@245 ($generated@@245 $generated@@618 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@160) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@624) (and ($generated@@158 $generated@@622) (exists (($generated@@625 T@U) ) (!  (and (= (type $generated@@625) $generated@@67) ($generated@@78 $generated@@622 ($generated@@159 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@159 $generated@@623 $generated@@625) $generated@@624))
))))) ($generated@@272 ($generated@@167 $generated@@622) $generated@@623 $generated@@624))
 :pattern ( ($generated@@272 ($generated@@167 $generated@@622) $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@160) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@628) (and ($generated@@158 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@67) ($generated@@78 $generated@@626 ($generated@@159 $generated@@629 $generated@@627) $generated@@628))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@159 $generated@@629 $generated@@627) $generated@@628))
))))) ($generated@@272 ($generated@@168 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@272 ($generated@@168 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@169) (= (type $generated@@631) $generated@@169)) (= ($generated@@235 ($generated@@268 $generated@@630) ($generated@@268 $generated@@631)) ($generated@@268 ($generated@@235 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@235 ($generated@@268 $generated@@630) ($generated@@268 $generated@@631)))
)))
(assert (forall (($generated@@632 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@266 $generated@@632))) ($generated@@268 ($generated@@306 ($generated@@8 $generated@@632))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@266 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ) (! (= ($generated@@306 ($generated@@268 $generated@@633)) ($generated@@268 ($generated@@306 $generated@@633)))
 :pattern ( ($generated@@306 ($generated@@268 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@246 (type $generated@@634))))
 (=> (and (= (type $generated@@634) ($generated@@247 $generated@@635)) (= ($generated@@278 $generated@@634) 0)) (= $generated@@634 ($generated@@297 $generated@@635))))
 :pattern ( ($generated@@278 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (! (let (($generated@@639 (type $generated@@637)))
 (=> (and (and (= (type $generated@@636) ($generated@@80 $generated@@639 $generated@@2)) (= (type $generated@@638) $generated@@2)) (<= 0 ($generated $generated@@638))) (= ($generated@@315 ($generated@@86 $generated@@636 $generated@@637 $generated@@638)) (+ (- ($generated@@315 $generated@@636) ($generated ($generated@@85 $generated@@636 $generated@@637))) ($generated $generated@@638)))))
 :pattern ( ($generated@@315 ($generated@@86 $generated@@636 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@2)) ($generated@@78 $generated@@641 $generated@@46 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@46 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@643) $generated@@3)) ($generated@@78 $generated@@643 $generated@@47 $generated@@642))
 :pattern ( ($generated@@78 $generated@@643 $generated@@47 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@4)) ($generated@@78 $generated@@645 $generated@@44 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@44 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@485)) ($generated@@78 $generated@@647 $generated@@45 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@45 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@169)) ($generated@@78 $generated@@649 $generated@@48 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@48 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@247 $generated@@169)) (= (type $generated@@651) $generated@@67)) (= ($generated@@140 $generated@@650 ($generated@@528 $generated@@651)) (forall (($generated@@652 Int) ) (!  (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@278 $generated@@650))) ($generated@@236 ($generated@@286 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@286 $generated@@650 $generated@@652))
))))
 :pattern ( ($generated@@140 $generated@@650 ($generated@@528 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@247 $generated@@169)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@278 $generated@@653))) (< ($generated@@576 ($generated@@410 $generated@@160 ($generated@@286 $generated@@653 $generated@@654))) ($generated@@300 $generated@@653))))
 :pattern ( ($generated@@576 ($generated@@410 $generated@@160 ($generated@@286 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@327 $generated@@169 $generated@@169)) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@140 $generated@@655 ($generated@@438 $generated@@656 $generated@@657))) (and (and ($generated@@140 ($generated@@325 $generated@@655) ($generated@@256 $generated@@656)) ($generated@@140 ($generated@@370 $generated@@655) ($generated@@256 $generated@@657))) ($generated@@140 ($generated@@409 $generated@@655) ($generated@@256 ($generated@@159 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@140 $generated@@655 ($generated@@438 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@345 $generated@@169 $generated@@169)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@140 $generated@@658 ($generated@@446 $generated@@659 $generated@@660))) (and (and ($generated@@140 ($generated@@343 $generated@@658) ($generated@@261 $generated@@659)) ($generated@@140 ($generated@@381 $generated@@658) ($generated@@261 $generated@@660))) ($generated@@140 ($generated@@420 $generated@@658) ($generated@@261 ($generated@@159 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@140 $generated@@658 ($generated@@446 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@140 $generated@@661 $generated@@46))
 :pattern ( ($generated@@140 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@140 $generated@@662 $generated@@47))
 :pattern ( ($generated@@140 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@140 $generated@@663 $generated@@44))
 :pattern ( ($generated@@140 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@485) ($generated@@140 $generated@@664 $generated@@45))
 :pattern ( ($generated@@140 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@169) ($generated@@140 $generated@@665 $generated@@48))
 :pattern ( ($generated@@140 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 (T@U) Bool)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@667) ($generated@@247 $generated@@169)) (= (type $generated@@666) ($generated@@247 $generated@@169))) (= (type $generated@@670) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@671) $generated@@81)) (= (type $generated@@672) $generated@@81)) (= (type $generated@@675) ($generated@@181 $generated@@81 $generated@@4))) (= (type $generated@@677) ($generated@@247 $generated@@169))) (= (type $generated@@678) ($generated@@247 $generated@@169))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 34) (let (($generated@@680  (=> (= (ControlFlow 0 19) (- 0 18)) (forall (($generated@@681 Int) ) (!  (=> true (=> (and (<= ($generated@@266 0) $generated@@681) (< $generated@@681 $generated@@668)) (= ($generated ($generated@@410 $generated@@2 ($generated@@286 $generated@@667 $generated@@681))) ($generated ($generated@@410 $generated@@2 ($generated@@286 $generated@@666 $generated@@681))))))
 :pattern ( ($generated@@410 $generated@@2 ($generated@@286 $generated@@666 $generated@@681)))
 :pattern ( ($generated@@410 $generated@@2 ($generated@@286 $generated@@667 $generated@@681)))
)))))
(let (($generated@@682  (=> (and (not (and (<= ($generated@@266 0) $generated@@669) (< $generated@@669 $generated@@668))) (= (ControlFlow 0 23) 19)) $generated@@680)))
(let (($generated@@683  (=> (and (<= ($generated@@266 0) $generated@@669) (< $generated@@669 $generated@@668)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@278 $generated@@667)))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@278 $generated@@666)))) (=> (= (ControlFlow 0 20) 19) $generated@@680))))))
(let (($generated@@684  (=> (< $generated@@669 ($generated@@266 0)) (and (=> (= (ControlFlow 0 25) 20) $generated@@683) (=> (= (ControlFlow 0 25) 23) $generated@@682)))))
(let (($generated@@685  (=> (<= ($generated@@266 0) $generated@@669) (and (=> (= (ControlFlow 0 24) 20) $generated@@683) (=> (= (ControlFlow 0 24) 23) $generated@@682)))))
(let (($generated@@686  (and (=> (= (ControlFlow 0 26) 24) $generated@@685) (=> (= (ControlFlow 0 26) 25) $generated@@684))))
(let (($generated@@687 true))
(let (($generated@@688  (=> ($generated@@285 $generated@@667 $generated@@666) (and (=> (= (ControlFlow 0 27) 26) $generated@@686) (=> (= (ControlFlow 0 27) 17) $generated@@687)))))
(let (($generated@@689  (=> (= (ControlFlow 0 6) (- 0 5)) (forall (($generated@@690 Int) ) (!  (=> true (=> (and (<= $generated@@673 $generated@@690) (< $generated@@690 (+ $generated@@673 $generated@@668))) (= ($generated ($generated@@410 $generated@@2 ($generated@@87 ($generated@@85 $generated@@670 $generated@@672) ($generated@@389 $generated@@690)))) ($generated ($generated@@410 $generated@@2 ($generated@@87 ($generated@@85 $generated@@670 $generated@@671) ($generated@@389 $generated@@690)))))))
 :pattern ( ($generated@@410 $generated@@2 ($generated@@87 ($generated@@85 $generated@@670 $generated@@671) ($generated@@389 $generated@@690))))
 :pattern ( ($generated@@410 $generated@@2 ($generated@@87 ($generated@@85 $generated@@670 $generated@@672) ($generated@@389 $generated@@690))))
)))))
(let (($generated@@691  (=> (and (not (and (<= $generated@@673 $generated@@674) (< $generated@@674 (+ $generated@@673 $generated@@668)))) (= (ControlFlow 0 12) 6)) $generated@@689)))
(let (($generated@@692  (=> (and (<= $generated@@673 $generated@@674) (< $generated@@674 (+ $generated@@673 $generated@@668))) (and (=> (= (ControlFlow 0 7) (- 0 11)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= $generated@@671 $generated@@138))) (=> (not (= $generated@@671 $generated@@138)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@671)))) (=> (= (ControlFlow 0 7) 6) $generated@@689))))))))))
(let (($generated@@693  (=> (< $generated@@674 $generated@@673) (and (=> (= (ControlFlow 0 14) 7) $generated@@692) (=> (= (ControlFlow 0 14) 12) $generated@@691)))))
(let (($generated@@694  (=> (<= $generated@@673 $generated@@674) (and (=> (= (ControlFlow 0 13) 7) $generated@@692) (=> (= (ControlFlow 0 13) 12) $generated@@691)))))
(let (($generated@@695  (and (=> (= (ControlFlow 0 15) 13) $generated@@694) (=> (= (ControlFlow 0 15) 14) $generated@@693))))
(let (($generated@@696 true))
(let (($generated@@697  (=> ($generated@@285 $generated@@667 $generated@@666) (and (=> (= (ControlFlow 0 16) 15) $generated@@695) (=> (= (ControlFlow 0 16) 4) $generated@@696)))))
(let (($generated@@698  (=> (and (and (and (not ($generated@@285 $generated@@667 $generated@@666)) (not ($generated@@285 $generated@@667 $generated@@666))) (not ($generated@@0 ($generated@@268 ($generated@@11 true))))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@699 true))
(let (($generated@@700  (=> (= $generated@@675 ($generated@@180 $generated@@138 $generated@@670 $generated@@60 false)) (and (=> (= (ControlFlow 0 28) (- 0 33)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 28) (- 0 32)) (and (<= 0 $generated@@673) (<= $generated@@673 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@673) (<= $generated@@673 ($generated@@136 $generated@@672))) (=> (= $generated@@667 ($generated@@245 ($generated@@388 $generated@@670 $generated@@672) $generated@@673)) (and (=> (= (ControlFlow 0 28) (- 0 31)) (not (= $generated@@671 $generated@@138))) (=> (not (= $generated@@671 $generated@@138)) (and (=> (= (ControlFlow 0 28) (- 0 30)) (and (<= 0 $generated@@673) (<= $generated@@673 ($generated@@136 $generated@@671)))) (=> (and (<= 0 $generated@@673) (<= $generated@@673 ($generated@@136 $generated@@671))) (=> (= $generated@@666 ($generated@@245 ($generated@@388 $generated@@670 $generated@@671) $generated@@673)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (=> (= $generated@@668 (- ($generated@@136 $generated@@672) $generated@@673)) (and (and (and (=> (= (ControlFlow 0 28) 27) $generated@@688) (=> (= (ControlFlow 0 28) 16) $generated@@697)) (=> (= (ControlFlow 0 28) 1) $generated@@699)) (=> (= (ControlFlow 0 28) 3) $generated@@698))))))))))))))))))
(let (($generated@@701  (=> (and (and ($generated@@148 $generated@@670) ($generated@@676 $generated@@670)) (and ($generated@@140 $generated@@672 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@672 ($generated@@153 $generated@@46) $generated@@670))) (=> (and (and (and (and ($generated@@140 $generated@@671 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@671 ($generated@@153 $generated@@46) $generated@@670)) (<= ($generated@@266 0) $generated@@673)) (and (and ($generated@@140 $generated@@677 ($generated@@528 $generated@@46)) ($generated@@78 $generated@@677 ($generated@@528 $generated@@46) $generated@@670)) true)) (and (and (and ($generated@@140 $generated@@678 ($generated@@528 $generated@@46)) ($generated@@78 $generated@@678 ($generated@@528 $generated@@46) $generated@@670)) true) (and (and (= 1 $generated@@679) (<= $generated@@673 ($generated@@136 $generated@@672))) (and (= ($generated@@136 $generated@@672) ($generated@@136 $generated@@671)) (= (ControlFlow 0 34) 28))))) $generated@@700))))
$generated@@701)))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@238 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@239 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@238 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@239 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@239 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@239 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@239 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@238 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@253 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@239 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@239 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@239 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@239 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@238 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@239 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@248 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@248 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@253 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@253 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@253 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@239 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@239 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@239 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@264 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@583) (and ($generated@@161 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@587) (and ($generated@@161 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@172) (= (type $generated@@590) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)) ($generated@@260 ($generated@@238 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))) ($generated@@260 ($generated@@286 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@592)) ($generated@@260 ($generated@@286 $generated@@592)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@279 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@278 $generated@@594)) (= ($generated@@277 $generated@@593) 0)) (= $generated@@593 ($generated@@276 $generated@@594))))
 :pattern ( ($generated@@277 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@79 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@299 $generated@@595) ($generated ($generated@@84 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@600) $generated@@2)) ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@3)) ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@4)) ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@457)) ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@172)) ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@278 $generated@@172)) (= (type $generated@@610) $generated@@67)) (= ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@277 $generated@@609))) ($generated@@239 ($generated@@501 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@501 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@277 $generated@@613))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@309 $generated@@615) ($generated@@248 $generated@@616)) ($generated@@139 ($generated@@354 $generated@@615) ($generated@@248 $generated@@617))) ($generated@@139 ($generated@@385 $generated@@615) ($generated@@248 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) $generated@@67)) ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@139 ($generated@@327 $generated@@618) ($generated@@253 $generated@@619)) ($generated@@139 ($generated@@365 $generated@@618) ($generated@@253 $generated@@620))) ($generated@@139 ($generated@@396 $generated@@618) ($generated@@253 ($generated@@162 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@139 $generated@@621 $generated@@46))
 :pattern ( ($generated@@139 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@139 $generated@@622 $generated@@47))
 :pattern ( ($generated@@139 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@139 $generated@@623 $generated@@44))
 :pattern ( ($generated@@139 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@457) ($generated@@139 $generated@@624 $generated@@45))
 :pattern ( ($generated@@139 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@172) ($generated@@139 $generated@@625 $generated@@48))
 :pattern ( ($generated@@139 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(assert  (and (and (and (= (type $generated@@626) ($generated@@184 $generated@@80 $generated@@4)) (= (type $generated@@627) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@628) $generated@@80)) (= (type $generated@@631) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@636  (=> (= $generated@@626 ($generated@@183 $generated@@137 $generated@@627 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@628 $generated@@137))) (=> (not (= $generated@@628 $generated@@137)) (=> (and (<= (+ $generated@@629 $generated@@630) ($generated@@135 $generated@@628)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@631 $generated@@137))))))))
(let (($generated@@637  (=> (and (and ($generated@@151 $generated@@627) ($generated@@632 $generated@@627)) (and ($generated@@139 $generated@@628 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@628 ($generated@@156 $generated@@46) $generated@@627))) (=> (and (and (and ($generated@@139 $generated@@631 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@631 ($generated@@156 $generated@@46) $generated@@627)) (and (<= ($generated@@258 0) $generated@@630) (<= ($generated@@258 0) $generated@@633))) (and (and (<= ($generated@@258 0) $generated@@629) (<= ($generated@@258 0) $generated@@634)) (and (= 1 $generated@@635) (= (ControlFlow 0 4) 2)))) $generated@@636))))
$generated@@637)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U Int) T@U)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U) Int)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U Int) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (Int) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (Int) Int)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U Int) T@U)
(declare-fun $generated@@307 (T@U T@U T@U) Bool)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@319 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@T) T@U)
(declare-fun $generated@@381 (T@T T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@T T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@473 (T@U T@U) T@U)
(declare-fun $generated@@481 (T@U T@U) T@U)
(declare-fun $generated@@499 (T@T) T@U)
(declare-fun $generated@@523 () T@T)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@633 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147)  (or (= $generated@@146 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@151) $generated@@81)) (and (and ($generated@@148 $generated@@150) (and (not (= $generated@@151 $generated@@138)) (= ($generated@@139 $generated@@151) ($generated@@137 $generated@@149)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@151)) $generated@@46 $generated@@150))
 :pattern ( ($generated@@136 $generated@@151) ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60) ($generated@@137 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@140 $generated@@152 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@152 ($generated@@79 0)))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) $generated@@81)) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157) ($generated@@78 $generated@@156 ($generated@@137 $generated@@155) $generated@@157)))
 :pattern ( ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert  (and (and (and (forall (($generated@@179 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@179)) 16)) (forall (($generated@@180 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@176 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 Int) ) (! (let (($generated@@183 ($generated@@178 (type $generated@@181))))
(= (type ($generated@@174 $generated@@181 $generated@@182)) ($generated@@176 $generated@@183)))
 :pattern ( ($generated@@174 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(= (type ($generated@@175 $generated@@184 $generated@@185)) ($generated@@176 $generated@@186)))
 :pattern ( ($generated@@175 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Int) ) (! (let (($generated@@190 (type $generated@@188)))
 (=> (= (type $generated@@187) ($generated@@176 $generated@@190)) (=> (and (<= 0 $generated@@189) (<= $generated@@189 ($generated@@177 $generated@@187))) (= ($generated@@174 ($generated@@175 $generated@@187 $generated@@188) $generated@@189) ($generated@@175 ($generated@@174 $generated@@187 $generated@@189) $generated@@188)))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@187 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@195) $generated@@67)) ($generated@@140 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@140 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@81 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@70 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@81) (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@247) ($generated@@69 $generated@@4))) (= (type $generated@@249) $generated@@81)) (= (type $generated@@250) ($generated@@69 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@160)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@169)) (= (type $generated@@259) $generated@@169)) (= ($generated@@140 ($generated@@252 $generated@@258 $generated@@259) ($generated@@159 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@140 ($generated@@252 $generated@@258 $generated@@259) ($generated@@159 $generated@@256 $generated@@257)))
)))
(assert  (and (and (forall (($generated@@263 T@U) ($generated@@264 Int) ) (! (let (($generated@@265 ($generated@@178 (type $generated@@263))))
(= (type ($generated@@260 $generated@@263 $generated@@264)) ($generated@@176 $generated@@265)))
 :pattern ( ($generated@@260 $generated@@263 $generated@@264))
)) (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@261 $generated@@266 $generated@@267)) ($generated@@176 $generated@@169))
 :pattern ( ($generated@@261 $generated@@266 $generated@@267))
))) (forall (($generated@@268 Int) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@69 $generated@@169))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Int) ($generated@@272 Int) ) (!  (=> (and (= (type $generated@@269) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@270) $generated@@81)) (=> (and (and (= (+ $generated@@271 1) $generated@@272) (<= 0 $generated@@271)) (<= $generated@@272 ($generated@@136 $generated@@270))) (= ($generated@@260 ($generated@@261 $generated@@269 $generated@@270) $generated@@272) ($generated@@175 ($generated@@260 ($generated@@261 $generated@@269 $generated@@270) $generated@@271) ($generated@@87 ($generated@@85 $generated@@269 $generated@@270) ($generated@@262 $generated@@271))))))
 :pattern ( ($generated@@260 ($generated@@261 $generated@@269 $generated@@270) $generated@@271) ($generated@@260 ($generated@@261 $generated@@269 $generated@@270) $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@160) (= (type $generated@@274) $generated@@160)) (= ($generated@@166 $generated@@273 $generated@@274) (= $generated@@273 $generated@@274)))
 :pattern ( ($generated@@166 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@178 (type $generated@@275))))
 (=> (and (= (type $generated@@275) ($generated@@176 $generated@@277)) (= $generated@@276 0)) (= ($generated@@174 $generated@@275 $generated@@276) $generated@@275)))
 :pattern ( ($generated@@174 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@67)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@281) $generated@@67)) (= ($generated@@140 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@169) ($generated@@0 ($generated@@85 $generated@@280 $generated@@282))) ($generated@@253 $generated@@282 $generated@@281))
 :pattern ( ($generated@@85 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@140 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@67)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@286) $generated@@67)) (= ($generated@@140 $generated@@285 ($generated@@283 $generated@@286)) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@169) ($generated@@0 ($generated@@85 $generated@@285 $generated@@287))) ($generated@@253 $generated@@287 $generated@@286))
 :pattern ( ($generated@@85 $generated@@285 $generated@@287))
))))
 :pattern ( ($generated@@140 $generated@@285 ($generated@@283 $generated@@286)))
)))
(assert (forall (($generated@@289 Int) ) (! (= ($generated@@288 $generated@@289) $generated@@289)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 (type $generated@@291)))
(= (type ($generated@@290 $generated@@291)) $generated@@292))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@290 $generated@@293) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@67)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) ($generated@@176 $generated@@169)) (= (type $generated@@297) $generated@@169)) (= (type $generated@@298) $generated@@67)) (and ($generated@@140 $generated@@296 ($generated@@294 $generated@@298)) ($generated@@253 $generated@@297 $generated@@298))) ($generated@@140 ($generated@@175 $generated@@296 $generated@@297) ($generated@@294 $generated@@298)))
 :pattern ( ($generated@@140 ($generated@@175 $generated@@296 $generated@@297) ($generated@@294 $generated@@298)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 Int) ) (! (let (($generated@@302 ($generated@@178 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@302))
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 Int) ($generated@@305 Int) ) (! (let (($generated@@306 ($generated@@178 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@176 $generated@@306)) (=> (and (and (<= 0 $generated@@305) (< $generated@@305 $generated@@304)) (< $generated@@305 ($generated@@177 $generated@@303))) (= ($generated@@299 ($generated@@260 $generated@@303 $generated@@304) $generated@@305) ($generated@@299 $generated@@303 $generated@@305)))))
 :weight 25
 :pattern ( ($generated@@299 ($generated@@260 $generated@@303 $generated@@304) $generated@@305))
 :pattern ( ($generated@@299 $generated@@303 $generated@@305) ($generated@@260 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) $generated@@67) (= (type $generated@@309) $generated@@67)) (= (type $generated@@310) $generated@@169)) (= (type $generated@@311) $generated@@169)) (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@312)) (= ($generated@@78 ($generated@@252 $generated@@310 $generated@@311) ($generated@@159 $generated@@308 $generated@@309) $generated@@312)  (and ($generated@@307 $generated@@310 $generated@@308 $generated@@312) ($generated@@307 $generated@@311 $generated@@309 $generated@@312))))
 :pattern ( ($generated@@78 ($generated@@252 $generated@@310 $generated@@311) ($generated@@159 $generated@@308 $generated@@309) $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 Int) ) (! (let (($generated@@315 ($generated@@178 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@176 $generated@@315)) (=> (and (<= 0 $generated@@314) (<= $generated@@314 ($generated@@177 $generated@@313))) (= ($generated@@177 ($generated@@174 $generated@@313 $generated@@314)) (- ($generated@@177 $generated@@313) $generated@@314)))))
 :pattern ( ($generated@@177 ($generated@@174 $generated@@313 $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@71)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@160) (= ($generated@@158 $generated@@318) (= ($generated@@316 $generated@@318) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@178 (type $generated@@320))))
 (=> (and (= (type $generated@@320) ($generated@@176 $generated@@322)) (= (type $generated@@321) ($generated@@176 $generated@@322))) (= ($generated@@319 $generated@@320 $generated@@321)  (and (= ($generated@@177 $generated@@320) ($generated@@177 $generated@@321)) (forall (($generated@@323 Int) ) (!  (=> (and (<= 0 $generated@@323) (< $generated@@323 ($generated@@177 $generated@@320))) (= ($generated@@299 $generated@@320 $generated@@323) ($generated@@299 $generated@@321 $generated@@323)))
 :pattern ( ($generated@@299 $generated@@320 $generated@@323))
 :pattern ( ($generated@@299 $generated@@321 $generated@@323))
))))))
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 Int) ) (! (let (($generated@@327 ($generated@@178 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@176 $generated@@327)) (=> (and (<= 0 $generated@@326) (< $generated@@326 ($generated@@177 $generated@@325))) (< ($generated@@324 ($generated@@260 $generated@@325 $generated@@326)) ($generated@@324 $generated@@325)))))
 :pattern ( ($generated@@324 ($generated@@260 $generated@@325 $generated@@326)))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@160) ($generated@@158 $generated@@328)) (exists (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (and (and (= (type $generated@@329) $generated@@169) (= (type $generated@@330) $generated@@169)) (= $generated@@328 ($generated@@252 $generated@@329 $generated@@330)))
 :no-pattern (type $generated@@329)
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
)))
 :pattern ( ($generated@@158 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@176 $generated@@332))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@T) ) (! (= ($generated@@177 ($generated@@331 $generated@@333)) 0)
 :pattern ( ($generated@@331 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 Int) ) (! (let (($generated@@336 ($generated@@178 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@176 $generated@@336)) (=> (and (< 0 $generated@@335) (<= $generated@@335 ($generated@@177 $generated@@334))) (< ($generated@@324 ($generated@@174 $generated@@334 $generated@@335)) ($generated@@324 $generated@@334)))))
 :pattern ( ($generated@@324 ($generated@@174 $generated@@334 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
 (=> (= (type $generated@@337) ($generated@@176 $generated@@339)) (= ($generated@@177 ($generated@@175 $generated@@337 $generated@@338)) (+ 1 ($generated@@177 $generated@@337)))))
 :pattern ( ($generated@@175 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@67) (= (type $generated@@341) $generated@@81)) (= ($generated@@140 $generated@@341 ($generated@@153 $generated@@340))  (and ($generated@@140 $generated@@341 ($generated@@137 $generated@@340)) (not (= $generated@@341 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@341 ($generated@@153 $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@169)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@67) (= (type $generated@@346) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@307 ($generated@@342 $generated@@344) $generated@@345 $generated@@346) ($generated@@78 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@307 ($generated@@342 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 Int) ($generated@@349 Int) ) (! (let (($generated@@350 ($generated@@178 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@176 $generated@@350)) (=> (and (and (<= 0 $generated@@348) (<= 0 $generated@@349)) (< $generated@@349 (- ($generated@@177 $generated@@347) $generated@@348))) (= ($generated@@299 ($generated@@174 $generated@@347 $generated@@348) $generated@@349) ($generated@@299 $generated@@347 (+ $generated@@349 $generated@@348))))))
 :weight 25
 :pattern ( ($generated@@299 ($generated@@174 $generated@@347 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ) (! (= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@353 $generated@@2))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@83 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@80 $generated@@355 $generated@@2)) (and (= (= ($generated@@351 $generated@@354) 0) (= $generated@@354 ($generated@@352 $generated@@355))) (=> (not (= ($generated@@351 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@85 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@72)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@359)) $generated@@61) (= ($generated@@357 ($generated@@137 $generated@@359)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@67) (and (= ($generated@@76 ($generated@@153 $generated@@360)) $generated@@62) (= ($generated@@357 ($generated@@153 $generated@@360)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@360))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 18)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert  (and (and (and (and (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (= ($generated@@1 ($generated@@381 $generated@@384 $generated@@385)) 19)) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= ($generated@@382 ($generated@@381 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@381 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@383 ($generated@@381 $generated@@388 $generated@@389)) $generated@@389)
 :pattern ( ($generated@@381 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@382 (type $generated@@390))))
(= (type ($generated@@379 $generated@@390)) ($generated@@80 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@390))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= (type ($generated@@380 $generated@@392 $generated@@393)) ($generated@@381 $generated@@392 $generated@@393))
 :pattern ( ($generated@@380 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@T) ) (! (let (($generated@@396 (type $generated@@394)))
 (not ($generated@@0 ($generated@@85 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394))))
 :pattern ( (let (($generated@@396 (type $generated@@394)))
($generated@@85 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394)))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@83 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@80 $generated@@398 $generated@@2)) (= ($generated@@192 $generated@@397) (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@398) (and (<= 0 ($generated ($generated@@85 $generated@@397 $generated@@399))) (<= ($generated ($generated@@85 $generated@@397 $generated@@399)) ($generated@@351 $generated@@397))))
 :pattern ( ($generated@@85 $generated@@397 $generated@@399))
)))))
 :pattern ( ($generated@@192 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@67) (= (type $generated@@401) $generated@@81)) (= ($generated@@140 $generated@@401 ($generated@@137 $generated@@400))  (or (= $generated@@401 $generated@@138) (= ($generated@@139 $generated@@401) ($generated@@137 $generated@@400)))))
 :pattern ( ($generated@@140 $generated@@401 ($generated@@137 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 Int) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
 (=> (= (type $generated@@402) ($generated@@176 $generated@@405)) (and (=> (= $generated@@403 ($generated@@177 $generated@@402)) (= ($generated@@299 ($generated@@175 $generated@@402 $generated@@404) $generated@@403) $generated@@404)) (=> (not (= $generated@@403 ($generated@@177 $generated@@402))) (= ($generated@@299 ($generated@@175 $generated@@402 $generated@@404) $generated@@403) ($generated@@299 $generated@@402 $generated@@403))))))
 :pattern ( ($generated@@299 ($generated@@175 $generated@@402 $generated@@404) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@365 (type $generated@@406))))
(let (($generated@@408 ($generated@@364 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@363 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@362 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@361 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@365 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@80 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@365 (type $generated@@413))))
(let (($generated@@415 ($generated@@364 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@363 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@362 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@383 (type $generated@@417))))
(let (($generated@@419 ($generated@@382 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@381 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@380 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@379 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@383 (type $generated@@422))))
(= (type ($generated@@421 $generated@@422)) ($generated@@80 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@383 (type $generated@@424))))
(let (($generated@@426 ($generated@@382 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@381 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@380 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@425) ($generated@@0 ($generated@@85 ($generated@@421 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@421 $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@429) $generated@@81)) (forall (($generated@@430 Int) ) (!  (=> (and (<= 0 $generated@@430) (< $generated@@430 ($generated@@177 ($generated@@261 $generated@@428 $generated@@429)))) (= ($generated@@299 ($generated@@261 $generated@@428 $generated@@429) $generated@@430) ($generated@@87 ($generated@@85 $generated@@428 $generated@@429) ($generated@@262 $generated@@430))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@428 $generated@@429) ($generated@@262 $generated@@430)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@428 $generated@@429) $generated@@430))
)))
 :pattern ( ($generated@@261 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@432) $generated@@67)) (= ($generated@@140 $generated@@431 ($generated@@191 $generated@@432)) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@431 $generated@@433)))) ($generated@@253 $generated@@433 $generated@@432))
 :pattern ( ($generated@@85 $generated@@431 $generated@@433))
))))
 :pattern ( ($generated@@140 $generated@@431 ($generated@@191 $generated@@432)))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@434) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@435) $generated@@67)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@278 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@169) ($generated@@0 ($generated@@85 $generated@@434 $generated@@437))) ($generated@@307 $generated@@437 $generated@@435 $generated@@436))
 :pattern ( ($generated@@85 $generated@@434 $generated@@437))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@278 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@438) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@438 ($generated@@283 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@169) ($generated@@0 ($generated@@85 $generated@@438 $generated@@441))) ($generated@@307 $generated@@441 $generated@@439 $generated@@440))
 :pattern ( ($generated@@85 $generated@@438 $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@438 ($generated@@283 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(= ($generated ($generated@@85 ($generated@@352 $generated@@443) $generated@@442)) 0))
 :pattern ( (let (($generated@@443 (type $generated@@442)))
($generated@@85 ($generated@@352 $generated@@443) $generated@@442)))
)))
(assert  (and (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@444 $generated@@447)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@444 $generated@@447))
)) (forall (($generated@@448 T@T) ($generated@@449 T@U) ) (! (= (type ($generated@@445 $generated@@448 $generated@@449)) $generated@@448)
 :pattern ( ($generated@@445 $generated@@448 $generated@@449))
))) (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@365 (type $generated@@450))))
(let (($generated@@452 ($generated@@364 (type $generated@@450))))
(= (type ($generated@@446 $generated@@450)) ($generated@@80 $generated@@452 $generated@@451))))
 :pattern ( ($generated@@446 $generated@@450))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@363 $generated@@169 $generated@@169)) (= (type $generated@@454) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@444 $generated@@453) $generated@@454))  (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@453) ($generated@@167 ($generated@@445 $generated@@160 $generated@@454)))) (= ($generated@@85 ($generated@@446 $generated@@453) ($generated@@167 ($generated@@445 $generated@@160 $generated@@454))) ($generated@@168 ($generated@@445 $generated@@160 $generated@@454))))))
 :pattern ( ($generated@@85 ($generated@@444 $generated@@453) $generated@@454))
)))
(assert  (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@457)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@455 $generated@@457))
)) (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@383 (type $generated@@458))))
(let (($generated@@460 ($generated@@382 (type $generated@@458))))
(= (type ($generated@@456 $generated@@458)) ($generated@@80 $generated@@460 $generated@@459))))
 :pattern ( ($generated@@456 $generated@@458))
))))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) ($generated@@381 $generated@@169 $generated@@169)) (= (type $generated@@462) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@455 $generated@@461) $generated@@462))  (and ($generated@@0 ($generated@@85 ($generated@@379 $generated@@461) ($generated@@167 ($generated@@445 $generated@@160 $generated@@462)))) (= ($generated@@85 ($generated@@456 $generated@@461) ($generated@@167 ($generated@@445 $generated@@160 $generated@@462))) ($generated@@168 ($generated@@445 $generated@@160 $generated@@462))))))
 :pattern ( ($generated@@85 ($generated@@455 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@464)))
(let (($generated@@466 ($generated@@364 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@363 $generated@@466 $generated@@465)) (= ($generated@@0 ($generated@@85 ($generated@@410 $generated@@463) $generated@@464)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@466) (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@463) $generated@@467)) (= $generated@@464 ($generated@@85 ($generated@@446 $generated@@463) $generated@@467))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@463) $generated@@467))
 :pattern ( ($generated@@85 ($generated@@446 $generated@@463) $generated@@467))
))))))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
(let (($generated@@471 ($generated@@382 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@381 $generated@@471 $generated@@470)) (= ($generated@@0 ($generated@@85 ($generated@@421 $generated@@468) $generated@@469)) (exists (($generated@@472 T@U) ) (!  (and (= (type $generated@@472) $generated@@471) (and ($generated@@0 ($generated@@85 ($generated@@379 $generated@@468) $generated@@472)) (= $generated@@469 ($generated@@85 ($generated@@456 $generated@@468) $generated@@472))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@468) $generated@@472))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@468) $generated@@472))
))))))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (and (= (type $generated@@476) ($generated@@363 $generated@@169 $generated@@169)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) $generated@@67)) (= (type $generated@@479) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@476) $generated@@480))) (and ($generated@@307 ($generated@@85 ($generated@@446 $generated@@476) $generated@@480) $generated@@478 $generated@@479) ($generated@@307 $generated@@480 $generated@@477 $generated@@479)))
 :pattern ( ($generated@@85 ($generated@@446 $generated@@476) $generated@@480))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@476) $generated@@480))
))))
 :pattern ( ($generated@@78 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (and (= (type $generated@@484) ($generated@@381 $generated@@169 $generated@@169)) (= (type $generated@@485) $generated@@67)) (= (type $generated@@486) $generated@@67)) (= (type $generated@@487) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@484 ($generated@@481 $generated@@485 $generated@@486) $generated@@487) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@484) $generated@@488))) (and ($generated@@307 ($generated@@85 ($generated@@456 $generated@@484) $generated@@488) $generated@@486 $generated@@487) ($generated@@307 $generated@@488 $generated@@485 $generated@@487)))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@484) $generated@@488))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@484) $generated@@488))
))))
 :pattern ( ($generated@@78 $generated@@484 ($generated@@481 $generated@@485 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@178 (type $generated@@489))))
 (=> (and (and (= (type $generated@@489) ($generated@@176 $generated@@491)) (= (type $generated@@490) ($generated@@176 $generated@@491))) ($generated@@319 $generated@@489 $generated@@490)) (= $generated@@489 $generated@@490)))
 :pattern ( ($generated@@319 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@178 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@176 $generated@@494)) (=> (and (<= 0 $generated@@493) (<= $generated@@493 ($generated@@177 $generated@@492))) (= ($generated@@177 ($generated@@260 $generated@@492 $generated@@493)) $generated@@493))))
 :pattern ( ($generated@@177 ($generated@@260 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 Int) ) (!  (=> (and (and (= (type $generated@@495) $generated@@67) (= (type $generated@@496) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@497) $generated@@81)) (=> (and (and (and ($generated@@148 $generated@@496) (and (not (= $generated@@497 $generated@@138)) (= ($generated@@139 $generated@@497) ($generated@@137 $generated@@495)))) (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@136 $generated@@497)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@496 $generated@@497) $generated@@60))) ($generated@@307 ($generated@@87 ($generated@@85 $generated@@496 $generated@@497) ($generated@@262 $generated@@498)) $generated@@495 $generated@@496)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@496 $generated@@497) ($generated@@262 $generated@@498)) ($generated@@137 $generated@@495))
)))
(assert (forall (($generated@@500 T@T) ) (! (= (type ($generated@@499 $generated@@500)) ($generated@@80 $generated@@500 $generated@@4))
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@383 (type $generated@@501))))
(let (($generated@@503 ($generated@@382 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@381 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@380 $generated@@503 $generated@@502)) (= ($generated@@379 $generated@@501) ($generated@@499 $generated@@503))))))
 :pattern ( ($generated@@379 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@383 (type $generated@@504))))
(let (($generated@@506 ($generated@@382 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@381 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@380 $generated@@506 $generated@@505)) (= ($generated@@421 $generated@@504) ($generated@@499 $generated@@505))))))
 :pattern ( ($generated@@421 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@383 (type $generated@@507))))
(let (($generated@@509 ($generated@@382 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@381 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@380 $generated@@509 $generated@@508)) (= ($generated@@455 $generated@@507) ($generated@@499 $generated@@169))))))
 :pattern ( ($generated@@455 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@365 (type $generated@@510))))
(let (($generated@@512 ($generated@@364 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@363 $generated@@512 $generated@@511)) (or (= $generated@@510 ($generated@@362 $generated@@512 $generated@@511)) (exists (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (and (and (= (type $generated@@513) $generated@@169) (= (type $generated@@514) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@444 $generated@@510) ($generated@@342 ($generated@@252 $generated@@513 $generated@@514)))))
 :no-pattern (type $generated@@513)
 :no-pattern (type $generated@@514)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
))))))
 :pattern ( ($generated@@444 $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@383 (type $generated@@515))))
(let (($generated@@517 ($generated@@382 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@381 $generated@@517 $generated@@516)) (or (= $generated@@515 ($generated@@380 $generated@@517 $generated@@516)) (exists (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (and (and (= (type $generated@@518) $generated@@169) (= (type $generated@@519) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@455 $generated@@515) ($generated@@342 ($generated@@252 $generated@@518 $generated@@519)))))
 :no-pattern (type $generated@@518)
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@455 $generated@@515))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@169) ($generated@@253 $generated@@520 $generated@@46)) (and (= ($generated@@342 ($generated@@445 $generated@@2 $generated@@520)) $generated@@520) ($generated@@140 ($generated@@445 $generated@@2 $generated@@520) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@520 $generated@@46))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@169) ($generated@@253 $generated@@521 $generated@@47)) (and (= ($generated@@342 ($generated@@445 $generated@@3 $generated@@521)) $generated@@521) ($generated@@140 ($generated@@445 $generated@@3 $generated@@521) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@521 $generated@@47))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@169) ($generated@@253 $generated@@522 $generated@@44)) (and (= ($generated@@342 ($generated@@445 $generated@@4 $generated@@522)) $generated@@522) ($generated@@140 ($generated@@445 $generated@@4 $generated@@522) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@522 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@523) 20))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@169) ($generated@@253 $generated@@524 $generated@@45)) (and (= ($generated@@342 ($generated@@445 $generated@@523 $generated@@524)) $generated@@524) ($generated@@140 ($generated@@445 $generated@@523 $generated@@524) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@524 $generated@@45))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@253 ($generated@@342 $generated@@525) $generated@@526) ($generated@@140 $generated@@525 $generated@@526)))
 :pattern ( ($generated@@253 ($generated@@342 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@81) (<= 0 ($generated@@136 $generated@@527)))
 :no-pattern (type $generated@@527)
 :no-pattern ($generated $generated@@527)
 :no-pattern ($generated@@0 $generated@@527)
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@83 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@80 $generated@@529 $generated@@2)) (<= 0 ($generated@@351 $generated@@528))))
 :pattern ( ($generated@@351 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@178 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@176 $generated@@531)) (<= 0 ($generated@@177 $generated@@530))))
 :pattern ( ($generated@@177 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (= ($generated@@532 ($generated@@473 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@473 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= ($generated@@536 ($generated@@473 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@473 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (= ($generated@@76 ($generated@@473 $generated@@540 $generated@@541)) $generated@@58))
 :pattern ( ($generated@@473 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= ($generated@@542 ($generated@@481 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@481 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@67) (= (type $generated@@549) $generated@@67)) (= ($generated@@546 ($generated@@481 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@481 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@67) (= (type $generated@@551) $generated@@67)) (= ($generated@@76 ($generated@@481 $generated@@550 $generated@@551)) $generated@@59))
 :pattern ( ($generated@@481 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@169) (= (type $generated@@553) $generated@@169)) (= ($generated@@316 ($generated@@252 $generated@@552 $generated@@553)) $generated@@63))
 :pattern ( ($generated@@252 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= ($generated@@554 ($generated@@159 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@159 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@67) (= (type $generated@@561) $generated@@67)) (= ($generated@@558 ($generated@@159 $generated@@560 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@159 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@169) (= (type $generated@@563) $generated@@169)) (= ($generated@@167 ($generated@@252 $generated@@562 $generated@@563)) $generated@@562))
 :pattern ( ($generated@@252 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@169) (= (type $generated@@565) $generated@@169)) (= ($generated@@168 ($generated@@252 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@252 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@176 $generated@@169)) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@566 ($generated@@294 $generated@@567) $generated@@568) (forall (($generated@@569 Int) ) (!  (=> (and (<= 0 $generated@@569) (< $generated@@569 ($generated@@177 $generated@@566))) ($generated@@307 ($generated@@299 $generated@@566 $generated@@569) $generated@@567 $generated@@568))
 :pattern ( ($generated@@299 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@78 $generated@@566 ($generated@@294 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@570 ($generated@@79 $generated@@571)) $generated@@571)
 :pattern ( ($generated@@79 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@67)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@67) (= ($generated@@572 ($generated@@278 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@278 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@67) (= ($generated@@76 ($generated@@278 $generated@@575)) $generated@@54))
 :pattern ( ($generated@@278 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@67)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@67) (= ($generated@@576 ($generated@@283 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@283 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@67) (= ($generated@@76 ($generated@@283 $generated@@579)) $generated@@55))
 :pattern ( ($generated@@283 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@67)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@67) (= ($generated@@580 ($generated@@191 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@191 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@67) (= ($generated@@76 ($generated@@191 $generated@@583)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@67) (= ($generated@@584 ($generated@@294 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@294 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@67) (= ($generated@@76 ($generated@@294 $generated@@587)) $generated@@57))
 :pattern ( ($generated@@294 $generated@@587))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@75 ($generated@@262 $generated@@588)) 1)
 :pattern ( ($generated@@262 $generated@@588))
)))
(assert (forall (($generated@@590 Int) ) (! (= ($generated@@589 ($generated@@262 $generated@@590)) $generated@@590)
 :pattern ( ($generated@@262 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@67)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@67) (= ($generated@@591 ($generated@@137 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@137 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@67)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@67) (= ($generated@@594 ($generated@@153 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@153 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
(= ($generated@@445 $generated@@598 ($generated@@342 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@342 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@363 $generated@@169 $generated@@169)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) (= ($generated@@140 $generated@@599 ($generated@@473 $generated@@600 $generated@@601)) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@599) $generated@@602))) (and ($generated@@253 ($generated@@85 ($generated@@446 $generated@@599) $generated@@602) $generated@@601) ($generated@@253 $generated@@602 $generated@@600)))
 :pattern ( ($generated@@85 ($generated@@446 $generated@@599) $generated@@602))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@599) $generated@@602))
))))
 :pattern ( ($generated@@140 $generated@@599 ($generated@@473 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@381 $generated@@169 $generated@@169)) (= (type $generated@@604) $generated@@67)) (= (type $generated@@605) $generated@@67)) (= ($generated@@140 $generated@@603 ($generated@@481 $generated@@604 $generated@@605)) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@603) $generated@@606))) (and ($generated@@253 ($generated@@85 ($generated@@456 $generated@@603) $generated@@606) $generated@@605) ($generated@@253 $generated@@606 $generated@@604)))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@603) $generated@@606))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@603) $generated@@606))
))))
 :pattern ( ($generated@@140 $generated@@603 ($generated@@481 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@67) (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@609) $generated@@81)) (and (and ($generated@@148 $generated@@608) (and (not (= $generated@@609 $generated@@138)) (= ($generated@@139 $generated@@609) ($generated@@137 $generated@@607)))) (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@136 $generated@@609))))) ($generated@@253 ($generated@@87 ($generated@@85 $generated@@608 $generated@@609) ($generated@@262 $generated@@610)) $generated@@607))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@608 $generated@@609) ($generated@@262 $generated@@610)) ($generated@@137 $generated@@607))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@169) (= (type $generated@@614) $generated@@169)) (< ($generated@@611 $generated@@613) ($generated@@612 ($generated@@252 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@252 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@169) (= (type $generated@@616) $generated@@169)) (< ($generated@@611 $generated@@616) ($generated@@612 ($generated@@252 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@252 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@169) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@253 $generated@@617 ($generated@@473 $generated@@618 $generated@@619))) (and (= ($generated@@342 ($generated@@445 ($generated@@363 $generated@@169 $generated@@169) $generated@@617)) $generated@@617) ($generated@@140 ($generated@@445 ($generated@@363 $generated@@169 $generated@@169) $generated@@617) ($generated@@473 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@253 $generated@@617 ($generated@@473 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@169) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@253 $generated@@620 ($generated@@481 $generated@@621 $generated@@622))) (and (= ($generated@@342 ($generated@@445 ($generated@@381 $generated@@169 $generated@@169) $generated@@620)) $generated@@620) ($generated@@140 ($generated@@445 ($generated@@381 $generated@@169 $generated@@169) $generated@@620) ($generated@@481 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@253 $generated@@620 ($generated@@481 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@67) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) $generated@@169)) ($generated@@253 $generated@@625 ($generated@@159 $generated@@623 $generated@@624))) (and (= ($generated@@342 ($generated@@445 $generated@@160 $generated@@625)) $generated@@625) ($generated@@140 ($generated@@445 $generated@@160 $generated@@625) ($generated@@159 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@253 $generated@@625 ($generated@@159 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
 (not ($generated@@0 ($generated@@85 ($generated@@499 $generated@@627) $generated@@626))))
 :pattern ( (let (($generated@@627 (type $generated@@626)))
($generated@@85 ($generated@@499 $generated@@627) $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@81)) (= ($generated@@177 ($generated@@261 $generated@@628 $generated@@629)) ($generated@@136 $generated@@629)))
 :pattern ( ($generated@@177 ($generated@@261 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@67) (= (type $generated@@631) $generated@@67)) (and (= ($generated@@76 ($generated@@159 $generated@@630 $generated@@631)) $generated@@64) (= ($generated@@357 ($generated@@159 $generated@@630 $generated@@631)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@630 $generated@@631))
)))
(assert  (and (forall (($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@178 (type $generated@@634))))
(= (type ($generated@@632 $generated@@634)) ($generated@@176 $generated@@635)))
 :pattern ( ($generated@@632 $generated@@634))
)) (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@178 (type $generated@@636))))
(= (type ($generated@@633 $generated@@636)) $generated@@637))
 :pattern ( ($generated@@633 $generated@@636))
))))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@639)))
 (=> (= (type $generated@@638) ($generated@@176 $generated@@640)) (and (= ($generated@@632 ($generated@@175 $generated@@638 $generated@@639)) $generated@@638) (= ($generated@@633 ($generated@@175 $generated@@638 $generated@@639)) $generated@@639))))
 :pattern ( ($generated@@175 $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@160) (= ($generated@@611 ($generated@@342 $generated@@641)) ($generated@@612 $generated@@641)))
 :pattern ( ($generated@@611 ($generated@@342 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@169) ($generated@@253 $generated@@642 ($generated@@79 0))) (and (= ($generated@@342 ($generated@@445 $generated@@2 $generated@@642)) $generated@@642) ($generated@@140 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@642) ($generated@@79 0))))
 :pattern ( ($generated@@253 $generated@@642 ($generated@@79 0)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@169) (= (type $generated@@644) $generated@@67)) ($generated@@253 $generated@@643 ($generated@@278 $generated@@644))) (and (= ($generated@@342 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@643)) $generated@@643) ($generated@@140 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@643) ($generated@@278 $generated@@644))))
 :pattern ( ($generated@@253 $generated@@643 ($generated@@278 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@169) (= (type $generated@@646) $generated@@67)) ($generated@@253 $generated@@645 ($generated@@283 $generated@@646))) (and (= ($generated@@342 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@645)) $generated@@645) ($generated@@140 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@645) ($generated@@283 $generated@@646))))
 :pattern ( ($generated@@253 $generated@@645 ($generated@@283 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@169) (= (type $generated@@648) $generated@@67)) ($generated@@253 $generated@@647 ($generated@@191 $generated@@648))) (and (= ($generated@@342 ($generated@@445 ($generated@@80 $generated@@169 $generated@@2) $generated@@647)) $generated@@647) ($generated@@140 ($generated@@445 ($generated@@80 $generated@@169 $generated@@2) $generated@@647) ($generated@@191 $generated@@648))))
 :pattern ( ($generated@@253 $generated@@647 ($generated@@191 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) $generated@@169) (= (type $generated@@650) $generated@@67)) ($generated@@253 $generated@@649 ($generated@@294 $generated@@650))) (and (= ($generated@@342 ($generated@@445 ($generated@@176 $generated@@169) $generated@@649)) $generated@@649) ($generated@@140 ($generated@@445 ($generated@@176 $generated@@169) $generated@@649) ($generated@@294 $generated@@650))))
 :pattern ( ($generated@@253 $generated@@649 ($generated@@294 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@67) (= (type $generated@@652) $generated@@169)) ($generated@@253 $generated@@652 ($generated@@137 $generated@@651))) (and (= ($generated@@342 ($generated@@445 $generated@@81 $generated@@652)) $generated@@652) ($generated@@140 ($generated@@445 $generated@@81 $generated@@652) ($generated@@137 $generated@@651))))
 :pattern ( ($generated@@253 $generated@@652 ($generated@@137 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@67) (= (type $generated@@654) $generated@@169)) ($generated@@253 $generated@@654 ($generated@@153 $generated@@653))) (and (= ($generated@@342 ($generated@@445 $generated@@81 $generated@@654)) $generated@@654) ($generated@@140 ($generated@@445 $generated@@81 $generated@@654) ($generated@@153 $generated@@653))))
 :pattern ( ($generated@@253 $generated@@654 ($generated@@153 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ($generated@@657 Int) ) (! (let (($generated@@658 ($generated@@178 (type $generated@@655))))
 (=> (= (type $generated@@655) ($generated@@176 $generated@@658)) (=> (and (and (<= 0 $generated@@656) (<= $generated@@656 $generated@@657)) (< $generated@@657 ($generated@@177 $generated@@655))) (= ($generated@@299 ($generated@@174 $generated@@655 $generated@@656) (- $generated@@657 $generated@@656)) ($generated@@299 $generated@@655 $generated@@657)))))
 :weight 25
 :pattern ( ($generated@@299 $generated@@655 $generated@@657) ($generated@@174 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@660) $generated@@67)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@659 ($generated@@191 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@659 $generated@@662)))) ($generated@@307 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@85 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@78 $generated@@659 ($generated@@191 $generated@@660) $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ($generated@@665 Int) ) (! (let (($generated@@666 ($generated@@178 (type $generated@@663))))
 (=> (= (type $generated@@663) ($generated@@176 $generated@@666)) (=> (and (and (<= 0 $generated@@664) (<= 0 $generated@@665)) (<= (+ $generated@@664 $generated@@665) ($generated@@177 $generated@@663))) (= ($generated@@174 ($generated@@174 $generated@@663 $generated@@664) $generated@@665) ($generated@@174 $generated@@663 (+ $generated@@664 $generated@@665))))))
 :pattern ( ($generated@@174 ($generated@@174 $generated@@663 $generated@@664) $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@160) (= (type $generated@@668) $generated@@67)) (= (type $generated@@669) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@669) (and ($generated@@158 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@67) ($generated@@78 $generated@@667 ($generated@@159 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@78 $generated@@667 ($generated@@159 $generated@@668 $generated@@670) $generated@@669))
))))) ($generated@@307 ($generated@@167 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@307 ($generated@@167 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@160) (= (type $generated@@672) $generated@@67)) (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@673) (and ($generated@@158 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@67) ($generated@@78 $generated@@671 ($generated@@159 $generated@@674 $generated@@672) $generated@@673))
 :pattern ( ($generated@@78 $generated@@671 ($generated@@159 $generated@@674 $generated@@672) $generated@@673))
))))) ($generated@@307 ($generated@@168 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@307 ($generated@@168 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@169) (= (type $generated@@676) $generated@@169)) (= ($generated@@252 ($generated@@290 $generated@@675) ($generated@@290 $generated@@676)) ($generated@@290 ($generated@@252 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@252 ($generated@@290 $generated@@675) ($generated@@290 $generated@@676)))
)))
(assert (forall (($generated@@677 Int) ) (! (= ($generated@@342 ($generated@@8 ($generated@@288 $generated@@677))) ($generated@@290 ($generated@@342 ($generated@@8 $generated@@677))))
 :pattern ( ($generated@@342 ($generated@@8 ($generated@@288 $generated@@677))))
)))
(assert (forall (($generated@@678 T@U) ) (! (= ($generated@@342 ($generated@@290 $generated@@678)) ($generated@@290 ($generated@@342 $generated@@678)))
 :pattern ( ($generated@@342 ($generated@@290 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@178 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@176 $generated@@680)) (= ($generated@@177 $generated@@679) 0)) (= $generated@@679 ($generated@@331 $generated@@680))))
 :pattern ( ($generated@@177 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (! (let (($generated@@683 ($generated@@178 (type $generated@@681))))
 (=> (and (= (type $generated@@681) ($generated@@176 $generated@@683)) (= $generated@@682 0)) (= ($generated@@260 $generated@@681 $generated@@682) ($generated@@331 $generated@@683))))
 :pattern ( ($generated@@260 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 (type $generated@@685)))
 (=> (and (and (= (type $generated@@684) ($generated@@80 $generated@@687 $generated@@2)) (= (type $generated@@686) $generated@@2)) (<= 0 ($generated $generated@@686))) (= ($generated@@351 ($generated@@86 $generated@@684 $generated@@685 $generated@@686)) (+ (- ($generated@@351 $generated@@684) ($generated ($generated@@85 $generated@@684 $generated@@685))) ($generated $generated@@686)))))
 :pattern ( ($generated@@351 ($generated@@86 $generated@@684 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@689) $generated@@2)) ($generated@@78 $generated@@689 $generated@@46 $generated@@688))
 :pattern ( ($generated@@78 $generated@@689 $generated@@46 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@691) $generated@@3)) ($generated@@78 $generated@@691 $generated@@47 $generated@@690))
 :pattern ( ($generated@@78 $generated@@691 $generated@@47 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@693) $generated@@4)) ($generated@@78 $generated@@693 $generated@@44 $generated@@692))
 :pattern ( ($generated@@78 $generated@@693 $generated@@44 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@695) $generated@@523)) ($generated@@78 $generated@@695 $generated@@45 $generated@@694))
 :pattern ( ($generated@@78 $generated@@695 $generated@@45 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@697) $generated@@169)) ($generated@@78 $generated@@697 $generated@@48 $generated@@696))
 :pattern ( ($generated@@78 $generated@@697 $generated@@48 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@176 $generated@@169)) (= (type $generated@@699) $generated@@67)) (= ($generated@@140 $generated@@698 ($generated@@294 $generated@@699)) (forall (($generated@@700 Int) ) (!  (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@177 $generated@@698))) ($generated@@253 ($generated@@299 $generated@@698 $generated@@700) $generated@@699))
 :pattern ( ($generated@@299 $generated@@698 $generated@@700))
))))
 :pattern ( ($generated@@140 $generated@@698 ($generated@@294 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 Int) ) (!  (=> (= (type $generated@@701) ($generated@@176 $generated@@169)) (=> (and (<= 0 $generated@@702) (< $generated@@702 ($generated@@177 $generated@@701))) (< ($generated@@612 ($generated@@445 $generated@@160 ($generated@@299 $generated@@701 $generated@@702))) ($generated@@324 $generated@@701))))
 :pattern ( ($generated@@612 ($generated@@445 $generated@@160 ($generated@@299 $generated@@701 $generated@@702))))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (and (= (type $generated@@703) ($generated@@363 $generated@@169 $generated@@169)) (= (type $generated@@704) $generated@@67)) (= (type $generated@@705) $generated@@67)) ($generated@@140 $generated@@703 ($generated@@473 $generated@@704 $generated@@705))) (and (and ($generated@@140 ($generated@@361 $generated@@703) ($generated@@278 $generated@@704)) ($generated@@140 ($generated@@410 $generated@@703) ($generated@@278 $generated@@705))) ($generated@@140 ($generated@@444 $generated@@703) ($generated@@278 ($generated@@159 $generated@@704 $generated@@705)))))
 :pattern ( ($generated@@140 $generated@@703 ($generated@@473 $generated@@704 $generated@@705)))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) ($generated@@381 $generated@@169 $generated@@169)) (= (type $generated@@707) $generated@@67)) (= (type $generated@@708) $generated@@67)) ($generated@@140 $generated@@706 ($generated@@481 $generated@@707 $generated@@708))) (and (and ($generated@@140 ($generated@@379 $generated@@706) ($generated@@283 $generated@@707)) ($generated@@140 ($generated@@421 $generated@@706) ($generated@@283 $generated@@708))) ($generated@@140 ($generated@@455 $generated@@706) ($generated@@283 ($generated@@159 $generated@@707 $generated@@708)))))
 :pattern ( ($generated@@140 $generated@@706 ($generated@@481 $generated@@707 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@2) ($generated@@140 $generated@@709 $generated@@46))
 :pattern ( ($generated@@140 $generated@@709 $generated@@46))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@3) ($generated@@140 $generated@@710 $generated@@47))
 :pattern ( ($generated@@140 $generated@@710 $generated@@47))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@4) ($generated@@140 $generated@@711 $generated@@44))
 :pattern ( ($generated@@140 $generated@@711 $generated@@44))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@523) ($generated@@140 $generated@@712 $generated@@45))
 :pattern ( ($generated@@140 $generated@@712 $generated@@45))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@169) ($generated@@140 $generated@@713 $generated@@48))
 :pattern ( ($generated@@140 $generated@@713 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () Int)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () Int)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () Int)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () Int)
(declare-fun $generated@@727 () Int)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 (T@U) Bool)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@721) ($generated@@176 $generated@@169)) (= (type $generated@@723) ($generated@@176 $generated@@169))) (= (type $generated@@715) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@716) $generated@@81)) (= (type $generated@@718) $generated@@81)) (= (type $generated@@728) ($generated@@198 $generated@@81 $generated@@4))) (= (type $generated@@730) ($generated@@176 $generated@@169))) (= (type $generated@@731) ($generated@@176 $generated@@169))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 66) (let (($generated@@733  (=> (= (ControlFlow 0 48) (- 0 47)) (forall (($generated@@734 Int) )  (=> true (=> (and (<= ($generated@@288 0) $generated@@734) (< $generated@@734 $generated@@714)) (= ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@715 $generated@@716) ($generated@@262 (+ $generated@@717 $generated@@734))))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@715 $generated@@718) ($generated@@262 (+ $generated@@719 $generated@@734))))))))))))
(let (($generated@@735  (=> (and (not (and (<= ($generated@@288 0) $generated@@720) (< $generated@@720 $generated@@714))) (= (ControlFlow 0 54) 48)) $generated@@733)))
(let (($generated@@736  (=> (and (<= ($generated@@288 0) $generated@@720) (< $generated@@720 $generated@@714)) (and (=> (= (ControlFlow 0 49) (- 0 53)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 49) (- 0 52)) (and (<= 0 (+ $generated@@717 $generated@@720)) (< (+ $generated@@717 $generated@@720) ($generated@@136 $generated@@716)))) (and (=> (= (ControlFlow 0 49) (- 0 51)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 49) (- 0 50)) (and (<= 0 (+ $generated@@719 $generated@@720)) (< (+ $generated@@719 $generated@@720) ($generated@@136 $generated@@718)))) (=> (= (ControlFlow 0 49) 48) $generated@@733))))))))))
(let (($generated@@737  (=> (< $generated@@720 ($generated@@288 0)) (and (=> (= (ControlFlow 0 56) 49) $generated@@736) (=> (= (ControlFlow 0 56) 54) $generated@@735)))))
(let (($generated@@738  (=> (<= ($generated@@288 0) $generated@@720) (and (=> (= (ControlFlow 0 55) 49) $generated@@736) (=> (= (ControlFlow 0 55) 54) $generated@@735)))))
(let (($generated@@739  (and (=> (= (ControlFlow 0 57) 55) $generated@@738) (=> (= (ControlFlow 0 57) 56) $generated@@737))))
(let (($generated@@740  (=> (= (ControlFlow 0 38) (- 0 37)) (forall (($generated@@741 Int) ) (!  (=> true (=> (and (<= ($generated@@288 0) $generated@@741) (< $generated@@741 $generated@@714)) (= ($generated ($generated@@445 $generated@@2 ($generated@@299 $generated@@721 $generated@@741))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@715 $generated@@718) ($generated@@262 (+ $generated@@719 $generated@@741))))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@299 $generated@@721 $generated@@741)))
)))))
(let (($generated@@742  (=> (and (not (and (<= ($generated@@288 0) $generated@@722) (< $generated@@722 $generated@@714))) (= (ControlFlow 0 43) 38)) $generated@@740)))
(let (($generated@@743  (=> (and (<= ($generated@@288 0) $generated@@722) (< $generated@@722 $generated@@714)) (and (=> (= (ControlFlow 0 39) (- 0 42)) (and (<= 0 $generated@@722) (< $generated@@722 ($generated@@177 $generated@@721)))) (and (=> (= (ControlFlow 0 39) (- 0 41)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 39) (- 0 40)) (and (<= 0 (+ $generated@@719 $generated@@722)) (< (+ $generated@@719 $generated@@722) ($generated@@136 $generated@@718)))) (=> (= (ControlFlow 0 39) 38) $generated@@740))))))))
(let (($generated@@744  (=> (< $generated@@722 ($generated@@288 0)) (and (=> (= (ControlFlow 0 45) 39) $generated@@743) (=> (= (ControlFlow 0 45) 43) $generated@@742)))))
(let (($generated@@745  (=> (<= ($generated@@288 0) $generated@@722) (and (=> (= (ControlFlow 0 44) 39) $generated@@743) (=> (= (ControlFlow 0 44) 43) $generated@@742)))))
(let (($generated@@746  (and (=> (= (ControlFlow 0 46) 44) $generated@@745) (=> (= (ControlFlow 0 46) 45) $generated@@744))))
(let (($generated@@747  (=> (= (ControlFlow 0 28) (- 0 27)) (forall (($generated@@748 Int) ) (!  (=> true (=> (and (<= ($generated@@288 0) $generated@@748) (< $generated@@748 $generated@@714)) (= ($generated ($generated@@445 $generated@@2 ($generated@@299 $generated@@723 $generated@@748))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@715 $generated@@716) ($generated@@262 (+ $generated@@717 $generated@@748))))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@299 $generated@@723 $generated@@748)))
)))))
(let (($generated@@749  (=> (and (not (and (<= ($generated@@288 0) $generated@@724) (< $generated@@724 $generated@@714))) (= (ControlFlow 0 33) 28)) $generated@@747)))
(let (($generated@@750  (=> (and (<= ($generated@@288 0) $generated@@724) (< $generated@@724 $generated@@714)) (and (=> (= (ControlFlow 0 29) (- 0 32)) (and (<= 0 $generated@@724) (< $generated@@724 ($generated@@177 $generated@@723)))) (and (=> (= (ControlFlow 0 29) (- 0 31)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 29) (- 0 30)) (and (<= 0 (+ $generated@@717 $generated@@724)) (< (+ $generated@@717 $generated@@724) ($generated@@136 $generated@@716)))) (=> (= (ControlFlow 0 29) 28) $generated@@747))))))))
(let (($generated@@751  (=> (< $generated@@724 ($generated@@288 0)) (and (=> (= (ControlFlow 0 35) 29) $generated@@750) (=> (= (ControlFlow 0 35) 33) $generated@@749)))))
(let (($generated@@752  (=> (<= ($generated@@288 0) $generated@@724) (and (=> (= (ControlFlow 0 34) 29) $generated@@750) (=> (= (ControlFlow 0 34) 33) $generated@@749)))))
(let (($generated@@753  (and (=> (= (ControlFlow 0 36) 34) $generated@@752) (=> (= (ControlFlow 0 36) 35) $generated@@751))))
(let (($generated@@754  (=> (= (ControlFlow 0 19) (- 0 18)) (forall (($generated@@755 Int) )  (=> true (=> (and (<= $generated@@717 $generated@@755) (< $generated@@755 (+ $generated@@717 $generated@@714))) (= ($generated ($generated@@445 $generated@@2 ($generated@@299 $generated@@723 (- $generated@@755 $generated@@717)))) ($generated ($generated@@445 $generated@@2 ($generated@@299 $generated@@721 (- $generated@@755 $generated@@717)))))))))))
(let (($generated@@756  (=> (and (not (and (<= $generated@@717 $generated@@725) (< $generated@@725 (+ $generated@@717 $generated@@714)))) (= (ControlFlow 0 23) 19)) $generated@@754)))
(let (($generated@@757  (=> (and (<= $generated@@717 $generated@@725) (< $generated@@725 (+ $generated@@717 $generated@@714))) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 (- $generated@@725 $generated@@717)) (< (- $generated@@725 $generated@@717) ($generated@@177 $generated@@723)))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 (- $generated@@725 $generated@@717)) (< (- $generated@@725 $generated@@717) ($generated@@177 $generated@@721)))) (=> (= (ControlFlow 0 20) 19) $generated@@754))))))
(let (($generated@@758  (=> (< $generated@@725 $generated@@717) (and (=> (= (ControlFlow 0 25) 20) $generated@@757) (=> (= (ControlFlow 0 25) 23) $generated@@756)))))
(let (($generated@@759  (=> (<= $generated@@717 $generated@@725) (and (=> (= (ControlFlow 0 24) 20) $generated@@757) (=> (= (ControlFlow 0 24) 23) $generated@@756)))))
(let (($generated@@760  (and (=> (= (ControlFlow 0 26) 24) $generated@@759) (=> (= (ControlFlow 0 26) 25) $generated@@758))))
(let (($generated@@761  (=> (= (ControlFlow 0 10) (- 0 9)) (forall (($generated@@762 Int) ) (!  (=> true (=> (and (<= ($generated@@288 0) $generated@@762) (< $generated@@762 $generated@@714)) (= ($generated ($generated@@445 $generated@@2 ($generated@@299 $generated@@723 $generated@@762))) ($generated ($generated@@445 $generated@@2 ($generated@@299 $generated@@721 $generated@@762))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@299 $generated@@721 $generated@@762)))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@299 $generated@@723 $generated@@762)))
)))))
(let (($generated@@763  (=> (and (not (and (<= ($generated@@288 0) $generated@@726) (< $generated@@726 $generated@@714))) (= (ControlFlow 0 14) 10)) $generated@@761)))
(let (($generated@@764  (=> (and (<= ($generated@@288 0) $generated@@726) (< $generated@@726 $generated@@714)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (and (<= 0 $generated@@726) (< $generated@@726 ($generated@@177 $generated@@723)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@726) (< $generated@@726 ($generated@@177 $generated@@721)))) (=> (= (ControlFlow 0 11) 10) $generated@@761))))))
(let (($generated@@765  (=> (< $generated@@726 ($generated@@288 0)) (and (=> (= (ControlFlow 0 16) 11) $generated@@764) (=> (= (ControlFlow 0 16) 14) $generated@@763)))))
(let (($generated@@766  (=> (<= ($generated@@288 0) $generated@@726) (and (=> (= (ControlFlow 0 15) 11) $generated@@764) (=> (= (ControlFlow 0 15) 14) $generated@@763)))))
(let (($generated@@767  (and (=> (= (ControlFlow 0 17) 15) $generated@@766) (=> (= (ControlFlow 0 17) 16) $generated@@765))))
(let (($generated@@768 true))
(let (($generated@@769 true))
(let (($generated@@770 true))
(let (($generated@@771 true))
(let (($generated@@772 true))
(let (($generated@@773  (=> (= (ControlFlow 0 3) (- 0 2)) (= $generated@@727 $generated@@714))))
(let (($generated@@774  (=> ($generated@@319 $generated@@723 $generated@@721) (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 58) 3) $generated@@773) (=> (= (ControlFlow 0 58) 57) $generated@@739)) (=> (= (ControlFlow 0 58) 4) $generated@@772)) (=> (= (ControlFlow 0 58) 46) $generated@@746)) (=> (= (ControlFlow 0 58) 5) $generated@@771)) (=> (= (ControlFlow 0 58) 36) $generated@@753)) (=> (= (ControlFlow 0 58) 6) $generated@@770)) (=> (= (ControlFlow 0 58) 26) $generated@@760)) (=> (= (ControlFlow 0 58) 7) $generated@@769)) (=> (= (ControlFlow 0 58) 17) $generated@@767)) (=> (= (ControlFlow 0 58) 8) $generated@@768)))))
(let (($generated@@775 true))
(let (($generated@@776  (=> (= $generated@@728 ($generated@@197 $generated@@138 $generated@@715 $generated@@60 false)) (and (=> (= (ControlFlow 0 59) (- 0 65)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 59) (- 0 64)) (and (<= 0 $generated@@717) (<= $generated@@717 ($generated@@136 $generated@@716)))) (=> (and (<= 0 $generated@@717) (<= $generated@@717 ($generated@@136 $generated@@716))) (and (=> (= (ControlFlow 0 59) (- 0 63)) (and (<= $generated@@717 (+ $generated@@717 $generated@@727)) (<= (+ $generated@@717 $generated@@727) ($generated@@136 $generated@@716)))) (=> (and (<= $generated@@717 (+ $generated@@717 $generated@@727)) (<= (+ $generated@@717 $generated@@727) ($generated@@136 $generated@@716))) (=> (= $generated@@723 ($generated@@174 ($generated@@260 ($generated@@261 $generated@@715 $generated@@716) (+ $generated@@717 $generated@@727)) $generated@@717)) (and (=> (= (ControlFlow 0 59) (- 0 62)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 59) (- 0 61)) (and (<= 0 $generated@@719) (<= $generated@@719 ($generated@@136 $generated@@718)))) (=> (and (<= 0 $generated@@719) (<= $generated@@719 ($generated@@136 $generated@@718))) (and (=> (= (ControlFlow 0 59) (- 0 60)) (and (<= $generated@@719 (+ $generated@@719 $generated@@714)) (<= (+ $generated@@719 $generated@@714) ($generated@@136 $generated@@718)))) (=> (and (<= $generated@@719 (+ $generated@@719 $generated@@714)) (<= (+ $generated@@719 $generated@@714) ($generated@@136 $generated@@718))) (=> (= $generated@@721 ($generated@@174 ($generated@@260 ($generated@@261 $generated@@715 $generated@@718) (+ $generated@@719 $generated@@714)) $generated@@719)) (and (=> (= (ControlFlow 0 59) 58) $generated@@774) (=> (= (ControlFlow 0 59) 1) $generated@@775)))))))))))))))))))
(let (($generated@@777  (=> (and ($generated@@148 $generated@@715) ($generated@@729 $generated@@715)) (=> (and (and ($generated@@140 $generated@@716 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@716 ($generated@@153 $generated@@46) $generated@@715)) (and ($generated@@140 $generated@@718 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@718 ($generated@@153 $generated@@46) $generated@@715))) (=> (and (and (and (and (<= ($generated@@288 0) $generated@@727) (<= ($generated@@288 0) $generated@@714)) (and (<= ($generated@@288 0) $generated@@717) (<= ($generated@@288 0) $generated@@719))) (and (and ($generated@@140 $generated@@730 ($generated@@294 $generated@@46)) ($generated@@78 $generated@@730 ($generated@@294 $generated@@46) $generated@@715)) true)) (and (and (and ($generated@@140 $generated@@731 ($generated@@294 $generated@@46)) ($generated@@78 $generated@@731 ($generated@@294 $generated@@46) $generated@@715)) true) (and (and (= 1 $generated@@732) (<= (+ $generated@@717 $generated@@727) ($generated@@136 $generated@@716))) (and (<= (+ $generated@@719 $generated@@714) ($generated@@136 $generated@@718)) (= (ControlFlow 0 66) 59))))) $generated@@776)))))
$generated@@777)))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@238 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@239 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@238 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@239 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@239 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@239 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@239 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@238 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@253 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@239 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@239 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@239 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@239 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@238 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@239 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@248 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@248 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@253 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@253 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@253 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@239 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@239 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@239 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@264 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@583) (and ($generated@@161 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@587) (and ($generated@@161 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@172) (= (type $generated@@590) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)) ($generated@@260 ($generated@@238 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))) ($generated@@260 ($generated@@286 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@258 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@592)) ($generated@@260 ($generated@@286 $generated@@592)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@279 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@278 $generated@@594)) (= ($generated@@277 $generated@@593) 0)) (= $generated@@593 ($generated@@276 $generated@@594))))
 :pattern ( ($generated@@277 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@79 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@299 $generated@@595) ($generated ($generated@@84 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@600) $generated@@2)) ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@3)) ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@4)) ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@457)) ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@172)) ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@278 $generated@@172)) (= (type $generated@@610) $generated@@67)) (= ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@277 $generated@@609))) ($generated@@239 ($generated@@501 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@501 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@139 $generated@@609 ($generated@@500 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@277 $generated@@613))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@309 $generated@@615) ($generated@@248 $generated@@616)) ($generated@@139 ($generated@@354 $generated@@615) ($generated@@248 $generated@@617))) ($generated@@139 ($generated@@385 $generated@@615) ($generated@@248 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@414 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) $generated@@67)) ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@139 ($generated@@327 $generated@@618) ($generated@@253 $generated@@619)) ($generated@@139 ($generated@@365 $generated@@618) ($generated@@253 $generated@@620))) ($generated@@139 ($generated@@396 $generated@@618) ($generated@@253 ($generated@@162 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@139 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@139 $generated@@621 $generated@@46))
 :pattern ( ($generated@@139 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@139 $generated@@622 $generated@@47))
 :pattern ( ($generated@@139 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@139 $generated@@623 $generated@@44))
 :pattern ( ($generated@@139 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@457) ($generated@@139 $generated@@624 $generated@@45))
 :pattern ( ($generated@@139 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@172) ($generated@@139 $generated@@625 $generated@@48))
 :pattern ( ($generated@@139 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(assert  (and (and (and (= (type $generated@@626) ($generated@@184 $generated@@80 $generated@@4)) (= (type $generated@@627) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@628) $generated@@80)) (= (type $generated@@631) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@636  (=> (= $generated@@626 ($generated@@183 $generated@@137 $generated@@627 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@628 $generated@@137))) (=> (not (= $generated@@628 $generated@@137)) (=> (and (<= (+ $generated@@629 $generated@@630) ($generated@@135 $generated@@628)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@631 $generated@@137))))))))
(let (($generated@@637  (=> (and (and ($generated@@151 $generated@@627) ($generated@@632 $generated@@627)) (and ($generated@@139 $generated@@628 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@628 ($generated@@156 $generated@@46) $generated@@627))) (=> (and (and (and ($generated@@139 $generated@@631 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@631 ($generated@@156 $generated@@46) $generated@@627)) (and (<= ($generated@@258 0) $generated@@630) (<= ($generated@@258 0) $generated@@633))) (and (and (<= ($generated@@258 0) $generated@@629) (<= ($generated@@258 0) $generated@@634)) (and (= 1 $generated@@635) (= (ControlFlow 0 4) 2)))) $generated@@636))))
$generated@@637)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U Int) T@U)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U) Int)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U Int) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (Int) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (Int) Int)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U Int) T@U)
(declare-fun $generated@@307 (T@U T@U T@U) Bool)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@319 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@T) T@U)
(declare-fun $generated@@381 (T@T T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@T T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@473 (T@U T@U) T@U)
(declare-fun $generated@@481 (T@U T@U) T@U)
(declare-fun $generated@@499 (T@T) T@U)
(declare-fun $generated@@523 () T@T)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@633 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147)  (or (= $generated@@146 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@151) $generated@@81)) (and (and ($generated@@148 $generated@@150) (and (not (= $generated@@151 $generated@@138)) (= ($generated@@139 $generated@@151) ($generated@@137 $generated@@149)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@151)) $generated@@46 $generated@@150))
 :pattern ( ($generated@@136 $generated@@151) ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60) ($generated@@137 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@140 $generated@@152 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@152 ($generated@@79 0)))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) $generated@@81)) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157) ($generated@@78 $generated@@156 ($generated@@137 $generated@@155) $generated@@157)))
 :pattern ( ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert  (and (and (and (forall (($generated@@179 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@179)) 16)) (forall (($generated@@180 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@176 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 Int) ) (! (let (($generated@@183 ($generated@@178 (type $generated@@181))))
(= (type ($generated@@174 $generated@@181 $generated@@182)) ($generated@@176 $generated@@183)))
 :pattern ( ($generated@@174 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(= (type ($generated@@175 $generated@@184 $generated@@185)) ($generated@@176 $generated@@186)))
 :pattern ( ($generated@@175 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Int) ) (! (let (($generated@@190 (type $generated@@188)))
 (=> (= (type $generated@@187) ($generated@@176 $generated@@190)) (=> (and (<= 0 $generated@@189) (<= $generated@@189 ($generated@@177 $generated@@187))) (= ($generated@@174 ($generated@@175 $generated@@187 $generated@@188) $generated@@189) ($generated@@175 ($generated@@174 $generated@@187 $generated@@189) $generated@@188)))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@187 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@195) $generated@@67)) ($generated@@140 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@140 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@81 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@70 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@81) (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@247) ($generated@@69 $generated@@4))) (= (type $generated@@249) $generated@@81)) (= (type $generated@@250) ($generated@@69 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@160)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@169)) (= (type $generated@@259) $generated@@169)) (= ($generated@@140 ($generated@@252 $generated@@258 $generated@@259) ($generated@@159 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@140 ($generated@@252 $generated@@258 $generated@@259) ($generated@@159 $generated@@256 $generated@@257)))
)))
(assert  (and (and (forall (($generated@@263 T@U) ($generated@@264 Int) ) (! (let (($generated@@265 ($generated@@178 (type $generated@@263))))
(= (type ($generated@@260 $generated@@263 $generated@@264)) ($generated@@176 $generated@@265)))
 :pattern ( ($generated@@260 $generated@@263 $generated@@264))
)) (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@261 $generated@@266 $generated@@267)) ($generated@@176 $generated@@169))
 :pattern ( ($generated@@261 $generated@@266 $generated@@267))
))) (forall (($generated@@268 Int) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@69 $generated@@169))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Int) ($generated@@272 Int) ) (!  (=> (and (= (type $generated@@269) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@270) $generated@@81)) (=> (and (and (= (+ $generated@@271 1) $generated@@272) (<= 0 $generated@@271)) (<= $generated@@272 ($generated@@136 $generated@@270))) (= ($generated@@260 ($generated@@261 $generated@@269 $generated@@270) $generated@@272) ($generated@@175 ($generated@@260 ($generated@@261 $generated@@269 $generated@@270) $generated@@271) ($generated@@87 ($generated@@85 $generated@@269 $generated@@270) ($generated@@262 $generated@@271))))))
 :pattern ( ($generated@@260 ($generated@@261 $generated@@269 $generated@@270) $generated@@271) ($generated@@260 ($generated@@261 $generated@@269 $generated@@270) $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@160) (= (type $generated@@274) $generated@@160)) (= ($generated@@166 $generated@@273 $generated@@274) (= $generated@@273 $generated@@274)))
 :pattern ( ($generated@@166 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@178 (type $generated@@275))))
 (=> (and (= (type $generated@@275) ($generated@@176 $generated@@277)) (= $generated@@276 0)) (= ($generated@@174 $generated@@275 $generated@@276) $generated@@275)))
 :pattern ( ($generated@@174 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@67)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@281) $generated@@67)) (= ($generated@@140 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@169) ($generated@@0 ($generated@@85 $generated@@280 $generated@@282))) ($generated@@253 $generated@@282 $generated@@281))
 :pattern ( ($generated@@85 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@140 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@67)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@286) $generated@@67)) (= ($generated@@140 $generated@@285 ($generated@@283 $generated@@286)) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@169) ($generated@@0 ($generated@@85 $generated@@285 $generated@@287))) ($generated@@253 $generated@@287 $generated@@286))
 :pattern ( ($generated@@85 $generated@@285 $generated@@287))
))))
 :pattern ( ($generated@@140 $generated@@285 ($generated@@283 $generated@@286)))
)))
(assert (forall (($generated@@289 Int) ) (! (= ($generated@@288 $generated@@289) $generated@@289)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 (type $generated@@291)))
(= (type ($generated@@290 $generated@@291)) $generated@@292))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@290 $generated@@293) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@67)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) ($generated@@176 $generated@@169)) (= (type $generated@@297) $generated@@169)) (= (type $generated@@298) $generated@@67)) (and ($generated@@140 $generated@@296 ($generated@@294 $generated@@298)) ($generated@@253 $generated@@297 $generated@@298))) ($generated@@140 ($generated@@175 $generated@@296 $generated@@297) ($generated@@294 $generated@@298)))
 :pattern ( ($generated@@140 ($generated@@175 $generated@@296 $generated@@297) ($generated@@294 $generated@@298)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 Int) ) (! (let (($generated@@302 ($generated@@178 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@302))
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 Int) ($generated@@305 Int) ) (! (let (($generated@@306 ($generated@@178 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@176 $generated@@306)) (=> (and (and (<= 0 $generated@@305) (< $generated@@305 $generated@@304)) (< $generated@@305 ($generated@@177 $generated@@303))) (= ($generated@@299 ($generated@@260 $generated@@303 $generated@@304) $generated@@305) ($generated@@299 $generated@@303 $generated@@305)))))
 :weight 25
 :pattern ( ($generated@@299 ($generated@@260 $generated@@303 $generated@@304) $generated@@305))
 :pattern ( ($generated@@299 $generated@@303 $generated@@305) ($generated@@260 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) $generated@@67) (= (type $generated@@309) $generated@@67)) (= (type $generated@@310) $generated@@169)) (= (type $generated@@311) $generated@@169)) (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@312)) (= ($generated@@78 ($generated@@252 $generated@@310 $generated@@311) ($generated@@159 $generated@@308 $generated@@309) $generated@@312)  (and ($generated@@307 $generated@@310 $generated@@308 $generated@@312) ($generated@@307 $generated@@311 $generated@@309 $generated@@312))))
 :pattern ( ($generated@@78 ($generated@@252 $generated@@310 $generated@@311) ($generated@@159 $generated@@308 $generated@@309) $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 Int) ) (! (let (($generated@@315 ($generated@@178 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@176 $generated@@315)) (=> (and (<= 0 $generated@@314) (<= $generated@@314 ($generated@@177 $generated@@313))) (= ($generated@@177 ($generated@@174 $generated@@313 $generated@@314)) (- ($generated@@177 $generated@@313) $generated@@314)))))
 :pattern ( ($generated@@177 ($generated@@174 $generated@@313 $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@71)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@160) (= ($generated@@158 $generated@@318) (= ($generated@@316 $generated@@318) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@178 (type $generated@@320))))
 (=> (and (= (type $generated@@320) ($generated@@176 $generated@@322)) (= (type $generated@@321) ($generated@@176 $generated@@322))) (= ($generated@@319 $generated@@320 $generated@@321)  (and (= ($generated@@177 $generated@@320) ($generated@@177 $generated@@321)) (forall (($generated@@323 Int) ) (!  (=> (and (<= 0 $generated@@323) (< $generated@@323 ($generated@@177 $generated@@320))) (= ($generated@@299 $generated@@320 $generated@@323) ($generated@@299 $generated@@321 $generated@@323)))
 :pattern ( ($generated@@299 $generated@@320 $generated@@323))
 :pattern ( ($generated@@299 $generated@@321 $generated@@323))
))))))
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 Int) ) (! (let (($generated@@327 ($generated@@178 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@176 $generated@@327)) (=> (and (<= 0 $generated@@326) (< $generated@@326 ($generated@@177 $generated@@325))) (< ($generated@@324 ($generated@@260 $generated@@325 $generated@@326)) ($generated@@324 $generated@@325)))))
 :pattern ( ($generated@@324 ($generated@@260 $generated@@325 $generated@@326)))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@160) ($generated@@158 $generated@@328)) (exists (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (and (and (= (type $generated@@329) $generated@@169) (= (type $generated@@330) $generated@@169)) (= $generated@@328 ($generated@@252 $generated@@329 $generated@@330)))
 :no-pattern (type $generated@@329)
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
)))
 :pattern ( ($generated@@158 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@176 $generated@@332))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@T) ) (! (= ($generated@@177 ($generated@@331 $generated@@333)) 0)
 :pattern ( ($generated@@331 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 Int) ) (! (let (($generated@@336 ($generated@@178 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@176 $generated@@336)) (=> (and (< 0 $generated@@335) (<= $generated@@335 ($generated@@177 $generated@@334))) (< ($generated@@324 ($generated@@174 $generated@@334 $generated@@335)) ($generated@@324 $generated@@334)))))
 :pattern ( ($generated@@324 ($generated@@174 $generated@@334 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
 (=> (= (type $generated@@337) ($generated@@176 $generated@@339)) (= ($generated@@177 ($generated@@175 $generated@@337 $generated@@338)) (+ 1 ($generated@@177 $generated@@337)))))
 :pattern ( ($generated@@175 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@67) (= (type $generated@@341) $generated@@81)) (= ($generated@@140 $generated@@341 ($generated@@153 $generated@@340))  (and ($generated@@140 $generated@@341 ($generated@@137 $generated@@340)) (not (= $generated@@341 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@341 ($generated@@153 $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@169)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@67) (= (type $generated@@346) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@307 ($generated@@342 $generated@@344) $generated@@345 $generated@@346) ($generated@@78 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@307 ($generated@@342 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 Int) ($generated@@349 Int) ) (! (let (($generated@@350 ($generated@@178 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@176 $generated@@350)) (=> (and (and (<= 0 $generated@@348) (<= 0 $generated@@349)) (< $generated@@349 (- ($generated@@177 $generated@@347) $generated@@348))) (= ($generated@@299 ($generated@@174 $generated@@347 $generated@@348) $generated@@349) ($generated@@299 $generated@@347 (+ $generated@@349 $generated@@348))))))
 :weight 25
 :pattern ( ($generated@@299 ($generated@@174 $generated@@347 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ) (! (= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@353 $generated@@2))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@83 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@80 $generated@@355 $generated@@2)) (and (= (= ($generated@@351 $generated@@354) 0) (= $generated@@354 ($generated@@352 $generated@@355))) (=> (not (= ($generated@@351 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@85 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@72)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@359)) $generated@@61) (= ($generated@@357 ($generated@@137 $generated@@359)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@67) (and (= ($generated@@76 ($generated@@153 $generated@@360)) $generated@@62) (= ($generated@@357 ($generated@@153 $generated@@360)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@360))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 18)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert  (and (and (and (and (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (= ($generated@@1 ($generated@@381 $generated@@384 $generated@@385)) 19)) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= ($generated@@382 ($generated@@381 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@381 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@383 ($generated@@381 $generated@@388 $generated@@389)) $generated@@389)
 :pattern ( ($generated@@381 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@382 (type $generated@@390))))
(= (type ($generated@@379 $generated@@390)) ($generated@@80 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@390))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= (type ($generated@@380 $generated@@392 $generated@@393)) ($generated@@381 $generated@@392 $generated@@393))
 :pattern ( ($generated@@380 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@T) ) (! (let (($generated@@396 (type $generated@@394)))
 (not ($generated@@0 ($generated@@85 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394))))
 :pattern ( (let (($generated@@396 (type $generated@@394)))
($generated@@85 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394)))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@83 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@80 $generated@@398 $generated@@2)) (= ($generated@@192 $generated@@397) (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@398) (and (<= 0 ($generated ($generated@@85 $generated@@397 $generated@@399))) (<= ($generated ($generated@@85 $generated@@397 $generated@@399)) ($generated@@351 $generated@@397))))
 :pattern ( ($generated@@85 $generated@@397 $generated@@399))
)))))
 :pattern ( ($generated@@192 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@67) (= (type $generated@@401) $generated@@81)) (= ($generated@@140 $generated@@401 ($generated@@137 $generated@@400))  (or (= $generated@@401 $generated@@138) (= ($generated@@139 $generated@@401) ($generated@@137 $generated@@400)))))
 :pattern ( ($generated@@140 $generated@@401 ($generated@@137 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 Int) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
 (=> (= (type $generated@@402) ($generated@@176 $generated@@405)) (and (=> (= $generated@@403 ($generated@@177 $generated@@402)) (= ($generated@@299 ($generated@@175 $generated@@402 $generated@@404) $generated@@403) $generated@@404)) (=> (not (= $generated@@403 ($generated@@177 $generated@@402))) (= ($generated@@299 ($generated@@175 $generated@@402 $generated@@404) $generated@@403) ($generated@@299 $generated@@402 $generated@@403))))))
 :pattern ( ($generated@@299 ($generated@@175 $generated@@402 $generated@@404) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@365 (type $generated@@406))))
(let (($generated@@408 ($generated@@364 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@363 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@362 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@361 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@365 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@80 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@365 (type $generated@@413))))
(let (($generated@@415 ($generated@@364 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@363 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@362 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@383 (type $generated@@417))))
(let (($generated@@419 ($generated@@382 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@381 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@380 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@379 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@383 (type $generated@@422))))
(= (type ($generated@@421 $generated@@422)) ($generated@@80 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@383 (type $generated@@424))))
(let (($generated@@426 ($generated@@382 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@381 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@380 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@425) ($generated@@0 ($generated@@85 ($generated@@421 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@421 $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@429) $generated@@81)) (forall (($generated@@430 Int) ) (!  (=> (and (<= 0 $generated@@430) (< $generated@@430 ($generated@@177 ($generated@@261 $generated@@428 $generated@@429)))) (= ($generated@@299 ($generated@@261 $generated@@428 $generated@@429) $generated@@430) ($generated@@87 ($generated@@85 $generated@@428 $generated@@429) ($generated@@262 $generated@@430))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@428 $generated@@429) ($generated@@262 $generated@@430)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@428 $generated@@429) $generated@@430))
)))
 :pattern ( ($generated@@261 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@432) $generated@@67)) (= ($generated@@140 $generated@@431 ($generated@@191 $generated@@432)) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@431 $generated@@433)))) ($generated@@253 $generated@@433 $generated@@432))
 :pattern ( ($generated@@85 $generated@@431 $generated@@433))
))))
 :pattern ( ($generated@@140 $generated@@431 ($generated@@191 $generated@@432)))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@434) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@435) $generated@@67)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@278 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@169) ($generated@@0 ($generated@@85 $generated@@434 $generated@@437))) ($generated@@307 $generated@@437 $generated@@435 $generated@@436))
 :pattern ( ($generated@@85 $generated@@434 $generated@@437))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@278 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@438) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@438 ($generated@@283 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@169) ($generated@@0 ($generated@@85 $generated@@438 $generated@@441))) ($generated@@307 $generated@@441 $generated@@439 $generated@@440))
 :pattern ( ($generated@@85 $generated@@438 $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@438 ($generated@@283 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(= ($generated ($generated@@85 ($generated@@352 $generated@@443) $generated@@442)) 0))
 :pattern ( (let (($generated@@443 (type $generated@@442)))
($generated@@85 ($generated@@352 $generated@@443) $generated@@442)))
)))
(assert  (and (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@444 $generated@@447)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@444 $generated@@447))
)) (forall (($generated@@448 T@T) ($generated@@449 T@U) ) (! (= (type ($generated@@445 $generated@@448 $generated@@449)) $generated@@448)
 :pattern ( ($generated@@445 $generated@@448 $generated@@449))
))) (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@365 (type $generated@@450))))
(let (($generated@@452 ($generated@@364 (type $generated@@450))))
(= (type ($generated@@446 $generated@@450)) ($generated@@80 $generated@@452 $generated@@451))))
 :pattern ( ($generated@@446 $generated@@450))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@363 $generated@@169 $generated@@169)) (= (type $generated@@454) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@444 $generated@@453) $generated@@454))  (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@453) ($generated@@167 ($generated@@445 $generated@@160 $generated@@454)))) (= ($generated@@85 ($generated@@446 $generated@@453) ($generated@@167 ($generated@@445 $generated@@160 $generated@@454))) ($generated@@168 ($generated@@445 $generated@@160 $generated@@454))))))
 :pattern ( ($generated@@85 ($generated@@444 $generated@@453) $generated@@454))
)))
(assert  (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@457)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@455 $generated@@457))
)) (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@383 (type $generated@@458))))
(let (($generated@@460 ($generated@@382 (type $generated@@458))))
(= (type ($generated@@456 $generated@@458)) ($generated@@80 $generated@@460 $generated@@459))))
 :pattern ( ($generated@@456 $generated@@458))
))))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) ($generated@@381 $generated@@169 $generated@@169)) (= (type $generated@@462) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@455 $generated@@461) $generated@@462))  (and ($generated@@0 ($generated@@85 ($generated@@379 $generated@@461) ($generated@@167 ($generated@@445 $generated@@160 $generated@@462)))) (= ($generated@@85 ($generated@@456 $generated@@461) ($generated@@167 ($generated@@445 $generated@@160 $generated@@462))) ($generated@@168 ($generated@@445 $generated@@160 $generated@@462))))))
 :pattern ( ($generated@@85 ($generated@@455 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@464)))
(let (($generated@@466 ($generated@@364 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@363 $generated@@466 $generated@@465)) (= ($generated@@0 ($generated@@85 ($generated@@410 $generated@@463) $generated@@464)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@466) (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@463) $generated@@467)) (= $generated@@464 ($generated@@85 ($generated@@446 $generated@@463) $generated@@467))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@463) $generated@@467))
 :pattern ( ($generated@@85 ($generated@@446 $generated@@463) $generated@@467))
))))))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
(let (($generated@@471 ($generated@@382 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@381 $generated@@471 $generated@@470)) (= ($generated@@0 ($generated@@85 ($generated@@421 $generated@@468) $generated@@469)) (exists (($generated@@472 T@U) ) (!  (and (= (type $generated@@472) $generated@@471) (and ($generated@@0 ($generated@@85 ($generated@@379 $generated@@468) $generated@@472)) (= $generated@@469 ($generated@@85 ($generated@@456 $generated@@468) $generated@@472))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@468) $generated@@472))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@468) $generated@@472))
))))))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (and (= (type $generated@@476) ($generated@@363 $generated@@169 $generated@@169)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) $generated@@67)) (= (type $generated@@479) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@476) $generated@@480))) (and ($generated@@307 ($generated@@85 ($generated@@446 $generated@@476) $generated@@480) $generated@@478 $generated@@479) ($generated@@307 $generated@@480 $generated@@477 $generated@@479)))
 :pattern ( ($generated@@85 ($generated@@446 $generated@@476) $generated@@480))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@476) $generated@@480))
))))
 :pattern ( ($generated@@78 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (and (= (type $generated@@484) ($generated@@381 $generated@@169 $generated@@169)) (= (type $generated@@485) $generated@@67)) (= (type $generated@@486) $generated@@67)) (= (type $generated@@487) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@484 ($generated@@481 $generated@@485 $generated@@486) $generated@@487) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@484) $generated@@488))) (and ($generated@@307 ($generated@@85 ($generated@@456 $generated@@484) $generated@@488) $generated@@486 $generated@@487) ($generated@@307 $generated@@488 $generated@@485 $generated@@487)))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@484) $generated@@488))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@484) $generated@@488))
))))
 :pattern ( ($generated@@78 $generated@@484 ($generated@@481 $generated@@485 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@178 (type $generated@@489))))
 (=> (and (and (= (type $generated@@489) ($generated@@176 $generated@@491)) (= (type $generated@@490) ($generated@@176 $generated@@491))) ($generated@@319 $generated@@489 $generated@@490)) (= $generated@@489 $generated@@490)))
 :pattern ( ($generated@@319 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@178 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@176 $generated@@494)) (=> (and (<= 0 $generated@@493) (<= $generated@@493 ($generated@@177 $generated@@492))) (= ($generated@@177 ($generated@@260 $generated@@492 $generated@@493)) $generated@@493))))
 :pattern ( ($generated@@177 ($generated@@260 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 Int) ) (!  (=> (and (and (= (type $generated@@495) $generated@@67) (= (type $generated@@496) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@497) $generated@@81)) (=> (and (and (and ($generated@@148 $generated@@496) (and (not (= $generated@@497 $generated@@138)) (= ($generated@@139 $generated@@497) ($generated@@137 $generated@@495)))) (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@136 $generated@@497)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@496 $generated@@497) $generated@@60))) ($generated@@307 ($generated@@87 ($generated@@85 $generated@@496 $generated@@497) ($generated@@262 $generated@@498)) $generated@@495 $generated@@496)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@496 $generated@@497) ($generated@@262 $generated@@498)) ($generated@@137 $generated@@495))
)))
(assert (forall (($generated@@500 T@T) ) (! (= (type ($generated@@499 $generated@@500)) ($generated@@80 $generated@@500 $generated@@4))
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@383 (type $generated@@501))))
(let (($generated@@503 ($generated@@382 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@381 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@380 $generated@@503 $generated@@502)) (= ($generated@@379 $generated@@501) ($generated@@499 $generated@@503))))))
 :pattern ( ($generated@@379 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@383 (type $generated@@504))))
(let (($generated@@506 ($generated@@382 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@381 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@380 $generated@@506 $generated@@505)) (= ($generated@@421 $generated@@504) ($generated@@499 $generated@@505))))))
 :pattern ( ($generated@@421 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@383 (type $generated@@507))))
(let (($generated@@509 ($generated@@382 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@381 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@380 $generated@@509 $generated@@508)) (= ($generated@@455 $generated@@507) ($generated@@499 $generated@@169))))))
 :pattern ( ($generated@@455 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@365 (type $generated@@510))))
(let (($generated@@512 ($generated@@364 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@363 $generated@@512 $generated@@511)) (or (= $generated@@510 ($generated@@362 $generated@@512 $generated@@511)) (exists (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (and (and (= (type $generated@@513) $generated@@169) (= (type $generated@@514) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@444 $generated@@510) ($generated@@342 ($generated@@252 $generated@@513 $generated@@514)))))
 :no-pattern (type $generated@@513)
 :no-pattern (type $generated@@514)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
))))))
 :pattern ( ($generated@@444 $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@383 (type $generated@@515))))
(let (($generated@@517 ($generated@@382 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@381 $generated@@517 $generated@@516)) (or (= $generated@@515 ($generated@@380 $generated@@517 $generated@@516)) (exists (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (and (and (= (type $generated@@518) $generated@@169) (= (type $generated@@519) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@455 $generated@@515) ($generated@@342 ($generated@@252 $generated@@518 $generated@@519)))))
 :no-pattern (type $generated@@518)
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@455 $generated@@515))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@169) ($generated@@253 $generated@@520 $generated@@46)) (and (= ($generated@@342 ($generated@@445 $generated@@2 $generated@@520)) $generated@@520) ($generated@@140 ($generated@@445 $generated@@2 $generated@@520) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@520 $generated@@46))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@169) ($generated@@253 $generated@@521 $generated@@47)) (and (= ($generated@@342 ($generated@@445 $generated@@3 $generated@@521)) $generated@@521) ($generated@@140 ($generated@@445 $generated@@3 $generated@@521) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@521 $generated@@47))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@169) ($generated@@253 $generated@@522 $generated@@44)) (and (= ($generated@@342 ($generated@@445 $generated@@4 $generated@@522)) $generated@@522) ($generated@@140 ($generated@@445 $generated@@4 $generated@@522) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@522 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@523) 20))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@169) ($generated@@253 $generated@@524 $generated@@45)) (and (= ($generated@@342 ($generated@@445 $generated@@523 $generated@@524)) $generated@@524) ($generated@@140 ($generated@@445 $generated@@523 $generated@@524) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@524 $generated@@45))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@253 ($generated@@342 $generated@@525) $generated@@526) ($generated@@140 $generated@@525 $generated@@526)))
 :pattern ( ($generated@@253 ($generated@@342 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@81) (<= 0 ($generated@@136 $generated@@527)))
 :no-pattern (type $generated@@527)
 :no-pattern ($generated $generated@@527)
 :no-pattern ($generated@@0 $generated@@527)
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@83 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@80 $generated@@529 $generated@@2)) (<= 0 ($generated@@351 $generated@@528))))
 :pattern ( ($generated@@351 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@178 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@176 $generated@@531)) (<= 0 ($generated@@177 $generated@@530))))
 :pattern ( ($generated@@177 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (= ($generated@@532 ($generated@@473 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@473 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= ($generated@@536 ($generated@@473 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@473 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (= ($generated@@76 ($generated@@473 $generated@@540 $generated@@541)) $generated@@58))
 :pattern ( ($generated@@473 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= ($generated@@542 ($generated@@481 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@481 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@67) (= (type $generated@@549) $generated@@67)) (= ($generated@@546 ($generated@@481 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@481 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@67) (= (type $generated@@551) $generated@@67)) (= ($generated@@76 ($generated@@481 $generated@@550 $generated@@551)) $generated@@59))
 :pattern ( ($generated@@481 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@169) (= (type $generated@@553) $generated@@169)) (= ($generated@@316 ($generated@@252 $generated@@552 $generated@@553)) $generated@@63))
 :pattern ( ($generated@@252 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= ($generated@@554 ($generated@@159 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@159 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@67) (= (type $generated@@561) $generated@@67)) (= ($generated@@558 ($generated@@159 $generated@@560 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@159 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@169) (= (type $generated@@563) $generated@@169)) (= ($generated@@167 ($generated@@252 $generated@@562 $generated@@563)) $generated@@562))
 :pattern ( ($generated@@252 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@169) (= (type $generated@@565) $generated@@169)) (= ($generated@@168 ($generated@@252 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@252 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@176 $generated@@169)) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@566 ($generated@@294 $generated@@567) $generated@@568) (forall (($generated@@569 Int) ) (!  (=> (and (<= 0 $generated@@569) (< $generated@@569 ($generated@@177 $generated@@566))) ($generated@@307 ($generated@@299 $generated@@566 $generated@@569) $generated@@567 $generated@@568))
 :pattern ( ($generated@@299 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@78 $generated@@566 ($generated@@294 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@570 ($generated@@79 $generated@@571)) $generated@@571)
 :pattern ( ($generated@@79 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@67)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@67) (= ($generated@@572 ($generated@@278 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@278 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@67) (= ($generated@@76 ($generated@@278 $generated@@575)) $generated@@54))
 :pattern ( ($generated@@278 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@67)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@67) (= ($generated@@576 ($generated@@283 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@283 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@67) (= ($generated@@76 ($generated@@283 $generated@@579)) $generated@@55))
 :pattern ( ($generated@@283 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@67)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@67) (= ($generated@@580 ($generated@@191 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@191 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@67) (= ($generated@@76 ($generated@@191 $generated@@583)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@67) (= ($generated@@584 ($generated@@294 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@294 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@67) (= ($generated@@76 ($generated@@294 $generated@@587)) $generated@@57))
 :pattern ( ($generated@@294 $generated@@587))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@75 ($generated@@262 $generated@@588)) 1)
 :pattern ( ($generated@@262 $generated@@588))
)))
(assert (forall (($generated@@590 Int) ) (! (= ($generated@@589 ($generated@@262 $generated@@590)) $generated@@590)
 :pattern ( ($generated@@262 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@67)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@67) (= ($generated@@591 ($generated@@137 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@137 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@67)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@67) (= ($generated@@594 ($generated@@153 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@153 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
(= ($generated@@445 $generated@@598 ($generated@@342 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@342 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@363 $generated@@169 $generated@@169)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) (= ($generated@@140 $generated@@599 ($generated@@473 $generated@@600 $generated@@601)) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@599) $generated@@602))) (and ($generated@@253 ($generated@@85 ($generated@@446 $generated@@599) $generated@@602) $generated@@601) ($generated@@253 $generated@@602 $generated@@600)))
 :pattern ( ($generated@@85 ($generated@@446 $generated@@599) $generated@@602))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@599) $generated@@602))
))))
 :pattern ( ($generated@@140 $generated@@599 ($generated@@473 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@381 $generated@@169 $generated@@169)) (= (type $generated@@604) $generated@@67)) (= (type $generated@@605) $generated@@67)) (= ($generated@@140 $generated@@603 ($generated@@481 $generated@@604 $generated@@605)) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@603) $generated@@606))) (and ($generated@@253 ($generated@@85 ($generated@@456 $generated@@603) $generated@@606) $generated@@605) ($generated@@253 $generated@@606 $generated@@604)))
 :pattern ( ($generated@@85 ($generated@@456 $generated@@603) $generated@@606))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@603) $generated@@606))
))))
 :pattern ( ($generated@@140 $generated@@603 ($generated@@481 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@67) (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@609) $generated@@81)) (and (and ($generated@@148 $generated@@608) (and (not (= $generated@@609 $generated@@138)) (= ($generated@@139 $generated@@609) ($generated@@137 $generated@@607)))) (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@136 $generated@@609))))) ($generated@@253 ($generated@@87 ($generated@@85 $generated@@608 $generated@@609) ($generated@@262 $generated@@610)) $generated@@607))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@608 $generated@@609) ($generated@@262 $generated@@610)) ($generated@@137 $generated@@607))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@169) (= (type $generated@@614) $generated@@169)) (< ($generated@@611 $generated@@613) ($generated@@612 ($generated@@252 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@252 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@169) (= (type $generated@@616) $generated@@169)) (< ($generated@@611 $generated@@616) ($generated@@612 ($generated@@252 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@252 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@169) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@253 $generated@@617 ($generated@@473 $generated@@618 $generated@@619))) (and (= ($generated@@342 ($generated@@445 ($generated@@363 $generated@@169 $generated@@169) $generated@@617)) $generated@@617) ($generated@@140 ($generated@@445 ($generated@@363 $generated@@169 $generated@@169) $generated@@617) ($generated@@473 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@253 $generated@@617 ($generated@@473 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@169) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@253 $generated@@620 ($generated@@481 $generated@@621 $generated@@622))) (and (= ($generated@@342 ($generated@@445 ($generated@@381 $generated@@169 $generated@@169) $generated@@620)) $generated@@620) ($generated@@140 ($generated@@445 ($generated@@381 $generated@@169 $generated@@169) $generated@@620) ($generated@@481 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@253 $generated@@620 ($generated@@481 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@67) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) $generated@@169)) ($generated@@253 $generated@@625 ($generated@@159 $generated@@623 $generated@@624))) (and (= ($generated@@342 ($generated@@445 $generated@@160 $generated@@625)) $generated@@625) ($generated@@140 ($generated@@445 $generated@@160 $generated@@625) ($generated@@159 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@253 $generated@@625 ($generated@@159 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
 (not ($generated@@0 ($generated@@85 ($generated@@499 $generated@@627) $generated@@626))))
 :pattern ( (let (($generated@@627 (type $generated@@626)))
($generated@@85 ($generated@@499 $generated@@627) $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@81)) (= ($generated@@177 ($generated@@261 $generated@@628 $generated@@629)) ($generated@@136 $generated@@629)))
 :pattern ( ($generated@@177 ($generated@@261 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@67) (= (type $generated@@631) $generated@@67)) (and (= ($generated@@76 ($generated@@159 $generated@@630 $generated@@631)) $generated@@64) (= ($generated@@357 ($generated@@159 $generated@@630 $generated@@631)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@630 $generated@@631))
)))
(assert  (and (forall (($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@178 (type $generated@@634))))
(= (type ($generated@@632 $generated@@634)) ($generated@@176 $generated@@635)))
 :pattern ( ($generated@@632 $generated@@634))
)) (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@178 (type $generated@@636))))
(= (type ($generated@@633 $generated@@636)) $generated@@637))
 :pattern ( ($generated@@633 $generated@@636))
))))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@639)))
 (=> (= (type $generated@@638) ($generated@@176 $generated@@640)) (and (= ($generated@@632 ($generated@@175 $generated@@638 $generated@@639)) $generated@@638) (= ($generated@@633 ($generated@@175 $generated@@638 $generated@@639)) $generated@@639))))
 :pattern ( ($generated@@175 $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@160) (= ($generated@@611 ($generated@@342 $generated@@641)) ($generated@@612 $generated@@641)))
 :pattern ( ($generated@@611 ($generated@@342 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@169) ($generated@@253 $generated@@642 ($generated@@79 0))) (and (= ($generated@@342 ($generated@@445 $generated@@2 $generated@@642)) $generated@@642) ($generated@@140 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@642) ($generated@@79 0))))
 :pattern ( ($generated@@253 $generated@@642 ($generated@@79 0)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@169) (= (type $generated@@644) $generated@@67)) ($generated@@253 $generated@@643 ($generated@@278 $generated@@644))) (and (= ($generated@@342 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@643)) $generated@@643) ($generated@@140 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@643) ($generated@@278 $generated@@644))))
 :pattern ( ($generated@@253 $generated@@643 ($generated@@278 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@169) (= (type $generated@@646) $generated@@67)) ($generated@@253 $generated@@645 ($generated@@283 $generated@@646))) (and (= ($generated@@342 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@645)) $generated@@645) ($generated@@140 ($generated@@445 ($generated@@80 $generated@@169 $generated@@4) $generated@@645) ($generated@@283 $generated@@646))))
 :pattern ( ($generated@@253 $generated@@645 ($generated@@283 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@169) (= (type $generated@@648) $generated@@67)) ($generated@@253 $generated@@647 ($generated@@191 $generated@@648))) (and (= ($generated@@342 ($generated@@445 ($generated@@80 $generated@@169 $generated@@2) $generated@@647)) $generated@@647) ($generated@@140 ($generated@@445 ($generated@@80 $generated@@169 $generated@@2) $generated@@647) ($generated@@191 $generated@@648))))
 :pattern ( ($generated@@253 $generated@@647 ($generated@@191 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) $generated@@169) (= (type $generated@@650) $generated@@67)) ($generated@@253 $generated@@649 ($generated@@294 $generated@@650))) (and (= ($generated@@342 ($generated@@445 ($generated@@176 $generated@@169) $generated@@649)) $generated@@649) ($generated@@140 ($generated@@445 ($generated@@176 $generated@@169) $generated@@649) ($generated@@294 $generated@@650))))
 :pattern ( ($generated@@253 $generated@@649 ($generated@@294 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@67) (= (type $generated@@652) $generated@@169)) ($generated@@253 $generated@@652 ($generated@@137 $generated@@651))) (and (= ($generated@@342 ($generated@@445 $generated@@81 $generated@@652)) $generated@@652) ($generated@@140 ($generated@@445 $generated@@81 $generated@@652) ($generated@@137 $generated@@651))))
 :pattern ( ($generated@@253 $generated@@652 ($generated@@137 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@67) (= (type $generated@@654) $generated@@169)) ($generated@@253 $generated@@654 ($generated@@153 $generated@@653))) (and (= ($generated@@342 ($generated@@445 $generated@@81 $generated@@654)) $generated@@654) ($generated@@140 ($generated@@445 $generated@@81 $generated@@654) ($generated@@153 $generated@@653))))
 :pattern ( ($generated@@253 $generated@@654 ($generated@@153 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ($generated@@657 Int) ) (! (let (($generated@@658 ($generated@@178 (type $generated@@655))))
 (=> (= (type $generated@@655) ($generated@@176 $generated@@658)) (=> (and (and (<= 0 $generated@@656) (<= $generated@@656 $generated@@657)) (< $generated@@657 ($generated@@177 $generated@@655))) (= ($generated@@299 ($generated@@174 $generated@@655 $generated@@656) (- $generated@@657 $generated@@656)) ($generated@@299 $generated@@655 $generated@@657)))))
 :weight 25
 :pattern ( ($generated@@299 $generated@@655 $generated@@657) ($generated@@174 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@660) $generated@@67)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@659 ($generated@@191 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@659 $generated@@662)))) ($generated@@307 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@85 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@78 $generated@@659 ($generated@@191 $generated@@660) $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ($generated@@665 Int) ) (! (let (($generated@@666 ($generated@@178 (type $generated@@663))))
 (=> (= (type $generated@@663) ($generated@@176 $generated@@666)) (=> (and (and (<= 0 $generated@@664) (<= 0 $generated@@665)) (<= (+ $generated@@664 $generated@@665) ($generated@@177 $generated@@663))) (= ($generated@@174 ($generated@@174 $generated@@663 $generated@@664) $generated@@665) ($generated@@174 $generated@@663 (+ $generated@@664 $generated@@665))))))
 :pattern ( ($generated@@174 ($generated@@174 $generated@@663 $generated@@664) $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@160) (= (type $generated@@668) $generated@@67)) (= (type $generated@@669) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@669) (and ($generated@@158 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@67) ($generated@@78 $generated@@667 ($generated@@159 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@78 $generated@@667 ($generated@@159 $generated@@668 $generated@@670) $generated@@669))
))))) ($generated@@307 ($generated@@167 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@307 ($generated@@167 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@160) (= (type $generated@@672) $generated@@67)) (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@673) (and ($generated@@158 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@67) ($generated@@78 $generated@@671 ($generated@@159 $generated@@674 $generated@@672) $generated@@673))
 :pattern ( ($generated@@78 $generated@@671 ($generated@@159 $generated@@674 $generated@@672) $generated@@673))
))))) ($generated@@307 ($generated@@168 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@307 ($generated@@168 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@169) (= (type $generated@@676) $generated@@169)) (= ($generated@@252 ($generated@@290 $generated@@675) ($generated@@290 $generated@@676)) ($generated@@290 ($generated@@252 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@252 ($generated@@290 $generated@@675) ($generated@@290 $generated@@676)))
)))
(assert (forall (($generated@@677 Int) ) (! (= ($generated@@342 ($generated@@8 ($generated@@288 $generated@@677))) ($generated@@290 ($generated@@342 ($generated@@8 $generated@@677))))
 :pattern ( ($generated@@342 ($generated@@8 ($generated@@288 $generated@@677))))
)))
(assert (forall (($generated@@678 T@U) ) (! (= ($generated@@342 ($generated@@290 $generated@@678)) ($generated@@290 ($generated@@342 $generated@@678)))
 :pattern ( ($generated@@342 ($generated@@290 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@178 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@176 $generated@@680)) (= ($generated@@177 $generated@@679) 0)) (= $generated@@679 ($generated@@331 $generated@@680))))
 :pattern ( ($generated@@177 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (! (let (($generated@@683 ($generated@@178 (type $generated@@681))))
 (=> (and (= (type $generated@@681) ($generated@@176 $generated@@683)) (= $generated@@682 0)) (= ($generated@@260 $generated@@681 $generated@@682) ($generated@@331 $generated@@683))))
 :pattern ( ($generated@@260 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 (type $generated@@685)))
 (=> (and (and (= (type $generated@@684) ($generated@@80 $generated@@687 $generated@@2)) (= (type $generated@@686) $generated@@2)) (<= 0 ($generated $generated@@686))) (= ($generated@@351 ($generated@@86 $generated@@684 $generated@@685 $generated@@686)) (+ (- ($generated@@351 $generated@@684) ($generated ($generated@@85 $generated@@684 $generated@@685))) ($generated $generated@@686)))))
 :pattern ( ($generated@@351 ($generated@@86 $generated@@684 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@689) $generated@@2)) ($generated@@78 $generated@@689 $generated@@46 $generated@@688))
 :pattern ( ($generated@@78 $generated@@689 $generated@@46 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@691) $generated@@3)) ($generated@@78 $generated@@691 $generated@@47 $generated@@690))
 :pattern ( ($generated@@78 $generated@@691 $generated@@47 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@693) $generated@@4)) ($generated@@78 $generated@@693 $generated@@44 $generated@@692))
 :pattern ( ($generated@@78 $generated@@693 $generated@@44 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@695) $generated@@523)) ($generated@@78 $generated@@695 $generated@@45 $generated@@694))
 :pattern ( ($generated@@78 $generated@@695 $generated@@45 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@697) $generated@@169)) ($generated@@78 $generated@@697 $generated@@48 $generated@@696))
 :pattern ( ($generated@@78 $generated@@697 $generated@@48 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@176 $generated@@169)) (= (type $generated@@699) $generated@@67)) (= ($generated@@140 $generated@@698 ($generated@@294 $generated@@699)) (forall (($generated@@700 Int) ) (!  (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@177 $generated@@698))) ($generated@@253 ($generated@@299 $generated@@698 $generated@@700) $generated@@699))
 :pattern ( ($generated@@299 $generated@@698 $generated@@700))
))))
 :pattern ( ($generated@@140 $generated@@698 ($generated@@294 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 Int) ) (!  (=> (= (type $generated@@701) ($generated@@176 $generated@@169)) (=> (and (<= 0 $generated@@702) (< $generated@@702 ($generated@@177 $generated@@701))) (< ($generated@@612 ($generated@@445 $generated@@160 ($generated@@299 $generated@@701 $generated@@702))) ($generated@@324 $generated@@701))))
 :pattern ( ($generated@@612 ($generated@@445 $generated@@160 ($generated@@299 $generated@@701 $generated@@702))))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (and (= (type $generated@@703) ($generated@@363 $generated@@169 $generated@@169)) (= (type $generated@@704) $generated@@67)) (= (type $generated@@705) $generated@@67)) ($generated@@140 $generated@@703 ($generated@@473 $generated@@704 $generated@@705))) (and (and ($generated@@140 ($generated@@361 $generated@@703) ($generated@@278 $generated@@704)) ($generated@@140 ($generated@@410 $generated@@703) ($generated@@278 $generated@@705))) ($generated@@140 ($generated@@444 $generated@@703) ($generated@@278 ($generated@@159 $generated@@704 $generated@@705)))))
 :pattern ( ($generated@@140 $generated@@703 ($generated@@473 $generated@@704 $generated@@705)))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) ($generated@@381 $generated@@169 $generated@@169)) (= (type $generated@@707) $generated@@67)) (= (type $generated@@708) $generated@@67)) ($generated@@140 $generated@@706 ($generated@@481 $generated@@707 $generated@@708))) (and (and ($generated@@140 ($generated@@379 $generated@@706) ($generated@@283 $generated@@707)) ($generated@@140 ($generated@@421 $generated@@706) ($generated@@283 $generated@@708))) ($generated@@140 ($generated@@455 $generated@@706) ($generated@@283 ($generated@@159 $generated@@707 $generated@@708)))))
 :pattern ( ($generated@@140 $generated@@706 ($generated@@481 $generated@@707 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@2) ($generated@@140 $generated@@709 $generated@@46))
 :pattern ( ($generated@@140 $generated@@709 $generated@@46))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@3) ($generated@@140 $generated@@710 $generated@@47))
 :pattern ( ($generated@@140 $generated@@710 $generated@@47))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@4) ($generated@@140 $generated@@711 $generated@@44))
 :pattern ( ($generated@@140 $generated@@711 $generated@@44))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@523) ($generated@@140 $generated@@712 $generated@@45))
 :pattern ( ($generated@@140 $generated@@712 $generated@@45))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@169) ($generated@@140 $generated@@713 $generated@@48))
 :pattern ( ($generated@@140 $generated@@713 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () Int)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () Int)
(declare-fun $generated@@722 () Int)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 (T@U) Bool)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () Int)
(assert  (and (and (and (= (type $generated@@716) $generated@@81) (= (type $generated@@717) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@718) $generated@@81)) (= (type $generated@@723) ($generated@@198 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 72) (let (($generated@@727 true))
(let (($generated@@728  (=> (and (<= (+ $generated@@714 $generated@@715) ($generated@@136 $generated@@716)) (forall (($generated@@729 Int) ) (!  (=> true (=> (and (<= ($generated@@288 0) $generated@@729) (< $generated@@729 $generated@@715)) (= ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@729)))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@716) ($generated@@262 (+ $generated@@714 $generated@@729))))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@729))))
))) (and (=> (= (ControlFlow 0 51) (- 0 56)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 51) (- 0 55)) (and (<= 0 $generated@@715) (<= $generated@@715 ($generated@@136 $generated@@718)))) (and (=> (= (ControlFlow 0 51) (- 0 54)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 51) (- 0 53)) (and (<= 0 $generated@@714) (<= $generated@@714 ($generated@@136 $generated@@716)))) (and (=> (= (ControlFlow 0 51) (- 0 52)) (and (<= $generated@@714 (+ $generated@@714 $generated@@715)) (<= (+ $generated@@714 $generated@@715) ($generated@@136 $generated@@716)))) (=> (= (ControlFlow 0 51) (- 0 50)) ($generated@@319 ($generated@@260 ($generated@@261 $generated@@717 $generated@@718) $generated@@715) ($generated@@174 ($generated@@260 ($generated@@261 $generated@@717 $generated@@716) (+ $generated@@714 $generated@@715)) $generated@@714)))))))))))))
(let (($generated@@730  (=> (and (not (and (<= ($generated@@288 0) $generated@@719) (< $generated@@719 $generated@@715))) (= (ControlFlow 0 64) 51)) $generated@@728)))
(let (($generated@@731  (=> (and (<= ($generated@@288 0) $generated@@719) (< $generated@@719 $generated@@715)) (and (=> (= (ControlFlow 0 59) (- 0 63)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 59) (- 0 62)) (and (<= 0 $generated@@719) (< $generated@@719 ($generated@@136 $generated@@718)))) (=> (and (<= 0 $generated@@719) (< $generated@@719 ($generated@@136 $generated@@718))) (and (=> (= (ControlFlow 0 59) (- 0 61)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 59) (- 0 60)) (and (<= 0 (+ $generated@@714 $generated@@719)) (< (+ $generated@@714 $generated@@719) ($generated@@136 $generated@@716)))) (=> (and (<= 0 (+ $generated@@714 $generated@@719)) (< (+ $generated@@714 $generated@@719) ($generated@@136 $generated@@716))) (=> (= (ControlFlow 0 59) 51) $generated@@728))))))))))))
(let (($generated@@732  (=> (< $generated@@719 ($generated@@288 0)) (and (=> (= (ControlFlow 0 66) 59) $generated@@731) (=> (= (ControlFlow 0 66) 64) $generated@@730)))))
(let (($generated@@733  (=> (<= ($generated@@288 0) $generated@@719) (and (=> (= (ControlFlow 0 65) 59) $generated@@731) (=> (= (ControlFlow 0 65) 64) $generated@@730)))))
(let (($generated@@734  (and (=> (= (ControlFlow 0 67) 65) $generated@@733) (=> (= (ControlFlow 0 67) 66) $generated@@732))))
(let (($generated@@735  (=> (<= (+ $generated@@714 $generated@@715) ($generated@@136 $generated@@716)) (and (=> (= (ControlFlow 0 68) 67) $generated@@734) (=> (= (ControlFlow 0 68) 58) $generated@@727)))))
(let (($generated@@736  (=> (and (< ($generated@@136 $generated@@716) (+ $generated@@714 $generated@@715)) (= (ControlFlow 0 57) 51)) $generated@@728)))
(let (($generated@@737  (and (=> (= (ControlFlow 0 69) (- 0 70)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 69) 68) $generated@@735) (=> (= (ControlFlow 0 69) 57) $generated@@736))))))
(let (($generated@@738 true))
(let (($generated@@739  (=> (and (<= (+ $generated@@714 ($generated@@136 $generated@@718)) ($generated@@136 $generated@@716)) (forall (($generated@@740 Int) ) (!  (=> true (=> (and (<= $generated@@720 $generated@@740) (< $generated@@740 ($generated@@136 $generated@@718))) (= ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@740)))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@716) ($generated@@262 (+ $generated@@714 $generated@@740))))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@740))))
))) (and (=> (= (ControlFlow 0 27) (- 0 33)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 27) (- 0 32)) (and (<= 0 $generated@@720) (<= $generated@@720 ($generated@@136 $generated@@718)))) (and (=> (= (ControlFlow 0 27) (- 0 31)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 27) (- 0 30)) (and (<= 0 (+ $generated@@714 $generated@@720)) (<= (+ $generated@@714 $generated@@720) ($generated@@136 $generated@@716)))) (and (=> (= (ControlFlow 0 27) (- 0 29)) (not (= $generated@@718 $generated@@138))) (and (=> (= (ControlFlow 0 27) (- 0 28)) (and (<= (+ $generated@@714 $generated@@720) (+ $generated@@714 ($generated@@136 $generated@@718))) (<= (+ $generated@@714 ($generated@@136 $generated@@718)) ($generated@@136 $generated@@716)))) (=> (= (ControlFlow 0 27) (- 0 26)) ($generated@@319 ($generated@@174 ($generated@@261 $generated@@717 $generated@@718) $generated@@720) ($generated@@174 ($generated@@260 ($generated@@261 $generated@@717 $generated@@716) (+ $generated@@714 ($generated@@136 $generated@@718))) (+ $generated@@714 $generated@@720)))))))))))))))
(let (($generated@@741  (=> (and (not (and (<= $generated@@720 $generated@@721) (< $generated@@721 ($generated@@136 $generated@@718)))) (= (ControlFlow 0 41) 27)) $generated@@739)))
(let (($generated@@742  (=> (and (<= $generated@@720 $generated@@721) (< $generated@@721 ($generated@@136 $generated@@718))) (and (=> (= (ControlFlow 0 36) (- 0 40)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 36) (- 0 39)) (and (<= 0 $generated@@721) (< $generated@@721 ($generated@@136 $generated@@718)))) (=> (and (<= 0 $generated@@721) (< $generated@@721 ($generated@@136 $generated@@718))) (and (=> (= (ControlFlow 0 36) (- 0 38)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 36) (- 0 37)) (and (<= 0 (+ $generated@@714 $generated@@721)) (< (+ $generated@@714 $generated@@721) ($generated@@136 $generated@@716)))) (=> (and (<= 0 (+ $generated@@714 $generated@@721)) (< (+ $generated@@714 $generated@@721) ($generated@@136 $generated@@716))) (=> (= (ControlFlow 0 36) 27) $generated@@739))))))))))))
(let (($generated@@743  (=> (< $generated@@721 $generated@@720) (and (=> (= (ControlFlow 0 44) 36) $generated@@742) (=> (= (ControlFlow 0 44) 41) $generated@@741)))))
(let (($generated@@744  (=> (<= $generated@@720 $generated@@721) (and (=> (= (ControlFlow 0 42) (- 0 43)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 42) 36) $generated@@742) (=> (= (ControlFlow 0 42) 41) $generated@@741)))))))
(let (($generated@@745  (and (=> (= (ControlFlow 0 45) 42) $generated@@744) (=> (= (ControlFlow 0 45) 44) $generated@@743))))
(let (($generated@@746  (=> (<= (+ $generated@@714 ($generated@@136 $generated@@718)) ($generated@@136 $generated@@716)) (and (=> (= (ControlFlow 0 46) 45) $generated@@745) (=> (= (ControlFlow 0 46) 35) $generated@@738)))))
(let (($generated@@747  (=> (and (< ($generated@@136 $generated@@716) (+ $generated@@714 ($generated@@136 $generated@@718))) (= (ControlFlow 0 34) 27)) $generated@@739)))
(let (($generated@@748  (and (=> (= (ControlFlow 0 47) (- 0 49)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 47) (- 0 48)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 47) 46) $generated@@746) (=> (= (ControlFlow 0 47) 34) $generated@@747))))))))
(let (($generated@@749 true))
(let (($generated@@750  (=> (and (<= (+ (+ $generated@@714 $generated@@720) $generated@@715) ($generated@@136 $generated@@716)) (forall (($generated@@751 Int) ) (!  (=> true (=> (and (<= $generated@@720 $generated@@751) (< $generated@@751 (+ $generated@@720 $generated@@715))) (= ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@751)))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@716) ($generated@@262 (+ $generated@@714 $generated@@751))))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@751))))
))) (and (=> (= (ControlFlow 0 5) (- 0 11)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (and (<= 0 $generated@@720) (<= $generated@@720 ($generated@@136 $generated@@718)))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (and (<= $generated@@720 (+ $generated@@720 $generated@@715)) (<= (+ $generated@@720 $generated@@715) ($generated@@136 $generated@@718)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 (+ $generated@@714 $generated@@720)) (<= (+ $generated@@714 $generated@@720) ($generated@@136 $generated@@716)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= (+ $generated@@714 $generated@@720) (+ (+ $generated@@714 $generated@@720) $generated@@715)) (<= (+ (+ $generated@@714 $generated@@720) $generated@@715) ($generated@@136 $generated@@716)))) (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@319 ($generated@@174 ($generated@@260 ($generated@@261 $generated@@717 $generated@@718) (+ $generated@@720 $generated@@715)) $generated@@720) ($generated@@174 ($generated@@260 ($generated@@261 $generated@@717 $generated@@716) (+ (+ $generated@@714 $generated@@720) $generated@@715)) (+ $generated@@714 $generated@@720)))))))))))))))
(let (($generated@@752  (=> (and (not (and (<= $generated@@720 $generated@@722) (< $generated@@722 (+ $generated@@720 $generated@@715)))) (= (ControlFlow 0 19) 5)) $generated@@750)))
(let (($generated@@753  (=> (and (<= $generated@@720 $generated@@722) (< $generated@@722 (+ $generated@@720 $generated@@715))) (and (=> (= (ControlFlow 0 14) (- 0 18)) (not (= $generated@@718 $generated@@138))) (=> (not (= $generated@@718 $generated@@138)) (and (=> (= (ControlFlow 0 14) (- 0 17)) (and (<= 0 $generated@@722) (< $generated@@722 ($generated@@136 $generated@@718)))) (=> (and (<= 0 $generated@@722) (< $generated@@722 ($generated@@136 $generated@@718))) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (and (<= 0 (+ $generated@@714 $generated@@722)) (< (+ $generated@@714 $generated@@722) ($generated@@136 $generated@@716)))) (=> (and (<= 0 (+ $generated@@714 $generated@@722)) (< (+ $generated@@714 $generated@@722) ($generated@@136 $generated@@716))) (=> (= (ControlFlow 0 14) 5) $generated@@750))))))))))))
(let (($generated@@754  (=> (< $generated@@722 $generated@@720) (and (=> (= (ControlFlow 0 21) 14) $generated@@753) (=> (= (ControlFlow 0 21) 19) $generated@@752)))))
(let (($generated@@755  (=> (<= $generated@@720 $generated@@722) (and (=> (= (ControlFlow 0 20) 14) $generated@@753) (=> (= (ControlFlow 0 20) 19) $generated@@752)))))
(let (($generated@@756  (and (=> (= (ControlFlow 0 22) 20) $generated@@755) (=> (= (ControlFlow 0 22) 21) $generated@@754))))
(let (($generated@@757  (=> (<= (+ (+ $generated@@714 $generated@@720) $generated@@715) ($generated@@136 $generated@@716)) (and (=> (= (ControlFlow 0 23) 22) $generated@@756) (=> (= (ControlFlow 0 23) 13) $generated@@749)))))
(let (($generated@@758  (=> (and (< ($generated@@136 $generated@@716) (+ (+ $generated@@714 $generated@@720) $generated@@715)) (= (ControlFlow 0 12) 5)) $generated@@750)))
(let (($generated@@759  (and (=> (= (ControlFlow 0 24) (- 0 25)) (not (= $generated@@716 $generated@@138))) (=> (not (= $generated@@716 $generated@@138)) (and (=> (= (ControlFlow 0 24) 23) $generated@@757) (=> (= (ControlFlow 0 24) 12) $generated@@758))))))
(let (($generated@@760  (=> (and (and (and (and (not (and (<= (+ $generated@@714 $generated@@715) ($generated@@136 $generated@@716)) (forall (($generated@@761 Int) ) (!  (=> true (=> (and (<= ($generated@@288 0) $generated@@761) (< $generated@@761 $generated@@715)) (= ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@761)))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@716) ($generated@@262 (+ $generated@@714 $generated@@761))))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@761))))
)))) (not (and (<= (+ $generated@@714 ($generated@@136 $generated@@718)) ($generated@@136 $generated@@716)) (forall (($generated@@762 Int) ) (!  (=> true (=> (and (<= $generated@@720 $generated@@762) (< $generated@@762 ($generated@@136 $generated@@718))) (= ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@762)))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@716) ($generated@@262 (+ $generated@@714 $generated@@762))))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@762))))
))))) (not (and (<= (+ (+ $generated@@714 $generated@@720) $generated@@715) ($generated@@136 $generated@@716)) (forall (($generated@@763 Int) ) (!  (=> true (=> (and (<= $generated@@720 $generated@@763) (< $generated@@763 (+ $generated@@720 $generated@@715))) (= ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@763)))) ($generated ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@716) ($generated@@262 (+ $generated@@714 $generated@@763))))))))
 :pattern ( ($generated@@445 $generated@@2 ($generated@@87 ($generated@@85 $generated@@717 $generated@@718) ($generated@@262 $generated@@763))))
))))) (not ($generated@@0 ($generated@@290 ($generated@@11 true))))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@764 true))
(let (($generated@@765  (=> (= $generated@@723 ($generated@@197 $generated@@138 $generated@@717 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 71) 69) $generated@@737) (=> (= (ControlFlow 0 71) 47) $generated@@748)) (=> (= (ControlFlow 0 71) 24) $generated@@759)) (=> (= (ControlFlow 0 71) 1) $generated@@764)) (=> (= (ControlFlow 0 71) 3) $generated@@760)))))
(let (($generated@@766  (=> (and ($generated@@148 $generated@@717) ($generated@@724 $generated@@717)) (=> (and (and ($generated@@140 $generated@@718 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@718 ($generated@@153 $generated@@46) $generated@@717)) (and ($generated@@140 $generated@@716 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@716 ($generated@@153 $generated@@46) $generated@@717))) (=> (and (and (and (<= ($generated@@288 0) $generated@@715) (<= ($generated@@288 0) $generated@@725)) (and (<= ($generated@@288 0) $generated@@720) (<= ($generated@@288 0) $generated@@714))) (and (and (= 1 $generated@@726) (<= (+ $generated@@720 $generated@@715) ($generated@@136 $generated@@718))) (and (<= (+ $generated@@714 $generated@@725) ($generated@@136 $generated@@716)) (= (ControlFlow 0 72) 71)))) $generated@@765)))))
$generated@@766)))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
