(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@T T@U T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 (T@T T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@355 (T@U T@U) Bool)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@81))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@78) 11)) (= (type $generated@@65) $generated@@78)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@79) 12)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@82 $generated@@60) 0))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@73)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@76)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 13)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@75 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 15)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@75 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@72)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@147) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (= (type $generated@@149) $generated@@72) (= (type $generated@@150) $generated@@90)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@90) (= (type $generated@@152) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@151 $generated@@149 $generated@@152)  (or (= $generated@@151 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@151 $generated@@149 $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@72))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@90) (= (type $generated@@155) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@154 $generated@@153 $generated@@155)  (or (= $generated@@154 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@88 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@88 0)))
)))
(assert  (and (= ($generated@@1 $generated@@160) 16) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@72)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@72) (= (type $generated@@164) $generated@@72)) (= (type $generated@@165) $generated@@160)) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 17) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@72)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@72)) ($generated@@156 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@156 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@90) (= ($generated@@156 $generated@@181 $generated@@153)  (or (= $generated@@181 $generated@@150) (= ($generated@@179 $generated@@181) $generated@@153))))
 :pattern ( ($generated@@156 $generated@@181 $generated@@153))
)))
(assert (= (type $generated@@182) $generated@@72))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@90) (= (type $generated@@184) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@183 $generated@@182 $generated@@184) ($generated@@87 $generated@@183 $generated@@153 $generated@@184)))
 :pattern ( ($generated@@87 $generated@@183 $generated@@182 $generated@@184))
)))
(assert (= (type $generated@@185) ($generated@@74 ($generated@@89 $generated@@169 $generated@@4))))
(assert (= ($generated@@82 $generated@@185) 0))
(assert (forall (($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= (type ($generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@74 $generated@@187))
 :pattern ( ($generated@@186 $generated@@187 $generated@@188 $generated@@189))
)))
(assert (= ($generated@@186 ($generated@@89 $generated@@169 $generated@@4) $generated@@65 $generated@@71) $generated@@185))
(assert ($generated@@190 $generated@@185))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@193 $generated@@194)) $generated@@160)
 :pattern ( ($generated@@191 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (and (= (type $generated@@195) $generated@@72) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) $generated@@169)) (= (type $generated@@198) $generated@@169)) (= ($generated@@156 ($generated@@191 $generated@@197 $generated@@198) ($generated@@159 $generated@@195 $generated@@196))  (and ($generated@@192 $generated@@197 $generated@@195) ($generated@@192 $generated@@198 $generated@@196))))
 :pattern ( ($generated@@156 ($generated@@191 $generated@@197 $generated@@198) ($generated@@159 $generated@@195 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) $generated@@160) (= (type $generated@@200) $generated@@160)) (= ($generated@@166 $generated@@199 $generated@@200) (= $generated@@199 $generated@@200)))
 :pattern ( ($generated@@166 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@201 $generated@@202)) $generated@@72)
 :pattern ( ($generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@204) $generated@@72)) (= ($generated@@156 $generated@@203 ($generated@@201 $generated@@204)) (forall (($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@169) ($generated@@0 ($generated@@94 $generated@@203 $generated@@205))) ($generated@@192 $generated@@205 $generated@@204))
 :pattern ( ($generated@@94 $generated@@203 $generated@@205))
))))
 :pattern ( ($generated@@156 $generated@@203 ($generated@@201 $generated@@204)))
)))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@206 $generated@@207)) $generated@@72)
 :pattern ( ($generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@208) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@209) $generated@@72)) (= ($generated@@156 $generated@@208 ($generated@@206 $generated@@209)) (forall (($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@169) ($generated@@0 ($generated@@94 $generated@@208 $generated@@210))) ($generated@@192 $generated@@210 $generated@@209))
 :pattern ( ($generated@@94 $generated@@208 $generated@@210))
))))
 :pattern ( ($generated@@156 $generated@@208 ($generated@@206 $generated@@209)))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@215 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@219) $generated@@90)) (=> (and (and ($generated@@216 $generated@@218) (and (not (= $generated@@219 $generated@@150)) (= ($generated@@179 $generated@@219) $generated@@153))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@218 $generated@@219) $generated@@60))) ($generated@@87 ($generated@@215 $generated@@219) ($generated@@201 $generated@@149) $generated@@218)))
 :pattern ( ($generated@@215 $generated@@219) ($generated@@96 ($generated@@94 $generated@@218 $generated@@219) $generated@@60))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@72) (= (type $generated@@222) $generated@@72)) (= (type $generated@@223) $generated@@169)) (= (type $generated@@224) $generated@@169)) (= (type $generated@@225) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@216 $generated@@225)) (= ($generated@@87 ($generated@@191 $generated@@223 $generated@@224) ($generated@@159 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@87 ($generated@@191 $generated@@223 $generated@@224) ($generated@@159 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@77)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@160) (= ($generated@@158 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@228))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (= ($generated@@1 ($generated@@232 $generated@@236 $generated@@237)) 18)) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@238 $generated@@239)) $generated@@238)
 :pattern ( ($generated@@232 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@234 ($generated@@232 $generated@@240 $generated@@241)) $generated@@241)
 :pattern ( ($generated@@232 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@234 (type $generated@@242))))
(= (type ($generated@@229 $generated@@242 $generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@229 $generated@@242 $generated@@243 $generated@@244))
))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(let (($generated@@251 (type $generated@@247)))
(= (type ($generated@@235 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@232 $generated@@251 $generated@@250))))
 :pattern ( ($generated@@235 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@234 (type $generated@@252))))
 (=> (= (type $generated@@255) $generated@@256) (= ($generated@@229 ($generated@@235 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@253 $generated@@254) $generated@@255)))
 :weight 0
))) (and (and (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (or (= $generated@@259 $generated@@261) (= ($generated@@229 ($generated@@235 $generated@@258 $generated@@259 $generated@@260 $generated@@257) $generated@@261 $generated@@262) ($generated@@229 $generated@@258 $generated@@261 $generated@@262)))
 :weight 0
)) (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (or (= $generated@@266 $generated@@268) (= ($generated@@229 ($generated@@235 $generated@@264 $generated@@265 $generated@@266 $generated@@263) $generated@@267 $generated@@268) ($generated@@229 $generated@@264 $generated@@267 $generated@@268)))
 :weight 0
))) (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (or true (= ($generated@@229 ($generated@@235 $generated@@270 $generated@@271 $generated@@272 $generated@@269) $generated@@273 $generated@@274) ($generated@@229 $generated@@270 $generated@@273 $generated@@274)))
 :weight 0
)))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@230 $generated@@275 $generated@@276 $generated@@277 $generated@@278 $generated@@279 $generated@@280)) ($generated@@232 $generated@@90 $generated@@4))
 :pattern ( ($generated@@230 $generated@@275 $generated@@276 $generated@@277 $generated@@278 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@U) ) (! (= (type ($generated@@231 $generated@@281)) $generated@@169)
 :pattern ( ($generated@@231 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@75 (type $generated@@289))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@282) $generated@@90) (= (type $generated@@283) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@284) ($generated@@74 $generated@@4))) (= (type $generated@@285) $generated@@90)) (= (type $generated@@286) ($generated@@89 $generated@@169 $generated@@4))) (= (type $generated@@287) ($generated@@89 $generated@@169 $generated@@4))) (= (type $generated@@288) $generated@@90)) (= (type $generated@@289) ($generated@@74 $generated@@290))) (= ($generated@@0 ($generated@@229 ($generated@@230 $generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))  (=> (and (not (= $generated@@288 $generated@@282)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@283 $generated@@288) $generated@@284))) (or (or (= $generated@@288 $generated@@285) ($generated@@0 ($generated@@94 $generated@@286 ($generated@@231 $generated@@288)))) ($generated@@0 ($generated@@94 $generated@@287 ($generated@@231 $generated@@288))))))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@160) ($generated@@158 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@169) (= (type $generated@@293) $generated@@169)) (= $generated@@291 ($generated@@191 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@158 $generated@@291))
)))
(assert  (and (and (forall (($generated@@298 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@298)) 19)) (forall (($generated@@299 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
))) (forall (($generated@@300 T@T) ) (! (= (type ($generated@@294 $generated@@300)) ($generated@@296 $generated@@300))
 :pattern ( ($generated@@294 $generated@@300))
))))
(assert (forall (($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@301)) 0)
 :pattern ( ($generated@@294 $generated@@301))
)))
(assert ($generated@@190 $generated@@60))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@72) (= (type $generated@@304) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@220 ($generated@@231 $generated@@302) $generated@@303 $generated@@304) ($generated@@87 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@220 ($generated@@231 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@306) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@307) $generated@@169)) (= (type $generated@@308) $generated@@72)) ($generated@@145 $generated@@305 $generated@@306)) ($generated@@220 $generated@@307 $generated@@308 $generated@@305)) ($generated@@220 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@145 $generated@@305 $generated@@306) ($generated@@220 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@310) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@312) $generated@@72)) ($generated@@145 $generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@312 $generated@@309)) ($generated@@87 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@145 $generated@@309 $generated@@310) ($generated@@87 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@315 T@T) ) (! (= (type ($generated@@314 $generated@@315)) ($generated@@89 $generated@@315 $generated@@2))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@92 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@89 $generated@@317 $generated@@2)) (and (= (= ($generated@@313 $generated@@316) 0) (= $generated@@316 ($generated@@314 $generated@@317))) (=> (not (= ($generated@@313 $generated@@316) 0)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) (< 0 ($generated ($generated@@94 $generated@@316 $generated@@318))))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 20)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@89 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@94 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@94 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 21)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@89 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@94 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@94 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@357) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@355 $generated@@356 $generated@@357)) (and ($generated@@145 $generated@@356 $generated@@357) (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@75 (type $generated@@359))))
 (=> (and (and (= (type $generated@@358) $generated@@90) (= (type $generated@@359) ($generated@@74 $generated@@360))) (not ($generated@@190 $generated@@359))) (= ($generated@@96 ($generated@@94 $generated@@356 $generated@@358) $generated@@359) ($generated@@96 ($generated@@94 $generated@@357 $generated@@358) $generated@@359))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@357 $generated@@358) $generated@@359))
))))
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@92 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@89 $generated@@362 $generated@@2)) (= ($generated@@175 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@94 $generated@@361 $generated@@363))) (<= ($generated ($generated@@94 $generated@@361 $generated@@363)) ($generated@@313 $generated@@361))))
 :pattern ( ($generated@@94 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@175 $generated@@361))
)))
(assert (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@169) ($generated@@192 $generated@@367 $generated@@149)) (and (= ($generated@@231 ($generated@@364 $generated@@90 $generated@@367)) $generated@@367) ($generated@@156 ($generated@@364 $generated@@90 $generated@@367) $generated@@149)))
 :pattern ( ($generated@@192 $generated@@367 $generated@@149))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@169) ($generated@@192 $generated@@368 $generated@@153)) (and (= ($generated@@231 ($generated@@364 $generated@@90 $generated@@368)) $generated@@368) ($generated@@156 ($generated@@364 $generated@@90 $generated@@368) $generated@@153)))
 :pattern ( ($generated@@192 $generated@@368 $generated@@153))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@169) ($generated@@192 $generated@@369 $generated@@182)) (and (= ($generated@@231 ($generated@@364 $generated@@90 $generated@@369)) $generated@@369) ($generated@@156 ($generated@@364 $generated@@90 $generated@@369) $generated@@182)))
 :pattern ( ($generated@@192 $generated@@369 $generated@@182))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@90) (= ($generated@@156 $generated@@370 $generated@@182)  (and ($generated@@156 $generated@@370 $generated@@153) (not (= $generated@@370 $generated@@150)))))
 :pattern ( ($generated@@156 $generated@@370 $generated@@182))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@323 (type $generated@@371))))
(let (($generated@@373 ($generated@@322 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@321 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@320 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@94 ($generated@@319 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@319 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@323 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@89 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@323 (type $generated@@378))))
(let (($generated@@380 ($generated@@322 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@321 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@320 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@94 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@341 (type $generated@@382))))
(let (($generated@@384 ($generated@@340 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@339 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@338 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@94 ($generated@@337 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@337 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@341 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@89 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@341 (type $generated@@389))))
(let (($generated@@391 ($generated@@340 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@339 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@338 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@94 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@394) $generated@@72)) (= ($generated@@156 $generated@@393 ($generated@@174 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@169) (< 0 ($generated ($generated@@94 $generated@@393 $generated@@395)))) ($generated@@192 $generated@@395 $generated@@394))
 :pattern ( ($generated@@94 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@156 $generated@@393 ($generated@@174 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@397) $generated@@72)) (= (type $generated@@398) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@396 ($generated@@201 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@169) ($generated@@0 ($generated@@94 $generated@@396 $generated@@399))) ($generated@@220 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@94 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@87 $generated@@396 ($generated@@201 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@401) $generated@@72)) (= (type $generated@@402) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@400 ($generated@@206 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@169) ($generated@@0 ($generated@@94 $generated@@400 $generated@@403))) ($generated@@220 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@94 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@87 $generated@@400 ($generated@@206 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@94 ($generated@@314 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@94 ($generated@@314 $generated@@405) $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@407) $generated@@90)) (=> (and (and ($generated@@216 $generated@@406) (and (not (= $generated@@407 $generated@@150)) (= ($generated@@179 $generated@@407) $generated@@153))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@60))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@185) ($generated@@201 $generated@@149) $generated@@406)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@185))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@323 (type $generated@@411))))
(let (($generated@@413 ($generated@@322 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@89 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@321 $generated@@169 $generated@@169)) (= (type $generated@@415) $generated@@169)) (= ($generated@@0 ($generated@@94 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@94 ($generated@@319 $generated@@414) ($generated@@167 ($generated@@364 $generated@@160 $generated@@415)))) (= ($generated@@94 ($generated@@409 $generated@@414) ($generated@@167 ($generated@@364 $generated@@160 $generated@@415))) ($generated@@168 ($generated@@364 $generated@@160 $generated@@415))))))
 :pattern ( ($generated@@94 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@341 (type $generated@@419))))
(let (($generated@@421 ($generated@@340 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@89 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@339 $generated@@169 $generated@@169)) (= (type $generated@@423) $generated@@169)) (= ($generated@@0 ($generated@@94 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@94 ($generated@@337 $generated@@422) ($generated@@167 ($generated@@364 $generated@@160 $generated@@423)))) (= ($generated@@94 ($generated@@417 $generated@@422) ($generated@@167 ($generated@@364 $generated@@160 $generated@@423))) ($generated@@168 ($generated@@364 $generated@@160 $generated@@423))))))
 :pattern ( ($generated@@94 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@322 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@321 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@94 ($generated@@375 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@94 ($generated@@319 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@94 ($generated@@409 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@94 ($generated@@319 $generated@@424) $generated@@428))
 :pattern ( ($generated@@94 ($generated@@409 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@94 ($generated@@375 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@340 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@339 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@94 ($generated@@386 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@94 ($generated@@337 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@94 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@94 ($generated@@337 $generated@@429) $generated@@433))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@94 ($generated@@386 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@72)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@321 $generated@@169 $generated@@169)) (= (type $generated@@438) $generated@@72)) (= (type $generated@@439) $generated@@72)) (= (type $generated@@440) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@319 $generated@@437) $generated@@441))) (and ($generated@@220 ($generated@@94 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@220 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@94 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@94 ($generated@@319 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@87 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@72)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@339 $generated@@169 $generated@@169)) (= (type $generated@@446) $generated@@72)) (= (type $generated@@447) $generated@@72)) (= (type $generated@@448) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@337 $generated@@445) $generated@@449))) (and ($generated@@220 ($generated@@94 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@220 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@94 ($generated@@337 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@87 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@451) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@452) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@450 $generated@@452))) (and ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))) ($generated@@145 $generated@@450 $generated@@452))
 :pattern ( ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@89 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@341 (type $generated@@455))))
(let (($generated@@457 ($generated@@340 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@339 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@338 $generated@@457 $generated@@456)) (= ($generated@@337 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@337 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@341 (type $generated@@458))))
(let (($generated@@460 ($generated@@340 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@339 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@338 $generated@@460 $generated@@459)) (= ($generated@@386 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@386 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@341 (type $generated@@461))))
(let (($generated@@463 ($generated@@340 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@339 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@338 $generated@@463 $generated@@462)) (= ($generated@@416 $generated@@461) ($generated@@453 $generated@@169))))))
 :pattern ( ($generated@@416 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@323 (type $generated@@464))))
(let (($generated@@466 ($generated@@322 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@321 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@320 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@169) (= (type $generated@@468) $generated@@169)) ($generated@@0 ($generated@@94 ($generated@@408 $generated@@464) ($generated@@231 ($generated@@191 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@408 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@341 (type $generated@@469))))
(let (($generated@@471 ($generated@@340 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@339 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@338 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@169) (= (type $generated@@473) $generated@@169)) ($generated@@0 ($generated@@94 ($generated@@416 $generated@@469) ($generated@@231 ($generated@@191 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@416 $generated@@469))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@78)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@T) ) (!  (=> (and (= (type $generated@@476) $generated@@78) (= (type $generated@@477) $generated@@76)) (and (= ($generated@@474 ($generated@@186 $generated@@478 $generated@@476 $generated@@477)) $generated@@476) (= ($generated@@85 ($generated@@186 $generated@@478 $generated@@476 $generated@@477)) $generated@@477)))
 :pattern ( ($generated@@186 $generated@@478 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@169) ($generated@@192 $generated@@479 $generated@@46)) (and (= ($generated@@231 ($generated@@364 $generated@@2 $generated@@479)) $generated@@479) ($generated@@156 ($generated@@364 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@192 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@169) ($generated@@192 $generated@@480 $generated@@47)) (and (= ($generated@@231 ($generated@@364 $generated@@3 $generated@@480)) $generated@@480) ($generated@@156 ($generated@@364 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@192 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@169) ($generated@@192 $generated@@481 $generated@@44)) (and (= ($generated@@231 ($generated@@364 $generated@@4 $generated@@481)) $generated@@481) ($generated@@156 ($generated@@364 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@192 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 22))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@169) ($generated@@192 $generated@@483 $generated@@45)) (and (= ($generated@@231 ($generated@@364 $generated@@482 $generated@@483)) $generated@@483) ($generated@@156 ($generated@@364 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@192 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@72) (= ($generated@@192 ($generated@@231 $generated@@484) $generated@@485) ($generated@@156 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@192 ($generated@@231 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@92 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@89 $generated@@487 $generated@@2)) (<= 0 ($generated@@313 $generated@@486))))
 :pattern ( ($generated@@313 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@297 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@296 $generated@@489)) (<= 0 ($generated@@295 $generated@@488))))
 :pattern ( ($generated@@295 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@72)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@72) (= (type $generated@@493) $generated@@72)) (= ($generated@@490 ($generated@@434 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@434 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@72)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@494 ($generated@@434 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@434 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@72) (= (type $generated@@499) $generated@@72)) (= ($generated@@83 ($generated@@434 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@72) (= (type $generated@@509) $generated@@72)) (= ($generated@@83 ($generated@@442 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@169) (= (type $generated@@511) $generated@@169)) (= ($generated@@226 ($generated@@191 $generated@@510 $generated@@511)) $generated@@63))
 :pattern ( ($generated@@191 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@72) (= (type $generated@@515) $generated@@72)) (= ($generated@@512 ($generated@@159 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@72)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@72) (= (type $generated@@519) $generated@@72)) (= ($generated@@516 ($generated@@159 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@159 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@169) (= (type $generated@@521) $generated@@169)) (= ($generated@@167 ($generated@@191 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@191 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@169) (= (type $generated@@523) $generated@@169)) (= ($generated@@168 ($generated@@191 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@191 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@90) ($generated@@156 $generated@@524 $generated@@149))
 :pattern ( ($generated@@156 $generated@@524 $generated@@149))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@297 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@296 $generated@@169)) (= (type $generated@@532) $generated@@72)) (= (type $generated@@533) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@295 $generated@@531))) ($generated@@220 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@87 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@88 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@88 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@72)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@537 ($generated@@201 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@201 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@72) (= ($generated@@83 ($generated@@201 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@201 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@72)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@72) (= ($generated@@541 ($generated@@206 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@206 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@72) (= ($generated@@83 ($generated@@206 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@206 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@72)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@72) (= ($generated@@545 ($generated@@174 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@174 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@72) (= ($generated@@83 ($generated@@174 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@72)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@72) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@72) (= ($generated@@83 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@364 $generated@@554 ($generated@@231 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@231 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@321 $generated@@169 $generated@@169)) (= (type $generated@@556) $generated@@72)) (= (type $generated@@557) $generated@@72)) (= ($generated@@156 $generated@@555 ($generated@@434 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@319 $generated@@555) $generated@@558))) (and ($generated@@192 ($generated@@94 ($generated@@409 $generated@@555) $generated@@558) $generated@@557) ($generated@@192 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@94 ($generated@@409 $generated@@555) $generated@@558))
 :pattern ( ($generated@@94 ($generated@@319 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@156 $generated@@555 ($generated@@434 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@339 $generated@@169 $generated@@169)) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) (= ($generated@@156 $generated@@559 ($generated@@442 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@337 $generated@@559) $generated@@562))) (and ($generated@@192 ($generated@@94 ($generated@@417 $generated@@559) $generated@@562) $generated@@561) ($generated@@192 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@559) $generated@@562))
 :pattern ( ($generated@@94 ($generated@@337 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@156 $generated@@559 ($generated@@442 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@169) (= (type $generated@@566) $generated@@169)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@191 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@191 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@169) (= (type $generated@@568) $generated@@169)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@191 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@191 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@169) (= (type $generated@@570) $generated@@72)) (= (type $generated@@571) $generated@@72)) ($generated@@192 $generated@@569 ($generated@@434 $generated@@570 $generated@@571))) (and (= ($generated@@231 ($generated@@364 ($generated@@321 $generated@@169 $generated@@169) $generated@@569)) $generated@@569) ($generated@@156 ($generated@@364 ($generated@@321 $generated@@169 $generated@@169) $generated@@569) ($generated@@434 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@192 $generated@@569 ($generated@@434 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@169) (= (type $generated@@573) $generated@@72)) (= (type $generated@@574) $generated@@72)) ($generated@@192 $generated@@572 ($generated@@442 $generated@@573 $generated@@574))) (and (= ($generated@@231 ($generated@@364 ($generated@@339 $generated@@169 $generated@@169) $generated@@572)) $generated@@572) ($generated@@156 ($generated@@364 ($generated@@339 $generated@@169 $generated@@169) $generated@@572) ($generated@@442 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@192 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@72) (= (type $generated@@576) $generated@@72)) (= (type $generated@@577) $generated@@169)) ($generated@@192 $generated@@577 ($generated@@159 $generated@@575 $generated@@576))) (and (= ($generated@@231 ($generated@@364 $generated@@160 $generated@@577)) $generated@@577) ($generated@@156 ($generated@@364 $generated@@160 $generated@@577) ($generated@@159 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@192 $generated@@577 ($generated@@159 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@94 ($generated@@453 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@94 ($generated@@453 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@79)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@72) (= (type $generated@@583) $generated@@72)) (and (= ($generated@@83 ($generated@@159 $generated@@582 $generated@@583)) $generated@@64) (= ($generated@@580 ($generated@@159 $generated@@582 $generated@@583)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@160) (= ($generated@@563 ($generated@@231 $generated@@584)) ($generated@@564 $generated@@584)))
 :pattern ( ($generated@@563 ($generated@@231 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@169) ($generated@@192 $generated@@585 ($generated@@88 0))) (and (= ($generated@@231 ($generated@@364 $generated@@2 $generated@@585)) $generated@@585) ($generated@@156 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@585) ($generated@@88 0))))
 :pattern ( ($generated@@192 $generated@@585 ($generated@@88 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@169) (= (type $generated@@587) $generated@@72)) ($generated@@192 $generated@@586 ($generated@@201 $generated@@587))) (and (= ($generated@@231 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@586)) $generated@@586) ($generated@@156 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@586) ($generated@@201 $generated@@587))))
 :pattern ( ($generated@@192 $generated@@586 ($generated@@201 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@169) (= (type $generated@@589) $generated@@72)) ($generated@@192 $generated@@588 ($generated@@206 $generated@@589))) (and (= ($generated@@231 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@588)) $generated@@588) ($generated@@156 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@588) ($generated@@206 $generated@@589))))
 :pattern ( ($generated@@192 $generated@@588 ($generated@@206 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@169) (= (type $generated@@591) $generated@@72)) ($generated@@192 $generated@@590 ($generated@@174 $generated@@591))) (and (= ($generated@@231 ($generated@@364 ($generated@@89 $generated@@169 $generated@@2) $generated@@590)) $generated@@590) ($generated@@156 ($generated@@364 ($generated@@89 $generated@@169 $generated@@2) $generated@@590) ($generated@@174 $generated@@591))))
 :pattern ( ($generated@@192 $generated@@590 ($generated@@174 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@169) (= (type $generated@@593) $generated@@72)) ($generated@@192 $generated@@592 ($generated@@525 $generated@@593))) (and (= ($generated@@231 ($generated@@364 ($generated@@296 $generated@@169) $generated@@592)) $generated@@592) ($generated@@156 ($generated@@364 ($generated@@296 $generated@@169) $generated@@592) ($generated@@525 $generated@@593))))
 :pattern ( ($generated@@192 $generated@@592 ($generated@@525 $generated@@593)))
)))
(assert (= ($generated@@83 $generated@@149) $generated@@62))
(assert (= ($generated@@580 $generated@@149) $generated@@68))
(assert (= ($generated@@83 $generated@@153) $generated@@66))
(assert (= ($generated@@580 $generated@@153) $generated@@70))
(assert (= ($generated@@83 $generated@@182) $generated@@67))
(assert (= ($generated@@580 $generated@@182) $generated@@70))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@594 ($generated@@174 $generated@@595) $generated@@596) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@169) (< 0 ($generated ($generated@@94 $generated@@594 $generated@@597)))) ($generated@@220 $generated@@597 $generated@@595 $generated@@596))
 :pattern ( ($generated@@94 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@87 $generated@@594 ($generated@@174 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@90) (=> (and (not (= $generated@@598 $generated@@150)) (= ($generated@@179 $generated@@598) $generated@@153)) ($generated@@156 ($generated@@215 $generated@@598) ($generated@@201 $generated@@149))))
 :pattern ( ($generated@@215 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@160) (= (type $generated@@600) $generated@@72)) (= (type $generated@@601) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@216 $generated@@601) (and ($generated@@158 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@72) ($generated@@87 $generated@@599 ($generated@@159 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@87 $generated@@599 ($generated@@159 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@220 ($generated@@167 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@220 ($generated@@167 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@160) (= (type $generated@@604) $generated@@72)) (= (type $generated@@605) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@216 $generated@@605) (and ($generated@@158 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@72) ($generated@@87 $generated@@603 ($generated@@159 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@87 $generated@@603 ($generated@@159 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@220 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@220 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@608) $generated@@90)) (and ($generated@@216 $generated@@607) (and (not (= $generated@@608 $generated@@150)) (= ($generated@@179 $generated@@608) $generated@@153)))) ($generated@@156 ($generated@@96 ($generated@@94 $generated@@607 $generated@@608) $generated@@185) ($generated@@201 $generated@@149)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@607 $generated@@608) $generated@@185))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@169) (= (type $generated@@610) $generated@@169)) (= ($generated@@191 ($generated@@211 $generated@@609) ($generated@@211 $generated@@610)) ($generated@@211 ($generated@@191 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@191 ($generated@@211 $generated@@609) ($generated@@211 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@231 ($generated@@211 $generated@@611)) ($generated@@211 ($generated@@231 $generated@@611)))
 :pattern ( ($generated@@231 ($generated@@211 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@297 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@296 $generated@@613)) (= ($generated@@295 $generated@@612) 0)) (= $generated@@612 ($generated@@294 $generated@@613))))
 :pattern ( ($generated@@295 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@89 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@313 ($generated@@95 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@313 $generated@@614) ($generated ($generated@@94 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@313 ($generated@@95 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@619) $generated@@2)) ($generated@@87 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@87 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@621) $generated@@3)) ($generated@@87 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@87 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@623) $generated@@4)) ($generated@@87 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@87 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@625) $generated@@482)) ($generated@@87 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@87 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@627) $generated@@169)) ($generated@@87 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@87 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@296 $generated@@169)) (= (type $generated@@629) $generated@@72)) (= ($generated@@156 $generated@@628 ($generated@@525 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@295 $generated@@628))) ($generated@@192 ($generated@@526 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@526 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@156 $generated@@628 ($generated@@525 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@296 $generated@@169)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@295 $generated@@632))) (< ($generated@@564 ($generated@@364 $generated@@160 ($generated@@526 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@564 ($generated@@364 $generated@@160 ($generated@@526 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@321 $generated@@169 $generated@@169)) (= (type $generated@@635) $generated@@72)) (= (type $generated@@636) $generated@@72)) ($generated@@156 $generated@@634 ($generated@@434 $generated@@635 $generated@@636))) (and (and ($generated@@156 ($generated@@319 $generated@@634) ($generated@@201 $generated@@635)) ($generated@@156 ($generated@@375 $generated@@634) ($generated@@201 $generated@@636))) ($generated@@156 ($generated@@408 $generated@@634) ($generated@@201 ($generated@@159 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@156 $generated@@634 ($generated@@434 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@339 $generated@@169 $generated@@169)) (= (type $generated@@638) $generated@@72)) (= (type $generated@@639) $generated@@72)) ($generated@@156 $generated@@637 ($generated@@442 $generated@@638 $generated@@639))) (and (and ($generated@@156 ($generated@@337 $generated@@637) ($generated@@206 $generated@@638)) ($generated@@156 ($generated@@386 $generated@@637) ($generated@@206 $generated@@639))) ($generated@@156 ($generated@@416 $generated@@637) ($generated@@206 ($generated@@159 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@156 $generated@@637 ($generated@@442 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@156 $generated@@640 $generated@@46))
 :pattern ( ($generated@@156 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@156 $generated@@641 $generated@@47))
 :pattern ( ($generated@@156 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@156 $generated@@642 $generated@@44))
 :pattern ( ($generated@@156 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@482) ($generated@@156 $generated@@643 $generated@@45))
 :pattern ( ($generated@@156 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@169) ($generated@@156 $generated@@644 $generated@@48))
 :pattern ( ($generated@@156 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Bool)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () Int)
(assert  (and (and (= (type $generated@@645) ($generated@@232 $generated@@90 $generated@@4)) (= (type $generated@@646) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@647) $generated@@90)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@651 true))
(let (($generated@@652 true))
(let (($generated@@653  (=> (and (= $generated@@645 ($generated@@230 $generated@@150 $generated@@646 $generated@@60 $generated@@647 ($generated@@215 $generated@@647) ($generated@@96 ($generated@@94 $generated@@646 $generated@@647) $generated@@185))) (= $generated@@648 ($generated@@0 ($generated@@229 $generated@@645 $generated@@647 $generated@@185)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@648) (=> $generated@@648 (and (=> (= (ControlFlow 0 3) 1) $generated@@652) (=> (= (ControlFlow 0 3) 2) $generated@@651)))))))
(let (($generated@@654  (=> (and ($generated@@216 $generated@@646) ($generated@@649 $generated@@646)) (=> (and (and (not (= $generated@@647 $generated@@150)) (and ($generated@@156 $generated@@647 $generated@@182) ($generated@@87 $generated@@647 $generated@@182 $generated@@646))) (and (= 0 $generated@@650) (= (ControlFlow 0 5) 3))) $generated@@653))))
$generated@@654)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@345 () Int)
(declare-fun $generated@@346 () Bool)
(declare-fun $generated@@347 () Int)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@224 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)))
)))
(assert  (=> (<= 0 $generated@@345) (=> (or $generated@@346 (not (= 0 $generated@@345))) (= $generated@@347 ($generated@@243 12)))))
(assert  (=> (<= 0 $generated@@345) (=> (or $generated@@346 (not (= 0 $generated@@345))) (= $generated@@347 ($generated@@243 12)))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@349) $generated@@64)) (= (type $generated@@350) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@348 ($generated@@233 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) ($generated@@0 ($generated@@81 $generated@@348 $generated@@351))) ($generated@@250 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@74 $generated@@348 ($generated@@233 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@238 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@250 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@238 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 (type $generated@@356)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@357) $generated@@356)) 0))
 :pattern ( (let (($generated@@357 (type $generated@@356)))
($generated@@81 ($generated@@276 $generated@@357) $generated@@356)))
)))
(assert  (and (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@358 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@358 $generated@@361))
)) (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@359 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@359 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@285 (type $generated@@364))))
(let (($generated@@366 ($generated@@284 (type $generated@@364))))
(= (type ($generated@@360 $generated@@364)) ($generated@@76 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@360 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@368) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@367) ($generated@@143 ($generated@@359 $generated@@136 $generated@@368)))) (= ($generated@@81 ($generated@@360 $generated@@367) ($generated@@143 ($generated@@359 $generated@@136 $generated@@368))) ($generated@@144 ($generated@@359 $generated@@136 $generated@@368))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@367) $generated@@368))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@303 (type $generated@@372))))
(let (($generated@@374 ($generated@@302 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@375) ($generated@@143 ($generated@@359 $generated@@136 $generated@@376)))) (= ($generated@@81 ($generated@@370 $generated@@375) ($generated@@143 ($generated@@359 $generated@@136 $generated@@376))) ($generated@@144 ($generated@@359 $generated@@136 $generated@@376))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 ($generated@@284 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@283 $generated@@380 $generated@@379)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@377) $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@377) $generated@@381)) (= $generated@@378 ($generated@@81 ($generated@@360 $generated@@377) $generated@@381))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@377) $generated@@381))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@302 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@301 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@370 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@64)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@390) $generated@@394))) (and ($generated@@250 ($generated@@81 ($generated@@360 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@250 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@398) $generated@@402))) (and ($generated@@250 ($generated@@81 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@250 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert  (=> (<= 0 $generated@@345) (=> (or $generated@@346 (not (= 0 $generated@@345))) true)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@369 $generated@@411) ($generated@@403 $generated@@145))))))
 :pattern ( ($generated@@369 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@145) (= (type $generated@@418) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@414) ($generated@@270 ($generated@@223 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@358 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@419) ($generated@@270 ($generated@@223 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@369 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@224 $generated@@424 $generated@@46)) (and (= ($generated@@270 ($generated@@359 $generated@@2 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@359 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@224 $generated@@425 $generated@@47)) (and (= ($generated@@270 ($generated@@359 $generated@@3 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@359 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@44)) (and (= ($generated@@270 ($generated@@359 $generated@@4 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@359 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@224 $generated@@428 $generated@@45)) (and (= ($generated@@270 ($generated@@359 $generated@@427 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@359 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@429) $generated@@430) ($generated@@132 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@265 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@264 $generated@@434)) (<= 0 ($generated@@263 $generated@@433))))
 :pattern ( ($generated@@263 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@387 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@387 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@387 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@387 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@387 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@395 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@395 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@395 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@135 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@135 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@135 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@135 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@145) (= (type $generated@@466) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@223 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@223 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@265 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@264 $generated@@145)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@263 $generated@@475))) ($generated@@250 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@233 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@233 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@238 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@238 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@150 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@150 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@359 $generated@@498 ($generated@@270 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@270 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@132 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@224 ($generated@@81 ($generated@@360 $generated@@499) $generated@@502) $generated@@501) ($generated@@224 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@132 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@132 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@224 ($generated@@81 ($generated@@370 $generated@@503) $generated@@506) $generated@@505) ($generated@@224 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@132 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@145)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@223 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@223 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@145)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@223 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@223 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@224 $generated@@513 ($generated@@387 $generated@@514 $generated@@515))) (and (= ($generated@@270 ($generated@@359 ($generated@@283 $generated@@145 $generated@@145) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@359 ($generated@@283 $generated@@145 $generated@@145) $generated@@513) ($generated@@387 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@224 $generated@@513 ($generated@@387 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@224 $generated@@516 ($generated@@395 $generated@@517 $generated@@518))) (and (= ($generated@@270 ($generated@@359 ($generated@@301 $generated@@145 $generated@@145) $generated@@516)) $generated@@516) ($generated@@132 ($generated@@359 ($generated@@301 $generated@@145 $generated@@145) $generated@@516) ($generated@@395 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@224 $generated@@516 ($generated@@395 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@145)) ($generated@@224 $generated@@521 ($generated@@135 $generated@@519 $generated@@520))) (and (= ($generated@@270 ($generated@@359 $generated@@136 $generated@@521)) $generated@@521) ($generated@@132 ($generated@@359 $generated@@136 $generated@@521) ($generated@@135 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@135 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@135 $generated@@526 $generated@@527)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@136) (= ($generated@@507 ($generated@@270 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@270 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) ($generated@@224 $generated@@529 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@359 $generated@@2 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@224 $generated@@530 ($generated@@233 $generated@@531))) (and (= ($generated@@270 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@530) ($generated@@233 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@233 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@238 $generated@@533))) (and (= ($generated@@270 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@532) ($generated@@238 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@238 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@150 $generated@@535))) (and (= ($generated@@270 ($generated@@359 ($generated@@76 $generated@@145 $generated@@2) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@359 ($generated@@76 $generated@@145 $generated@@2) $generated@@534) ($generated@@150 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@150 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@224 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@270 ($generated@@359 ($generated@@264 $generated@@145) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@359 ($generated@@264 $generated@@145) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@250 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@136) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@250 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@548) (and ($generated@@134 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@250 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@550) ($generated@@245 $generated@@551)) ($generated@@245 ($generated@@223 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@550) ($generated@@245 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@552))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@553)) ($generated@@245 ($generated@@270 $generated@@553)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@265 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@264 $generated@@555)) (= ($generated@@263 $generated@@554) 0)) (= $generated@@554 ($generated@@262 $generated@@555))))
 :pattern ( ($generated@@263 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@275 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@275 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@427)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@145)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@264 $generated@@145)) (= (type $generated@@571) $generated@@64)) (= ($generated@@132 $generated@@570 ($generated@@469 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@263 $generated@@570))) ($generated@@224 ($generated@@470 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@470 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@132 $generated@@570 ($generated@@469 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@263 $generated@@574))) (< ($generated@@508 ($generated@@359 $generated@@136 ($generated@@470 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@508 ($generated@@359 $generated@@136 ($generated@@470 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@132 $generated@@576 ($generated@@387 $generated@@577 $generated@@578))) (and (and ($generated@@132 ($generated@@281 $generated@@576) ($generated@@233 $generated@@577)) ($generated@@132 ($generated@@324 $generated@@576) ($generated@@233 $generated@@578))) ($generated@@132 ($generated@@358 $generated@@576) ($generated@@233 ($generated@@135 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@387 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@132 $generated@@579 ($generated@@395 $generated@@580 $generated@@581))) (and (and ($generated@@132 ($generated@@299 $generated@@579) ($generated@@238 $generated@@580)) ($generated@@132 ($generated@@335 $generated@@579) ($generated@@238 $generated@@581))) ($generated@@132 ($generated@@369 $generated@@579) ($generated@@238 ($generated@@135 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@395 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@132 $generated@@582 $generated@@46))
 :pattern ( ($generated@@132 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@132 $generated@@583 $generated@@47))
 :pattern ( ($generated@@132 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@132 $generated@@584 $generated@@44))
 :pattern ( ($generated@@132 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@427) ($generated@@132 $generated@@585 $generated@@45))
 :pattern ( ($generated@@132 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@145) ($generated@@132 $generated@@586 $generated@@48))
 :pattern ( ($generated@@132 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@587) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@588) $generated@@77)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@590) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@592 true))
(let (($generated@@593  (=> (= (ControlFlow 0 6) (- 0 5)) (<= ($generated@@243 6) ($generated@@243 10)))))
(let (($generated@@594  (=> (= (ControlFlow 0 4) (- 0 3)) (<= ($generated@@243 2) ($generated@@243 6)))))
(let (($generated@@595 true))
(let (($generated@@596  (=> (= $generated@@587 ($generated@@211 $generated@@588 $generated@@589 $generated@@60 false)) (and (and (and (=> (= (ControlFlow 0 8) 2) $generated@@595) (=> (= (ControlFlow 0 8) 4) $generated@@594)) (=> (= (ControlFlow 0 8) 6) $generated@@593)) (=> (= (ControlFlow 0 8) 7) $generated@@592)))))
(let (($generated@@597 true))
(let (($generated@@598  (=> (= $generated@@590 ($generated@@156 $generated@@588 $generated@@589 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@597) (=> (= (ControlFlow 0 9) 8) $generated@@596)))))
(let (($generated@@599  (=> (and (and ($generated@@249 $generated@@589) ($generated@@591 $generated@@589)) (and (= 0 $generated@@345) (= (ControlFlow 0 10) 9))) $generated@@598)))
$generated@@599)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Bool)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () Int)
(assert  (and (and (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@189) $generated@@46)) (= (type $generated@@190) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@199  (=> (= (ControlFlow 0 12) (- 0 11)) ($generated@@0 ($generated@@164 ($generated@@11 false))))))
(let (($generated@@200  (=> (and (= $generated@@181 $generated@@182) (= (ControlFlow 0 13) 12)) $generated@@199)))
(let (($generated@@201  (=> (= (ControlFlow 0 9) (- 0 8)) (=> false (<= $generated@@183 ($generated@@162 100))))))
(let (($generated@@202  (=> (and (not (= $generated@@181 $generated@@182)) (= (ControlFlow 0 10) 9)) $generated@@201)))
(let (($generated@@203  (and (=> (= (ControlFlow 0 14) 13) $generated@@200) (=> (= (ControlFlow 0 14) 10) $generated@@202))))
(let (($generated@@204  (=> $generated@@184 (and (=> (= (ControlFlow 0 15) 14) $generated@@203) (=> (= (ControlFlow 0 15) 9) $generated@@201)))))
(let (($generated@@205 true))
(let (($generated@@206  (and (=> (= (ControlFlow 0 16) 7) $generated@@205) (=> (= (ControlFlow 0 16) 15) $generated@@204))))
(let (($generated@@207 true))
(let (($generated@@208  (=> (and (and (and (and (not false) $generated@@185) (= $generated@@186 0)) (= $generated@@182 100)) (and (and (and (<= $generated@@186 $generated@@181) (<= $generated@@181 $generated@@182)) (=> $generated@@184 true)) (and (and (=> $generated@@184 (<= $generated@@187 ($generated@@162 100))) (forall (($generated@@209 T@U) ) (!  (=> (= (type $generated@@209) $generated@@46) (=> (and (not (= $generated@@209 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@209) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@209) ($generated@@49 $generated@@188 $generated@@209))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@209))
))) (and ($generated@@44 $generated@@188 $generated@@188) (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@55 (type $generated@@211))))
 (=> (and (and (= (type $generated@@210) $generated@@46) (= (type $generated@@211) ($generated@@54 $generated@@212))) (and (not (= $generated@@210 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@210) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@188 $generated@@210) $generated@@211) ($generated@@48 ($generated@@49 $generated@@188 $generated@@210) $generated@@211)) ($generated@@0 ($generated@@106 $generated@@190 $generated@@210 $generated@@211)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@188 $generated@@210) $generated@@211))
)))))) (and (=> (= (ControlFlow 0 17) 6) $generated@@207) (=> (= (ControlFlow 0 17) 16) $generated@@206)))))
(let (($generated@@213  (=> (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (=> (and (= $generated@@186 ($generated@@162 0)) (= $generated@@182 ($generated@@162 100))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (<= $generated@@186 $generated@@182)) (=> (<= $generated@@186 $generated@@182) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@191 (<= $generated@@192 ($generated@@162 100)))) (=> (=> $generated@@191 (<= $generated@@192 ($generated@@162 100))) (=> (= (ControlFlow 0 18) 17) $generated@@208)))))))))
(let (($generated@@214  (=> (= (ControlFlow 0 4) (- 0 3)) (=> false (<= $generated@@193 ($generated@@162 100))))))
(let (($generated@@215  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= (ControlFlow 0 5) 4)) $generated@@214)))
(let (($generated@@216  (and (=> (= (ControlFlow 0 21) 18) $generated@@213) (=> (= (ControlFlow 0 21) 5) $generated@@215))))
(let (($generated@@217  (=> $generated@@185 (and (=> (= (ControlFlow 0 22) 21) $generated@@216) (=> (= (ControlFlow 0 22) 4) $generated@@214)))))
(let (($generated@@218 true))
(let (($generated@@219  (and (=> (= (ControlFlow 0 23) 2) $generated@@218) (=> (= (ControlFlow 0 23) 22) $generated@@217))))
(let (($generated@@220 true))
(let (($generated@@221  (=> (and (not false) (=> $generated@@185 true)) (=> (and (and (=> $generated@@185 (<= $generated@@192 ($generated@@162 100))) (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@46) (=> (and (not (= $generated@@222 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@222) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@222) ($generated@@49 $generated@@188 $generated@@222))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@222))
))) (and ($generated@@44 $generated@@188 $generated@@188) (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@55 (type $generated@@224))))
 (=> (and (and (= (type $generated@@223) $generated@@46) (= (type $generated@@224) ($generated@@54 $generated@@225))) (and (not (= $generated@@223 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@223) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@188 $generated@@223) $generated@@224) ($generated@@48 ($generated@@49 $generated@@188 $generated@@223) $generated@@224)) ($generated@@0 ($generated@@106 $generated@@190 $generated@@223 $generated@@224)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@188 $generated@@223) $generated@@224))
)))) (and (=> (= (ControlFlow 0 24) 1) $generated@@220) (=> (= (ControlFlow 0 24) 23) $generated@@219))))))
(let (($generated@@226  (=> (= $generated@@190 ($generated@@107 $generated@@189 $generated@@188 $generated@@50 false)) (and (=> (= (ControlFlow 0 25) (- 0 26)) (=> $generated@@194 (<= $generated@@195 ($generated@@162 100)))) (=> (=> $generated@@194 (<= $generated@@195 ($generated@@162 100))) (=> (= (ControlFlow 0 25) 24) $generated@@221))))))
(let (($generated@@227  (=> (and (and (and ($generated@@196 $generated@@188) ($generated@@197 $generated@@188)) (= 0 $generated@@198)) (and (<= $generated@@195 ($generated@@162 100)) (= (ControlFlow 0 27) 25))) $generated@@226)))
$generated@@227))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@T T@U) T@U)
(declare-fun $generated@@180 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert ($generated@@168 $generated@@50))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@171) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@169 $generated@@170 $generated@@171)) (and ($generated@@44 $generated@@170 $generated@@171) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@55 (type $generated@@173))))
 (=> (and (and (= (type $generated@@172) $generated@@46) (= (type $generated@@173) ($generated@@54 $generated@@174))) (not ($generated@@168 $generated@@173))) (= ($generated@@48 ($generated@@49 $generated@@170 $generated@@172) $generated@@173) ($generated@@48 ($generated@@49 $generated@@171 $generated@@172) $generated@@173))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@171 $generated@@172) $generated@@173))
))))
 :pattern ( ($generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@175) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@176) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@177) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@175 $generated@@177))) (and ($generated@@44 $generated@@175 $generated@@176) ($generated@@44 $generated@@176 $generated@@177))) ($generated@@44 $generated@@175 $generated@@177))
 :pattern ( ($generated@@44 $generated@@175 $generated@@176) ($generated@@44 $generated@@176 $generated@@177))
)))
(assert  (and (and (= ($generated@@1 $generated@@180) 11) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@178 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@U) ) (! (= (type ($generated@@179 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@179 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(= ($generated@@179 $generated@@185 ($generated@@178 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@178 $generated@@184))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@178 ($generated@@8 ($generated@@162 $generated@@186))) ($generated@@164 ($generated@@178 ($generated@@8 $generated@@186))))
 :pattern ( ($generated@@178 ($generated@@8 ($generated@@162 $generated@@186))))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@178 ($generated@@164 $generated@@187)) ($generated@@164 ($generated@@178 $generated@@187)))
 :pattern ( ($generated@@178 ($generated@@164 $generated@@187)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Bool)
(declare-fun $generated@@193 () Bool)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Bool)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Bool)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@205 () Int)
(assert  (and (and (= (type $generated@@196) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@197) $generated@@46)) (= (type $generated@@198) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let (($generated@@206  (=> (= (ControlFlow 0 12) (- 0 11)) (=> false (<= $generated@@188 ($generated@@162 100))))))
(let (($generated@@207  (=> (and (not (= $generated@@189 $generated@@190)) (= (ControlFlow 0 14) 12)) $generated@@206)))
(let (($generated@@208 true))
(let (($generated@@209 true))
(let (($generated@@210  (=> (= (ControlFlow 0 7) (- 0 6)) (=> false (<= $generated@@191 ($generated@@162 100))))))
(let (($generated@@211  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= (ControlFlow 0 8) 7)) $generated@@210)))
(let (($generated@@212 true))
(let (($generated@@213 true))
(let (($generated@@214  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@164 ($generated@@11 false))))))
(let (($generated@@215  (=> (and (= $generated@@189 $generated@@190) (= (ControlFlow 0 13) 2)) $generated@@214)))
(let (($generated@@216  (and (=> (= (ControlFlow 0 15) 13) $generated@@215) (=> (= (ControlFlow 0 15) 14) $generated@@207))))
(let (($generated@@217  (=> $generated@@192 (and (=> (= (ControlFlow 0 16) 15) $generated@@216) (=> (= (ControlFlow 0 16) 12) $generated@@206)))))
(let (($generated@@218  (and (=> (= (ControlFlow 0 17) 10) $generated@@208) (=> (= (ControlFlow 0 17) 16) $generated@@217))))
(let (($generated@@219  (=> (and (and (and (and (not false) $generated@@193) (= $generated@@194 0)) (= $generated@@190 100)) (and (and (and (<= $generated@@194 $generated@@189) (<= $generated@@189 $generated@@190)) (=> $generated@@192 true)) (and (and (=> $generated@@192 (<= $generated@@195 ($generated@@162 100))) (forall (($generated@@220 T@U) ) (!  (=> (= (type $generated@@220) $generated@@46) (=> (and (not (= $generated@@220 $generated@@197)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@220) $generated@@50))) (= ($generated@@49 $generated@@196 $generated@@220) ($generated@@49 $generated@@196 $generated@@220))))
 :pattern ( ($generated@@49 $generated@@196 $generated@@220))
))) (and ($generated@@169 $generated@@196 $generated@@196) (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@55 (type $generated@@222))))
 (=> (and (and (= (type $generated@@221) $generated@@46) (= (type $generated@@222) ($generated@@54 $generated@@223))) (and (not (= $generated@@221 $generated@@197)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@221) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@196 $generated@@221) $generated@@222) ($generated@@48 ($generated@@49 $generated@@196 $generated@@221) $generated@@222)) ($generated@@0 ($generated@@106 $generated@@198 $generated@@221 $generated@@222)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@196 $generated@@221) $generated@@222))
)))))) (and (=> (= (ControlFlow 0 18) 9) $generated@@209) (=> (= (ControlFlow 0 18) 17) $generated@@218)))))
(let (($generated@@224  (=> (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (=> (and (= $generated@@194 ($generated@@162 0)) (= $generated@@190 ($generated@@162 100))) (and (=> (= (ControlFlow 0 19) (- 0 21)) (<= $generated@@194 $generated@@190)) (=> (<= $generated@@194 $generated@@190) (and (=> (= (ControlFlow 0 19) (- 0 20)) (=> $generated@@199 (<= $generated@@200 ($generated@@162 100)))) (=> (=> $generated@@199 (<= $generated@@200 ($generated@@162 100))) (=> (= (ControlFlow 0 19) 18) $generated@@219)))))))))
(let (($generated@@225  (and (=> (= (ControlFlow 0 22) 19) $generated@@224) (=> (= (ControlFlow 0 22) 8) $generated@@211))))
(let (($generated@@226  (=> $generated@@193 (and (=> (= (ControlFlow 0 23) 22) $generated@@225) (=> (= (ControlFlow 0 23) 7) $generated@@210)))))
(let (($generated@@227  (and (=> (= (ControlFlow 0 24) 5) $generated@@212) (=> (= (ControlFlow 0 24) 23) $generated@@226))))
(let (($generated@@228  (=> (and (not false) (=> $generated@@193 true)) (=> (and (and (=> $generated@@193 (<= $generated@@200 ($generated@@162 100))) (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@46) (=> (and (not (= $generated@@229 $generated@@197)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@229) $generated@@50))) (= ($generated@@49 $generated@@196 $generated@@229) ($generated@@49 $generated@@196 $generated@@229))))
 :pattern ( ($generated@@49 $generated@@196 $generated@@229))
))) (and ($generated@@169 $generated@@196 $generated@@196) (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@55 (type $generated@@231))))
 (=> (and (and (= (type $generated@@230) $generated@@46) (= (type $generated@@231) ($generated@@54 $generated@@232))) (and (not (= $generated@@230 $generated@@197)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@230) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@196 $generated@@230) $generated@@231) ($generated@@48 ($generated@@49 $generated@@196 $generated@@230) $generated@@231)) ($generated@@0 ($generated@@106 $generated@@198 $generated@@230 $generated@@231)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@196 $generated@@230) $generated@@231))
)))) (and (=> (= (ControlFlow 0 25) 4) $generated@@213) (=> (= (ControlFlow 0 25) 24) $generated@@227))))))
(let (($generated@@233  (=> (= $generated@@201 $generated@@201) (and (=> (= (ControlFlow 0 26) (- 0 27)) (=> $generated@@202 (<= $generated@@201 ($generated@@162 100)))) (=> (=> $generated@@202 (<= $generated@@201 ($generated@@162 100))) (=> (= (ControlFlow 0 26) 25) $generated@@228))))))
(let (($generated@@234  (=> (and (not (= $generated@@201 $generated@@201)) (= (ControlFlow 0 3) 2)) $generated@@214)))
(let (($generated@@235  (=> (= $generated@@198 ($generated@@107 $generated@@197 $generated@@196 $generated@@50 false)) (and (=> (= (ControlFlow 0 28) 26) $generated@@233) (=> (= (ControlFlow 0 28) 3) $generated@@234)))))
(let (($generated@@236  (=> (and (and (and ($generated@@203 $generated@@196) ($generated@@204 $generated@@196)) (= 0 $generated@@205)) (and (<= $generated@@201 ($generated@@162 100)) (= (ControlFlow 0 29) 28))) $generated@@235)))
$generated@@236))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
